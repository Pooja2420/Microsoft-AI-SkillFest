Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Azure Container Registry roles and permissions
Article
2024-09-19
8 contributors
In this article
The Azure Container Registry service supports a set ofbuilt-in Azure rolesthat provide different levels of permissions to an Azure container registry. UseAzure role-based access control (Azure RBAC)to assign specific permissions to users, service principals, or other identities that need to interact with a registry, for example to pull or push container images. You can also definecustom roleswith fine-grained permissions to a registry for different operations.
Assign roles
SeeSteps to add a role assignmentfor high-level steps to add a role assignment to an existing user, group, service principal, or managed identity. You can use the Azure portal, Azure CLI, Azure PowerShell, or other Azure tools.
When creating a service principal, you also configure its access and permissions to Azure resources such as a container registry. For an example script using the Azure CLI, seeAzure Container Registry authentication with service principals.
Differentiate users and services
Any time permissions are applied, a best practice is to provide the most limited set of permissions for a person, or service, to accomplish a task. The following permission sets represent a set of capabilities that may be used by humans and headless services.
CI/CD solutions
When automatingdocker buildcommands from CI/CD solutions, you needdocker pushcapabilities. For these headless service scenarios, we recommend assigning theAcrPushrole. This role, unlike the broaderContributorrole, prevents the account from performing other registry operations or accessing Azure Resource Manager.
docker build
docker push
Container host nodes
Likewise, nodes running your containers need theAcrPullrole, but shouldn't requireReadercapabilities.
Visual Studio Code Docker extension
For tools like the Visual Studio CodeDocker extension, additional resource provider access is required to list the available Azure container registries. In this case, provide your users access to theReaderorContributorrole. These roles allowdocker pull,docker push,az acr list,az acr build, and other capabilities.
docker pull
docker push
az acr list
az acr build
Access Resource Manager
Azure CLI
Azure PowerShell
Azure Resource Manager access is required for the Azure portal and registry management with theAzure CLI. For example, to get a list of registries by using theaz acr listcommand, you need this permission set.
az acr list
Azure Resource Manager access is required for the Azure portal and registry management withAzure PowerShell. For example, to get a list of registries by using theGet-AzContainerRegistrycmdlet, you need this permission set.
Get-AzContainerRegistry
Create and delete registry
The ability to create and delete Azure container registries.
Push image
The ability todocker pushan image, or push anothersupported artifactsuch as a Helm chart, to a registry. Requiresauthenticationwith the registry using the authorized identity.
docker push
Pull image
The ability todocker pulla non-quarantined image, or pull anothersupported artifactsuch as a Helm chart, from a registry. Requiresauthenticationwith the registry using the authorized identity.
docker pull
Delete image data
The ability todelete container images, or delete othersupported artifactssuch as Helm charts, from a registry.
Change policies
The ability to configure policies on a registry. Policies include image purging, enabling quarantine, and image signing.
Sign images
The ability to sign images, usually assigned to an automated process, which would use a service principal. This permission is typically combined withpush imageto allow pushing a trusted image to a registry. For details, seeContent trust in Azure Container Registry.
Custom roles
As with other Azure resources, you can createcustom roleswith fine-grained permissions to Azure Container Registry. Then assign the custom roles to users, service principals, or other identities that need to interact with a registry.
To determine which permissions to apply to a custom role, see the list of Microsoft.ContainerRegistryactions, review the permitted actions of thebuilt-in ACR roles, or run the following command:
Azure CLI
Azure PowerShell
az provider operation show --namespace Microsoft.ContainerRegistry
az provider operation show --namespace Microsoft.ContainerRegistry
To define a custom role, seeSteps to create a custom role.
Note
In tenants configured withAzure Resource Manager private link, Azure Container Registry supports wildcard actions such asMicrosoft.ContainerRegistry/*/readorMicrosoft.ContainerRegistry/registries/*/writein custom roles, granting access to all matching actions. In a tenant without an ARM private link, specify all required registry actions individually in a custom role.
Microsoft.ContainerRegistry/*/read
Microsoft.ContainerRegistry/registries/*/write
Get-AzProviderOperation -OperationSearchString Microsoft.ContainerRegistry/*
Get-AzProviderOperation -OperationSearchString Microsoft.ContainerRegistry/*
To define a custom role, seeSteps to create a custom role.
Note
In tenants configured withAzure Resource Manager private link, Azure Container Registry supports wildcard actions such asMicrosoft.ContainerRegistry/*/readorMicrosoft.ContainerRegistry/registries/*/writein custom roles, granting access to all matching actions. In a tenant without an ARM private link, specify all required registry actions individually in a custom role.
Microsoft.ContainerRegistry/*/read
Microsoft.ContainerRegistry/registries/*/write
Example: Custom role to import images
For example, the following JSON defines the minimum actions for a custom role that permitsimporting imagesto a registry.
{
   "assignableScopes": [
     "/subscriptions/<optional, but you can limit the visibility to one or more subscriptions>"
   ],
   "description": "Can import images to registry",
   "Name": "AcrImport",
   "permissions": [
     {
       "actions": [
         "Microsoft.ContainerRegistry/registries/push/write",
         "Microsoft.ContainerRegistry/registries/pull/read",
         "Microsoft.ContainerRegistry/registries/read",
         "Microsoft.ContainerRegistry/registries/importImage/action"
       ],
       "dataActions": [],
       "notActions": [],
       "notDataActions": []
     }
   ],
   "roleType": "CustomRole"
 }
{
   "assignableScopes": [
     "/subscriptions/<optional, but you can limit the visibility to one or more subscriptions>"
   ],
   "description": "Can import images to registry",
   "Name": "AcrImport",
   "permissions": [
     {
       "actions": [
         "Microsoft.ContainerRegistry/registries/push/write",
         "Microsoft.ContainerRegistry/registries/pull/read",
         "Microsoft.ContainerRegistry/registries/read",
         "Microsoft.ContainerRegistry/registries/importImage/action"
       ],
       "dataActions": [],
       "notActions": [],
       "notDataActions": []
     }
   ],
   "roleType": "CustomRole"
 }
To create or update a custom role using the JSON description, use theAzure CLI,Azure Resource Manager template,Azure PowerShell, or other Azure tools. Add or remove role assignments for a custom role in the same way that you manage role assignments for built-in Azure roles.
Next steps
Learn more about assigning Azure roles to an Azure identity by using theAzure portal, theAzure CLI,Azure PowerShell, or other Azure tools.
Learn more about assigning Azure roles to an Azure identity by using theAzure portal, theAzure CLI,Azure PowerShell, or other Azure tools.
Learn aboutauthentication optionsfor Azure Container Registry.
Learn aboutauthentication optionsfor Azure Container Registry.
Learn about enablingrepository-scoped permissionsin a container registry.
Learn about enablingrepository-scoped permissionsin a container registry.
Feedback
Was this page helpful?
Additional resources