Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Quickstart: Use the Azure portal query editor to query Azure SQL Database
Article
2025-01-16
12 contributors
In this article
Applies to:Azure SQL Database
In this quickstart, connect to an Azure SQL database in the Azure portal and use query editor to run Transact-SQL (T-SQL) queries. The Azure SQL Database query editor (preview) is a tool to run SQL queries against Azure SQL Database in the Azure portal.
If you don't already have an Azure SQL Database created, seeQuickstart: Create a single database. Look for the option to use your offer toDeploy Azure SQL Database for free.
Prerequisites
Authentication
You need an account with permissions to connect to the database and query editor. You can use SQL authentication or Microsoft Entra authentication (recommended). For more information on creating and managing logins in Azure SQL database, seeAuthorize database access.
Firewall rule
If you receive this error:Cannot open server 'server-name' requested by the login. Client with IP address 'xx.xx.xx.xx' is not allowed to access the server. To enable access, use the Azure Management Portal or run sp_set_firewall_rule on the master database to create a firewall rule for this IP address or address range. It may take up to five minutes for this change to take effect.
Follow these quick steps:
Return to theOverviewpage of your SQL database.
Select the link for the Azure SQL logical server next toServer name.
In the Resource menu, underSecurity, selectNetworking.
Ensure that underPublic network access, theSelected networksoption is selected.If this is a test or temporary environment, set the option toSelected networks.If not, access must be granted through other means than covered in this quickstart, likely viaprivate endpoints(by using Azure Private Link) as outlined in thenetwork access overview.
If this is a test or temporary environment, set the option toSelected networks.
If not, access must be granted through other means than covered in this quickstart, likely viaprivate endpoints(by using Azure Private Link) as outlined in thenetwork access overview.
UnderFirewall rules, selectAdd your client IPv4 address.If necessary, identify your IPv4 address and provide it in theStartandEndfields.
If necessary, identify your IPv4 address and provide it in theStartandEndfields.
SelectSave.
For more detail, seeadd your outbound IP address to the server's allowed firewall rules.
For troubleshooting, seeConnection error troubleshooting.
For more information about public network access, TLS version settings, and connection policy, seeAzure SQL connectivity settings.
Connect to the query editor
Connect to your database within the query editor.
Navigate to your SQL database in theAzure portal. For example, visityour Azure SQL dashboard.
Navigate to your SQL database in theAzure portal. For example, visityour Azure SQL dashboard.
On your SQL databaseOverviewpage, selectQuery editor (preview)from the resource menu.
On your SQL databaseOverviewpage, selectQuery editor (preview)from the resource menu.

On the sign-in screen, provide credentials to connect to the database.You can connect using SQL or Microsoft Entra authentication.To connect with SQL authentication, underSQL server authentication, enter aLoginandPasswordfor a user that has access to the database, and then selectOK. You can always use the login and password for the server admin.To connect using Microsoft Entra ID, if you're the Microsoft Entra server admin, selectContinue as <user@domain>. If sign-in is unsuccessful, try refreshing the page.
On the sign-in screen, provide credentials to connect to the database.
You can connect using SQL or Microsoft Entra authentication.To connect with SQL authentication, underSQL server authentication, enter aLoginandPasswordfor a user that has access to the database, and then selectOK. You can always use the login and password for the server admin.To connect using Microsoft Entra ID, if you're the Microsoft Entra server admin, selectContinue as <user@domain>. If sign-in is unsuccessful, try refreshing the page.
You can connect using SQL or Microsoft Entra authentication.
To connect with SQL authentication, underSQL server authentication, enter aLoginandPasswordfor a user that has access to the database, and then selectOK. You can always use the login and password for the server admin.
To connect with SQL authentication, underSQL server authentication, enter aLoginandPasswordfor a user that has access to the database, and then selectOK. You can always use the login and password for the server admin.
To connect using Microsoft Entra ID, if you're the Microsoft Entra server admin, selectContinue as <user@domain>. If sign-in is unsuccessful, try refreshing the page.
To connect using Microsoft Entra ID, if you're the Microsoft Entra server admin, selectContinue as <user@domain>. If sign-in is unsuccessful, try refreshing the page.

Connection with other tools
You can also connect to your Azure SQL database using other tools, including:
Quickstart: Use Azure Data Studio to connect and query Azure SQL Database
Quickstart: Use SSMS to connect to and query Azure SQL Database or Azure SQL Managed Instance
Quickstart: Use Visual Studio Code to connect and query
Query the database
On any database, execute the following query in the Query editor to return the time in UTC, the database name, and your authenticated login name.
SELECT SYSDATETIMEOFFSET(), DB_NAME(), ORIGINAL_LOGIN();
SELECT SYSDATETIMEOFFSET(), DB_NAME(), ORIGINAL_LOGIN();
Query the AdventureWorksLT sample database
This portion of quickstart uses theAdventureWorksLTsample database in an Azure SQL database. If you don't have one already, you cancreate a database using sample data in Azure SQL Database. Look for the option to use your offer toDeploy Azure SQL Database for free.
AdventureWorksLT
On theQuery editor (preview)page, run the following example queries against yourAdventureWorksLTsample database.
AdventureWorksLT
Tip
New to Azure SQL Database? Get up to speed with in-depth free training content:Azure SQL Fundamentalsor review theAzure SQL glossary of terms.
For more information about T-SQL in Azure SQL Database, visitT-SQL differences between SQL Server and Azure SQL Database.
To query for the top 20 products in the database, paste the followingSELECTquery into the query editor:SELECT TOP 20 pc.Name as CategoryName, p.name as ProductName
 FROM SalesLT.ProductCategory pc
 JOIN SalesLT.Product p
 ON pc.productcategoryid = p.productcategoryid;
To query for the top 20 products in the database, paste the followingSELECTquery into the query editor:
SELECT TOP 20 pc.Name as CategoryName, p.name as ProductName
 FROM SalesLT.ProductCategory pc
 JOIN SalesLT.Product p
 ON pc.productcategoryid = p.productcategoryid;
SELECT TOP 20 pc.Name as CategoryName, p.name as ProductName
 FROM SalesLT.ProductCategory pc
 JOIN SalesLT.Product p
 ON pc.productcategoryid = p.productcategoryid;
SelectRun, and then review the output in theResultspane.
SelectRun, and then review the output in theResultspane.

Optionally, you can selectSave queryto save the query as an.sqlfile, or selectExport data asto export the results as a.json,.csv, or.xmlfile.
Optionally, you can selectSave queryto save the query as an.sqlfile, or selectExport data asto export the results as a.json,.csv, or.xmlfile.
To add a new product to theSalesLT.Producttable, run the followingINSERTT-SQL statement.
SalesLT.Product
In the query editor, replace the previous query with the following query:INSERT INTO [SalesLT].[Product]
       ( [Name]
       , [ProductNumber]
       , [Color]
       , [ProductCategoryID]
       , [StandardCost]
       , [ListPrice]
       , [SellStartDate]
       )
VALUES
       ('myNewProduct'
       ,123456789
       ,'NewColor'
       ,1
       ,100
       ,100
       ,GETDATE() );
In the query editor, replace the previous query with the following query:
INSERT INTO [SalesLT].[Product]
       ( [Name]
       , [ProductNumber]
       , [Color]
       , [ProductCategoryID]
       , [StandardCost]
       , [ListPrice]
       , [SellStartDate]
       )
VALUES
       ('myNewProduct'
       ,123456789
       ,'NewColor'
       ,1
       ,100
       ,100
       ,GETDATE() );
INSERT INTO [SalesLT].[Product]
       ( [Name]
       , [ProductNumber]
       , [Color]
       , [ProductCategoryID]
       , [StandardCost]
       , [ListPrice]
       , [SellStartDate]
       )
VALUES
       ('myNewProduct'
       ,123456789
       ,'NewColor'
       ,1
       ,100
       ,100
       ,GETDATE() );
SelectRunto add the new product. After the query runs, theMessagespane displaysQuery succeeded: Affected rows: 1.
SelectRunto add the new product. After the query runs, theMessagespane displaysQuery succeeded: Affected rows: 1.
Run the followingUPDATET-SQL statement to update the price of your new product.
In the query editor, replace the previous query with the following query:UPDATE [SalesLT].[Product]
SET [ListPrice] = 125
WHERE Name = 'myNewProduct';
In the query editor, replace the previous query with the following query:
UPDATE [SalesLT].[Product]
SET [ListPrice] = 125
WHERE Name = 'myNewProduct';
UPDATE [SalesLT].[Product]
SET [ListPrice] = 125
WHERE Name = 'myNewProduct';
SelectRunto update the specified row in theProducttable. TheMessagespane displaysQuery succeeded: Affected rows: 1.
SelectRunto update the specified row in theProducttable. TheMessagespane displaysQuery succeeded: Affected rows: 1.
Product
Run the followingDELETET-SQL statement to remove your new product.
In the query editor, replace the previous query with the following query:DELETE FROM [SalesLT].[Product]
WHERE Name = 'myNewProduct';
In the query editor, replace the previous query with the following query:
DELETE FROM [SalesLT].[Product]
WHERE Name = 'myNewProduct';
DELETE FROM [SalesLT].[Product]
WHERE Name = 'myNewProduct';
SelectRunto delete the specified row in theProducttable. TheMessagespane displaysQuery succeeded: Affected rows: 1.
SelectRunto delete the specified row in theProducttable. TheMessagespane displaysQuery succeeded: Affected rows: 1.
Product
Related content
Query editor (preview)
Quickstart: Create a single database
Azure SQL connectivity settings
Feedback
Was this page helpful?
Additional resources