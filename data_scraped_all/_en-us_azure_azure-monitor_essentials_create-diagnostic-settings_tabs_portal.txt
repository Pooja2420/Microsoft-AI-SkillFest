Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Create diagnostic settings in Azure Monitor
Article
2025-04-17
2 contributors
In this article
Create and edit diagnostic settings in Azure Monitor to send Azure platform metrics and logs to different destinations like Azure Monitor Logs, Azure Storage, or Azure Event Hubs. You can use different methods to work with the diagnostic settings, such as the Azure portal, the Azure CLI, PowerShell, and Azure Resource Manager.
Important
The Retention Policy as set in the Diagnostic Setting settings is now deprecated and can no longer be used. Use the Azure Storage Lifecycle Policy to manage the length of time that your logs are retained. For more information, seeMigrate diagnostic settings storage retention to Azure Storage lifecycle management
Azure portal
PowerShell
CLI
Resource Manager
REST API
Azure Policy
You can configure diagnostic settings in the Azure portal either from the Azure Monitor menu or from the menu for the resource.
Where you configure diagnostic settings in the Azure portal depends on the resource:For a single resource, selectDiagnostic settingsunderMonitoringon the resource's menu.For one or more resources, selectDiagnostic settingsunderSettingson the Azure Monitor menu and then select the resource.For the activity log, selectActivity logon theAzure Monitormenu and then selectExport Activity Logs. Make sure you disable any legacy configuration for the activity log. For instructions, seeDisable existing settings.
Where you configure diagnostic settings in the Azure portal depends on the resource:
For a single resource, selectDiagnostic settingsunderMonitoringon the resource's menu.
For a single resource, selectDiagnostic settingsunderMonitoringon the resource's menu.

For one or more resources, selectDiagnostic settingsunderSettingson the Azure Monitor menu and then select the resource.
For one or more resources, selectDiagnostic settingsunderSettingson the Azure Monitor menu and then select the resource.

For the activity log, selectActivity logon theAzure Monitormenu and then selectExport Activity Logs. Make sure you disable any legacy configuration for the activity log. For instructions, seeDisable existing settings.
For the activity log, selectActivity logon theAzure Monitormenu and then selectExport Activity Logs. Make sure you disable any legacy configuration for the activity log. For instructions, seeDisable existing settings.

If no settings exist on the resource you select, you're prompted to create a setting. SelectAdd diagnostic setting.If there are existing settings on the resource, you see a list of settings already configured. SelectAdd diagnostic settingto add a new setting. Or selectEdit settingto edit an existing one. Each setting can have no more than one of each of the destination types.
If no settings exist on the resource you select, you're prompted to create a setting. SelectAdd diagnostic setting.

If there are existing settings on the resource, you see a list of settings already configured. SelectAdd diagnostic settingto add a new setting. Or selectEdit settingto edit an existing one. Each setting can have no more than one of each of the destination types.

Give your setting a name if it doesn't already have one.
Give your setting a name if it doesn't already have one.

Logs and metrics to route: For logs, either choose a category group or select the individual checkboxes for each category of data you want to send to the destinations specified later. The list of categories varies for each Azure service. SelectAllMetricsif you want to store metrics in Azure Monitor Logs too.
Logs and metrics to route: For logs, either choose a category group or select the individual checkboxes for each category of data you want to send to the destinations specified later. The list of categories varies for each Azure service. SelectAllMetricsif you want to store metrics in Azure Monitor Logs too.
Destination details: Select the checkbox for each destination. Options appear so that you can add more information.Send to Log Analytics workspace: Select yourSubscriptionand theLog Analytics workspacewhere you want to send the data. If you don't have a workspace, you mustcreate one before you proceed.Archive to a storage account: Select yourSubscriptionand theStorage accountwhere you want to store the data.TipUse theAzure Storage Lifecycle Policyto manage the length of time that your logs are retained. The Retention Policy as set in the Diagnostic Setting settings is now deprecated.Stream to an event hub: Specify the following criteria:Subscription: The subscription that the event hub is part of.Event hub namespace: If you don't have one, you mustcreate one.Event hub name (optional): The name to send all data to. If you don't specify a name, an event hub is created for each log category. If you're sending to multiple categories, you might want to specify a name to limit the number of event hubs created. For more information, seeAzure Event Hubs quotas and limits.Event hub policy name(also optional): A policy defines the permissions that the streaming mechanism has. For more information, seeEvent Hubs features.Send to partner solution: You must first install Azure Native ISV Services into your subscription. Configuration options vary by partner. For more information, seeAzure Native ISV Services overview.
Destination details: Select the checkbox for each destination. Options appear so that you can add more information.

Send to Log Analytics workspace: Select yourSubscriptionand theLog Analytics workspacewhere you want to send the data. If you don't have a workspace, you mustcreate one before you proceed.
Send to Log Analytics workspace: Select yourSubscriptionand theLog Analytics workspacewhere you want to send the data. If you don't have a workspace, you mustcreate one before you proceed.
Archive to a storage account: Select yourSubscriptionand theStorage accountwhere you want to store the data.TipUse theAzure Storage Lifecycle Policyto manage the length of time that your logs are retained. The Retention Policy as set in the Diagnostic Setting settings is now deprecated.
Archive to a storage account: Select yourSubscriptionand theStorage accountwhere you want to store the data.

Tip
Use theAzure Storage Lifecycle Policyto manage the length of time that your logs are retained. The Retention Policy as set in the Diagnostic Setting settings is now deprecated.
Stream to an event hub: Specify the following criteria:Subscription: The subscription that the event hub is part of.Event hub namespace: If you don't have one, you mustcreate one.Event hub name (optional): The name to send all data to. If you don't specify a name, an event hub is created for each log category. If you're sending to multiple categories, you might want to specify a name to limit the number of event hubs created. For more information, seeAzure Event Hubs quotas and limits.Event hub policy name(also optional): A policy defines the permissions that the streaming mechanism has. For more information, seeEvent Hubs features.
Stream to an event hub: Specify the following criteria:
Subscription: The subscription that the event hub is part of.
Event hub namespace: If you don't have one, you mustcreate one.
Event hub name (optional): The name to send all data to. If you don't specify a name, an event hub is created for each log category. If you're sending to multiple categories, you might want to specify a name to limit the number of event hubs created. For more information, seeAzure Event Hubs quotas and limits.
Event hub policy name(also optional): A policy defines the permissions that the streaming mechanism has. For more information, seeEvent Hubs features.
Send to partner solution: You must first install Azure Native ISV Services into your subscription. Configuration options vary by partner. For more information, seeAzure Native ISV Services overview.
Send to partner solution: You must first install Azure Native ISV Services into your subscription. Configuration options vary by partner. For more information, seeAzure Native ISV Services overview.
If the service supports bothresource-specificandAzure diagnosticsmode, then an option to select thedestination tabledisplays when you selectLog Analytics workspaceas a destination. You should usually selectResource specificsince the table structure allows for more flexibility and more efficient queries.
If the service supports bothresource-specificandAzure diagnosticsmode, then an option to select thedestination tabledisplays when you selectLog Analytics workspaceas a destination. You should usually selectResource specificsince the table structure allows for more flexibility and more efficient queries.

SelectSave.
SelectSave.
After a few moments, the new setting appears in your list of settings for this resource. Logs are streamed to the specified destinations as new event data is generated. It might take up to 15 minutes between when an event is emitted and when itappears in a Log Analytics workspace.
Use theNew-AzDiagnosticSettingcmdlet to create a diagnostic setting withAzure PowerShell. See the documentation for this cmdlet for descriptions of its parameters.
Important
You can't use this method for an activity log. Instead, useCreate diagnostic setting in Azure Monitor by using an Azure Resource Manager templateto create a Resource Manager template and deploy it with PowerShell.
The following example PowerShell cmdlet creates a diagnostic setting for all logs, or for audit logs, and metrics for a key vault by using Log Analytics Workspace.
$KV = Get-AzKeyVault -ResourceGroupName <resource group name> -VaultName <key vault name>
$Law = Get-AzOperationalInsightsWorkspace -ResourceGroupName <resource group name> -Name <workspace name>  # LAW name is case sensitive

$metric = New-AzDiagnosticSettingMetricSettingsObject -Enabled $true -Category AllMetrics
# For all available logs, use:
$log = New-AzDiagnosticSettingLogSettingsObject -Enabled $true -CategoryGroup allLogs  
# or, for audit logs, use:
$log = New-AzDiagnosticSettingLogSettingsObject -Enabled $true -CategoryGroup audit    
New-AzDiagnosticSetting -Name 'KeyVault-Diagnostics' -ResourceId $KV.ResourceId -WorkspaceId $Law.ResourceId -Log $log -Metric $metric -Verbose
$KV = Get-AzKeyVault -ResourceGroupName <resource group name> -VaultName <key vault name>
$Law = Get-AzOperationalInsightsWorkspace -ResourceGroupName <resource group name> -Name <workspace name>  # LAW name is case sensitive

$metric = New-AzDiagnosticSettingMetricSettingsObject -Enabled $true -Category AllMetrics
# For all available logs, use:
$log = New-AzDiagnosticSettingLogSettingsObject -Enabled $true -CategoryGroup allLogs  
# or, for audit logs, use:
$log = New-AzDiagnosticSettingLogSettingsObject -Enabled $true -CategoryGroup audit    
New-AzDiagnosticSetting -Name 'KeyVault-Diagnostics' -ResourceId $KV.ResourceId -WorkspaceId $Law.ResourceId -Log $log -Metric $metric -Verbose
Use theaz monitor diagnostic-settings createcommand to create a diagnostic setting with theAzure CLI. See the documentation for this command for descriptions of its parameters.
Important
You can't use this method for an activity log. Instead, useCreate diagnostic setting in Azure Monitor by using a Resource Manager templateto create a Resource Manager template and deploy it with the Azure CLI.
The following example command creates a diagnostic setting by using all three destinations. The syntax is slightly different depending on your client.
To specifyresource-specific modeif the service supports it, add theexport-to-resource-specificparameter with a value oftrue.`
export-to-resource-specific
true
az monitor diagnostic-settings create  \
--name KeyVault-Diagnostics \
--resource /subscriptions/<subscription ID>/resourceGroups/<resource group name>/providers/Microsoft.KeyVault/vaults/mykeyvault \
--logs    '[{"category": "AuditEvent","enabled": true}]' \
--metrics '[{"category": "AllMetrics","enabled": true}]' \
--storage-account /subscriptions/<subscription ID>/resourceGroups/<resource group name>/providers/Microsoft.Storage/storageAccounts/<storage account name> \
--workspace /subscriptions/<subscription ID>/resourcegroups/<resource group name>/providers/microsoft.operationalinsights/workspaces/<log analytics workspace name> \
--event-hub-rule /subscriptions/<subscription ID>/resourceGroups/<resource group name>/providers/Microsoft.EventHub/namespaces/<event hub namespace>/authorizationrules/RootManageSharedAccessKey \
--event-hub <event hub name> \
--export-to-resource-specific true
az monitor diagnostic-settings create  \
--name KeyVault-Diagnostics \
--resource /subscriptions/<subscription ID>/resourceGroups/<resource group name>/providers/Microsoft.KeyVault/vaults/mykeyvault \
--logs    '[{"category": "AuditEvent","enabled": true}]' \
--metrics '[{"category": "AllMetrics","enabled": true}]' \
--storage-account /subscriptions/<subscription ID>/resourceGroups/<resource group name>/providers/Microsoft.Storage/storageAccounts/<storage account name> \
--workspace /subscriptions/<subscription ID>/resourcegroups/<resource group name>/providers/microsoft.operationalinsights/workspaces/<log analytics workspace name> \
--event-hub-rule /subscriptions/<subscription ID>/resourceGroups/<resource group name>/providers/Microsoft.EventHub/namespaces/<event hub namespace>/authorizationrules/RootManageSharedAccessKey \
--event-hub <event hub name> \
--export-to-resource-specific true
The following JSON template provides an example for creating a diagnostic setting to send all audit logs to a log analytics workspace. Keep in mind that theapiVersioncan change depending on the resource in the scope.
apiVersion
Template file
{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "scope": {
        "type": "string"
    },
    "workspaceId": {
        "type": "string"
    },
    "settingName": {
        "type": "string"
    }
},
  "resources": [
    {
      "type": "Microsoft.Insights/diagnosticSettings",
      "apiVersion": "2021-05-01-preview",
      "scope": "[parameters('scope')]",
      "name": "[parameters('settingName')]",
      "properties": {
       "workspaceId": "[parameters('workspaceId')]",
      "logs": [
             {
            "category": null,
            "categoryGroup": "audit",
            "enabled": true
          }
        ]
      }
    }
  ]
  }
{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "scope": {
        "type": "string"
    },
    "workspaceId": {
        "type": "string"
    },
    "settingName": {
        "type": "string"
    }
},
  "resources": [
    {
      "type": "Microsoft.Insights/diagnosticSettings",
      "apiVersion": "2021-05-01-preview",
      "scope": "[parameters('scope')]",
      "name": "[parameters('settingName')]",
      "properties": {
       "workspaceId": "[parameters('workspaceId')]",
      "logs": [
             {
            "category": null,
            "categoryGroup": "audit",
            "enabled": true
          }
        ]
      }
    }
  ]
  }
Parameter file
{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentParameters.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "settingName": {
        "value": "audit3"
    },
    "workspaceId": {
      "value": "/subscriptions/<subscription id>/resourcegroups/<resourcegroup name>/providers/microsoft.operationalinsights/workspaces/<workspace name>"
    },
    "scope": {
      "value": "Microsoft.<resource type>/<resourceName>"
    }
  }
}
{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentParameters.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "settingName": {
        "value": "audit3"
    },
    "workspaceId": {
      "value": "/subscriptions/<subscription id>/resourcegroups/<resourcegroup name>/providers/microsoft.operationalinsights/workspaces/<workspace name>"
    },
    "scope": {
      "value": "Microsoft.<resource type>/<resourceName>"
    }
  }
}
To create or update diagnostic settings by using theAzure Monitor REST API, seeDiagnostic settings.
For details on using Azure Policy to create diagnostic settings at scale, seeCreate diagnostic settings at scale by using Azure Policy.
Troubleshooting
Metric category isn't supported
When deploying a diagnostic setting, you receive an error message, similar toMetric category 'xxxx' is not supported. You may receive this error even though your previous deployment succeeded.
The problem occurs when using a Resource Manager template, REST API, Azure CLI, or Azure PowerShell. Diagnostic settings created via the Azure portal aren't affected as only the supported category names are presented.
Metric categories other thanAllMetricsaren't supported except for a limited number of Azure services. Previously other category names were ignored when deploying a diagnostic setting, redirecting them toAllMetrics. As of February 2021, the metric category provided is validated. This change caused some deployments to fail.
AllMetrics
AllMetrics
To fix this issue, update your deployments to remove any metric category names other thanAllMetrics. If the deployment adds multiple categories, use only oneAllMetricscategory. If you continue to have the problem, contact Azure support through the Azure portal.
AllMetrics
AllMetrics
Setting disappears due to non-ASCII characters in resourceID
Diagnostic settings don't support resourceIDs with non-ASCII characters (for example, PreproduccÃ³n). Since you can't rename resources in Azure, you must create a new resource without the non-ASCII characters. If the characters are in a resource group, you can move the resources to a new group.
Possibility of duplicated or dropped data
Every effort is made to ensure all log data is sent correctly to your destinations, however it's not possible to guarantee 100% data transfer of logs between endpoints. Retries and other mechanisms are in place to work around these issues and attempt to ensure log data arrives at the endpoint.
Inactive resources
When a resource is inactive and exporting zero-value metrics, the diagnostic settings export mechanism backs off incrementally to avoid unnecessary costs of exporting and storing zero values. The back-off may lead to a delay in the export of the next non-zero value.
When a resource is inactive for one hour, the export mechanism backs off to 15 minutes. This means that there is a potential latency of up to 15 minutes for the next nonzero value to be exported. The maximum backoff time of two hours is reached after seven days of inactivity. Once the resource starts exporting nonzero values, the export mechanism reverts to the original export latency of three minutes.
This behavior only applies to exported metrics and doesn't affect metrics-based alerts or autoscale.
Next steps
Review how to work with diagnostic settings in Azure Monitor
Migrate diagnostic settings storage retention to Azure Storage lifecycle management
Read more about Azure Monitor data sources and data collection methods
Feedback
Was this page helpful?
Additional resources