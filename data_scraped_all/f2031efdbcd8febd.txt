Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Tutorial: Sentiment analysis with Azure AI services
Article
2024-12-31
11 contributors
In this article
In this tutorial, you learn how to enrich your data in Azure Synapse Analytics withAzure AI services. You'll use theAzure AI Languagetext analytics capabilities to perform sentiment analysis.
A user in Azure Synapse can select a table that contains a text column to enrich with sentiments. These sentiments can be positive, negative, mixed, or neutral. A probability will also be returned.
This tutorial covers:
Steps for getting a Spark table dataset that contains a text column for sentiment analysis.
Using a wizard experience in Azure Synapse to enrich data by using Text Analytics in Azure AI Language.
If you don't have an Azure subscription,create a free account before you begin.
Prerequisites
Azure Synapse Analytics workspacewith an Azure Data Lake Storage Gen2 storage account configured as the default storage. You need to be theStorage Blob Data Contributorof the Data Lake Storage Gen2 file system that you work with.
Spark pool in your Azure Synapse Analytics workspace. For details, seeCreate a Spark pool in Azure Synapse.
Preconfiguration steps described in the tutorial:Configure Azure AI services in Azure Synapse.
Sign in to the Azure portal
Sign in to theAzure portal.
Create a Spark table
You'll need a Spark table for this tutorial.
Download theFabrikamComments.csvfile, which contains a dataset for text analytics.
Download theFabrikamComments.csvfile, which contains a dataset for text analytics.
In Synapse analytics, open your storage account underDataandLinked.
In Synapse analytics, open your storage account underDataandLinked.
Upload the file to your Azure Synapse storage account in Data Lake Storage Gen2.
Upload the file to your Azure Synapse storage account in Data Lake Storage Gen2.

Create a Spark table from the .csv file by right-clicking the file and selectingNew Notebook>Create Spark table.
Create a Spark table from the .csv file by right-clicking the file and selectingNew Notebook>Create Spark table.

Setheader=Trueand name the table in the code cell. Then run the notebook on a Spark pool.%%pyspark
df = spark.read.load('abfss://default@azuresynapsesa.dfs.core.windows.net/data/FabrikamComments.csv', format='csv'
## Ifâ¯a headerâ¯exists,â¯uncommentâ¯the lineâ¯below
, header=True
)
df.write.mode("overwrite").saveAsTable("default.YourTableName")
Setheader=Trueand name the table in the code cell. Then run the notebook on a Spark pool.
header=True

%%pyspark
df = spark.read.load('abfss://default@azuresynapsesa.dfs.core.windows.net/data/FabrikamComments.csv', format='csv'
## Ifâ¯a headerâ¯exists,â¯uncommentâ¯the lineâ¯below
, header=True
)
df.write.mode("overwrite").saveAsTable("default.YourTableName")
%%pyspark
df = spark.read.load('abfss://default@azuresynapsesa.dfs.core.windows.net/data/FabrikamComments.csv', format='csv'
## Ifâ¯a headerâ¯exists,â¯uncommentâ¯the lineâ¯below
, header=True
)
df.write.mode("overwrite").saveAsTable("default.YourTableName")

Open the Azure AI services wizard
In theWorkspacetab on the data page, under your default lake table, right-click the Spark table created in the previous procedure.
In theWorkspacetab on the data page, under your default lake table, right-click the Spark table created in the previous procedure.
SelectMachine Learning>Predict with a modelto open the wizard.
SelectMachine Learning>Predict with a modelto open the wizard.

A configuration panel appears, and you're asked to select a pretrained model. SelectSentiment Analysis.
A configuration panel appears, and you're asked to select a pretrained model. SelectSentiment Analysis.

Configure sentiment analysis
Next, configure the sentiment analysis. Select the following details:
Azure Cognitive Services linked service: As part of the prerequisite steps, you created a linked service to yourAzure AI service. Select it here.
Language: SelectEnglishas the language of the text that you want to perform sentiment analysis on.
Text column: Selectcomment (string)as the text column in your dataset that you want to analyze to determine the sentiment.
When you're done, selectOpen notebook. This generates a notebook for you with PySpark code that performs the sentiment analysis with Azure AI services.

Run the notebook
The notebook that you just opened uses theSynapseML libraryto connect to Azure AI services. The Azure AI services linked service that you provided allow you to securely reference your Azure AI service from this experience without revealing any secrets.
You can now run all cells to enrich your data with sentiments. SelectRun all.
The sentiments are returned aspositive,negative,neutral, ormixed. You also get probabilities per sentiment.Learn more about sentiment analysis in Azure AI services.

Related content
Tutorial: Anomaly detection with Azure AI services
Tutorial: Machine learning model scoring in Azure Synapse dedicated SQL pools
Machine Learning capabilities in Azure Synapse Analytics
Feedback
Was this page helpful?
Additional resources