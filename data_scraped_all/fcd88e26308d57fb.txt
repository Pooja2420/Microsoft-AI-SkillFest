Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Forward Azure Automation diagnostic logs to Azure Monitor
Article
2024-09-09
21 contributors
In this article
Azure Automation can send runbook job status and job streams to your Log Analytics workspace. This process does not involve workspace linking and is completely independent and allows you to perform simple investigations. Job logs and job streams are visible in the Azure portal, or with PowerShell for individual jobs. With Azure Monitor logs for your Automation account, you can:
Get insights into the status of your Automation jobs.
Trigger an email or alert based on your runbook job status (for example, failed or suspended).
Write advanced queries across your job streams.
Correlate jobs across Automation accounts.
Use customized views and search queries to visualize your runbook results, runbook job status, and other related key indicators or metrics through anAzure dashboard.
Get the audit logs related to Automation accounts, runbooks, and other asset create, modify and delete operations.
Using Azure Monitor logs, you can consolidate logs from different resources in the same workspace where it can be analyzed withqueriesto quickly retrieve, consolidate, and analyze the collected data. You can create and test queries usingLog Analyticsin the Azure portal and then either directly analyze the data using these tools or save queries for use withvisualizationoralert rules.
Azure Monitor uses a version of theKusto query language (KQL)used by Azure Data Explorer that is suitable for simple log queries. It also includes advanced functionality such as aggregations, joins, and smart analytics. You can quickly learn the query language usingmultiple lessons.
Azure Automation diagnostic settings
You can forward the following platform logs and metric data using Automation diagnostic settings support:
Configure diagnostic settings in Azure portal
You can configure diagnostic settings in the Azure portal from the menu for the Automation account resource.
In the Automation account menu, underMonitoringselectDiagnostic settings.
In the Automation account menu, underMonitoringselectDiagnostic settings.

ClickAdd diagnostic setting.
ClickAdd diagnostic setting.

Enter a setting name in theDiagnostic setting nameif it doesn't already have one.You can also view all categories of Logs and metrics.Logs and metrics to route: For logs, choose a category group or select the individual checkboxes for each category of data you want to send to the destinations specified. ChooseAllMetricsif you want to store metrics into Azure Monitor logs.Destination details: Select the checkbox for each destination. As per the selection of each box, the options appear to allow you to add additional information.Log Analytics: Enter the Subscription ID and workspace name. If you don't have a workspace, you mustcreate one before proceeding.Event Hubs: Specify the following criteria:Subscription: The same subscription as that of the Event Hub.Event Hub namespace:Create Event Hubif you don't have one yet.Event Hub name (optional): If you don't specify a name, an event hub is created for each log category. If you are sending multiple categories, specify a name to limit the number of Event Hubs created. SeeAzure Event Hubs quotas and limitsfor details.Event Hub policy (optional): A policy defines the permissions that the streaming mechanism has. SeeEvent Hubs feature.Storage: Choose the subscription, storage account, and retention policy.Partner integration: You must first install a partner integration into your subscription. Configuration options will vary by partner. For more information, seeAzure Monitor integration.
Enter a setting name in theDiagnostic setting nameif it doesn't already have one.
You can also view all categories of Logs and metrics.

Logs and metrics to route: For logs, choose a category group or select the individual checkboxes for each category of data you want to send to the destinations specified. ChooseAllMetricsif you want to store metrics into Azure Monitor logs.
Logs and metrics to route: For logs, choose a category group or select the individual checkboxes for each category of data you want to send to the destinations specified. ChooseAllMetricsif you want to store metrics into Azure Monitor logs.
Destination details: Select the checkbox for each destination. As per the selection of each box, the options appear to allow you to add additional information.Log Analytics: Enter the Subscription ID and workspace name. If you don't have a workspace, you mustcreate one before proceeding.Event Hubs: Specify the following criteria:Subscription: The same subscription as that of the Event Hub.Event Hub namespace:Create Event Hubif you don't have one yet.Event Hub name (optional): If you don't specify a name, an event hub is created for each log category. If you are sending multiple categories, specify a name to limit the number of Event Hubs created. SeeAzure Event Hubs quotas and limitsfor details.Event Hub policy (optional): A policy defines the permissions that the streaming mechanism has. SeeEvent Hubs feature.Storage: Choose the subscription, storage account, and retention policy.Partner integration: You must first install a partner integration into your subscription. Configuration options will vary by partner. For more information, seeAzure Monitor integration.
Destination details: Select the checkbox for each destination. As per the selection of each box, the options appear to allow you to add additional information.

Log Analytics: Enter the Subscription ID and workspace name. If you don't have a workspace, you mustcreate one before proceeding.
Log Analytics: Enter the Subscription ID and workspace name. If you don't have a workspace, you mustcreate one before proceeding.
Event Hubs: Specify the following criteria:Subscription: The same subscription as that of the Event Hub.Event Hub namespace:Create Event Hubif you don't have one yet.Event Hub name (optional): If you don't specify a name, an event hub is created for each log category. If you are sending multiple categories, specify a name to limit the number of Event Hubs created. SeeAzure Event Hubs quotas and limitsfor details.Event Hub policy (optional): A policy defines the permissions that the streaming mechanism has. SeeEvent Hubs feature.
Event Hubs: Specify the following criteria:
Subscription: The same subscription as that of the Event Hub.
Event Hub namespace:Create Event Hubif you don't have one yet.
Event Hub name (optional): If you don't specify a name, an event hub is created for each log category. If you are sending multiple categories, specify a name to limit the number of Event Hubs created. SeeAzure Event Hubs quotas and limitsfor details.
Event Hub policy (optional): A policy defines the permissions that the streaming mechanism has. SeeEvent Hubs feature.
Storage: Choose the subscription, storage account, and retention policy.
Storage: Choose the subscription, storage account, and retention policy.
Partner integration: You must first install a partner integration into your subscription. Configuration options will vary by partner. For more information, seeAzure Monitor integration.
Partner integration: You must first install a partner integration into your subscription. Configuration options will vary by partner. For more information, seeAzure Monitor integration.
ClickSave.
ClickSave.
After a few moments, the new setting appears in your list of settings for this resource, and logs are streamed to the specified destinations as new event data is generated. There can be 15 minutes time difference between the event emitted and its appearance inLog Analytics workspace.
Query the logs
To query the generated logs:
In your Automation account, underMonitoring, selectLogs.
In your Automation account, underMonitoring, selectLogs.
UnderAll Queries, selectAutomation Jobs.
UnderAll Queries, selectAutomation Jobs.

Select one of the queries you want to execute and clickRun.
Select one of the queries you want to execute and clickRun.
To execute a custom query, close theQuerieswindow and paste your custom query in the new query window and clickRun.The output of the query is displayed inResultspane.
To execute a custom query, close theQuerieswindow and paste your custom query in the new query window and clickRun.
The output of the query is displayed inResultspane.
ClickNew alert ruleto configure an Azure Monitor alert for this query.
ClickNew alert ruleto configure an Azure Monitor alert for this query.

Azure Monitor log records
Azure Automation diagnostics create the following types of records in Azure Monitor logs, tagged asAzureDiagnostics. The tables in the below sections are examples of records that Azure Automation generates and the data types that appear in log search results.
AzureDiagnostics
Job logs
Job streams
Note
Ensure credentials are not sent to Job streams. Service removes credentials before displaying Job streams in diagnostic logs.
Audit events
View Automation logs in Azure Monitor logs
Now that you started sending your Automation job streams and logs to Azure Monitor logs, let's see what you can do with these logs inside Azure Monitor logs.
To see the logs, run the following query:kusto AzureDiagnostics | where ResourceProvider == "MICROSOFT.AUTOMATION"
kusto AzureDiagnostics | where ResourceProvider == "MICROSOFT.AUTOMATION"
Sample queries for job logs and job streams
Find all jobs that are completed with error
In addition to scenarios like alerting on failures, you can find when a runbook job has a non-terminating error. In these cases, PowerShell produces an error stream, but the non-terminating errors don't cause your job to suspend or fail.
In your Log Analytics workspace, clickâ¯Logs.
In the query field, type:AzureDiagnostics | where ResourceProvider == "MICROSOFT.AUTOMATION" and Category == "JobStreams" and StreamType_s == "Error" | summarize AggregatedValue = count () by JobId_g.
AzureDiagnostics | where ResourceProvider == "MICROSOFT.AUTOMATION" and Category == "JobStreams" and StreamType_s == "Error" | summarize AggregatedValue = count () by JobId_g.
AzureDiagnostics | where ResourceProvider == "MICROSOFT.AUTOMATION" and Category == "JobStreams" and StreamType_s == "Error" | summarize AggregatedValue = count () by JobId_g.
ClickSearch.
View job streams for a job
When you're debugging a job, you might also want to look into the job streams. The following query shows all the streams for a single job with GUID2ebd22ea-e05e-4eb9-9d76-d73cbd4356e0:
2ebd22ea-e05e-4eb9-9d76-d73cbd4356e0
AzureDiagnostics
| where ResourceProvider == "MICROSOFT.AUTOMATION" and Category == "JobStreams" and JobId_g == "2ebd22ea-e05e-4eb9-9d76-d73cbd4356e0"
| sort by TimeGenerated asc
| project ResultDescription
AzureDiagnostics
| where ResourceProvider == "MICROSOFT.AUTOMATION" and Category == "JobStreams" and JobId_g == "2ebd22ea-e05e-4eb9-9d76-d73cbd4356e0"
| sort by TimeGenerated asc
| project ResultDescription
View historical job status
Finally, you might want to visualize your job history over time. You can use this query to search for the status of your jobs over time.
AzureDiagnostics
| where ResourceProvider == "MICROSOFT.AUTOMATION" and Category == "JobLogs" and ResultType != "started"
| summarize AggregatedValue = count() by ResultType, bin(TimeGenerated, 1h)
AzureDiagnostics
| where ResourceProvider == "MICROSOFT.AUTOMATION" and Category == "JobLogs" and ResultType != "started"
| summarize AggregatedValue = count() by ResultType, bin(TimeGenerated, 1h)

Find logs reporting errors in the automation jobs.
AzureDiagnostics 
| where ResourceProvider == "MICROSOFT.AUTOMATION" 
| where StreamType_s == "Error" 
| project TimeGenerated, Category, JobId_g, OperationName, RunbookName_s, ResultDescription, _ResourceId
AzureDiagnostics 
| where ResourceProvider == "MICROSOFT.AUTOMATION" 
| where StreamType_s == "Error" 
| project TimeGenerated, Category, JobId_g, OperationName, RunbookName_s, ResultDescription, _ResourceId
Find Azure Automation jobs that are completed
AzureDiagnostics 
| where ResourceProvider == "MICROSOFT.AUTOMATION" and Category == "JobLogs" and ResultType == "Completed" 
| project TimeGenerated, RunbookName_s, ResultType, _ResourceId, JobId_g
AzureDiagnostics 
| where ResourceProvider == "MICROSOFT.AUTOMATION" and Category == "JobLogs" and ResultType == "Completed" 
| project TimeGenerated, RunbookName_s, ResultType, _ResourceId, JobId_g
Find Azure Automation jobs that are failed, suspended, or stopped
AzureDiagnostics 
| where ResourceProvider == "MICROSOFT.AUTOMATION" and Category == "JobLogs" and (ResultType == "Failed" or ResultType == "Stopped" or ResultType == "Suspended") 
| project TimeGenerated, RunbookName_s, ResultType, _ResourceId, JobId_g
AzureDiagnostics 
| where ResourceProvider == "MICROSOFT.AUTOMATION" and Category == "JobLogs" and (ResultType == "Failed" or ResultType == "Stopped" or ResultType == "Suspended") 
| project TimeGenerated, RunbookName_s, ResultType, _ResourceId, JobId_g
List all runbooks & jobs that completed successfully with errors
AzureDiagnostics 
| where ResourceProvider == "MICROSOFT.AUTOMATION" and Category == "JobStreams" and StreamType_s == "Error" 
| project TimeGenerated, RunbookName_s, StreamType_s, _ResourceId, ResultDescription, JobId_g
AzureDiagnostics 
| where ResourceProvider == "MICROSOFT.AUTOMATION" and Category == "JobStreams" and StreamType_s == "Error" 
| project TimeGenerated, RunbookName_s, StreamType_s, _ResourceId, ResultDescription, JobId_g
Send an email when a runbook job fails or suspends
The following steps explain how to set up email alerts in Azure Monitor to notify when something goes wrong with a runbook job.
To create an alert rule, create a log search for the runbook job records that should invoke the alert as described inQuery the logs. Click the+New alert ruleto configure the alert rule.
In your Automation account, underMonitoring, selectLogs.
In your Automation account, underMonitoring, selectLogs.
Create a log search query for your alert by entering a search criteria into the query field.AzureDiagnostics | where ResourceProvider == "MICROSOFT.AUTOMATION" and Category == "JobLogs" and (ResultType == "Failed" or ResultType == "Suspended")You can also group by the runbook name by using:AzureDiagnostics | where ResourceProvider == "MICROSOFT.AUTOMATION" and     Category == "JobLogs" and (ResultType == "Failed" or ResultType == "Suspended") | summarize AggregatedValue = count() by RunbookName_s
Create a log search query for your alert by entering a search criteria into the query field.
AzureDiagnostics | where ResourceProvider == "MICROSOFT.AUTOMATION" and Category == "JobLogs" and (ResultType == "Failed" or ResultType == "Suspended")
AzureDiagnostics | where ResourceProvider == "MICROSOFT.AUTOMATION" and Category == "JobLogs" and (ResultType == "Failed" or ResultType == "Suspended")
You can also group by the runbook name by using:
AzureDiagnostics | where ResourceProvider == "MICROSOFT.AUTOMATION" and     Category == "JobLogs" and (ResultType == "Failed" or ResultType == "Suspended") | summarize AggregatedValue = count() by RunbookName_s
AzureDiagnostics | where ResourceProvider == "MICROSOFT.AUTOMATION" and     Category == "JobLogs" and (ResultType == "Failed" or ResultType == "Suspended") | summarize AggregatedValue = count() by RunbookName_s
To open theCreate alert rulescreen, click+New alert ruleon the top of the page. For more information on the options to configure the alerts, seeLog alerts in Azure
To open theCreate alert rulescreen, click+New alert ruleon the top of the page. For more information on the options to configure the alerts, seeLog alerts in Azure
Azure Automation diagnostic audit logs
You can now send audit logs also to the Azure Monitor workspace. This allows enterprises to monitor key automation account activities for security & compliance. When enabled through the Azure Diagnostics settings, you will be able to collect telemetry about create, update and delete operations for the Automation runbooks, jobs and automation assets like connection, credential, variable & certificate. You can alsoconfigure the alertsfor audit log conditions as part of your security monitoring requirements.
Difference between activity logs and audit logs
Activity log is aâ¯platform login Azure that provides insight into subscription-level events. The activity log for Automation account includes information about when an automation resource is modified or created or deleted. However, it does not capture the name or ID of the resource.
Audit logs for Automation accounts capture the name and ID of the resource such as automation variable, credential, connection and so on, along with the type of the operation performed for the resource and Azure Automation would scrub some details like client IP data conforming to the GDPR compliance.
Activity logs would show details such as client IP because an Activity log is a platform log that provides detailed diagnostic and auditing information for Azure resources. They are automatically generated for activities that occur in ARM and gets pushed to the activity log resource provider. Since Activity logs are part of Azure monitoring, it would show some client data to provide insights into the client activity. â¯
Sample queries for audit logs
Query to view Automation resource audit logs
AzureDiagnostics 
| where ResourceProvider == "MICROSOFT.AUTOMATION" and Category == "AuditEvent"
AzureDiagnostics 
| where ResourceProvider == "MICROSOFT.AUTOMATION" and Category == "AuditEvent"
Query to Monitor any variable update, create or delete operation
AzureDiagnostics 
| where ResourceProvider == "MICROSOFT.AUTOMATION" and Category == "AuditEvent" and targetResources_Resource_s == "Variable"
AzureDiagnostics 
| where ResourceProvider == "MICROSOFT.AUTOMATION" and Category == "AuditEvent" and targetResources_Resource_s == "Variable"
Query to Monitor any runbook operation like create, draft or update
AzureDiagnostics 
| where ResourceProvider == "MICROSOFT.AUTOMATION" and Category == "AuditEvent" and targetResources_Resource_s contains "Runbook"
AzureDiagnostics 
| where ResourceProvider == "MICROSOFT.AUTOMATION" and Category == "AuditEvent" and targetResources_Resource_s contains "Runbook"
Query to Monitor any certificate creation, updating or deletion
AzureDiagnostics 
| where ResourceProvider == "MICROSOFT.AUTOMATION" and Category == "AuditEvent" and targetResources_Resource_s contains "Certificate"
AzureDiagnostics 
| where ResourceProvider == "MICROSOFT.AUTOMATION" and Category == "AuditEvent" and targetResources_Resource_s contains "Certificate"
Query to Monitor any credentials creation, updating or deletion
AzureDiagnostics 
| where ResourceProvider == "MICROSOFT.AUTOMATION" and Category == "AuditEvent" and targetResources_Resource_s contains "Credential"
AzureDiagnostics 
| where ResourceProvider == "MICROSOFT.AUTOMATION" and Category == "AuditEvent" and targetResources_Resource_s contains "Credential"
Filter job status output converted into a JSON object
Recently we changed the behavior of how the Automation log data is written to theAzureDiagnosticstable in the Log Analytics service, where it no longer breaks down the JSON properties into separate fields. If you configured your runbook to format objects in the output stream in JSON format as separate columns, it is necessary to reconfigure your queries to parse that field to a JSON object to access those properties. This is accomplished usingparse jsonto access a specific JSON element in a known path.
AzureDiagnostics
For example, a runbook formats theResultDescriptionproperty in the output stream in JSON format with multiple fields. To search for the status of your jobs that are in a failed state as specified in a field calledStatus, use this example query to search theResultDescriptionwith a status ofFailed:
AzureDiagnostics
| where Category == 'JobStreams'
| extend jsonResourceDescription = parse_json(ResultDescription)
| where jsonResourceDescription.Status == 'Failed'
AzureDiagnostics
| where Category == 'JobStreams'
| extend jsonResourceDescription = parse_json(ResultDescription)
| where jsonResourceDescription.Status == 'Failed'

Next steps
To learn how to construct search queries and review the Automation job logs with Azure Monitor logs, seeLog searches in Azure Monitor logs.
To understand creation and retrieval of output and error messages from runbooks, seeMonitor runbook output.
To learn more about runbook execution, how to monitor runbook jobs, and other technical details, seeRunbook execution in Azure Automation.
To learn more about Azure Monitor logs and data collection sources, seeCollecting Azure storage data in Azure Monitor logs overview.
For help troubleshooting Log Analytics, seeTroubleshooting why Log Analytics is no longer collecting data.
Feedback
Was this page helpful?
Additional resources