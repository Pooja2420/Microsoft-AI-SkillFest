Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Create an Azure Virtual Machine with a dual-stack network
Article
2024-07-24
5 contributors
In this article
In this article, you create a virtual machine in Azure with the Azure portal. The virtual machine is created along with the dual-stack network as part of the procedures. You choose from the Azure portal, Azure CLI, or Azure PowerShell to complete the steps in this article. When completed, the virtual machine supports IPv4 and IPv6 communication.
Prerequisites
Azure portal
Azure CLI
Azure PowerShell
An Azure account with an active subscription.Create an account for free.
An Azure account with an active subscription.Create one for free.
Use the Bash environment inAzure Cloud Shell. For more information, seeGet started with Azure Cloud Shell.
Use the Bash environment inAzure Cloud Shell. For more information, seeGet started with Azure Cloud Shell.

If you prefer to run CLI reference commands locally,installthe Azure CLI. If you're running on Windows or macOS, consider running Azure CLI in a Docker container. For more information, seeHow to run the Azure CLI in a Docker container.If you're using a local installation, sign in to the Azure CLI by using theaz logincommand. To finish the authentication process, follow the steps displayed in your terminal. For other sign-in options, seeAuthenticate to Azure using Azure CLI.When you're prompted, install the Azure CLI extension on first use. For more information about extensions, seeUse and manage extensions with the Azure CLI.Runaz versionto find the version and dependent libraries that are installed. To upgrade to the latest version, runaz upgrade.
If you prefer to run CLI reference commands locally,installthe Azure CLI. If you're running on Windows or macOS, consider running Azure CLI in a Docker container. For more information, seeHow to run the Azure CLI in a Docker container.
If you're using a local installation, sign in to the Azure CLI by using theaz logincommand. To finish the authentication process, follow the steps displayed in your terminal. For other sign-in options, seeAuthenticate to Azure using Azure CLI.
If you're using a local installation, sign in to the Azure CLI by using theaz logincommand. To finish the authentication process, follow the steps displayed in your terminal. For other sign-in options, seeAuthenticate to Azure using Azure CLI.
When you're prompted, install the Azure CLI extension on first use. For more information about extensions, seeUse and manage extensions with the Azure CLI.
When you're prompted, install the Azure CLI extension on first use. For more information about extensions, seeUse and manage extensions with the Azure CLI.
Runaz versionto find the version and dependent libraries that are installed. To upgrade to the latest version, runaz upgrade.
Runaz versionto find the version and dependent libraries that are installed. To upgrade to the latest version, runaz upgrade.
This tutorial requires version 2.0.28 or later of the Azure CLI. If using Azure Cloud Shell, the latest version is already installed.
An Azure account with an active subscription.Create an account for free.
Azure PowerShell installed locally or Azure Cloud Shell.
Sign in to Azure PowerShell and select the subscription you want to use. For more information, seeSign in with Azure PowerShell.
Ensure your Az. Network module is 4.3.0 or later. To verify the installed module, use the command Get-InstalledModule -Name "Az.Network". If the module requires an update, use the command Update-Module -Name "Az. Network".
If you choose to install and use PowerShell locally, this article requires the Azure PowerShell module version 5.4.1 or later. RunGet-Module -ListAvailable Azto find the installed version. If you need to upgrade, seeInstall Azure PowerShell module. If you're running PowerShell locally, you also need to runConnect-AzAccountto create a connection with Azure.
Get-Module -ListAvailable Az
Connect-AzAccount
Create a resource group and virtual network
Azure portal
Azure CLI
Azure PowerShell
In this section, you create a resource group and dual-stack virtual network for the virtual machine in the Azure portal.
Sign-in to theAzure portal.
Sign-in to theAzure portal.
In the search box at the top of the portal, enterVirtual network. SelectVirtual networksin the search results.
In the search box at the top of the portal, enterVirtual network. SelectVirtual networksin the search results.
Select+ Create.
Select+ Create.
In theBasicstab ofCreate virtual network, enter or select the following information.SettingValueProject detailsSubscriptionSelect your subscription.Resource groupSelectCreate new.InName, entermyResourceGroup.SelectOK.Instance detailsNameEntermyVNet.RegionSelectEast US 2.
In theBasicstab ofCreate virtual network, enter or select the following information.
Select theIP Addressestab, orNext>Next.
Select theIP Addressestab, orNext>Next.
Leave the default IPv4 address space of10.0.0.0/16. If the default is absent or different, enter an IPv4 address space of10.0.0.0/16.
Leave the default IPv4 address space of10.0.0.0/16. If the default is absent or different, enter an IPv4 address space of10.0.0.0/16.
Select thedefaultsubnet.
Select thedefaultsubnet.
On theEdit subnetpage, entermyBackendSubnetinSubnet nameand selectSave.
On theEdit subnetpage, entermyBackendSubnetinSubnet nameand selectSave.
SelectAdd IPv6 address spacefrom the dropdown menu.
SelectAdd IPv6 address spacefrom the dropdown menu.
InIPv6 address space, edit the default address space and change its value to2404:f800:8000:122::/63.
InIPv6 address space, edit the default address space and change its value to2404:f800:8000:122::/63.
To add an IPv6 subnet, select+ Add a subnetand enter or select the following information:SettingValueSubnetSubnet nameEntermyBackendSubnet.Address rangeLeave default of2404:f800:8000:122::.SizeLeave the default of/64.
To add an IPv6 subnet, select+ Add a subnetand enter or select the following information:
SelectAdd.
SelectAdd.
Select theReview + create.
Select theReview + create.
SelectCreate.
SelectCreate.
In this section, you create a resource group dual-stack virtual network for the virtual machine with Azure CLI.
Create a resource group withaz group createnamedmyResourceGroupin theeastus2location.
az group create \
    --name myResourceGroup \
    --location eastus2
az group create \
    --name myResourceGroup \
    --location eastus2
Useaz network vnet createto create a virtual network.
az network vnet create \
    --resource-group myResourceGroup \
    --location eastus2 \
    --name myVNet \
    --address-prefixes 10.0.0.0/16 2404:f800:8000:122::/63 \
    --subnet-name myBackendSubnet \
    --subnet-prefixes 10.0.0.0/24 2404:f800:8000:122::/64
az network vnet create \
    --resource-group myResourceGroup \
    --location eastus2 \
    --name myVNet \
    --address-prefixes 10.0.0.0/16 2404:f800:8000:122::/63 \
    --subnet-name myBackendSubnet \
    --subnet-prefixes 10.0.0.0/24 2404:f800:8000:122::/64
In this section, you create a dual-stack virtual network for the virtual machine with Azure PowerShell.
Create a resource group withNew-AzResourceGroupnamedmyResourceGroupin theeastus2location.
$rg =@{
    Name = 'myResourceGroup'
    Location = 'eastus2'
}
New-AzResourceGroup @rg
$rg =@{
    Name = 'myResourceGroup'
    Location = 'eastus2'
}
New-AzResourceGroup @rg
UseNew-AzVirtualNetworkandNew-AzVirtualNetworkSubnetConfigto create a virtual network.
## Create backend subnet config ##
$subnet = @{
    Name = 'myBackendSubnet'
    AddressPrefix = '10.0.0.0/24','2404:f800:8000:122::/64'
}
$subnetConfig = New-AzVirtualNetworkSubnetConfig @subnet 

## Create the virtual network ##
$net = @{
    Name = 'myVNet'
    ResourceGroupName = 'myResourceGroup'
    Location = 'eastus2'
    AddressPrefix = '10.0.0.0/16','2404:f800:8000:122::/63'
    Subnet = $subnetConfig
}
New-AzVirtualNetwork @net
## Create backend subnet config ##
$subnet = @{
    Name = 'myBackendSubnet'
    AddressPrefix = '10.0.0.0/24','2404:f800:8000:122::/64'
}
$subnetConfig = New-AzVirtualNetworkSubnetConfig @subnet 

## Create the virtual network ##
$net = @{
    Name = 'myVNet'
    ResourceGroupName = 'myResourceGroup'
    Location = 'eastus2'
    AddressPrefix = '10.0.0.0/16','2404:f800:8000:122::/63'
    Subnet = $subnetConfig
}
New-AzVirtualNetwork @net
Create public IP addresses
Azure portal
Azure CLI
Azure PowerShell
You create two public IP addresses in this section, IPv4 and IPv6 in the Azure portal.
Create IPv4 public IP address
In the search box at the top of the portal, enterPublic IP address. SelectPublic IP addressesin the search results.
In the search box at the top of the portal, enterPublic IP address. SelectPublic IP addressesin the search results.
Select+ Create.
Select+ Create.
Enter or select the following information inCreate public IP address.SettingValueProject detailsSubscriptionSelect your subscription.Resource groupSelectmyResourceGroup.LocationSelectEast US 2.Availability zoneSelectZone redundant.Instance detailsNameEntermyPublicIP-IPv4.IP versionSelectIPv4.SKULeave the default ofStandard.TierLeave the default ofRegional.IP address assignmentRouting preferenceLeave the default ofMicrosoft network.Idle timeout (minutes)Leave the default of4.DNS name labelEntermyPublicIP-IPv4.
Enter or select the following information inCreate public IP address.
SelectReview + createthenCreate.
SelectReview + createthenCreate.
Create IPv6 public IP address
In the search box at the top of the portal, enterPublic IP address. SelectPublic IP addressesin the search results.
In the search box at the top of the portal, enterPublic IP address. SelectPublic IP addressesin the search results.
Select+ Create.
Select+ Create.
Enter or select the following information inCreate public IP address.SettingValueProject detailsSubscriptionSelect your subscription.Resource groupSelectmyResourceGroup.LocationSelectEast US 2.Availability zoneSelectZone redundant.Instance detailsNameEntermyPublicIP-IPv6.IP versionSelectIPv6.SKULeave the default ofStandard.TierLeave the default ofRegional.IP address assignmentDNS name labelEntermyPublicIP-IPv6.
Enter or select the following information inCreate public IP address.
SelectReview + createthenCreate.
SelectReview + createthenCreate.
You create two public IP addresses in this section, IPv4 and IPv6 with Azure CLI.
Useaz network public-ip createto create the public IP addresses.
az network public-ip create \
    --resource-group myResourceGroup \
    --name myPublicIP-Ipv4 \
    --sku Standard \
    --version IPv4 \
    --zone 1 2 3

  az network public-ip create \
    --resource-group myResourceGroup \
    --name myPublicIP-Ipv6 \
    --sku Standard \
    --version IPv6 \
    --zone 1 2 3
az network public-ip create \
    --resource-group myResourceGroup \
    --name myPublicIP-Ipv4 \
    --sku Standard \
    --version IPv4 \
    --zone 1 2 3

  az network public-ip create \
    --resource-group myResourceGroup \
    --name myPublicIP-Ipv6 \
    --sku Standard \
    --version IPv6 \
    --zone 1 2 3
You create two public IP addresses in this section, IPv4 and IPv6.
UseNew-AzPublicIpAddressto create the public IP addresses.
$ip4 = @{
    Name = 'myPublicIP-IPv4'
    ResourceGroupName = 'myResourceGroup'
    Location = 'eastus2'
    Sku = 'Standard'
    AllocationMethod = 'Static'
    IpAddressVersion = 'IPv4'
    Zone = 1,2,3
}
New-AzPublicIpAddress @ip4

$ip6 = @{
    Name = 'myPublicIP-IPv6'
    ResourceGroupName = 'myResourceGroup'
    Location = 'eastus2'
    Sku = 'Standard'
    AllocationMethod = 'Static'
    IpAddressVersion = 'IPv6'
    Zone = 1,2,3
}
New-AzPublicIpAddress @ip6
$ip4 = @{
    Name = 'myPublicIP-IPv4'
    ResourceGroupName = 'myResourceGroup'
    Location = 'eastus2'
    Sku = 'Standard'
    AllocationMethod = 'Static'
    IpAddressVersion = 'IPv4'
    Zone = 1,2,3
}
New-AzPublicIpAddress @ip4

$ip6 = @{
    Name = 'myPublicIP-IPv6'
    ResourceGroupName = 'myResourceGroup'
    Location = 'eastus2'
    Sku = 'Standard'
    AllocationMethod = 'Static'
    IpAddressVersion = 'IPv6'
    Zone = 1,2,3
}
New-AzPublicIpAddress @ip6
Create virtual machine
In this section, you create the virtual machine and its supporting resources.
Azure portal
Azure CLI
Azure PowerShell
Create virtual machine
In the search box at the top of the portal, enterVirtual machine. SelectVirtual machinesin the search results.
In the search box at the top of the portal, enterVirtual machine. SelectVirtual machinesin the search results.
Select+ CreatethenAzure virtual machine.
Select+ CreatethenAzure virtual machine.
In theBasicstab, enter or select the following information.SettingValueProject detailsSubscriptionSelect your subscription.Resource groupSelectmyResourceGroup.Instance detailsVirtual machine nameEntermyVM.RegionSelectEast US 2.Availability optionsSelectNo infrastructure redundancy required.Security typeSelectStandard.ImageSelectUbuntu Server 20.04 LTS - Gen2.SizeSelect the default size.Administrator accountAuthentication typeSelectSSH public key.UsernameEnter a username.SSH public key sourceSelectGenerate new key pair.Key pair nameEntermySSHKey.Inbound port rulesPublic inbound portsSelectNone.
In theBasicstab, enter or select the following information.
Select theNetworkingtab, orNext: DisksthenNext: Networking.
Select theNetworkingtab, orNext: DisksthenNext: Networking.
Enter or select the following information in theNetworkingtab.SettingValueNetwork interfaceVirtual networkSelectmyVNet.SubnetSelectmyBackendSubnet (10.1.0.0/24,2404:f800:8000:122:/64).Public IPSelectmyPublicIP-IPv4.NIC network security groupSelectAdvanced.Configure network security groupSelectCreate new.EntermyNSGin Name.SelectOK.
Enter or select the following information in theNetworkingtab.
SelectReview + create.
SelectReview + create.
SelectCreate.
SelectCreate.
Generate new key pairappears. SelectDownload private key and create resource.
Generate new key pairappears. SelectDownload private key and create resource.
The private key downloads to your local computer. Copy the private key to a directory on your computer. In the following example, it's~/.ssh.
The private key downloads to your local computer. Copy the private key to a directory on your computer. In the following example, it's~/.ssh.
Configure network interface
A network interface is automatically created and attached to the chosen virtual network during creation. In this section, you add the IPv6 configuration to the existing network interface.
In the search box at the top of the portal, enterVirtual machine. SelectVirtual machinesin the search results.
In the search box at the top of the portal, enterVirtual machine. SelectVirtual machinesin the search results.
SelectmyVMor your existing virtual machine name.
SelectmyVMor your existing virtual machine name.
SelectNetworkinginSettings.
SelectNetworkinginSettings.
The name of your default network interface will bemyvmxx, with xx a random number. In this example, it'smyvm281. Selectmyvm281next toNetwork Interface:.
The name of your default network interface will bemyvmxx, with xx a random number. In this example, it'smyvm281. Selectmyvm281next toNetwork Interface:.
In the properties of the network interface, selectIP configurationsinSettings.
In the properties of the network interface, selectIP configurationsinSettings.
InIP configurations, select+ Add.
InIP configurations, select+ Add.
InAdd IP configuration, enter or select the following information.SettingValueNameEnterIpv6config.IP versionSelectIPv6.Private IP address settingsAllocationLeave the default ofDynamic.Public IP addressSelectAssociate.Public IP addressSelectmyPublicIP-IPv6.
InAdd IP configuration, enter or select the following information.
SelectOK.
SelectOK.
In this section, you create the virtual machine and its supporting resources.
Create network interface
You useaz network nic createto create the network interface for the virtual machine. The public IP addresses and the NSG created previously are associated with the NIC. The network interface is attached to the virtual network you created previously.
az network nic create \
    --resource-group myResourceGroup \
    --name myNIC1 \
    --vnet-name myVNet \
    --subnet myBackEndSubnet \
    --network-security-group myNSG \
    --public-ip-address myPublicIP-IPv4
az network nic create \
    --resource-group myResourceGroup \
    --name myNIC1 \
    --vnet-name myVNet \
    --subnet myBackEndSubnet \
    --network-security-group myNSG \
    --public-ip-address myPublicIP-IPv4
Create IPv6 IP configuration
Useaz network nic ip-config createto create the IPv6 configuration for the NIC.
az network nic ip-config create \
    --resource-group myResourceGroup \
    --name myIPv6config \
    --nic-name myNIC1 \
    --private-ip-address-version IPv6 \
    --vnet-name myVNet \
    --subnet myBackendSubnet \
    --public-ip-address myPublicIP-IPv6
az network nic ip-config create \
    --resource-group myResourceGroup \
    --name myIPv6config \
    --nic-name myNIC1 \
    --private-ip-address-version IPv6 \
    --vnet-name myVNet \
    --subnet myBackendSubnet \
    --public-ip-address myPublicIP-IPv6
Create virtual machine
Useaz vm createto create the virtual machine.
az vm create \
    --resource-group myResourceGroup \
    --name myVM \
    --nics myNIC1 \
    --image Ubuntu2204 \
    --admin-username azureuser \
    --authentication-type ssh \
    --generate-ssh-keys
az vm create \
    --resource-group myResourceGroup \
    --name myVM \
    --nics myNIC1 \
    --image Ubuntu2204 \
    --admin-username azureuser \
    --authentication-type ssh \
    --generate-ssh-keys
In this section, you create the virtual machine and its supporting resources.
Create network interface
You useNew-AzNetworkInterfaceandNew-AzNetworkInterfaceIpConfigto create the network interface for the virtual machine. The public IP addresses and the NSG created previously are associated with the NIC. The network interface is attached to the virtual network you created previously.
## Place the virtual network into a variable. ##
$net = @{
    Name = 'myVNet'
    ResourceGroupName = 'myResourceGroup'
}
$vnet = Get-AzVirtualNetwork @net

## Place the network security group into a variable. ##
$ns = @{
    Name = 'myNSG'
    ResourceGroupName = 'myResourceGroup'
}
$nsg = Get-AzNetworkSecurityGroup @ns

## Place the IPv4 public IP address into a variable. ##
$pub4 = @{
    Name = 'myPublicIP-IPv4'
    ResourceGroupName = 'myResourceGroup'
}
$pubIPv4 = Get-AzPublicIPAddress @pub4

## Place the IPv6 public IP address into a variable. ##
$pub6 = @{
    Name = 'myPublicIP-IPv6'
    ResourceGroupName = 'myResourceGroup'
}
$pubIPv6 = Get-AzPublicIPAddress @pub6

## Create IPv4 configuration for NIC. ##
$IP4c = @{
    Name = 'ipconfig-ipv4'
    Subnet = $vnet.Subnets[0]
    PrivateIpAddressVersion = 'IPv4'
    PublicIPAddress = $pubIPv4
}
$IPv4Config = New-AzNetworkInterfaceIpConfig @IP4c

## Create IPv6 configuration for NIC. ##
$IP6c = @{
    Name = 'ipconfig-ipv6'
    Subnet = $vnet.Subnets[0]
    PrivateIpAddressVersion = 'IPv6'
    PublicIPAddress = $pubIPv6
}
$IPv6Config = New-AzNetworkInterfaceIpConfig @IP6c

## Command to create network interface for VM ##
$nic = @{
    Name = 'myNIC1'
    ResourceGroupName = 'myResourceGroup'
    Location = 'eastus2'
    NetworkSecurityGroup = $nsg
    IpConfiguration = $IPv4Config,$IPv6Config   
}
New-AzNetworkInterface @nic
## Place the virtual network into a variable. ##
$net = @{
    Name = 'myVNet'
    ResourceGroupName = 'myResourceGroup'
}
$vnet = Get-AzVirtualNetwork @net

## Place the network security group into a variable. ##
$ns = @{
    Name = 'myNSG'
    ResourceGroupName = 'myResourceGroup'
}
$nsg = Get-AzNetworkSecurityGroup @ns

## Place the IPv4 public IP address into a variable. ##
$pub4 = @{
    Name = 'myPublicIP-IPv4'
    ResourceGroupName = 'myResourceGroup'
}
$pubIPv4 = Get-AzPublicIPAddress @pub4

## Place the IPv6 public IP address into a variable. ##
$pub6 = @{
    Name = 'myPublicIP-IPv6'
    ResourceGroupName = 'myResourceGroup'
}
$pubIPv6 = Get-AzPublicIPAddress @pub6

## Create IPv4 configuration for NIC. ##
$IP4c = @{
    Name = 'ipconfig-ipv4'
    Subnet = $vnet.Subnets[0]
    PrivateIpAddressVersion = 'IPv4'
    PublicIPAddress = $pubIPv4
}
$IPv4Config = New-AzNetworkInterfaceIpConfig @IP4c

## Create IPv6 configuration for NIC. ##
$IP6c = @{
    Name = 'ipconfig-ipv6'
    Subnet = $vnet.Subnets[0]
    PrivateIpAddressVersion = 'IPv6'
    PublicIPAddress = $pubIPv6
}
$IPv6Config = New-AzNetworkInterfaceIpConfig @IP6c

## Command to create network interface for VM ##
$nic = @{
    Name = 'myNIC1'
    ResourceGroupName = 'myResourceGroup'
    Location = 'eastus2'
    NetworkSecurityGroup = $nsg
    IpConfiguration = $IPv4Config,$IPv6Config   
}
New-AzNetworkInterface @nic
Create virtual machine
Use the following commands to create the virtual machine:
New-AzVM
New-AzVM
New-AzVMConfig
New-AzVMConfig
Set-AzVMOperatingSystem
Set-AzVMOperatingSystem
Set-AzVMSourceImage
Set-AzVMSourceImage
Add-AzVMNetworkInterface
Add-AzVMNetworkInterface
$cred = Get-Credential

## Place network interface into a variable. ##
$nic = @{
    Name = 'myNIC1'
    ResourceGroupName = 'myResourceGroup'
}
$nicVM = Get-AzNetworkInterface @nic

## Create a virtual machine configuration for VMs ##
$vmsz = @{
    VMName = 'myVM'
    VMSize = 'Standard_DS1_v2'  
}
$vmos = @{
    ComputerName = 'myVM'
    Credential = $cred
}
$vmimage = @{
    PublisherName = 'Debian'
    Offer = 'debian-11'
    Skus = '11'
    Version = 'latest'    
}
$vmConfig = New-AzVMConfig @vmsz `
      | Set-AzVMOperatingSystem @vmos -Linux `
      | Set-AzVMSourceImage @vmimage `
      | Add-AzVMNetworkInterface -Id $nicVM.Id

## Create the virtual machine for VMs ##
$vm = @{
    ResourceGroupName = 'myResourceGroup'
    Location = 'eastus2'
    VM = $vmConfig
    SshKeyName = 'mySSHKey'
    }
New-AzVM @vm -GenerateSshKey
$cred = Get-Credential

## Place network interface into a variable. ##
$nic = @{
    Name = 'myNIC1'
    ResourceGroupName = 'myResourceGroup'
}
$nicVM = Get-AzNetworkInterface @nic

## Create a virtual machine configuration for VMs ##
$vmsz = @{
    VMName = 'myVM'
    VMSize = 'Standard_DS1_v2'  
}
$vmos = @{
    ComputerName = 'myVM'
    Credential = $cred
}
$vmimage = @{
    PublisherName = 'Debian'
    Offer = 'debian-11'
    Skus = '11'
    Version = 'latest'    
}
$vmConfig = New-AzVMConfig @vmsz `
      | Set-AzVMOperatingSystem @vmos -Linux `
      | Set-AzVMSourceImage @vmimage `
      | Add-AzVMNetworkInterface -Id $nicVM.Id

## Create the virtual machine for VMs ##
$vm = @{
    ResourceGroupName = 'myResourceGroup'
    Location = 'eastus2'
    VM = $vmConfig
    SshKeyName = 'mySSHKey'
    }
New-AzVM @vm -GenerateSshKey
Test SSH connection
Azure portal
Azure CLI
Azure PowerShell
You connect to the virtual machine with SSH to test the IPv4 public IP address.
In the search box at the top of the portal, enterPublic IP address. SelectPublic IP addressesin the search results.
In the search box at the top of the portal, enterPublic IP address. SelectPublic IP addressesin the search results.
SelectmyPublicIP-IPv4.
SelectmyPublicIP-IPv4.
The public IPv4 address is in theOverviewinIP address. In this example it's,20.22.46.19.
The public IPv4 address is in theOverviewinIP address. In this example it's,20.22.46.19.
Open an SSH connection to the virtual machine by using the following command. Replace the IP address with the IP address of your virtual machine. Replaceazureuserwith the username you chose during virtual machine creation. The-iis the path to the private key that you downloaded earlier. In this example, it's~/.ssh/mySSHKey.pem.ssh -i ~/.ssh/mySSHkey.pem azureuser@20.22.46.19
Open an SSH connection to the virtual machine by using the following command. Replace the IP address with the IP address of your virtual machine. Replaceazureuserwith the username you chose during virtual machine creation. The-iis the path to the private key that you downloaded earlier. In this example, it's~/.ssh/mySSHKey.pem.
azureuser
-i
ssh -i ~/.ssh/mySSHkey.pem azureuser@20.22.46.19
ssh -i ~/.ssh/mySSHkey.pem azureuser@20.22.46.19
Useaz network public-ip showto display the IP addresses of the virtual machine.
az network public-ip show \
    --resource-group myResourceGroup \
    --name myPublicIP-IPv4 \
    --query ipAddress \
    --output tsv
az network public-ip show \
    --resource-group myResourceGroup \
    --name myPublicIP-IPv4 \
    --query ipAddress \
    --output tsv
user@Azure:~$ az network public-ip show \
>     --resource-group myResourceGroup \
>     --name myPublicIP-IPv4 \
>     --query ipAddress \
>     --output tsv
20.119.201.208
user@Azure:~$ az network public-ip show \
>     --resource-group myResourceGroup \
>     --name myPublicIP-IPv4 \
>     --query ipAddress \
>     --output tsv
20.119.201.208
az network public-ip show \
    --resource-group myResourceGroup \
    --name myPublicIP-IPv6 \
    --query ipAddress \
    --output tsv
az network public-ip show \
    --resource-group myResourceGroup \
    --name myPublicIP-IPv6 \
    --query ipAddress \
    --output tsv
user@Azure:~$ az network public-ip show \
>     --resource-group myResourceGroup \
>     --name myPublicIP-IPv6 \
>     --query ipAddress \
>     --output tsv
2603:1030:408:6::9d
user@Azure:~$ az network public-ip show \
>     --resource-group myResourceGroup \
>     --name myPublicIP-IPv6 \
>     --query ipAddress \
>     --output tsv
2603:1030:408:6::9d
Open an SSH connection to the virtual machine by using the following command. Replace the IP address with the IP address of your virtual machine.
ssh azureuser@20.119.201.208
ssh azureuser@20.119.201.208
UseGet-AzPublicIpAddressto display the IP addresses of the virtual machine.
$ip4 = @{
    ResourceGroupName = 'myResourceGroup'
    Name = 'myPublicIP-IPv4'
}  
Get-AzPublicIPAddress @ip4 | select IpAddress
$ip4 = @{
    ResourceGroupName = 'myResourceGroup'
    Name = 'myPublicIP-IPv4'
}  
Get-AzPublicIPAddress @ip4 | select IpAddress
PS /home/user> Get-AzPublicIPAddress @ip4 | select IpAddress

IpAddress
---------
20.72.115.187
PS /home/user> Get-AzPublicIPAddress @ip4 | select IpAddress

IpAddress
---------
20.72.115.187
$ip6 = @{
    ResourceGroupName = 'myResourceGroup'
    Name = 'myPublicIP-IPv6'
}  
Get-AzPublicIPAddress @ip6 | select IpAddress
$ip6 = @{
    ResourceGroupName = 'myResourceGroup'
    Name = 'myPublicIP-IPv6'
}  
Get-AzPublicIPAddress @ip6 | select IpAddress
PS /home/user> Get-AzPublicIPAddress @ip6 | select IpAddress

IpAddress
---------
2603:1030:403:3::1ca
PS /home/user> Get-AzPublicIPAddress @ip6 | select IpAddress

IpAddress
---------
2603:1030:403:3::1ca
Open an SSH connection to the virtual machine by using the following command. Replace the IP address with the IP address of your virtual machine.
ssh azureuser@20.72.115.187
ssh azureuser@20.72.115.187
Clean up resources
Azure portal
Azure CLI
Azure PowerShell
When your finished with the resources created in this article, delete the resource group and all of the resources it contains:
In the search box at the top of the portal, entermyResourceGroup. SelectmyResourceGroupin the search results inResource groups.
In the search box at the top of the portal, entermyResourceGroup. SelectmyResourceGroupin the search results inResource groups.
SelectDelete resource group.
SelectDelete resource group.
EntermyResourceGroupforTYPE THE RESOURCE GROUP NAMEand selectDelete.
EntermyResourceGroupforTYPE THE RESOURCE GROUP NAMEand selectDelete.
When no longer needed, use theaz group deletecommand to remove the resource group, virtual machine, and all related resources.
az group delete \
    --name myResourceGroup
az group delete \
    --name myResourceGroup
When no longer needed, use theRemove-AzResourceGroupcommand to remove the resource group, virtual machine, and all related resources.
Remove-AzResourceGroup -Name 'myResourceGroup'
Remove-AzResourceGroup -Name 'myResourceGroup'
Next steps
In this article, you learned how to create an Azure Virtual machine with a dual-stack network.
For more information about IPv6 and IP addresses in Azure, see:
Overview of IPv6 for Azure Virtual Network.
Overview of IPv6 for Azure Virtual Network.
What is Azure Virtual Network IP Services?
What is Azure Virtual Network IP Services?
Feedback
Was this page helpful?
Additional resources