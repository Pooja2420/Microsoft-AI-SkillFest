Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Tutorial: Configure Microsoft Dynamics 365 Fraud Protection with Azure Active Directory B2C
Article
2024-10-29
15 contributors
In this article
Organizations can use Microsoft Dynamics 365 Fraud Protection (DFP) to assess risk during attempts to create fraudulent accounts and sign-ins. Customers use Microsoft DFP assessment to block or challenge suspicious attempts to create new, fake accounts, or to compromise accounts.
In this tutorial, learn how to integrate Microsoft DFP with Azure Active Directory B2C (Azure AD B2C). There's guidance on how to incorporate the Microsoft DFP device fingerprinting and account creation, and sign-in assessment API endpoints, into an Azure AD B2C custom policy.
Learn more:Overview of Microsoft Dynamics 365 Fraud Protection
Prerequisites
To get started, you'll need:
An Azure subscriptionIf you don't have one, you can get anAzure free account
If you don't have one, you can get anAzure free account
AnAzure AD B2C tenantlinked to your Azure subscription
A Microsoft DFP subscriptionSee,Dynamics 365 pricingYou can set up atrial client version
See,Dynamics 365 pricing
You can set up atrial client version
Scenario description
Microsoft DFP integration includes the following components:
Azure AD B2C tenant: Authenticates the user and acts as a client of Microsoft DFP. Hosts a fingerprinting script collecting identification and diagnostic data of users who execute a target policy. It blocks or challenges sign-in or sign-up attempts based on the rule evaluation result returned by Microsoft DFP.
Custom UI templates: Customizes HTML content of the pages rendered by Azure AD B2C. These pages include the JavaScript snippet required for Microsoft DFP fingerprinting.
Microsoft DFP fingerprinting service: Dynamically embedded script that logs device telemetry and self-asserted user details to create a uniquely identifiable fingerprint for the user.
Microsoft DFP API endpoints: Provides the decision result and accepts a final status reflecting the operation undertaken by the client application. Azure AD B2C communicates with the Microsoft DFP endpoints using REST API connectors. API authentication occurs with a client_credentials grant to the Microsoft Entra tenant in which Microsoft DFP is licensed and installed to obtain a bearer token.
The following architecture diagram shows the implementation.

The user arrives at a sign-in page, selects option to create a new account, and enters information. Azure AD B2C collects user attributes.
Azure AD B2C calls the Microsoft DFP API and passes the user attributes.
After Microsoft DFP API consumes the information and processes it, it returns the result to Azure AD B2C.
Azure AD B2C receives information from the Microsoft DFP API. If failure occurs, an error message appears. With success, the user is authenticated and written into the directory.
Set up the solution
Create a Facebook applicationconfigured to allow federation to Azure AD B2C.
Add the Facebook secretyou created as an Identity Experience Framework policy key.
Configure your application under Microsoft DFP
Set up your Microsoft Entra tenantto use Microsoft DFP.
Set up your custom domain
In a production environment, use acustom domain for Azure AD B2Cand for theMicrosoft DFP fingerprinting service. The domain for both services is in the same root DNS zone to prevent browser privacy settings from blocking cross-domain cookies. This configuration isn't necessary in a non-production environment.
See the following table for examples of environment, service, and domain.
contoso-dev.b2clogin.com
fpt.dfp.microsoft-int.com
contoso-uat.b2clogin.com
fpt.dfp.microsoft.com
login.contoso.com
fpt.login.contoso.com
Deploy the UI templates
Deploy the providedAzure AD B2C UI templatesto a public facing internet hosting service such as Azure Blob Storage.
Replace the valuehttps://<YOUR-UI-BASE-URL>/with the root URL for your deployment location.
https://<YOUR-UI-BASE-URL>/
Note
Later, you'll need the base URL to configure Azure AD B2C policies.
In theui-templates/js/dfp.jsfile, replace<YOUR-DFP-INSTANCE-ID>with your Microsoft DFP instance ID.
ui-templates/js/dfp.js
<YOUR-DFP-INSTANCE-ID>
Ensure CORS is enabled for your Azure AD B2C domain namehttps://{your_tenant_name}.b2clogin.comoryour custom domain.
https://{your_tenant_name}.b2clogin.com
your custom domain
Learn more:UI customization documentation
Azure AD B2C configuration
Add policy keys for your Microsoft DFP client app ID and secret
In the Microsoft Entra tenant where Microsoft DFP is set up, create anMicrosoft Entra application and grant admin consent.
Create a secret value for this application registration. Note the application client ID and client secret value.
Save the client ID and client secret values aspolicy keys in your Azure AD B2C tenant.
Note
Later, you'll need the policy keys to configure Azure AD B2C policies.
Replace the configuration values
In the providedcustom policies, find the following placeholders and replace them with the corresponding values from your instance.
true
false
your-tenant
Production
Development
true
false
00001111-aaaa-2222-bbbb-3333cccc4444
00001111-aaaa-2222-bbbb-3333cccc4444
00001111-aaaa-2222-bbbb-3333cccc4444
000000000000000
B2C_1A_FacebookAppSecret
https://<my-storage-account>.blob.core.windows.net/<my-storage-container>
https://tenantname-00001111-aaaa-2222-bbbb-3333cccc4444.api.dfp.dynamics.com/v1.0/
https://api.dfp.dynamics-int.com/.default or https://api.dfp.dynamics.com/.default
00001111-aaaa-2222-bbbb-3333cccc4444
contoso.onmicrosoft.com
B2C_1A_DFPClientId
B2C_1A_DFPClientSecret
x-ms-dfpenvid=your-env-id>
*You can set up application insights in a Microsoft Entra tenant or subscription. This value is optional butrecommended to assist with debugging.
Note
Add consent notification to the attribute collection page. Include notification that user telemetry and identity information is recorded for account protection.
Configure the Azure AD B2C policy
Go to theAzure AD B2C policyin the Policies folder.
Follow the instructions incustom policy starter packto download theLocalAccounts starter pack.
Configure the policy for the Azure AD B2C tenant.
Note
Update the provided policies to relate to your tenant.
Test the user flow
Open the Azure AD B2C tenant and under Policies selectIdentity Experience Framework.
Select your previously createdSignUpSignIn.
SelectRun user flow.
Application: The registered app (example is JWT).
Reply URL:redirect URL.
SelectRun user flow.
Complete the sign-up flow and create an account.
Tip
Microsoft DFP is called during the flow. If the flow is incomplete, confirm the user isn't saved in the directory.
Note
If usingMicrosoft DFP rule engine, update rules in the Microsoft DFP portal.
Next steps
Microsoft DFP samples
Custom policies in Azure AD B2C
Get started with custom policies in Azure AD B2C
Feedback
Was this page helpful?
Additional resources