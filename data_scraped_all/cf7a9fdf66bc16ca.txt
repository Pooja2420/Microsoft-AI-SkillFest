Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Create a new Git repo in your project
Article
2025-02-18
13 contributors
In this article
Azure DevOps Services | Azure DevOps Server 2022 - Azure DevOps Server 2019
Azure DevOps projects contain Git repositories, work items, builds, and releases. You can use Git repos in your projects to manage your source code as your project grows. This guide shows you how to create a Git repo using the web portal.
Prerequisites
Create a repo using the web portal
Open theRepospage in your project by browsing tohttps://dev.azure.com/OrganizationName, hover your mouse over the name of your project, and select theReposicon. You can select it from theAllprojects list, or from theRecentprojects list if you accessed it recently.
Open theRepospage in your project by browsing tohttps://dev.azure.com/OrganizationName, hover your mouse over the name of your project, and select theReposicon. You can select it from theAllprojects list, or from theRecentprojects list if you accessed it recently.
https://dev.azure.com/OrganizationName

From the repo drop-down, selectNew repository.
From the repo drop-down, selectNew repository.

In theCreate a new repositorydialog, verify that Git is the repository type and enter a name for your new repository. For naming restrictions, seeNaming restrictions, Azure Repos (git).You can also add a README and create a .gitignore for the type of code you plan to manage in the repo. AREADMEcontains information about the code in your repo. The.gitignorefile tells Git which types of files to ignore, such as temporary build files from your development environment.
In theCreate a new repositorydialog, verify that Git is the repository type and enter a name for your new repository. For naming restrictions, seeNaming restrictions, Azure Repos (git).

You can also add a README and create a .gitignore for the type of code you plan to manage in the repo. AREADMEcontains information about the code in your repo. The.gitignorefile tells Git which types of files to ignore, such as temporary build files from your development environment.
When you're happy with the repo name and choices, selectCreate.A new empty Git repo is now created in your project.If you created an empty repo with no README or .gitignore files, there are instructions on how toclonethe repo to your computer. There are also instructions on how topushcode in an existing repo into the newly created one.In this example, you created a README and a .gitignore. There's an overview of the files in your repo. You canclonethe repo using theClonelink on the upper right of the page to get working with a local copy of the repo immediately.
When you're happy with the repo name and choices, selectCreate.
A new empty Git repo is now created in your project.
If you created an empty repo with no README or .gitignore files, there are instructions on how toclonethe repo to your computer. There are also instructions on how topushcode in an existing repo into the newly created one.
In this example, you created a README and a .gitignore. There's an overview of the files in your repo. You canclonethe repo using theClonelink on the upper right of the page to get working with a local copy of the repo immediately.
Clone the repo to your computer
To work with a Git repo, you clone it to your computer. Cloning a repo creates a complete local copy of the repo for you to work with. Cloning also downloads allcommitsandbranchesin the repo and sets up a named relationship with the repo on the server. Use this relationship to interact with the existing repo, pushing and pulling changes to share code with your team.
From your web browser, open the team project for your organization in Azure DevOps and selectRepos>Files. If you don't have a team project,create one now.
From your web browser, open the team project for your organization in Azure DevOps and selectRepos>Files. If you don't have a team project,create one now.

SelectClonein the upper-right corner of theFileswindow and copy the clone URL.
SelectClonein the upper-right corner of theFileswindow and copy the clone URL.

Open the Git command window (Git Bash on Git for Windows). Then, browse to the folder where you want the code from the repo stored on your computer. Rungit clonefollowed by the path copied from theClone URLin the previous section, as shown in the following example.git clone https://dev.azure.com/fabrikam-fiber/MyFirstProject/_git/Git downloads a copy of the code into a new folder for you to work with. The download includes allcommitsandbranchesfrom the repo.
Open the Git command window (Git Bash on Git for Windows). Then, browse to the folder where you want the code from the repo stored on your computer. Rungit clonefollowed by the path copied from theClone URLin the previous section, as shown in the following example.
git clone
git clone https://dev.azure.com/fabrikam-fiber/MyFirstProject/_git/
git clone https://dev.azure.com/fabrikam-fiber/MyFirstProject/_git/
Git downloads a copy of the code into a new folder for you to work with. The download includes allcommitsandbranchesfrom the repo.
Switch your directory to the repository that you cloned.cd fabrikam-fiberKeep this command window open, because you use it in the following steps.
Switch your directory to the repository that you cloned.
cd fabrikam-fiber
cd fabrikam-fiber
Keep this command window open, because you use it in the following steps.
Work with the code
In this step, we make a change to the files on your computer, commit the changes locally, push the commit up to the repo on the server, and view the changes there.
Browse to the folder on your computer where you cloned the repo and open theREADME.mdfile in your editor of choice.
Browse to the folder on your computer where you cloned the repo and open theREADME.mdfile in your editor of choice.
README.md
Make some changes, for example addThis is my first edit.to the file, and save and close the file.
Make some changes, for example addThis is my first edit.to the file, and save and close the file.
This is my first edit.
In the Git command window, navigate to thefabrikam-fiberdirectory by entering the following command:cd fabrikam-fiber
In the Git command window, navigate to thefabrikam-fiberdirectory by entering the following command:
fabrikam-fiber
cd fabrikam-fiber
cd fabrikam-fiber
Commit your changes by entering the following command in the Git command window:git commit -a -m "My first commit"When you usegit commit,-ameans to commit all changed files, and-mspecifies a commit message.
Commit your changes by entering the following command in the Git command window:
git commit -a -m "My first commit"
git commit -a -m "My first commit"
When you usegit commit,-ameans to commit all changed files, and-mspecifies a commit message.
git commit
-a
-m
Push your changes up to the Git repo by entering the following command into the Git command window:git push
Push your changes up to the Git repo by entering the following command into the Git command window:
git push
git push
Switch back to the web portal and selectHistoryfrom theCodeview to view your new commit. The new repo has two commits. The first is the commit where the README and .gitignore were added when the repo was created. The second is the commit you just made.
Switch back to the web portal and selectHistoryfrom theCodeview to view your new commit. The new repo has two commits. The first is the commit where the README and .gitignore were added when the repo was created. The second is the commit you just made.

Switch to theFilestab and select the README file to view your changes.
Switch to theFilestab and select the README file to view your changes.

Next steps
New to Git repos? Learn more
Learn more about using Git in the Git tutorial
Feedback
Was this page helpful?
Additional resources