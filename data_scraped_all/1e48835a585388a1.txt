Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Monitor Azure Kubernetes Service (AKS) control plane metrics (Preview)
Article
2025-02-19
3 contributors
In this article
In this article, you learn how to monitor the Azure Kubernetes Service (AKS) control plane using control plane metrics.
AKS supports a subset of control plane metrics for free throughAzure Monitor platform metrics. The control plane metrics (Preview) feature provides more visibility into the availability and performance of critical control plane components, including the API server, ETCD, Scheduler, Autoscaler, and controller manager. The feature is also fully compatible with Prometheus and Grafana. You can use these metrics to maximize overall observability and maintain operational excellence for your AKS cluster.
Control plane platform metrics
AKS supports some free control plane metrics for monitoring the API server and ETCD. These metrics are automatically collected for all AKS clusters at no cost. You can analyze these metrics through themetrics explorerin the Azure portal and create metrics-based alerts.
View the full list of supportedcontrol plane platform metricsfor AKS under the "API Server (PREVIEW)" and "ETCD (PREVIEW)" sections.
Prerequisites and limitations
The control plane metrics feature (preview) only supportsAzure Monitor managed service for Prometheus.
Private linkisn't supported.
You can only customize the defaultama-metrics-settings-config-map. All other customizations aren't supported.
ama-metrics-settings-config-map
Your AKS cluster must usemanaged identity authentication.
Install theaks-previewextension
aks-preview
Important
AKS preview features are available on a self-service, opt-in basis. Previews are provided "as is" and "as available," and they're excluded from the service-level agreements and limited warranty. AKS previews are partially covered by customer support on a best-effort basis. As such, these features aren't meant for production use. For more information, see the following support articles:
AKS support policies
Azure support FAQ
Install or update theaks-previewAzure CLI extension using theaz extension addoraz extension updatecommand.# Install the aks-preview extension
az extension add --name aks-preview

# Update the aks-preview extension
az extension update --name aks-preview
Install or update theaks-previewAzure CLI extension using theaz extension addoraz extension updatecommand.
aks-preview
az extension add
az extension update
# Install the aks-preview extension
az extension add --name aks-preview

# Update the aks-preview extension
az extension update --name aks-preview
# Install the aks-preview extension
az extension add --name aks-preview

# Update the aks-preview extension
az extension update --name aks-preview
Register theAzureMonitorMetricsControlPlanePreviewflag
AzureMonitorMetricsControlPlanePreview
Register theAzureMonitorMetricsControlPlanePreviewfeature flag using theaz feature registercommand.az feature register --namespace "Microsoft.ContainerService" --name "AzureMonitorMetricsControlPlanePreview"It takes a few minutes for the status to showRegistered.
Register theAzureMonitorMetricsControlPlanePreviewfeature flag using theaz feature registercommand.
AzureMonitorMetricsControlPlanePreview
az feature register
az feature register --namespace "Microsoft.ContainerService" --name "AzureMonitorMetricsControlPlanePreview"
az feature register --namespace "Microsoft.ContainerService" --name "AzureMonitorMetricsControlPlanePreview"
It takes a few minutes for the status to showRegistered.
Verify the registration status using theaz feature showcommand.az feature show --namespace "Microsoft.ContainerService" --name "AzureMonitorMetricsControlPlanePreview"
Verify the registration status using theaz feature showcommand.
az feature show
az feature show --namespace "Microsoft.ContainerService" --name "AzureMonitorMetricsControlPlanePreview"
az feature show --namespace "Microsoft.ContainerService" --name "AzureMonitorMetricsControlPlanePreview"
When the status reflectsRegistered, refresh the registration of theMicrosoft.ContainerServiceresource provider using theaz provider registercommand.az provider register --namespace "Microsoft.ContainerService"
When the status reflectsRegistered, refresh the registration of theMicrosoft.ContainerServiceresource provider using theaz provider registercommand.
az provider register
az provider register --namespace "Microsoft.ContainerService"
az provider register --namespace "Microsoft.ContainerService"
Enable control plane metrics on your AKS cluster
You can enable control plane metrics with the Azure Monitor managed service for Prometheus add-on when creating a new cluster or updating an existing cluster.
Note
Unlike the metrics collected from cluster nodes, control plane metrics are collected by a component that isn't part of theama-metricsadd-on. Enabling theAzureMonitorMetricsControlPlanePreviewfeature flag and the managed Prometheus add-on ensures control plane metrics are collected. After you enable metric collection, it can take several minutes for the data to appear in the workspace.
AzureMonitorMetricsControlPlanePreview
Enable control plane metrics on a new AKS cluster
To collect Prometheus metrics from your Kubernetes cluster, seeEnable Prometheus and Grafana for AKS clustersand follow the steps on theCLItab for an AKS cluster.
Enable control plane metrics on an existing AKS cluster
If your cluster already has the Prometheus add-on, update the cluster to ensure it starts collecting control plane metrics using theaz aks updatecommand.az aks update --name $CLUSTER_NAME --resource-group $RESOURCE_GROUP
If your cluster already has the Prometheus add-on, update the cluster to ensure it starts collecting control plane metrics using theaz aks updatecommand.
az aks update
az aks update --name $CLUSTER_NAME --resource-group $RESOURCE_GROUP
az aks update --name $CLUSTER_NAME --resource-group $RESOURCE_GROUP
Query control plane metrics
Control plane metrics are stored in an Azure Monitor workspace in the cluster's region. You can query the metrics directly from the workspace or through the Azure managed Grafana instance connected to the workspace.
In theAzure portal, navigate to your AKS cluster resource.
In theAzure portal, navigate to your AKS cluster resource.
From the service menu, click onMonitor, selectMonitor Settings.
From the service menu, click onMonitor, selectMonitor Settings.

Navigate to the Azure monitor workspace  linked to the cluster.
Navigate to the Azure monitor workspace  linked to the cluster.
You can query the metrics from the Prometheus Explorer underManaged Prometheusof the Azure Monitor Workspace
You can query the metrics from the Prometheus Explorer underManaged Prometheusof the Azure Monitor Workspace
Note
AKS provides dashboard templates to help you view and analyze your control plane telemetry data in real time. If you're using Azure managed Grafana to visualize the data, you can import the following dashboards:
API server
ETCD
Customize control plane metrics
AKS includes a preconfigured set of metrics to collect and store for each component.API serverandetcdare enabled by default. You can customize this list through theama-settings-configmap.
API server
etcd
ama-settings-configmap
The default targets include the following values:
controlplane-apiserver = true
controlplane-cluster-autoscaler = false
controlplane-kube-scheduler = false
controlplane-kube-controller-manager = false
controlplane-etcd = true
controlplane-apiserver = true
controlplane-cluster-autoscaler = false
controlplane-kube-scheduler = false
controlplane-kube-controller-manager = false
controlplane-etcd = true
All ConfigMaps should be applied to thekube-systemnamespace for any cluster.
kube-system
Customize ingestion profile
For more information aboutminimal-ingestionprofile metrics, seeMinimal ingestion profile for control plane metrics in managed Prometheus.
minimal-ingestion
Setdefault-targets-metrics-keep-list.minimalIngestionProfile="true", which ingests only the minimal set of metrics for each of the default targets:controlplane-apiserverandcontrolplane-etcd.
default-targets-metrics-keep-list.minimalIngestionProfile="true"
controlplane-apiserver
controlplane-etcd
Download the ConfigMap fileama-metrics-settings-configmap.yamland rename it toconfigmap-controlplane.yaml.
Download the ConfigMap fileama-metrics-settings-configmap.yamland rename it toconfigmap-controlplane.yaml.
configmap-controlplane.yaml
Setminimalingestionprofile = false.
Setminimalingestionprofile = false.
minimalingestionprofile = false
Underdefault-scrape-settings-enabled, verify that the targets you want to scrape are set totrue. The only targets you can specify are:controlplane-apiserver,controlplane-cluster-autoscaler,controlplane-kube-scheduler,controlplane-kube-controller-manager, andcontrolplane-etcd.
Underdefault-scrape-settings-enabled, verify that the targets you want to scrape are set totrue. The only targets you can specify are:controlplane-apiserver,controlplane-cluster-autoscaler,controlplane-kube-scheduler,controlplane-kube-controller-manager, andcontrolplane-etcd.
default-scrape-settings-enabled
true
controlplane-apiserver
controlplane-cluster-autoscaler
controlplane-kube-scheduler
controlplane-kube-controller-manager
controlplane-etcd
Apply the ConfigMap using thekubectl applycommand.kubectl apply -f configmap-controlplane.yamlAfter you apply the configuration, it takes several minutes for the metrics from the specified targets scraped from the control plane to appear in the Azure Monitor workspace.
Apply the ConfigMap using thekubectl applycommand.
kubectl apply
kubectl apply -f configmap-controlplane.yaml
kubectl apply -f configmap-controlplane.yaml
After you apply the configuration, it takes several minutes for the metrics from the specified targets scraped from the control plane to appear in the Azure Monitor workspace.
Theminimal ingestion profilesetting helps reduce the ingestion volume of metrics, as it only collects metrics used by default dashboards, default recording rules, and default alerts are collected.
minimal ingestion profile
Download the ConfigMap fileama-metrics-settings-configmapand rename it toconfigmap-controlplane.yaml.
Download the ConfigMap fileama-metrics-settings-configmapand rename it toconfigmap-controlplane.yaml.
configmap-controlplane.yaml
Setminimalingestionprofile = true.
Setminimalingestionprofile = true.
minimalingestionprofile = true
Underdefault-scrape-settings-enabled, verify that the targets you want to scrape are set totrue. The only targets you can specify are:controlplane-apiserver,controlplane-cluster-autoscaler,controlplane-kube-scheduler,controlplane-kube-controller-manager, andcontrolplane-etcd.
Underdefault-scrape-settings-enabled, verify that the targets you want to scrape are set totrue. The only targets you can specify are:controlplane-apiserver,controlplane-cluster-autoscaler,controlplane-kube-scheduler,controlplane-kube-controller-manager, andcontrolplane-etcd.
default-scrape-settings-enabled
true
controlplane-apiserver
controlplane-cluster-autoscaler
controlplane-kube-scheduler
controlplane-kube-controller-manager
controlplane-etcd
Underdefault-targets-metrics-keep-list, specify the list of metrics for thetruetargets. For example:controlplane-apiserver= "apiserver_admission_webhook_admission_duration_seconds| apiserver_longrunning_requests"
Underdefault-targets-metrics-keep-list, specify the list of metrics for thetruetargets. For example:
default-targets-metrics-keep-list
true
controlplane-apiserver= "apiserver_admission_webhook_admission_duration_seconds| apiserver_longrunning_requests"
controlplane-apiserver= "apiserver_admission_webhook_admission_duration_seconds| apiserver_longrunning_requests"
Apply the ConfigMap using thekubectl applycommand.kubectl apply -f configmap-controlplane.yamlAfter you apply the configuration, it takes several minutes for the metrics from the specified targets scraped from the control plane to appear in the Azure Monitor workspace.
Apply the ConfigMap using thekubectl applycommand.
kubectl apply
kubectl apply -f configmap-controlplane.yaml
kubectl apply -f configmap-controlplane.yaml
After you apply the configuration, it takes several minutes for the metrics from the specified targets scraped from the control plane to appear in the Azure Monitor workspace.
Download the ConfigMap file [ama-metrics-settings-configmap]((https://github.com/Azure/prometheus-collector/blob/main/otelcollector/configmaps/ama-metrics-settings-configmap.yaml) and rename it toconfigmap-controlplane.yaml.
Download the ConfigMap file [ama-metrics-settings-configmap]((https://github.com/Azure/prometheus-collector/blob/main/otelcollector/configmaps/ama-metrics-settings-configmap.yaml) and rename it toconfigmap-controlplane.yaml.
configmap-controlplane.yaml
Setminimalingestionprofile = false.
Setminimalingestionprofile = false.
minimalingestionprofile = false
Underdefault-scrape-settings-enabled, verify that the targets you want to scrape are set totrue. The only targets you can specify here arecontrolplane-apiserver,controlplane-cluster-autoscaler,controlplane-kube-scheduler,controlplane-kube-controller-manager, andcontrolplane-etcd.
Underdefault-scrape-settings-enabled, verify that the targets you want to scrape are set totrue. The only targets you can specify here arecontrolplane-apiserver,controlplane-cluster-autoscaler,controlplane-kube-scheduler,controlplane-kube-controller-manager, andcontrolplane-etcd.
default-scrape-settings-enabled
true
controlplane-apiserver
controlplane-cluster-autoscaler
controlplane-kube-scheduler
controlplane-kube-controller-manager
controlplane-etcd
Underdefault-targets-metrics-keep-list, specify the list of metrics for thetruetargets. For example:controlplane-apiserver= "apiserver_admission_webhook_admission_duration_seconds| apiserver_longrunning_requests"
Underdefault-targets-metrics-keep-list, specify the list of metrics for thetruetargets. For example:
default-targets-metrics-keep-list
true
controlplane-apiserver= "apiserver_admission_webhook_admission_duration_seconds| apiserver_longrunning_requests"
controlplane-apiserver= "apiserver_admission_webhook_admission_duration_seconds| apiserver_longrunning_requests"
Apply the ConfigMap using thekubectl applycommand.kubectl apply -f configmap-controlplane.yamlAfter you apply the configuration, it takes several minutes for the metrics from the specified targets scraped from the control plane to appear in the Azure Monitor workspace.
Apply the ConfigMap using thekubectl applycommand.
kubectl apply
kubectl apply -f configmap-controlplane.yaml
kubectl apply -f configmap-controlplane.yaml
After you apply the configuration, it takes several minutes for the metrics from the specified targets scraped from the control plane to appear in the Azure Monitor workspace.
Troubleshoot control plane metrics issues
Make sure the feature flagAzureMonitorMetricsControlPlanePreviewis enabled and theama-metricspods are running.
AzureMonitorMetricsControlPlanePreview
ama-metrics
Note
Thetroubleshooting methodsfor Azure managed service Prometheus don't directly translate here, as the components scraping the control plane aren't present in the managed Prometheus add-on.
ConfigMap formatting: Make sure you're using proper formatting in the ConfigMap and that the fields, specificallydefault-targets-metrics-keep-list,minimal-ingestion-profile, anddefault-scrape-settings-enabled, are correctly populated with their intended values.
default-targets-metrics-keep-list
minimal-ingestion-profile
default-scrape-settings-enabled
Isolate control plane from data plane: Start by setting some of thenode related metricstotrueand verify the metrics are being forwarded to the workspace. This helps determine if the issue is specific to scraping control plane metrics.
true
Events ingested: Once you apply the changes, you can open metrics explorer from theAzure Monitor overviewpage or from theMonitoringsection of the selected cluster and check for an increase or decrease in the number of events ingested per minute. It should help you determine if a specific metric is missing or if all metrics are missing.
Specific metric isn't exposed: There are cases where metrics are documented, but aren't exposed from the target and aren't forwarded to the Azure Monitor workspace. In this case, it's necessary to verify other metrics are being forwarded to the workspace.
Note
If you are looking to collect the apiserver_request_duration_seconds or another bucket metric, you need to specify all the series in the histogram family
controlplane-apiserver = "apiserver_request_duration_seconds_bucket|apiserver_request_duration_seconds_sum|apiserver_request_duration_seconds_count"
controlplane-apiserver = "apiserver_request_duration_seconds_bucket|apiserver_request_duration_seconds_sum|apiserver_request_duration_seconds_count"
No access to the Azure Monitor workspace: When you enable the add-on, you might specify an existing workspace that you don't have access to. In that case, it might look like the metrics aren't being collected and forwarded. Make sure that you create a new workspace while enabling the add-on or while creating the cluster.
Disable control plane metrics on your AKS cluster
You can disable control plane metrics at any time by disabling the managed Prometheus add-on and unregistering theAzureMonitorMetricsControlPlanePreviewfeature flag.
AzureMonitorMetricsControlPlanePreview
Remove the metrics add-on that scrapes Prometheus metrics using theaz aks updatecommand.az aks update --disable-azure-monitor-metrics --name $CLUSTER_NAME --resource-group $RESOURCE_GROUP
Remove the metrics add-on that scrapes Prometheus metrics using theaz aks updatecommand.
az aks update
az aks update --disable-azure-monitor-metrics --name $CLUSTER_NAME --resource-group $RESOURCE_GROUP
az aks update --disable-azure-monitor-metrics --name $CLUSTER_NAME --resource-group $RESOURCE_GROUP
Disable scraping of control plane metrics on the AKS cluster by unregistering theAzureMonitorMetricsControlPlanePreviewfeature flag using theaz feature unregistercommand.az feature unregister "Microsoft.ContainerService" --name "AzureMonitorMetricsControlPlanePreview"
Disable scraping of control plane metrics on the AKS cluster by unregistering theAzureMonitorMetricsControlPlanePreviewfeature flag using theaz feature unregistercommand.
AzureMonitorMetricsControlPlanePreview
az feature unregister
az feature unregister "Microsoft.ContainerService" --name "AzureMonitorMetricsControlPlanePreview"
az feature unregister "Microsoft.ContainerService" --name "AzureMonitorMetricsControlPlanePreview"
FAQ
Can I scrape control plane metrics with self hosted Prometheus?
No, you currently can't scrape control plane metrics with self hosted Prometheus. Self hosted Prometheus can only scrape the single instance depending on the load balancer. The metrics aren't reliable, as there are often multiple replicas of the control plane metrics are only visible through managed Prometheus
Why isn't the user agent available through the control plane metrics?
Control plane metrics in Kubernetesdon't have the user agent. The user agent is only available through the control plane logs available in thediagnostic settings.
Next steps
For more information about monitoring AKS, seeMonitor Azure Kubernetes Service (AKS).
Azure Kubernetes Service

Additional resources