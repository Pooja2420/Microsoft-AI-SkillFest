Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Manage variable groups
Article
2024-08-29
28 contributors
In this article
Azure DevOps Services | Azure DevOps Server 2022 - Azure DevOps Server 2019
This article explains how to create and use variable groups in Azure Pipelines. Variable groups store values and secrets that you can pass into a YAML pipeline or make available across multiple pipelines in a project.
Secret variables in variable groups areprotected resources. You can add combinations of approvals, checks, and pipeline permissions to limit access to secret variables in a variable group. Access to nonsecret variables isn't limited by approvals, checks, or pipeline permissions.
Variable groups follow thelibrary security modelfor roles and permissions.
Prerequisites
An Azure DevOps Services organization and project where you have permissions to create pipelines and variables.
A project in your Azure DevOps organization or Azure DevOps Server collection.Create a projectif you don't have one.
If you're using the Azure DevOps CLI, you need Azure CLI version 2.30.0 or higher with the Azure DevOps CLI extension. For more information, seeGet started with Azure DevOps CLI.
An Azure DevOps Server collection and project where you have permissions to create pipelines and variables.
A project in your Azure DevOps organization or Azure DevOps Server collection.Create a projectif you don't have one.
Set up the CLI
If you're using the Azure DevOps CLI, you need to set up the CLI to work with your Azure DevOps organization and project.
Sign in to your Azure DevOps organization by using theaz logincommand.az login
Sign in to your Azure DevOps organization by using theaz logincommand.
az login
az login
If prompted, select your subscription from the list displayed in your terminal window.
If prompted, select your subscription from the list displayed in your terminal window.
Ensure you're running the latest version of the Azure CLI and the Azure DevOps extension by using the following commands.az upgrade
az extension add --name azure-devops --upgrade
Ensure you're running the latest version of the Azure CLI and the Azure DevOps extension by using the following commands.
az upgrade
az extension add --name azure-devops --upgrade
az upgrade
az extension add --name azure-devops --upgrade
In Azure DevOps CLI commands, you can set the default organization and project by using:az devops configure --defaults organization=<YourOrganizationURL> project=<Project Name or ID>If you haven't set the default organization and project, you can use thedetect=trueparameter in your commands to automatically detect the organization and project context based on your current directory. If the defaults aren't configured or detected, you need to explicitly specify theorgandprojectparameters in your commands.
In Azure DevOps CLI commands, you can set the default organization and project by using:
az devops configure --defaults organization=<YourOrganizationURL> project=<Project Name or ID>
az devops configure --defaults organization=<YourOrganizationURL> project=<Project Name or ID>
If you haven't set the default organization and project, you can use thedetect=trueparameter in your commands to automatically detect the organization and project context based on your current directory. If the defaults aren't configured or detected, you need to explicitly specify theorgandprojectparameters in your commands.
detect=true
org
project
Create a variable group
You can create variable groups for the pipeline runs in your project.
Note
To create a secret variable group to link secrets from an Azure key vault as variables, follow the instructions atLink a variable group to secrets in Azure Key Vault.
Azure Pipelines UI
Azure DevOps CLI
In your Azure DevOps project, selectPipelines>Libraryfrom the left menu.
In your Azure DevOps project, selectPipelines>Libraryfrom the left menu.
On theLibrarypage, select+ Variable group.
On theLibrarypage, select+ Variable group.

On the new variable group page, underProperties, enter a name and optional description for the variable group.
On the new variable group page, underProperties, enter a name and optional description for the variable group.
UnderVariables, select+ Add, and then enter a variable name and value to include in the group. If you want to encrypt and securely store the value, select the lock icon next to the variable.
UnderVariables, select+ Add, and then enter a variable name and value to include in the group. If you want to encrypt and securely store the value, select the lock icon next to the variable.
Select+ Addto add each new variable. When you finish adding variables, selectSave.
Select+ Addto add each new variable. When you finish adding variables, selectSave.

You can now use this variable group in project pipelines.
In Azure DevOps Services, you can create variable groups by using the Azure DevOps CLI.
Azure DevOps CLI commands aren't supported for Azure DevOps Server.
To create a variable group, use theaz pipelines variable-group createcommand.
For example, the following command creates a variable group namedhome-office-config, adds the variablesapp-location=home-officeandapp-name=contoso, and outputs results in YAML format.
home-office-config
app-location=home-office
app-name=contoso
az pipelines variable-group create --name home-office-config
                                   --variables app-location=home-office app-name=contoso
                                   --output yaml
az pipelines variable-group create --name home-office-config
                                   --variables app-location=home-office app-name=contoso
                                   --output yaml
Output:
authorized: false
description: null
id: 5
name: home-office-config
providerData: null
type: Vsts
variables:
  app-location:
    isSecret: null
    value: home-office
  app-name:
    isSecret: null
    value: contoso
authorized: false
description: null
id: 5
name: home-office-config
providerData: null
type: Vsts
variables:
  app-location:
    isSecret: null
    value: home-office
  app-name:
    isSecret: null
    value: contoso
Update variable groups
Azure Pipelines UI
Azure DevOps CLI
You can update variable groups by using the Azure Pipelines user interface.
In your Azure DevOps project, selectPipelines>Libraryfrom the left menu.
On theLibrarypage, select the variable group you want to update. You can also hover over the variable group listing, select theMore optionsicon, and selectEditfrom the menu.
On the variable group page, change any of the properties, and then selectSave.
In Azure DevOps Services, you can update variable groups by using the Azure DevOps CLI.
Azure DevOps CLI commands aren't supported for Azure DevOps Server.
List variable groups
To update a variable group or the variables within it by using the Azure DevOps CLI, you use the variable groupgroup-id.
group-id
You can get the value of the variable group ID from the output of the variable group creation command, or use theaz pipelines variable-group listcommand.
For example, the following command lists the first three project variable groups in ascending order and returns the results, including variable group ID, in table format.
az pipelines variable-group list --top 3 --query-order Asc --output table
az pipelines variable-group list --top 3 --query-order Asc --output table
Output:
ID    Name               Type    Number of Variables
----  -----------------  ------  ---------------------
1     myvariables        Vsts    2
2     newvariables       Vsts    4
3     new-app-variables  Vsts    3
ID    Name               Type    Number of Variables
----  -----------------  ------  ---------------------
1     myvariables        Vsts    2
2     newvariables       Vsts    4
3     new-app-variables  Vsts    3
Update a variable group
To update a variable group, use theaz pipelines variable-group updatecommand.
Note
You can't update a variable group of typeAzureKeyVaultusing the Azure DevOps CLI.
AzureKeyVault
For example, the following command updates the variable group with ID4to change thenameanddescription, and outputs results in table format.
4
name
description
az pipelines variable-group update --group-id 4
                                   --name my-new-variables
                                   --description "New home office variables"
                                   --output table
az pipelines variable-group update --group-id 4
                                   --name my-new-variables
                                   --description "New home office variables"
                                   --output table
Output:
ID    Name              Description               Is Authorized  Number of Variables
----  ----------------  ------------------------- -------------  -------------------
4     my-new-variables  New home office variables false          2
ID    Name              Description               Is Authorized  Number of Variables
----  ----------------  ------------------------- -------------  -------------------
4     my-new-variables  New home office variables false          2
Show details for a variable group
You can use theaz pipelines variable-group showcommand to show details for a variable group. For example, the following command shows details for the variable group with ID4and returns the results in YAML format.
4
az pipelines variable-group show --group-id 4 --output yaml
az pipelines variable-group show --group-id 4 --output yaml
Output:
authorized: false
description: Variables for my new app
id: 4
name: my-new-variables
providerData: null
type: Vsts
variables:
  app-location:
    isSecret: null
    value: home-office
  app-name:
    isSecret: null
    value: contoso
authorized: false
description: Variables for my new app
id: 4
name: my-new-variables
providerData: null
type: Vsts
variables:
  app-location:
    isSecret: null
    value: home-office
  app-name:
    isSecret: null
    value: contoso
Delete a variable group
Azure Pipelines UI
Azure DevOps CLI
You can delete variable groups in the Azure Pipelines user interface.
In your Azure DevOps project, selectPipelines>Libraryfrom the left menu.
On theLibrarypage, hover over the variable group you want to delete and select theMore optionsicon.
SelectDeletefrom the menu, and then selectDeleteon the confirmation screen.
In Azure DevOps Services, you can delete variable groups by using the Azure DevOps CLI.
Azure DevOps CLI commands aren't supported for Azure DevOps Server.
To delete a variable group, use theaz pipelines variable-group deletecommand. For example, the following command deletes the variable group with ID1and doesn't prompt for confirmation.
1
az pipelines variable-group delete --group-id 1 --yes
az pipelines variable-group delete --group-id 1 --yes
Manage variables in variable groups
Azure Pipelines UI
Azure DevOps CLI
You can change, add, or delete variables in variable groups by using the Azure Pipelines user interface.
In your Azure DevOps project, selectPipelines>Libraryfrom the left menu.
On theLibrarypage, select the variable group you want to update. You can also hover over the variable group listing, select theMore optionsicon, and selectEditfrom the menu.
On the variable group page, you can:Change any of the variable names or values.Delete any of the variables by selecting the garbage can icon next to the variable name.Change variables to secret or nonsecret by selecting the lock icon next to the variable value.Add new variables by selecting+ Add.
Change any of the variable names or values.
Delete any of the variables by selecting the garbage can icon next to the variable name.
Change variables to secret or nonsecret by selecting the lock icon next to the variable value.
Add new variables by selecting+ Add.
After making changes, selectSave.
In Azure DevOps Services, you can manage variables in variable groups by using the Azure DevOps CLI.
Azure DevOps CLI commands aren't supported for Azure DevOps Server.
List variables in a variable group
To list the variables in a variable group, use theaz pipelines variable-group variable listcommand. For example, the following command lists all the variables in the variable group with ID4and shows the result in table format.
4
az pipelines variable-group variable list --group-id 4 --output table
az pipelines variable-group variable list --group-id 4 --output table
Output:
Name            Is Secret    Value
--------------  -----------  -----------
app-location    False        home-office
app-name        False        contoso
Name            Is Secret    Value
--------------  -----------  -----------
app-location    False        home-office
app-name        False        contoso
Add variables to a variable group
To add a variable to a variable group, use theaz pipelines variable-group variable createcommand.
For example, the following command creates a new variable namedrequires-loginwith a default value oftruein the variable group with ID4. The result is shown in table format.
requires-login
true
4
az pipelines variable-group variable create --group-id 4
                                            --name requires-login
                                            --value true
                                            --output table
az pipelines variable-group variable create --group-id 4
                                            --name requires-login
                                            --value true
                                            --output table
Output:
Name            Is Secret    Value
--------------  -----------  -------
requires-login  False        true
Name            Is Secret    Value
--------------  -----------  -------
requires-login  False        true
Update variables in a variable group
To update variables in a variable group, use theaz pipelines variable-group variable updatecommand.
Note
You can't update variables in a variable group of typeAzureKeyVaultusing the Azure DevOps CLI.  You can update variables via theaz keyvaultcommands.
AzureKeyVault
az keyvault
For example, the following command updates therequires-loginvariable with the new valuefalsein the variable group with ID4, and shows the result in YAML format. The command specifies that the variable is asecret.
requires-login
false
4
secret
az pipelines variable-group variable update --group-id 4
                                            --name requires-login
                                            --value false
                                            --secret true
                                            --output yaml
az pipelines variable-group variable update --group-id 4
                                            --name requires-login
                                            --value false
                                            --secret true
                                            --output yaml
The output shows the value asnullinstead offalsebecause it's a secret hidden value.
null
false
requires-login:
  isSecret: true
  value: null
requires-login:
  isSecret: true
  value: null
Manage secret variables
To manage secret variables, use theaz pipelines variable-group variable updatecommand with the following parameters:
secret: Set totrueto indicate that the variable's value is kept secret.
secret
true
prompt-value: Set totrueto update the value of a secret variable by using an environment variable or prompt via standard input.
prompt-value
true
value: For secret variables, use theprompt-valueparameter to be prompted to enter the value via standard input. For noninteractive consoles, you can pick up the environment variable prefixed withAZURE_DEVOPS_EXT_PIPELINE_VAR_. For example, you can input a variable namedMySecretby using the environment variableAZURE_DEVOPS_EXT_PIPELINE_VAR_MySecret.
value
prompt-value
AZURE_DEVOPS_EXT_PIPELINE_VAR_
MySecret
AZURE_DEVOPS_EXT_PIPELINE_VAR_MySecret
Delete variables from a variable group
To delete a variable from a variable group, use theaz pipelines variable-group variable deletecommand. For example, the following command deletes therequires-loginvariable from the variable group with ID4.
requires-login
4
az pipelines variable-group variable delete --group-id 4 --name requires-login
az pipelines variable-group variable delete --group-id 4 --name requires-login
The command prompts for confirmation because that is the default. Use the--yesparameter to skip the confirmation prompt.
--yes
Are you sure you want to delete this variable? (y/n): y
Deleted variable 'requires-login' successfully.
Are you sure you want to delete this variable? (y/n): y
Deleted variable 'requires-login' successfully.
Use variable groups in pipelines
You can use variable groups in YAML or Classic pipelines. Changes that you make to a variable group are automatically available to all the definitions or stages the variable group is linked to.
YAML
Classic
If you only name the variable group in YAML pipelines, anyone who can push code to your repository could extract the contents of secrets in the variable group. Therefore, to use a variable group with YAML pipelines, you must authorize the pipeline to use the group. You can authorize a pipeline to use a variable group in the Azure Pipelines user interface or by using the Azure DevOps CLI.
Authorization via the Pipelines UI
You can authorize pipelines to use your variable groups by using the Azure Pipelines user interface.
In your Azure DevOps project, selectPipelines>Libraryfrom the left menu.
On theLibrarypage, select the variable group you want to authorize.
On the variable group page, select thePipeline permissionstab.
On thePipeline permissionsscreen, select+and then select a pipeline to authorize. Or, select theMore actionsicon, selectOpen access, and selectOpen accessagain to confirm.
Selecting a pipeline authorizes that pipeline to use the variable group. To authorize another pipeline, select the+icon again. SelectingOpen accessauthorizes all project pipelines to use the variable group. Open access might be a good option if you don't have any secrets in the group.
Another way to authorize a variable group is to select the pipeline, selectEdit, and then queue a build manually. You see a resource authorization error and can then explicitly add the pipeline as an authorized user of the variable group.
Authorization via the Azure DevOps CLI
In Azure DevOps Services, you can authorize variable groups by using the Azure DevOps CLI.
Azure DevOps CLI commands aren't supported for Azure DevOps Server.
To authorize all project pipelines to use the variable group, set theauthorizeparameter in theaz pipelines variable-group createcommand totrue. This open access might be a good option if you don't have any secrets in the group.
authorize
true
Link a variable group to a pipeline
Once you authorize a YAML pipeline to use a variable group, you can use variables within the group in the pipeline.
To use variables from a variable group, add a reference to the group name in your YAML pipeline file.
variables:
- group: my-variable-group
variables:
- group: my-variable-group
You can reference multiple variable groups in the same pipeline. If multiple variable groups include the variables with the same name, the last variable group that uses the variable in the file sets the variable's value. For more information about precedence of variables, seeExpansion of variables.
You can also reference a variable group in a template. The followingvariables.ymltemplate file references the variable groupmy-variable-group. The variable group includes a variable namedmyhello.
my-variable-group
myhello
variables:
- group: my-variable-group
variables:
- group: my-variable-group
The YAML pipeline references thevariables.ymltemplate, and uses the variable$(myhello)from the variable groupmy-variable-group.
$(myhello)
my-variable-group
stages:
- stage: MyStage
  variables:
  - template: variables.yml
  jobs:
  - job: Test
    steps:
    - script: echo $(myhello)
stages:
- stage: MyStage
  variables:
  - template: variables.yml
  jobs:
  - job: Test
    steps:
    - script: echo $(myhello)
Use variables in a linked variable group
You access the variable values in a linked variable group the same way you access variables you define within the pipeline. For example, to access the value of a variable namedcustomerin a variable group linked to the pipeline, you can use$(customer)in a task parameter or a script.
customer
$(customer)
If you use both standalone variables and variable groups in your pipeline file, use thename-valuesyntax for the standalone variables.
name
value
variables:
- group: my-variable-group
- name: my-standalone-variable
  value: 'my-standalone-variable-value'
variables:
- group: my-variable-group
- name: my-standalone-variable
  value: 'my-standalone-variable-value'
To reference a variable in a variable group, you can use macro syntax or a runtime expression. In the following examples, the groupmy-variable-grouphas a variable namedmyhello.
my-variable-group
myhello
To use a runtime expression:
variables:
- group: my-variable-group
- name: my-passed-variable
  value: $[variables.myhello]
- script: echo $(my-passed-variable)
variables:
- group: my-variable-group
- name: my-passed-variable
  value: $[variables.myhello]
- script: echo $(my-passed-variable)
To use macro syntax:
variables:
- group: my-variable-group

steps:
- script: echo $(myhello)
variables:
- group: my-variable-group

steps:
- script: echo $(myhello)
You can't access secret variables, including encrypted variables and key vault variables, directly in scripts. You must pass these variables as arguments to a task. For more information, seeSecret variables.
Use variable groups in Classic pipelines
Classic pipelines can use variable groups without separate authorization. To use a variable group:
Open your Classic pipeline.
Open your Classic pipeline.
SelectVariables>Variable groups, and then selectLink variable group.In a build pipeline, you see a list of available groups. Select a variable group and selectLink. All the variables in the group are available for use within the pipeline.In a release pipeline, you also see a dropdown list of stages in the pipeline. Link the variable group to the pipeline itself, or to one or more specific stages of the release pipeline. If you link to one or more stages, the variables from the variable group are scoped to these stages and aren't accessible in the other stages of the release.
SelectVariables>Variable groups, and then selectLink variable group.
In a build pipeline, you see a list of available groups. Select a variable group and selectLink. All the variables in the group are available for use within the pipeline.
In a build pipeline, you see a list of available groups. Select a variable group and selectLink. All the variables in the group are available for use within the pipeline.
In a release pipeline, you also see a dropdown list of stages in the pipeline. Link the variable group to the pipeline itself, or to one or more specific stages of the release pipeline. If you link to one or more stages, the variables from the variable group are scoped to these stages and aren't accessible in the other stages of the release.
In a release pipeline, you also see a dropdown list of stages in the pipeline. Link the variable group to the pipeline itself, or to one or more specific stages of the release pipeline. If you link to one or more stages, the variables from the variable group are scoped to these stages and aren't accessible in the other stages of the release.

When you set a variable with the same name in multiple scopes, the following precedence is used, highest first:
Variable set at queue time
Variable set in the pipeline
Variable set in the variable group
For more information about precedence of variables, seeExpansion of variables.
Note
Variables in different groups that are linked to a pipeline in the same scope (for example, job or stage) will collide
and the result may be unpredictable. Ensure that you use different names for variables across all your variable groups.
Related articles
Define variables
Define custom variables
Use secret and nonsecret variables in variable groups
Use Azure Key Vault secrets in Azure Pipelines
Add approvals and checks
Feedback
Was this page helpful?
Additional resources