Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
in~ operator
Article
2024-08-12
4 contributors
In this article
Applies to: âMicrosoft FabricâAzure Data ExplorerâAzure MonitorâMicrosoft Sentinel
Filters a record set for data with a case-insensitive string.
The following table provides a comparison of theinoperators:
in
true
in
"abc" in ("123", "345", "abc")
!in
"bca" !in ("123", "345", "abc")
in~
"Abc" in~ ("123", "345", "abc")
!in~
"bCa" !in~ ("123", "345", "ABC")
Note
Nested arrays are flattened into a single list of values. For example,x in (dynamic([1,[2,3]]))becomesx in (1,2,3).
x in (dynamic([1,[2,3]]))
x in (1,2,3)
For further information about other operators and to determine which operator is most appropriate for your query, seedatatype string operators.
Case-insensitive operators are currently supported only for ASCII-text. For non-ASCII comparison, use thetolower()function.
Performance tips
Note
When more than 128 search terms are used, text index lookup optimization is disabled, which might lead to reduced query performance.
Note
Performance depends on the type of search and the structure of the data. For best practices, seeQuery best practices.
When possible, use the case-sensitivein.
Syntax
T|wherecolin~(expression,...)
|
where
in~
(
,
)
Learn more aboutsyntax conventions.
Parameters
string
string
Returns
Rows inTfor which the predicate istrue.
true
Examples
List of scalars
The following query shows how to usein~with a comma-separated list of scalar values.
in~
Run the query
StormEvents 
| where State in~ ("FLORIDA", "georgia", "NEW YORK") 
| count
StormEvents 
| where State in~ ("FLORIDA", "georgia", "NEW YORK") 
| count
Output
Dynamic array
The following query shows how to usein~with a dynamic array.
in~
Run the query
StormEvents 
| where State in~ (dynamic(["FLORIDA", "georgia", "NEW YORK"])) 
| count
StormEvents 
| where State in~ (dynamic(["FLORIDA", "georgia", "NEW YORK"])) 
| count
Output
The same query can also be written with alet statement.
Run the query
let states = dynamic(["FLORIDA", "georgia", "NEW YORK"]);
StormEvents 
| where State has_any (states)
| summarize count() by State
let states = dynamic(["FLORIDA", "georgia", "NEW YORK"]);
StormEvents 
| where State has_any (states)
| summarize count() by State
Output
Tabular expression
The following query shows how to usein~with an inline tabular expression. Notice that an inline tabular expression must be enclosed with double parentheses.
in~
Run the query
StormEvents 
| where State in~ (PopulationData | where Population > 5000000 | project State)
| summarize count() by State
StormEvents 
| where State in~ (PopulationData | where Population > 5000000 | project State)
| summarize count() by State
Output
The same query can also be written with alet statement. Notice that the double parentheses as provided in the last example aren't necessary in this case.
Run the query
let large_states = PopulationData | where Population > 5000000 | project State;
StormEvents 
| where State in~ (large_states)
| summarize count() by State
let large_states = PopulationData | where Population > 5000000 | project State;
StormEvents 
| where State in~ (large_states)
| summarize count() by State
Output
Feedback
Was this page helpful?
Additional resources