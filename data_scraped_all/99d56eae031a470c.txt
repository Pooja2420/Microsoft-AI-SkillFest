Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Install VM watch (preview)
Article
2025-01-13
1 contributor
In this article
You can enable VM watch by using anAzure Resource Manager template (ARM template),PowerShell, or theAzure CLIon Azure virtual machines (VMs) and Azure virtual machine scale sets. You can enable VM watch on both Linux and Windows virtual machines. VM watch is delivered through theApplication Health VM extensionfor ease of adoption.
The code in this article details the steps to install the Application Health VM extension and enable VM watch. Note that the code segments require user input. Any labels within angle brackets (<>) in the code need to be replaced with values that are specific to your installation. Here's a list of parameters with instructions on what to replace them with.
<>
<your subscription id>
<your vm name>
<your resource group name>
<your location>
<your extension name
<application health extension type>
<your vm scale set name>
Prerequisites
1. Register the feature
Register for adopting VM watch by running the following commands via the Azure CLI:
az feature register --name VMWatchPreview --namespace Microsoft.Compute --subscription <your subscription id>
az provider register --namespace Microsoft.Compute --subscription <your subscription id>
az feature register --name VMWatchPreview --namespace Microsoft.Compute --subscription <your subscription id>
az provider register --namespace Microsoft.Compute --subscription <your subscription id>
Validate that you successfully registered for the VM watch feature by running the following command:
az feature show --namespace Microsoft.Compute --name VMWatchPreview --subscription <your subscription id>
az feature show --namespace Microsoft.Compute --name VMWatchPreview --subscription <your subscription id>
2. Ensure that a VM is installed
For information on how to create a VM and/or virtual machine scale set, see thequickstart guide for Windowsand thequickstart guide for Linux.
Important
If the Application Health extension is already installed on the VM, ensure that the settingsautoUpgradeMinorVersionandenableAutomaticUpgradeare set totrue.
autoUpgradeMinorVersion
enableAutomaticUpgrade
true
Install VM watch on an Azure virtual machine
Important
The code segment is identical for both Windows and Linux, except for the value of the parameter<application health extension type>passed in to the extension type. Replace<application health extension type>with"ApplicationHealthLinux"for Linux installations and"ApplicationHealthWindows"for Windows installations.
<application health extension type>
<application health extension type>
"ApplicationHealthLinux"
"ApplicationHealthWindows"
CLI
PowerShell
ARM template
az vm extension set --resource-group <your resource group> --vm-name <your vm name> --name <application health extension type> --publisher Microsoft.ManagedServices --version 2.0 --settings '{"vmWatchSettings": {"enabled": true}}'â¯--enable-auto-upgrade true
az vm extension set --resource-group <your resource group> --vm-name <your vm name> --name <application health extension type> --publisher Microsoft.ManagedServices --version 2.0 --settings '{"vmWatchSettings": {"enabled": true}}'â¯--enable-auto-upgrade true
Set-AzVMExtension -ResourceGroupName "<your resource group>" -Location "<your vm region>" -VMName "<your vm name>" -Name "<your extension name>" -Publisher "Microsoft.ManagedServices" -ExtensionType "<application health extension type>" -TypeHandlerVersion "2.0" -Settings @{"vmWatchSettings" = @{"enabled" = $True}} -EnableAutomaticUpgrade $True
Set-AzVMExtension -ResourceGroupName "<your resource group>" -Location "<your vm region>" -VMName "<your vm name>" -Name "<your extension name>" -Publisher "Microsoft.ManagedServices" -ExtensionType "<application health extension type>" -TypeHandlerVersion "2.0" -Settings @{"vmWatchSettings" = @{"enabled" = $True}} -EnableAutomaticUpgrade $True
â¯â¯â¯â¯â¯â¯â¯â¯"type":â¯"Microsoft.Compute/virtualMachines/extensions", 
â¯â¯â¯â¯â¯â¯â¯â¯"apiVersion":â¯"2019-07-01", 
â¯â¯â¯â¯â¯â¯â¯â¯"name":â¯"[concat('<your vm name>',â¯'/',â¯'<your extension name')]", 
â¯â¯â¯â¯â¯â¯â¯â¯"location":â¯"<your vm region>", 
â¯â¯â¯â¯â¯â¯â¯â¯"dependsOn":â¯[ 
â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯"[resourceId('Microsoft.Compute/virtualMachines',â¯parameters('<your vm name>'))]" 
â¯â¯â¯â¯â¯â¯â¯â¯], 

â¯â¯â¯â¯â¯â¯â¯â¯"properties":â¯{ 
            "enableAutomaticUpgrade":â¯true, 
â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯"publisher":â¯"Microsoft.ManagedServices", 
â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯"typeHandlerVersion":â¯"2.0", 
â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯"type":â¯"<application health extension type>", 
â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯"settings":â¯{ 
â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯"vmWatchSettings":â¯{ 
â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯"enabled":â¯true
                 } 
             } 
         }
â¯â¯â¯â¯â¯â¯â¯â¯"type":â¯"Microsoft.Compute/virtualMachines/extensions", 
â¯â¯â¯â¯â¯â¯â¯â¯"apiVersion":â¯"2019-07-01", 
â¯â¯â¯â¯â¯â¯â¯â¯"name":â¯"[concat('<your vm name>',â¯'/',â¯'<your extension name')]", 
â¯â¯â¯â¯â¯â¯â¯â¯"location":â¯"<your vm region>", 
â¯â¯â¯â¯â¯â¯â¯â¯"dependsOn":â¯[ 
â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯"[resourceId('Microsoft.Compute/virtualMachines',â¯parameters('<your vm name>'))]" 
â¯â¯â¯â¯â¯â¯â¯â¯], 

â¯â¯â¯â¯â¯â¯â¯â¯"properties":â¯{ 
            "enableAutomaticUpgrade":â¯true, 
â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯"publisher":â¯"Microsoft.ManagedServices", 
â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯"typeHandlerVersion":â¯"2.0", 
â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯"type":â¯"<application health extension type>", 
â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯"settings":â¯{ 
â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯"vmWatchSettings":â¯{ 
â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯"enabled":â¯true
                 } 
             } 
         }
Validate that the Application Health VM extension is installed on the Azure VM
Go to theAzure portaland confirm that the Application Health VM extension was successfully installed.
The following screenshot shows a Windows installation.

The following screenshot shows a Linux installation.

To confirm that VM watch was enabled on this VM, go back to the overview page and select the JSON view for the VM. Ensure that the configuration exists in the JSON.
"settings": {  
      "vmWatchSettings": {  
          "enabled": true  
      }
  }
"settings": {  
      "vmWatchSettings": {  
          "enabled": true  
      }
  }
Install VM watch on an Azure virtual machine scale set
Important
The code segment is identical for both Windows and Linux, except for the value of the parameter<application health extension type>passed in to the extension type. Replace<application health extension type>with"ApplicationHealthLinux"for Linux installations and"ApplicationHealthWindows"for Windows installations.
<application health extension type>
<application health extension type>
"ApplicationHealthLinux"
"ApplicationHealthWindows"
CLI
PowerShell
ARM template
az vmss extension set --resource-group '<your resource group name>' --vmss-name '<your vm scale set name>' --name <application health extension type> --publisher Microsoft.ManagedServices --version 2.0 --settings '{"vmWatchSettings": {"enabled": true}}'â¯--enable-auto-upgrade true
az vmss extension set --resource-group '<your resource group name>' --vmss-name '<your vm scale set name>' --name <application health extension type> --publisher Microsoft.ManagedServices --version 2.0 --settings '{"vmWatchSettings": {"enabled": true}}'â¯--enable-auto-upgrade true
### Define the scale set variables 
$vmScaleSetName = "<your vm scale set name>" 
$vmScaleSetResourceGroup = "<your resource group name>" 

### Define the setting to enable VM watch 
$publicConfig = @{"vmWatchSettings" = @{"enabled" = $true}} 
$extensionName = "<your extension name>" 
$extensionType = "<application health extension type>" 
$publisher = "Microsoft.ManagedServices" 

### Get the scale set object 
$vmScaleSet = Get-AzVmss ` 
  -ResourceGroupName $vmScaleSetResourceGroup ` 
  -VMScaleSetName $vmScaleSetName

### Add the Application Health extension to the scale set model 
Add-AzVmssExtension -VirtualMachineScaleSet $vmScaleSet ` 
  -Name $extensionName ` 
  -Publisher $publisher ` 
  -Setting $publicConfig ` 
  -Type $extensionType ` 
  -TypeHandlerVersion "2.0" ` 
  -EnableAutomaticUpgrade $True

### Update the scale set 
Update-AzVmss -ResourceGroupName $vmScaleSetResourceGroup ` 
  -Name $vmScaleSetName ` 
  -VirtualMachineScaleSet $vmScaleSet

### Upgrade instances to install the extension 
Update-AzVmssInstance -ResourceGroupName $vmScaleSetResourceGroup ` 
  -VMScaleSetName $vmScaleSetName ` 
  -InstanceId '*'
### Define the scale set variables 
$vmScaleSetName = "<your vm scale set name>" 
$vmScaleSetResourceGroup = "<your resource group name>" 

### Define the setting to enable VM watch 
$publicConfig = @{"vmWatchSettings" = @{"enabled" = $true}} 
$extensionName = "<your extension name>" 
$extensionType = "<application health extension type>" 
$publisher = "Microsoft.ManagedServices" 

### Get the scale set object 
$vmScaleSet = Get-AzVmss ` 
  -ResourceGroupName $vmScaleSetResourceGroup ` 
  -VMScaleSetName $vmScaleSetName

### Add the Application Health extension to the scale set model 
Add-AzVmssExtension -VirtualMachineScaleSet $vmScaleSet ` 
  -Name $extensionName ` 
  -Publisher $publisher ` 
  -Setting $publicConfig ` 
  -Type $extensionType ` 
  -TypeHandlerVersion "2.0" ` 
  -EnableAutomaticUpgrade $True

### Update the scale set 
Update-AzVmss -ResourceGroupName $vmScaleSetResourceGroup ` 
  -Name $vmScaleSetName ` 
  -VirtualMachineScaleSet $vmScaleSet

### Upgrade instances to install the extension 
Update-AzVmssInstance -ResourceGroupName $vmScaleSetResourceGroup ` 
  -VMScaleSetName $vmScaleSetName ` 
  -InstanceId '*'
"type": "Microsoft.Compute/virtualMachineScaleSets",
   "apiVersion": "2024-07-01",
   "name": "<your vm scale set name>",
   "location": "<your vm region>",  
   "properties": {  
        "virtualMachineProfile": {
            "extensionProfile": {
               "extensions": [
                    {
                        "name": "[concat(variables('<your vm scale set name>'), '/', '<your extension name>')]",  
                        "properties": {  
                            "publisher": "Microsoft.ManagedServices",  
                            "type": "<application health extension type>",  
                            "typeHandlerVersion": "2.0",  
                            "autoUpgradeMinorVersion": true,
                            "enableAutomaticUpgrade": true,
                            "settings": {  
                                "vmWatchSettings": {  
                                    "enabled": true  
                                }  
                            }  
                        } 
                    }  
                ]  
            }  
        }  
    }
"type": "Microsoft.Compute/virtualMachineScaleSets",
   "apiVersion": "2024-07-01",
   "name": "<your vm scale set name>",
   "location": "<your vm region>",  
   "properties": {  
        "virtualMachineProfile": {
            "extensionProfile": {
               "extensions": [
                    {
                        "name": "[concat(variables('<your vm scale set name>'), '/', '<your extension name>')]",  
                        "properties": {  
                            "publisher": "Microsoft.ManagedServices",  
                            "type": "<application health extension type>",  
                            "typeHandlerVersion": "2.0",  
                            "autoUpgradeMinorVersion": true,
                            "enableAutomaticUpgrade": true,
                            "settings": {  
                                "vmWatchSettings": {  
                                    "enabled": true  
                                }  
                            }  
                        } 
                    }  
                ]  
            }  
        }  
    }
Validate that the Application Health VM extension is installed in the virtual machine scale set
Go to theAzure portaland confirm that the Application Health VM extension was successfully installed.
The following screenshot shows a Windows installation.

The following screenshot shows a Linux installation.

To confirm that VM watch was enabled on this scale set, go back to the overview page and select the JSON view for the scale set. Ensure that the configuration exists in the JSON.
"settings": {  
      "vmWatchSettings": {  
          "enabled": true  
      }
  }
"settings": {  
      "vmWatchSettings": {  
          "enabled": true  
      }
  }
Related content
Application Health extension
Azure CLI
Azure portal
Feedback
Was this page helpful?
Additional resources