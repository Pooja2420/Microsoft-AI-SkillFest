Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Starter Resource Graph query samples
Article
2024-08-27
12 contributors
In this article
The first step to understanding queries with Azure Resource Graph is a basic understanding of theQuery Language. If you aren't already familiar withKusto Query Language (KQL), it's recommended to review theKQL tutorialto understand how to compose requests for the
resources you're looking for.
This article uses the following starter queries:
Count Azure resources
Count Key Vault resources
List resources sorted by name
Show all virtual machines ordered by name in descending order
Show first five virtual machines by name and their OS type
Count virtual machines by OS type
Show resources that contain storage
List all Azure virtual network subnets
List all public IP addresses
Count resources that have IP addresses configured by subscription
List resources with a specific tag value
List all storage accounts with specific tag value
List all tags and their values
Show unassociated network security groups
List Azure Monitor alerts ordered by severity
List Azure Monitor alerts ordered by severity and alert state
List Azure Monitor alerts ordered by severity, monitor service, and target resource type
If you don't have an Azure subscription, create afree accountbefore you begin.
Language support
Azure CLI (through an extension) and Azure PowerShell (through a module) support Azure Resource
Graph. Before running any of the following queries, check that your environment is ready. SeeAzure CLIandAzure
PowerShellfor steps to install and
validate your shell environment of choice.
Count Azure resources
This query returns number of Azure resources that exist in the subscriptions that you have access
to. It's also a good query to validate your shell of choice has the appropriate Azure Resource
Graph components installed and in working order.
Resources
| summarize count()
Resources
| summarize count()
Azure CLI
Azure PowerShell
Portal
By default, Azure CLI queries all accessible subscriptions but you can specify the--subscriptionsparameter to query specific subscriptions.
--subscriptions
az graph query -q "Resources | summarize count()"
az graph query -q "Resources | summarize count()"
This example uses a variable for the subscription ID.
subid=$(az account show --query id --output tsv)
az graph query -q "Resources | summarize count()" --subscriptions $subid
subid=$(az account show --query id --output tsv)
az graph query -q "Resources | summarize count()" --subscriptions $subid
You can also query by the scopes for management group and tenant. Replace<managementGroupId>and<tenantId>with your values.
<managementGroupId>
<tenantId>
az graph query -q "Resources | summarize count()" --management-groups '<managementGroupId>'
az graph query -q "Resources | summarize count()" --management-groups '<managementGroupId>'
az graph query -q "Resources | summarize count()" --management-groups '<tenantId>'
az graph query -q "Resources | summarize count()" --management-groups '<tenantId>'
You can also use a variable for the tenant ID.
tenantid=$(az account show --query tenantId --output tsv)
az graph query -q "Resources | summarize count()" --management-groups $tenantid
tenantid=$(az account show --query tenantId --output tsv)
az graph query -q "Resources | summarize count()" --management-groups $tenantid
By default, Azure PowerShell gets results for all subscriptions in your tenant.
Search-AzGraph -Query "Resources | summarize count()"
Search-AzGraph -Query "Resources | summarize count()"
This example uses a variable to query a specific subscription ID.
$subid = (Get-AzContext).Subscription.Id
Search-AzGraph -Query "authorizationresources | summarize count()" -Subscription $subid
$subid = (Get-AzContext).Subscription.Id
Search-AzGraph -Query "authorizationresources | summarize count()" -Subscription $subid
You can query by the scopes for management group and tenant. Replace<managementGroupId>with your value. TheUseTenantScopeparameter doesn't require a value.
<managementGroupId>
UseTenantScope
Search-AzGraph -Query "Resources | summarize count()" -ManagementGroup '<managementGroupId>'
Search-AzGraph -Query "Resources | summarize count()" -ManagementGroup '<managementGroupId>'
Search-AzGraph -Query "Resources | summarize count()" -UseTenantScope
Search-AzGraph -Query "Resources | summarize count()" -UseTenantScope
Try this query in Azure Resource Graph Explorer:
Azure portal:portal.azure.com
Azure Government portal:portal.azure.us
Microsoft Azure operated by 21Vianet portal:portal.azure.cn
Count Key Vault resources
This query usescountinstead ofsummarizeto count the number of records returned. Only key
vaults are included in the count.
count
summarize
Resources
| where type =~ 'microsoft.keyvault/vaults'
| count
Resources
| where type =~ 'microsoft.keyvault/vaults'
| count
Azure CLI
Azure PowerShell
Portal
az graph query -q "Resources | where type =~ 'microsoft.keyvault/vaults' | count"
az graph query -q "Resources | where type =~ 'microsoft.keyvault/vaults' | count"
Search-AzGraph -Query "Resources | where type =~ 'microsoft.keyvault/vaults' | count"
Search-AzGraph -Query "Resources | where type =~ 'microsoft.keyvault/vaults' | count"
Try this query in Azure Resource Graph Explorer:
Azure portal:portal.azure.com
Azure Government portal:portal.azure.us
Azure operated by 21Vianet portal:portal.azure.cn
List resources sorted by name
This query returns any type of resource, but only thename,type, andlocationproperties. It usesorder byto sort the properties by thenameproperty in ascending (asc)
order.
order by
asc
Resources
| project name, type, location
| order by name asc
Resources
| project name, type, location
| order by name asc
Azure CLI
Azure PowerShell
Portal
az graph query -q "Resources | project name, type, location | order by name asc"
az graph query -q "Resources | project name, type, location | order by name asc"
Search-AzGraph -Query "Resources | project name, type, location | order by name asc"
Search-AzGraph -Query "Resources | project name, type, location | order by name asc"
Try this query in Azure Resource Graph Explorer:
Azure portal:portal.azure.com
Azure Government portal:portal.azure.us
Azure operated by 21Vianet portal:portal.azure.cn
Show all virtual machines ordered by name in descending order
To list only virtual machines (which are typeMicrosoft.Compute/virtualMachines), we can match
the propertytypein the results. Similar to the previous query,descchanges theorder byto be descending. The=~in the type match tells Resource Graph to be case insensitive.
Microsoft.Compute/virtualMachines
desc
order by
=~
Resources
| project name, location, type
| where type =~ 'Microsoft.Compute/virtualMachines'
| order by name desc
Resources
| project name, location, type
| where type =~ 'Microsoft.Compute/virtualMachines'
| order by name desc
Azure CLI
Azure PowerShell
Portal
az graph query -q "Resources | project name, location, type| where type =~ 'Microsoft.Compute/virtualMachines' | order by name desc"
az graph query -q "Resources | project name, location, type| where type =~ 'Microsoft.Compute/virtualMachines' | order by name desc"
Search-AzGraph -Query "Resources | project name, location, type| where type =~ 'Microsoft.Compute/virtualMachines' | order by name desc"
Search-AzGraph -Query "Resources | project name, location, type| where type =~ 'Microsoft.Compute/virtualMachines' | order by name desc"
Try this query in Azure Resource Graph Explorer:
Azure portal:portal.azure.com
Azure Government portal:portal.azure.us
Azure operated by 21Vianet portal:portal.azure.cn
Show first five virtual machines by name and their OS type
This query usestopto only retrieve five matching records that are ordered by name. The type
of the Azure resource isMicrosoft.Compute/virtualMachines.projecttells Azure Resource Graph
which properties to include.
top
Microsoft.Compute/virtualMachines
project
Resources
| where type =~ 'Microsoft.Compute/virtualMachines'
| project name, properties.storageProfile.osDisk.osType
| top 5 by name desc
Resources
| where type =~ 'Microsoft.Compute/virtualMachines'
| project name, properties.storageProfile.osDisk.osType
| top 5 by name desc
Azure CLI
Azure PowerShell
Portal
az graph query -q "Resources | where type =~ 'Microsoft.Compute/virtualMachines' | project name, properties.storageProfile.osDisk.osType | top 5 by name desc"
az graph query -q "Resources | where type =~ 'Microsoft.Compute/virtualMachines' | project name, properties.storageProfile.osDisk.osType | top 5 by name desc"
Search-AzGraph -Query "Resources | where type =~ 'Microsoft.Compute/virtualMachines' | project name, properties.storageProfile.osDisk.osType | top 5 by name desc"
Search-AzGraph -Query "Resources | where type =~ 'Microsoft.Compute/virtualMachines' | project name, properties.storageProfile.osDisk.osType | top 5 by name desc"
Try this query in Azure Resource Graph Explorer:
Azure portal:portal.azure.com
Azure Government portal:portal.azure.us
Azure operated by 21Vianet portal:portal.azure.cn
Count virtual machines by OS type
Building on the previous query, we're still limiting by Azure resources of typeMicrosoft.Compute/virtualMachines, but are no longer limiting the number of records returned.
Instead, we usedsummarizeandcount()to define how to group and aggregate the values by
property, which in this example isproperties.storageProfile.osDisk.osType. For an example of how
this string looks in the full object, seeexplore resources - virtual machine
discovery.
Microsoft.Compute/virtualMachines
summarize
count()
properties.storageProfile.osDisk.osType
Resources
| where type =~ 'Microsoft.Compute/virtualMachines'
| summarize count() by tostring(properties.storageProfile.osDisk.osType)
Resources
| where type =~ 'Microsoft.Compute/virtualMachines'
| summarize count() by tostring(properties.storageProfile.osDisk.osType)
Azure CLI
Azure PowerShell
Portal
az graph query -q "Resources | where type =~ 'Microsoft.Compute/virtualMachines' | summarize count() by tostring(properties.storageProfile.osDisk.osType)"
az graph query -q "Resources | where type =~ 'Microsoft.Compute/virtualMachines' | summarize count() by tostring(properties.storageProfile.osDisk.osType)"
Search-AzGraph -Query "Resources | where type =~ 'Microsoft.Compute/virtualMachines' | summarize count() by tostring(properties.storageProfile.osDisk.osType)"
Search-AzGraph -Query "Resources | where type =~ 'Microsoft.Compute/virtualMachines' | summarize count() by tostring(properties.storageProfile.osDisk.osType)"
Try this query in Azure Resource Graph Explorer:
Azure portal:portal.azure.com
Azure Government portal:portal.azure.us
Azure operated by 21Vianet portal:portal.azure.cn
A different way to write the same query is toextenda property and give it a temporary name for
use within the query, in this caseos.osis then used bysummarizeandcount()as in
the previous example.
extend
summarize
count()
Resources
| where type =~ 'Microsoft.Compute/virtualMachines'
| extend os = properties.storageProfile.osDisk.osType
| summarize count() by tostring(os)
Resources
| where type =~ 'Microsoft.Compute/virtualMachines'
| extend os = properties.storageProfile.osDisk.osType
| summarize count() by tostring(os)
Azure CLI
Azure PowerShell
Portal
az graph query -q "Resources | where type =~ 'Microsoft.Compute/virtualMachines' | extend os = properties.storageProfile.osDisk.osType | summarize count() by tostring(os)"
az graph query -q "Resources | where type =~ 'Microsoft.Compute/virtualMachines' | extend os = properties.storageProfile.osDisk.osType | summarize count() by tostring(os)"
Search-AzGraph -Query "Resources | where type =~ 'Microsoft.Compute/virtualMachines' | extend os = properties.storageProfile.osDisk.osType | summarize count() by tostring(os)"
Search-AzGraph -Query "Resources | where type =~ 'Microsoft.Compute/virtualMachines' | extend os = properties.storageProfile.osDisk.osType | summarize count() by tostring(os)"
Try this query in Azure Resource Graph Explorer:
Azure portal:portal.azure.com
Azure Government portal:portal.azure.us
Azure operated by 21Vianet portal:portal.azure.cn
Note
Be aware that while=~allows case insensitive matching, use of properties (such asproperties.storageProfile.osDisk.osType) in the query require the case to be correct. If the
property is the incorrect case, a null or incorrect value is returned and the grouping or
summarization would be incorrect.
=~
Show resources that contain storage
Instead of explicitly defining the type to match, this example query finds any Azure resource
thatcontainsthe wordstorage.
contains
Resources
| where type contains 'storage' | distinct type
Resources
| where type contains 'storage' | distinct type
Azure CLI
Azure PowerShell
Portal
az graph query -q "Resources | where type contains 'storage' | distinct type"
az graph query -q "Resources | where type contains 'storage' | distinct type"
Search-AzGraph -Query "Resources | where type contains 'storage' | distinct type"
Search-AzGraph -Query "Resources | where type contains 'storage' | distinct type"
Try this query in Azure Resource Graph Explorer:
Azure portal:portal.azure.com
Azure Government portal:portal.azure.us
Azure operated by 21Vianet portal:portal.azure.cn
List all Azure virtual network subnets
This query returns a list of Azure virtual networks (VNets) including subnet names and address prefixes. Thanks toSaul Dolginfor the contribution.
Resources
| where type == 'microsoft.network/virtualnetworks'
| extend subnets = properties.subnets
| mv-expand subnets
| project name, subnets.name, subnets.properties.addressPrefix, location, resourceGroup, subscriptionId
Resources
| where type == 'microsoft.network/virtualnetworks'
| extend subnets = properties.subnets
| mv-expand subnets
| project name, subnets.name, subnets.properties.addressPrefix, location, resourceGroup, subscriptionId
Azure CLI
Azure PowerShell
Portal
az graph query -q "Resources | where type == 'microsoft.network/virtualnetworks' | extend subnets = properties.subnets | mv-expand subnets | project name, subnets.name, subnets.properties.addressPrefix, location, resourceGroup, subscriptionId"
az graph query -q "Resources | where type == 'microsoft.network/virtualnetworks' | extend subnets = properties.subnets | mv-expand subnets | project name, subnets.name, subnets.properties.addressPrefix, location, resourceGroup, subscriptionId"
Search-AzGraph -Query "Resources | where type == 'microsoft.network/virtualnetworks' | extend subnets = properties.subnets | mv-expand subnets | project name, subnets.name, subnets.properties.addressPrefix, location, resourceGroup, subscriptionId
Search-AzGraph -Query "Resources | where type == 'microsoft.network/virtualnetworks' | extend subnets = properties.subnets | mv-expand subnets | project name, subnets.name, subnets.properties.addressPrefix, location, resourceGroup, subscriptionId
Try this query in Azure Resource Graph Explorer:
Azure portal:portal.Azure.com
Azure Government portal:portal.Azure.us
Azure operated by 21Vianet portal:portal.Azure.cn
List all public IP addresses
Similar to the previous query, find everything that is a type with the wordpublicIPAddresses.
This query expands on that pattern to only include results whereproperties.ipAddressisnotempty, to only return theproperties.ipAddress, and tolimitthe results by the top
100. You may need to escape the quotes depending on your chosen shell.
isnotempty
limit
Resources
| where type contains 'publicIPAddresses' and isnotempty(properties.ipAddress)
| project properties.ipAddress
| limit 100
Resources
| where type contains 'publicIPAddresses' and isnotempty(properties.ipAddress)
| project properties.ipAddress
| limit 100
Azure CLI
Azure PowerShell
Portal
az graph query -q "Resources | where type contains 'publicIPAddresses' and isnotempty(properties.ipAddress) | project properties.ipAddress | limit 100"
az graph query -q "Resources | where type contains 'publicIPAddresses' and isnotempty(properties.ipAddress) | project properties.ipAddress | limit 100"
Search-AzGraph -Query "Resources | where type contains 'publicIPAddresses' and isnotempty(properties.ipAddress) | project properties.ipAddress | limit 100"
Search-AzGraph -Query "Resources | where type contains 'publicIPAddresses' and isnotempty(properties.ipAddress) | project properties.ipAddress | limit 100"
Try this query in Azure Resource Graph Explorer:
Azure portal:portal.azure.com
Azure Government portal:portal.azure.us
Azure operated by 21Vianet portal:portal.azure.cn
Count resources that have IP addresses configured by subscription
Using the previous example query and addingsummarizeandcount(), we can get a list by subscription of resources with configured IP addresses.
summarize
count()
Resources
| where type contains 'publicIPAddresses' and isnotempty(properties.ipAddress)
| summarize count () by subscriptionId
Resources
| where type contains 'publicIPAddresses' and isnotempty(properties.ipAddress)
| summarize count () by subscriptionId
Azure CLI
Azure PowerShell
Portal
az graph query -q "Resources | where type contains 'publicIPAddresses' and isnotempty(properties.ipAddress) | summarize count () by subscriptionId"
az graph query -q "Resources | where type contains 'publicIPAddresses' and isnotempty(properties.ipAddress) | summarize count () by subscriptionId"
Search-AzGraph -Query "Resources | where type contains 'publicIPAddresses' and isnotempty(properties.ipAddress) | summarize count () by subscriptionId"
Search-AzGraph -Query "Resources | where type contains 'publicIPAddresses' and isnotempty(properties.ipAddress) | summarize count () by subscriptionId"
Try this query in Azure Resource Graph Explorer:
Azure portal:portal.azure.com
Azure Government portal:portal.azure.us
Azure operated by 21Vianet portal:portal.azure.cn
List resources with a specific tag value
We can limit the results by properties other than the Azure resource type, such as a tag. In this
example, we're filtering for Azure resources with a tag name ofEnvironmentthat have a value
ofInternal.
Resources
| where tags.environment=~'internal'
| project name
Resources
| where tags.environment=~'internal'
| project name
Azure CLI
Azure PowerShell
Portal
az graph query -q "Resources | where tags.environment=~'internal' | project name"
az graph query -q "Resources | where tags.environment=~'internal' | project name"
Search-AzGraph -Query "Resources | where tags.environment=~'internal' | project name"
Search-AzGraph -Query "Resources | where tags.environment=~'internal' | project name"
Try this query in Azure Resource Graph Explorer:
Azure portal:portal.azure.com
Azure Government portal:portal.azure.us
Azure operated by 21Vianet portal:portal.azure.cn
To also provide what tags the resource has and their values, add the propertytagsto theprojectkeyword.
project
Resources
| where tags.environment=~'internal'
| project name, tags
Resources
| where tags.environment=~'internal'
| project name, tags
Azure CLI
Azure PowerShell
Portal
az graph query -q "Resources | where tags.environment=~'internal' | project name, tags"
az graph query -q "Resources | where tags.environment=~'internal' | project name, tags"
Search-AzGraph -Query "Resources | where tags.environment=~'internal' | project name, tags"
Search-AzGraph -Query "Resources | where tags.environment=~'internal' | project name, tags"
Try this query in Azure Resource Graph Explorer:
Azure portal:portal.azure.com
Azure Government portal:portal.azure.us
Azure operated by 21Vianet portal:portal.azure.cn
List all storage accounts with specific tag value
Combine the filter functionality of the previous example and filter Azure resource type bytypeproperty. This query also limits our search for specific types of Azure resources with a specific
tag name and value.
Resources
| where type =~ 'Microsoft.Storage/storageAccounts'
| where tags['tag with a space']=='Custom value'
Resources
| where type =~ 'Microsoft.Storage/storageAccounts'
| where tags['tag with a space']=='Custom value'
Azure CLI
Azure PowerShell
Portal
az graph query -q "Resources | where type =~ 'Microsoft.Storage/storageAccounts' | where tags['tag with a space']=='Custom value'"
az graph query -q "Resources | where type =~ 'Microsoft.Storage/storageAccounts' | where tags['tag with a space']=='Custom value'"
Search-AzGraph -Query "Resources | where type =~ 'Microsoft.Storage/storageAccounts' | where tags['tag with a space']=='Custom value'"
Search-AzGraph -Query "Resources | where type =~ 'Microsoft.Storage/storageAccounts' | where tags['tag with a space']=='Custom value'"
Try this query in Azure Resource Graph Explorer:
Azure portal:portal.azure.com
Azure Government portal:portal.azure.us
Azure operated by 21Vianet portal:portal.azure.cn
Note
This example uses==for matching instead of the=~conditional.==is a case sensitive match.
==
=~
==
List all tags and their values
This query lists tags on management groups, subscriptions, and resources along with their values.
The query first limits to resources where tagsisnotempty(), limits the included fields by only
includingtagsin theproject, andmvexpandandextendto get the paired data from the
property bag. It then usesunionto combine the results fromResourceContainersto the same
results fromResources, giving broad coverage to which tags are fetched. Last, it limits the
results todistinctpaired data and excludes system-hidden tags.
isnotempty()
project
mvexpand
extend
union
distinct
ResourceContainers
| where isnotempty(tags)
| project tags
| mvexpand tags
| extend tagKey = tostring(bag_keys(tags)[0])
| extend tagValue = tostring(tags[tagKey])
| union (
    resources
    | where isnotempty(tags)
    | project tags
    | mvexpand tags
    | extend tagKey = tostring(bag_keys(tags)[0])
    | extend tagValue = tostring(tags[tagKey])
)
| distinct tagKey, tagValue
| where tagKey !startswith "hidden-"
ResourceContainers
| where isnotempty(tags)
| project tags
| mvexpand tags
| extend tagKey = tostring(bag_keys(tags)[0])
| extend tagValue = tostring(tags[tagKey])
| union (
    resources
    | where isnotempty(tags)
    | project tags
    | mvexpand tags
    | extend tagKey = tostring(bag_keys(tags)[0])
    | extend tagValue = tostring(tags[tagKey])
)
| distinct tagKey, tagValue
| where tagKey !startswith "hidden-"
Azure CLI
Azure PowerShell
Portal
az graph query -q "ResourceContainers | where isnotempty(tags) | project tags | mvexpand tags | extend tagKey = tostring(bag_keys(tags)[0]) | extend tagValue = tostring(tags[tagKey]) | union (resources | where notempty(tags) | project tags | mvexpand tags | extend tagKey = tostring(bag_keys(tags)[0]) | extend tagValue = tostring(tags[tagKey]) ) | distinct tagKey, tagValue | where tagKey !startswith "hidden-""
az graph query -q "ResourceContainers | where isnotempty(tags) | project tags | mvexpand tags | extend tagKey = tostring(bag_keys(tags)[0]) | extend tagValue = tostring(tags[tagKey]) | union (resources | where notempty(tags) | project tags | mvexpand tags | extend tagKey = tostring(bag_keys(tags)[0]) | extend tagValue = tostring(tags[tagKey]) ) | distinct tagKey, tagValue | where tagKey !startswith "hidden-""
Search-AzGraph -Query "ResourceContainers | where isnotempty(tags) | project tags | mvexpand tags | extend tagKey = tostring(bag_keys(tags)[0]) | extend tagValue = tostring(tags[tagKey]) | union (resources | where notempty(tags) | project tags | mvexpand tags | extend tagKey = tostring(bag_keys(tags)[0]) | extend tagValue = tostring(tags[tagKey]) ) | distinct tagKey, tagValue | where tagKey !startswith "hidden-""
Search-AzGraph -Query "ResourceContainers | where isnotempty(tags) | project tags | mvexpand tags | extend tagKey = tostring(bag_keys(tags)[0]) | extend tagValue = tostring(tags[tagKey]) | union (resources | where notempty(tags) | project tags | mvexpand tags | extend tagKey = tostring(bag_keys(tags)[0]) | extend tagValue = tostring(tags[tagKey]) ) | distinct tagKey, tagValue | where tagKey !startswith "hidden-""
Try this query in Azure Resource Graph Explorer:
Azure portal:portal.azure.com
Azure Government portal:portal.azure.us
Azure operated by 21Vianet portal:portal.azure.cn
Show unassociated network security groups
This query returns Network Security Groups (NSGs) that aren't associated to a network interface or
subnet.
Resources
| where type =~ "microsoft.network/networksecuritygroups" and isnull(properties.networkInterfaces) and isnull(properties.subnets)
| project name, resourceGroup
| sort by name asc
Resources
| where type =~ "microsoft.network/networksecuritygroups" and isnull(properties.networkInterfaces) and isnull(properties.subnets)
| project name, resourceGroup
| sort by name asc
Azure CLI
Azure PowerShell
Portal
az graph query -q "Resources | where type =~ 'microsoft.network/networksecuritygroups' and isnull(properties.networkInterfaces) and isnull(properties.subnets) | project name, resourceGroup | sort by name asc"
az graph query -q "Resources | where type =~ 'microsoft.network/networksecuritygroups' and isnull(properties.networkInterfaces) and isnull(properties.subnets) | project name, resourceGroup | sort by name asc"
Search-AzGraph -Query "Resources | where type =~ 'microsoft.network/networksecuritygroups' and isnull(properties.networkInterfaces) and isnull(properties.subnets) | project name, resourceGroup | sort by name asc"
Search-AzGraph -Query "Resources | where type =~ 'microsoft.network/networksecuritygroups' and isnull(properties.networkInterfaces) and isnull(properties.subnets) | project name, resourceGroup | sort by name asc"
Try this query in Azure Resource Graph Explorer:
Azure portal:portal.azure.com
Azure Government portal:portal.azure.us
Azure operated by 21Vianet portal:portal.azure.cn
List Azure Monitor alerts ordered by severity
alertsmanagementresources  
| where type =~ 'microsoft.alertsmanagement/alerts'â¯  
| where todatetime(properties.essentials.startDateTime) >= ago(2h) and todatetime(properties.essentials.startDateTime) < now()  
| project Severity = tostring(properties.essentials.severity) 
| summarize AlertsCount = count() by Severity
alertsmanagementresources  
| where type =~ 'microsoft.alertsmanagement/alerts'â¯  
| where todatetime(properties.essentials.startDateTime) >= ago(2h) and todatetime(properties.essentials.startDateTime) < now()  
| project Severity = tostring(properties.essentials.severity) 
| summarize AlertsCount = count() by Severity
List Azure Monitor alerts ordered by severity and alert state
alertsmanagementresources
| where type =~ 'microsoft.alertsmanagement/alerts'â¯  
| where todatetime(properties.essentials.startDateTime) >= ago(2h) and todatetime(properties.essentials.startDateTime) < now()  
| project Severity = tostring(properties.essentials.severity), 
    AlertState= tostring(properties.essentials.alertState) 
| summarize AlertsCount = count() by Severity, AlertState
alertsmanagementresources
| where type =~ 'microsoft.alertsmanagement/alerts'â¯  
| where todatetime(properties.essentials.startDateTime) >= ago(2h) and todatetime(properties.essentials.startDateTime) < now()  
| project Severity = tostring(properties.essentials.severity), 
    AlertState= tostring(properties.essentials.alertState) 
| summarize AlertsCount = count() by Severity, AlertState
List Azure Monitor alerts ordered by severity, monitor service, and target resource type
alertsmanagementresources  
| where type =~ 'microsoft.alertsmanagement/alerts'â¯  
| where todatetime(properties.essentials.startDateTime) >= ago(2h) and todatetime(properties.essentials.startDateTime) < now()  
| project Severity = tostring(properties.essentials.severity),  
MonitorCondition = tostring(properties.essentials.monitorCondition),  
ObjectState = tostring(properties.essentials.alertState),  
MonitorService = tostring(properties.essentials.monitorService),  
AlertRuleId = tostring(properties.essentials.alertRule),  
SignalType = tostring(properties.essentials.signalType),  
TargetResource = tostring(properties.essentials.targetResourceName), 
TargetResourceType = tostring(properties.essentials.targetResourceName), idâ¯
| summarize AlertsCount = count() by Severity, MonitorService , TargetResourceType
alertsmanagementresources  
| where type =~ 'microsoft.alertsmanagement/alerts'â¯  
| where todatetime(properties.essentials.startDateTime) >= ago(2h) and todatetime(properties.essentials.startDateTime) < now()  
| project Severity = tostring(properties.essentials.severity),  
MonitorCondition = tostring(properties.essentials.monitorCondition),  
ObjectState = tostring(properties.essentials.alertState),  
MonitorService = tostring(properties.essentials.monitorService),  
AlertRuleId = tostring(properties.essentials.alertRule),  
SignalType = tostring(properties.essentials.signalType),  
TargetResource = tostring(properties.essentials.targetResourceName), 
TargetResourceType = tostring(properties.essentials.targetResourceName), idâ¯
| summarize AlertsCount = count() by Severity, MonitorService , TargetResourceType
Next steps
Learn more about thequery language.
Learn more about how toexplore resources.
See samples ofAdvanced queries.
Feedback
Was this page helpful?
Additional resources