Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Connect to on-premises file systems from workflows in Azure Logic Apps
Article
2024-01-10
1 contributor
In this article
Applies to:Azure Logic Apps (Consumption + Standard)
This how-to guide shows how to access an on-premises file share from a workflow in Azure Logic Apps by using the File System connector. You can then create automated workflows that run when triggered by events in your file share or in other systems and run actions to manage your files. The connector provides the following capabilities:
Create, get, append, update, and delete files.
List files in folders or root folders.
Get file content and metadata.
In this how-to guide, the example scenarios demonstrate the following tasks:
Trigger a workflow when a file is created or added to a file share, and then send an email.
Trigger a workflow when copying a file from a Dropbox account to a file share, and then send an email.
Limitations and known issues
The File System connector currently supports only Windows file systems on Windows operating systems.
Mapped network drives aren't supported.
Connector technical reference
The File System connector has different versions, based onlogic app type and host environment.
Prerequisites
An Azure account and subscription. If you don't have an Azure subscription,sign up for a free Azure account.
An Azure account and subscription. If you don't have an Azure subscription,sign up for a free Azure account.
To connect to your file share, different requirements apply, based on your logic app and the hosting environment:Consumption logic app workflowsIn multi-tenant Azure Logic Apps, you need to meet the following requirements, if you haven't already:Install the on-premises data gateway on a local computer.The File System managed connector requires that your gateway installation and file system server must exist in the same Windows domain.Create an on-premises data gateway resource in Azure.After you add a File System managed connector trigger or action to your workflow, select the data gateway resource that you previously created so you can connect to your file system.Standard logic app workflowsYou can use the File System built-in connector or managed connector.To use the File System managed connector, follow the same requirements as a Consumption logic app workflow in multi-tenant Azure Logic Apps.To use the File System built-in connector, your Standard logic app workflow must run in App Service Environment v3, but doesn't require the data gateway resource.
To connect to your file share, different requirements apply, based on your logic app and the hosting environment:
Consumption logic app workflowsIn multi-tenant Azure Logic Apps, you need to meet the following requirements, if you haven't already:Install the on-premises data gateway on a local computer.The File System managed connector requires that your gateway installation and file system server must exist in the same Windows domain.Create an on-premises data gateway resource in Azure.After you add a File System managed connector trigger or action to your workflow, select the data gateway resource that you previously created so you can connect to your file system.
Consumption logic app workflows
In multi-tenant Azure Logic Apps, you need to meet the following requirements, if you haven't already:Install the on-premises data gateway on a local computer.The File System managed connector requires that your gateway installation and file system server must exist in the same Windows domain.Create an on-premises data gateway resource in Azure.After you add a File System managed connector trigger or action to your workflow, select the data gateway resource that you previously created so you can connect to your file system.
In multi-tenant Azure Logic Apps, you need to meet the following requirements, if you haven't already:
Install the on-premises data gateway on a local computer.The File System managed connector requires that your gateway installation and file system server must exist in the same Windows domain.
Install the on-premises data gateway on a local computer.
The File System managed connector requires that your gateway installation and file system server must exist in the same Windows domain.
Create an on-premises data gateway resource in Azure.
Create an on-premises data gateway resource in Azure.
After you add a File System managed connector trigger or action to your workflow, select the data gateway resource that you previously created so you can connect to your file system.
After you add a File System managed connector trigger or action to your workflow, select the data gateway resource that you previously created so you can connect to your file system.
Standard logic app workflowsYou can use the File System built-in connector or managed connector.To use the File System managed connector, follow the same requirements as a Consumption logic app workflow in multi-tenant Azure Logic Apps.To use the File System built-in connector, your Standard logic app workflow must run in App Service Environment v3, but doesn't require the data gateway resource.
Standard logic app workflows
You can use the File System built-in connector or managed connector.
To use the File System managed connector, follow the same requirements as a Consumption logic app workflow in multi-tenant Azure Logic Apps.
To use the File System managed connector, follow the same requirements as a Consumption logic app workflow in multi-tenant Azure Logic Apps.
To use the File System built-in connector, your Standard logic app workflow must run in App Service Environment v3, but doesn't require the data gateway resource.
To use the File System built-in connector, your Standard logic app workflow must run in App Service Environment v3, but doesn't require the data gateway resource.
Access to the computer that has the file system you want to use. For example, if you install the data gateway on the same computer as your file system, you need the account credentials for that computer.
Access to the computer that has the file system you want to use. For example, if you install the data gateway on the same computer as your file system, you need the account credentials for that computer.
To follow the example scenario in this how-to guide, you need an email account from a provider that's supported by Azure Logic Apps, such as Office 365 Outlook, Outlook.com, or Gmail. For other providers,review other supported email connectors. This example uses the Office 365 Outlook connector with a work or school account. If you use another email account, the overall steps are the same, but your UI might slightly differ.ImportantIf you want to use the Gmail connector, only G-Suite business accounts can use this connector without restriction in logic apps.
If you have a Gmail consumer account, you can use this connector with only specific Google-approved services, or you cancreate a Google client app to use for authentication with your Gmail connector.
For more information, seeData security and privacy policies for Google connectors in Azure Logic Apps.
To follow the example scenario in this how-to guide, you need an email account from a provider that's supported by Azure Logic Apps, such as Office 365 Outlook, Outlook.com, or Gmail. For other providers,review other supported email connectors. This example uses the Office 365 Outlook connector with a work or school account. If you use another email account, the overall steps are the same, but your UI might slightly differ.
Important
If you want to use the Gmail connector, only G-Suite business accounts can use this connector without restriction in logic apps.
If you have a Gmail consumer account, you can use this connector with only specific Google-approved services, or you cancreate a Google client app to use for authentication with your Gmail connector.
For more information, seeData security and privacy policies for Google connectors in Azure Logic Apps.
For the example File System action scenario, you need aDropbox account, which you can sign up for free.
For the example File System action scenario, you need aDropbox account, which you can sign up for free.
The logic app workflow where you want to access your file share. To start your workflow with a File System trigger, you have to start with a blank workflow. To add a File System action, start your workflow with any trigger.
The logic app workflow where you want to access your file share. To start your workflow with a File System trigger, you have to start with a blank workflow. To add a File System action, start your workflow with any trigger.

Add a File System trigger
Consumption
Standard
In theAzure portal, open your blank logic app workflow in the designer.
In theAzure portal, open your blank logic app workflow in the designer.
In the designer,follow these general steps to add theFile Systemtrigger that you want to your workflow.For more information, seeFile System triggers. This example continues with the trigger namedWhen a file is created.
In the designer,follow these general steps to add theFile Systemtrigger that you want to your workflow.
For more information, seeFile System triggers. This example continues with the trigger namedWhen a file is created.
In the connection information box, provide the following information as required:PropertyRequiredValueDescriptionConnection nameYes<connection-name>The name to use for your connectionRoot folderYes<root-folder-name>The root folder for your file system, which is usually the main parent folder and is the folder used for the relative paths with all triggers that work on files.For example, if you installed the on-premises data gateway, use the local folder on the computer with the data gateway installation. Or, use the folder for the network share where the computer can access that folder, for example,\\PublicShare\\MyFileSystem.Authentication TypeNo<auth-type>The type of authentication that your file system server uses, which isWindowsUsernameYes<domain-and-username>The domain and username for the computer where you have your file system.For the managed File System connector, use one of the following values with the backslash (\):-<domain>\<username>-<local-computer>\<username>For example, if your file system folder is on the same computer as the on-premises data gateway installation, you can use<local-computer>\<username>.PasswordYes<password>The password for the computer where you have your file systemgatewayNo- <Azure-subscription>- <gateway-resource-name>This section applies only to the managed File System connector:-Subscription: The Azure subscription associated with the data gateway resource-Connection Gateway: The data gateway resourceThe following example shows the connection information for the File System managed connector trigger:
In the connection information box, provide the following information as required:
\\PublicShare\\MyFileSystem
\
The following example shows the connection information for the File System managed connector trigger:

When you're done, selectCreate.Azure Logic Apps creates and tests your connection, making sure that the connection works properly. If the connection is set up correctly, the setup options appear for your selected trigger.
When you're done, selectCreate.
Azure Logic Apps creates and tests your connection, making sure that the connection works properly. If the connection is set up correctly, the setup options appear for your selected trigger.
Continue building your workflow.Provide the required information for your trigger.For this example, select the folder path on your file system server to check for a newly created file. Specify the number of files to return and how often you want to check.To test your workflow, add an Outlook action that sends you an email when a file is created on the file system in specified folder. Enter the email recipients, subject, and body. For testing, you can use your own email address.TipTo add outputs from previous steps in the workflow, select inside the trigger's edit boxes.
When the dynamic content list appears, select from the available outputs.
Continue building your workflow.
Provide the required information for your trigger.For this example, select the folder path on your file system server to check for a newly created file. Specify the number of files to return and how often you want to check.
Provide the required information for your trigger.
For this example, select the folder path on your file system server to check for a newly created file. Specify the number of files to return and how often you want to check.

To test your workflow, add an Outlook action that sends you an email when a file is created on the file system in specified folder. Enter the email recipients, subject, and body. For testing, you can use your own email address.TipTo add outputs from previous steps in the workflow, select inside the trigger's edit boxes.
When the dynamic content list appears, select from the available outputs.
To test your workflow, add an Outlook action that sends you an email when a file is created on the file system in specified folder. Enter the email recipients, subject, and body. For testing, you can use your own email address.

Tip
To add outputs from previous steps in the workflow, select inside the trigger's edit boxes.
When the dynamic content list appears, select from the available outputs.
When you're done, save your workflow.
When you're done, save your workflow.
To test your workflow, upload a file, which triggers the workflow.
To test your workflow, upload a file, which triggers the workflow.
If successful, your workflow sends an email about the new file.
The following steps apply only to Standard logic app workflows in an App Service Environment v3 with Windows plans only.
In theAzure portal, open your blank logic app workflow in the designer.
In theAzure portal, open your blank logic app workflow in the designer.
In the designer,follow these general steps to add theFile Systembuilt-in trigger that you want to your workflow.For more information, seeFile System triggers. This example continues with the trigger namedWhen a file is added.
In the designer,follow these general steps to add theFile Systembuilt-in trigger that you want to your workflow.
For more information, seeFile System triggers. This example continues with the trigger namedWhen a file is added.
In the connection information box, provide the following information as required:PropertyRequiredValueDescriptionConnection nameYes<connection-name>The name to use for your connectionRoot folderYes<root-folder-name>The root folder for your file system, which is usually the main parent folder and is the folder used for the relative paths with all triggers that work on files.For example, if you installed the on-premises data gateway, use the local folder on the computer with the data gateway installation. Or, use the folder for the network share where the computer can access that folder, for example,\\PublicShare\\MyFileSystem.UsernameYes<domain-and-username>The domain and username for the computer where you have your file system.For the managed File System connector, use one of the following values with the backslash (\):-<domain>\<username>-<local-computer>\<username>PasswordYes<password>The password for the computer where you have your file systemThe following example shows the connection information for the File System built-in connector trigger:
In the connection information box, provide the following information as required:
\\PublicShare\\MyFileSystem
\
The following example shows the connection information for the File System built-in connector trigger:

When you're done, selectCreate.Azure Logic Apps creates and tests your connection, making sure that the connection works properly. If the connection is set up correctly, the setup options appear for your selected trigger.
When you're done, selectCreate.
Azure Logic Apps creates and tests your connection, making sure that the connection works properly. If the connection is set up correctly, the setup options appear for your selected trigger.
Continue building your workflow.Provide the required information for your trigger.For this example, select the folder path on your file system server to check for a newly added file. Specify how often you want to check.To test your workflow, add an Outlook action that sends you an email when a file is added to the file system in specified folder. Enter the email recipients, subject, and body. For testing, you can use your own email address.TipTo add outputs from previous steps in the workflow, select inside the trigger's edit boxes.
After the dynamic content list and expression editor options appear, select the dynamic content
list (lightning icon). When the dynamic content list appears, select from the available outputs.
Continue building your workflow.
Provide the required information for your trigger.For this example, select the folder path on your file system server to check for a newly added file. Specify how often you want to check.
Provide the required information for your trigger.
For this example, select the folder path on your file system server to check for a newly added file. Specify how often you want to check.

To test your workflow, add an Outlook action that sends you an email when a file is added to the file system in specified folder. Enter the email recipients, subject, and body. For testing, you can use your own email address.TipTo add outputs from previous steps in the workflow, select inside the trigger's edit boxes.
After the dynamic content list and expression editor options appear, select the dynamic content
list (lightning icon). When the dynamic content list appears, select from the available outputs.
To test your workflow, add an Outlook action that sends you an email when a file is added to the file system in specified folder. Enter the email recipients, subject, and body. For testing, you can use your own email address.

Tip
To add outputs from previous steps in the workflow, select inside the trigger's edit boxes.
After the dynamic content list and expression editor options appear, select the dynamic content
list (lightning icon). When the dynamic content list appears, select from the available outputs.
When you're done, save your workflow.
When you're done, save your workflow.
To test your workflow, upload a file, which triggers the workflow.
To test your workflow, upload a file, which triggers the workflow.
If successful, your workflow sends an email about the new file.
In theAzure portal, open your blank logic app workflow in the designer.
In theAzure portal, open your blank logic app workflow in the designer.
In the designer,follow these general steps to add theFile Systemmanaged trigger that you want to your workflow.For more information, seeFile System triggers. This example continues with the trigger namedWhen a file is created.
In the designer,follow these general steps to add theFile Systemmanaged trigger that you want to your workflow.
For more information, seeFile System triggers. This example continues with the trigger namedWhen a file is created.
In the connection information box, provide the following information as required:PropertyRequiredValueDescriptionConnection nameYes<connection-name>The name to use for your connectionRoot folderYes<root-folder-name>The root folder for your file system, which is usually the main parent folder and is the folder used for the relative paths with all triggers that work on files.For example, if you installed the on-premises data gateway, use the local folder on the computer with the data gateway installation. Or, use the folder for the network share where the computer can access that folder, for example,\\PublicShare\\MyFileSystem.Authentication TypeNo<auth-type>The type of authentication that your file system server uses, which isWindowsUsernameYes<domain-and-username>The domain and username for the computer where you have your file system.For the managed File System connector, use one of the following values with the backslash (\):-<domain>\<username>-<local-computer>\<username>For example, if your file system folder is on the same computer as the on-premises data gateway installation, you can use<local-computer>\<username>.PasswordYes<password>The password for the computer where you have your file systemgatewayNo- <Azure-subscription>- <gateway-resource-name>This section applies only to the managed File System connector:-Subscription: The Azure subscription associated with the data gateway resource-Connection Gateway: The data gateway resourceThe following example shows the connection information for the File System managed connector trigger:
In the connection information box, provide the following information as required:
\\PublicShare\\MyFileSystem
\
The following example shows the connection information for the File System managed connector trigger:

When you're done, selectCreate.Azure Logic Apps creates and tests your connection, making sure that the connection works properly. If the connection is set up correctly, the setup options appear for your selected trigger.
When you're done, selectCreate.
Azure Logic Apps creates and tests your connection, making sure that the connection works properly. If the connection is set up correctly, the setup options appear for your selected trigger.
Continue building your workflow.Provide the required information for your trigger.For this example, select the folder path on your file system server to check for a newly created file. Specify the number of files to return and how often you want to check.To test your workflow, add an Outlook action that sends you an email when a file is created on the file system in specified folder. Enter the email recipients, subject, and body. For testing, you can use your own email address.TipTo add outputs from previous steps in the workflow, select inside the trigger's edit boxes.
After the dynamic content list and expression editor options appear, select the dynamic content
list (lightning icon). When the dynamic content list appears, select from the available outputs.
Continue building your workflow.
Provide the required information for your trigger.For this example, select the folder path on your file system server to check for a newly created file. Specify the number of files to return and how often you want to check.
Provide the required information for your trigger.
For this example, select the folder path on your file system server to check for a newly created file. Specify the number of files to return and how often you want to check.

To test your workflow, add an Outlook action that sends you an email when a file is created on the file system in specified folder. Enter the email recipients, subject, and body. For testing, you can use your own email address.TipTo add outputs from previous steps in the workflow, select inside the trigger's edit boxes.
After the dynamic content list and expression editor options appear, select the dynamic content
list (lightning icon). When the dynamic content list appears, select from the available outputs.
To test your workflow, add an Outlook action that sends you an email when a file is created on the file system in specified folder. Enter the email recipients, subject, and body. For testing, you can use your own email address.

Tip
To add outputs from previous steps in the workflow, select inside the trigger's edit boxes.
After the dynamic content list and expression editor options appear, select the dynamic content
list (lightning icon). When the dynamic content list appears, select from the available outputs.
When you're done, save your workflow.
When you're done, save your workflow.
To test your workflow, upload a file, which triggers the workflow.
To test your workflow, upload a file, which triggers the workflow.
If successful, your workflow sends an email about the new file.

Add a File System action
The example logic app workflow starts with theDropbox trigger, but you can use any trigger that you want.
Consumption
Standard
In theAzure portal, open your logic app workflow in the designer.
In theAzure portal, open your logic app workflow in the designer.
In the designer,follow these general steps to add theFile Systemaction that you want to your workflow.For more information, seeFile System triggers. This example continues with the action namedCreate file.
In the designer,follow these general steps to add theFile Systemaction that you want to your workflow.
For more information, seeFile System triggers. This example continues with the action namedCreate file.
In the connection information box, provide the following information as required:PropertyRequiredValueDescriptionConnection nameYes<connection-name>The name to use for your connectionRoot folderYes<root-folder-name>The root folder for your file system, which is usually the main parent folder and is the folder used for the relative paths with all triggers that work on files.For example, if you installed the on-premises data gateway, use the local folder on the computer with the data gateway installation. Or, use the folder for the network share where the computer can access that folder, for example,\\PublicShare\\MyFileSystem.Authentication TypeNo<auth-type>The type of authentication that your file system server uses, which isWindowsUsernameYes<domain-and-username>The domain and username for the computer where you have your file system.For the managed File System connector, use one of the following values with the backslash (\):-<domain>\<username>-<local-computer>\<username>For example, if your file system folder is on the same computer as the on-premises data gateway installation, you can use<local-computer>\<username>.PasswordYes<password>The password for the computer where you have your file systemgatewayNo- <Azure-subscription>- <gateway-resource-name>This section applies only to the managed File System connector:-Subscription: The Azure subscription associated with the data gateway resource-Connection Gateway: The data gateway resourceThe following example shows the connection information for the File System managed connector action:
In the connection information box, provide the following information as required:
\\PublicShare\\MyFileSystem
\
The following example shows the connection information for the File System managed connector action:

When you're done, selectCreate.Azure Logic Apps creates and tests your connection, making sure that the connection works properly. If the connection is set up correctly, the setup options appear for your selected action.
When you're done, selectCreate.
Azure Logic Apps creates and tests your connection, making sure that the connection works properly. If the connection is set up correctly, the setup options appear for your selected action.
Continue building your workflow.Provide the required information for your action.For this example, select the folder path on your file system server to use, which is the root folder here. Enter the file name and content, based on the file uploaded to Dropbox.TipTo add outputs from previous steps in the workflow, select inside the action's edit boxes.
When the dynamic content list appears, select from the available outputs.To test your workflow, add an Outlook action that sends you an email when the File System action creates a file. Enter the email recipients, subject, and body. For testing, you can use your own email address.
Continue building your workflow.
Provide the required information for your action.For this example, select the folder path on your file system server to use, which is the root folder here. Enter the file name and content, based on the file uploaded to Dropbox.TipTo add outputs from previous steps in the workflow, select inside the action's edit boxes.
When the dynamic content list appears, select from the available outputs.
Provide the required information for your action.
For this example, select the folder path on your file system server to use, which is the root folder here. Enter the file name and content, based on the file uploaded to Dropbox.

Tip
To add outputs from previous steps in the workflow, select inside the action's edit boxes.
When the dynamic content list appears, select from the available outputs.
To test your workflow, add an Outlook action that sends you an email when the File System action creates a file. Enter the email recipients, subject, and body. For testing, you can use your own email address.
To test your workflow, add an Outlook action that sends you an email when the File System action creates a file. Enter the email recipients, subject, and body. For testing, you can use your own email address.

When you're done, save your workflow.
When you're done, save your workflow.
To test your workflow, upload a file, which triggers the workflow.
To test your workflow, upload a file, which triggers the workflow.
If successful, your workflow creates a file on your file system server, based on the uploaded file in DropBox, and sends an email about the created file.
These steps apply only to Standard logic apps in an App Service Environment v3 with Windows plans only.
In theAzure portal, open your logic app workflow in the designer.
In theAzure portal, open your logic app workflow in the designer.
In the designer,follow these general steps to add theFile Systemaction that you want to your workflow.For more information, seeFile System actions. This example continues with the action namedCreate file.
In the designer,follow these general steps to add theFile Systemaction that you want to your workflow.
For more information, seeFile System actions. This example continues with the action namedCreate file.
In the connection information box, provide the following information as required:PropertyRequiredValueDescriptionConnection nameYes<connection-name>The name to use for your connectionRoot folderYes<root-folder-name>The root folder for your file system, which is usually the main parent folder and is the folder used for the relative paths with all triggers that work on files.For example, if you installed the on-premises data gateway, use the local folder on the computer with the data gateway installation. Or, use the folder for the network share where the computer can access that folder, for example,\\PublicShare\\MyFileSystem.UsernameYes<domain-and-username>The domain and username for the computer where you have your file system.For the managed File System connector, use one of the following values with the backslash (\):-<domain>\<username>-<local-computer>\<username>PasswordYes<password>The password for the computer where you have your file systemThe following example shows the connection information for the File System built-in connector action:Azure Logic Apps creates and tests your connection, making sure that the connection works properly. If the connection is set up correctly, the setup options appear for your selected action.
In the connection information box, provide the following information as required:
\\PublicShare\\MyFileSystem
\
The following example shows the connection information for the File System built-in connector action:

Azure Logic Apps creates and tests your connection, making sure that the connection works properly. If the connection is set up correctly, the setup options appear for your selected action.
Continue building your workflow.Provide the required information for your action. For this example, follow these steps:Enter path and name for the file that you want to create, including the file name extension. Make sure the path is relative to the root folder.To specify the content from the file created on Dropbox, from theAdd a parameterlist, selectFile content.After theFile contentparameter appears on the action information pane, select inside the parameter's edit box.After the dynamic content list and expression editor options appear, select the dynamic content list (lightning icon). From the list that appears, under theWhen a file is createdtrigger section, selectFile Content.When you're done, theFile Contenttrigger output appears in theFile contentparameter:To test your workflow, add an Outlook action that sends you an email when the File System action creates a file. Enter the email recipients, subject, and body. For testing, you can use your own email address.
Continue building your workflow.
Provide the required information for your action. For this example, follow these steps:Enter path and name for the file that you want to create, including the file name extension. Make sure the path is relative to the root folder.To specify the content from the file created on Dropbox, from theAdd a parameterlist, selectFile content.After theFile contentparameter appears on the action information pane, select inside the parameter's edit box.After the dynamic content list and expression editor options appear, select the dynamic content list (lightning icon). From the list that appears, under theWhen a file is createdtrigger section, selectFile Content.When you're done, theFile Contenttrigger output appears in theFile contentparameter:
Provide the required information for your action. For this example, follow these steps:
Enter path and name for the file that you want to create, including the file name extension. Make sure the path is relative to the root folder.
Enter path and name for the file that you want to create, including the file name extension. Make sure the path is relative to the root folder.
To specify the content from the file created on Dropbox, from theAdd a parameterlist, selectFile content.
To specify the content from the file created on Dropbox, from theAdd a parameterlist, selectFile content.
After theFile contentparameter appears on the action information pane, select inside the parameter's edit box.
After theFile contentparameter appears on the action information pane, select inside the parameter's edit box.
After the dynamic content list and expression editor options appear, select the dynamic content list (lightning icon). From the list that appears, under theWhen a file is createdtrigger section, selectFile Content.
After the dynamic content list and expression editor options appear, select the dynamic content list (lightning icon). From the list that appears, under theWhen a file is createdtrigger section, selectFile Content.
When you're done, theFile Contenttrigger output appears in theFile contentparameter:

To test your workflow, add an Outlook action that sends you an email when the File System action creates a file. Enter the email recipients, subject, and body. For testing, you can use your own email address.
To test your workflow, add an Outlook action that sends you an email when the File System action creates a file. Enter the email recipients, subject, and body. For testing, you can use your own email address.

When you're done, save your workflow.
When you're done, save your workflow.
To test your workflow, upload a file, which triggers the workflow.
To test your workflow, upload a file, which triggers the workflow.
If successful, your workflow creates a file on your file system server, based on the uploaded file in DropBox, and sends an email about the created file.
In theAzure portal, open your logic app workflow in the designer.
In theAzure portal, open your logic app workflow in the designer.
In the designer,follow these general steps to add theFile Systemaction that you want to your workflow.For more information, seeFile System actions. This example continues with the action namedCreate file.
In the designer,follow these general steps to add theFile Systemaction that you want to your workflow.
For more information, seeFile System actions. This example continues with the action namedCreate file.
In the connection information box, provide the following information as required:PropertyRequiredValueDescriptionConnection nameYes<connection-name>The name to use for your connectionRoot folderYes<root-folder-name>The root folder for your file system, which is usually the main parent folder and is the folder used for the relative paths with all triggers that work on files.For example, if you installed the on-premises data gateway, use the local folder on the computer with the data gateway installation. Or, use the folder for the network share where the computer can access that folder, for example,\\PublicShare\\MyFileSystem.Authentication TypeNo<auth-type>The type of authentication that your file system server uses, which isWindowsUsernameYes<domain-and-username>The domain and username for the computer where you have your file system.For the managed File System connector, use one of the following values with the backslash (\):-<domain>\<username>-<local-computer>\<username>For example, if your file system folder is on the same computer as the on-premises data gateway installation, you can use<local-computer>\<username>.PasswordYes<password>The password for the computer where you have your file systemgatewayNo- <Azure-subscription>- <gateway-resource-name>This section applies only to the managed File System connector:-Subscription: The Azure subscription associated with the data gateway resource-Connection Gateway: The data gateway resourceThe following example shows the connection information for the File System managed connector action:Azure Logic Apps creates and tests your connection, making sure that the connection works properly. If the connection is set up correctly, the setup options appear for your selected action.
In the connection information box, provide the following information as required:
\\PublicShare\\MyFileSystem
\
The following example shows the connection information for the File System managed connector action:

Azure Logic Apps creates and tests your connection, making sure that the connection works properly. If the connection is set up correctly, the setup options appear for your selected action.
Continue building your workflow.Provide the required information for your action. For this example, follow these steps:Enter path and name for the file that you want to create, including the file name extension. Make sure the path is relative to the root folder.To specify the content from the file created on Dropbox, from theAdd a parameterlist, selectFile content.After theFile contentparameter appears on the action information pane, select inside the parameter's edit box.After the dynamic content list and expression editor options appear, select the dynamic content list (lightning icon). From the list that appears, under theWhen a file is createdtrigger section, selectFile Content.When you're done, theFile Contenttrigger output appears in theFile contentparameter:To test your workflow, add an Outlook action that sends you an email when the File System action creates a file. Enter the email recipients, subject, and body. For testing, you can use your own email address.
Continue building your workflow.
Provide the required information for your action. For this example, follow these steps:Enter path and name for the file that you want to create, including the file name extension. Make sure the path is relative to the root folder.To specify the content from the file created on Dropbox, from theAdd a parameterlist, selectFile content.After theFile contentparameter appears on the action information pane, select inside the parameter's edit box.After the dynamic content list and expression editor options appear, select the dynamic content list (lightning icon). From the list that appears, under theWhen a file is createdtrigger section, selectFile Content.When you're done, theFile Contenttrigger output appears in theFile contentparameter:
Provide the required information for your action. For this example, follow these steps:
Enter path and name for the file that you want to create, including the file name extension. Make sure the path is relative to the root folder.
Enter path and name for the file that you want to create, including the file name extension. Make sure the path is relative to the root folder.
To specify the content from the file created on Dropbox, from theAdd a parameterlist, selectFile content.
To specify the content from the file created on Dropbox, from theAdd a parameterlist, selectFile content.
After theFile contentparameter appears on the action information pane, select inside the parameter's edit box.
After theFile contentparameter appears on the action information pane, select inside the parameter's edit box.
After the dynamic content list and expression editor options appear, select the dynamic content list (lightning icon). From the list that appears, under theWhen a file is createdtrigger section, selectFile Content.
After the dynamic content list and expression editor options appear, select the dynamic content list (lightning icon). From the list that appears, under theWhen a file is createdtrigger section, selectFile Content.
When you're done, theFile Contenttrigger output appears in theFile contentparameter:

To test your workflow, add an Outlook action that sends you an email when the File System action creates a file. Enter the email recipients, subject, and body. For testing, you can use your own email address.
To test your workflow, add an Outlook action that sends you an email when the File System action creates a file. Enter the email recipients, subject, and body. For testing, you can use your own email address.

When you're done, save your workflow.
When you're done, save your workflow.
To test your workflow, upload a file, which triggers the workflow.
To test your workflow, upload a file, which triggers the workflow.
If successful, your workflow creates a file on your file system server, based on the uploaded file in DropBox, and sends an email about the created file.
Next steps
Managed connectors for Azure Logic Apps
Built-in connectors for Azure Logic Apps
Feedback
Was this page helpful?
Additional resources