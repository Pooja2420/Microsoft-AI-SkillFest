Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Monitor Azure Data Explorer
Article
2025-01-02
3 contributors
In this article
Azure Monitor collects and aggregates metrics and logs from your system to monitor availability, performance, and resilience, and notify you of issues affecting your system. You can use the Azure portal, PowerShell, Azure CLI, REST API, or client libraries to set up and view monitoring data.
Different metrics and logs are available for different resource types. This article describes the types of monitoring data you can collect for this service and ways to analyze that data.
Collect data with Azure Monitor
This table describes how you can collect data to monitor your service, and what you can do with the data once collected:
For the list of all of the data supported by Azure Monitor, see:
Azure Monitor supported metrics
Azure Monitor supported resource logs
Built in monitoring for Azure Data Explorer
Azure Data Explorer offers metrics and logs to monitor the service.
Monitor Azure Data Explorer performance, health, and usage with metrics
Azure Data Explorer metrics provide key indicators as to the health and performance of the Azure Data Explorer cluster resources. Use the metrics to monitor Azure Data Explorer cluster usage, health, and performance in your specific scenario as standalone metrics. You can also use metrics as the basis for operationalAzure DashboardsandAzure Alerts.
To use metrics to monitor your Azure Data Explorer resources in the Azure portal:
Sign in to theAzure portal.
In the left-hand pane of your Azure Data Explorer cluster, search formetrics.
SelectMetricsto open the metrics pane and begin analysis on your cluster.
In the metrics pane, select specific metrics to track, choose how to aggregate your data, and create metric charts to view on your dashboard.
TheResourceandMetric Namespacepickers are preselected for your Azure Data Explorer cluster. The numbers in the following image correspond to the numbered list. They guide you through different options in setting up and viewing your metrics.

To create a metric chart, selectMetricname and relevantAggregationper metric. For more information about different metrics, seesupported Azure Data Explorer metrics.
SelectAdd metricto see multiple metrics plotted in the same chart.
Select+ New chartto see multiple charts in one view.
Use the time picker to change the time range (default: past 24 hours).
UseAdd filterandApply splittingfor metrics that have dimensions.
SelectPin to dashboardto add your chart configuration to the dashboards so that you can view it again.
SetNew alert ruleto visualize your metrics using the set criteria. The new alerting rule includes your target resource, metric, splitting, and filter dimensions from your chart. Modify these settings in thealert rule creation pane.
Monitor Azure Data Explorer ingestion, commands, queries, and tables using diagnostic logs
Azure Data Explorer is a fast, fully managed data analytics service for real-time analysis on large volumes of data streaming from applications, websites, IoT devices, and more.Azure Monitor diagnostic logsprovide data about the operation of Azure resources. Azure Data Explorer uses diagnostic logs for insights on ingestion, commands, query, and tables. You can export operation logs to Azure Storage, event hub, or Log Analytics to monitor ingestion, commands, and query status. Logs from Azure Storage and Azure Event Hubs can be routed to a table in your Azure Data Explorer cluster for further analysis.
Important
Diagnostic log data may contain sensitive data. Restrict permissions of the logs destination according to your monitoring needs.
Note
In the Azure portal, the raw metrics data for theMetricsandInsightspages are stored in Azure Monitor. The queries on these pages query the raw metrics data directly to provide the most accurate results.
When using the diagnostics settings feature, you can migrate the raw metrics data to the Log Analytics workspace. During the migration, some data precision may be lost due to rounding; hence, query results may vary slightly from the original data. The margin for error is less than one percent.
Diagnostic logs can be used to configure the collection of the following log data:
Ingestion
Commands and Queries
Tables
Journal
Note
Ingestion logs are supported for queued ingestion to theData ingestion URIusingKusto client librariesanddata connectors.
Ingestion logs aren't supported for streaming ingestion, direct ingestion to theCluster URI, ingestion from query, or.set-or-appendcommands.
.set-or-append
Note
Failed ingestion logs are only reported for the final state of an ingest operation, unlike theIngestion resultmetric, which is emitted for transient failures that are retried internally.
Successful ingestion operations: These logs have information about successfully completed ingestion operations.
Failed ingestion operations: These logs have detailed information about failed ingestion operations including error details.
Ingestion batching operations: These logs have detailed statistics of batches ready for ingestion (duration, batch size, blobs count, andbatching types).
Commands: These logs have information about admin commands that have reached a final state.
Commands: These logs have information about admin commands that have reached a final state.
Queries: These logs have detailed information about queries that have reached a final state.NoteThe command and query log data contains the query text.
Queries: These logs have detailed information about queries that have reached a final state.
Note
The command and query log data contains the query text.
TableUsageStatistics: These logs have detailed information about the tables whose extents were scanned during query execution. This log doesn't record statistics for queries that are part of commands, such as the.set-or-appendcommand.NoteTheTableUsageStatisticslog data doesn't contain the command or query text.
TableUsageStatistics: These logs have detailed information about the tables whose extents were scanned during query execution. This log doesn't record statistics for queries that are part of commands, such as the.set-or-appendcommand.
Note
TheTableUsageStatisticslog data doesn't contain the command or query text.
TableUsageStatistics
TableDetails: These logs have detailed information about the cluster's tables.
TableDetails: These logs have detailed information about the cluster's tables.
Journal: These logs have detailed information about metadata operations.
You can choose to send the log data to a Log Analytics workspace, a storage account, or stream it to an event hub.
Diagnostic logs are disabled by default. Use the following steps to enable diagnostic logs for your cluster:
In theAzure portal, select the cluster resource that you want to monitor.
In theAzure portal, select the cluster resource that you want to monitor.
UnderMonitoring, selectDiagnostic settings.
UnderMonitoring, selectDiagnostic settings.

SelectAdd diagnostic setting.
SelectAdd diagnostic setting.
In theDiagnostic settingswindow:Enter aDiagnostic setting name.Select one or more destination targets: a Log Analytics workspace, a storage account, or an event hub.Select logs to be collected:Succeeded ingestion,Failed ingestion,Ingestion batching,Command,Query,Table usage statistics,Table details, orJournal.Selectmetricsto be collected (optional).SelectSaveto save the new diagnostic logs settings and metrics.
In theDiagnostic settingswindow:

Enter aDiagnostic setting name.
Select one or more destination targets: a Log Analytics workspace, a storage account, or an event hub.
Select logs to be collected:Succeeded ingestion,Failed ingestion,Ingestion batching,Command,Query,Table usage statistics,Table details, orJournal.
Selectmetricsto be collected (optional).
SelectSaveto save the new diagnostic logs settings and metrics.
Once the settings are ready, logs start to appear in the configured destination targets: a storage account, an event hub, or Log Analytics workspace.
Note
If you send logs to a Log Analytics workspace, theSucceededIngestion,FailedIngestion,IngestionBatching,Command,Query,TableUsageStatistics,TableDetails, andJournallogs are stored in Log Analytics tables named:SucceededIngestion,FailedIngestion,ADXIngestionBatching,ADXCommand,ADXQuery,ADXTableUsageStatistics,ADXTableDetails, andADXJournalrespectively.
SucceededIngestion
FailedIngestion
IngestionBatching
Command
Query
TableUsageStatistics
TableDetails
Journal
SucceededIngestion
FailedIngestion
ADXIngestionBatching
ADXCommand
ADXQuery
ADXTableUsageStatistics
ADXTableDetails
ADXJournal
Use Azure Monitor tools to analyze the data
These Azure Monitor tools are available in the Azure portal to help you analyze monitoring data:
Some Azure services have a built-in monitoring dashboard in the Azure portal. These dashboards are calledinsights, and you can find them in theInsightssection of Azure Monitor in the Azure portal.
Some Azure services have a built-in monitoring dashboard in the Azure portal. These dashboards are calledinsights, and you can find them in theInsightssection of Azure Monitor in the Azure portal.
Metrics explorerallows you to view and analyze metrics for Azure resources. For more information, seeAnalyze metrics with Azure Monitor metrics explorer.
Metrics explorerallows you to view and analyze metrics for Azure resources. For more information, seeAnalyze metrics with Azure Monitor metrics explorer.
Log Analyticsallows you to query and analyze log data using theKusto query language (KQL). For more information, seeGet started with log queries in Azure Monitor.
Log Analyticsallows you to query and analyze log data using theKusto query language (KQL). For more information, seeGet started with log queries in Azure Monitor.
The Azure portal has a user interface for viewing and basic searches of theactivity log. To do more in-depth analysis, route the data to Azure Monitor logs and run more complex queries in Log Analytics.
The Azure portal has a user interface for viewing and basic searches of theactivity log. To do more in-depth analysis, route the data to Azure Monitor logs and run more complex queries in Log Analytics.
Application Insightsmonitors the availability, performance, and usage of your web applications, so you can identify and diagnose errors without waiting for a user to report them.Application Insights includes connection points to various development tools and integrates with Visual Studio to support your DevOps processes. For more information, seeApplication monitoring for App Service.
Application Insightsmonitors the availability, performance, and usage of your web applications, so you can identify and diagnose errors without waiting for a user to report them.Application Insights includes connection points to various development tools and integrates with Visual Studio to support your DevOps processes. For more information, seeApplication monitoring for App Service.
Tools that allow more complex visualization include:
Dashboardsthat let you combine different kinds of data into a single pane in the Azure portal.
Workbooks, customizable reports that you can create in the Azure portal. Workbooks can include text, metrics, and log queries.
Grafana, an open platform tool that excels in operational dashboards. You can use Grafana to create dashboards that include data from multiple sources other than Azure Monitor.
Power BI, a business analytics service that provides interactive visualizations across various data sources. You can configure Power BI to automatically import log data from Azure Monitor to take advantage of these visualizations.
Export Azure Monitor data
You can export data out of Azure Monitor into other tools using:
Metrics:Use theREST API for metricsto extract metric data from the Azure Monitor metrics database. For more information, seeAzure Monitor REST API reference.
Metrics:Use theREST API for metricsto extract metric data from the Azure Monitor metrics database. For more information, seeAzure Monitor REST API reference.
Logs:Use the REST API or theassociated client libraries.
Logs:Use the REST API or theassociated client libraries.
TheLog Analytics workspace data export.
TheLog Analytics workspace data export.
To get started with the Azure Monitor REST API, seeAzure monitoring REST API walkthrough.
Use Kusto queries to analyze log data
You can analyze Azure Monitor Log data using the Kusto query language (KQL). For more information, seeLog queries in Azure Monitor.
Use Azure Monitor alerts to notify you of issues
Azure Monitor alertsallow you to identify and address issues in your system, and proactively notify you when specific conditions are found in your monitoring data before your customers notice them. You can alert on any metric or log data source in the Azure Monitor data platform. There aredifferent types of Azure Monitor alertsdepending on the services you're monitoring and the monitoring data you're collecting. SeeChoosing the right type of alert rule.
For examples of common alerts for Azure resources, seeSample log alert queries.
Implementing alerts at scale
For some services, you can monitor at scale by applying the same metric alert rule to multiple resources of the same type that exist in the same Azure region.Azure Monitor Baseline Alerts (AMBA)provides a semi-automated method of implementing important platform metric alerts, dashboards, and guidelines at scale.
Get personalized recommendations using Azure Advisor
For some services, if critical conditions or imminent changes occur during resource operations, an alert displays on the serviceOverviewpage in the portal. You can find more information and recommended fixes for the alert inAdvisor recommendationsunderMonitoringin the left menu. During normal operations, no advisor recommendations display.
For more information on Azure Advisor, seeAzure Advisor overview.
Related content
Azure Data Explorer monitoring data reference
Monitoring Azure resources with Azure Monitor
Feedback
Was this page helpful?
Additional resources