Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Provide access to Key Vault keys, certificates, and secrets with Azure role-based access control
Article
2025-03-31
21 contributors
In this article
Note
Key Vault resource provider supports two resource types:vaultsandmanaged HSMs. Access control described in this article only applies tovaults. To learn more about access control for managed HSM, seeManaged HSM access control.
Azure role-based access control (Azure RBAC) is an authorization system built onAzure Resource Managerthat provides centralized access management of Azure resources.
Azure RBAC allows users to manage keys, secrets, and certificates permissions, and provides one place to manage all permissions across all key vaults.
The Azure RBAC model allows users to set permissions on different scope levels: management group, subscription, resource group, or individual resources.  Azure RBAC for key vault also allows users to have separate permissions on individual keys, secrets, and certificates.
For more information, seeAzure role-based access control (Azure RBAC).
Best Practices for individual keys, secrets, and certificates role assignments
Our recommendation is to use a vault per application per environment (Development, Pre-Production, and Production) with roles assigned at the key vault scope.
Assigning roles on individual keys, secrets and certificates should be avoided. An exception is a scenario where individual secrets must be shared between multiple applications; for example, where one application needs to access data from another application.
More about Azure Key Vault management guidelines, see:
Azure Key Vault best practices
Azure Key Vault service limits
Azure built-in roles for Key Vault data plane operations
Note
TheKey Vault Contributorrole is for control plane operations only to manage key vaults. It does not allow access to keys, secrets and certificates.
Key Vault Contributor
For more information about Azure built-in roles definitions, seeAzure built-in roles.
Managing built-in Key Vault data plane role assignments
Using Azure RBAC secret, key, and certificate permissions with Key Vault
The new Azure RBAC permission model for key vault provides alternative to the vault access policy permissions model.
Prerequisites
You must have an Azure subscription. If you don't, you can create afree accountbefore you begin.
To manage role assignments, you must haveMicrosoft.Authorization/roleAssignments/writeandMicrosoft.Authorization/roleAssignments/deletepermissions, such asKey Vault Data Access Administrator(with restricted permissions to only assign/remove specific Key Vault roles),User Access Administrator, orOwner.
Microsoft.Authorization/roleAssignments/write
Microsoft.Authorization/roleAssignments/delete
Enable Azure RBAC permissions on Key Vault
Note
Changing the permission model requires unrestricted 'Microsoft.Authorization/roleAssignments/write' permission, which is part of theOwnerandUser Access Administratorroles. Classic subscription administrator roles like 'Service Administrator' and 'Co-Administrator', or restricted 'Key Vault Data Access Administrator' cannot be used to change permission model.
Enable Azure RBAC permissions on new key vault:
Enable Azure RBAC permissions on new key vault:

Enable Azure RBAC permissions on existing key vault:
Enable Azure RBAC permissions on existing key vault:

Important
Setting Azure RBAC permission model invalidates all access policies permissions. It can cause outages when equivalent Azure roles aren't assigned.
Assign role
Note
It's recommended to use the unique role ID instead of the role name in scripts. Therefore, if a role is renamed, your scripts would continue to work. In this document role name is used for readability.
Azure CLI
Azure PowerShell
Azure portal
To create a role assignment using the Azure CLI, use theaz role assignmentcommand:
az role assignment create --role {role-name-or-id} --assignee {assignee-upn}> --scope {scope}
az role assignment create --role {role-name-or-id} --assignee {assignee-upn}> --scope {scope}
For full details, seeAssign Azure roles using Azure CLI.
To create a role assignment using Azure PowerShell, use theNew-AzRoleAssignmentcmdlet:
#Assign by User Principal Name
New-AzRoleAssignment -RoleDefinitionName {role-name} -SignInName {assignee-upn} -Scope {scope}

#Assign by Service Principal ApplicationId
New-AzRoleAssignment -RoleDefinitionName Reader -ApplicationId {application-id} -Scope {scope}
#Assign by User Principal Name
New-AzRoleAssignment -RoleDefinitionName {role-name} -SignInName {assignee-upn} -Scope {scope}

#Assign by Service Principal ApplicationId
New-AzRoleAssignment -RoleDefinitionName Reader -ApplicationId {application-id} -Scope {scope}
For full details, seeAssign Azure roles using Azure PowerShell.
To assign roles using the Azure portal, seeAssign Azure roles using the Azure portal.  In the Azure portal, the Azure role assignments screen is available for all resources on the Access control (IAM) tab.
Resource group scope role assignment
Azure portal
Azure CLI
Azure PowerShell
Go to the Resource Group that contains your key vault.
Go to the Resource Group that contains your key vault.

SelectAccess control (IAM).
SelectAccess control (IAM).
SelectAdd>Add role assignmentto open the Add role assignment page.
SelectAdd>Add role assignmentto open the Add role assignment page.
Assign the following role. For detailed steps, seeAssign Azure roles using the Azure portal.SettingValueRole"Key Vault Reader"Assign access toCurrent userMembersSearch by email address
Assign the following role. For detailed steps, seeAssign Azure roles using the Azure portal.

az role assignment create --role "Key Vault Reader" --assignee {i.e user@microsoft.com} --scope /subscriptions/{subscriptionid}/resourcegroups/{resource-group-name}
az role assignment create --role "Key Vault Reader" --assignee {i.e user@microsoft.com} --scope /subscriptions/{subscriptionid}/resourcegroups/{resource-group-name}
For full details, seeAssign Azure roles using Azure CLI.
#Assign by User Principal Name
New-AzRoleAssignment -RoleDefinitionName 'Key Vault Reader' -SignInName {assignee-upn} -Scope /subscriptions/{subscriptionid}/resourcegroups/{resource-group-name}

#Assign by Service Principal ApplicationId
New-AzRoleAssignment -RoleDefinitionName 'Key Vault Reader' -ApplicationId {application-id} -Scope /subscriptions/{subscriptionid}/resourcegroups/{resource-group-name}
#Assign by User Principal Name
New-AzRoleAssignment -RoleDefinitionName 'Key Vault Reader' -SignInName {assignee-upn} -Scope /subscriptions/{subscriptionid}/resourcegroups/{resource-group-name}

#Assign by Service Principal ApplicationId
New-AzRoleAssignment -RoleDefinitionName 'Key Vault Reader' -ApplicationId {application-id} -Scope /subscriptions/{subscriptionid}/resourcegroups/{resource-group-name}
For full details, seeAssign Azure roles using Azure PowerShell.
Above role assignment provides ability to list key vault objects in key vault.
Key Vault scope role assignment
Azure portal
Azure CLI
Azure PowerShell
Go to Key Vault > Access control (IAM) tab
Go to Key Vault > Access control (IAM) tab
SelectAdd>Add role assignmentto open the Add role assignment page.
SelectAdd>Add role assignmentto open the Add role assignment page.
Assign the following role. For detailed steps, seeAssign Azure roles using the Azure portal.SettingValueRole"Key Vault Secrets Officer"Assign access toCurrent userMembersSearch by email address
Assign the following role. For detailed steps, seeAssign Azure roles using the Azure portal.

az role assignment create --role "Key Vault Secrets Officer" --assignee {assignee-upn} --scope /subscriptions/{subscriptionid}/resourcegroups/{resource-group-name}/providers/Microsoft.KeyVault/vaults/{key-vault-name}
az role assignment create --role "Key Vault Secrets Officer" --assignee {assignee-upn} --scope /subscriptions/{subscriptionid}/resourcegroups/{resource-group-name}/providers/Microsoft.KeyVault/vaults/{key-vault-name}
For full details, seeAssign Azure roles using Azure CLI.
#Assign by User Principal Name
New-AzRoleAssignment -RoleDefinitionName 'Key Vault Secrets Officer' -SignInName {assignee-upn} -Scope /subscriptions/{subscriptionid}/resourcegroups/{resource-group-name}/providers/Microsoft.KeyVault/vaults/{key-vault-name}

#Assign by Service Principal ApplicationId
New-AzRoleAssignment -RoleDefinitionName 'Key Vault Secrets Officer' -ApplicationId {application-id} -Scope /subscriptions/{subscriptionid}/resourcegroups/{resource-group-name}/providers/Microsoft.KeyVault/vaults/{key-vault-name}
#Assign by User Principal Name
New-AzRoleAssignment -RoleDefinitionName 'Key Vault Secrets Officer' -SignInName {assignee-upn} -Scope /subscriptions/{subscriptionid}/resourcegroups/{resource-group-name}/providers/Microsoft.KeyVault/vaults/{key-vault-name}

#Assign by Service Principal ApplicationId
New-AzRoleAssignment -RoleDefinitionName 'Key Vault Secrets Officer' -ApplicationId {application-id} -Scope /subscriptions/{subscriptionid}/resourcegroups/{resource-group-name}/providers/Microsoft.KeyVault/vaults/{key-vault-name}
For full details, seeAssign Azure roles using Azure PowerShell.
Secret scope role assignment
Note
Key vault secret, certificate, key scope role assignments should only be used for limited scenarios describedhereto comply with security best practices.
Azure portal
Azure CLI
Azure PowerShell
Open a previously created secret.
Open a previously created secret.
Click the Access control(IAM) tab
Click the Access control(IAM) tab

SelectAdd>Add role assignmentto open the Add role assignment page.
SelectAdd>Add role assignmentto open the Add role assignment page.
Assign the following role. For detailed steps, seeAssign Azure roles using the Azure portal.SettingValueRole"Key Vault Secrets Officer"Assign access toCurrent userMembersSearch by email address
Assign the following role. For detailed steps, seeAssign Azure roles using the Azure portal.

az role assignment create --role "Key Vault Secrets Officer" --assignee {i.e user@microsoft.com} --scope /subscriptions/{subscriptionid}/resourcegroups/{resource-group-name}/providers/Microsoft.KeyVault/vaults/{key-vault-name}/secrets/RBACSecret
az role assignment create --role "Key Vault Secrets Officer" --assignee {i.e user@microsoft.com} --scope /subscriptions/{subscriptionid}/resourcegroups/{resource-group-name}/providers/Microsoft.KeyVault/vaults/{key-vault-name}/secrets/RBACSecret
For full details, seeAssign Azure roles using Azure CLI.
#Assign by User Principal Name
New-AzRoleAssignment -RoleDefinitionName 'Key Vault Secrets Officer' -SignInName {i.e user@microsoft.com} -Scope /subscriptions/{subscriptionid}/resourcegroups/{resource-group-name}/providers/Microsoft.KeyVault/vaults/{key-vault-name}/secrets/RBACSecret

#Assign by Service Principal ApplicationId
New-AzRoleAssignment -RoleDefinitionName 'Key Vault Secrets Officer' -ApplicationId {i.e 00001111-aaaa-2222-bbbb-3333cccc4444} -Scope /subscriptions/{subscriptionid}/resourcegroups/{resource-group-name}/providers/Microsoft.KeyVault/vaults/{key-vault-name}/secrets/RBACSecret
#Assign by User Principal Name
New-AzRoleAssignment -RoleDefinitionName 'Key Vault Secrets Officer' -SignInName {i.e user@microsoft.com} -Scope /subscriptions/{subscriptionid}/resourcegroups/{resource-group-name}/providers/Microsoft.KeyVault/vaults/{key-vault-name}/secrets/RBACSecret

#Assign by Service Principal ApplicationId
New-AzRoleAssignment -RoleDefinitionName 'Key Vault Secrets Officer' -ApplicationId {i.e 00001111-aaaa-2222-bbbb-3333cccc4444} -Scope /subscriptions/{subscriptionid}/resourcegroups/{resource-group-name}/providers/Microsoft.KeyVault/vaults/{key-vault-name}/secrets/RBACSecret
For full details, seeAssign Azure roles using Azure PowerShell.
Test and verify
Note
Browsers use caching and page refresh is required after removing role assignments.
Allow several minutes for role assignments to refresh
Validate adding new secret without "Key Vault Secrets Officer" role on key vault level.Go to key vault Access control (IAM) tab and remove "Key Vault Secrets Officer" role assignment for this resource.Navigate to previously created secret. You can see all secret properties.Create new secret ( Secrets > +Generate/Import) should show this error:
Validate adding new secret without "Key Vault Secrets Officer" role on key vault level.
Go to key vault Access control (IAM) tab and remove "Key Vault Secrets Officer" role assignment for this resource.
Go to key vault Access control (IAM) tab and remove "Key Vault Secrets Officer" role assignment for this resource.

Navigate to previously created secret. You can see all secret properties.
Navigate to previously created secret. You can see all secret properties.

Create new secret ( Secrets > +Generate/Import) should show this error:
Create new secret ( Secrets > +Generate/Import) should show this error:

Validate secret editing without "Key Vault Secret Officer" role on secret level.Go to previously created secret Access Control (IAM) tab
and remove "Key Vault Secrets Officer" role assignment for
this resource.Navigate to previously created secret. You can see secret properties.
Validate secret editing without "Key Vault Secret Officer" role on secret level.
Go to previously created secret Access Control (IAM) tab
and remove "Key Vault Secrets Officer" role assignment for
this resource.
Go to previously created secret Access Control (IAM) tab
and remove "Key Vault Secrets Officer" role assignment for
this resource.
Navigate to previously created secret. You can see secret properties.
Navigate to previously created secret. You can see secret properties.

Validate secrets read without reader role on key vault level.Go to key vault resource group Access control (IAM) tab and remove "Key Vault Reader" role assignment.Navigating to key vault's Secrets tab should show this error:
Validate secrets read without reader role on key vault level.
Go to key vault resource group Access control (IAM) tab and remove "Key Vault Reader" role assignment.
Go to key vault resource group Access control (IAM) tab and remove "Key Vault Reader" role assignment.
Navigating to key vault's Secrets tab should show this error:
Navigating to key vault's Secrets tab should show this error:

Creating custom roles
az role definition create command
Azure CLI
Azure PowerShell
Azure portal
az role definition create --role-definition '{ \
   "Name": "Backup Keys Operator", \
   "Description": "Perform key backup/restore operations", \
    "Actions": [ 
    ], \
    "DataActions": [ \
        "Microsoft.KeyVault/vaults/keys/read ", \
        "Microsoft.KeyVault/vaults/keys/backup/action", \
         "Microsoft.KeyVault/vaults/keys/restore/action" \
    ], \
    "NotDataActions": [ 
   ], \
    "AssignableScopes": ["/subscriptions/{subscriptionId}"] \
}'
az role definition create --role-definition '{ \
   "Name": "Backup Keys Operator", \
   "Description": "Perform key backup/restore operations", \
    "Actions": [ 
    ], \
    "DataActions": [ \
        "Microsoft.KeyVault/vaults/keys/read ", \
        "Microsoft.KeyVault/vaults/keys/backup/action", \
         "Microsoft.KeyVault/vaults/keys/restore/action" \
    ], \
    "NotDataActions": [ 
   ], \
    "AssignableScopes": ["/subscriptions/{subscriptionId}"] \
}'
$roleDefinition = @"
{ 
   "Name": "Backup Keys Operator", 
   "Description": "Perform key backup/restore operations", 
    "Actions": [ 
    ], 
    "DataActions": [ 
        "Microsoft.KeyVault/vaults/keys/read ", 
        "Microsoft.KeyVault/vaults/keys/backup/action", 
         "Microsoft.KeyVault/vaults/keys/restore/action" 
    ], 
    "NotDataActions": [ 
   ], 
    "AssignableScopes": ["/subscriptions/{subscriptionId}"] 
}
"@

$roleDefinition | Out-File role.json

New-AzRoleDefinition -InputFile role.json
$roleDefinition = @"
{ 
   "Name": "Backup Keys Operator", 
   "Description": "Perform key backup/restore operations", 
    "Actions": [ 
    ], 
    "DataActions": [ 
        "Microsoft.KeyVault/vaults/keys/read ", 
        "Microsoft.KeyVault/vaults/keys/backup/action", 
         "Microsoft.KeyVault/vaults/keys/restore/action" 
    ], 
    "NotDataActions": [ 
   ], 
    "AssignableScopes": ["/subscriptions/{subscriptionId}"] 
}
"@

$roleDefinition | Out-File role.json

New-AzRoleDefinition -InputFile role.json
SeeCreate or update Azure custom roles using the Azure portal.
For more Information about how to create custom roles, see:
Azure custom roles
Frequently Asked Questions
Can I use Key Vault role-based access control (RBAC) permission model object-scope assignments to provide isolation for application teams within Key Vault?
No. RBAC permission model allows you to assign access to individual objects in Key Vault to user or application, but any administrative operations like network access control, monitoring, and objects management require vault level permissions, which will then expose secure information to operators across application teams.
Learn more
Azure RBAC Overview
Assign Azure roles using the Azure portal
Custom Roles Tutorial
Azure Key Vault best practices
Feedback
Was this page helpful?
Additional resources