Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Authorize access to data in Azure Storage
Article
2025-01-24
11 contributors
In this article
Each time you access data in your storage account, your client application makes a request over HTTP/HTTPS to Azure Storage. By default, every resource in Azure Storage is secured, and every request to a secure resource must be authorized. Authorization ensures that the client application has the appropriate permissions to access a particular resource in your storage account.
Important
For optimal security, Microsoft recommends using Microsoft Entra ID with managed identities to authorize requests against blob, queue, and table data, whenever possible. Authorization with Microsoft Entra ID and managed identities provides superior security and ease of use over Shared Key authorization. To learn more about managed identities, seeWhat are managed identities for Azure resources. For an example of how to enable and use a managed identity for a .NET application, seeAuthenticating Azure-hosted apps to Azure resources with .NET.
For resources hosted outside of Azure, such as on-premises applications, you can use managed identities through Azure Arc. For example, apps running on Azure Arc-enabled servers can use managed identities to connect to Azure services. To learn more, seeAuthenticate against Azure resources with Azure Arc-enabled servers.
For scenarios where shared access signatures (SAS) are used, Microsoft recommends using a user delegation SAS. A user delegation SAS is secured with Microsoft Entra credentials instead of the account key. To learn about shared access signatures, seeGrant limited access to data with shared access signatures. For an example of how to create and use a user delegation SAS with .NET, seeCreate a user delegation SAS for a blob with .NET.
Authorization for data operations
The following section describes authorization support and recommendations for each Azure Storage service.
Blobs
Files (SMB)
Files (REST)
Queues
Tables
The following table provides information about supported authorization options for blobs:
blob
dfs
The following table provides information about supported authorization options for Azure Files (SMB):
The following table provides information about supported authorization options for Azure Files (REST):
The following table provides information about supported authorization options for queues:
The following table provides information about supported authorization options for tables:
The following section briefly describes the authorization options for Azure Storage:
Shared Key authorization: Applies to blobs, files, queues, and tables. A client using Shared Key passes a header with every request that is signed using the storage account access key. For more information, seeAuthorize with Shared Key.The storage account access key should be used with caution. Anyone who has the access key is able to authorize requests against the storage account, and effectively has access to all the data. Microsoft recommends that you disallow Shared Key authorization for your storage account. When Shared Key authorization is disallowed, clients must use Microsoft Entra ID or a user delegation SAS to authorize requests for data in that storage account. For more information, seePrevent Shared Key authorization for an Azure Storage account.
Shared Key authorization: Applies to blobs, files, queues, and tables. A client using Shared Key passes a header with every request that is signed using the storage account access key. For more information, seeAuthorize with Shared Key.
The storage account access key should be used with caution. Anyone who has the access key is able to authorize requests against the storage account, and effectively has access to all the data. Microsoft recommends that you disallow Shared Key authorization for your storage account. When Shared Key authorization is disallowed, clients must use Microsoft Entra ID or a user delegation SAS to authorize requests for data in that storage account. For more information, seePrevent Shared Key authorization for an Azure Storage account.
Shared access signaturesfor blobs, files, queues, and tables. Shared access signatures (SAS) provide limited delegated access to resources in a storage account via a signed URL. The signed URL specifies the permissions granted to the resource and the interval over which the signature is valid. A service SAS or account SAS is signed with the account key, while the user delegation SAS is signed with Microsoft Entra credentials and applies to blobs only. For more information, seeUsing shared access signatures (SAS).
Shared access signaturesfor blobs, files, queues, and tables. Shared access signatures (SAS) provide limited delegated access to resources in a storage account via a signed URL. The signed URL specifies the permissions granted to the resource and the interval over which the signature is valid. A service SAS or account SAS is signed with the account key, while the user delegation SAS is signed with Microsoft Entra credentials and applies to blobs only. For more information, seeUsing shared access signatures (SAS).
Microsoft Entra integration: Applies to blob, queue, and table resources. Microsoft recommends using Microsoft Entra credentials with managed identities to authorize requests to data when possible for optimal security and ease of use. For more information about Microsoft Entra integration, see the articles forblob,queue, ortableresources.You can use Azure role-based access control (Azure RBAC) to manage a security principal's permissions to blob, queue, and table resources in a storage account. You can also use Azure attribute-based access control (ABAC) to add conditions to Azure role assignments for blob resources.For more information about RBAC, seeWhat is Azure role-based access control (Azure RBAC)?.For more information about ABAC, seeWhat is Azure attribute-based access control (Azure ABAC)?. To learn about the status of ABAC features, seeStatus of ABAC condition features in Azure Storage.
Microsoft Entra integration: Applies to blob, queue, and table resources. Microsoft recommends using Microsoft Entra credentials with managed identities to authorize requests to data when possible for optimal security and ease of use. For more information about Microsoft Entra integration, see the articles forblob,queue, ortableresources.
You can use Azure role-based access control (Azure RBAC) to manage a security principal's permissions to blob, queue, and table resources in a storage account. You can also use Azure attribute-based access control (ABAC) to add conditions to Azure role assignments for blob resources.
For more information about RBAC, seeWhat is Azure role-based access control (Azure RBAC)?.
For more information about ABAC, seeWhat is Azure attribute-based access control (Azure ABAC)?. To learn about the status of ABAC features, seeStatus of ABAC condition features in Azure Storage.
Microsoft Entra Domain Services authentication: Applies to Azure Files. Azure Files supports identity-based authorization over Server Message Block (SMB) through Microsoft Entra Domain Services. You can use Azure RBAC for granular control over a client's access to Azure Files resources in a storage account. For more information about Azure Files authentication using domain services, seeOverview of Azure Files identity-based authentication options for SMB access.
Microsoft Entra Domain Services authentication: Applies to Azure Files. Azure Files supports identity-based authorization over Server Message Block (SMB) through Microsoft Entra Domain Services. You can use Azure RBAC for granular control over a client's access to Azure Files resources in a storage account. For more information about Azure Files authentication using domain services, seeOverview of Azure Files identity-based authentication options for SMB access.
On-premises Active Directory Domain Services (AD DS, or on-premises AD DS) authentication: Applies to Azure Files. Azure Files supports identity-based authorization over SMB through AD DS. Your AD DS environment can be hosted in on-premises machines or in Azure VMs. SMB access to Files is supported using AD DS credentials from domain joined machines, either on-premises or in Azure. You can use a combination of Azure RBAC for share level access control and NTFS DACLs for directory/file level permission enforcement. For more information about Azure Files authentication using domain services, see theoverview.
On-premises Active Directory Domain Services (AD DS, or on-premises AD DS) authentication: Applies to Azure Files. Azure Files supports identity-based authorization over SMB through AD DS. Your AD DS environment can be hosted in on-premises machines or in Azure VMs. SMB access to Files is supported using AD DS credentials from domain joined machines, either on-premises or in Azure. You can use a combination of Azure RBAC for share level access control and NTFS DACLs for directory/file level permission enforcement. For more information about Azure Files authentication using domain services, see theoverview.
Anonymous read access: Applies to blob resources. This option isn't recommended. When anonymous access is configured, clients can read blob data without authorization. We recommend that you disable anonymous access for all of your storage accounts. For more information, seeOverview: Remediating anonymous read access for blob data.
Anonymous read access: Applies to blob resources. This option isn't recommended. When anonymous access is configured, clients can read blob data without authorization. We recommend that you disable anonymous access for all of your storage accounts. For more information, seeOverview: Remediating anonymous read access for blob data.
Storage Local Users: Applies to blobs with SFTP or files with SMB. Storage Local Users support container level permissions for authorization. SeeConnect to Azure Blob Storage by using the SSH File Transfer Protocol (SFTP)for more information on how Storage Local Users can be used with SFTP.
Storage Local Users: Applies to blobs with SFTP or files with SMB. Storage Local Users support container level permissions for authorization. SeeConnect to Azure Blob Storage by using the SSH File Transfer Protocol (SFTP)for more information on how Storage Local Users can be used with SFTP.
Microsoft Purview Information Protection integration: Applies to Azure Blob Storage and Azure Data Lake Storage. Microsoft Purview Information Protection offers protection policies to protect sensitive data acrossAzure Blob StorageandAzure Data Lake Storage. Purview offers the ability to publish labels based on the sensitivity of the content. You can create protection policies on top of these sensitivity labels to allow or deny access to certain users, enabling more secure and granular access to confidential files. This feature helps to not only minimize the risk of unauthorized access and potential data leaks, but also enhances the overall security posture of the organization. To learn more, seeAuthoring and publishing protection policies for Azure sources (Preview).
Microsoft Purview Information Protection integration: Applies to Azure Blob Storage and Azure Data Lake Storage. Microsoft Purview Information Protection offers protection policies to protect sensitive data acrossAzure Blob StorageandAzure Data Lake Storage. Purview offers the ability to publish labels based on the sensitivity of the content. You can create protection policies on top of these sensitivity labels to allow or deny access to certain users, enabling more secure and granular access to confidential files. This feature helps to not only minimize the risk of unauthorized access and potential data leaks, but also enhances the overall security posture of the organization. To learn more, seeAuthoring and publishing protection policies for Azure sources (Preview).
Protect your access keys
Storage account access keys provide full access to the storage account data and the ability to generate SAS tokens. Always be careful to protect your access keys. Use Azure Key Vault to manage and rotate your keys securely. Access to the shared key grants a user full access to a storage accountâs data. Access to shared keys should be carefully limited and monitored. Use user delegation SAS tokens with limited scope of access in scenarios where Microsoft Entra ID based authorization can't be used. Avoid hard-coding access keys or saving them anywhere in plain text that is accessible to others. Rotate your keys if you believe they might have been compromised.
Important
To prevent users from accessing data in your storage account with Shared Key, you can disallow Shared Key authorization for the storage account. Granular access to data with least privileges necessary is recommended as a security best practice. Microsoft Entra ID based authorization using managed identities should be used for scenarios that support OAuth. Kerberos or SMTP should be used for Azure Files over SMB. For Azure Files over REST, SAS tokens can be used. Shared key access should be disabled if not required to prevent its inadvertent use. For more information, seePrevent Shared Key authorization for an Azure Storage account.
To protect an Azure Storage account with Microsoft Entra Conditional Access policies, you must disallow Shared Key authorization for the storage account.
If you have disabled shared key access and you are seeing Shared Key authorization reported in the diagnostic logs, this indicates that trusted access is being used to access storage. For more details, seeTrusted access for resources registered in your Microsoft Entra tenant.
Next steps
Authorize access with Microsoft Entra ID to eitherblob,queue, ortableresources.
Authorize with Shared Key
Grant limited access to Azure Storage resources using shared access signatures (SAS)
Feedback
Was this page helpful?
Additional resources