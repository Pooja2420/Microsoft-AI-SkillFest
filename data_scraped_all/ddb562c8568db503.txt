Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Quickstart: Deploy an Azure Developer CLI template
Article
2024-12-22
14 contributors
In this article
In this quickstart, you'll learn how to provision and deploy app resources to Azure using anAzure Developer CLI (azd) templateand only a fewazdcommands.azdtemplates are standard code repositories that include your application source code, as well asazdconfiguration and infrastructure files to provision Azure resources. To learn more aboutazdtemplates and how they can accelerate your Azure provisioning and deployment process seeWhat are Azure Developer CLI templates?.
azd
azd
azd
azd
azd
Select and deploy the template
For the steps ahead, you'll use the following template to provision and deploy an app on Azure:
React Web App with Node.js API and MongoDB on Azure
React Web App with Python API and MongoDB on Azure
React Web App with C# API and MongoDB on Azure
Containerized React Web App with Java API and MongoDB on Azure
You can also select a template that matches your preferences from theAwesome AZDtemplate gallery site. Regardless of which template you use, you'll end up with the template code in your development environment and be able to run commands to build, redeploy, and monitor the app in Azure.
Select your preferred environment to continue:
Local install
Visual Studio Code
Codespaces
DevContainer
A local development environment is a great choice for traditional development workflows. You'll clone the template repository down onto your device and run commands against a local installation ofazd.
azd
Prerequisites
Install the Azure Developer CLI.
An Azure account with an active subscription.Create one for free.
Node.js with npm (v 16.13.1 LTS)
Review the architecture diagram and the Azure resources you'll deploy in the Node.js template README.
Install the Azure Developer CLI.
An Azure account with an active subscription.Create one for free.
Python 3.8
Node.js with npm (v 16.13.1 LTS)
Review the architecture diagram and the Azure resources you'll deploy in the Node.js template README.
Install the Azure Developer CLI.
An Azure account with an active subscription.Create one for free.
.NET 6.0
Review the architecture diagram and the Azure resources you'll deploy in the Node.js template README.
Install the Azure Developer CLI.
An Azure account with an active subscription.Create one for free.
OpenJDK 17
Docker.
Review the architecture diagram and the Azure resources you'll deploy in the Java template README.
Initialize the project
InFile Exploreror a terminal, create a new empty directory, and change into it.
InFile Exploreror a terminal, create a new empty directory, and change into it.
Run theazd initcommand and specify the template you want to use as a parameter:azd init --template todo-nodejs-mongoazd init --template todo-python-mongoazd init --template todo-csharp-cosmos-sqlazd init --template todo-java-mongo-acaEnter an environment name when prompted, such asazdquickstart, which sets a naming prefix for the resource group that will be created to hold the Azure resources.What is an Environment Name inazd?After you specify the environment,azdclones the template project to your machine and initializes the project.
Run theazd initcommand and specify the template you want to use as a parameter:
azd init
azd init --template todo-nodejs-mongo
azd init --template todo-nodejs-mongo
azd init --template todo-python-mongo
azd init --template todo-python-mongo
azd init --template todo-csharp-cosmos-sql
azd init --template todo-csharp-cosmos-sql
azd init --template todo-java-mongo-aca
azd init --template todo-java-mongo-aca
Enter an environment name when prompted, such asazdquickstart, which sets a naming prefix for the resource group that will be created to hold the Azure resources.What is an Environment Name inazd?
azdquickstart
azd
After you specify the environment,azdclones the template project to your machine and initializes the project.
azd
Provision and deploy the app resources
Run theazd auth logincommand andazdlaunches a browser for you to complete the sign-in process.azd auth login
Run theazd auth logincommand andazdlaunches a browser for you to complete the sign-in process.
azd auth login
azd
azd auth login
azd auth login
Run theazd upcommand:azd up
Run theazd upcommand:
azd up
azd up
azd up
Once you are signed-in to Azure, you will be prompted for the following information:ParameterDescriptionAzure LocationThe Azure location where your resources will be deployed.Azure SubscriptionThe Azure Subscription where your resources will be deployed.Select your desired values and press enter. Theazd upcommand handles the following tasks for you using the template configuration and infrastructure files:Creates and configures all necessary Azure resources (azd provision), including:Access policies and roles for your accountService-to-service communication with Managed IdentitiesPackages and deploys the code (azd deploy)When theazd upcommand completes successfully, the CLI displays two links to view resources created:ToDo API appToDo web app frontendNoteYou can callazd upas many times as you like to both provision and deploy updates to your application.
The deployment may fail due to a resource being undeployable in the selected region. Because this is a quick start, it is safe to delete the.azuredirectory and tryazd upagain. When asked, select a different region. In a more advanced scenario you could selectively edit files within the.azuredirectory to change the region.
Once you are signed-in to Azure, you will be prompted for the following information:
Azure Location
Azure Subscription
Select your desired values and press enter. Theazd upcommand handles the following tasks for you using the template configuration and infrastructure files:
azd up
Creates and configures all necessary Azure resources (azd provision), including:
azd provision
Access policies and roles for your account
Service-to-service communication with Managed Identities
Packages and deploys the code (azd deploy)
azd deploy
When theazd upcommand completes successfully, the CLI displays two links to view resources created:
azd up
ToDo API app
ToDo web app frontend

Note
You can callazd upas many times as you like to both provision and deploy updates to your application.
The deployment may fail due to a resource being undeployable in the selected region. Because this is a quick start, it is safe to delete the.azuredirectory and tryazd upagain. When asked, select a different region. In a more advanced scenario you could selectively edit files within the.azuredirectory to change the region.
azd up
.azure
azd up
.azure
The Azure Developer CLI provides a Visual Studio Code extension to streamline working withazdfeatures. For example, you can use the command palette interface to runazdcommands. You'll  need to install the Azure Developer CLI extension for Visual Studio Code to complete the steps ahead.
azd
azd
Install the Azure Developer CLI extension
Open Visual Studio Code.
Open Visual Studio Code.
From theViewmenu, selectExtensions.
From theViewmenu, selectExtensions.
In the search field, enterAzure Developer CLI.
In the search field, enterAzure Developer CLI.
Azure Developer CLI

SelectInstalland wait for the installation process to complete.
SelectInstalland wait for the installation process to complete.
Initialize a new app
Open an empty directory in Visual Studio Code.
Open an empty directory in Visual Studio Code.
From theViewmenu, selectCommand Palette....
From theViewmenu, selectCommand Palette....
Search for theAzure Developer CLI (azd): Initialize app (init)command and press enter. Theazd upcommand instructsazdto provision and deploy the app resources.
Search for theAzure Developer CLI (azd): Initialize app (init)command and press enter. Theazd upcommand instructsazdto provision and deploy the app resources.
Azure Developer CLI (azd): Initialize app (init)
azd up
azd

Choose theSelect a templateworkflow.
Choose theSelect a templateworkflow.

Search for theReact Web App with Node.js API and MongoDB on Azuretemplate and press enter to select it.Visual Studio Code clones down theazdtemplate. The template includes infrastructure as code files in theinfrafolder and a sample app in thesrcfolder. The infrastructure as code files provision the required resources on Azure required by the app when it is deployed.
Search for theReact Web App with Node.js API and MongoDB on Azuretemplate and press enter to select it.
Visual Studio Code clones down theazdtemplate. The template includes infrastructure as code files in theinfrafolder and a sample app in thesrcfolder. The infrastructure as code files provision the required resources on Azure required by the app when it is deployed.
azd
infra
src
Search for theReact Web App with Python API and MongoDB on Azuretemplate and press enter to select it.Visual Studio Code clones down theazdtemplate. The template includes infrastructure as code files in theinfrafolder and a sample app in thesrcfolder. The infrastructure as code files provision the required resources on Azure required by the app when it is deployed.
Search for theReact Web App with Python API and MongoDB on Azuretemplate and press enter to select it.
Visual Studio Code clones down theazdtemplate. The template includes infrastructure as code files in theinfrafolder and a sample app in thesrcfolder. The infrastructure as code files provision the required resources on Azure required by the app when it is deployed.
azd
infra
src
Search for theReact Web App with C# API and MongoDB on Azuretemplate and press enter to select it.Visual Studio Code clones down theazdtemplate. The template includes infrastructure as code files in theinfrafolder and a sample app in thesrcfolder. The infrastructure as code files provision the required resources on Azure required by the app when it is deployed.
Search for theReact Web App with C# API and MongoDB on Azuretemplate and press enter to select it.
Visual Studio Code clones down theazdtemplate. The template includes infrastructure as code files in theinfrafolder and a sample app in thesrcfolder. The infrastructure as code files provision the required resources on Azure required by the app when it is deployed.
azd
infra
src
Search for theContainerized React Web App with Java API and MongoDB on Azuretemplate and press enter to select it.awesome-azd.Visual Studio Code clones down theazdtemplate. The template includes infrastructure as code files in theinfrafolder and a sample app in thesrcfolder. The infrastructure as code files provision the required resources on Azure required by the app when it is deployed.
Search for theContainerized React Web App with Java API and MongoDB on Azuretemplate and press enter to select it.awesome-azd.
Visual Studio Code clones down theazdtemplate. The template includes infrastructure as code files in theinfrafolder and a sample app in thesrcfolder. The infrastructure as code files provision the required resources on Azure required by the app when it is deployed.
azd
infra
src
After the template is cloned, Visual Studio Code opens a terminal to prompt you for an environment name. Enter a short name of your choosing such asazdvscodeand press enter.Enter a new environment name: [? for help] azdvscodeThe environment name influences the naming of resources provisioned in Azure and creates a folder in the.azuretemplate directory to store certain environment settings.
After the template is cloned, Visual Studio Code opens a terminal to prompt you for an environment name. Enter a short name of your choosing such asazdvscodeand press enter.
Enter a new environment name: [? for help] azdvscode
Enter a new environment name: [? for help] azdvscode
The environment name influences the naming of resources provisioned in Azure and creates a folder in the.azuretemplate directory to store certain environment settings.
.azure
Provision and deploy the app resources
Open the Command Palette and search for theAzure Developer CLI (azd): Package, Provision and Deploy(up)command and press enter. Theazd upcommand instructsazdto provision and deploy the app resources.Visual Studio Code opens a terminal window to display the progress of the provisioning and deployment process.azduses the subscription and location settings you selected during theinitprocess when deploying resources.NoteThe provisioning and deployment process can take several minutes.
Open the Command Palette and search for theAzure Developer CLI (azd): Package, Provision and Deploy(up)command and press enter. Theazd upcommand instructsazdto provision and deploy the app resources.
Azure Developer CLI (azd): Package, Provision and Deploy(up)
azd up
azd
Visual Studio Code opens a terminal window to display the progress of the provisioning and deployment process.azduses the subscription and location settings you selected during theinitprocess when deploying resources.
azd
init
Note
The provisioning and deployment process can take several minutes.
When the deploy process complete, select the link in the output window provided byazdto launch your site in the browser.
When the deploy process complete, select the link in the output window provided byazdto launch your site in the browser.
azd
Codespaces are a great option for developers who prefer to work in containerized cloud environments and avoid installing tools or dependencies locally.
Set up your Codespace
In your browser, navigate to theReact Web App with Node.js API and MongoDB on Azuretemplate (or select one fromAwesome AZD)
In your browser, navigate to theReact Web App with Python API and MongoDB on Azuretemplate (or select one fromAwesome AZD)
In your browser, navigate to theReact Web App with C# API and MongoDB on Azuretemplate (or select one fromAwesome AZD)
In your browser, navigate to theContainerized React Web App with Java API and MongoDB on Azuretemplate (or select one fromAwesome AZD)
Above the file list, clickUse this template>Open in a Codespace.

With Codespaces, all pre-requisites are installed for you, including theazdVisual Studio Code extension.
azd

Run the template
Once your Codespace is created, right-clickazure.yamlin the root directory. From the options, selectup (provision resources, and deploy code to Azure).
Once your Codespace is created, right-clickazure.yamlin the root directory. From the options, selectup (provision resources, and deploy code to Azure).

When you run theazd upcommand, you'll be prompted to provide the following information and to sign in using a web browser and an authentication code:ParameterDescriptionEnvironment NamePrefix for the resource group that will be created to hold all Azure resources.What is an Environment Name inazd?You can always create a new environment withazd env new.Azure LocationThe Azure location where your resources will be deployed.Azure SubscriptionThe Azure Subscription where your resources will be deployed.This process may take some time to complete, as theazd upcommand handles the following tasks:Creates and configures all necessary Azure resources (azd provision).Configures access policies and roles for your account.Implements service-to-service communication with Managed Identities.Packages and deploys the code (azd deploy).Once you've provided the necessary parameters and theazd upcommand completes, the CodeSpaces terminal displays two Azure portal links to view resources created:ToDo API appToDo web app frontend
When you run theazd upcommand, you'll be prompted to provide the following information and to sign in using a web browser and an authentication code:
azd up

Environment Name
azd
azd env new
Azure Location
Azure Subscription
This process may take some time to complete, as theazd upcommand handles the following tasks:
azd up
Creates and configures all necessary Azure resources (azd provision).
azd provision
Configures access policies and roles for your account.
Implements service-to-service communication with Managed Identities.
Packages and deploys the code (azd deploy).
azd deploy
Once you've provided the necessary parameters and theazd upcommand completes, the CodeSpaces terminal displays two Azure portal links to view resources created:
azd up
ToDo API app
ToDo web app frontend

What happened?
Upon successful completion of theazd upcommand:
azd up
TheAzure resources referenced in the template'sREADME.mdfilehave been provisioned to the Azure subscription you specified after you ranazd up. You can now view those Azure resources via theAzure portal.
README.md
azd up
The app has been built and deployed to Azure. Using the web app URL output from theazd upcommand, you can browse to the fully functional app.
azd up
Note
You can callazd upas many times as you like to both provision and deploy your application.
azd up
Run and debug that requires launching a web browser is currently not support because ofknown limitation with GitHub Codespaces. For better experience, we recommend using Codespaces in Desktop.
ADevContaineris a Docker image that includes all of the prerequisites you need to work with theazdtemplate on your local machine. They're a great choice for developers who prefer containerized environments that still run on a local device instead of a cloud service like GitHub Codespaces.
azd
Prerequisites
Install the Azure Developer CLI.
An Azure account with an active subscription.Create one for free.
Review the architecture diagram and the Azure resources you'll deploy in the Node.js template README.
Install the Azure Developer CLI.
An Azure account with an active subscription.Create one for free.
Review the architecture diagram and the Azure resources you'll deploy in the Node.js template README.
Install the Azure Developer CLI.
An Azure account with an active subscription.Create one for free.
Review the architecture diagram and the Azure resources you'll deploy in the Node.js template README.
Install the Azure Developer CLI.
An Azure account with an active subscription.Create one for free.
Review the architecture diagram and the Azure resources you'll deploy in the Java template README.
Initialize the project
Open a terminal, create a new empty directory, and change into it.
Open a terminal, create a new empty directory, and change into it.
Run the following command to initialize the project:azd init --template todo-nodejs-mongoazd init --template todo-python-mongoazd init --template todo-csharp-cosmos-sqlazd init --template todo-java-mongo-acaWhen you run theazd initcommand, you'll be prompted to provide the following information:ParameterDescriptionEnvironment NamePrefix for the resource group that will be created to hold all Azure resources.What is an Environment Name inazd?You can always create a new environment withazd env new.
Run the following command to initialize the project:
azd init --template todo-nodejs-mongo
azd init --template todo-nodejs-mongo
azd init --template todo-python-mongo
azd init --template todo-python-mongo
azd init --template todo-csharp-cosmos-sql
azd init --template todo-csharp-cosmos-sql
azd init --template todo-java-mongo-aca
azd init --template todo-java-mongo-aca
When you run theazd initcommand, you'll be prompted to provide the following information:
azd init
Environment Name
azd
azd env new
Open the DevContainer
Open the project in VS Code.
Press F1 and choose:Remote-Containers: Rebuild and Reopen in Container
Remote-Containers: Rebuild and Reopen in Container
Runupcommand
up
Run the following command:
azd up
azd up
When you run theazd upcommand, you'll be prompted to provide the following information:
azd up
Azure Location
Azure Subscription
Theazd upcommand may take some time to run as it completes the following steps:
azd up
Creates and configures all necessary Azure resources (azd provision), including:Access policies and roles for your accountService-to-service communication with Managed Identities
azd provision
Access policies and roles for your account
Service-to-service communication with Managed Identities
Packages and deploys the code (azd deploy)
azd deploy
Once you've provided the necessary parameters and theazd upcommand completes, the CLI displays two Azure portal links to view resources created:
azd up
ToDo API app
ToDo web app frontend

Note
You can runazd upas many times as you like to both provision and deploy your application to the same region and with the same configuration values you provided on the first run.
azd up
Clean up resources
When you no longer need the resources created in this article, run the following command to power down the app:
azd down
azd down
If you want to redeploy to a different region, delete the.azuredirectory before runningazd upagain.  In a more advanced scenario you could selectively edit files within the.azuredirectory to change the region.
.azure
azd up
.azure
Request help
For information on how to file a bug, request help, or propose a new feature for the Azure Developer CLI, please visit thetroubleshooting and supportpage.
Next steps
Learn how to run and debug apps withazd.
azd
Troubleshoot common problems when using Azure Developer CLI (azd).
Read the Azure Developer CLI frequently asked questions (FAQ).
Feedback
Was this page helpful?
Additional resources