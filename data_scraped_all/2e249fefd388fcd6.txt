Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Add updates to projects manually
Article
2018-11-27
2 contributors
In this article
TFS 2017 | TFS 2015 | TFS 2013
Important
This article applies only to projects defined on an on-premises Team Foundation Server (TFS). Projects defined on Azure DevOps Servicesupdate automatically with each service upgrade.
For an overview of customization options, seeCustomize your work tracking experience
You can update projects that were created in earlier versions of Team Foundation Server (TFS) to use new features added with the upgrade to TFS. These new features are delivered through new work item type definitions or updates to the process configuration. You should update projects by using theConfigure Features wizard. However, if the wizard is unable to add a feature, you can add it manually.
Note
If you're upgrading a project that was based on a Microsoft Solutions Framework (MSF) version 4.2 process template, follow the procedures provided inUpdate a project based on a MSF v4.2 process template. If you have several projects you need to update, seeapply updates programmatically.
Update a project
Prior to manually adding or editing a work tracking object, firstdownload the latest process template. You'll use the definition files from the process template that most closely matches your existing project.
Several features, such as Code Review and Feedback, simply require importing WITs from the process template that you download, and updating the Categories and ProcessConfiguration file. Other features, however, may require more extensive changes depending on the customizations you've made to your project.
Note
Follow the links for each step to detail procedures provide later in this topic.
Download the latest process template: Get the definitions you need to import or update
Import WITs:  Code Review Request and Code Review Response
Update Categories:Add the Code Review Request and Code Review Response CategoriesAdd the Code Review Request and Code Review Response Categories to the Hidden Types Category
Add the Code Review Request and Code Review Response Categories
Add the Code Review Request and Code Review Response Categories to the Hidden Types Category
Update ProcessConfiguration: Add work item colors for Code Review Request and Code Review Response
To verify,create a code review request.
Download the latest process template: Get the definitions you need to import or update
Import WITs:  Code Review Request and Code Review Response
Update Categories: Verify Bugs Category is present and contains the Bug WITs you use to track bugs.
Update ProcessConfiguration: Add theBugWorkItemssection and verify or add custom state-to-metastate mappings to theBugWorkItemssection
BugWorkItems
BugWorkItems
To verify,check in a code fix and check that the bug state automatically updates.
Download the latest process template: Get the definitions you need to import or update
Import WITs: Add the Feedback Request and Feedback Response WITs
Update Categories:Add the Feedback Request and Feedback Response CategoriesAdd the Feedback Request and Feedback Response Categories to the Hidden Types Category
Add the Feedback Request and Feedback Response Categories
Add the Feedback Request and Feedback Response Categories to the Hidden Types Category
Update ProcessConfiguration:Add the Feedback Request and Feedback Response CategoriesAddTypeFieldfield mappings to support FeedbackAdd work item colors for Feedback Request and Feedback Response to ProcessConfiguration
Add the Feedback Request and Feedback Response Categories
AddTypeFieldfield mappings to support Feedback
TypeField
Add work item colors for Feedback Request and Feedback Response to ProcessConfiguration
To verify,create a feedback request.
Download the latest process template: Get the definitions you need to import or update
Edit WITs:Add fields that support planning tools to WITs that you include for the Requirement Category, Task Category, and Bug CategoryEdit the workflow of WITs that you include for the Requirement Category, Task Category, and Bug Category to support any-to-any transitions; add Removed state if not present.If you're upgrading a project that was based on version 5.0 of the Microsoft Solutions Framework (MSF) Agile process template, follow the procedures provided inUpdate the workflow for agile projects.
Add fields that support planning tools to WITs that you include for the Requirement Category, Task Category, and Bug Category
Edit the workflow of WITs that you include for the Requirement Category, Task Category, and Bug Category to support any-to-any transitions; add Removed state if not present.If you're upgrading a project that was based on version 5.0 of the Microsoft Solutions Framework (MSF) Agile process template, follow the procedures provided inUpdate the workflow for agile projects.
Update Categories:Add Categories if not presentAdd custom WITs to the Requirement Category and Task Category
Add Categories if not present
Add custom WITs to the Requirement Category and Task Category
Update ProcessConfiguration:Add ProcessConfiguration if not present.AddRequirementBacklogandTaskBacklogif not present.Verify or update the metastate mappings for the Requirement Category, Task Category, and Bug CategoryAddTypeFieldfield mappings to support planning toolsAdd work item colors for those WITs that you include in the Requirement Category, Task Category, and Bug Category
Add ProcessConfiguration if not present.
AddRequirementBacklogandTaskBacklogif not present.
RequirementBacklog
TaskBacklog
Verify or update the metastate mappings for the Requirement Category, Task Category, and Bug Category
AddTypeFieldfield mappings to support planning tools
TypeField
Add work item colors for those WITs that you include in the Requirement Category, Task Category, and Bug Category
To verify,start creating your backlog.
Edit WITs: AddStoryboardsControlto theFORMsection of those WITs you include in the Requirement Category; for example, add it to the User Story (Agile), Requirement (CMMI), or Product backlog item (Scrum)
StoryboardsControl
FORM
To verify,open Storyboarding from the WIT you updated.
Download the latest process template: Get the definitions you need to import or update
Import WITs: Add the Feature and Epic WITs
Update Categories: Add the Feature and Epic Categories
Update ProcessConfiguration:AddPortfolioBacklogssectionAdd work item colors for Feature and Epic to ProcessConfigurationAdd theHiddenBacklogsproperty to ProcessConfiguration
AddPortfolioBacklogssection
PortfolioBacklogs
Add work item colors for Feature and Epic to ProcessConfiguration
Add theHiddenBacklogsproperty to ProcessConfiguration
HiddenBacklogs
To verify,add some features and epics.
Download the latest process template: Get the definitions you need to import or update
Import WITs:  Add the Shared Parameter WIT
Update Categories:Add the Shared Parameter CategoryAdd the Shared Parameter Category  to the Hidden Types Category
Add the Shared Parameter Category
Add the Shared Parameter Category  to the Hidden Types Category
Update ProcessConfiguration: Add a work item color for the Shared Parameter to ProcessConfiguration
Verify that you can add a shared parameter set or convert to shared parameters.
Download the latest process template: Get the definitions you need to import or update
Import WITs: Test Plan and Test Suite
Update Categories:Add the Test Plan and Test Suite CategoriesAdd the Test Plan and Test Suite Categories to the Hidden Types Category
Add the Test Plan and Test Suite Categories
Add the Test Plan and Test Suite Categories to the Hidden Types Category
Run the TfsConfig TCM: Migrate existing test plans and suites to work item based test plans and suites.
To verify,create a test plan using the web portal
Download the latest process template: Get the definitions you need to import or update
Edit WITs:Agile Bug:Add fields:Activity,Story Points,Original Work,Completed Work,Remaining Work,Severity, andValue AreaAddNewstate and corresponding workflow transitionsAdd field rules to copy or set defaults during state transitionsAddFixed and verifiedas a Resolved ReasonCMMI Bug:Add fields:Size,Discipline,Original Work,Completed Work, andValue AreaAddNewstate and corresponding workflow transitionsScrum Bug:Add fields:Activity,Remaining Work,Priority, andValue AreaAdd rule to zero outRemaining WorkwhenState=Done
Agile Bug:Add fields:Activity,Story Points,Original Work,Completed Work,Remaining Work,Severity, andValue AreaAddNewstate and corresponding workflow transitionsAdd field rules to copy or set defaults during state transitionsAddFixed and verifiedas a Resolved Reason
Add fields:Activity,Story Points,Original Work,Completed Work,Remaining Work,Severity, andValue Area
Activity
Story Points
Original Work
Completed Work
Remaining Work
Severity
Value Area
AddNewstate and corresponding workflow transitions
New
Add field rules to copy or set defaults during state transitions
AddFixed and verifiedas a Resolved Reason
Fixed and verified
CMMI Bug:Add fields:Size,Discipline,Original Work,Completed Work, andValue AreaAddNewstate and corresponding workflow transitions
Add fields:Size,Discipline,Original Work,Completed Work, andValue Area
Size
Discipline
Original Work
Completed Work
Value Area
AddNewstate and corresponding workflow transitions
New
Scrum Bug:Add fields:Activity,Remaining Work,Priority, andValue AreaAdd rule to zero outRemaining WorkwhenState=Done
Add fields:Activity,Remaining Work,Priority, andValue Area
Activity
Remaining Work
Priority
Value Area
Add rule to zero outRemaining WorkwhenState=Done
Remaining Work
State=Done
Edit ProcessConfiguration: Add theBugsBehaviorproperty
BugsBehavior
To verify,go to the team settings admin page to choose how the team tracks bugs.

Get the latest version of the most compatible process template
The quickest way to make many of these updates is to copy definition files from the latest process template and import them to your project.
Important
If you are connecting to Azure DevOps Services, you can't export a process template. Instead, you customize your work tracking experience using the inheritance process. For details, seeProcess customization and inherited processes.
Open the same version of Visual Studio or Team Explorer as the on-premises TFS that you connect to. For example, if you connect to a TFS 2017 instance, you must connect from Visual Studio 2017, Visual Studio Community 2017, or Visual Studio Team Explorer 2017.You can always download a free version of Visual Studio and Team Explorer from theVisual Studio download site.If you aren't a member of the Project Collection Administrators group,get added as one.
Open the same version of Visual Studio or Team Explorer as the on-premises TFS that you connect to. For example, if you connect to a TFS 2017 instance, you must connect from Visual Studio 2017, Visual Studio Community 2017, or Visual Studio Team Explorer 2017.
You can always download a free version of Visual Studio and Team Explorer from theVisual Studio download site.
If you aren't a member of the Project Collection Administrators group,get added as one.
Open the Process Template Manager from theTeam>Team Project Collection Settingsmenu.You'll see a list of each process template that has been uploaded to the project collection.TheUpload,Download,Make Default, andDeletebuttons are disabled when you don't have the necessary permissions to manage process templates.
Open the Process Template Manager from theTeam>Team Project Collection Settingsmenu.

You'll see a list of each process template that has been uploaded to the project collection.

TheUpload,Download,Make Default, andDeletebuttons are disabled when you don't have the necessary permissions to manage process templates.
Download the process template to a local computer, select a folder where the process template will be downloaded.Choose the process that corresponds to the one you used previously to create your project. For example, if you're updating a project based on the Scrum process template, then selectScrum. Note that all version numbers have been removed from the process templates. If you don't see Agile, CMMI, or Scrum, then you need toupdate TFS.
Download the process template to a local computer, select a folder where the process template will be downloaded.
Choose the process that corresponds to the one you used previously to create your project. For example, if you're updating a project based on the Scrum process template, then selectScrum. Note that all version numbers have been removed from the process templates. If you don't see Agile, CMMI, or Scrum, then you need toupdate TFS.
You can determine which process template to select based on thework item types defined for your existing project.
To learn more about managing process templates, see,Upload or download a process template.

Import a WIT

Open a Command Prompt window according to the instructions provided inwitAdmin: Customize and manage objects for tracking work. For example:


Enter thewitadmin importwitdcommand, substituting your data for the arguments that are shown.witadmin importwitd /collection:CollectionURL /p:"ProjectName" /f:"DirectoryPath\WITDefinitionFile.xml"ForCollectionURLspecify the URL of a project collection and forProjectNamespecify the name of a project defined within the collection. You must specify the URL in the following format:http://ServerName:Port/VirtualDirectoryName/CollectionName.ForDirectoryPath, specify the path to theWorkItem Tracking/TypeDefinitionsfolder that holds the process template that you downloaded. The directory path must follow this structure:Drive:\TemplateFolder\WorkItem Tracking\TypeDefinitions.For  example,  import the Feedback Request WIT:witadmin importwitd /collection:"http://MyServer:8080/tfs/DefaultCollection"/p:MyProject /f:"C:\MyTemplates\WorkItem Tracking\TypeDefinitions\FeedbackRequest.xml"
Enter thewitadmin importwitdcommand, substituting your data for the arguments that are shown.
witadmin importwitd
witadmin importwitd /collection:CollectionURL /p:"ProjectName" /f:"DirectoryPath\WITDefinitionFile.xml"
witadmin importwitd /collection:CollectionURL /p:"ProjectName" /f:"DirectoryPath\WITDefinitionFile.xml"
ForCollectionURLspecify the URL of a project collection and forProjectNamespecify the name of a project defined within the collection. You must specify the URL in the following format:http://ServerName:Port/VirtualDirectoryName/CollectionName.
http://ServerName:Port/VirtualDirectoryName/CollectionName
ForDirectoryPath, specify the path to theWorkItem Tracking/TypeDefinitionsfolder that holds the process template that you downloaded. The directory path must follow this structure:Drive:\TemplateFolder\WorkItem Tracking\TypeDefinitions.
WorkItem Tracking/TypeDefinitions
Drive:\TemplateFolder\WorkItem Tracking\TypeDefinitions
For  example,  import the Feedback Request WIT:
witadmin importwitd /collection:"http://MyServer:8080/tfs/DefaultCollection"/p:MyProject /f:"C:\MyTemplates\WorkItem Tracking\TypeDefinitions\FeedbackRequest.xml"
witadmin importwitd /collection:"http://MyServer:8080/tfs/DefaultCollection"/p:MyProject /f:"C:\MyTemplates\WorkItem Tracking\TypeDefinitions\FeedbackRequest.xml"
Here's a checklist of WITs to import to support new features:
Portfolio Backlogs: Epic and Feature
Code Review: Code Review Request and Code Review Response
Feedback: Feedback Request and Feedback Response
Shared Parameters: Shared Parameters
Test Plan and Test Suite:  Test Plan and Test Suite

Edit a WIT
Depending on the customizations that you've made and the features you want to enable, you may need to update one or more WIT definition files. If you haven't customized a WIT, simply import the latest version. Otherwise, you can copy XML syntax from the WIT files you've downloaded from the latest process template.
Export the WITs that you have defined for the corresponding category.witadmin exportwitd /collection:CollectionURL /p:ProjectName /n:TypeName [/f:FileName]
Export the WITs that you have defined for the corresponding category.
witadmin exportwitd /collection:CollectionURL /p:ProjectName /n:TypeName [/f:FileName]
witadmin exportwitd /collection:CollectionURL /p:ProjectName /n:TypeName [/f:FileName]
Make the updates required to support your project and add new features. Review the following table for details on updates to make.WIT CategoryEdits to makeRequirement CategoryFor those WITs that you include in the Requirement Category, add or verify that the following fields are defined in theFIELDSsection:Agile: Stack Rank1, User Story, Area Path, Priority, Acceptance Criteria, and Value AreaCMMI: Stack Rank1, Size, Area Path, and Value AreaScrum: Backlog Priority1, Effort, Area Path, and Value Area.The fields you enter must correspond to the field values assigned in the ProcessConfiguration file fortype=Order,type=Effort, andtype=Team.All fields that are included in theRequirementBacklog-AddPanelsection of the ProcessConfiguration file(Optional: All fields that are included in theRequirementBacklog-AddPanelsection of the ProcessConfiguration fileAll fields that are included in theRequirementBacklog-AddPanelsection of the ProcessConfiguration fileUpdate or verify theWORKFLOWsection as follows:Agile, User Story: Add transitions fromActivetoRemovedandResolvedtoRemoved; remove rules that populateActivated ByandActivated Datefields when state=ResolvedScrum, Product backlog item: Add transition fromCommittedtoRemoved.If you've customized theWORKFLOWsection, make sure to define the required state-to-metastate mappings in theProcessConfigurationRequirementBacklogsection.Bug CategoryFor Bug or those WITs that you include in the Bug Category,  add or verify that the following fields are defined in theFIELDSsection:Agile: Stack Rank1, User Story, Activity, Area Path, Remaining Work, Original Work and Completed WorkCMMI: Stack Rank1, Size, Area Path, Discipline, Remaining Work, Original Work and Completed WorkScrum: Backlog Priority1, Effort, Activity, Area Path, and Remaining Work.The fields you enter must correspond to the field values assigned in the ProcessConfiguration file fortype=Order,type=Effort,type=Team,type=Activity, andtype=RemainingWork.All fields that are included in theBugWorkItemsAddPanelsection of the ProcessConfiguration file.Update or verify that theWORKFLOWsection supports the following:Agile:NewandRemovedstates and transitions fromNewandRemovedto all other statesCMMI: Stack Rank1, Size, Area Path, Discipline, Remaining Work, Original Work and Completed WorkScrum: Backlog Priority1, Effort, Activity, Area Path, and Remaining Work.The fields you enter must correspond to the field values assigned in the ProcessConfiguration file fortype=Order,type=Effort,type=Team,type=Activity, andtype=RemainingWork.All fields that are included in theBugWorkItems-AddPanelsection of the ProcessConfiguration file.
If you've customized theWORKFLOW, make sure to define the required state-to-metastate mappings in theProcessConfigurationBugWorkItemssection.Task CategoryFor Task or those WITs that you include in the Task Category, add or verify that the following fields are defined in theFIELDSsection:Agile: Stack Rank1, User Story, Activity, Area Path, Remaining Work, Original Work and Completed WorkCMMI: Stack Rank1, Size, Area Path, Discipline, Remaining Work, Original Work and Completed WorkScrum: Backlog Priority1, Effort, Activity, Area Path, and Remaining WorkThe fields you enter must correspond to the field values assigned in the ProcessConfiguration file fortype=Order,type=Effort,type=Team,type=Activity, andtype=RemainingWork.All fields that are included in theTaskBacklog-AddPanelsection of the ProcessConfiguration file.Add a rule to theWORKFLOWsection to empty the Remaining Work field when theState=ClosedorState=Done. For example:<STATE value="Closed">    
<FIELDS>    
<FIELD refname="Microsoft.VSTS.Common.ClosedDate">  
<REQUIRED />  
</FIELD>   
<FIELD refname="Microsoft.VSTS.Scheduling.RemainingWork">   
<EMPTY />   
</FIELD>   
</FIELDS>  
</STATE>If you've customized theWORKFLOWsection, make sure to define the required state-to-metastate mappings in theProcessConfigurationTaskBacklogsection.Feature CategoryUpdate the Feature WIT:Add the following fields to theFIELDSandFORMsections: Time Criticality, Effort, and Value AreaAdd the ID to theFORMsectionAdd a Transition fromActivetoRemovedin theWORKFLOWsection.Note1Don't add the Backlog Priority or Stack Rank fields to theFORMsection. These fields support ordering of backlog items and aren't meant to be set manually.
Make the updates required to support your project and add new features. Review the following table for details on updates to make.
WIT Category
Edits to make
Requirement Category
For those WITs that you include in the Requirement Category, add or verify that the following fields are defined in theFIELDSsection:
FIELDS
Agile: Stack Rank1, User Story, Area Path, Priority, Acceptance Criteria, and Value Area
CMMI: Stack Rank1, Size, Area Path, and Value Area
Scrum: Backlog Priority1, Effort, Area Path, and Value Area.
The fields you enter must correspond to the field values assigned in the ProcessConfiguration file fortype=Order,type=Effort, andtype=Team.
type=Order
type=Effort
type=Team
All fields that are included in theRequirementBacklog-AddPanelsection of the ProcessConfiguration file
RequirementBacklog-AddPanel
(Optional: All fields that are included in theRequirementBacklog-AddPanelsection of the ProcessConfiguration file
RequirementBacklog-AddPanel
All fields that are included in theRequirementBacklog-AddPanelsection of the ProcessConfiguration file
RequirementBacklog-AddPanel
Update or verify theWORKFLOWsection as follows:
WORKFLOW
Agile, User Story: Add transitions fromActivetoRemovedandResolvedtoRemoved; remove rules that populateActivated ByandActivated Datefields when state=Resolved
Active
Removed
Resolved
Removed
Activated By
Activated Date
Resolved
Scrum, Product backlog item: Add transition fromCommittedtoRemoved.
Committed
Removed
If you've customized theWORKFLOWsection, make sure to define the required state-to-metastate mappings in theProcessConfigurationRequirementBacklogsection.
WORKFLOW
RequirementBacklog
Bug Category
For Bug or those WITs that you include in the Bug Category,  add or verify that the following fields are defined in theFIELDSsection:
FIELDS
Agile: Stack Rank1, User Story, Activity, Area Path, Remaining Work, Original Work and Completed Work
CMMI: Stack Rank1, Size, Area Path, Discipline, Remaining Work, Original Work and Completed Work
Scrum: Backlog Priority1, Effort, Activity, Area Path, and Remaining Work.
The fields you enter must correspond to the field values assigned in the ProcessConfiguration file fortype=Order,type=Effort,type=Team,type=Activity, andtype=RemainingWork.
type=Order
type=Effort
type=Team
type=Activity
type=RemainingWork
All fields that are included in theBugWorkItemsAddPanelsection of the ProcessConfiguration file.
BugWorkItemsAddPanel
Update or verify that theWORKFLOWsection supports the following:
WORKFLOW
Agile:NewandRemovedstates and transitions fromNewandRemovedto all other states
New
Removed
New
Removed
CMMI: Stack Rank1, Size, Area Path, Discipline, Remaining Work, Original Work and Completed Work
Scrum: Backlog Priority1, Effort, Activity, Area Path, and Remaining Work.
The fields you enter must correspond to the field values assigned in the ProcessConfiguration file fortype=Order,type=Effort,type=Team,type=Activity, andtype=RemainingWork.
type=Order
type=Effort
type=Team
type=Activity
type=RemainingWork
All fields that are included in theBugWorkItems-AddPanelsection of the ProcessConfiguration file.
If you've customized theWORKFLOW, make sure to define the required state-to-metastate mappings in theProcessConfigurationBugWorkItemssection.
BugWorkItems-AddPanel
WORKFLOW
BugWorkItems
Task Category
For Task or those WITs that you include in the Task Category, add or verify that the following fields are defined in theFIELDSsection:
FIELDS
Agile: Stack Rank1, User Story, Activity, Area Path, Remaining Work, Original Work and Completed Work
CMMI: Stack Rank1, Size, Area Path, Discipline, Remaining Work, Original Work and Completed Work
Scrum: Backlog Priority1, Effort, Activity, Area Path, and Remaining Work
The fields you enter must correspond to the field values assigned in the ProcessConfiguration file fortype=Order,type=Effort,type=Team,type=Activity, andtype=RemainingWork.
type=Order
type=Effort
type=Team
type=Activity
type=RemainingWork
All fields that are included in theTaskBacklog-AddPanelsection of the ProcessConfiguration file.
TaskBacklog-AddPanel
Add a rule to theWORKFLOWsection to empty the Remaining Work field when theState=ClosedorState=Done. For example:
WORKFLOW
State=Closed
State=Done
<STATE value="Closed">    
<FIELDS>    
<FIELD refname="Microsoft.VSTS.Common.ClosedDate">  
<REQUIRED />  
</FIELD>   
<FIELD refname="Microsoft.VSTS.Scheduling.RemainingWork">   
<EMPTY />   
</FIELD>   
</FIELDS>  
</STATE>
<STATE value="Closed">    
<FIELDS>    
<FIELD refname="Microsoft.VSTS.Common.ClosedDate">  
<REQUIRED />  
</FIELD>   
<FIELD refname="Microsoft.VSTS.Scheduling.RemainingWork">   
<EMPTY />   
</FIELD>   
</FIELDS>  
</STATE>
If you've customized theWORKFLOWsection, make sure to define the required state-to-metastate mappings in theProcessConfigurationTaskBacklogsection.
WORKFLOW
TaskBacklog
Feature Category
Update the Feature WIT:
Add the following fields to theFIELDSandFORMsections: Time Criticality, Effort, and Value Area
FIELDS
FORM
Add the ID to theFORMsection
FORM
Add a Transition fromActivetoRemovedin theWORKFLOWsection.
Active
Removed
WORKFLOW
Note
1Don't add the Backlog Priority or Stack Rank fields to theFORMsection. These fields support ordering of backlog items and aren't meant to be set manually.
FORM
Import your WIT file.witadmin importwitd /collection:CollectionURL [/p:Project] /f:FileName "
Import your WIT file.witadmin importwitd /collection:CollectionURL [/p:Project] /f:FileName "
witadmin importwitd /collection:CollectionURL [/p:Project] /f:FileName "

Update Categories
Tip
See alsoUse categories to group work itemsandImport and export categories.
Export your categories file.witadmin exportcategories /collection:CollectionURL /p:ProjectName /f:"DirectoryPath\categories.xml"If you don't have a categories file, then copy the one from a default process template. Categories were introduced with TFS 2012 to more easily manage multiple work item types (WITs) as a group.
Export your categories file.
witadmin exportcategories /collection:CollectionURL /p:ProjectName /f:"DirectoryPath\categories.xml"
witadmin exportcategories /collection:CollectionURL /p:ProjectName /f:"DirectoryPath\categories.xml"
If you don't have a categories file, then copy the one from a default process template. Categories were introduced with TFS 2012 to more easily manage multiple work item types (WITs) as a group.
Make the updates required to support your project and add new features.
Here's a checklist of categories to import to add or verify to support new features:Code Review: Code Review Request Category and Code Review Response CategoryFeedback: Feedback Request Category and Feedback Response CategoryPlanning Tools: Requirement Category, Task Category, Bug Category, and Hidden Types CategoryShared Parameters: Shared Parameters CategoryPortfolio Backlogs: Epic Category and Feature CategoryTest Plan and Test Suite:  Test Plan Category and Test Suite CategoryIf you use custom WITs to support requirements or tasks, then you'll want to add or modify the Requirement Category and Task Category. For example, Fabrikam Fiber uses the following definitions to support their requirement tracking:<CATEGORY name="Requirement Category" refname="Microsoft.RequirementCategory">
    <DEFAULTWORKITEMTYPE name="Customer App" />
    <WORKITEMTYPE name="Service App" />
 </CATEGORY>
Make the updates required to support your project and add new features.
Here's a checklist of categories to import to add or verify to support new features:
Code Review: Code Review Request Category and Code Review Response Category
Feedback: Feedback Request Category and Feedback Response Category
Planning Tools: Requirement Category, Task Category, Bug Category, and Hidden Types Category
Shared Parameters: Shared Parameters Category
Portfolio Backlogs: Epic Category and Feature Category
Test Plan and Test Suite:  Test Plan Category and Test Suite Category
If you use custom WITs to support requirements or tasks, then you'll want to add or modify the Requirement Category and Task Category. For example, Fabrikam Fiber uses the following definitions to support their requirement tracking:
<CATEGORY name="Requirement Category" refname="Microsoft.RequirementCategory">
    <DEFAULTWORKITEMTYPE name="Customer App" />
    <WORKITEMTYPE name="Service App" />
 </CATEGORY>
<CATEGORY name="Requirement Category" refname="Microsoft.RequirementCategory">
    <DEFAULTWORKITEMTYPE name="Customer App" />
    <WORKITEMTYPE name="Service App" />
 </CATEGORY>
Import your categories file.witadmin importcategories /collection:CollectionURL /p:ProjectName /f:"DirectoryPath\categories.xml"
Import your categories file.
witadmin importcategories /collection:CollectionURL /p:ProjectName /f:"DirectoryPath\categories.xml"
witadmin importcategories /collection:CollectionURL /p:ProjectName /f:"DirectoryPath\categories.xml"
Additional resources:Use categories to group work items,Import and export categories

Update ProcessConfiguration
Agile planning tools and Portfolio Backlogs depend on the WITs, categories, and process configuration definitions that are made. These definitions are interdependent. Always add new WITs, update categories, and then update the ProcessConfiguration in that order.
Export your ProcessConfiguration file.witadmin exportprocessconfig /collection:CollectionURL /p:ProjectName /f:FileNameIf you don't have a ProcessConfiguration file, then copy the one from a default process template. ProcessConfiguration was introduced with TFS 2013 and replaced the CommonConfiguration and AgileConfiguration files.
witadmin exportprocessconfig /collection:CollectionURL /p:ProjectName /f:FileName
witadmin exportprocessconfig /collection:CollectionURL /p:ProjectName /f:FileName
If you don't have a ProcessConfiguration file, then copy the one from a default process template. ProcessConfiguration was introduced with TFS 2013 and replaced the CommonConfiguration and AgileConfiguration files.
Make the updates required to support your project and add new features. If you've customized the workflow for WITs defined in the Requirement, Task, Bug, Epic, or Feature categories, reviewProcess configuration, Map workflow states to metastates.Here's a checklist of updates to make:Feature supportedSectionEdits to makePlanning ToolsRequirementBacklogVerify or update the state-to-metastate mappings for each WIT in the Requirement Category:Map the start of each workflow state totype="Proposed"Map each intermediate workflow state you want to have show up on the Kanban board totype="InProgress"Map the end of each workflow state totype="Complete"Make sure that you have only one State mapped totype="Complete"For example:<States><State value="New" type="Proposed" /><State value="Active" type="InProgress" /><State value="Resolved" type="InProgress" /><State value="Closed" type="Complete" /></States>Planning ToolsTaskBacklogVerify or update the state-to-metastate mappings for  each WIT in the Task Category:Map the start of each workflow state totype="Proposed"Map each intermediate workflow state you want to have show up on the Kanban board totype="InProgress"Map the end of each workflow state totype="Complete"Make sure that you have only one State mapped totype="Complete"Planning ToolsBugWorkItemsVerify or update the state-to-metastate mappings for each WIT in the Bug Category:Map the start of each workflow state totype="Proposed"Map each intermediate workflow state you want to have show up on the Kanban board totype="InProgress"Map the end of each workflow state totype="Complete"Make sure that you have only one State mapped totype="Complete"Portfolio BacklogsPortfolioBacklogsAdd PortfolioBacklogs section and verify the following:Each intermediate portfolio backlog specifies the next level portfolio backlog as its parentThe top  portfolio backlog doesn't specify a parent portfolio backlogFor example:<PortfolioBacklog category="Microsoft.FeatureCategory" pluralName="Features" singularName="Feature" parent="Microsoft.EpicCategory" workItemCountLimit="1000">. . .</PortfolioBacklog>Planning ToolsWorkItemColorsAdd primary and secondary HEX colors for each WIT defined for the project. For example:<WorkItemColor primary="FF009CCC" secondary="FFD6ECF2" name="User Story" /><WorkItemColor primary="FF773B93" secondary="FFEEE2F2" name="Feature" /><WorkItemColor primary="FFFF7B00" secondary="FFFFD7B5" name="Epic" />Planning Tools and FeedbackTypeFieldsMake sure that the fields specified for eachTypeFieldmap to those in use for the WITs defined for the Requirement Category, Task Category, and Bug Category.1For example:<TypeField refname="System.AreaPath" type="Team" /><TypeField refname="Microsoft.VSTS.Scheduling.RemainingWork" type="RemainingWork" format="{0} h" /><TypeField refname="Microsoft.VSTS.Common.StackRank" type="Order" />Portfolio Backlogs and Bug BehaviorPropertiesAdd thePropertiessection.  For example:<Properties><Property name="BugsBehavior" value="AsTasks" /><Property name="HiddenBacklogs" value="Microsoft.EpicCategory" /></Properties>1Don't modify theTypeFieldValuesfor theMicrosoft.VSTS.Feedback.ApplicationType.
Here's a checklist of updates to make:
RequirementBacklog
Map the start of each workflow state totype="Proposed"
type="Proposed"
Map each intermediate workflow state you want to have show up on the Kanban board totype="InProgress"
type="InProgress"
Map the end of each workflow state totype="Complete"
type="Complete"
Make sure that you have only one State mapped totype="Complete"
type="Complete"
<States>
<State value="New" type="Proposed" />
<State value="Active" type="InProgress" />
<State value="Resolved" type="InProgress" />
<State value="Closed" type="Complete" />
</States>
TaskBacklog
Map the start of each workflow state totype="Proposed"
type="Proposed"
Map each intermediate workflow state you want to have show up on the Kanban board totype="InProgress"
type="InProgress"
Map the end of each workflow state totype="Complete"
type="Complete"
Make sure that you have only one State mapped totype="Complete"
type="Complete"
BugWorkItems
Verify or update the state-to-metastate mappings for each WIT in the Bug Category:
Map the start of each workflow state totype="Proposed"
type="Proposed"
Map each intermediate workflow state you want to have show up on the Kanban board totype="InProgress"
type="InProgress"
Map the end of each workflow state totype="Complete"
type="Complete"
Make sure that you have only one State mapped totype="Complete"
type="Complete"
PortfolioBacklogs
Each intermediate portfolio backlog specifies the next level portfolio backlog as its parent
The top  portfolio backlog doesn't specify a parent portfolio backlog
<PortfolioBacklog category="Microsoft.FeatureCategory" pluralName="Features" singularName="Feature" parent="Microsoft.EpicCategory" workItemCountLimit="1000">
. . .
</PortfolioBacklog>
WorkItemColors
<WorkItemColor primary="FF009CCC" secondary="FFD6ECF2" name="User Story" />
<WorkItemColor primary="FF773B93" secondary="FFEEE2F2" name="Feature" />
<WorkItemColor primary="FFFF7B00" secondary="FFFFD7B5" name="Epic" />
TypeFields
Make sure that the fields specified for eachTypeFieldmap to those in use for the WITs defined for the Requirement Category, Task Category, and Bug Category.1For example:
TypeField
<TypeField refname="System.AreaPath" type="Team" />
<TypeField refname="Microsoft.VSTS.Scheduling.RemainingWork" type="RemainingWork" format="{0} h" />
<TypeField refname="Microsoft.VSTS.Common.StackRank" type="Order" />
Properties
Properties
<Properties>
<Property name="BugsBehavior" value="AsTasks" />
<Property name="HiddenBacklogs" value="Microsoft.EpicCategory" />
</Properties>
1Don't modify theTypeFieldValuesfor theMicrosoft.VSTS.Feedback.ApplicationType.
TypeFieldValues
Microsoft.VSTS.Feedback.ApplicationType
Import your ProcessConfiguration file.witadmin importprocessconfig /collection:CollectionURL /p:ProjectName /f:FileName
witadmin importprocessconfig /collection:CollectionURL /p:ProjectName /f:FileName
Tip
See alsoProcessConfiguration XML element reference.

Migrate existing test plans and suites
Migrate existing test plans and suites to work item based test plans and suites.
Open a Command Prompt window on the TFS application-tier server. For example:cd %programfiles%\TFS 14.0\Tools
Open a Command Prompt window on the TFS application-tier server. For example:cd %programfiles%\TFS 14.0\Tools
cd %programfiles%\TFS 14.0\Tools
Run theTfsConfig TCMcommand.TFSConfig TCM /upgradeTestPlans /CollectionName:CollectionName /TeamProject:TeamProjectNameFor example:TFSConfig TCM /upgradeTestPlans /CollectionName:"Fabrikam Fiber Collection" /TeamProject:"Fabrikam Fiber"
Run theTfsConfig TCMcommand.TFSConfig TCM /upgradeTestPlans /CollectionName:CollectionName /TeamProject:TeamProjectName
TfsConfig TCM
TFSConfig TCM /upgradeTestPlans /CollectionName:CollectionName /TeamProject:TeamProjectName
For example:
TFSConfig TCM /upgradeTestPlans /CollectionName:"Fabrikam Fiber Collection" /TeamProject:"Fabrikam Fiber"
TFSConfig TCM /upgradeTestPlans /CollectionName:"Fabrikam Fiber Collection" /TeamProject:"Fabrikam Fiber"
Respond to the questions that appear.Logging sent to file C:\ProgramData\Microsoft\Team Foundation\Server Configuration\Logs\TPC_UPG_AT_0515_143821.log
Microsoft (R) TfsConfig - Team Foundation Server Configuration Tool
Copyright (c) Microsoft Corporation. All rights reserved.

Command: tcm
Microsoft (R) TfsConfig - Team Foundation Server Configuration Tool
Copyright (c) Microsoft Corporation. All rights reserved.

In order to upgrade the test plans, you have to complete the following steps:
1. Import the test plan work item definition into the project. Have you complete
d this step? (Yes/No) Yes
2. Import the test plan category into the project. Have you completed this step?
(Yes/No) Yes

Test plan migration job successfully scheduled.
Respond to the questions that appear.
Logging sent to file C:\ProgramData\Microsoft\Team Foundation\Server Configuration\Logs\TPC_UPG_AT_0515_143821.log
Microsoft (R) TfsConfig - Team Foundation Server Configuration Tool
Copyright (c) Microsoft Corporation. All rights reserved.

Command: tcm
Microsoft (R) TfsConfig - Team Foundation Server Configuration Tool
Copyright (c) Microsoft Corporation. All rights reserved.

In order to upgrade the test plans, you have to complete the following steps:
1. Import the test plan work item definition into the project. Have you complete
d this step? (Yes/No) Yes
2. Import the test plan category into the project. Have you completed this step?
(Yes/No) Yes

Test plan migration job successfully scheduled.
Logging sent to file C:\ProgramData\Microsoft\Team Foundation\Server Configuration\Logs\TPC_UPG_AT_0515_143821.log
Microsoft (R) TfsConfig - Team Foundation Server Configuration Tool
Copyright (c) Microsoft Corporation. All rights reserved.

Command: tcm
Microsoft (R) TfsConfig - Team Foundation Server Configuration Tool
Copyright (c) Microsoft Corporation. All rights reserved.

In order to upgrade the test plans, you have to complete the following steps:
1. Import the test plan work item definition into the project. Have you complete
d this step? (Yes/No) Yes
2. Import the test plan category into the project. Have you completed this step?
(Yes/No) Yes

Test plan migration job successfully scheduled.
If you're migrating a large quantity of test plans and test suites, you can run the following command to monitor the progress of data migration.TFSConfig TCM /upgradeStatus /collectionName:CollectionName /TeamProject:TeamProjectName
If you're migrating a large quantity of test plans and test suites, you can run the following command to monitor the progress of data migration.
TFSConfig TCM /upgradeStatus /collectionName:CollectionName /TeamProject:TeamProjectName
TFSConfig TCM /upgradeStatus /collectionName:CollectionName /TeamProject:TeamProjectName
After a successful data migration, all test management data should be available for use. For more information about this utility, go here.
Review and verify access to new features
After you update your project manually, you have access to the latest features. However, you still might want to make some additional configurations or customizations to support your work tracking needs.
SeeAdditional configuration optionsfor information on how to verify or activate each feature.
Related articles
You can learn more about the objects used to track work and support Agile tools from these topics:
Choose a process
Customize your work tracking experience
Customize a process template
Overview of process template files
If you need to rename a WIT, usewitadmin renamewitdcommand to change the name, and then update the Categories definition file. SeeAdd or modify a work item type.
Additional resources