Service Bus
Reference

Connect to Azure Service Bus to send and receive messages.
This article describes the operations for the Azure Service Busbuilt-inconnector, which is availableonlyfor Standard workflows in single-tenant Azure Logic Apps. If you're looking for the Azure Service Busmanagedconnector operations instead, seeAzure Service Bus managed connector reference.
By default, Azure Service Bus built-in connector operations arestateless, but you canenable stateful mode for these operations.
Built-in connector settings
In a Standard logic app resource, the Azure Service Bus built-in connector includes settings that control various thresholds for performance, throughput, timeout, and so on. For more information, reviewReference for host settings - host.json - Built-in Azure Service Bus operations.
Connector how-to guide
For more information about connecting to Azure Service Bus from your workflow in Azure Logic Apps, seeConnect to Azure Service Bus from workflows in Azure Logic Apps.
Authentication
Connection String
The connection string for Service Bus.
Parameters
Active Directory OAuth
Active Directory OAuth
Parameters
Managed identity
Managed identity
Parameters
Actions
Abandon the message in a queue.
Abandon the message in a session enabled queue or topic subscription.
Abandon the message in a topic subscription.
The operation closes a queue session.
The operation closes a topic session.
Complete the message in a queue.
Complete the message in a session enabled queue or topic subscription.
Complete the message in a topic subscription.
The operation creates a topic subscription.
Dead-letter the message in a queue.
Dead-letter the message in a session enabled queue or topic subscription.
Dead-letter the message in a topic subscription.
Defer the processing for the message in a queue.
Defer the processing for the message in a session enabled queue or topic subscription.
Defer the processing for the message in a topic subscription.
The operation deletes a topic subscription.
The operation gets a deferred message from a queue.
The operation gets a deferred message from a queue session.
The operation gets a deferred message from a topic subscription.
The operation gets a deferred message from a topic subscription session.
The operation gets messages from a queue.
The operation gets messages from a queue session.
The operation gets messages from a topic subscription.
The operation gets messages from a topic subscription in a session.
The operation renews a queue session.
The operation renews a topic session.
The operation renews lock on a message in a topic subscription.
The operation renews lock on a message in a queue.
Send messages for replication to another service bus queue or topic. These messages include extra properties for replication purposes.
To find available messages, use the trigger named "When messages are available in a queue for replication" or "When messages are available in a topic subscription for replication".
Send message to a queue or topic.
This operation sends messages to a queue or topic.
Abandon the message in a queue
Abandon the message in a queue.
The name for the queue.
The lock token of the message to abandon
Abandon the message in a session
Abandon the message in a session enabled queue or topic subscription.
The ID for the message to abandon
The lock token of the message to abandon
Abandon the message in a topic subscription
Abandon the message in a topic subscription.
The name for the topic.
The name for the topic subscription.
The lock token of the message to abandon
Close a queue session
The operation closes a queue session.
The name for the queue.
The identifier of the session.
Close a topic session
The operation closes a topic session.
The name for the topic.
The name for the topic subscription.
The identifier of the session.
Complete the message in a queue
Complete the message in a queue.
The name for the queue.
The lock token of the message to complete.
Complete the message in a session
Complete the message in a session enabled queue or topic subscription.
The ID for the message to complete.
The lock token of the message to complete.
Complete the message in a topic subscription
Complete the message in a topic subscription.
The name for the topic.
The name for the topic subscription.
The lock token of the message to complete.
Create a topic subscription
The operation creates a topic subscription.
Name of the topic.
Name of the topic subscription.
The topic subscription filter type.
Name of the topic.
Dead-letter the message in a queue
Dead-letter the message in a queue.
The name for the queue.
The lock token of the message to dead-letter.
The reason or error code for dead-lettering the message.
A detailed description of the dead-letter reason.
Dead-letter the message in a session
Dead-letter the message in a session enabled queue or topic subscription.
The ID for the message to dead-letter.
The lock token of the message to dead-letter.
The reason or error code for dead-lettering the message.
A detailed description of the dead-letter reason.
Dead-letter the message in a topic subscription
Dead-letter the message in a topic subscription.
The name for the topic.
The name for the topic subscription.
The lock token of the message to dead-letter.
The reason or error code for dead-lettering the message.
A detailed description of the dead-letter reason.
Defer message in a queue
Defer the processing for the message in a queue.
The name for the queue.
The lock token of the message to defer.
Defer message in a session
Defer the processing for the message in a session enabled queue or topic subscription.
The ID for the message to defer.
The lock token of the message to defer.
Defer message in a topic subscription
Defer the processing for the message in a topic subscription.
The name for the topic.
The name for the topic subscription.
The lock token of the message to defer.
Delete a topic subscription
The operation deletes a topic subscription.
Name of the topic.
Name of the topic subscription.
Get deferred message from a queue
The operation gets a deferred message from a queue.
The name for the queue.
The sequence number is a unique 64-bit integer assigned to a message as it is accepted and stored by the broker and functions as its true identifier.
Content of the message.
The content type of the message.
The identifier of the session.
Any key-value pairs for user properties.
A user-defined value that Service Bus can use to identify duplicate messages, if enabled.
The lock token is a reference to the lock that is being held by the broker in peek-lock receive mode.
Sends to address
The address where to send a reply.
The identifier of the session where to reply.
Application specific label
The UTC date and time for when to add the message to the queue.
The identifier of the correlation.
The number of ticks or duration for when a message is valid. The duration starts from when the message is sent to Service Bus.
Only set in messages that have been dead-lettered and later autoforwarded from the dead-letter queue to another entity. Indicates the entity in which the message was dead-lettered.
Number of deliveries that have been attempted for this message. The count is incremented when a message lock expires, or the message is explicitly abandoned by the receiver.
For messages that have been autoforwarded, this property reflects the sequence number that had first been assigned to the message at its original point of submission.
The UTC instant at which the message has been accepted and stored in the entity.
For messages retrieved under a lock (peek-lock receive mode, not pre-settled) this property reflects the UTC instant until which the message is held locked in the queue/subscription.
The sequence number is a unique 64-bit integer assigned to a message as it is accepted and stored by the broker and functions as its true identifier.
Get deferred message from a queue session
The operation gets a deferred message from a queue session.
The name for the queue.
The sequence number is a unique 64-bit integer assigned to a message as it is accepted and stored by the broker and functions as its true identifier.
The identifier of the session.
Acquire a new session if needed.
Content of the message.
The content type of the message.
The identifier of the session.
Any key-value pairs for user properties.
A user-defined value that Service Bus can use to identify duplicate messages, if enabled.
The lock token is a reference to the lock that is being held by the broker in peek-lock receive mode.
Sends to address
The address where to send a reply.
The identifier of the session where to reply.
Application specific label
The UTC date and time for when to add the message to the queue.
The identifier of the correlation.
The number of ticks or duration for when a message is valid. The duration starts from when the message is sent to Service Bus.
Only set in messages that have been dead-lettered and later autoforwarded from the dead-letter queue to another entity. Indicates the entity in which the message was dead-lettered.
Number of deliveries that have been attempted for this message. The count is incremented when a message lock expires, or the message is explicitly abandoned by the receiver.
For messages that have been autoforwarded, this property reflects the sequence number that had first been assigned to the message at its original point of submission.
The UTC instant at which the message has been accepted and stored in the entity.
For messages retrieved under a lock (peek-lock receive mode, not pre-settled) this property reflects the UTC instant until which the message is held locked in the queue/subscription.
The sequence number is a unique 64-bit integer assigned to a message as it is accepted and stored by the broker and functions as its true identifier.
Get deferred message from a topic subscription
The operation gets a deferred message from a topic subscription.
The name for the topic.
The name for the topic subscription.
The sequence number is a unique 64-bit integer assigned to a message as it is accepted and stored by the broker and functions as its true identifier.
Content of the message.
The content type of the message.
The identifier of the session.
Any key-value pairs for user properties.
A user-defined value that Service Bus can use to identify duplicate messages, if enabled.
The lock token is a reference to the lock that is being held by the broker in peek-lock receive mode.
Sends to address
The address where to send a reply.
The identifier of the session where to reply.
Application specific label
The UTC date and time for when to add the message to the queue.
The identifier of the correlation.
The number of ticks or duration for when a message is valid. The duration starts from when the message is sent to Service Bus.
Only set in messages that have been dead-lettered and later autoforwarded from the dead-letter queue to another entity. Indicates the entity in which the message was dead-lettered.
Number of deliveries that have been attempted for this message. The count is incremented when a message lock expires, or the message is explicitly abandoned by the receiver.
For messages that have been autoforwarded, this property reflects the sequence number that had first been assigned to the message at its original point of submission.
The UTC instant at which the message has been accepted and stored in the entity.
For messages retrieved under a lock (peek-lock receive mode, not pre-settled) this property reflects the UTC instant until which the message is held locked in the queue/subscription.
The sequence number is a unique 64-bit integer assigned to a message as it is accepted and stored by the broker and functions as its true identifier.
Get deferred message from a topic subscription session
The operation gets a deferred message from a topic subscription session.
The name for the topic.
The name for the topic subscription.
The sequence number is a unique 64-bit integer assigned to a message as it is accepted and stored by the broker and functions as its true identifier.
The identifier of the session.
Acquire a new session if needed.
Content of the message.
The content type of the message.
The identifier of the session.
Any key-value pairs for user properties.
A user-defined value that Service Bus can use to identify duplicate messages, if enabled.
The lock token is a reference to the lock that is being held by the broker in peek-lock receive mode.
Sends to address
The address where to send a reply.
The identifier of the session where to reply.
Application specific label
The UTC date and time for when to add the message to the queue.
The identifier of the correlation.
The number of ticks or duration for when a message is valid. The duration starts from when the message is sent to Service Bus.
Only set in messages that have been dead-lettered and later autoforwarded from the dead-letter queue to another entity. Indicates the entity in which the message was dead-lettered.
Number of deliveries that have been attempted for this message. The count is incremented when a message lock expires, or the message is explicitly abandoned by the receiver.
For messages that have been autoforwarded, this property reflects the sequence number that had first been assigned to the message at its original point of submission.
The UTC instant at which the message has been accepted and stored in the entity.
For messages retrieved under a lock (peek-lock receive mode, not pre-settled) this property reflects the UTC instant until which the message is held locked in the queue/subscription.
The sequence number is a unique 64-bit integer assigned to a message as it is accepted and stored by the broker and functions as its true identifier.
Get messages from a queue
The operation gets messages from a queue.
The name for the queue.
The maximum number of messages to receive.
One or more messages received from Service Bus.
Get messages from a queue session
The operation gets messages from a queue session.
The name for the queue.
The identifier of the session.
The maximum number of messages to receive.
Acquire a new session if needed.
One or more messages received from Service Bus.
Get messages from a topic subscription
The operation gets messages from a topic subscription.
The name for the topic.
The name for the topic subscription.
The maximum number of messages to receive.
One or more messages received from Service Bus topic
Get messages from a topic subscription in a session
The operation gets messages from a topic subscription in a session.
The name for the topic.
The name for the topic subscription.
The identifier of the session.
The maximum number of messages to receive.
Acquire a new session if needed.
One or more messages received from Service Bus topic
Renew a queue session
The operation renews a queue session.
The name for the queue.
The identifier of the session.
Renew a topic session
The operation renews a topic session.
The name for the topic.
The name for the topic subscription.
The identifier of the session.
Renew lock on a message in a topic subscription
The operation renews lock on a message in a topic subscription.
The name for the topic.
The name for the topic subscription.
The lock token of the message to renew the lock.
Renew lock on a message in queue
The operation renews lock on a message in a queue.
The name for the queue.
The lock token of the message to renew the lock.
Replicate messages
Send messages for replication to another service bus queue or topic. These messages include extra properties for replication purposes.
To find available messages, use the trigger named "When messages are available in a queue for replication" or "When messages are available in a topic subscription for replication".
The name of the queue or topic.
Skips already replicated messages.
Send message
Send message to a queue or topic.
The name of the queue or topic.
Send message to a queue or topic.
Send multiple messages
This operation sends messages to a queue or topic.
The name of the queue or topic.
One or more messages to send to the queue or topic.
Triggers
The operation gets new messages from a queue session for sequential convoy patterns.
The operation gets new messages from a topic session for sequential convoy patterns.
The operation gets single new message from a queue session for sequential convoy patterns.
The operation gets single new message from a topic session for sequential convoy patterns.
This operation triggers a run when messages are available in a queue.
The operation triggers a run when a message is received in a queue using peek-lock mode.
Run when a queue has messages ready to replicate.
To replicate messages to another service bus queue or topic subscription, use the action named "Replicate messages".
The operation triggers a run when a message is available in topic subscription.
The operation triggers a run when a message is received in a topic subscription using peek-lock mode.
Run when a topic subscription has messages ready to replicate.
To replicate messages to another service bus queue or topic subscription, use the action named "Replicate messages".
On new messages from queue session
The operation gets new messages from a queue session for sequential convoy patterns.
The name for the queue.
The identifier of the session.
The maximum number of messages to receive.
One or more messages received from Service Bus.
On new messages from topic session
The operation gets new messages from a topic session for sequential convoy patterns.
The name for the topic.
The name for the topic subscription.
The identifier of the session.
The maximum number of messages to receive.
One or more messages received from Service Bus topic
On single new message from queue session
The operation gets single new message from a queue session for sequential convoy patterns.
The name for the queue.
The identifier of the session.
Content of the message.
The content type of the message.
The identifier of the session.
Any key-value pairs for user properties.
A user-defined value that Service Bus can use to identify duplicate messages, if enabled.
The lock token is a reference to the lock that is being held by the broker in peek-lock receive mode.
Sends to address
The address where to send a reply.
The identifier of the session where to reply.
Application specific label
The UTC date and time for when to add the message to the queue.
The identifier of the correlation.
The number of ticks or duration for when a message is valid. The duration starts from when the message is sent to Service Bus.
Only set in messages that have been dead-lettered and later autoforwarded from the dead-letter queue to another entity. Indicates the entity in which the message was dead-lettered.
Number of deliveries that have been attempted for this message. The count is incremented when a message lock expires, or the message is explicitly abandoned by the receiver.
For messages that have been autoforwarded, this property reflects the sequence number that had first been assigned to the message at its original point of submission.
The UTC instant at which the message has been accepted and stored in the entity.
For messages retrieved under a lock (peek-lock receive mode, not pre-settled) this property reflects the UTC instant until which the message is held locked in the queue/subscription.
The sequence number is a unique 64-bit integer assigned to a message as it is accepted and stored by the broker and functions as its true identifier.
On single new message from topic session
The operation gets single new message from a topic session for sequential convoy patterns.
The name for the topic.
The name for the topic subscription.
The identifier of the session.
Content of the message.
The content type of the message.
The identifier of the session.
Any key-value pairs for user properties.
A user-defined value that Service Bus can use to identify duplicate messages, if enabled.
The lock token is a reference to the lock that is being held by the broker in peek-lock receive mode.
Sends to address
The address where to send a reply.
The identifier of the session where to reply.
Application specific label
The UTC date and time for when to add the message to the queue.
The identifier of the correlation.
The number of ticks or duration for when a message is valid. The duration starts from when the message is sent to Service Bus.
Only set in messages that have been dead-lettered and later autoforwarded from the dead-letter queue to another entity. Indicates the entity in which the message was dead-lettered.
Number of deliveries that have been attempted for this message. The count is incremented when a message lock expires, or the message is explicitly abandoned by the receiver.
For messages that have been autoforwarded, this property reflects the sequence number that had first been assigned to the message at its original point of submission.
The UTC instant at which the message has been accepted and stored in the entity.
For messages retrieved under a lock (peek-lock receive mode, not pre-settled) this property reflects the UTC instant until which the message is held locked in the queue/subscription.
The sequence number is a unique 64-bit integer assigned to a message as it is accepted and stored by the broker and functions as its true identifier.
When messages are available in a queue
This operation triggers a run when messages are available in a queue.
The name for the queue.
Whether sessions are enabled for the queue.
Maximum message batch size to receive from a queue.
One or more messages received from Service Bus.
When messages are available in a queue (peek-lock)
The operation triggers a run when a message is received in a queue using peek-lock mode.
The name for the queue.
Maximum message batch size to receive from a queue.
One or more messages received from Service Bus (peek-lock).
When messages are available in a queue for replication
Run when a queue has messages ready to replicate.
To replicate messages to another service bus queue or topic subscription, use the action named "Replicate messages".
The name for the queue.
Whether sessions are enabled for the queue.
Maximum message batch size to receive from a queue.
When messages are available in a topic
The operation triggers a run when a message is available in topic subscription.
The name for the topic.
The name for the topic subscription.
Whether sessions are enabled for the topic subscription.
Maximum message batch size to receive from a topic subscription.
One or more messages received from Service Bus topic
When messages are available in a topic subscription (peek-lock)
The operation triggers a run when a message is received in a topic subscription using peek-lock mode.
The name for the topic.
The name for the topic subscription.
Maximum message batch size to receive from a topic subscription.
One or more messages received from Service Bus (peek-lock).
When messages are available in a topic subscription for replication
Run when a topic subscription has messages ready to replicate.
To replicate messages to another service bus queue or topic subscription, use the action named "Replicate messages".
The name for the topic.
The name for the topic subscription.
Whether sessions are enabled for the topic subscription.
Maximum message batch size to receive from a topic subscription.