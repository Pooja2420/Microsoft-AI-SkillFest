Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Deploy a Premium SSD v2
Article
2025-03-21
10 contributors
In this article

Azure Premium SSD v2 is designed for IO-intense enterprise workloads that require sub-millisecond disk latencies and high IOPS and throughput at a low cost. Premium SSD v2 is suited for a broad range of workloads such as SQL server, Oracle, MariaDB, SAP, Cassandra, Mongo DB, big data/analytics, gaming, on virtual machines or stateful containers. For conceptual information on Premium SSD v2, seePremium SSD v2.
Premium SSD v2 support a 4k physical sector size by default, but can be configured to use a 512E sector size as well. While most applications are compatible with 4k sector sizes, some require 512 byte sector sizes. Oracle Database, for example, requires release 12.2 or later in order to support 4k native disks.
Limitations
Premium SSD v2 disks can't be used as an OS disk.
Premium SSD v2 disks can't be used with Azure Compute Gallery.
Currently, Premium SSD v2 disks are only available inselect regions.
For regions that support availability zones, Premium SSD v2 disks can only be attached to zonal VMs. When creating a new VM or Virtual Machine Scale Set, specify the availability zone you want before adding Premium SSD v2 disks to your configuration.
Encrypting Premium SSD v2 disks with customer-managed keys using Azure Key Vaults stored in a different Microsoft Entra ID tenant isn't currently supported.
Azure Disk Encryption (guest VM encryption via BitLocker/DM-Crypt) isn't supported for VMs with Premium SSD v2 disks. We recommend you to use encryption at rest with platform-managed or customer-managed keys, which is supported for Premium SSD v2.
Currently, Premium SSD v2 disks can't be attached to VMs in Availability Sets.
Azure Site Recovery isn't supported for VMs with Premium SSD v2 disks.
Premium SSDv2 doesn't support host caching.
Regional availability
Currently only available in the following regions:
Australia East (Three availability zones)
Australia South East (Region without availability zone support)
Brazil South (Three availability zones)
Canada Central (Three availability zones)
Canada East (Region without availability zone support)
Central India (Three availability zones)
Central US (Three availability zones)
China North 3 (Three availability zones)
East Asia (Three availability zones)
East US (Three availability zones)
East US 2 (Three availability zones)
France Central (Three availability zones)
Germany West Central (Three availability zones)
Israel Central (Three availability zones)
Italy North (Three availability zones)
Japan East (Three availability zones)
Korea Central (Three availability zones)
Mexico Central (Three availability zones)
New Zealand North (Two availability zones)
North Central US (Region without availability zone support)
North Europe (Three availability zones)
Norway East (Three availability zones)
Poland Central (Three availability zones)
Spain Central (Three availability zones)
South Africa North (Three availability zones)
South Central US (Three availability zones)
Southeast Asia (Three availability zones)
Sweden Central (Three availability zones)
Switzerland North (Three availability zones)
UAE North (Three availability zones)
UK South (Three availability zones)
UK West (Region without availability zone support)
US Gov Virginia (Three availability zones)
West Central US (Region without availability zone supportn)
West Europe (Three availability zones)
West US (Region without availability zone support)
West US 2 (Three availability zones)
West US 3 (Three availability zones)
To learn when support for particular regions was added, see eitherAzure UpdatesorWhat's new for Azure Disk Storage.
Prerequisites
Install either the latestAzure CLIor the latestAzure PowerShell module.
Determine region availability programmatically
Since not every region and zone supports Premium SSD v2, you can use the Azure CLI or PowerShell to determine region and zone supportability.
Azure CLI
PowerShell
Azure portal
To determine the regions and zones that support Premium SSD v2, replaceyourSubscriptionIdwith your subscription, and then run theaz vm list-skuscommand:
yourSubscriptionId
az login

subscriptionId="<yourSubscriptionId>"

az account set --subscription $subscriptionId

az vm list-skus --resource-type disks --query "[?name=='PremiumV2_LRS'].{Region:locationInfo[0].location, Zones:locationInfo[0].zones}"
az login

subscriptionId="<yourSubscriptionId>"

az account set --subscription $subscriptionId

az vm list-skus --resource-type disks --query "[?name=='PremiumV2_LRS'].{Region:locationInfo[0].location, Zones:locationInfo[0].zones}"
To determine the regions and zones that support Premium SSD v2, replaceyourSubscriptionIdwith your subscription, and then run theGet-AzComputeResourceSkucommand:
yourSubscriptionId
Connect-AzAccount

$subscriptionId="yourSubscriptionId"

Set-AzContext -Subscription $subscriptionId

Get-AzComputeResourceSku | where {$_.ResourceType -eq 'disks' -and $_.Name -eq 'Premiumv2_LRS'}
Connect-AzAccount

$subscriptionId="yourSubscriptionId"

Set-AzContext -Subscription $subscriptionId

Get-AzComputeResourceSku | where {$_.ResourceType -eq 'disks' -and $_.Name -eq 'Premiumv2_LRS'}
To programmatically determine the regions and zones you can deploy to, use either the Azure CLI, Azure PowerShell Module.
Now that you know the region and zone to deploy to, follow the deployment steps in this article to create a Premium SSD v2 disk and attach it to a VM.
Use Premium SSD v2 in Regions with Availability Zones
Azure CLI
PowerShell
Azure portal
Create a Premium SSD v2 disk in an availability zone by using theaz disk createcommand. Then create a VM in the same region and availability zone that supports Premium Storage and attach the disk to it by using theaz vm createcommand.
The following script creates a Premium SSD v2 with a 4k sector size, to deploy one with a 512 sector size, update the$logicalSectorSizeparameter. Replace the values of all the variables with your own, then run the following script:
$logicalSectorSize
## Initialize variables
diskName="yourDiskName"
resourceGroupName="yourResourceGroupName"
region="yourRegionName"
zone="yourZoneNumber"
##Replace 4096 with 512 to deploy a disk with 512 sector size
logicalSectorSize=4096
vmName="yourVMName"
vmImage="Win2016Datacenter"
adminPassword="yourAdminPassword"
adminUserName="yourAdminUserName"
vmSize="Standard_D4s_v3"

## Create a Premium SSD v2 disk
az disk create -n $diskName -g $resourceGroupName \
--size-gb 100 \
--disk-iops-read-write 5000 \
--disk-mbps-read-write 150 \
--location $region \
--zone $zone \
--sku PremiumV2_LRS \
--logical-sector-size $logicalSectorSize

## Create the VM
az vm create -n $vmName -g $resourceGroupName \
--image $vmImage \
--zone $zone \
--authentication-type password --admin-password $adminPassword --admin-username $adminUserName \
--size $vmSize \
--location $region \
--attach-data-disks $diskName
## Initialize variables
diskName="yourDiskName"
resourceGroupName="yourResourceGroupName"
region="yourRegionName"
zone="yourZoneNumber"
##Replace 4096 with 512 to deploy a disk with 512 sector size
logicalSectorSize=4096
vmName="yourVMName"
vmImage="Win2016Datacenter"
adminPassword="yourAdminPassword"
adminUserName="yourAdminUserName"
vmSize="Standard_D4s_v3"

## Create a Premium SSD v2 disk
az disk create -n $diskName -g $resourceGroupName \
--size-gb 100 \
--disk-iops-read-write 5000 \
--disk-mbps-read-write 150 \
--location $region \
--zone $zone \
--sku PremiumV2_LRS \
--logical-sector-size $logicalSectorSize

## Create the VM
az vm create -n $vmName -g $resourceGroupName \
--image $vmImage \
--zone $zone \
--authentication-type password --admin-password $adminPassword --admin-username $adminUserName \
--size $vmSize \
--location $region \
--attach-data-disks $diskName
Create a Premium SSD v2 disk in an availability zone by using theNew-AzDiskConfigto define the configuration of your disk and theNew-AzDiskcommand to create your disk. Next, create a VM in the same region and availability zone that supports Premium Storage by using theaz vm create. Finally, attach the disk to it by using theGet-AzVMcommand to identify variables for the virtual machine, theGet-AzDiskcommand to identify variables for the disk, theAdd-AzVMDataDiskcommand to add the disk, and theUpdate-AzVMcommand to attach the new disk to the virtual machine.
The following script creates a Premium SSD v2 with a 4k sector size, to deploy one with a 512 sector size, update the$logicalSectorSizeparameter. Replace the values of all the variables with your own, then run the following script:
$logicalSectorSize
# Initialize variables
$resourceGroupName = "yourResourceGroupName"
$region = "useast"
$zone = "yourZoneNumber"
$diskName = "yourDiskName"
$diskSizeInGiB = 100
$diskIOPS = 5000
$diskThroughputInMBPS = 150
#To use a 512 sector size, replace 4096 with 512
$logicalSectorSize=4096
$lun = 1
$vmName = "yourVMName"
$vmImage = "Win2016Datacenter"
$vmSize = "Standard_D4s_v3"
$vmAdminUser = "yourAdminUserName"
$vmAdminPassword = ConvertTo-SecureString "yourAdminUserPassword" -AsPlainText -Force
$credential = New-Object System.Management.Automation.PSCredential ($vmAdminUser, $vmAdminPassword);

# Create a Premium SSD v2
$diskconfig = New-AzDiskConfig `
-Location $region `
-Zone $zone `
-DiskSizeGB $diskSizeInGiB `
-DiskIOPSReadWrite $diskIOPS `
-DiskMBpsReadWrite $diskThroughputInMBPS `
-AccountType PremiumV2_LRS `
-LogicalSectorSize $logicalSectorSize `
-CreateOption Empty

New-AzDisk `
-ResourceGroupName $resourceGroupName `
-DiskName $diskName `
-Disk $diskconfig

# Create the VM
New-AzVm `
    -ResourceGroupName $resourceGroupName `
    -Name $vmName `
    -Location $region `
    -Zone $zone `
    -Image $vmImage `
    -Size $vmSize `
    -Credential $credential

# Attach the disk to the VM
$vm = Get-AzVM -ResourceGroupName $resourceGroupName -Name $vmName
$disk = Get-AzDisk -ResourceGroupName $resourceGroupName -Name $diskName
$vm = Add-AzVMDataDisk -VM $vm -Name $diskName -CreateOption Attach -ManagedDiskId $disk.Id -Lun $lun
Update-AzVM -VM $vm -ResourceGroupName $resourceGroupName
# Initialize variables
$resourceGroupName = "yourResourceGroupName"
$region = "useast"
$zone = "yourZoneNumber"
$diskName = "yourDiskName"
$diskSizeInGiB = 100
$diskIOPS = 5000
$diskThroughputInMBPS = 150
#To use a 512 sector size, replace 4096 with 512
$logicalSectorSize=4096
$lun = 1
$vmName = "yourVMName"
$vmImage = "Win2016Datacenter"
$vmSize = "Standard_D4s_v3"
$vmAdminUser = "yourAdminUserName"
$vmAdminPassword = ConvertTo-SecureString "yourAdminUserPassword" -AsPlainText -Force
$credential = New-Object System.Management.Automation.PSCredential ($vmAdminUser, $vmAdminPassword);

# Create a Premium SSD v2
$diskconfig = New-AzDiskConfig `
-Location $region `
-Zone $zone `
-DiskSizeGB $diskSizeInGiB `
-DiskIOPSReadWrite $diskIOPS `
-DiskMBpsReadWrite $diskThroughputInMBPS `
-AccountType PremiumV2_LRS `
-LogicalSectorSize $logicalSectorSize `
-CreateOption Empty

New-AzDisk `
-ResourceGroupName $resourceGroupName `
-DiskName $diskName `
-Disk $diskconfig

# Create the VM
New-AzVm `
    -ResourceGroupName $resourceGroupName `
    -Name $vmName `
    -Location $region `
    -Zone $zone `
    -Image $vmImage `
    -Size $vmSize `
    -Credential $credential

# Attach the disk to the VM
$vm = Get-AzVM -ResourceGroupName $resourceGroupName -Name $vmName
$disk = Get-AzDisk -ResourceGroupName $resourceGroupName -Name $diskName
$vm = Add-AzVMDataDisk -VM $vm -Name $diskName -CreateOption Attach -ManagedDiskId $disk.Id -Lun $lun
Update-AzVM -VM $vm -ResourceGroupName $resourceGroupName
Sign in to theAzure portal.
Sign in to theAzure portal.
Navigate toVirtual machinesand follow the normal VM creation process.
Navigate toVirtual machinesand follow the normal VM creation process.
On theBasicspage, select asupported regionand setAvailability optionstoAvailability zone.
On theBasicspage, select asupported regionand setAvailability optionstoAvailability zone.
Select one or more of the zones.
Select one or more of the zones.
Fill in the rest of the values on the page as you like.
Fill in the rest of the values on the page as you like.

Proceed to theDiskspage.
Proceed to theDiskspage.
UnderData disksselectCreate and attach a new disk.
UnderData disksselectCreate and attach a new disk.

Select theDisk SKUand selectPremium SSD v2.
Select theDisk SKUand selectPremium SSD v2.

Select whether you'd like to deploy a 4k or 512 logical sector size.
Select whether you'd like to deploy a 4k or 512 logical sector size.

Proceed through the rest of the VM deployment, making any choices that you desire.
Proceed through the rest of the VM deployment, making any choices that you desire.
You've now deployed a VM with a premium SSD v2.
Use a Premium SSD v2 in non-AZ Regions
Azure CLI
PowerShell
Azure portal
Create a Premium SSD v2 disk in a region without availability zone support by using theaz disk createcommand. Then create a VM in the same region that supports Premium Storage and attach the disk to it by using theaz vm createcommand.
The following script creates a Premium SSD v2 disk with a 4k sector size. To create a disk with a 512 sector size, update the$logicalSectorSizeparameter. Replace the values of all the variables with your own, then run the following script:
$logicalSectorSize
## Initialize variables
diskName="yourDiskName"
resourceGroupName="yourResourceGroupName"
region="yourRegionName"
##Replace 4096 with 512 to deploy a disk with 512 sector size
logicalSectorSize=4096
vmName="yourVMName"
vmImage="Win2016Datacenter"
adminPassword="yourAdminPassword"
adminUserName="yourAdminUserName"
vmSize="Standard_D4s_v3"

## Create a Premium SSD v2 disk
az disk create -n $diskName -g $resourceGroupName \
--size-gb 100 \
--disk-iops-read-write 5000 \
--disk-mbps-read-write 150 \
--location $region \
--sku PremiumV2_LRS \
--logical-sector-size $logicalSectorSize

## Create the VM
az vm create -n $vmName -g $resourceGroupName \
--image $vmImage \
--zone $zone \
--authentication-type password --admin-password $adminPassword --admin-username $adminUserName \
--size $vmSize \
--location $region \
--attach-data-disks $diskName
## Initialize variables
diskName="yourDiskName"
resourceGroupName="yourResourceGroupName"
region="yourRegionName"
##Replace 4096 with 512 to deploy a disk with 512 sector size
logicalSectorSize=4096
vmName="yourVMName"
vmImage="Win2016Datacenter"
adminPassword="yourAdminPassword"
adminUserName="yourAdminUserName"
vmSize="Standard_D4s_v3"

## Create a Premium SSD v2 disk
az disk create -n $diskName -g $resourceGroupName \
--size-gb 100 \
--disk-iops-read-write 5000 \
--disk-mbps-read-write 150 \
--location $region \
--sku PremiumV2_LRS \
--logical-sector-size $logicalSectorSize

## Create the VM
az vm create -n $vmName -g $resourceGroupName \
--image $vmImage \
--zone $zone \
--authentication-type password --admin-password $adminPassword --admin-username $adminUserName \
--size $vmSize \
--location $region \
--attach-data-disks $diskName
Create a Premium SSD v2 disk in a region without availability zone support by using theNew-AzDiskConfigto define the configuration of your disk and theNew-AzDiskcommand to create your disk. Next, create a VM in the same region and availability zone that supports Premium Storage by using theaz vm create. Finally, attach the disk to it by using theGet-AzVMcommand to identify variables for the virtual machine, theGet-AzDiskcommand to identify variables for the disk, theAdd-AzVMDataDiskcommand to add the disk, and theUpdate-AzVMcommand to attach the new disk to the virtual machine.
The following script creates a Premium SSD v2 disk with a 4k sector size. To create a disk with a 512 sector size, update the$logicalSectorSizeparameter. Replace the values of all the variables with your own, then run the following script:
$logicalSectorSize
# Initialize variables
$resourceGroupName = "yourResourceGroupName"
$region = "useast"
$diskName = "yourDiskName"
$diskSizeInGiB = 100
$diskIOPS = 5000
$diskThroughputInMBPS = 150
#To use a 512 sector size, replace 4096 with 512
$logicalSectorSize=4096
$lun = 1
$vmName = "yourVMName"
$vmImage = "Win2016Datacenter"
$vmSize = "Standard_D4s_v3"
$vmAdminUser = "yourAdminUserName"
$vmAdminPassword = ConvertTo-SecureString "yourAdminUserPassword" -AsPlainText -Force
$credential = New-Object System.Management.Automation.PSCredential ($vmAdminUser, $vmAdminPassword);

# Create a Premium SSD v2 disk
$diskconfig = New-AzDiskConfig `
-Location $region `
-DiskSizeGB $diskSizeInGiB `
-DiskIOPSReadWrite $diskIOPS `
-DiskMBpsReadWrite $diskThroughputInMBPS `
-AccountType PremiumV2_LRS `
-LogicalSectorSize $logicalSectorSize `
-CreateOption Empty

New-AzDisk `
-ResourceGroupName $resourceGroupName `
-DiskName $diskName `
-Disk $diskconfig

# Create the VM
New-AzVm `
    -ResourceGroupName $resourceGroupName `
    -Name $vmName `
    -Location $region `
    -Image $vmImage `
    -Size $vmSize `
    -Credential $credential

# Attach the disk to the VM
$vm = Get-AzVM -ResourceGroupName $resourceGroupName -Name $vmName
$disk = Get-AzDisk -ResourceGroupName $resourceGroupName -Name $diskName
$vm = Add-AzVMDataDisk -VM $vm -Name $diskName -CreateOption Attach -ManagedDiskId $disk.Id -Lun $lun
Update-AzVM -VM $vm -ResourceGroupName $resourceGroupName
# Initialize variables
$resourceGroupName = "yourResourceGroupName"
$region = "useast"
$diskName = "yourDiskName"
$diskSizeInGiB = 100
$diskIOPS = 5000
$diskThroughputInMBPS = 150
#To use a 512 sector size, replace 4096 with 512
$logicalSectorSize=4096
$lun = 1
$vmName = "yourVMName"
$vmImage = "Win2016Datacenter"
$vmSize = "Standard_D4s_v3"
$vmAdminUser = "yourAdminUserName"
$vmAdminPassword = ConvertTo-SecureString "yourAdminUserPassword" -AsPlainText -Force
$credential = New-Object System.Management.Automation.PSCredential ($vmAdminUser, $vmAdminPassword);

# Create a Premium SSD v2 disk
$diskconfig = New-AzDiskConfig `
-Location $region `
-DiskSizeGB $diskSizeInGiB `
-DiskIOPSReadWrite $diskIOPS `
-DiskMBpsReadWrite $diskThroughputInMBPS `
-AccountType PremiumV2_LRS `
-LogicalSectorSize $logicalSectorSize `
-CreateOption Empty

New-AzDisk `
-ResourceGroupName $resourceGroupName `
-DiskName $diskName `
-Disk $diskconfig

# Create the VM
New-AzVm `
    -ResourceGroupName $resourceGroupName `
    -Name $vmName `
    -Location $region `
    -Image $vmImage `
    -Size $vmSize `
    -Credential $credential

# Attach the disk to the VM
$vm = Get-AzVM -ResourceGroupName $resourceGroupName -Name $vmName
$disk = Get-AzDisk -ResourceGroupName $resourceGroupName -Name $diskName
$vm = Add-AzVMDataDisk -VM $vm -Name $diskName -CreateOption Attach -ManagedDiskId $disk.Id -Lun $lun
Update-AzVM -VM $vm -ResourceGroupName $resourceGroupName
Sign in to theAzure portal.
Navigate toDisksand create a new disk.
Select asupported region.
SelectChange sizeand change the disk type toPremium SSD v2.
If you like, change the size of the disk, as well as the performance, then selectOK.
SetAvailability zonetoNo infrastructure redundancy required.
Proceed through the rest of the deployment, making any choices that you desire.
On theAdvancedtab, select whether you'd like to deploy a 4k or 512 logical sector size, then deploy the disk.
Once the disk is successfully deployed, attach it to a new or existing VM.
Adjust disk performance
You can adjust the performance of a Premium SSD v2 disk four times within a 24 hour period. Creating a disk counts as one of these times, so for the first 24 hours after creating a premium SSD v2 disk you can only adjust its performance up to three times.
For conceptual information on adjusting disk performance, seePremium SSD v2 performance.
Azure CLI
PowerShell
Azure portal
Use theaz disk updatecommand to change the performance configuration of your Premium SSD v2 disk. For example, you can use thedisk-iops-read-writeparameter to adjust the max IOPS limit, and thedisk-mbps-read-writeparameter to adjust the max throughput limit of your Premium SSD v2 disk.
disk-iops-read-write
disk-mbps-read-write
The following command adjusts the performance of your disk. Update the values in the command, and then run it:
az disk update --subscription $subscription --resource-group $rgname --name $diskName --disk-iops-read-write=5000 --disk-mbps-read-write=200
az disk update --subscription $subscription --resource-group $rgname --name $diskName --disk-iops-read-write=5000 --disk-mbps-read-write=200
Use theNew-AzDiskUpdateConfigcommand to define your new performance configuration values for your Premium SSD v2 disks, and then use theUpdate-AzDiskcommand to apply your configuration changes to your disk. For example, you can use theDiskIOPSReadWriteparameter to adjust the max IOPS limit, and theDiskMBpsReadWriteparameter to adjust the max throughput limit of your Premium SSD v2 disk.
DiskIOPSReadWrite
DiskMBpsReadWrite
The following command adjusts the performance of your disk. Update the values in the command, and then run it:
$diskupdateconfig = New-AzDiskUpdateConfig -DiskIOPSReadWrite 5000 -DiskMBpsReadWrite 200
Update-AzDisk -ResourceGroupName $resourceGroup -DiskName $diskName -DiskUpdate $diskupdateconfig
$diskupdateconfig = New-AzDiskUpdateConfig -DiskIOPSReadWrite 5000 -DiskMBpsReadWrite 200
Update-AzDisk -ResourceGroupName $resourceGroup -DiskName $diskName -DiskUpdate $diskupdateconfig
Navigate to the disk you'd like to modify in theAzure portal.
SelectSize + Performance
Set the values forDisk IOPSorDisk throughput (MB/s)or both, to meet your needs, then selectSave.
Next steps
Add a data disk by using either theAzure portal,Azure CLI, orPowerShell.
Provide feedback onPremium SSD v2.
Feedback
Was this page helpful?
Additional resources