Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
What is a logical server in Azure SQL Database and Azure Synapse?
Article
2025-03-25
23 contributors
In this article
Applies to:Azure SQL DatabaseAzure Synapse Analytics
This article describes the logical server in Azure used by databases in Azure SQL Database and Azure Synapse Analytics. In the Azure portal, the logical server is named SQL server and is different to the SQL Server product.
Overview
In Azure SQL Database and Azure Synapse Analytics, a server is a logical construct that acts as a central administrative point for a collection of databases. At the logical server level, you can administerlogins,firewall rules,auditing rules,threat detection policies, andfailover groups. A logical server can be in a different region than its resource group. The logical server must exist before you can create a database in Azure SQL Database or a dedicated SQL pool in Azure Synapse Analytics. All databases managed by a single logical server are created within the same region as the logical server.
This logical server is distinct from a SQL Server instance that you may be familiar with in the on-premises world. Specifically, there are no guarantees regarding location of the databases or dedicated SQL pool in relation to the server that manages them. Azure SQL Database and Azure Synapse don't expose any instance-level access or features. In contrast, the instance databases in a managed instance are all physically co-located - in the same way that you are familiar with SQL Server in the on-premises or virtual machine world.
When you create a logical server, you provide a server login account and password that has administrative rights to themasterdatabase on that server and all databases created on that server. This initial account is a SQL login account. Azure SQL Database and Azure Synapse Analytics support both SQL authentication and Microsoft Entra authentication. For information about logins and authentication, seeManaging Databases and Logins in Azure SQL Database. Windows Authentication is not supported.
master
A logical server in SQL Database and Azure Synapse Analytics:
Is created within an Azure subscription, but can be moved with its contained resources to another subscription
Is the parent resource for databases, elastic pools, and dedicated SQL pools
Provides a namespace for databases, elastic pools, and dedicated SQL pools
Is a logical container with strong lifetime semantics - delete a server and it deletes its databases, elastic pools, and SQL pools
Participates inAzure role-based access control (Azure RBAC)- databases, elastic pools, and dedicated SQL pools within a server inherit access rights from the server
Is a high-order element of the identity of databases, elastic pools, and dedicated SQL pools for Azure resource management purposes (see the URL scheme for databases and pools)
Collocates resources in a region
Provides a connection endpoint for database access (<serverName>.database.windows.net)
<serverName>
Provides access to metadata regarding contained resources via DMVs by connecting to amasterdatabase
master
Provides the scope for management policies that apply to its databases - logins, firewall, audit, threat detection, and such
Is restricted by a quota within the parent subscription (six servers per subscription by default, for more information, refer tosubscription limits)
Provides the scope for database quota and DTU or vCore quota for the resources it contains (such as 45,000 DTU)
Is the versioning scope for capabilities enabled on contained resources
Server-level principal logins can manage all databases on a server.
Themasterdatabase of a logical server contains logins similar to those in instances of SQL Server that are granted access to one or more databases on the server, and can be granted limited administrative rights. For more information, seelogins.
master
Creating, altering, or dropping user objects such as tables, views, or stored procedures in themasterdatabase on a logical server is not supported.
master
The default collation for all databases created on a server isSQL_LATIN1_GENERAL_CP1_CI_AS, whereLATIN1_GENERALis English (United States),CP1is code page 1252,CIis case-insensitive, andASis accent-sensitive.
SQL_LATIN1_GENERAL_CP1_CI_AS
LATIN1_GENERAL
CP1
CI
AS
Note
Microsoft Entra IDwas previously known as Azure Active Directory (Azure AD).
Manage servers, databases, and firewalls
You can manage logical servers, databases, dedicated SQL pools, and firewalls by using the Azure portal, Azure PowerShell, the Azure CLI, Transact-SQL (T-SQL) and REST API.
Portal
PowerShell
Azure CLI
Transact-SQL
REST API
You can create the resource group for a logical server ahead of time or while creating the server itself. There are multiple methods for getting to a new SQL server form, either by creating a new SQL server or as part of creating a new database.
Create a blank server
To create a blank logical server (without a database, elastic pool, or dedicated SQL pool) using theAzure portal, navigate to a blank SQL server (logical SQL server) form.
Create a blank or sample database in Azure SQL Database
To create a database in SQL Database using theAzure portal, navigate to create a newSQL Databaseand provide the requested information. You can create the resource group and server ahead of time or while creating the database itself. You can create a blank database or create a sample database based onAdventureWorksLT.
AdventureWorksLT

Important
For information on selecting the pricing tier for your database, seeDTU-based purchasing modelandvCore-based purchasing model.
Manage existing server
To manage an existing server, navigate to the server using a number of methods - such as from specific database page, theSQL serverspage, or theAll resourcespage.
To manage an existing database, navigate to theSQL databasespage and select the database you wish to manage.
For example, to configure a firewall rule, follow these steps:
Navigate to your database resource in theAzure portal. SelectSet server firewallon the toolbar.
Navigate to your database resource in theAzure portal. SelectSet server firewallon the toolbar.

SetPublic network accesstoSelected networksto reveal the virtual networks and firewall rules. When set toDisabled, virtual networks and firewall rule settings are hidden.
SetPublic network accesstoSelected networksto reveal the virtual networks and firewall rules. When set toDisabled, virtual networks and firewall rule settings are hidden.
ChooseAdd a firewall ruleto configure the firewall.
ChooseAdd a firewall ruleto configure the firewall.

Important
To configure performance properties for a database, seeDTU-based purchasing modelandvCore-based purchasing model.
Tip
For an Azure portal quickstart, seeCreate a database in SQL Database in the Azure portal.
You can configure your database using Azure PowerShell.
Note
This article uses the Azure Az PowerShell module, which is the recommended PowerShell module for interacting with Azure. To get started with the Az PowerShell module, seeInstall Azure PowerShell. To learn how to migrate to the Az PowerShell module, seeMigrate Azure PowerShell from AzureRM to Az.
Important
The PowerShell Azure Resource Manager (AzureRM) module was deprecated on February 29, 2024. All future development should use the Az.Sql module. Users are advised to migrate from AzureRM to the Az PowerShell module to ensure continued support and updates. The AzureRM module is no longer maintained or supported. The arguments for the commands in the Az PowerShell module and in the AzureRM modules are substantially identical. For more about their compatibility, seeIntroducing the new Az PowerShell module.
To create and manage servers, databases, and firewalls with Azure PowerShell, use the following PowerShell cmdlets. If you need to install or upgrade PowerShell, seeInstall Azure PowerShell module. For creating and managing elastic pools, seeElastic pools.
Tip
For a PowerShell quickstart, seeCreate a database in Azure SQL Database using PowerShell. For PowerShell example scripts, seeUse PowerShell to create a database in Azure SQL Database and configure a firewall ruleandMonitor and scale a database in Azure SQL Database using PowerShell.
To create and manage servers, databases, and firewalls with theAzure CLI, use the followingAzure CLI SQL Databasecommands. Use theCloud Shellto run the CLI in your browser, orinstallit on macOS, Linux, or Windows. For creating and managing elastic pools, seeElastic pools.
Tip
For an Azure CLI quickstart, seeCreate a database in Azure SQL Database using the Azure CLI. For Azure CLI example scripts, seeUse the CLI to create a database in Azure SQL Database and configure a firewall ruleandUse Azure CLI to monitor and scale a database in Azure SQL Database.
To create and manage servers, databases, and firewalls with Transact-SQL, use the following T-SQL commands. You can issue these commands using the Azure portal,SQL Server Management Studio,Visual Studio Code, or any other program that can connect to a server and pass Transact-SQL commands. For managing elastic pools, seeElastic pools.
Important
You cannot create or delete a server using Transact-SQL.
master
master
master
master
master
master
master
Tip
For a quickstart using SQL Server Management Studio on Microsoft Windows, seeAzure SQL Database: Use SQL Server Management Studio to connect and query data. For a quickstart using Visual Studio Code on the macOS, Linux, or Windows, seeAzure SQL Database: Use Visual Studio Code to connect and query data.
To create and manage servers, databases, and firewalls, use these REST API requests.
Next steps
To learn about migrating a SQL Server database to Azure SQL Database, seeMigrate to Azure SQL Database.
For information about supported features, seeFeatures.
Feedback
Was this page helpful?
Additional resources