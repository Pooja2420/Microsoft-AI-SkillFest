Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Get started with Jupyter notebooks and MSTICPy in Microsoft Sentinel
Article
2025-03-30
7 contributors
Applies to: Microsoft Sentinel in the Microsoft Defender portal, Microsoft Sentinel in the Azure portal
In this article
This article describes how to run theGetting Started Guide For Microsoft Sentinel ML Notebooksnotebook, which sets up basic configurations for running Jupyter notebooks in Microsoft Sentinel and provides examples for running simple queries.
TheGetting Started Guide for Microsoft Sentinel ML Notebooksnotebook usesMSTICPy, a powerful Python library designed to enhance security investigations and threat hunting within Microsoft Sentinel notebooks. It provides built-in tools for data enrichment, visualization, anomaly detection, and automated queries, helping analysts streamline their workflow without extensive custom coding.
For more information, seeUse notebooks to power investigationsandUse Jupyter notebooks to hunt for security threats.
Important
Microsoft Sentinel is generally available within Microsoft's unified security operations platform in the Microsoft Defender portal, including for customers without Microsoft Defender XDR or an E5 license. For more information, seeMicrosoft Sentinel in the Microsoft Defender portal.
Prerequisites
Before you begin, make sure you have the required permissions and resources.
Install and run the Getting Started Guide notebook
This procedure describes how to launch your notebook with Microsoft Sentinel.
For Microsoft Sentinel in theDefender portal, selectMicrosoft Sentinel>Threat management>Notebooks. For Microsoft Sentinel in theAzure portal, underThreat management, selectNotebooks.
For Microsoft Sentinel in theDefender portal, selectMicrosoft Sentinel>Threat management>Notebooks. For Microsoft Sentinel in theAzure portal, underThreat management, selectNotebooks.
From theTemplatestab, selectA Getting Started Guide For Microsoft Sentinel ML Notebooks.
From theTemplatestab, selectA Getting Started Guide For Microsoft Sentinel ML Notebooks.
SelectCreate from template.
SelectCreate from template.
Edit the name and select the Azure Machine Learning workspace as appropriate.
Edit the name and select the Azure Machine Learning workspace as appropriate.
SelectSaveto save it to your Azure Machine Learning workspace.
SelectSaveto save it to your Azure Machine Learning workspace.
SelectLaunch notebookto run the notebook. The notebook contains a series of cells:Markdowncells contain text and graphics with instructions for using the notebookCodecells contain executable code that performs the notebook functions
SelectLaunch notebookto run the notebook. The notebook contains a series of cells:
Markdowncells contain text and graphics with instructions for using the notebook
Codecells contain executable code that performs the notebook functions
At the top of the page, select yourCompute.
At the top of the page, select yourCompute.
Continue by reading markdown cells and running code cells in order, using the instructions in the notebook. Skipping cells or running them out of order might cause errors later in the notebook.Depending on the function being performed, the code in the cell might run quickly, or it might take some time to complete. When the cell is running, the play button changes to a loading spinner, and the status is displayed at the bottom of the cell, together with the elapsed time.The first time you run a code cell, it may several a few minutes to start the session, depending on your compute settings. AReadyindication is shown when the notebook is ready to run code cells. For example:
Continue by reading markdown cells and running code cells in order, using the instructions in the notebook. Skipping cells or running them out of order might cause errors later in the notebook.
Depending on the function being performed, the code in the cell might run quickly, or it might take some time to complete. When the cell is running, the play button changes to a loading spinner, and the status is displayed at the bottom of the cell, together with the elapsed time.
The first time you run a code cell, it may several a few minutes to start the session, depending on your compute settings. AReadyindication is shown when the notebook is ready to run code cells. For example:

TheGetting Started Guide For Microsoft Sentinel ML Notebooksnotebook includes sections for the following activities:
The code in theGetting Started Guide For Microsoft Sentinel ML Notebookslaunches theMpConfigEdittool, which has series of tabs for configuring your notebook environment. As you make changes inMpConfigEdittool, make sure to save your changes before continuing. Settings for the notebook are stored in themsticpyconfig.yamlfile, which is automatically populated with initial details for your workspace.
Make sure to read through the markdown cells carefully so that you understand the process completely, including each of the settings and themsticpyconfig.yamlfile. Next steps, extra resources, and frequently asked questions from theAzure Sentinel Notebooks wikiare linked from the end of the notebook.
Customize your queries (optional)
TheGetting Started Guide For Microsoft Sentinel ML Notebooksnotebook provides sample queries for you to use when learning about notebooks. Customize the built-in queries by adding more query logic, or run complete queries using theexec_queryfunction. For example, most built-in queries support theadd_query_itemsparameter, which you can use to append filters or other operations to the queries.
exec_query
add_query_items
Run the following code cell to add a data frame that summarizes the number of alerts by alert name:from datetime import datetime, timedelta

qry_prov.SecurityAlert.list_alerts(
   start=datetime.utcnow() - timedelta(28),
    end=datetime.utcnow(),
    add_query_items="| summarize NumAlerts=count() by AlertName"
)
Run the following code cell to add a data frame that summarizes the number of alerts by alert name:
from datetime import datetime, timedelta

qry_prov.SecurityAlert.list_alerts(
   start=datetime.utcnow() - timedelta(28),
    end=datetime.utcnow(),
    add_query_items="| summarize NumAlerts=count() by AlertName"
)
from datetime import datetime, timedelta

qry_prov.SecurityAlert.list_alerts(
   start=datetime.utcnow() - timedelta(28),
    end=datetime.utcnow(),
    add_query_items="| summarize NumAlerts=count() by AlertName"
)
Pass a full Kusto Query Language (KQL) query string to the query provider. The query runs against the connected workspace, and the data returns as a panda DataFrame. Run:# Define your query
test_query = """
OfficeActivity
| where TimeGenerated > ago(1d)
| take 10
"""

# Pass the query to your QueryProvider
office_events_df = qry_prov.exec_query(test_query)
display(office_events_df.head())
Pass a full Kusto Query Language (KQL) query string to the query provider. The query runs against the connected workspace, and the data returns as a panda DataFrame. Run:
# Define your query
test_query = """
OfficeActivity
| where TimeGenerated > ago(1d)
| take 10
"""

# Pass the query to your QueryProvider
office_events_df = qry_prov.exec_query(test_query)
display(office_events_df.head())
# Define your query
test_query = """
OfficeActivity
| where TimeGenerated > ago(1d)
| take 10
"""

# Pass the query to your QueryProvider
office_events_df = qry_prov.exec_query(test_query)
display(office_events_df.head())
For more information, see:
TheMSTICPy query reference
Running MSTICPy pre-defined queries
Apply guidance to other notebooks
The steps in this article describe how to run theGetting Started Guide for Microsoft Sentinel ML Notebooksnotebook in your Azure Machine Learning workspace via Microsoft Sentinel. You can also use this article as guidance for performing similar steps to run notebooks in other environments, including locally.
Several Microsoft Sentinel notebooks don't use MSTICPy, such as theCredential Scannernotebooks, or the PowerShell and C# examples. Notebooks that don't use MSTICpy don't need the MSTICPy configuration described in this article.
Try out other Microsoft Sentinel notebooks, such as:
Configuring your Notebook Environment
A Tour of Cybersec notebook features
Machine Learning in Notebooks Examples
TheEntity Explorerseries, including variations for accounts, domains and URLs, IP addresses, and Linux or Windows hosts.
For more information, see:
Jupyter notebooks with Microsoft Sentinel hunting capabilities
Advanced configurations for Jupyter notebooks and MSTICPy in Microsoft Sentinel
Create your first Microsoft Sentinel notebook(Blog series)
Linux Host Explorer Notebook walkthrough(Blog)
Related content
For more information, see:
MSTICPy documentation
Jupyter Notebooks: An Introduction
The Infosec Jupyterbook
Why use Jupyter for Security Investigations
Security Investigations with Microsoft Sentinel & Notebooks
Feedback
Was this page helpful?
Additional resources