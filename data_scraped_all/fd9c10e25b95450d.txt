Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Install TmaxSoft OpenFrame on Azure
Article
2024-08-22
15 contributors
In this article
Caution
This article references CentOS, a Linux distribution that is End Of Life (EOL) status. Please consider your use and plan accordingly. For more information, see theCentOS End Of Life guidance.
Learn how to set up an OpenFrame environment on Azure suitable for development, demos, testing, or production workloads. This tutorial walks you through each step.
OpenFrame includes multiple components that create the mainframe emulation environment on Azure. For example, OpenFrame online services replace the mainframe middleware such as IBM Customer Information Control System (CICS), and OpenFrame Batch, with its TJES component, replaces the IBM mainframe's Job Entry Subsystem (JES).
OpenFrame works with any relational database, including Oracle Database, Microsoft SQL Server, IBM Db2, and MySQL. This installation of OpenFrame uses the TmaxSoft Tibero relational database. Both OpenFrame and Tibero run on a Linux operating system. This tutorial installs CentOS 7.3, although you can use other supported Linux distributions. The OpenFrame application server and the Tibero database are installed on one virtual machine (VM).
The tutorial steps you through the installation of the OpenFrame suite components. Some must be installed separately.
Main OpenFrame components:
Required installation packages.
Tibero database.
Open Database Connectivity (ODBC) is used by applications in OpenFrame to communicate with the Tibero database.
OpenFrame Base, the middleware that manages the entire system.
OpenFrame Batch, the solution that replaces the mainframe's batch systems.
TACF, a service module that controls user access to systems and resources.
ProSort, a sort tool for batch transactions.
OFCOBOL, a compiler that interprets the mainframe's COBOL programs.
OFASM, a compiler that interprets the mainframe's assembler programs.
OpenFrame Server Type C (OSC), the solution that replaces the mainframe's middleware and IBM CICS.
Java Enterprise User Solution (JEUS), a web application server that is certified for Java Enterprise Edition 6.
OFGW, the OpenFrame gateway component that provides a 3270 listener.
OFManager, a solution that provides OpenFrame's operation and management functions in the web environment.
Other required OpenFrame components:
OSI, the solution that replaces the mainframe middleware and IMS DC.
TJES, the solution that provides the mainframe's JES environment.
OFTSAM, the solution that enables (V)SAM files to be used in the open system.
OFHiDB, the solution that replaces the mainframe's IMS DB.
OFPLI, a compiler that interprets the mainframe's PL/I programs.
PROTRIEVE, a solution that executes the mainframe language CA-Easytrieve.
OFMiner, a solution that analyzes the mainframes assets and then migrates them to Azure.
Architecture
The following figure provides an overview of the OpenFrame 7.0 architectural components installed in this tutorial:

Azure system requirements
The following table lists the requirements for the installation on Azure.
Prerequisites
Plan on spending a few days to assemble all the required software and complete all the manual processes.
Before getting started, do the following:
Get the OpenFrame installation media from TmaxSoft. If you are an existing TmaxSoft customer, contact your TmaxSoft representative for a licensed copy. Otherwise, request a trial version fromTmaxSoft.
Request the OpenFrame documentation by sending email tosupport@tmaxsoft.com.
Get an Azure subscription if you don't already have one. You can also create afree accountbefore you begin.
Optional. Set up a site-to-site VPN tunnel or a jumpbox that restricts access to the Azure VM to the permitted users in your organization. This step is not required, but it is a best practice.
Set up a VM on Azure for OpenFrame and Tibero
You can set up the OpenFrame environment using various deployment patterns, but the following procedure shows how to deploy the OpenFrame application server and the Tibero database on one VM. In larger environments and for sizeable workloads, a best practice is to deploy the database separately on its own VM for better performance.
To create a VM
Sign in to theAzure portal.
Sign in to theAzure portal.
ClickVirtual machines.
ClickVirtual machines.

ClickAdd.
ClickAdd.

To the right ofOperating Systems, clickMore.
To the right ofOperating Systems, clickMore.

ClickCentOS-based 7.3to follow this walk-through exactly, or you can choose another supported Linux distribution.
ClickCentOS-based 7.3to follow this walk-through exactly, or you can choose another supported Linux distribution.

In theBasicssettings, enterName,User name,Authentication type,Subscription(Pay-As-You-Go is the AWS style of payment), andResource group(use an existing one or create a TmaxSoft group).
In theBasicssettings, enterName,User name,Authentication type,Subscription(Pay-As-You-Go is the AWS style of payment), andResource group(use an existing one or create a TmaxSoft group).
When complete (including the public/private key pair forAuthentication type), clickSubmit.
When complete (including the public/private key pair forAuthentication type), clickSubmit.
Note
If using an SSH public key forAuthentication type, see the steps in the next section to generate the public/private key pair, then resume the steps here.
Generate a public/private key pair
The public key can be freely shared, but the private key should be kept entirely secret and should never be shared with another party. After generating the keys, you must paste theSSH public keyinto the configuration in effect, uploading it to the Linux VM. It is stored insideauthorized_keyswithin the~/.sshdirectory of the user account's home directory. The Linux VM is then
able to recognize and validate the connection once you provide the associatedSSH private keyin the SSH client.
authorized_keys
~/.ssh
When giving new individuals access the VM:
Each new individual generates their own public/private keys.
Individuals store their own private keys separately and send the public key information to the administrator of the VM.
The administrator pastes the contents of the public key to the~/.ssh/authorized_keysfile.
~/.ssh/authorized_keys
The new individual connects via OpenSSH.
For more information about creating SSH key pairs, seeCreate and use an SSH public-private key pair for Linux VMs in Azure.
Configure VM features
In Azure portal, in theChoose a sizeblade, choose the Linux machine hardware settings you want. Theminimumrequirements for installing both Tibero and OpenFrame are 2 CPUs and 4 GB RAM as shown in this example installation:
In Azure portal, in theChoose a sizeblade, choose the Linux machine hardware settings you want. Theminimumrequirements for installing both Tibero and OpenFrame are 2 CPUs and 4 GB RAM as shown in this example installation:

Click3 Settingsand use the default settings to configure optional features.
Click3 Settingsand use the default settings to configure optional features.
Review your payment details.
Review your payment details.

Submit your selections. Azure begins to deploy the VM. This process typically takes a few minutes.
Submit your selections. Azure begins to deploy the VM. This process typically takes a few minutes.
When the VM is deployed, its dashboard is displayed, showing all the settings that were selected during the configuration. Make a note of thePublic IP address.
When the VM is deployed, its dashboard is displayed, showing all the settings that were selected during the configuration. Make a note of thePublic IP address.

Open bash or a PowerShell prompt.
Open bash or a PowerShell prompt.
ForHost Name, type your username and the public IP address you copied. For example,username@publicip.
ForHost Name, type your username and the public IP address you copied. For example,username@publicip.

In theCategorybox, clickConnection > SSH > Auth. Provide the path to yourprivate keyfile.
In theCategorybox, clickConnection > SSH > Auth. Provide the path to yourprivate keyfile.

ClickOpento launch the PuTTY window. If successful, you are connected to your new CentOS VM running on Azure.
ClickOpento launch the PuTTY window. If successful, you are connected to your new CentOS VM running on Azure.
To log on as root user, typesudo bash.
To log on as root user, typesudo bash.

Set up the environment and packages
Now that the VM is created and you are logged on, you must perform a few setup steps and install the required preinstallation packages.
Map the nameofdemoto the local IP address, modify/etc/hostsusing any text editor. Assuming our IP is192.168.96.148, this is before the change:127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4
::1              localhost localhost.localdomain localhost6 localhost6.localdomain
<IP Address>    <your hostname>This is after the change:127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4
::1              localhost localhost.localdomain localhost6 localhost6.localdomain
192.168.96.148   ofdemo
Map the nameofdemoto the local IP address, modify/etc/hostsusing any text editor. Assuming our IP is192.168.96.148, this is before the change:
/etc/hosts
192.168.96.148
127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4
::1              localhost localhost.localdomain localhost6 localhost6.localdomain
<IP Address>    <your hostname>
127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4
::1              localhost localhost.localdomain localhost6 localhost6.localdomain
<IP Address>    <your hostname>
This is after the change:
127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4
::1              localhost localhost.localdomain localhost6 localhost6.localdomain
192.168.96.148   ofdemo
127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4
::1              localhost localhost.localdomain localhost6 localhost6.localdomain
192.168.96.148   ofdemo
Create groups and users:sudo adduser -d /home/oframe7 oframe7
Create groups and users:
sudo adduser -d /home/oframe7 oframe7
sudo adduser -d /home/oframe7 oframe7
Change the password for user oframe7:sudo passwd oframe7New password:
Retype new password:
passwd: all authentication tokens updated successfully.
Change the password for user oframe7:
sudo passwd oframe7
sudo passwd oframe7
New password:
Retype new password:
passwd: all authentication tokens updated successfully.
New password:
Retype new password:
passwd: all authentication tokens updated successfully.
Update the kernel parameters in/etc/sysctl.confusing any text editor:kernel.shmall = 7294967296
kernel.sem = 10000 32000 10000 10000
Update the kernel parameters in/etc/sysctl.confusing any text editor:
/etc/sysctl.conf
kernel.shmall = 7294967296
kernel.sem = 10000 32000 10000 10000
kernel.shmall = 7294967296
kernel.sem = 10000 32000 10000 10000
Refresh the kernel parameters dynamically without reboot:sudo /sbin/sysctl -p
Refresh the kernel parameters dynamically without reboot:
sudo /sbin/sysctl -p
sudo /sbin/sysctl -p
Get the required packages: Make sure the server is connected to the Internet, download the following packages, and then install them:dos2unixglibcglibc.i686 glibc.x86_64libaioncursesNoteAfter installing the ncurses package, create the following symbolic links:sudo ln -s /usr/lib64/libncurses.so.5.9 /usr/lib/libtermcap.so
sudo ln -s /usr/lib64/libncurses.so.5.9 /usr/lib/libtermcap.so.2gccgcc-c++libaio-devel.x86_64straceltracegdb
Get the required packages: Make sure the server is connected to the Internet, download the following packages, and then install them:
dos2unix
dos2unix
glibc
glibc
glibc.i686 glibc.x86_64
glibc.i686 glibc.x86_64
libaio
libaio
ncursesNoteAfter installing the ncurses package, create the following symbolic links:sudo ln -s /usr/lib64/libncurses.so.5.9 /usr/lib/libtermcap.so
sudo ln -s /usr/lib64/libncurses.so.5.9 /usr/lib/libtermcap.so.2
ncurses
Note
After installing the ncurses package, create the following symbolic links:
sudo ln -s /usr/lib64/libncurses.so.5.9 /usr/lib/libtermcap.so
sudo ln -s /usr/lib64/libncurses.so.5.9 /usr/lib/libtermcap.so.2
sudo ln -s /usr/lib64/libncurses.so.5.9 /usr/lib/libtermcap.so
sudo ln -s /usr/lib64/libncurses.so.5.9 /usr/lib/libtermcap.so.2
gcc
gcc
gcc-c++
gcc-c++
libaio-devel.x86_64
libaio-devel.x86_64
strace
strace
ltrace
ltrace
gdb
gdb
In case of Java RPM installation, do the following:
In case of Java RPM installation, do the following:
sudo rpm -ivh jdk-7u79-linux-x64.rpm
sudo rpm -ivh jdk-7u79-linux-x64.rpm
Add the following contents to the~./.bash_profileusing any text editor:
~./.bash_profile
# JAVA ENV
export JAVA_HOME=/usr/java/jdk1.7.0_79/
export PATH=$JAVA_HOME/bin:$PATH
export CLASSPATH=$CLASSPATH:$JAVA_HOME/jre/lib/ext:$JAVA_HOME/lib/tools.jar
# JAVA ENV
export JAVA_HOME=/usr/java/jdk1.7.0_79/
export PATH=$JAVA_HOME/bin:$PATH
export CLASSPATH=$CLASSPATH:$JAVA_HOME/jre/lib/ext:$JAVA_HOME/lib/tools.jar
Execute the following command to load the profile:
sudo source /etc/profile
sudo source /etc/profile
Validate the java version using the following command:
sudo java âversion
sudo java âversion
java version "1.7.0_79"
Java(TM) SE Runtime Environment (build 1.7.0_79-b15)
Java HotSpot(TM) 64-Bit Server VM (build 24.79-b02, mixed mode)
java version "1.7.0_79"
Java(TM) SE Runtime Environment (build 1.7.0_79-b15)
Java HotSpot(TM) 64-Bit Server VM (build 24.79-b02, mixed mode)
sudo echo $JAVA_HOME /usr/java/jdk1.7.0_79/
sudo echo $JAVA_HOME /usr/java/jdk1.7.0_79/
Install the Tibero database
Tibero provides the several key functions in the OpenFrame environment on Azure:
Tibero is used as the OpenFrame internal data store for various system functions.
VSAM files, including KSDS, RRDS, and ESDS, use the Tibero database internally for data storage.
The TACF data repository is stored in Tibero.
The OpenFrame catalog information is stored in Tibero.
The Tibero database can be used as a replacement for IBM Db2 to store application data.
To install Tibero
Verify that the Tibero binary installer file is present and review the version number.
Verify that the Tibero binary installer file is present and review the version number.
Copy the Tibero software to the Tibero user account (oframe). For example:tar -xzvf tibero6-bin-6_rel_FS04-linux64-121793-opt-tested.tar.gz
mv license.xml /opt/tmaxdb/tibero6/license/
Copy the Tibero software to the Tibero user account (oframe). For example:
tar -xzvf tibero6-bin-6_rel_FS04-linux64-121793-opt-tested.tar.gz
mv license.xml /opt/tmaxdb/tibero6/license/
tar -xzvf tibero6-bin-6_rel_FS04-linux64-121793-opt-tested.tar.gz
mv license.xml /opt/tmaxdb/tibero6/license/
Open.bash_profileusing any text editor and paste the following in it:# Tibero6 ENV
export TB_HOME=/opt/tmaxdb/tibero6
export TB_SID=TVSAM export TB_PROF_DIR=$TB_HOME/bin/prof
export LD_LIBRARY_PATH=$TB_HOME/lib:$TB_HOME/client/lib:$LD_LIBRARY_PATH
export PATH=$TB_HOME/bin:$TB_HOME/client/bin:$PATH
Open.bash_profileusing any text editor and paste the following in it:
.bash_profile
# Tibero6 ENV
export TB_HOME=/opt/tmaxdb/tibero6
export TB_SID=TVSAM export TB_PROF_DIR=$TB_HOME/bin/prof
export LD_LIBRARY_PATH=$TB_HOME/lib:$TB_HOME/client/lib:$LD_LIBRARY_PATH
export PATH=$TB_HOME/bin:$TB_HOME/client/bin:$PATH
# Tibero6 ENV
export TB_HOME=/opt/tmaxdb/tibero6
export TB_SID=TVSAM export TB_PROF_DIR=$TB_HOME/bin/prof
export LD_LIBRARY_PATH=$TB_HOME/lib:$TB_HOME/client/lib:$LD_LIBRARY_PATH
export PATH=$TB_HOME/bin:$TB_HOME/client/bin:$PATH
To execute the bash profile, at the command prompt type:source .bash_profile
To execute the bash profile, at the command prompt type:
source .bash_profile
source .bash_profile
Generate the tip file (a configuration file for Tibero), and check its contents. For example:sh $TB_HOME/config/gen_tip.sh
cat $TB_HOME/config/$TB_SID.tip
Generate the tip file (a configuration file for Tibero), and check its contents. For example:
sh $TB_HOME/config/gen_tip.sh
cat $TB_HOME/config/$TB_SID.tip
sh $TB_HOME/config/gen_tip.sh
cat $TB_HOME/config/$TB_SID.tip
Modify\$TB_HOME/client/config/tbdsn.tbrusing any text editor and put 127.0.0.1 instead of localhost as shown:TVSAM=(
(INSTANCE=(HOST=127.0.0.1)
    (PT=8629)
(DB_NAME=TVSAM)
      )
 )
Modify\$TB_HOME/client/config/tbdsn.tbrusing any text editor and put 127.0.0.1 instead of localhost as shown:
\$TB_HOME/client/config/tbdsn.tbr
TVSAM=(
(INSTANCE=(HOST=127.0.0.1)
    (PT=8629)
(DB_NAME=TVSAM)
      )
 )
TVSAM=(
(INSTANCE=(HOST=127.0.0.1)
    (PT=8629)
(DB_NAME=TVSAM)
      )
 )
Create the database. The following output appears:Change core dump dir to /opt/tmaxdb/tibero6/bin/prof.
Listener port = 8629
Tibero 6
TmaxData Corporation Copyright (c) 2008-. All rights reserved.
Tibero instance started up (NOMOUNT mode).
 /--------------------- newmount sql ------------------------/
create database character set MSWIN949 national character set UTF16;
/-----------------------------------------------------------/
Database created.
Change core dump dir to /opt/tmaxdb/tibero6/bin/prof.
Listener port = 8629
Tibero 6
TmaxData Corporation Copyright (c) 2008-. All rights reserved.
Tibero instance started up (NORMAL mode).
/opt/tmaxdb/tibero6/bin/tbsvr
â¦â¦â¦â¦â¦â¦â¦â¦â¦..
Creating agent table...
Done.
For details, check /opt/tmaxdb/tibero6/instance/TVSAM/log/system_init.log.
**************************************************
* Tibero Database TVSAM is created successfully on Fri Aug 12 19:10:43 UTC 2016.
*     Tibero home directory ($TB_HOME) =
*         /opt/tmaxdb/tibero6
*     Tibero service ID ($TB_SID) = TVSAM
*     Tibero binary path =
*         /opt/tmaxdb/tibero6/bin:/opt/tmaxdb/tibero6/client/bin
*     Initialization parameter file =
*         /opt/tmaxdb/tibero6/config/TVSAM.tip
*
* Make sure that you always set up environment variables $TB_HOME and
* $TB_SID properly before you run Tibero.
 ******************************************************************************
Create the database. The following output appears:
Change core dump dir to /opt/tmaxdb/tibero6/bin/prof.
Listener port = 8629
Tibero 6
TmaxData Corporation Copyright (c) 2008-. All rights reserved.
Tibero instance started up (NOMOUNT mode).
 /--------------------- newmount sql ------------------------/
create database character set MSWIN949 national character set UTF16;
/-----------------------------------------------------------/
Database created.
Change core dump dir to /opt/tmaxdb/tibero6/bin/prof.
Listener port = 8629
Tibero 6
TmaxData Corporation Copyright (c) 2008-. All rights reserved.
Tibero instance started up (NORMAL mode).
/opt/tmaxdb/tibero6/bin/tbsvr
â¦â¦â¦â¦â¦â¦â¦â¦â¦..
Creating agent table...
Done.
For details, check /opt/tmaxdb/tibero6/instance/TVSAM/log/system_init.log.
**************************************************
* Tibero Database TVSAM is created successfully on Fri Aug 12 19:10:43 UTC 2016.
*     Tibero home directory ($TB_HOME) =
*         /opt/tmaxdb/tibero6
*     Tibero service ID ($TB_SID) = TVSAM
*     Tibero binary path =
*         /opt/tmaxdb/tibero6/bin:/opt/tmaxdb/tibero6/client/bin
*     Initialization parameter file =
*         /opt/tmaxdb/tibero6/config/TVSAM.tip
*
* Make sure that you always set up environment variables $TB_HOME and
* $TB_SID properly before you run Tibero.
 ******************************************************************************
Change core dump dir to /opt/tmaxdb/tibero6/bin/prof.
Listener port = 8629
Tibero 6
TmaxData Corporation Copyright (c) 2008-. All rights reserved.
Tibero instance started up (NOMOUNT mode).
 /--------------------- newmount sql ------------------------/
create database character set MSWIN949 national character set UTF16;
/-----------------------------------------------------------/
Database created.
Change core dump dir to /opt/tmaxdb/tibero6/bin/prof.
Listener port = 8629
Tibero 6
TmaxData Corporation Copyright (c) 2008-. All rights reserved.
Tibero instance started up (NORMAL mode).
/opt/tmaxdb/tibero6/bin/tbsvr
â¦â¦â¦â¦â¦â¦â¦â¦â¦..
Creating agent table...
Done.
For details, check /opt/tmaxdb/tibero6/instance/TVSAM/log/system_init.log.
**************************************************
* Tibero Database TVSAM is created successfully on Fri Aug 12 19:10:43 UTC 2016.
*     Tibero home directory ($TB_HOME) =
*         /opt/tmaxdb/tibero6
*     Tibero service ID ($TB_SID) = TVSAM
*     Tibero binary path =
*         /opt/tmaxdb/tibero6/bin:/opt/tmaxdb/tibero6/client/bin
*     Initialization parameter file =
*         /opt/tmaxdb/tibero6/config/TVSAM.tip
*
* Make sure that you always set up environment variables $TB_HOME and
* $TB_SID properly before you run Tibero.
 ******************************************************************************
To recycle Tibero, first shut it down using thetbdowncommand. For example:tbdownTibero instance terminated (NORMAL mode).
To recycle Tibero, first shut it down using thetbdowncommand. For example:
tbdown
tbdown
tbdown
Tibero instance terminated (NORMAL mode).
Tibero instance terminated (NORMAL mode).
Now boot Tibero usingtbboot. For example:tbbootChange core dump dir to /opt/tmaxdb/tibero6/bin/prof. Listener port = 8629

Tibero 6
TmaxData Corporation Copyright (c) 2008-. All rights reserved.
Tibero instance started up (NORMAL mode).
Now boot Tibero usingtbboot. For example:
tbboot
tbboot
tbboot
Change core dump dir to /opt/tmaxdb/tibero6/bin/prof. Listener port = 8629

Tibero 6
TmaxData Corporation Copyright (c) 2008-. All rights reserved.
Tibero instance started up (NORMAL mode).
Change core dump dir to /opt/tmaxdb/tibero6/bin/prof. Listener port = 8629

Tibero 6
TmaxData Corporation Copyright (c) 2008-. All rights reserved.
Tibero instance started up (NORMAL mode).
To create a tablespace, access the database using SYS user (sys/tmax), then create the necessary tablespace for the default volume and TACF:tbsql tibero/tmaxtbSQL 6
TmaxData Corporation Copyright (c) 2008-. All rights reserved.
Connected to Tibero.
To create a tablespace, access the database using SYS user (sys/tmax), then create the necessary tablespace for the default volume and TACF:
tbsql tibero/tmax
tbsql tibero/tmax
tbSQL 6
TmaxData Corporation Copyright (c) 2008-. All rights reserved.
Connected to Tibero.
tbSQL 6
TmaxData Corporation Copyright (c) 2008-. All rights reserved.
Connected to Tibero.
Now type the following SQL commands:SQL> create tablespace "DEFVOL" datafile 'DEFVOL.dbf' size 500M autoextend on; create tablespace "TACF00" datafile 'TACF00.dbf' size 500M autoextend on; create tablespace "OFM_REPOSITORY" datafile 'ofm_repository.dbf' size 300M autoextend on;
SQL> Tablespace 'DEFVOL' created.
SQL> Tablespace 'TACF00' created.
SQL> Tablespace ' OFM_REPOSITORY ' created.
SQL> SQL> Disconnected.
Now type the following SQL commands:
SQL> create tablespace "DEFVOL" datafile 'DEFVOL.dbf' size 500M autoextend on; create tablespace "TACF00" datafile 'TACF00.dbf' size 500M autoextend on; create tablespace "OFM_REPOSITORY" datafile 'ofm_repository.dbf' size 300M autoextend on;
SQL> Tablespace 'DEFVOL' created.
SQL> Tablespace 'TACF00' created.
SQL> Tablespace ' OFM_REPOSITORY ' created.
SQL> SQL> Disconnected.
SQL> create tablespace "DEFVOL" datafile 'DEFVOL.dbf' size 500M autoextend on; create tablespace "TACF00" datafile 'TACF00.dbf' size 500M autoextend on; create tablespace "OFM_REPOSITORY" datafile 'ofm_repository.dbf' size 300M autoextend on;
SQL> Tablespace 'DEFVOL' created.
SQL> Tablespace 'TACF00' created.
SQL> Tablespace ' OFM_REPOSITORY ' created.
SQL> SQL> Disconnected.
Boot Tibero and verify that the Tibero processes are running:tbboot
ps -ef | egrep tbsvr
Boot Tibero and verify that the Tibero processes are running:
tbboot
ps -ef | egrep tbsvr
tbboot
ps -ef | egrep tbsvr
Output:

Install ODBC
Applications in OpenFrame communicate with the Tibero database using the ODBC
API provided by the open-source unixODBC project.
To install ODBC:
Verify that theunixODBC-2.3.4.tar.gzinstaller file is present, or use thewget unixODBC-2.3.4.tar.gzcommand. For example:wget ftp://ftp.unixodbc.org/pub/unixODBC/unixODBC-2.3.4.tar.gz
Verify that theunixODBC-2.3.4.tar.gzinstaller file is present, or use thewget unixODBC-2.3.4.tar.gzcommand. For example:
unixODBC-2.3.4.tar.gz
wget unixODBC-2.3.4.tar.gz
wget ftp://ftp.unixodbc.org/pub/unixODBC/unixODBC-2.3.4.tar.gz
wget ftp://ftp.unixodbc.org/pub/unixODBC/unixODBC-2.3.4.tar.gz
Unzip the binary. For example:tar -zxvf unixODBC-2.3.4.tar.gz
Unzip the binary. For example:
tar -zxvf unixODBC-2.3.4.tar.gz
tar -zxvf unixODBC-2.3.4.tar.gz
Navigate to unixODBC-2.3.4 directory and generate the Makefile by using the checking machine information. For example:./configure --prefix=/opt/tmaxapp/unixODBC/ --sysconfdir=/opt/tmaxapp/unixODBC/etcBy default, unixODBC is installed in /usr /local, so--prefixpasses a value to change the location. Similarly, configuration files are installed in/etcby default, so--sysconfdirpasses the value of the desired location.
Navigate to unixODBC-2.3.4 directory and generate the Makefile by using the checking machine information. For example:
./configure --prefix=/opt/tmaxapp/unixODBC/ --sysconfdir=/opt/tmaxapp/unixODBC/etc
./configure --prefix=/opt/tmaxapp/unixODBC/ --sysconfdir=/opt/tmaxapp/unixODBC/etc
By default, unixODBC is installed in /usr /local, so--prefixpasses a value to change the location. Similarly, configuration files are installed in/etcby default, so--sysconfdirpasses the value of the desired location.
--prefix
/etc
--sysconfdir
Execute Makefile:make
Execute Makefile:make
make
Copy the executable file in the program directory after compiling. For example:make install
Copy the executable file in the program directory after compiling. For example:
make install
make install
Edit the bash profile~/.bash_profileusing any text editor and add the following:# UNIX ODBC ENV
export ODBC_HOME=$HOME/unixODBC
export PATH=$ODBC_HOME/bin:$PATH
export LD_LIBRARY_PATH=$ODBC_HOME/lib:$LD_LIBRARY_PATH
export ODBCINI=$HOME/unixODBC/etc/odbc.ini
export ODBCSYSINI=$HOME
Edit the bash profile~/.bash_profileusing any text editor and add the following:
~/.bash_profile
# UNIX ODBC ENV
export ODBC_HOME=$HOME/unixODBC
export PATH=$ODBC_HOME/bin:$PATH
export LD_LIBRARY_PATH=$ODBC_HOME/lib:$LD_LIBRARY_PATH
export ODBCINI=$HOME/unixODBC/etc/odbc.ini
export ODBCSYSINI=$HOME
# UNIX ODBC ENV
export ODBC_HOME=$HOME/unixODBC
export PATH=$ODBC_HOME/bin:$PATH
export LD_LIBRARY_PATH=$ODBC_HOME/lib:$LD_LIBRARY_PATH
export ODBCINI=$HOME/unixODBC/etc/odbc.ini
export ODBCSYSINI=$HOME
Apply the ODBC. Edit the following files accordingly. For example:source ~/.bash_profile
cd
odbcinst -j unixODBC 2.3.4DRIVERS............: /home/oframe7/odbcinst.ini
SYSTEM DATA SOURCES: /home/oframe7/odbc.ini
FILE DATA SOURCES..: /home/oframe7/ODBCDataSources
USER DATA SOURCES..: /home/oframe7/unixODBC/etc/odbc.ini
SQLULEN Size.......: 8
SQLLEN Size........: 8
SQLSETPOSIROW Size.: 8Modifyodbcinst.iniusing any text editor, and add the following contents:[Tibero]
Description = Tibero ODBC driver for Tibero6
Driver = /opt/tmaxdb/tibero6/client/lib/libtbodbc.so
Setup =
FileUsage =
CPTimeout =
CPReuse =
Driver Logging = 7

[ODBC]
Trace = NO
TraceFile = /home/oframe7/odbc.log
ForceTrace = Yes
Pooling = No
DEBUG = 1Modifyodbc.iniusing any text editor, and add the following contents:[TVSAM]
Description = Tibero ODBC driver for Tibero6
Driver = Tibero
DSN = TVSAM
SID = TVSAM
User = tibero
password = tmax
Apply the ODBC. Edit the following files accordingly. For example:
source ~/.bash_profile
cd
odbcinst -j unixODBC 2.3.4
source ~/.bash_profile
cd
odbcinst -j unixODBC 2.3.4
DRIVERS............: /home/oframe7/odbcinst.ini
SYSTEM DATA SOURCES: /home/oframe7/odbc.ini
FILE DATA SOURCES..: /home/oframe7/ODBCDataSources
USER DATA SOURCES..: /home/oframe7/unixODBC/etc/odbc.ini
SQLULEN Size.......: 8
SQLLEN Size........: 8
SQLSETPOSIROW Size.: 8
DRIVERS............: /home/oframe7/odbcinst.ini
SYSTEM DATA SOURCES: /home/oframe7/odbc.ini
FILE DATA SOURCES..: /home/oframe7/ODBCDataSources
USER DATA SOURCES..: /home/oframe7/unixODBC/etc/odbc.ini
SQLULEN Size.......: 8
SQLLEN Size........: 8
SQLSETPOSIROW Size.: 8
Modifyodbcinst.iniusing any text editor, and add the following contents:
odbcinst.ini
[Tibero]
Description = Tibero ODBC driver for Tibero6
Driver = /opt/tmaxdb/tibero6/client/lib/libtbodbc.so
Setup =
FileUsage =
CPTimeout =
CPReuse =
Driver Logging = 7

[ODBC]
Trace = NO
TraceFile = /home/oframe7/odbc.log
ForceTrace = Yes
Pooling = No
DEBUG = 1
[Tibero]
Description = Tibero ODBC driver for Tibero6
Driver = /opt/tmaxdb/tibero6/client/lib/libtbodbc.so
Setup =
FileUsage =
CPTimeout =
CPReuse =
Driver Logging = 7

[ODBC]
Trace = NO
TraceFile = /home/oframe7/odbc.log
ForceTrace = Yes
Pooling = No
DEBUG = 1
Modifyodbc.iniusing any text editor, and add the following contents:
odbc.ini
[TVSAM]
Description = Tibero ODBC driver for Tibero6
Driver = Tibero
DSN = TVSAM
SID = TVSAM
User = tibero
password = tmax
[TVSAM]
Description = Tibero ODBC driver for Tibero6
Driver = Tibero
DSN = TVSAM
SID = TVSAM
User = tibero
password = tmax
Create a symbolic link and validate the Tibero database connection:ln $ODBC_HOME/lib/libodbc.so $ODBC_HOME/lib/libodbc.so.1
ln $ODBC_HOME/lib/libodbcinst.so $ODBC_HOME/lib/libodbcinst.so.1
isql TVSAM tibero tmax
Create a symbolic link and validate the Tibero database connection:
ln $ODBC_HOME/lib/libodbc.so $ODBC_HOME/lib/libodbc.so.1
ln $ODBC_HOME/lib/libodbcinst.so $ODBC_HOME/lib/libodbcinst.so.1
isql TVSAM tibero tmax
ln $ODBC_HOME/lib/libodbc.so $ODBC_HOME/lib/libodbc.so.1
ln $ODBC_HOME/lib/libodbcinst.so $ODBC_HOME/lib/libodbcinst.so.1
isql TVSAM tibero tmax
The following output is displayed:

Install OpenFrame Base
The Base application server is installed before the individual services that OpenFrame uses to manage the system on Azure, including the transaction handling server processes.
To install OpenFrame Base
Make sure the Tibero installation succeeded, then verify that the following OpenFrame_Base7_0_Linux_x86_64.bin installer file and base.properties configuration file are present.
Make sure the Tibero installation succeeded, then verify that the following OpenFrame_Base7_0_Linux_x86_64.bin installer file and base.properties configuration file are present.
Update the bash profile with the following Tibero-specific information:alias ofhome='cd $OPENFRAME_HOME'
alias ulog='cd $OPENFRAME_HOME/log/tmax/ulog'
alias sysjcl='cd $OPENFRAME_HOME/volume_default/SYS1.JCLLIB'
alias sysload='cd $OPENFRAME_HOME/volume_default/SYS1.LOADLIB'
alias sysproc='cd $OPENFRAME_HOME/volume_default/SYS1.PROCLIB'
alias oscsrc='cd $OPENFRAME_HOME/osc/oivp'
alias osisrc='cd $OPENFRAME_HOME/osi/oivp'
alias defvol='cd $OPENFRAME_HOME/volume_default'
Update the bash profile with the following Tibero-specific information:
alias ofhome='cd $OPENFRAME_HOME'
alias ulog='cd $OPENFRAME_HOME/log/tmax/ulog'
alias sysjcl='cd $OPENFRAME_HOME/volume_default/SYS1.JCLLIB'
alias sysload='cd $OPENFRAME_HOME/volume_default/SYS1.LOADLIB'
alias sysproc='cd $OPENFRAME_HOME/volume_default/SYS1.PROCLIB'
alias oscsrc='cd $OPENFRAME_HOME/osc/oivp'
alias osisrc='cd $OPENFRAME_HOME/osi/oivp'
alias defvol='cd $OPENFRAME_HOME/volume_default'
alias ofhome='cd $OPENFRAME_HOME'
alias ulog='cd $OPENFRAME_HOME/log/tmax/ulog'
alias sysjcl='cd $OPENFRAME_HOME/volume_default/SYS1.JCLLIB'
alias sysload='cd $OPENFRAME_HOME/volume_default/SYS1.LOADLIB'
alias sysproc='cd $OPENFRAME_HOME/volume_default/SYS1.PROCLIB'
alias oscsrc='cd $OPENFRAME_HOME/osc/oivp'
alias osisrc='cd $OPENFRAME_HOME/osi/oivp'
alias defvol='cd $OPENFRAME_HOME/volume_default'
Execute the bash profile:. .bash_profile
Execute the bash profile:. .bash_profile
. .bash_profile
Ensure that the Tibero processes are running. For example:ps -ef|grep tbsvrImportantMake sure you start Tibero before installation.
Ensure that the Tibero processes are running. For example:
ps -ef|grep tbsvr
ps -ef|grep tbsvr

Important
Make sure you start Tibero before installation.
Generate license attechnet.tmaxsoft.comand PUT the OpenFrame Base, Batch, TACF, OSC licenses in the appropriate folder:cp license.dat /opt/tmaxapp/OpenFrame/core/license/
cp lictjes.dat lictacf.dat licosc.dat $OPENFRAME_HOME/license/
Generate license attechnet.tmaxsoft.comand PUT the OpenFrame Base, Batch, TACF, OSC licenses in the appropriate folder:
technet.tmaxsoft.com
cp license.dat /opt/tmaxapp/OpenFrame/core/license/
cp lictjes.dat lictacf.dat licosc.dat $OPENFRAME_HOME/license/
cp license.dat /opt/tmaxapp/OpenFrame/core/license/
cp lictjes.dat lictacf.dat licosc.dat $OPENFRAME_HOME/license/
Download the OpenFrame Base binary andbase.propertiesfiles:Modify thebase.propertiesfile accordingly, using any text editor:OPENFRAME_HOME= <appropriate location for installation> ex. /opt/tmaxapp/OpenFrame TP_HOST_NAME=<your IP Hostname> ex. ofdemo
TP_HOST_IP=<your IP Address> ex. 192.168.96.148
TP_SHMKEY=63481
TP_TPORTNO=6623
TP_UNBLOCK_PORT=6291
TP_NODE_NAME=NODE1
TP_NODE_LIST=NODE1
MASCAT_NAME=SYS1.MASTER.ICFCAT
MASCAT_CREATE=YES
DEFAULT_VOLSER=DEFVOL
VOLADD_DEFINE=YES TSAM_USERNAME=tibero
TSAM_PASSWORD=tmax
TSAM_DATABASE=oframe
DATASET_SHMKEY=63211
DSLOCK_DATA=SYS1.DSLOCK.DATA
DSLOCK_LOG=SYS1.DSLOCK.LOG
DSLOCK_SEQ=dslock_seq.dat
DSLOCK_CREATE=YES
OPENFRAME_LICENSE_PATH=/opt/tmaxapp/license/OPENFRAME TMAX_LICENSE_PATH=/opt/tmaxapp/license/TMAX
Download the OpenFrame Base binary andbase.propertiesfiles:
base.properties
Modify thebase.propertiesfile accordingly, using any text editor:
base.properties
OPENFRAME_HOME= <appropriate location for installation> ex. /opt/tmaxapp/OpenFrame TP_HOST_NAME=<your IP Hostname> ex. ofdemo
TP_HOST_IP=<your IP Address> ex. 192.168.96.148
TP_SHMKEY=63481
TP_TPORTNO=6623
TP_UNBLOCK_PORT=6291
TP_NODE_NAME=NODE1
TP_NODE_LIST=NODE1
MASCAT_NAME=SYS1.MASTER.ICFCAT
MASCAT_CREATE=YES
DEFAULT_VOLSER=DEFVOL
VOLADD_DEFINE=YES TSAM_USERNAME=tibero
TSAM_PASSWORD=tmax
TSAM_DATABASE=oframe
DATASET_SHMKEY=63211
DSLOCK_DATA=SYS1.DSLOCK.DATA
DSLOCK_LOG=SYS1.DSLOCK.LOG
DSLOCK_SEQ=dslock_seq.dat
DSLOCK_CREATE=YES
OPENFRAME_LICENSE_PATH=/opt/tmaxapp/license/OPENFRAME TMAX_LICENSE_PATH=/opt/tmaxapp/license/TMAX
OPENFRAME_HOME= <appropriate location for installation> ex. /opt/tmaxapp/OpenFrame TP_HOST_NAME=<your IP Hostname> ex. ofdemo
TP_HOST_IP=<your IP Address> ex. 192.168.96.148
TP_SHMKEY=63481
TP_TPORTNO=6623
TP_UNBLOCK_PORT=6291
TP_NODE_NAME=NODE1
TP_NODE_LIST=NODE1
MASCAT_NAME=SYS1.MASTER.ICFCAT
MASCAT_CREATE=YES
DEFAULT_VOLSER=DEFVOL
VOLADD_DEFINE=YES TSAM_USERNAME=tibero
TSAM_PASSWORD=tmax
TSAM_DATABASE=oframe
DATASET_SHMKEY=63211
DSLOCK_DATA=SYS1.DSLOCK.DATA
DSLOCK_LOG=SYS1.DSLOCK.LOG
DSLOCK_SEQ=dslock_seq.dat
DSLOCK_CREATE=YES
OPENFRAME_LICENSE_PATH=/opt/tmaxapp/license/OPENFRAME TMAX_LICENSE_PATH=/opt/tmaxapp/license/TMAX
Execute the installer using thebase.properties file. For example:chmod a+x OpenFrame_Base7_0_Linux_x86_64.bin
./OpenFrame_Base7_0_Linux_x86_64.bin -f base.propertiesWhen complete, the Installation Complete message is displayed.
Execute the installer using thebase.properties file. For example:
base.properties file
chmod a+x OpenFrame_Base7_0_Linux_x86_64.bin
./OpenFrame_Base7_0_Linux_x86_64.bin -f base.properties
chmod a+x OpenFrame_Base7_0_Linux_x86_64.bin
./OpenFrame_Base7_0_Linux_x86_64.bin -f base.properties
When complete, the Installation Complete message is displayed.
Verify the OpenFrame Base directory structure using thels -ltrcommand. For example:ls -ltrtotal 44

drwxrwxr-x. 4 oframe7 oframe7 61 Nov 30 16:57 UninstallerData
drwxrwxr-x. 2 oframe7 oframe7 4096 Nov 30 16:57 bin
drwxrwxr-x. 2 oframe7 oframe7 4096 Nov 30 16:57 cpm drwxrwxr-x. 2 oframe7 oframe7 4096 Nov 30 16:57 data
drwxrwxr-x. 2 oframe7 oframe7 4096 Nov 30 16:57 include
drwxrwxr-x. 2 oframe7 oframe7 8192 Nov 30 16:57 lib
drwxrwxr-x. 6 oframe7 oframe7 48 Nov 30 16:57 log
drwxrwxr-x. 2 oframe7 oframe7 6 Nov 30 16:57 profile
drwxrwxr-x. 7 oframe7 oframe7 62 Nov 30 16:57 sample
drwxrwxr-x. 2 oframe7 oframe7 6 Nov 30 16:57 schema
drwxrwxr-x. 2 oframe7 oframe7 6 Nov 30 16:57 temp
drwxrwxr-x. 3 oframe7 oframe7 16 Nov 30 16:57 shared
drwxrwxr-x. 2 oframe7 oframe7 4096 Nov 30 16:58 license
drwxrwxr-x. 23 oframe7 oframe7 4096 Nov 30 16:58 core
drwxrwxr-x. 2 oframe7 oframe7 4096 Nov 30 16:58 config
drwxrwxr-x. 2 oframe7 oframe7 4096 Nov 30 16:58 scripts
drwxrwxr-x. 2 oframe7 oframe7 25 Nov 30 16:58 volume_default
Verify the OpenFrame Base directory structure using thels -ltrcommand. For example:
ls -ltr
ls -ltr
ls -ltr
total 44

drwxrwxr-x. 4 oframe7 oframe7 61 Nov 30 16:57 UninstallerData
drwxrwxr-x. 2 oframe7 oframe7 4096 Nov 30 16:57 bin
drwxrwxr-x. 2 oframe7 oframe7 4096 Nov 30 16:57 cpm drwxrwxr-x. 2 oframe7 oframe7 4096 Nov 30 16:57 data
drwxrwxr-x. 2 oframe7 oframe7 4096 Nov 30 16:57 include
drwxrwxr-x. 2 oframe7 oframe7 8192 Nov 30 16:57 lib
drwxrwxr-x. 6 oframe7 oframe7 48 Nov 30 16:57 log
drwxrwxr-x. 2 oframe7 oframe7 6 Nov 30 16:57 profile
drwxrwxr-x. 7 oframe7 oframe7 62 Nov 30 16:57 sample
drwxrwxr-x. 2 oframe7 oframe7 6 Nov 30 16:57 schema
drwxrwxr-x. 2 oframe7 oframe7 6 Nov 30 16:57 temp
drwxrwxr-x. 3 oframe7 oframe7 16 Nov 30 16:57 shared
drwxrwxr-x. 2 oframe7 oframe7 4096 Nov 30 16:58 license
drwxrwxr-x. 23 oframe7 oframe7 4096 Nov 30 16:58 core
drwxrwxr-x. 2 oframe7 oframe7 4096 Nov 30 16:58 config
drwxrwxr-x. 2 oframe7 oframe7 4096 Nov 30 16:58 scripts
drwxrwxr-x. 2 oframe7 oframe7 25 Nov 30 16:58 volume_default
total 44

drwxrwxr-x. 4 oframe7 oframe7 61 Nov 30 16:57 UninstallerData
drwxrwxr-x. 2 oframe7 oframe7 4096 Nov 30 16:57 bin
drwxrwxr-x. 2 oframe7 oframe7 4096 Nov 30 16:57 cpm drwxrwxr-x. 2 oframe7 oframe7 4096 Nov 30 16:57 data
drwxrwxr-x. 2 oframe7 oframe7 4096 Nov 30 16:57 include
drwxrwxr-x. 2 oframe7 oframe7 8192 Nov 30 16:57 lib
drwxrwxr-x. 6 oframe7 oframe7 48 Nov 30 16:57 log
drwxrwxr-x. 2 oframe7 oframe7 6 Nov 30 16:57 profile
drwxrwxr-x. 7 oframe7 oframe7 62 Nov 30 16:57 sample
drwxrwxr-x. 2 oframe7 oframe7 6 Nov 30 16:57 schema
drwxrwxr-x. 2 oframe7 oframe7 6 Nov 30 16:57 temp
drwxrwxr-x. 3 oframe7 oframe7 16 Nov 30 16:57 shared
drwxrwxr-x. 2 oframe7 oframe7 4096 Nov 30 16:58 license
drwxrwxr-x. 23 oframe7 oframe7 4096 Nov 30 16:58 core
drwxrwxr-x. 2 oframe7 oframe7 4096 Nov 30 16:58 config
drwxrwxr-x. 2 oframe7 oframe7 4096 Nov 30 16:58 scripts
drwxrwxr-x. 2 oframe7 oframe7 25 Nov 30 16:58 volume_default
Start OpenFrame Base:cp /usr/lib/libtermcap.so.2 $TMAXDIR/libStart up Tmax Server using the following command:tmboot
Start OpenFrame Base:
cp /usr/lib/libtermcap.so.2 $TMAXDIR/lib
cp /usr/lib/libtermcap.so.2 $TMAXDIR/lib
Start up Tmax Server using the following command:
tmboot
tmboot

Verify the process status is ready using the tmadmin command in si. RDY is displayed in thestatuscolumn for each of the processes:
Verify the process status is ready using the tmadmin command in si. RDY is displayed in thestatuscolumn for each of the processes:

Shut down OpenFrame Base:tmdownDo you really want to down whole Tmax? (y : n): y

TMDOWN for node(NODE1) is starting:
TMDOWN: SERVER(ofrsasvr:36) downed: Wed Sep  7 15:37:21 2016
TMDOWN: SERVER(ofrdsedt:39) downed: Wed Sep  7 15:37:21 2016
TMDOWN: SERVER(vtammgr:43) downed: Wed Sep  7 15:37:21 2016
TMDOWN: SERVER(ofrcmsvr:40) downed: Wed Sep  7 15:37:21 2016
TMDOWN: SERVER(ofrdmsvr:38) downed: Wed Sep  7 15:37:21 2016
TMDOWN: SERVER(ofrlhsvr:37) downed: Wed Sep  7 15:37:21 2016
TMDOWN: SERVER(ofruisvr:41) downed: Wed Sep  7 15:37:21 2016
TMDOWN: SERVER(ofrsmlog:42) downed: Wed Sep  7 15:37:21 2016
TMDOWN: CLH downed: Wed Sep  7 15:37:21 2016
TMDOWN: CLL downed: Wed Sep  7 15:37:21 2016
TMDOWN: TLM downed: Wed Sep  7 15:37:21 2016
TMDOWN: TMM downed: Wed Sep  7 15:37:21 2016
TMDOWN: TMAX is down
Shut down OpenFrame Base:
tmdown
tmdown
Do you really want to down whole Tmax? (y : n): y

TMDOWN for node(NODE1) is starting:
TMDOWN: SERVER(ofrsasvr:36) downed: Wed Sep  7 15:37:21 2016
TMDOWN: SERVER(ofrdsedt:39) downed: Wed Sep  7 15:37:21 2016
TMDOWN: SERVER(vtammgr:43) downed: Wed Sep  7 15:37:21 2016
TMDOWN: SERVER(ofrcmsvr:40) downed: Wed Sep  7 15:37:21 2016
TMDOWN: SERVER(ofrdmsvr:38) downed: Wed Sep  7 15:37:21 2016
TMDOWN: SERVER(ofrlhsvr:37) downed: Wed Sep  7 15:37:21 2016
TMDOWN: SERVER(ofruisvr:41) downed: Wed Sep  7 15:37:21 2016
TMDOWN: SERVER(ofrsmlog:42) downed: Wed Sep  7 15:37:21 2016
TMDOWN: CLH downed: Wed Sep  7 15:37:21 2016
TMDOWN: CLL downed: Wed Sep  7 15:37:21 2016
TMDOWN: TLM downed: Wed Sep  7 15:37:21 2016
TMDOWN: TMM downed: Wed Sep  7 15:37:21 2016
TMDOWN: TMAX is down
Do you really want to down whole Tmax? (y : n): y

TMDOWN for node(NODE1) is starting:
TMDOWN: SERVER(ofrsasvr:36) downed: Wed Sep  7 15:37:21 2016
TMDOWN: SERVER(ofrdsedt:39) downed: Wed Sep  7 15:37:21 2016
TMDOWN: SERVER(vtammgr:43) downed: Wed Sep  7 15:37:21 2016
TMDOWN: SERVER(ofrcmsvr:40) downed: Wed Sep  7 15:37:21 2016
TMDOWN: SERVER(ofrdmsvr:38) downed: Wed Sep  7 15:37:21 2016
TMDOWN: SERVER(ofrlhsvr:37) downed: Wed Sep  7 15:37:21 2016
TMDOWN: SERVER(ofruisvr:41) downed: Wed Sep  7 15:37:21 2016
TMDOWN: SERVER(ofrsmlog:42) downed: Wed Sep  7 15:37:21 2016
TMDOWN: CLH downed: Wed Sep  7 15:37:21 2016
TMDOWN: CLL downed: Wed Sep  7 15:37:21 2016
TMDOWN: TLM downed: Wed Sep  7 15:37:21 2016
TMDOWN: TMM downed: Wed Sep  7 15:37:21 2016
TMDOWN: TMAX is down
Install OpenFrame Batch
OpenFrame Batch consists of several components that simulate mainframe batch environments and is used to run batch jobs on Azure.
To install Batch
Make sure the base installation succeeded, then verify that theOpenFrame_Batch7_0_Fix2_MVS_Linux_x86_64.bininstaller file andbatch.propertiesconfiguration file are present:
Make sure the base installation succeeded, then verify that theOpenFrame_Batch7_0_Fix2_MVS_Linux_x86_64.bininstaller file andbatch.propertiesconfiguration file are present:
OpenFrame_Batch7_0_Fix2_MVS_Linux_x86_64.bin
batch.properties
Modify the filevi batch.propertiesusing any text editor.
Modify the filevi batch.propertiesusing any text editor.
vi batch.properties
Modify the parameters as follows:OPENFRAME_HOME = /opt/tmaxapp/OpenFrame
DEFAULT_VOLSER=DEFVOL
TP_NODE_NAME=NODE1
TP_NODE_LIST=NODE1
RESOURCE_SHMKEY=66991
#JOBQ_DATASET_CREATE=YES
#OUTPUTQ_DATASET_CREATE=YES
DEFAULT_JCLLIB_CREATE=YES
DEFAULT_PROCLIB_CREATE=YES
DEFAULT_USERLIB_CREATE=YES
TJES_USERNAME=tibero
TJES_PASSWORD=tmax
TJES_DATABASE=oframe
BATCH_TABLE_CREATE=YES
Modify the parameters as follows:
OPENFRAME_HOME = /opt/tmaxapp/OpenFrame
DEFAULT_VOLSER=DEFVOL
TP_NODE_NAME=NODE1
TP_NODE_LIST=NODE1
RESOURCE_SHMKEY=66991
#JOBQ_DATASET_CREATE=YES
#OUTPUTQ_DATASET_CREATE=YES
DEFAULT_JCLLIB_CREATE=YES
DEFAULT_PROCLIB_CREATE=YES
DEFAULT_USERLIB_CREATE=YES
TJES_USERNAME=tibero
TJES_PASSWORD=tmax
TJES_DATABASE=oframe
BATCH_TABLE_CREATE=YES
OPENFRAME_HOME = /opt/tmaxapp/OpenFrame
DEFAULT_VOLSER=DEFVOL
TP_NODE_NAME=NODE1
TP_NODE_LIST=NODE1
RESOURCE_SHMKEY=66991
#JOBQ_DATASET_CREATE=YES
#OUTPUTQ_DATASET_CREATE=YES
DEFAULT_JCLLIB_CREATE=YES
DEFAULT_PROCLIB_CREATE=YES
DEFAULT_USERLIB_CREATE=YES
TJES_USERNAME=tibero
TJES_PASSWORD=tmax
TJES_DATABASE=oframe
BATCH_TABLE_CREATE=YES
To execute the batch installer, at the command prompt type:./OpenFrame_Batch7_0_Fix2_MVS_Linux_x86_64.bin -f batch.properties
To execute the batch installer, at the command prompt type:
./OpenFrame_Batch7_0_Fix2_MVS_Linux_x86_64.bin -f batch.properties
./OpenFrame_Batch7_0_Fix2_MVS_Linux_x86_64.bin -f batch.properties
When the installation is complete, start the installed OpenFrame suites by typingtmbootat the command prompt.
When the installation is complete, start the installed OpenFrame suites by typingtmbootat the command prompt.
tmboot

Typetmadminat the command prompt to check the OpenFrame process.
Typetmadminat the command prompt to check the OpenFrame process.
tmadmin

Execute the following commands:$$2 NODE1 (tmadm): quit
ADM quit for node (NODE1)
Execute the following commands:
$$2 NODE1 (tmadm): quit
ADM quit for node (NODE1)
$$2 NODE1 (tmadm): quit
ADM quit for node (NODE1)
Use thetmdowncommand to start up and shut down Batch:tmdownDo you really want to down whole Tmax? (y : n): y

TMDOWN for node(NODE1) is starting:
TMDOWN: SERVER(ofrsasvr:36) downed: Wed Sep  7 16:01:46 2016
TMDOWN: SERVER(obmjmsvr:44) downed: Wed Sep  7 16:01:46 2016
TMDOWN: SERVER(vtammgr: 43) downed: Wed Sep  7 16:01:46 2016
TMDOWN: SERVER(ofrcmsvr:40) downed: Wed Sep  7 16:01:46 2016
TMDOWN: SERVER(obmjmsvr:45) downed: Wed Sep  7 16:01:46 2016
TMDOWN: SERVER(obmjmsvr:46) downed: Wed Sep  7 16:01:46 2016
TMDOWN: SERVER(ofrdmsvr:38) downed: Wed Sep  7 16:01:46 2016
TMDOWN: SERVER(obmjmsvr:47) downed: Wed Sep  7 16:01:46 2016
TMDOWN: SERVER(ofrdsedt:39) downed: Wed Sep  7 16:01:46 2016
TMDOWN: SERVER(obmjschd:54) downed: Wed Sep  7 16:01:46 2016
TMDOWN: SERVER(obmjinit:55) downed: Wed Sep  7 16:01:46 2016
TMDOWN: SERVER(obmjmsvr:48) downed: Wed Sep  7 16:01:46 2016
TMDOWN: SERVER(obmjspbk:57) downed: Wed Sep  7 16:01:46 2016
TMDOWN: SERVER(obmjmsvr:49) downed: Wed Sep  7 16:01:46 2016
TMDOWN: SERVER(obmjmsvr:50) downed: Wed Sep  7 16:01:46 2016
TMDOWN: SERVER(obmjmsvr:51) downed: Wed Sep  7 16:01:46 2016
TMDOWN: SERVER(ofrlhsvr:37) downed: Wed Sep  7 16:01:46 2016
TMDOWN: SERVER(obmjmsvr:52) downed: Wed Sep  7 16:01:46 2016
TMDOWN: SERVER(obmjmsvr:53) downed: Wed Sep  7 16:01:46 2016
TMDOWN: SERVER(obmjhist:56) downed: Wed Sep  7 16:01:46 2016
TMDOWN: SERVER(ofruisvr:41) downed: Wed Sep  7 16:01:46 2016
TMDOWN: SERVER(obmtsmgr:59) downed: Wed Sep  7 16:01:46 2016
TMDOWN: SERVER(ofrpmsvr:58) downed: Wed Sep  7 16:01:46 2016
TMDOWN: SERVER(ofrsmlog:42) downed: Wed Sep  7 16:01:46 2016
TMDOWN: CLL downed: Wed Sep  7 16:01:46 2016
TMDOWN: TLM downed: Wed Sep  7 16:01:46 2016
TMDOWN: CLH downed: Wed Sep  7 16:01:46 2016
TMDOWN: TMM downed: Wed Sep  7 16:01:46 2016
TMDOWN: TMAX is down
Use thetmdowncommand to start up and shut down Batch:
tmdown
tmdown
tmdown
Do you really want to down whole Tmax? (y : n): y

TMDOWN for node(NODE1) is starting:
TMDOWN: SERVER(ofrsasvr:36) downed: Wed Sep  7 16:01:46 2016
TMDOWN: SERVER(obmjmsvr:44) downed: Wed Sep  7 16:01:46 2016
TMDOWN: SERVER(vtammgr: 43) downed: Wed Sep  7 16:01:46 2016
TMDOWN: SERVER(ofrcmsvr:40) downed: Wed Sep  7 16:01:46 2016
TMDOWN: SERVER(obmjmsvr:45) downed: Wed Sep  7 16:01:46 2016
TMDOWN: SERVER(obmjmsvr:46) downed: Wed Sep  7 16:01:46 2016
TMDOWN: SERVER(ofrdmsvr:38) downed: Wed Sep  7 16:01:46 2016
TMDOWN: SERVER(obmjmsvr:47) downed: Wed Sep  7 16:01:46 2016
TMDOWN: SERVER(ofrdsedt:39) downed: Wed Sep  7 16:01:46 2016
TMDOWN: SERVER(obmjschd:54) downed: Wed Sep  7 16:01:46 2016
TMDOWN: SERVER(obmjinit:55) downed: Wed Sep  7 16:01:46 2016
TMDOWN: SERVER(obmjmsvr:48) downed: Wed Sep  7 16:01:46 2016
TMDOWN: SERVER(obmjspbk:57) downed: Wed Sep  7 16:01:46 2016
TMDOWN: SERVER(obmjmsvr:49) downed: Wed Sep  7 16:01:46 2016
TMDOWN: SERVER(obmjmsvr:50) downed: Wed Sep  7 16:01:46 2016
TMDOWN: SERVER(obmjmsvr:51) downed: Wed Sep  7 16:01:46 2016
TMDOWN: SERVER(ofrlhsvr:37) downed: Wed Sep  7 16:01:46 2016
TMDOWN: SERVER(obmjmsvr:52) downed: Wed Sep  7 16:01:46 2016
TMDOWN: SERVER(obmjmsvr:53) downed: Wed Sep  7 16:01:46 2016
TMDOWN: SERVER(obmjhist:56) downed: Wed Sep  7 16:01:46 2016
TMDOWN: SERVER(ofruisvr:41) downed: Wed Sep  7 16:01:46 2016
TMDOWN: SERVER(obmtsmgr:59) downed: Wed Sep  7 16:01:46 2016
TMDOWN: SERVER(ofrpmsvr:58) downed: Wed Sep  7 16:01:46 2016
TMDOWN: SERVER(ofrsmlog:42) downed: Wed Sep  7 16:01:46 2016
TMDOWN: CLL downed: Wed Sep  7 16:01:46 2016
TMDOWN: TLM downed: Wed Sep  7 16:01:46 2016
TMDOWN: CLH downed: Wed Sep  7 16:01:46 2016
TMDOWN: TMM downed: Wed Sep  7 16:01:46 2016
TMDOWN: TMAX is down
Do you really want to down whole Tmax? (y : n): y

TMDOWN for node(NODE1) is starting:
TMDOWN: SERVER(ofrsasvr:36) downed: Wed Sep  7 16:01:46 2016
TMDOWN: SERVER(obmjmsvr:44) downed: Wed Sep  7 16:01:46 2016
TMDOWN: SERVER(vtammgr: 43) downed: Wed Sep  7 16:01:46 2016
TMDOWN: SERVER(ofrcmsvr:40) downed: Wed Sep  7 16:01:46 2016
TMDOWN: SERVER(obmjmsvr:45) downed: Wed Sep  7 16:01:46 2016
TMDOWN: SERVER(obmjmsvr:46) downed: Wed Sep  7 16:01:46 2016
TMDOWN: SERVER(ofrdmsvr:38) downed: Wed Sep  7 16:01:46 2016
TMDOWN: SERVER(obmjmsvr:47) downed: Wed Sep  7 16:01:46 2016
TMDOWN: SERVER(ofrdsedt:39) downed: Wed Sep  7 16:01:46 2016
TMDOWN: SERVER(obmjschd:54) downed: Wed Sep  7 16:01:46 2016
TMDOWN: SERVER(obmjinit:55) downed: Wed Sep  7 16:01:46 2016
TMDOWN: SERVER(obmjmsvr:48) downed: Wed Sep  7 16:01:46 2016
TMDOWN: SERVER(obmjspbk:57) downed: Wed Sep  7 16:01:46 2016
TMDOWN: SERVER(obmjmsvr:49) downed: Wed Sep  7 16:01:46 2016
TMDOWN: SERVER(obmjmsvr:50) downed: Wed Sep  7 16:01:46 2016
TMDOWN: SERVER(obmjmsvr:51) downed: Wed Sep  7 16:01:46 2016
TMDOWN: SERVER(ofrlhsvr:37) downed: Wed Sep  7 16:01:46 2016
TMDOWN: SERVER(obmjmsvr:52) downed: Wed Sep  7 16:01:46 2016
TMDOWN: SERVER(obmjmsvr:53) downed: Wed Sep  7 16:01:46 2016
TMDOWN: SERVER(obmjhist:56) downed: Wed Sep  7 16:01:46 2016
TMDOWN: SERVER(ofruisvr:41) downed: Wed Sep  7 16:01:46 2016
TMDOWN: SERVER(obmtsmgr:59) downed: Wed Sep  7 16:01:46 2016
TMDOWN: SERVER(ofrpmsvr:58) downed: Wed Sep  7 16:01:46 2016
TMDOWN: SERVER(ofrsmlog:42) downed: Wed Sep  7 16:01:46 2016
TMDOWN: CLL downed: Wed Sep  7 16:01:46 2016
TMDOWN: TLM downed: Wed Sep  7 16:01:46 2016
TMDOWN: CLH downed: Wed Sep  7 16:01:46 2016
TMDOWN: TMM downed: Wed Sep  7 16:01:46 2016
TMDOWN: TMAX is down
Install TACF
TACF Manager is an OpenFrame service module that controls user access to systems and resources through RACF security.
To install TACF
Verify that theOpenFrame_Tacf7_0_Fix2_Linux_x86_64.bininstaller file and tacf.properties configuration file are present.
Verify that theOpenFrame_Tacf7_0_Fix2_Linux_x86_64.bininstaller file and tacf.properties configuration file are present.
OpenFrame_Tacf7_0_Fix2_Linux_x86_64.bin
Make sure the Batch installation succeeded, then modify the filetacf.propertiesusing any text editor.
Make sure the Batch installation succeeded, then modify the filetacf.propertiesusing any text editor.
tacf.properties
Modify the TACF parameters:OPENFRAME_HOME=/opt/tmaxapp/OpenFrame
USE_OS_AUTH=NO
TACF_USERNAME=tibero
TACF_PASSWORD=tmax
TACF_DATABASE=oframe
TACF_TABLESPACE=TACF00
TACF_TABLE_CREATE=YES
Modify the TACF parameters:
OPENFRAME_HOME=/opt/tmaxapp/OpenFrame
USE_OS_AUTH=NO
TACF_USERNAME=tibero
TACF_PASSWORD=tmax
TACF_DATABASE=oframe
TACF_TABLESPACE=TACF00
TACF_TABLE_CREATE=YES
OPENFRAME_HOME=/opt/tmaxapp/OpenFrame
USE_OS_AUTH=NO
TACF_USERNAME=tibero
TACF_PASSWORD=tmax
TACF_DATABASE=oframe
TACF_TABLESPACE=TACF00
TACF_TABLE_CREATE=YES
After completing TACF installer, apply the TACF environment variables. At the command prompt, type:source ~/.bash_profile
After completing TACF installer, apply the TACF environment variables. At the command prompt, type:
source ~/.bash_profile
source ~/.bash_profile
Execute the TACF installer. At the command prompt, type:./OpenFrame_Tacf7_0_Fix2_Linux_x86_64.bin -f tacf.propertiesThe output looks something like this:Wed Dec 07 17:36:42 EDT 2016
Free Memory: 18703 kB
Total Memory: 28800 kB

4 Command Line Args:
0:  -f 1:  tacf.properties
2:  -m
3:  SILENT
java.class.path:
/tmp/install.dir.41422/InstallerData
/tmp/install.dir.41422/InstallerData/installer.zip
ZGUtil.CLASS_PATH:
/tmp/install.dir.41422/InstallerData
tmp/install.dir.41422/InstallerData/installer.zip
sun.boot.class.path:
/tmp/install.dir.41422/Linux/resource/jre/lib/resources.jar /tmp/install.dir.41422/Linux/resource/jre/lib/rt.jar /tmp/install.dir.41422/Linux/resource/jre/lib/sunrsasign.jar /tmp/install.dir.41422/Linux/resource/jre/lib/jsse.jar /tmp/install.dir.41422/Linux/resource/jre/lib/jce.jar /tmp/install.dir.41422/Linux/resource/jre/lib/charsets.jar /tmp/install.dir.41422/Linux/resource/jre/lib/jfr.jar /tmp/install.dir.41422/Linux/resource/jre/classes
Execute the TACF installer. At the command prompt, type:
./OpenFrame_Tacf7_0_Fix2_Linux_x86_64.bin -f tacf.properties
./OpenFrame_Tacf7_0_Fix2_Linux_x86_64.bin -f tacf.properties
The output looks something like this:
Wed Dec 07 17:36:42 EDT 2016
Free Memory: 18703 kB
Total Memory: 28800 kB

4 Command Line Args:
0:  -f 1:  tacf.properties
2:  -m
3:  SILENT
java.class.path:
/tmp/install.dir.41422/InstallerData
/tmp/install.dir.41422/InstallerData/installer.zip
ZGUtil.CLASS_PATH:
/tmp/install.dir.41422/InstallerData
tmp/install.dir.41422/InstallerData/installer.zip
sun.boot.class.path:
/tmp/install.dir.41422/Linux/resource/jre/lib/resources.jar /tmp/install.dir.41422/Linux/resource/jre/lib/rt.jar /tmp/install.dir.41422/Linux/resource/jre/lib/sunrsasign.jar /tmp/install.dir.41422/Linux/resource/jre/lib/jsse.jar /tmp/install.dir.41422/Linux/resource/jre/lib/jce.jar /tmp/install.dir.41422/Linux/resource/jre/lib/charsets.jar /tmp/install.dir.41422/Linux/resource/jre/lib/jfr.jar /tmp/install.dir.41422/Linux/resource/jre/classes
Wed Dec 07 17:36:42 EDT 2016
Free Memory: 18703 kB
Total Memory: 28800 kB

4 Command Line Args:
0:  -f 1:  tacf.properties
2:  -m
3:  SILENT
java.class.path:
/tmp/install.dir.41422/InstallerData
/tmp/install.dir.41422/InstallerData/installer.zip
ZGUtil.CLASS_PATH:
/tmp/install.dir.41422/InstallerData
tmp/install.dir.41422/InstallerData/installer.zip
sun.boot.class.path:
/tmp/install.dir.41422/Linux/resource/jre/lib/resources.jar /tmp/install.dir.41422/Linux/resource/jre/lib/rt.jar /tmp/install.dir.41422/Linux/resource/jre/lib/sunrsasign.jar /tmp/install.dir.41422/Linux/resource/jre/lib/jsse.jar /tmp/install.dir.41422/Linux/resource/jre/lib/jce.jar /tmp/install.dir.41422/Linux/resource/jre/lib/charsets.jar /tmp/install.dir.41422/Linux/resource/jre/lib/jfr.jar /tmp/install.dir.41422/Linux/resource/jre/classes
At the command prompt, typetmbootto restart OpenFrame. The output looks something like this:TMBOOT for node(NODE1) is starting:
Welcome to Tmax demo system: it will expire 2016/11/4
Today: 2016/9/7
TMBOOT: TMM is starting: Wed Sep  7 17:48:53 2016
TMBOOT: CLL is starting: Wed Sep  7 17:48:53 2016
TMBOOT: CLH is starting: Wed Sep  7 17:48:53 2016
TMBOOT: TLM(tlm) is starting: Wed Sep  7 17:48:53 2016
TMBOOT: SVR(ofrsasvr) is starting: Wed Sep  7 17:48:53 2016
TMBOOT: SVR(ofrlhsvr) is starting: Wed Sep  7 17:48:53 2016
TMBOOT: SVR(ofrdmsvr) is starting: Wed Sep  7 17:48:53 2016
TMBOOT: SVR(ofrdsedt) is starting: Wed Sep  7 17:48:53 2016
TMBOOT: SVR(ofrcmsvr) is starting: Wed Sep  7 17:48:53 2016
TMBOOT: SVR(ofruisvr) is starting: Wed Sep  7 17:48:53 2016
TMBOOT: SVR(ofrsmlog) is starting: Wed Sep  7 17:48:53 2016
TMBOOT: SVR(vtammgr) is starting: Wed Sep  7 17:48:53 2016
TMBOOT: SVR(obmjmsvr) is starting: Wed Sep  7 17:48:53 2016
TMBOOT: SVR(obmjmsvr) is starting: Wed Sep  7 17:48:53 2016
TMBOOT: SVR(obmjmsvr) is starting: Wed Sep  7 17:48:53 2016
TMBOOT: SVR(obmjmsvr) is starting: Wed Sep  7 17:48:53 2016
TMBOOT: SVR(obmjmsvr) is starting: Wed Sep  7 17:48:53 2016
TMBOOT: SVR(obmjmsvr) is starting: Wed Sep  7 17:48:53 2016
TMBOOT: SVR(obmjmsvr) is starting: Wed Sep  7 17:48:53 2016
TMBOOT: SVR(obmjmsvr) is starting: Wed Sep  7 17:48:53 2016
TMBOOT: SVR(obmjmsvr) is starting: Wed Sep  7 17:48:53 2016
TMBOOT: SVR(obmjmsvr) is starting: Wed Sep  7 17:48:53 2016
TMBOOT: SVR(obmjschd) is starting: Wed Sep  7 17:48:53 2016
TMBOOT: SVR(obmjinit) is starting: Wed Sep  7 17:48:53 2016
TMBOOT: SVR(obmjhist) is starting: Wed Sep  7 17:48:53 2016
TMBOOT: SVR(obmjspbk) is starting: Wed Sep  7 17:48:53 2016
TMBOOT: SVR(ofrpmsvr) is starting: Wed Sep  7 17:48:53 2016
TMBOOT: SVR(obmtsmgr) is starting: Wed Sep  7 17:48:53 2016
TMBOOT: SVR(tmsvr) is starting: Wed Sep  7 17:48:53 2016
At the command prompt, typetmbootto restart OpenFrame. The output looks something like this:
tmboot
TMBOOT for node(NODE1) is starting:
Welcome to Tmax demo system: it will expire 2016/11/4
Today: 2016/9/7
TMBOOT: TMM is starting: Wed Sep  7 17:48:53 2016
TMBOOT: CLL is starting: Wed Sep  7 17:48:53 2016
TMBOOT: CLH is starting: Wed Sep  7 17:48:53 2016
TMBOOT: TLM(tlm) is starting: Wed Sep  7 17:48:53 2016
TMBOOT: SVR(ofrsasvr) is starting: Wed Sep  7 17:48:53 2016
TMBOOT: SVR(ofrlhsvr) is starting: Wed Sep  7 17:48:53 2016
TMBOOT: SVR(ofrdmsvr) is starting: Wed Sep  7 17:48:53 2016
TMBOOT: SVR(ofrdsedt) is starting: Wed Sep  7 17:48:53 2016
TMBOOT: SVR(ofrcmsvr) is starting: Wed Sep  7 17:48:53 2016
TMBOOT: SVR(ofruisvr) is starting: Wed Sep  7 17:48:53 2016
TMBOOT: SVR(ofrsmlog) is starting: Wed Sep  7 17:48:53 2016
TMBOOT: SVR(vtammgr) is starting: Wed Sep  7 17:48:53 2016
TMBOOT: SVR(obmjmsvr) is starting: Wed Sep  7 17:48:53 2016
TMBOOT: SVR(obmjmsvr) is starting: Wed Sep  7 17:48:53 2016
TMBOOT: SVR(obmjmsvr) is starting: Wed Sep  7 17:48:53 2016
TMBOOT: SVR(obmjmsvr) is starting: Wed Sep  7 17:48:53 2016
TMBOOT: SVR(obmjmsvr) is starting: Wed Sep  7 17:48:53 2016
TMBOOT: SVR(obmjmsvr) is starting: Wed Sep  7 17:48:53 2016
TMBOOT: SVR(obmjmsvr) is starting: Wed Sep  7 17:48:53 2016
TMBOOT: SVR(obmjmsvr) is starting: Wed Sep  7 17:48:53 2016
TMBOOT: SVR(obmjmsvr) is starting: Wed Sep  7 17:48:53 2016
TMBOOT: SVR(obmjmsvr) is starting: Wed Sep  7 17:48:53 2016
TMBOOT: SVR(obmjschd) is starting: Wed Sep  7 17:48:53 2016
TMBOOT: SVR(obmjinit) is starting: Wed Sep  7 17:48:53 2016
TMBOOT: SVR(obmjhist) is starting: Wed Sep  7 17:48:53 2016
TMBOOT: SVR(obmjspbk) is starting: Wed Sep  7 17:48:53 2016
TMBOOT: SVR(ofrpmsvr) is starting: Wed Sep  7 17:48:53 2016
TMBOOT: SVR(obmtsmgr) is starting: Wed Sep  7 17:48:53 2016
TMBOOT: SVR(tmsvr) is starting: Wed Sep  7 17:48:53 2016
TMBOOT for node(NODE1) is starting:
Welcome to Tmax demo system: it will expire 2016/11/4
Today: 2016/9/7
TMBOOT: TMM is starting: Wed Sep  7 17:48:53 2016
TMBOOT: CLL is starting: Wed Sep  7 17:48:53 2016
TMBOOT: CLH is starting: Wed Sep  7 17:48:53 2016
TMBOOT: TLM(tlm) is starting: Wed Sep  7 17:48:53 2016
TMBOOT: SVR(ofrsasvr) is starting: Wed Sep  7 17:48:53 2016
TMBOOT: SVR(ofrlhsvr) is starting: Wed Sep  7 17:48:53 2016
TMBOOT: SVR(ofrdmsvr) is starting: Wed Sep  7 17:48:53 2016
TMBOOT: SVR(ofrdsedt) is starting: Wed Sep  7 17:48:53 2016
TMBOOT: SVR(ofrcmsvr) is starting: Wed Sep  7 17:48:53 2016
TMBOOT: SVR(ofruisvr) is starting: Wed Sep  7 17:48:53 2016
TMBOOT: SVR(ofrsmlog) is starting: Wed Sep  7 17:48:53 2016
TMBOOT: SVR(vtammgr) is starting: Wed Sep  7 17:48:53 2016
TMBOOT: SVR(obmjmsvr) is starting: Wed Sep  7 17:48:53 2016
TMBOOT: SVR(obmjmsvr) is starting: Wed Sep  7 17:48:53 2016
TMBOOT: SVR(obmjmsvr) is starting: Wed Sep  7 17:48:53 2016
TMBOOT: SVR(obmjmsvr) is starting: Wed Sep  7 17:48:53 2016
TMBOOT: SVR(obmjmsvr) is starting: Wed Sep  7 17:48:53 2016
TMBOOT: SVR(obmjmsvr) is starting: Wed Sep  7 17:48:53 2016
TMBOOT: SVR(obmjmsvr) is starting: Wed Sep  7 17:48:53 2016
TMBOOT: SVR(obmjmsvr) is starting: Wed Sep  7 17:48:53 2016
TMBOOT: SVR(obmjmsvr) is starting: Wed Sep  7 17:48:53 2016
TMBOOT: SVR(obmjmsvr) is starting: Wed Sep  7 17:48:53 2016
TMBOOT: SVR(obmjschd) is starting: Wed Sep  7 17:48:53 2016
TMBOOT: SVR(obmjinit) is starting: Wed Sep  7 17:48:53 2016
TMBOOT: SVR(obmjhist) is starting: Wed Sep  7 17:48:53 2016
TMBOOT: SVR(obmjspbk) is starting: Wed Sep  7 17:48:53 2016
TMBOOT: SVR(ofrpmsvr) is starting: Wed Sep  7 17:48:53 2016
TMBOOT: SVR(obmtsmgr) is starting: Wed Sep  7 17:48:53 2016
TMBOOT: SVR(tmsvr) is starting: Wed Sep  7 17:48:53 2016
Verify that the process status is ready usingtmadminin thesicommand. For example:tmadminIn thestatuscolumn, RDY appears:
Verify that the process status is ready usingtmadminin thesicommand. For example:
tmadmin
si
tmadmin
tmadmin
In thestatuscolumn, RDY appears:

Execute the following commands in the bash terminal:$$2 NODE1 (tmadm): quitDM quit for node (NODE1)

```bash
tacfmgr

```output
Input USERNAME  : ROOT
Input PASSWORD  : SYS1

TACFMGR: TACF MANAGER START!!!
QUIT TACFMGR: TACF MANAGER END!!!tmdow
Execute the following commands in the bash terminal:
$$2 NODE1 (tmadm): quit
$$2 NODE1 (tmadm): quit
DM quit for node (NODE1)

```bash
tacfmgr

```output
Input USERNAME  : ROOT
Input PASSWORD  : SYS1

TACFMGR: TACF MANAGER START!!!
QUIT TACFMGR: TACF MANAGER END!!!
DM quit for node (NODE1)

```bash
tacfmgr

```output
Input USERNAME  : ROOT
Input PASSWORD  : SYS1

TACFMGR: TACF MANAGER START!!!
QUIT TACFMGR: TACF MANAGER END!!!
tmdow
tmdow
Shut the server down using thetmdowncommand. The output looks something like this:tmdownDo you really want to down whole Tmax? (y : n): y

TMDOWN for node(NODE1) is starting:
TMDOWN: SERVER(ofrlhsvr:37) downed: Wed Sep  7 17:50:50 2016
TMDOWN: SERVER(ofrdsedt:39) downed: Wed Sep  7 17:50:50 2016
TMDOWN: SERVER(obmjschd:54) downed: Wed Sep  7 17:50:50 2016
TMDOWN: SERVER(obmjmsvr:47) downed: Wed Sep  7 17:50:50 2016
TMDOWN: SERVER(obmjmsvr:48) downed: Wed Sep  7 17:50:50 2016
TMDOWN: SERVER(ofrdmsvr:38) downed: Wed Sep  7 17:50:50 2016
TMDOWN: SERVER(obmjmsvr:50) downed: Wed Sep  7 17:50:50 2016
TMDOWN: SERVER(obmjhist:56) downed: Wed Sep  7 17:50:50 2016
TMDOWN: SERVER(ofrsasvr:36) downed: Wed Sep  7 17:50:50 2016
TMDOWN: SERVER(ofrcmsvr:40) downed: Wed Sep  7 17:50:50 2016
TMDOWN: SERVER(obmjspbk:57) downed: Wed Sep  7 17:50:50 2016
TMDOWN: SERVER(tmsvr:60) downed: Wed Sep  7 17:50:50 2016
TMDOWN: SERVER(ofrpmsvr:58) downed: Wed Sep  7 17:50:50 2016
TMDOWN: SERVER(obmtsmgr:59) downed: Wed Sep  7 17:50:50 2016
TMDOWN: CLL downed: Wed Sep  7 17:50:50 2016
TMDOWN: CLH downed: Wed Sep  7 17:50:50 2016
TMDOWN: TLM downed: Wed Sep  7 17:50:50 2016
TMDOWN: TMM downed: Wed Sep  7 17:50:50 2016
TMDOWN: TMAX is down
Shut the server down using thetmdowncommand. The output looks something like this:
tmdown
tmdown
tmdown
Do you really want to down whole Tmax? (y : n): y

TMDOWN for node(NODE1) is starting:
TMDOWN: SERVER(ofrlhsvr:37) downed: Wed Sep  7 17:50:50 2016
TMDOWN: SERVER(ofrdsedt:39) downed: Wed Sep  7 17:50:50 2016
TMDOWN: SERVER(obmjschd:54) downed: Wed Sep  7 17:50:50 2016
TMDOWN: SERVER(obmjmsvr:47) downed: Wed Sep  7 17:50:50 2016
TMDOWN: SERVER(obmjmsvr:48) downed: Wed Sep  7 17:50:50 2016
TMDOWN: SERVER(ofrdmsvr:38) downed: Wed Sep  7 17:50:50 2016
TMDOWN: SERVER(obmjmsvr:50) downed: Wed Sep  7 17:50:50 2016
TMDOWN: SERVER(obmjhist:56) downed: Wed Sep  7 17:50:50 2016
TMDOWN: SERVER(ofrsasvr:36) downed: Wed Sep  7 17:50:50 2016
TMDOWN: SERVER(ofrcmsvr:40) downed: Wed Sep  7 17:50:50 2016
TMDOWN: SERVER(obmjspbk:57) downed: Wed Sep  7 17:50:50 2016
TMDOWN: SERVER(tmsvr:60) downed: Wed Sep  7 17:50:50 2016
TMDOWN: SERVER(ofrpmsvr:58) downed: Wed Sep  7 17:50:50 2016
TMDOWN: SERVER(obmtsmgr:59) downed: Wed Sep  7 17:50:50 2016
TMDOWN: CLL downed: Wed Sep  7 17:50:50 2016
TMDOWN: CLH downed: Wed Sep  7 17:50:50 2016
TMDOWN: TLM downed: Wed Sep  7 17:50:50 2016
TMDOWN: TMM downed: Wed Sep  7 17:50:50 2016
TMDOWN: TMAX is down
Do you really want to down whole Tmax? (y : n): y

TMDOWN for node(NODE1) is starting:
TMDOWN: SERVER(ofrlhsvr:37) downed: Wed Sep  7 17:50:50 2016
TMDOWN: SERVER(ofrdsedt:39) downed: Wed Sep  7 17:50:50 2016
TMDOWN: SERVER(obmjschd:54) downed: Wed Sep  7 17:50:50 2016
TMDOWN: SERVER(obmjmsvr:47) downed: Wed Sep  7 17:50:50 2016
TMDOWN: SERVER(obmjmsvr:48) downed: Wed Sep  7 17:50:50 2016
TMDOWN: SERVER(ofrdmsvr:38) downed: Wed Sep  7 17:50:50 2016
TMDOWN: SERVER(obmjmsvr:50) downed: Wed Sep  7 17:50:50 2016
TMDOWN: SERVER(obmjhist:56) downed: Wed Sep  7 17:50:50 2016
TMDOWN: SERVER(ofrsasvr:36) downed: Wed Sep  7 17:50:50 2016
TMDOWN: SERVER(ofrcmsvr:40) downed: Wed Sep  7 17:50:50 2016
TMDOWN: SERVER(obmjspbk:57) downed: Wed Sep  7 17:50:50 2016
TMDOWN: SERVER(tmsvr:60) downed: Wed Sep  7 17:50:50 2016
TMDOWN: SERVER(ofrpmsvr:58) downed: Wed Sep  7 17:50:50 2016
TMDOWN: SERVER(obmtsmgr:59) downed: Wed Sep  7 17:50:50 2016
TMDOWN: CLL downed: Wed Sep  7 17:50:50 2016
TMDOWN: CLH downed: Wed Sep  7 17:50:50 2016
TMDOWN: TLM downed: Wed Sep  7 17:50:50 2016
TMDOWN: TMM downed: Wed Sep  7 17:50:50 2016
TMDOWN: TMAX is down
Install ProSort
ProSort is a utility used in batch transactions for sorting data.
To install ProSort
Make sure the Batch installation was successful, and then verify that theprosort-bin-prosort_2sp3-linux64-2123-opt.tar.gzinstaller file is present.
Make sure the Batch installation was successful, and then verify that theprosort-bin-prosort_2sp3-linux64-2123-opt.tar.gzinstaller file is present.
prosort-bin-prosort_2sp3-linux64-2123-opt.tar.gz
Execute the installer using the properties file. At the command prompt, type:tar -zxvf prosort-bin-prosort_2sp3-linux64-2123-opt.tar.gz
Execute the installer using the properties file. At the command prompt, type:
tar -zxvf prosort-bin-prosort_2sp3-linux64-2123-opt.tar.gz
tar -zxvf prosort-bin-prosort_2sp3-linux64-2123-opt.tar.gz
Move the prosort directory to the home location. At the command prompt, type:mv prosort /opt/tmaxapp/prosort
Move the prosort directory to the home location. At the command prompt, type:
mv prosort /opt/tmaxapp/prosort
mv prosort /opt/tmaxapp/prosort
Create a license subdirectory and copy the license file there. For example:cd /opt/tmaxapp/prosort
mkdir license
cp /opt/tmaxsw/oflicense/prosort/license.xml /opt/tmaxapp/prosort/license
Create a license subdirectory and copy the license file there. For example:
cd /opt/tmaxapp/prosort
mkdir license
cp /opt/tmaxsw/oflicense/prosort/license.xml /opt/tmaxapp/prosort/license
cd /opt/tmaxapp/prosort
mkdir license
cp /opt/tmaxsw/oflicense/prosort/license.xml /opt/tmaxapp/prosort/license
Modifybash.profileusing any text editor, update it as follows:#       PROSORT

PROSORT_HOME=/opt/tmaxapp/prosort
PROSORT_SID=gbg
PATH=$PATH:$PROSORT_HOME/bin LD_LIBRARY_PATH=$PROSORT_HOME/lib:$LD_LIBRARY_PATH LIBPATH$PROSORT_HOME/lib:$LIBPATH
export PROSORT_HOME PROSORT_SID
PATH LD_LIBRARY_PATH LIBPATH
PATH=$PATH:$OPENFRAME_HOME/shbin
export PATH
Modifybash.profileusing any text editor, update it as follows:
bash.profile
#       PROSORT

PROSORT_HOME=/opt/tmaxapp/prosort
PROSORT_SID=gbg
PATH=$PATH:$PROSORT_HOME/bin LD_LIBRARY_PATH=$PROSORT_HOME/lib:$LD_LIBRARY_PATH LIBPATH$PROSORT_HOME/lib:$LIBPATH
export PROSORT_HOME PROSORT_SID
PATH LD_LIBRARY_PATH LIBPATH
PATH=$PATH:$OPENFRAME_HOME/shbin
export PATH
#       PROSORT

PROSORT_HOME=/opt/tmaxapp/prosort
PROSORT_SID=gbg
PATH=$PATH:$PROSORT_HOME/bin LD_LIBRARY_PATH=$PROSORT_HOME/lib:$LD_LIBRARY_PATH LIBPATH$PROSORT_HOME/lib:$LIBPATH
export PROSORT_HOME PROSORT_SID
PATH LD_LIBRARY_PATH LIBPATH
PATH=$PATH:$OPENFRAME_HOME/shbin
export PATH
To execute the bash profile, at the command prompt, type:. .bash_profile
To execute the bash profile, at the command prompt, type:. .bash_profile
. .bash_profile
Create the configuration file. For example:cd /opt/tmaxapp/prosort/config
./gen_tip.shUsing PROSORT_SID "gbg"
 /home/oframe7/prosort/config/gbg.tip generated
Create the configuration file. For example:
cd /opt/tmaxapp/prosort/config
./gen_tip.sh
cd /opt/tmaxapp/prosort/config
./gen_tip.sh
Using PROSORT_SID "gbg"
 /home/oframe7/prosort/config/gbg.tip generated
Using PROSORT_SID "gbg"
 /home/oframe7/prosort/config/gbg.tip generated
Create the symbolic link. For example:cd /opt/tmaxapp/OpenFrame/util/
ln -s DFSORT SORT
Create the symbolic link. For example:
cd /opt/tmaxapp/OpenFrame/util/
ln -s DFSORT SORT
cd /opt/tmaxapp/OpenFrame/util/
ln -s DFSORT SORT
Verify the ProSort installation by executing theprosort -hcommand. For example:prosort -hUsage: prosort [options] [sort script files]
options ------
-h             Display this information
-v             Display version information
-s             Display state information
-j             Display profile information
-x             Use SyncSort compatible mode
Verify the ProSort installation by executing theprosort -hcommand. For example:
prosort -h
prosort -h
prosort -h
Usage: prosort [options] [sort script files]
options ------
-h             Display this information
-v             Display version information
-s             Display state information
-j             Display profile information
-x             Use SyncSort compatible mode
Usage: prosort [options] [sort script files]
options ------
-h             Display this information
-v             Display version information
-s             Display state information
-j             Display profile information
-x             Use SyncSort compatible mode
Install OFCOBOL
OFCOBOL is the OpenFrame compiler that interprets the mainframe's COBOL programs.
To install OFCOBOL
Make sure that the Batch/Online installation succeeded, then verify that theOpenFrame_COBOL3_0_40_Linux_x86_64.bininstaller file is present.
Make sure that the Batch/Online installation succeeded, then verify that theOpenFrame_COBOL3_0_40_Linux_x86_64.bininstaller file is present.
OpenFrame_COBOL3_0_40_Linux_x86_64.bin
To execute the OFCOBOL installer, at the command prompt, type:./OpenFrame_COBOL3_0_40_Linux_x86_64.bin
To execute the OFCOBOL installer, at the command prompt, type:
./OpenFrame_COBOL3_0_40_Linux_x86_64.bin
./OpenFrame_COBOL3_0_40_Linux_x86_64.bin
Read the licensing agreement and press Enter to continue.
Read the licensing agreement and press Enter to continue.
Accept the licensing agreement. When the installation is complete, the following appears:Choose Install Folder
--------------------
Where would you like to install?
Default Install Folder: /home/oframe7/OFCOBOL

ENTER AN ABSOLUTE PATH, OR PRESS <ENTER> TO ACCEPT THE DEFAULT : /opt/tmaxapp/OFCOBOL

INSTALL FOLDER IS: /opt/tmaxapp/OFCOBOL
IS THIS CORRECT? (Y/N): Y[oframe7@ofdemo ~]$ vi .bash_profile

============================================================================ Installing...
------------
[==================|==================|==================|==================]
[------------------|------------------|------------------|------------------]

=============================================================================== Installation Complete
--------------------
Congratulations. OpenFrame_COBOL has been successfully installed
PRESS <ENTER> TO EXIT THE INSTALLER
Accept the licensing agreement. When the installation is complete, the following appears:
Choose Install Folder
--------------------
Where would you like to install?
Default Install Folder: /home/oframe7/OFCOBOL

ENTER AN ABSOLUTE PATH, OR PRESS <ENTER> TO ACCEPT THE DEFAULT : /opt/tmaxapp/OFCOBOL

INSTALL FOLDER IS: /opt/tmaxapp/OFCOBOL
IS THIS CORRECT? (Y/N): Y[oframe7@ofdemo ~]$ vi .bash_profile

============================================================================ Installing...
------------
[==================|==================|==================|==================]
[------------------|------------------|------------------|------------------]

=============================================================================== Installation Complete
--------------------
Congratulations. OpenFrame_COBOL has been successfully installed
PRESS <ENTER> TO EXIT THE INSTALLER
Choose Install Folder
--------------------
Where would you like to install?
Default Install Folder: /home/oframe7/OFCOBOL

ENTER AN ABSOLUTE PATH, OR PRESS <ENTER> TO ACCEPT THE DEFAULT : /opt/tmaxapp/OFCOBOL

INSTALL FOLDER IS: /opt/tmaxapp/OFCOBOL
IS THIS CORRECT? (Y/N): Y[oframe7@ofdemo ~]$ vi .bash_profile

============================================================================ Installing...
------------
[==================|==================|==================|==================]
[------------------|------------------|------------------|------------------]

=============================================================================== Installation Complete
--------------------
Congratulations. OpenFrame_COBOL has been successfully installed
PRESS <ENTER> TO EXIT THE INSTALLER
Modify the bash profile file (bash_profile) using any text editor, and verify that is updated with OFCOBOL variables.
Modify the bash profile file (bash_profile) using any text editor, and verify that is updated with OFCOBOL variables.
bash_profile
Execute the bash profile. At the command prompt, type:source ~/.bash_profile
Execute the bash profile. At the command prompt, type:
source ~/.bash_profile
source ~/.bash_profile
Copy the OFCOBOL license to the installed folder. For example:mv licofcob.dat $OFCOB_HOME/license
Copy the OFCOBOL license to the installed folder. For example:
mv licofcob.dat $OFCOB_HOME/license
mv licofcob.dat $OFCOB_HOME/license
Modify the OpenFrame$OPENFRAME_HOME/config/tjclrun.confconfiguration file using any text editor. For example:Here's the SYSLIB section before the change:[SYSLIB] BIN_PATH=${OPENFRAME_HOME}/bin:${OPENFRAME_HOME}/util:${COBDIR}/bin:/usr/local/bin:/bin LIB_PATH=${OPENFRAME_HOME}/lib:${OPENFRAME_HOME}/core/lib:${TB_HOME}/client/lib:${COBDIR}/lib:/ usr/lib:/lib:/lib/i686:/usr/local/lib:${PROSORT_HOME}/lib:/opt/FSUNbsort/libHere's the SYSLIB section after the change:[SYSLIB] BIN_PATH=${OPENFRAME_HOME}/bin:${OPENFRAME_HOME}/util:${COBDIR}/bin:/usr/local/bin:/bin LIB_PATH=${OPENFRAME_HOME}/lib:${OPENFRAME_HOME}/core/lib:${TB_HOME}/client/lib:${COBDIR}/lib:/ usr/lib:/lib:/lib/i686:/usr/local/lib:${PROSORT_HOME}/lib:/opt/FSUNbsort/lib :${ODBC_HOME}/lib
:${OFCOB_HOME}/lib
Modify the OpenFrame$OPENFRAME_HOME/config/tjclrun.confconfiguration file using any text editor. For example:
$OPENFRAME_HOME/config/tjclrun.conf
Here's the SYSLIB section before the change:
[SYSLIB] BIN_PATH=${OPENFRAME_HOME}/bin:${OPENFRAME_HOME}/util:${COBDIR}/bin:/usr/local/bin:/bin LIB_PATH=${OPENFRAME_HOME}/lib:${OPENFRAME_HOME}/core/lib:${TB_HOME}/client/lib:${COBDIR}/lib:/ usr/lib:/lib:/lib/i686:/usr/local/lib:${PROSORT_HOME}/lib:/opt/FSUNbsort/lib
[SYSLIB] BIN_PATH=${OPENFRAME_HOME}/bin:${OPENFRAME_HOME}/util:${COBDIR}/bin:/usr/local/bin:/bin LIB_PATH=${OPENFRAME_HOME}/lib:${OPENFRAME_HOME}/core/lib:${TB_HOME}/client/lib:${COBDIR}/lib:/ usr/lib:/lib:/lib/i686:/usr/local/lib:${PROSORT_HOME}/lib:/opt/FSUNbsort/lib
Here's the SYSLIB section after the change:
[SYSLIB] BIN_PATH=${OPENFRAME_HOME}/bin:${OPENFRAME_HOME}/util:${COBDIR}/bin:/usr/local/bin:/bin LIB_PATH=${OPENFRAME_HOME}/lib:${OPENFRAME_HOME}/core/lib:${TB_HOME}/client/lib:${COBDIR}/lib:/ usr/lib:/lib:/lib/i686:/usr/local/lib:${PROSORT_HOME}/lib:/opt/FSUNbsort/lib :${ODBC_HOME}/lib
:${OFCOB_HOME}/lib
[SYSLIB] BIN_PATH=${OPENFRAME_HOME}/bin:${OPENFRAME_HOME}/util:${COBDIR}/bin:/usr/local/bin:/bin LIB_PATH=${OPENFRAME_HOME}/lib:${OPENFRAME_HOME}/core/lib:${TB_HOME}/client/lib:${COBDIR}/lib:/ usr/lib:/lib:/lib/i686:/usr/local/lib:${PROSORT_HOME}/lib:/opt/FSUNbsort/lib :${ODBC_HOME}/lib
:${OFCOB_HOME}/lib
Review theOpenFrame_COBOL_InstallLog.logfile in vi and verify that there are no errors. For example:cat $OFCOB_HOME/UninstallerData/log/OpenFrame_COBOL_InstallLog.logâ¦â¦..
Summary
------
Installation: Successful.
131 Successes
0 Warnings
0 NonFatalErrors
0 FatalError
Review theOpenFrame_COBOL_InstallLog.logfile in vi and verify that there are no errors. For example:
OpenFrame_COBOL_InstallLog.log
cat $OFCOB_HOME/UninstallerData/log/OpenFrame_COBOL_InstallLog.log
cat $OFCOB_HOME/UninstallerData/log/OpenFrame_COBOL_InstallLog.log
â¦â¦..
Summary
------
Installation: Successful.
131 Successes
0 Warnings
0 NonFatalErrors
0 FatalError
â¦â¦..
Summary
------
Installation: Successful.
131 Successes
0 Warnings
0 NonFatalErrors
0 FatalError
Use theofcob --versioncommand and review the version number to verify the installation. For example:ofcob --versionOpenFrame COBOL Compiler 3.0.54
CommitTag:: 645f3f6bf7fbe1c366a6557c55b96c48454f4bf
Use theofcob --versioncommand and review the version number to verify the installation. For example:
ofcob --version
ofcob --version
ofcob --version
OpenFrame COBOL Compiler 3.0.54
CommitTag:: 645f3f6bf7fbe1c366a6557c55b96c48454f4bf
OpenFrame COBOL Compiler 3.0.54
CommitTag:: 645f3f6bf7fbe1c366a6557c55b96c48454f4bf
Reboot OpenFrame using thetmdown/tmbootcommand.
Reboot OpenFrame using thetmdown/tmbootcommand.
tmdown/tmboot
Install OFASM
OFASM is the OpenFrame compiler that interprets the mainframe's assembler programs.
To install OFASM
Make sure that the Batch/Online installation succeeded, then verify that theOpenFrame_ASM3_0_Linux_x86_64.bininstaller file is present.
Make sure that the Batch/Online installation succeeded, then verify that theOpenFrame_ASM3_0_Linux_x86_64.bininstaller file is present.
OpenFrame_ASM3_0_Linux_x86_64.bin
Execute the installer. For example:./OpenFrame_ASM3_0_Linux_x86_64.bin
Execute the installer. For example:
./OpenFrame_ASM3_0_Linux_x86_64.bin
./OpenFrame_ASM3_0_Linux_x86_64.bin
Read the licensing agreement and press Enter to continue.
Read the licensing agreement and press Enter to continue.
Accept the licensing agreement.
Accept the licensing agreement.
Verify the bash profile is updated with OFASM variables. For example:source .bash_profile
ofasm --version# TmaxSoft OpenFrameAssembler v3 r328
(3ff35168d34f6e2046b96415bbe374160fcb3a34)cat .bash_profile# OFASM ENV
export OFASM_HOME=/opt/tmaxapp/OFASM
export OFASM_MACLIB=$OFASM_HOME/maclib/free_macro
export PATH="${PATH}:$OFASM_HOME/bin:"
export LD_LIBRARY_PATH="./:$OFASM_HOME/lib:$LD_LIBRARY_PATH"
Verify the bash profile is updated with OFASM variables. For example:
source .bash_profile
ofasm --version
source .bash_profile
ofasm --version
# TmaxSoft OpenFrameAssembler v3 r328
(3ff35168d34f6e2046b96415bbe374160fcb3a34)
# TmaxSoft OpenFrameAssembler v3 r328
(3ff35168d34f6e2046b96415bbe374160fcb3a34)
cat .bash_profile
cat .bash_profile
# OFASM ENV
export OFASM_HOME=/opt/tmaxapp/OFASM
export OFASM_MACLIB=$OFASM_HOME/maclib/free_macro
export PATH="${PATH}:$OFASM_HOME/bin:"
export LD_LIBRARY_PATH="./:$OFASM_HOME/lib:$LD_LIBRARY_PATH"
# OFASM ENV
export OFASM_HOME=/opt/tmaxapp/OFASM
export OFASM_MACLIB=$OFASM_HOME/maclib/free_macro
export PATH="${PATH}:$OFASM_HOME/bin:"
export LD_LIBRARY_PATH="./:$OFASM_HOME/lib:$LD_LIBRARY_PATH"
Open the OpenFrame$OPENFRAME_HOME/config/tjclrun.confconfiguration file using any text editor and modify it as follows:Here is the [SYSLIB] sectionbeforethe change:[SYSLIB] BIN_PATH=${OPENFRAME_HOME}/bin:${OPENFRAME_HOME}/util:${COBDIR}/bin:/usr/local/bin:/bi n:${OPENFRAME_HOME}/volume_default/SYS1.LOADLIB LIB_PATH=${OPENFRAME_HOME}/lib:${OPENFRAME_HOME}/core/lib:${TB_HOME}/client/lib:${CO BDIR}/lib:/usr/lib:/lib:/lib/i686:/usr/local/lib:${PROSORT_HOME}/lib:/opt/FSUNbsort/lib:${OFCOB_HOM E}/lib:${ODBC_HOME}/lib:${OFPLI_HOME}/libHere is the [SYSLIB] sectionafterthe change:[SYSLIB] BIN_PATH=${OPENFRAME_HOME}/bin:${OPENFRAME_HOME}/util:${COBDIR}/bin:/usr/local/bin:/bi n:${OPENFRAME_HOME}/volume_default/SYS1.LOADLIB LIB_PATH=${OPENFRAME_HOME}/lib:${OPENFRAME_HOME}/core/lib:${TB_HOME}/client/lib:${CO BDIR}/lib:/usr/lib:/lib:/lib/i686:/usr/local/lib:${PROSORT_HOME}/lib:/opt/FSUNbsort/lib:${OFCOB_HOM E}/lib:${ODBC_HOME}/lib:${OFPLI_HOME}/lib:${OFASM_HOME}/lib
Open the OpenFrame$OPENFRAME_HOME/config/tjclrun.confconfiguration file using any text editor and modify it as follows:
$OPENFRAME_HOME/config/tjclrun.conf
Here is the [SYSLIB] sectionbeforethe change:
[SYSLIB] BIN_PATH=${OPENFRAME_HOME}/bin:${OPENFRAME_HOME}/util:${COBDIR}/bin:/usr/local/bin:/bi n:${OPENFRAME_HOME}/volume_default/SYS1.LOADLIB LIB_PATH=${OPENFRAME_HOME}/lib:${OPENFRAME_HOME}/core/lib:${TB_HOME}/client/lib:${CO BDIR}/lib:/usr/lib:/lib:/lib/i686:/usr/local/lib:${PROSORT_HOME}/lib:/opt/FSUNbsort/lib:${OFCOB_HOM E}/lib:${ODBC_HOME}/lib:${OFPLI_HOME}/lib
[SYSLIB] BIN_PATH=${OPENFRAME_HOME}/bin:${OPENFRAME_HOME}/util:${COBDIR}/bin:/usr/local/bin:/bi n:${OPENFRAME_HOME}/volume_default/SYS1.LOADLIB LIB_PATH=${OPENFRAME_HOME}/lib:${OPENFRAME_HOME}/core/lib:${TB_HOME}/client/lib:${CO BDIR}/lib:/usr/lib:/lib:/lib/i686:/usr/local/lib:${PROSORT_HOME}/lib:/opt/FSUNbsort/lib:${OFCOB_HOM E}/lib:${ODBC_HOME}/lib:${OFPLI_HOME}/lib
Here is the [SYSLIB] sectionafterthe change:
[SYSLIB] BIN_PATH=${OPENFRAME_HOME}/bin:${OPENFRAME_HOME}/util:${COBDIR}/bin:/usr/local/bin:/bi n:${OPENFRAME_HOME}/volume_default/SYS1.LOADLIB LIB_PATH=${OPENFRAME_HOME}/lib:${OPENFRAME_HOME}/core/lib:${TB_HOME}/client/lib:${CO BDIR}/lib:/usr/lib:/lib:/lib/i686:/usr/local/lib:${PROSORT_HOME}/lib:/opt/FSUNbsort/lib:${OFCOB_HOM E}/lib:${ODBC_HOME}/lib:${OFPLI_HOME}/lib:${OFASM_HOME}/lib
[SYSLIB] BIN_PATH=${OPENFRAME_HOME}/bin:${OPENFRAME_HOME}/util:${COBDIR}/bin:/usr/local/bin:/bi n:${OPENFRAME_HOME}/volume_default/SYS1.LOADLIB LIB_PATH=${OPENFRAME_HOME}/lib:${OPENFRAME_HOME}/core/lib:${TB_HOME}/client/lib:${CO BDIR}/lib:/usr/lib:/lib:/lib/i686:/usr/local/lib:${PROSORT_HOME}/lib:/opt/FSUNbsort/lib:${OFCOB_HOM E}/lib:${ODBC_HOME}/lib:${OFPLI_HOME}/lib:${OFASM_HOME}/lib
Validate theOpenFrame_ASM_InstallLog.logfile, and verify that there are no errors. For example:cat $OFASM_HOME/UninstallerData/log/OpenFrame_ASM_InstallLog.logâ¦â¦..
Summary
------

Installation: Successful.

55 Successes
0 Warnings
0 NonFatalErrors
0 FatalErrors
Validate theOpenFrame_ASM_InstallLog.logfile, and verify that there are no errors. For example:
OpenFrame_ASM_InstallLog.log
cat $OFASM_HOME/UninstallerData/log/OpenFrame_ASM_InstallLog.log
cat $OFASM_HOME/UninstallerData/log/OpenFrame_ASM_InstallLog.log
â¦â¦..
Summary
------

Installation: Successful.

55 Successes
0 Warnings
0 NonFatalErrors
0 FatalErrors
â¦â¦..
Summary
------

Installation: Successful.

55 Successes
0 Warnings
0 NonFatalErrors
0 FatalErrors
Reboot OpenFrame by issuing one of the following commands:tmdown / tmbootâorâoscdown / oscboot
Reboot OpenFrame by issuing one of the following commands:
tmdown / tmboot
tmdown / tmboot
âorâ
oscdown / oscboot
oscdown / oscboot
Install OSC
OSC is the OpenFrame environment similar to IBM CICS that supports high-speed OLTP transactions and other management functions.
To install OSC
Make sure the base installation succeeded, then verify that theOpenFrame_OSC7_0_Fix2_Linux_x86_64.bininstaller file and osc.properties configuration file are present.
Make sure the base installation succeeded, then verify that theOpenFrame_OSC7_0_Fix2_Linux_x86_64.bininstaller file and osc.properties configuration file are present.
OpenFrame_OSC7_0_Fix2_Linux_x86_64.bin
Edit the following parameters in theosc.propertiesfile:OPENFRAME_HOME=/opt/tmaxapp/OpenFrame OSC_SYS_OSC_NCS_PATH=/opt/tmaxapp/OpenFrame/temp/OSC_NCS OSC_APP_OSC_TC_PATH=/opt/tmaxapp/OpenFrame/temp/OSC_TC
Edit the following parameters in theosc.propertiesfile:
osc.properties
OPENFRAME_HOME=/opt/tmaxapp/OpenFrame OSC_SYS_OSC_NCS_PATH=/opt/tmaxapp/OpenFrame/temp/OSC_NCS OSC_APP_OSC_TC_PATH=/opt/tmaxapp/OpenFrame/temp/OSC_TC
OPENFRAME_HOME=/opt/tmaxapp/OpenFrame OSC_SYS_OSC_NCS_PATH=/opt/tmaxapp/OpenFrame/temp/OSC_NCS OSC_APP_OSC_TC_PATH=/opt/tmaxapp/OpenFrame/temp/OSC_TC
Execute the installer using the properties file as shown:chmod a+x OpenFrame_OSC7_0_Fix2_Linux_x86_64.bin
./OpenFrame_OSC7_0_Fix2_Linux_x86_64.bin -f osc.propertiesWhen finished, the "Installation Complete" message is displayed.
Execute the installer using the properties file as shown:
chmod a+x OpenFrame_OSC7_0_Fix2_Linux_x86_64.bin
./OpenFrame_OSC7_0_Fix2_Linux_x86_64.bin -f osc.properties
chmod a+x OpenFrame_OSC7_0_Fix2_Linux_x86_64.bin
./OpenFrame_OSC7_0_Fix2_Linux_x86_64.bin -f osc.properties
When finished, the "Installation Complete" message is displayed.
Verify that the bash profile is updated with OSC variables.
Verify that the bash profile is updated with OSC variables.
Review theOpenFrame_OSC7_0_Fix2_InstallLog.logfile. It should look something like this:Summary
------
Installation: Successful.

233 Successes
0 Warnings
0 NonFatalErrors
0 FatalError
Review theOpenFrame_OSC7_0_Fix2_InstallLog.logfile. It should look something like this:
OpenFrame_OSC7_0_Fix2_InstallLog.log
Summary
------
Installation: Successful.

233 Successes
0 Warnings
0 NonFatalErrors
0 FatalError
Summary
------
Installation: Successful.

233 Successes
0 Warnings
0 NonFatalErrors
0 FatalError
Modify the$OPENFRAME_HOME/config/ofsys.seqconfiguration file using any text editor. In the #BASE and #BATCH sections, edit the parameters as shown.Before changes
#BASE
ofrsasvr
ofrlhsvr
ofrdmsvr
ofrdsedt
ofrcmsvr
ofruisvr
ofrsmlog
vtammgr
TPFMAGENT

#BATCH
#BATCH#obmtsmgr
#BATCH#ofrpmsvr
#BATCH#obmjmsvr
#BATCH#obmjschd
#BATCH#obmjinit
#BATCH#obmjhist
#BATCH#obmjspbk
#TACF #TACF#tmsvr

After changes 	#BATCH
#BASE          obmtsmgr
ofrsasvr       ofrpmsvr
ofrlhsvr       obmjmsvr
ofrdmsvr       obmjschd
ofrdsedt       obmjinit
ofrcmsvr       obmjhist
ofruisvr       obmjspbk
ofrsmlog
vtammgr        #TACF
TPFMAGENT      tmsvr
Modify the$OPENFRAME_HOME/config/ofsys.seqconfiguration file using any text editor. In the #BASE and #BATCH sections, edit the parameters as shown.
$OPENFRAME_HOME/config/ofsys.seq
Before changes
#BASE
ofrsasvr
ofrlhsvr
ofrdmsvr
ofrdsedt
ofrcmsvr
ofruisvr
ofrsmlog
vtammgr
TPFMAGENT

#BATCH
#BATCH#obmtsmgr
#BATCH#ofrpmsvr
#BATCH#obmjmsvr
#BATCH#obmjschd
#BATCH#obmjinit
#BATCH#obmjhist
#BATCH#obmjspbk
#TACF #TACF#tmsvr

After changes 	#BATCH
#BASE          obmtsmgr
ofrsasvr       ofrpmsvr
ofrlhsvr       obmjmsvr
ofrdmsvr       obmjschd
ofrdsedt       obmjinit
ofrcmsvr       obmjhist
ofruisvr       obmjspbk
ofrsmlog
vtammgr        #TACF
TPFMAGENT      tmsvr
Before changes
#BASE
ofrsasvr
ofrlhsvr
ofrdmsvr
ofrdsedt
ofrcmsvr
ofruisvr
ofrsmlog
vtammgr
TPFMAGENT

#BATCH
#BATCH#obmtsmgr
#BATCH#ofrpmsvr
#BATCH#obmjmsvr
#BATCH#obmjschd
#BATCH#obmjinit
#BATCH#obmjhist
#BATCH#obmjspbk
#TACF #TACF#tmsvr

After changes 	#BATCH
#BASE          obmtsmgr
ofrsasvr       ofrpmsvr
ofrlhsvr       obmjmsvr
ofrdmsvr       obmjschd
ofrdsedt       obmjinit
ofrcmsvr       obmjhist
ofruisvr       obmjspbk
ofrsmlog
vtammgr        #TACF
TPFMAGENT      tmsvr
Copy the license file. For example:cp /home/oframe7/oflicense/ofonline/licosc.dat $OPENFRAME_HOME/license
cd $OPENFRAME_HOME/license
ls -l-rwxr-xr-x. 1 oframe mqm 80 Sep 12 01:37 licosc.dat
-rwxr-xr-x. 1 oframe mqm 80 Sep  8 09:40 lictacf.dat
-rwxrwxr-x. 1 oframe mqm 80 Sep  3 11:54 lictjes.da
Copy the license file. For example:
cp /home/oframe7/oflicense/ofonline/licosc.dat $OPENFRAME_HOME/license
cd $OPENFRAME_HOME/license
ls -l
cp /home/oframe7/oflicense/ofonline/licosc.dat $OPENFRAME_HOME/license
cd $OPENFRAME_HOME/license
ls -l
-rwxr-xr-x. 1 oframe mqm 80 Sep 12 01:37 licosc.dat
-rwxr-xr-x. 1 oframe mqm 80 Sep  8 09:40 lictacf.dat
-rwxrwxr-x. 1 oframe mqm 80 Sep  3 11:54 lictjes.da
-rwxr-xr-x. 1 oframe mqm 80 Sep 12 01:37 licosc.dat
-rwxr-xr-x. 1 oframe mqm 80 Sep  8 09:40 lictacf.dat
-rwxrwxr-x. 1 oframe mqm 80 Sep  3 11:54 lictjes.da
To start up and shut down OSC, initialize the CICS region shared memory by typingosctdlinit OSCOIVP1at the command prompt.
To start up and shut down OSC, initialize the CICS region shared memory by typingosctdlinit OSCOIVP1at the command prompt.
osctdlinit OSCOIVP1
Runoscbootto boot up OSC. The output looks something like this:OSCBOOT : pre-processing       [ OK ]

TMBOOT for node(NODE1) is starting:
Welcome to Tmax demo system: it will expire 2016/11/4
Today: 2016/9/12
     TMBOOT: TMM is starting: Mon Sep 12 01:40:25 2016
     TMBOOT: CLL is starting: Mon Sep 12 01:40:25 2016
     TMBOOT: CLH is starting: Mon Sep 12 01:40:25 2016
     TMBOOT: TLM(tlm) is starting: Mon Sep 12 01:40:25 2016
Runoscbootto boot up OSC. The output looks something like this:
oscboot
OSCBOOT : pre-processing       [ OK ]

TMBOOT for node(NODE1) is starting:
Welcome to Tmax demo system: it will expire 2016/11/4
Today: 2016/9/12
     TMBOOT: TMM is starting: Mon Sep 12 01:40:25 2016
     TMBOOT: CLL is starting: Mon Sep 12 01:40:25 2016
     TMBOOT: CLH is starting: Mon Sep 12 01:40:25 2016
     TMBOOT: TLM(tlm) is starting: Mon Sep 12 01:40:25 2016
OSCBOOT : pre-processing       [ OK ]

TMBOOT for node(NODE1) is starting:
Welcome to Tmax demo system: it will expire 2016/11/4
Today: 2016/9/12
     TMBOOT: TMM is starting: Mon Sep 12 01:40:25 2016
     TMBOOT: CLL is starting: Mon Sep 12 01:40:25 2016
     TMBOOT: CLH is starting: Mon Sep 12 01:40:25 2016
     TMBOOT: TLM(tlm) is starting: Mon Sep 12 01:40:25 2016
To verify that the process status is ready, use thetmadmincommand in si. All the processes should display RDY in thestatuscolumn.
To verify that the process status is ready, use thetmadmincommand in si. All the processes should display RDY in thestatuscolumn.
tmadmin

Shut OSC down using theoscdowncommand.
Shut OSC down using theoscdowncommand.
oscdown
Install JEUS
JEUS (Java Enterprise User Solution) provides the presentation layer of the OpenFrame web application server.
Before installing JEUS, install the Apache Ant package, which provides the libraries and command-line tools needed to install JEUS.
To install Apache Ant
Download Ant binary using thewgetcommand. For example:wget http://apache.mirror.cdnetworks.com/ant/binaries/apacheant-1.9.7-bin.tar.gz
Download Ant binary using thewgetcommand. For example:
wget
wget http://apache.mirror.cdnetworks.com/ant/binaries/apacheant-1.9.7-bin.tar.gz
wget http://apache.mirror.cdnetworks.com/ant/binaries/apacheant-1.9.7-bin.tar.gz
Use thetarutility to extract the binary file and move it to an appropriate location. For example:tar -xvzf apache-ant-1.9.7-bin.tar.gz
Use thetarutility to extract the binary file and move it to an appropriate location. For example:
tar
tar -xvzf apache-ant-1.9.7-bin.tar.gz
tar -xvzf apache-ant-1.9.7-bin.tar.gz
For efficiency, create a symbolic link:ln -s apache-ant-1.9.7 ant
For efficiency, create a symbolic link:
ln -s apache-ant-1.9.7 ant
ln -s apache-ant-1.9.7 ant
Open the bash profile~/.bash_profileusing any text editor, and update it with the following variables:# Ant ENV
export ANT_HOME=$HOME/ant
export PATH=$HOME/ant/bin:$PATH
Open the bash profile~/.bash_profileusing any text editor, and update it with the following variables:
~/.bash_profile
# Ant ENV
export ANT_HOME=$HOME/ant
export PATH=$HOME/ant/bin:$PATH
# Ant ENV
export ANT_HOME=$HOME/ant
export PATH=$HOME/ant/bin:$PATH
Apply the modified environment variable. For example:source ~/.bash_profile
Apply the modified environment variable. For example:
source ~/.bash_profile
source ~/.bash_profile
To install JEUS
Extract the installer using thetarutility. For example:mkdir jeus7
tar -zxvf jeus704.tar.gz -C jeus7
Extract the installer using thetarutility. For example:
tar
mkdir jeus7
tar -zxvf jeus704.tar.gz -C jeus7
mkdir jeus7
tar -zxvf jeus704.tar.gz -C jeus7
Change to thejeus7/setupdirectory (or use the JEUS parameter for your own environment). For example:cd jeus7/setup/
Change to thejeus7/setupdirectory (or use the JEUS parameter for your own environment). For example:
jeus7/setup
cd jeus7/setup/
cd jeus7/setup/
Executeant clean-allbefore performing the build. The output looks something like this:Buildfile: /home/oframe7jeus7/setup/build.xml

clean-bin:
delete-domain:
[echo] Deleting a domain configuration: domain = jeus_domain
delete-nodesxml:
clean-config:
clean-all:
BUILD SUCCESSFUL
Total time: 0 seconds
Executeant clean-allbefore performing the build. The output looks something like this:
ant clean-all
Buildfile: /home/oframe7jeus7/setup/build.xml

clean-bin:
delete-domain:
[echo] Deleting a domain configuration: domain = jeus_domain
delete-nodesxml:
clean-config:
clean-all:
BUILD SUCCESSFUL
Total time: 0 seconds
Buildfile: /home/oframe7jeus7/setup/build.xml

clean-bin:
delete-domain:
[echo] Deleting a domain configuration: domain = jeus_domain
delete-nodesxml:
clean-config:
clean-all:
BUILD SUCCESSFUL
Total time: 0 seconds
Make a backup of thedomain-config-template.propertiesfile. For example:cp domain-config-template.properties domain-configtemplate.properties.bkp
Make a backup of thedomain-config-template.propertiesfile. For example:
domain-config-template.properties
cp domain-config-template.properties domain-configtemplate.properties.bkp
cp domain-config-template.properties domain-configtemplate.properties.bkp
Open the domain-config-template.properties file using any text editor, and changejeus.password=jeusadmin nodename=Tmaxsofttojeus.password=tmax1234 nodename=ofdemo
Open the domain-config-template.properties file using any text editor, and changejeus.password=jeusadmin nodename=Tmaxsofttojeus.password=tmax1234 nodename=ofdemo
jeus.password=jeusadmin nodename=Tmaxsoft
jeus.password=tmax1234 nodename=ofdemo
Execute theant installcommand to build JEUS.
Execute theant installcommand to build JEUS.
ant install
Update the~/.bash_profilefile with the JEUS variables as shown:# JEUS ENV
export JEUS_HOME=/opt/tmaxui/jeus7 PATH="/opt/tmaxui/jeus7/bin:/opt/tmaxui/jeus7/lib/system:/opt/tmaxui/jeus7/webserver/bin:$ {PATH}"
export PATH
Update the~/.bash_profilefile with the JEUS variables as shown:
~/.bash_profile
# JEUS ENV
export JEUS_HOME=/opt/tmaxui/jeus7 PATH="/opt/tmaxui/jeus7/bin:/opt/tmaxui/jeus7/lib/system:/opt/tmaxui/jeus7/webserver/bin:$ {PATH}"
export PATH
# JEUS ENV
export JEUS_HOME=/opt/tmaxui/jeus7 PATH="/opt/tmaxui/jeus7/bin:/opt/tmaxui/jeus7/lib/system:/opt/tmaxui/jeus7/webserver/bin:$ {PATH}"
export PATH
Execute the bash profile. For example:. .bash_profile
Execute the bash profile. For example:
. .bash_profile
. .bash_profile
Optional. Create an alias for easy shutdown and boot of JEUS components, using the following commands:# JEUS alias

alias dsboot='startDomainAdminServer -domain jeus_domain -u administrator -p jeusadmin'
alias msboot='startManagedServer -domain jeus_domain -server server1 -u administrator -p jeusadmin'
alias msdown=`jeusadmin -u administrator -p tmax1234 "stop-server server1"'
alias dsdown=`jeusadmin -domain jeus_domain -u administrator -p tmax1234 "local-shutdown"'
Optional. Create an alias for easy shutdown and boot of JEUS components, using the following commands:
# JEUS alias

alias dsboot='startDomainAdminServer -domain jeus_domain -u administrator -p jeusadmin'
alias msboot='startManagedServer -domain jeus_domain -server server1 -u administrator -p jeusadmin'
alias msdown=`jeusadmin -u administrator -p tmax1234 "stop-server server1"'
alias dsdown=`jeusadmin -domain jeus_domain -u administrator -p tmax1234 "local-shutdown"'
# JEUS alias

alias dsboot='startDomainAdminServer -domain jeus_domain -u administrator -p jeusadmin'
alias msboot='startManagedServer -domain jeus_domain -server server1 -u administrator -p jeusadmin'
alias msdown=`jeusadmin -u administrator -p tmax1234 "stop-server server1"'
alias dsdown=`jeusadmin -domain jeus_domain -u administrator -p tmax1234 "local-shutdown"'
To verify the installation, start the domain admin server as shown:startDomainAdminServer -domain jeus_domain -u administrator -p jeusadmin
To verify the installation, start the domain admin server as shown:
startDomainAdminServer -domain jeus_domain -u administrator -p jeusadmin
startDomainAdminServer -domain jeus_domain -u administrator -p jeusadmin
Verify by web logon using the syntax:http://<IP>:<port>/webadmin/loginFor example,http://192.168.92.133:9736/webadmin/login. The logon screen appears:NoteIf you experience any issues with port security, open port 9736 or disable the firewall (systemctl stop firewall).
Verify by web logon using the syntax:
http://<IP>:<port>/webadmin/login
http://<IP>:<port>/webadmin/login
For example,http://192.168.92.133:9736/webadmin/login. The logon screen appears:
http://192.168.92.133:9736/webadmin/login

Note
If you experience any issues with port security, open port 9736 or disable the firewall (systemctl stop firewall).
systemctl stop firewall
To change the hostname for server1, clickLock & Edit, then clickserver1. In the Server window, change the hostname as follows:ChangeNodenametoofdemo.ClickOKon the right side of the window.ClickApply changeson the lower left side of the window and for description, enterHostname change.
To change the hostname for server1, clickLock & Edit, then clickserver1. In the Server window, change the hostname as follows:
ChangeNodenametoofdemo.
ClickOKon the right side of the window.
ClickApply changeson the lower left side of the window and for description, enterHostname change.

Verify that the configuration is successful in the confirmation screen.
Verify that the configuration is successful in the confirmation screen.

Start the managed server process "server1" using the following command:startManagedServer -domain jeus_domain -server server1 -u administrator -p jeusadmin
Start the managed server process "server1" using the following command:
startManagedServer -domain jeus_domain -server server1 -u administrator -p jeusadmin
startManagedServer -domain jeus_domain -server server1 -u administrator -p jeusadmin
Install OFGW
OFGW Is the OpenFrame gateway that supports communication between the 3270 terminal emulator and the OSI base and manages the sessions between the terminal emulator and OSI.
To install OFGW
Make sure that JEUS was installed successfully, then verify that theOFGW7_0_1_Generic.bininstaller file is present.
Make sure that JEUS was installed successfully, then verify that theOFGW7_0_1_Generic.bininstaller file is present.
OFGW7_0_1_Generic.bin
Execute the installer. For example:./OFGW7_0_1_Generic.bin
Execute the installer. For example:
./OFGW7_0_1_Generic.bin
./OFGW7_0_1_Generic.bin
Use the following locations for the corresponding prompts:JEUS Home directoryJEUS Domain NameJEUS Server NameTibero DriverTmax Node ID ofdemo
Use the following locations for the corresponding prompts:
JEUS Home directory
JEUS Domain Name
JEUS Server Name
Tibero Driver
Tmax Node ID ofdemo
Accept the rest of the defaults, then press Enter to exit the installer.
Accept the rest of the defaults, then press Enter to exit the installer.
Verify that the URL for OFGW is working as expected:Type URL
http://192.168.92.133:8088/webterminal/ and press enter
 < IP >               :8088/webterminal/The following screen appears:
Verify that the URL for OFGW is working as expected:
Type URL
http://192.168.92.133:8088/webterminal/ and press enter
 < IP >               :8088/webterminal/
Type URL
http://192.168.92.133:8088/webterminal/ and press enter
 < IP >               :8088/webterminal/
The following screen appears:

Install OFManager
OFManager provides operation and management functions for OpenFrame in the web environment.
To install OFManager
Verify that theOFManager7_Generic.bininstaller file is present.
Verify that theOFManager7_Generic.bininstaller file is present.
OFManager7_Generic.bin
Execute the installer. For example:./OFManager7_Generic.bin
Execute the installer. For example:
./OFManager7_Generic.bin
./OFManager7_Generic.bin
Press Enter to continue, then accept the license agreement.
Press Enter to continue, then accept the license agreement.
Choose the install folder.
Choose the install folder.
Accept the defaults.
Accept the defaults.
Choose Tibero as the database.
Choose Tibero as the database.
Press Enter to exit the installer.
Press Enter to exit the installer.
Verify that the URL for OFManager is working as expected:Type URL http://192.168.92.133:8088/ofmanager and press enter <  IP >  : < PORT >  ofmanager Enter ID:   ROOT
Password: SYS1
Verify that the URL for OFManager is working as expected:
Type URL http://192.168.92.133:8088/ofmanager and press enter <  IP >  : < PORT >  ofmanager Enter ID:   ROOT
Password: SYS1
Type URL http://192.168.92.133:8088/ofmanager and press enter <  IP >  : < PORT >  ofmanager Enter ID:   ROOT
Password: SYS1
The start screen appears:

That completes the installation of the OpenFrame components.
Next steps
If you are considering a mainframe migration, our expanding partner ecosystem is available to help you. For detailed guidance about choosing a partner solution, refer to thePlatform Modernization Alliance.
Get started with Azure
Host Integration Server (HIS) documentation
Azure Virtual Data Center Lift-and-Shift Guide
Feedback
Was this page helpful?
Additional resources