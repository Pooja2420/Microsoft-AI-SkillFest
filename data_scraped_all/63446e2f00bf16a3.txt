Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
AzureFunctionOnKubernetes@1 - Azure Function on Kubernetes v1 task
Article
2025-03-28
2 contributors
In this article
Deploy Azure function to Kubernetes cluster.
Syntax
# Azure Function on Kubernetes v1
# Deploy Azure function to Kubernetes cluster.
- task: AzureFunctionOnKubernetes@1
  inputs:
  # Service Connections
    connectionType: 'Kubernetes Service Connection' # 'Azure Resource Manager' | 'Kubernetes Service Connection'. Required. Service connection type. Default: Kubernetes Service Connection.
    dockerRegistryServiceConnection: # string. Required. Docker registry service connection. 
    #kubernetesServiceConnection: # string. Alias: kubernetesServiceEndpoint. Required when connectionType = Kubernetes Service Connection. Kubernetes service connection. 
    #azureSubscriptionConnection: # string. Alias: azureSubscriptionEndpoint. Required when connectionType = Azure Resource Manager. Azure subscription. 
    #azureResourceGroup: # string. Required when connectionType = Azure Resource Manager. Resource group. 
    #kubernetesCluster: # string. Required when connectionType = Azure Resource Manager. Kubernetes cluster. 
  # Commands
    #namespace: # string. Kubernetes namespace. 
    #secretName: # string. Secret Name. 
    #dockerHubNamespace: # string. Docker Hub namespace. 
    appName: # string. Required. Application Name. 
    #functionRootDirectory: # string. Function root directory. 
    #waitForStability: true # boolean. Wait for stability. Default: true.
    #arguments: # string. Arguments.
# Azure Function on Kubernetes v1
# Deploy Azure function to Kubernetes cluster.
- task: AzureFunctionOnKubernetes@1
  inputs:
  # Service Connections
    connectionType: 'Kubernetes Service Connection' # 'Azure Resource Manager' | 'Kubernetes Service Connection'. Required. Service connection type. Default: Kubernetes Service Connection.
    dockerRegistryServiceConnection: # string. Required. Docker registry service connection. 
    #kubernetesServiceConnection: # string. Alias: kubernetesServiceEndpoint. Required when connectionType = Kubernetes Service Connection. Kubernetes service connection. 
    #azureSubscriptionConnection: # string. Alias: azureSubscriptionEndpoint. Required when connectionType = Azure Resource Manager. Azure subscription. 
    #azureResourceGroup: # string. Required when connectionType = Azure Resource Manager. Resource group. 
    #kubernetesCluster: # string. Required when connectionType = Azure Resource Manager. Kubernetes cluster. 
  # Commands
    #namespace: # string. Kubernetes namespace. 
    #secretName: # string. Secret Name. 
    #dockerHubNamespace: # string. Docker Hub namespace. 
    appName: # string. Required. Application Name. 
    #functionRootDirectory: # string. Function root directory. 
    #waitForStability: true # boolean. Wait for stability. Default: true.
    #arguments: # string. Arguments.
Inputs
connectionType-Service connection typestring. Required. Allowed values:Azure Resource Manager,Kubernetes Service Connection. Default value:Kubernetes Service Connection.
connectionType
string
Azure Resource Manager
Kubernetes Service Connection
Kubernetes Service Connection
Select a Kubernetes service connection type.
Kubernetes Service Connection- Allows you to provide a KubeConfig file, specify a Service Account, or import an AKS instance with theAzure Subscriptionoption. Importing an AKS instance with theAzure Subscriptionoption requires Kubernetes cluster access at Service Connection configuration time.
Kubernetes Service Connection
Azure Resource Manager- Lets you select an AKS instance. Does not access Kubernetes cluster at Service Connection configuration time.
Azure Resource Manager
For more information, seeRemarks.
dockerRegistryServiceConnection-Docker registry service connectionstring. Required.
dockerRegistryServiceConnection
string
Select a Docker registry service connection.
kubernetesServiceConnection-Kubernetes service connectionInput alias:kubernetesServiceEndpoint.string. Required whenconnectionType = Kubernetes Service Connection.
kubernetesServiceConnection
kubernetesServiceEndpoint
string
connectionType = Kubernetes Service Connection
Select a Kubernetes service connection.
azureSubscriptionConnection-Azure subscriptionInput alias:azureSubscriptionEndpoint.string. Required whenconnectionType = Azure Resource Manager.
azureSubscriptionConnection
azureSubscriptionEndpoint
string
connectionType = Azure Resource Manager
Select the Azure Resource Manager subscription, which contains Azure Container Registry.Note: To configure new service connection, select the Azure subscription from the list and click 'Authorize'. If your subscription is not listed or if you want to use an existing Service Principal, you can setup an Azure service connection using 'Add' or 'Manage' button.
azureResourceGroup-Resource groupstring. Required whenconnectionType = Azure Resource Manager.
azureResourceGroup
string
connectionType = Azure Resource Manager
Select an Azure resource group.
kubernetesCluster-Kubernetes clusterstring. Required whenconnectionType = Azure Resource Manager.
kubernetesCluster
string
connectionType = Azure Resource Manager
Select an Azure managed cluster.
namespace-Kubernetes namespacestring.
namespace
string
Kubernetes namespace.
secretName-Secret Namestring.
secretName
string
Kubernetes secret containing function config data (for ex. AzureWebJobsStorage:Azure storage connection string).
Azure storage connection string
dockerHubNamespace-Docker Hub namespacestring.
dockerHubNamespace
string
Docker Hub namespace. Required for private Docker Hub repository.
appName-Application Namestring. Required.
appName
string
Application Name. The Kubernetes objects created use this name. This should follow Kubernetes naming conventions for resource names.
functionRootDirectory-Function root directorystring.
functionRootDirectory
string
Function root directory. Should contain host.json. Docker build and push is performed from this directory.
waitForStability-Wait for stabilityboolean. Default value:true.
waitForStability
boolean
true
Wait for the Kubernetes objects to reach the desired state.
arguments-Argumentsstring.
arguments
string
Pass arguments to command. Ex:--no-docker --service-type NodePort.
Task control options
All tasks have control options in addition to their task inputs. For more information, seeControl options and common task properties.
Output variables
None.
Remarks
You can create a Kubernetes service connection with any of the following options.
KubeConfig
Service Account
Azure Subscription

When selecting theAzure Subscriptionoption, Kubernetes needs to be accessible to Azure DevOps at service connection configuration time. There may be various reasons a service connection cannot be created, for example youcreated a private clusteror the cluster haslocal accounts disabled. In these cases, Azure DevOps can't connect to your cluster at service connection configuration time and you'll see a stuckLoading namespacesscreen.

Starting with Kubernetes 1.24, long-lived tokens areno longer created by default. Kubernetes recommends not using long-lived tokens. As a result, tasks using a Kubernetes service connection created with theAzure Subscriptionoption don't have access to the permanent token required to authenticate and canât access your Kubernetes cluster. This also results in the frozenLoading namespacesdialog.
For AKS customers, the Azure Resource Manager service connection type provides the best method to connect to a private cluster, or a cluster that has local accounts disabled. This method is not dependent on cluster connectivity at the time you create a service connection. Access to AKS is deferred to pipeline runtime, which has the following advantages:
Access to a (private) AKS cluster can be performed from a self-hosted or scale set agent with line of sight to the cluster.
A token is created for every task that uses an Azure Resource Manager service connection. This ensures you are connecting to Kubernetes with a short-lived token, which is theKubernetes recommendation.
AKS can be accessed even when local accounts are disabled.
You are using the Kubernetes service connection with Azure Subscription option. We are updating this method to create long-lived tokens. This is expected to be available mid-May. However, it is recommended to start using the Azure service connection type and not o use long-lived tokens as perKubernetes guidance.
We are updating this method to create long-lived tokens. This is expected to be available mid-May. However, please be aware that this approach is againstKubernetes guidance.
You tasks will continue to work as before.
Our Kubernetes tasks work with any Kubernetes cluster, regardless where they are running. The Kubernetes service connection will continue to exist.
There is no need to change anything. If you are using the Kubernetes service connection and selected Azure Subscription during creation, you should be aware of theKubernetes guidance on using long-lived tokens.
In case you canât access your AKS during environment creation time, you can use an empty environment and set theconnectionTypeinput to an Azure Resource Manager service connection.
connectionType
Accessing Kubernetes when AAD RBAC is enabled is unrelated to token creation. To prevent an interactive prompt, we will supportkubeloginin a future update.
Requirements
Feedback
Was this page helpful?
Additional resources