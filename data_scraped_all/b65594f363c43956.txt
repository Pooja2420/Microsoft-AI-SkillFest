Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
File matching patterns reference
Article
2024-02-01
10 contributors
In this article
Azure DevOps Services | Azure DevOps Server 2022 - Azure DevOps Server 2019
Pattern syntax
A pattern is a string or list of newline-delimited strings.
File and directory names are compared to patterns to include (or sometimes exclude) them in a task.
You can build up complex behavior by stacking multiple patterns.
Seefnmatchfor a full syntax guide.
Match characters
Most characters are used as exact matches.
What counts as an "exact" match is platform-dependent:
the Windows filesystem is case-insensitive, so the pattern "ABC" would match a file called "abc".
On case-sensitive filesystems, that pattern and name would not match.
The following characters have special behavior.
*matches zero or more characters within a file or directory name. Seeexamples.
*
?matches any single character within a file or directory name. Seeexamples.
?
[]matches a set or range of characters within a file or directory name. Seeexamples.
[]
**recursive wildcard. For example,/hello/**/*matches all descendants of/hello.
**
/hello/**/*
/hello
Extended globbing
?(hello|world)- matcheshelloorworldzero or one times
?(hello|world)
hello
world
*(hello|world)- zero or more occurrences
*(hello|world)
+(hello|world)- one or more occurrences
+(hello|world)
@(hello|world)- exactly once
@(hello|world)
!(hello|world)- nothelloorworld
!(hello|world)
hello
world
Note, extended globs cannot span directory separators. For example,+(hello/world|other)is not valid.
+(hello/world|other)
Comments
Patterns that begin with#are treated as comments.
#
Exclude patterns
Leading!changes the meaning of an include pattern to exclude.
You can include a pattern, exclude a subset of it, and then re-include a subset of that:
this is known as an "interleaved" pattern.
!
Multiple!flips the meaning. Seeexamples.
!
You must define an include pattern before an exclude one. Seeexamples.
Escaping
Wrapping special characters in[]can be used to escape literal glob characters in a file name. For example the literal file namehello[a-z]can be escaped ashello[[]a-z].
[]
hello[a-z]
hello[[]a-z]
Slash
/is used as the path separator on Linux and macOS.
Most of the time, Windows agents accept/.
Occasions where the Windows separator (\) must be used are documented.
/
/
\
Examples
Basic pattern examples
Example 1:Given the pattern*Website.slnand files:
*Website.sln
ConsoleHost.sln
ContosoWebsite.sln
FabrikamWebsite.sln
Website.sln
ConsoleHost.sln
ContosoWebsite.sln
FabrikamWebsite.sln
Website.sln
The pattern would match:
ContosoWebsite.sln
FabrikamWebsite.sln
Website.sln
ContosoWebsite.sln
FabrikamWebsite.sln
Website.sln
Example 2:Given the pattern*Website/*.projand paths:
*Website/*.proj
ContosoWebsite/index.html
ContosoWebsite/ContosoWebsite.proj
FabrikamWebsite/index.html
FabrikamWebsite/FabrikamWebsite.proj
ContosoWebsite/index.html
ContosoWebsite/ContosoWebsite.proj
FabrikamWebsite/index.html
FabrikamWebsite/FabrikamWebsite.proj
The pattern would match:
ContosoWebsite/ContosoWebsite.proj
FabrikamWebsite/FabrikamWebsite.proj
ContosoWebsite/ContosoWebsite.proj
FabrikamWebsite/FabrikamWebsite.proj
Example 1:Given the patternlog?.logand files:
log?.log
log1.log
log2.log
log3.log
script.sh
log1.log
log2.log
log3.log
script.sh
The pattern would match:
log1.log
log2.log
log3.log
log1.log
log2.log
log3.log
Example 2:Given the patternimage.???and files:
image.???
image.tiff
image.png
image.ico
image.tiff
image.png
image.ico
The pattern would match:
image.png
image.ico
image.png
image.ico
Example 1:Given the patternSample[AC].datand files:
Sample[AC].dat
SampleA.dat
SampleB.dat
SampleC.dat
SampleD.dat
SampleA.dat
SampleB.dat
SampleC.dat
SampleD.dat
The pattern would match:
SampleA.dat
SampleC.dat
SampleA.dat
SampleC.dat
Example 2:Given the patternSample[A-C].datand files:
Sample[A-C].dat
SampleA.dat
SampleB.dat
SampleC.dat
SampleD.dat
SampleA.dat
SampleB.dat
SampleC.dat
SampleD.dat
The pattern would match:
SampleA.dat
SampleB.dat
SampleC.dat
SampleA.dat
SampleB.dat
SampleC.dat
Example 3:Given the patternSample[A-CEG].datand files:
Sample[A-CEG].dat
SampleA.dat
SampleB.dat
SampleC.dat
SampleD.dat
SampleE.dat
SampleF.dat
SampleG.dat
SampleH.dat
SampleA.dat
SampleB.dat
SampleC.dat
SampleD.dat
SampleE.dat
SampleF.dat
SampleG.dat
SampleH.dat
The pattern would match:
SampleA.dat
SampleB.dat
SampleC.dat
SampleE.dat
SampleG.dat
SampleA.dat
SampleB.dat
SampleC.dat
SampleE.dat
SampleG.dat
Given the pattern**/*.extand files:
**/*.ext
sample1/A.ext
sample1/B.ext
sample2/C.ext
sample2/D.not
sample1/A.ext
sample1/B.ext
sample2/C.ext
sample2/D.not
The pattern would match:
sample1/A.ext
sample1/B.ext
sample2/C.ext
sample1/A.ext
sample1/B.ext
sample2/C.ext
Exclude pattern examples
Given the pattern:
*
!*.xml
*
!*.xml
and files:
ConsoleHost.exe
ConsoleHost.pdb
ConsoleHost.xml
Fabrikam.dll
Fabrikam.pdb
Fabrikam.xml
ConsoleHost.exe
ConsoleHost.pdb
ConsoleHost.xml
Fabrikam.dll
Fabrikam.pdb
Fabrikam.xml
The pattern would match:
ConsoleHost.exe
ConsoleHost.pdb
Fabrikam.dll
Fabrikam.pdb
ConsoleHost.exe
ConsoleHost.pdb
Fabrikam.dll
Fabrikam.pdb
Given the pattern:
*
!*.xml
!!Fabrikam.xml
*
!*.xml
!!Fabrikam.xml
and files:
ConsoleHost.exe
ConsoleHost.pdb
ConsoleHost.xml
Fabrikam.dll
Fabrikam.pdb
Fabrikam.xml
ConsoleHost.exe
ConsoleHost.pdb
ConsoleHost.xml
Fabrikam.dll
Fabrikam.pdb
Fabrikam.xml
The pattern would match:
ConsoleHost.exe
ConsoleHost.pdb
Fabrikam.dll
Fabrikam.pdb
Fabrikam.xml
ConsoleHost.exe
ConsoleHost.pdb
Fabrikam.dll
Fabrikam.pdb
Fabrikam.xml
Given the pattern:
**
!sample/**
**
!sample/**
and files:
ConsoleHost.exe
ConsoleHost.pdb
ConsoleHost.xml
sample/Fabrikam.dll
sample/Fabrikam.pdb
sample/Fabrikam.xml
ConsoleHost.exe
ConsoleHost.pdb
ConsoleHost.xml
sample/Fabrikam.dll
sample/Fabrikam.pdb
sample/Fabrikam.xml
The pattern would match:
ConsoleHost.exe
ConsoleHost.pdb
ConsoleHost.xml
ConsoleHost.exe
ConsoleHost.pdb
ConsoleHost.xml
Feedback
Was this page helpful?
Additional resources