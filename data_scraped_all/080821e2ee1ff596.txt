Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
AzurePowerShell@5 - Azure PowerShell v5 task
Article
2025-03-28
5 contributors
In this article
Use this task to run a PowerShell script within an Azure environment. The Azure context is authenticated with the provided Azure Resource Manager service connection.
Note
By default, Azure PowerShell v5 uses PowerShell Core for Linux agents and Windows PowerShell for Windows agents. To use the latest version of PowerShell on Windows agents, set thepwshparameter totrue. PowerShell Core will then be used instead.
pwsh
true
Syntax
# Azure PowerShell v5
# Run a PowerShell script within an Azure environment.
- task: AzurePowerShell@5
  inputs:
    azureSubscription: # string. Alias: ConnectedServiceNameARM. Required. Azure Subscription. 
    #ScriptType: 'FilePath' # 'FilePath' | 'InlineScript'. Script Type. Default: FilePath.
    #ScriptPath: # string. Optional. Use when ScriptType = FilePath. Script Path. 
    #Inline: # string. Optional. Use when ScriptType = InlineScript. Inline Script. 
    #ScriptArguments: # string. Optional. Use when ScriptType = FilePath. Script Arguments. 
    #errorActionPreference: 'stop' # 'stop' | 'continue' | 'silentlyContinue'. ErrorActionPreference. Default: stop.
    #FailOnStandardError: false # boolean. Fail on Standard Error. Default: false.
  # Azure PowerShell version options
    #azurePowerShellVersion: 'OtherVersion' # 'LatestVersion' | 'OtherVersion'. Alias: TargetAzurePs. Azure PowerShell Version. Default: OtherVersion.
    preferredAzurePowerShellVersion: # string. Alias: CustomTargetAzurePs. Required when TargetAzurePs = OtherVersion. Preferred Azure PowerShell Version. 
  # Advanced
    #pwsh: false # boolean. Use PowerShell Core. Default: false.
    #validateScriptSignature: false # boolean. Optional. Use when ScriptType = FilePath. Validate script signature. Default: false.
    #workingDirectory: # string. Working Directory.
# Azure PowerShell v5
# Run a PowerShell script within an Azure environment.
- task: AzurePowerShell@5
  inputs:
    azureSubscription: # string. Alias: ConnectedServiceNameARM. Required. Azure Subscription. 
    #ScriptType: 'FilePath' # 'FilePath' | 'InlineScript'. Script Type. Default: FilePath.
    #ScriptPath: # string. Optional. Use when ScriptType = FilePath. Script Path. 
    #Inline: # string. Optional. Use when ScriptType = InlineScript. Inline Script. 
    #ScriptArguments: # string. Optional. Use when ScriptType = FilePath. Script Arguments. 
    #errorActionPreference: 'stop' # 'stop' | 'continue' | 'silentlyContinue'. ErrorActionPreference. Default: stop.
    #FailOnStandardError: false # boolean. Fail on Standard Error. Default: false.
  # Azure PowerShell version options
    #azurePowerShellVersion: 'OtherVersion' # 'LatestVersion' | 'OtherVersion'. Alias: TargetAzurePs. Azure PowerShell Version. Default: OtherVersion.
    preferredAzurePowerShellVersion: # string. Alias: CustomTargetAzurePs. Required when TargetAzurePs = OtherVersion. Preferred Azure PowerShell Version. 
  # Advanced
    #pwsh: false # boolean. Use PowerShell Core. Default: false.
    #validateScriptSignature: false # boolean. Optional. Use when ScriptType = FilePath. Validate script signature. Default: false.
    #workingDirectory: # string. Working Directory.
# Azure PowerShell v5
# Run a PowerShell script within an Azure environment.
- task: AzurePowerShell@5
  inputs:
    azureSubscription: # string. Alias: ConnectedServiceNameARM. Required. Azure Subscription. 
    #ScriptType: 'FilePath' # 'FilePath' | 'InlineScript'. Script Type. Default: FilePath.
    #ScriptPath: # string. Optional. Use when ScriptType = FilePath. Script Path. 
    #Inline: # string. Optional. Use when ScriptType = InlineScript. Inline Script. 
    #ScriptArguments: # string. Optional. Use when ScriptType = FilePath. Script Arguments. 
    #errorActionPreference: 'stop' # 'stop' | 'continue' | 'silentlyContinue'. ErrorActionPreference. Default: stop.
    #FailOnStandardError: false # boolean. Fail on Standard Error. Default: false.
  # Azure PowerShell version options
    #azurePowerShellVersion: 'OtherVersion' # 'latestVersion' | 'OtherVersion'. Alias: TargetAzurePs. Azure PowerShell Version. Default: OtherVersion.
    preferredAzurePowerShellVersion: # string. Alias: CustomTargetAzurePs. Required when TargetAzurePs = OtherVersion. Preferred Azure PowerShell Version. 
  # Advanced
    #pwsh: false # boolean. Use PowerShell Core. Default: false.
    #workingDirectory: # string. Working Directory.
# Azure PowerShell v5
# Run a PowerShell script within an Azure environment.
- task: AzurePowerShell@5
  inputs:
    azureSubscription: # string. Alias: ConnectedServiceNameARM. Required. Azure Subscription. 
    #ScriptType: 'FilePath' # 'FilePath' | 'InlineScript'. Script Type. Default: FilePath.
    #ScriptPath: # string. Optional. Use when ScriptType = FilePath. Script Path. 
    #Inline: # string. Optional. Use when ScriptType = InlineScript. Inline Script. 
    #ScriptArguments: # string. Optional. Use when ScriptType = FilePath. Script Arguments. 
    #errorActionPreference: 'stop' # 'stop' | 'continue' | 'silentlyContinue'. ErrorActionPreference. Default: stop.
    #FailOnStandardError: false # boolean. Fail on Standard Error. Default: false.
  # Azure PowerShell version options
    #azurePowerShellVersion: 'OtherVersion' # 'latestVersion' | 'OtherVersion'. Alias: TargetAzurePs. Azure PowerShell Version. Default: OtherVersion.
    preferredAzurePowerShellVersion: # string. Alias: CustomTargetAzurePs. Required when TargetAzurePs = OtherVersion. Preferred Azure PowerShell Version. 
  # Advanced
    #pwsh: false # boolean. Use PowerShell Core. Default: false.
    #workingDirectory: # string. Working Directory.
Inputs
azureSubscription-Azure SubscriptionInput alias:ConnectedServiceNameARM.string. Required.
azureSubscription
ConnectedServiceNameARM
string
The Azure Resource Manager subscription to configure before running PowerShell.
You can use template expressions to specify the service connection input. In the following example, theazureSubscriptionis creating using a format string and an expression based on theenvironmentNamevariable.
azureSubscription
environmentName
pool:
  vmImage: ubuntu-latest

variables:
  # Format string for the service connection
  azureSubscriptionFormat: 'connectionString-{0}-001'

stages:
- stage: Prepare
  variables:
    environmentName: 'test'
    # Stage level variable with the service connection name
    # Evaluates to conenctionString-test-001
    azureSubscription: ${{ format(variables.azureSubscriptionFormat, variables.environmentName) }}

  jobs:
  - job: RunStuff
    steps:
    - task: AzureCLI@2
      inputs:
        # Set this input to the computed value
        azureSubscription: ${{ variables.azureSubscription }}
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: 'echo Hello ${{ variables.azureSubscription }}'

    - task: AzurePowerShell@5
      inputs:
        # Set this input to the computed value
        azureSubscription: ${{ variables.azureSubscription }}
        azurePowerShellVersion: 'LatestVersion'
        scriptType: 'InlineScript'
        inline: Write-Host "Hello ${{ variables.azureSubscription }}"
pool:
  vmImage: ubuntu-latest

variables:
  # Format string for the service connection
  azureSubscriptionFormat: 'connectionString-{0}-001'

stages:
- stage: Prepare
  variables:
    environmentName: 'test'
    # Stage level variable with the service connection name
    # Evaluates to conenctionString-test-001
    azureSubscription: ${{ format(variables.azureSubscriptionFormat, variables.environmentName) }}

  jobs:
  - job: RunStuff
    steps:
    - task: AzureCLI@2
      inputs:
        # Set this input to the computed value
        azureSubscription: ${{ variables.azureSubscription }}
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: 'echo Hello ${{ variables.azureSubscription }}'

    - task: AzurePowerShell@5
      inputs:
        # Set this input to the computed value
        azureSubscription: ${{ variables.azureSubscription }}
        azurePowerShellVersion: 'LatestVersion'
        scriptType: 'InlineScript'
        inline: Write-Host "Hello ${{ variables.azureSubscription }}"
ScriptType-Script Typestring. Allowed values:FilePath(Script File Path),InlineScript(Inline Script). Default value:FilePath.
ScriptType
string
FilePath
InlineScript
FilePath
The type of the script: file path or inline.
ScriptPath-Script Pathstring. Optional. Use whenScriptType = FilePath.
ScriptPath
string
ScriptType = FilePath
The path of the script. This should be a fully qualified path or one relative to the default working directory.
Inline-Inline Scriptstring. Optional. Use whenScriptType = InlineScript. Default value:# You can write your azure powershell scripts inline here. \n# You can also pass predefined and custom variables to this script using arguments.
Inline
string
ScriptType = InlineScript
# You can write your azure powershell scripts inline here. \n# You can also pass predefined and custom variables to this script using arguments
Specifes the script to execute. The maximum supported inline script length is 5000 characters. Use a script from a file if you want to use a longer script.
ScriptArguments-Script Argumentsstring. Optional. Use whenScriptType = FilePath.
ScriptArguments
string
ScriptType = FilePath
The additional parameters to pass to PowerShell. These can be either ordinal or named parameters. Not applicable for an inline script option.
errorActionPreference-ErrorActionPreferencestring. Allowed values:stop,continue,silentlyContinue. Default value:stop.
errorActionPreference
string
stop
continue
silentlyContinue
stop
Selects the value of theErrorActionPreferencevariable for executing the script.
ErrorActionPreference
FailOnStandardError-Fail on Standard Errorboolean. Default value:false.
FailOnStandardError
boolean
false
When this is true, this task will fail if any errors are written to the error pipeline or if any data is written to the standard error stream.
azurePowerShellVersion-Azure PowerShell VersionInput alias:TargetAzurePs.string. Allowed values:LatestVersion(Latest installed version),OtherVersion(Specify other version). Default value:OtherVersion.
azurePowerShellVersion
TargetAzurePs
string
LatestVersion
OtherVersion
OtherVersion
In case of hosted agents, the supported Azure PowerShell Versions are1.0.0,1.6.0,2.3.2,2.6.0, and3.1.0(Hosted VS2017 Queue).
To pick the latest version available on the agent, selectLatestVersion(Latest installed version).
1.0.0
1.6.0
2.3.2
2.6.0
3.1.0
LatestVersion
For private agents you can specify a preferred version of Azure PowerShell usingOtherVersion(Specify other version).
OtherVersion
preferredAzurePowerShellVersion-Preferred Azure PowerShell VersionInput alias:CustomTargetAzurePs.string. Required whenTargetAzurePs = OtherVersion.
preferredAzurePowerShellVersion
CustomTargetAzurePs
string
TargetAzurePs = OtherVersion
The preferred Azure PowerShell Version needs to be a proper semantic version eg.1.2.3. Regex like2.\*,2.3.\*is not supported. The Hosted VS2017 Pool currently supports Az module versions1.0.0,1.6.0,2.3.2,2.6.0, and3.1.0.
1.2.3
2.\*,2.3.\*
1.0.0
1.6.0
2.3.2
2.6.0
3.1.0
pwsh-Use PowerShell Coreboolean. Default value:false.
pwsh
boolean
false
If this is true, then tasks running on Windows agents will usepwsh.exefrom your path instead ofpowershell.exe.
pwsh.exe
powershell.exe
validateScriptSignature-Validate script signatureboolean. Optional. Use whenScriptType = FilePath. Default value:false.
validateScriptSignature
boolean
ScriptType = FilePath
false
If this is true, then the task will first check to make sure specified script is signed and valid before executing it.
workingDirectory-Working Directorystring.
workingDirectory
string
The working directory where the script is run.
Task control options
All tasks have control options in addition to their task inputs. For more information, seeControl options and common task properties.
Output variables
None.
Remarks
Troubleshooting
This typically occurs when the service connection used in the pipeline has insufficient permissions to run the script. Locally, the script runs with your credentials and would succeed as you may have the required access.
To resolve this issue, ensure the service principle/ authentication credentials have the required permissions. For more information, seeUse Role-Based Access Control to manage access to your Azure subscription resources.
Azure PowerShell task uses Azure/AzureRM/Az PowerShell Module to interact with Azure Subscription. This issue occurs when the PowerShell module is not available on the Hosted Agent. Hence, for a particular task version,Preferred Azure PowerShell versionmust be specified in theAzure PowerShell version optionsfrom the list of available versions. The installed software can be found in theSoftwaretable inMicrosoft-hosted agents.
To troubleshoot issues related to service connections, seeService Connection troubleshooting.
Examples
The following example shows how to invoke a script from a file and pass script arguments to it.
- task: AzurePowerShell@5
  inputs:
    azureSubscription: my-arm-service-connection
    scriptType: filePath
    scriptPath: $(Build.SourcesDirectory)\myscript.ps1
    scriptArguments:
      -Arg1 val1 `
      -Arg2 val2 `
      -Arg3 val3
    azurePowerShellVersion: LatestVersion
    pwsh: true
- task: AzurePowerShell@5
  inputs:
    azureSubscription: my-arm-service-connection
    scriptType: filePath
    scriptPath: $(Build.SourcesDirectory)\myscript.ps1
    scriptArguments:
      -Arg1 val1 `
      -Arg2 val2 `
      -Arg3 val3
    azurePowerShellVersion: LatestVersion
    pwsh: true
The following arguments shows how to invoke an inline script.
- task: AzurePowerShell@5
  inputs:
    azureSubscription: 'Azure subscription connection placeholder'
    azurePowerShellVersion: LatestVersion
    ScriptType: 'InlineScript'
    Inline: |
      # You can write your azure powershell scripts inline here. 
      # You can also pass predefined and custom variables to this script using arguments
      Write-Host 'Hello'
      Write-Host 'World!'
- task: AzurePowerShell@5
  inputs:
    azureSubscription: 'Azure subscription connection placeholder'
    azurePowerShellVersion: LatestVersion
    ScriptType: 'InlineScript'
    Inline: |
      # You can write your azure powershell scripts inline here. 
      # You can also pass predefined and custom variables to this script using arguments
      Write-Host 'Hello'
      Write-Host 'World!'
Requirements
Feedback
Was this page helpful?
Additional resources