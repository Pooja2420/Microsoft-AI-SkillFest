Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Tutorial: Route network traffic with a route table
Article
2024-11-12
2 contributors
In this article
Azure routes traffic between all subnets within a virtual network, by default. You can create your own routes to override Azure's default routing. Custom routes are helpful when, for example, you want to route traffic between subnets through a network virtual appliance (NVA).

In this tutorial, you learn how to:
Create a virtual network and subnets
Create an NVA that routes traffic
Deploy virtual machines (VMs) into different subnets
Create a route table
Create a route
Associate a route table to a subnet
Route traffic from one subnet to another through an NVA
Prerequisites
Portal
PowerShell
CLI
An Azure account with an active subscription. You cancreate an account for free.
An Azure account with an active subscription. You cancreate an account for free.
Azure Cloud Shell
Azure hosts Azure Cloud Shell, an interactive shell environment that you can use through your browser. You can use either Bash or PowerShell with Cloud Shell to work with Azure services. You can use the Cloud Shell preinstalled commands to run the code in this article, without having to install anything on your local environment.
To start Azure Cloud Shell:
To use Azure Cloud Shell:
Start Cloud Shell.
Start Cloud Shell.
Select theCopybutton on a code block (or command block) to copy the code or command.
Select theCopybutton on a code block (or command block) to copy the code or command.
Paste the code or command into the Cloud Shell session by selectingCtrl+Shift+Von Windows and Linux, or by selectingCmd+Shift+Von macOS.
Paste the code or command into the Cloud Shell session by selectingCtrl+Shift+Von Windows and Linux, or by selectingCmd+Shift+Von macOS.
SelectEnterto run the code or command.
SelectEnterto run the code or command.
If you choose to install and use PowerShell locally, this article requires the Azure PowerShell module version 1.0.0 or later. RunGet-Module -ListAvailable Azto find the installed version. If you need to upgrade, seeInstall Azure PowerShell module. If you're running PowerShell locally, you also need to runConnect-AzAccountto create a connection with Azure.
Get-Module -ListAvailable Az
Connect-AzAccount
If you don't have anAzure subscription, create anAzure free accountbefore you begin.
Use the Bash environment inAzure Cloud Shell. For more information, seeGet started with Azure Cloud Shell.
Use the Bash environment inAzure Cloud Shell. For more information, seeGet started with Azure Cloud Shell.

If you prefer to run CLI reference commands locally,installthe Azure CLI. If you're running on Windows or macOS, consider running Azure CLI in a Docker container. For more information, seeHow to run the Azure CLI in a Docker container.If you're using a local installation, sign in to the Azure CLI by using theaz logincommand. To finish the authentication process, follow the steps displayed in your terminal. For other sign-in options, seeAuthenticate to Azure using Azure CLI.When you're prompted, install the Azure CLI extension on first use. For more information about extensions, seeUse and manage extensions with the Azure CLI.Runaz versionto find the version and dependent libraries that are installed. To upgrade to the latest version, runaz upgrade.
If you prefer to run CLI reference commands locally,installthe Azure CLI. If you're running on Windows or macOS, consider running Azure CLI in a Docker container. For more information, seeHow to run the Azure CLI in a Docker container.
If you're using a local installation, sign in to the Azure CLI by using theaz logincommand. To finish the authentication process, follow the steps displayed in your terminal. For other sign-in options, seeAuthenticate to Azure using Azure CLI.
If you're using a local installation, sign in to the Azure CLI by using theaz logincommand. To finish the authentication process, follow the steps displayed in your terminal. For other sign-in options, seeAuthenticate to Azure using Azure CLI.
When you're prompted, install the Azure CLI extension on first use. For more information about extensions, seeUse and manage extensions with the Azure CLI.
When you're prompted, install the Azure CLI extension on first use. For more information about extensions, seeUse and manage extensions with the Azure CLI.
Runaz versionto find the version and dependent libraries that are installed. To upgrade to the latest version, runaz upgrade.
Runaz versionto find the version and dependent libraries that are installed. To upgrade to the latest version, runaz upgrade.
This article requires version 2.0.28 or later of the Azure CLI. If using Azure Cloud Shell, the latest version is already installed.
Create subnets
ADMZandPrivatesubnet are needed for this tutorial. TheDMZsubnet is where you deploy the NVA, and thePrivatesubnet is where you deploy the virtual machines that you want to route traffic to. Thesubnet-1is the subnet created in the previous steps. Usesubnet-1for the public virtual machine.
Portal
PowerShell
CLI
Create a virtual network and an Azure Bastion host
The following procedure creates a virtual network with a resource subnet, an Azure Bastion subnet, and a Bastion host:
In the portal, search for and selectVirtual networks.
In the portal, search for and selectVirtual networks.
On theVirtual networkspage, select+ Create.
On theVirtual networkspage, select+ Create.
On theBasicstab ofCreate virtual network, enter, or select the following information:SettingValueProject detailsSubscriptionSelect your subscription.Resource groupSelectCreate new.Entertest-rgfor the name.SelectOK.Instance detailsNameEntervnet-1.RegionSelectEast US 2.
On theBasicstab ofCreate virtual network, enter, or select the following information:

SelectNextto proceed to theSecuritytab.
SelectNextto proceed to theSecuritytab.
In theAzure Bastionsection, selectEnable Azure Bastion.Bastion uses your browser to connect to VMs in your virtual network over Secure Shell (SSH) or Remote Desktop Protocol (RDP) by using their private IP addresses. The VMs don't need public IP addresses, client software, or special configuration. For more information, seeWhat is Azure Bastion?.NoteHourly pricing starts from the moment that Bastion is deployed, regardless of outbound data usage. For more information, seePricingandSKUs. If you're deploying Bastion as part of a tutorial or test, we recommend that you delete this resource after you finish using it.
In theAzure Bastionsection, selectEnable Azure Bastion.
Bastion uses your browser to connect to VMs in your virtual network over Secure Shell (SSH) or Remote Desktop Protocol (RDP) by using their private IP addresses. The VMs don't need public IP addresses, client software, or special configuration. For more information, seeWhat is Azure Bastion?.
Note
Hourly pricing starts from the moment that Bastion is deployed, regardless of outbound data usage. For more information, seePricingandSKUs. If you're deploying Bastion as part of a tutorial or test, we recommend that you delete this resource after you finish using it.
InAzure Bastion, enter or select the following information:SettingValueAzure Bastion host nameEnterbastion.Azure Bastion public IP addressSelectCreate a public IP address.Enterpublic-ip-bastionin Name.SelectOK.
InAzure Bastion, enter or select the following information:

SelectNextto proceed to theIP Addressestab.
SelectNextto proceed to theIP Addressestab.
In the address space box inSubnets, select thedefaultsubnet.
In the address space box inSubnets, select thedefaultsubnet.
InEdit subnet, enter or select the following information:SettingValueSubnet purposeLeave the default ofDefault.NameEntersubnet-1.IPv4IPv4 address rangeLeave the default of10.0.0.0/16.Starting addressLeave the default of10.0.0.0.SizeLeave the default of/24 (256 addresses).
InEdit subnet, enter or select the following information:

SelectSave.
SelectSave.
SelectReview + createat the bottom of the window. When validation passes, selectCreate.
SelectReview + createat the bottom of the window. When validation passes, selectCreate.
In the search box at the top of the portal, enterVirtual network. SelectVirtual networksin the search results.
In the search box at the top of the portal, enterVirtual network. SelectVirtual networksin the search results.
InVirtual networks, selectvnet-1.
InVirtual networks, selectvnet-1.
Invnet-1, selectSubnetsfrom theSettingssection.
Invnet-1, selectSubnetsfrom theSettingssection.
In the virtual network's subnet list, select+ Subnet.
In the virtual network's subnet list, select+ Subnet.
InAdd subnet, enter or select the following information:SettingValueSubnet purposeLeave the default ofDefault.NameEntersubnet-private.IPv4IPv4 address rangeLeave the default of10.0.0.0/16.Starting addressEnter10.0.2.0.SizeLeave the default of/24 (256 addresses).
InAdd subnet, enter or select the following information:
SelectAdd.
SelectAdd.
Select+ Subnet.
Select+ Subnet.
InAdd subnet, enter or select the following information:SettingValueSubnet purposeLeave the default ofDefault.NameEntersubnet-dmz.IPv4IPv4 address rangeLeave the default of10.0.0.0/16.Starting addressEnter10.0.3.0.SizeLeave the default of/24 (256 addresses).
InAdd subnet, enter or select the following information:
SelectAdd.
SelectAdd.
Create a resource group withNew-AzResourceGroup. The following example creates a resource group namedtest-rgfor all resources created in this article.
$rg = @{
    ResourceGroupName = "test-rg"
    Location = "EastUS2"
}
New-AzResourceGroup @rg
$rg = @{
    ResourceGroupName = "test-rg"
    Location = "EastUS2"
}
New-AzResourceGroup @rg
Create a virtual network withNew-AzVirtualNetwork. The following example creates a virtual network namedvnet-1with the address prefix10.0.0.0/16.
$vnet = @{
    ResourceGroupName = "test-rg"
    Location = "EastUS2"
    Name = "vnet-1"
    AddressPrefix = "10.0.0.0/16"
}

$virtualNetwork = New-AzVirtualNetwork @vnet
$vnet = @{
    ResourceGroupName = "test-rg"
    Location = "EastUS2"
    Name = "vnet-1"
    AddressPrefix = "10.0.0.0/16"
}

$virtualNetwork = New-AzVirtualNetwork @vnet
Create four subnets by creating four subnet configurations withNew-AzVirtualNetworkSubnetConfig. The following example creates four subnet configurations forPublic,Private,DMZ, and Azure Bastion subnets.
$subnetConfigPublicParams = @{
    Name = "subnet-1"
    AddressPrefix = "10.0.0.0/24"
    VirtualNetwork = $virtualNetwork
}

$subnetConfigBastionParams = @{
    Name = "AzureBastionSubnet"
    AddressPrefix = "10.0.1.0/24"
    VirtualNetwork = $virtualNetwork
}

$subnetConfigPrivateParams = @{
    Name = "subnet-private"
    AddressPrefix = "10.0.2.0/24"
    VirtualNetwork = $virtualNetwork
}

$subnetConfigDmzParams = @{
    Name = "subnet-dmz"
    AddressPrefix = "10.0.3.0/24"
    VirtualNetwork = $virtualNetwork
}

$subnetConfigPublic = Add-AzVirtualNetworkSubnetConfig @subnetConfigPublicParams
$subnetConfigBastion = Add-AzVirtualNetworkSubnetConfig @subnetConfigBastionParams
$subnetConfigPrivate = Add-AzVirtualNetworkSubnetConfig @subnetConfigPrivateParams
$subnetConfigDmz = Add-AzVirtualNetworkSubnetConfig @subnetConfigDmzParams
$subnetConfigPublicParams = @{
    Name = "subnet-1"
    AddressPrefix = "10.0.0.0/24"
    VirtualNetwork = $virtualNetwork
}

$subnetConfigBastionParams = @{
    Name = "AzureBastionSubnet"
    AddressPrefix = "10.0.1.0/24"
    VirtualNetwork = $virtualNetwork
}

$subnetConfigPrivateParams = @{
    Name = "subnet-private"
    AddressPrefix = "10.0.2.0/24"
    VirtualNetwork = $virtualNetwork
}

$subnetConfigDmzParams = @{
    Name = "subnet-dmz"
    AddressPrefix = "10.0.3.0/24"
    VirtualNetwork = $virtualNetwork
}

$subnetConfigPublic = Add-AzVirtualNetworkSubnetConfig @subnetConfigPublicParams
$subnetConfigBastion = Add-AzVirtualNetworkSubnetConfig @subnetConfigBastionParams
$subnetConfigPrivate = Add-AzVirtualNetworkSubnetConfig @subnetConfigPrivateParams
$subnetConfigDmz = Add-AzVirtualNetworkSubnetConfig @subnetConfigDmzParams
Write the subnet configurations to the virtual network withSet-AzVirtualNetwork, which creates the subnets in the virtual network:
$virtualNetwork | Set-AzVirtualNetwork
$virtualNetwork | Set-AzVirtualNetwork
Create Azure Bastion
Create a public IP address for the Azure Bastion host withNew-AzPublicIpAddress. The following example creates a public IP address namedpublic-ip-bastionin thevnet-1virtual network.
$publicIpParams = @{
    ResourceGroupName = "test-rg"
    Name = "public-ip-bastion"
    Location = "EastUS2"
    AllocationMethod = "Static"
    Sku = "Standard"
}
New-AzPublicIpAddress @publicIpParams
$publicIpParams = @{
    ResourceGroupName = "test-rg"
    Name = "public-ip-bastion"
    Location = "EastUS2"
    AllocationMethod = "Static"
    Sku = "Standard"
}
New-AzPublicIpAddress @publicIpParams
Create an Azure Bastion host withNew-AzBastion. The following example creates an Azure Bastion host namedbastionin theAzureBastionSubnetsubnet of thevnet-1virtual network. Azure Bastion is used to securely connect Azure virtual machines without exposing them to the public internet.
$bastionParams = @{
    ResourceGroupName = "test-rg"
    Name = "bastion"
    VirtualNetworkName = "vnet-1"
    PublicIpAddressName = "public-ip-bastion"
    PublicIpAddressRgName = "test-rg"
    VirtualNetworkRgName = "test-rg"
}
New-AzBastion @bastionParams -AsJob
$bastionParams = @{
    ResourceGroupName = "test-rg"
    Name = "bastion"
    VirtualNetworkName = "vnet-1"
    PublicIpAddressName = "public-ip-bastion"
    PublicIpAddressRgName = "test-rg"
    VirtualNetworkRgName = "test-rg"
}
New-AzBastion @bastionParams -AsJob
Create a resource group withaz group createfor all resources created in this article.
# Create a resource group.
az group create \
    --name test-rg \
    --location eastus2
# Create a resource group.
az group create \
    --name test-rg \
    --location eastus2
Create a virtual network with one subnet withaz network vnet create.
az network vnet create \
    --name vnet-1 \
    --resource-group test-rg \
    --address-prefix 10.0.0.0/16 \
    --subnet-name subnet-1 \
    --subnet-prefix 10.0.0.0/24
az network vnet create \
    --name vnet-1 \
    --resource-group test-rg \
    --address-prefix 10.0.0.0/16 \
    --subnet-name subnet-1 \
    --subnet-prefix 10.0.0.0/24
Create two more subnets withaz network vnet subnet create.
# Create a bastion subnet.
az network vnet subnet create \
    --vnet-name vnet-1 \
    --resource-group test-rg \
    --name AzureBastionSubnet \
    --address-prefix 10.0.1.0/24

# Create a private subnet.
az network vnet subnet create \
    --vnet-name vnet-1 \
    --resource-group test-rg \
    --name subnet-private \
    --address-prefix 10.0.2.0/24

# Create a DMZ subnet.
az network vnet subnet create \
    --vnet-name vnet-1 \
    --resource-group test-rg \
    --name subnet-dmz \
    --address-prefix 10.0.3.0/24
# Create a bastion subnet.
az network vnet subnet create \
    --vnet-name vnet-1 \
    --resource-group test-rg \
    --name AzureBastionSubnet \
    --address-prefix 10.0.1.0/24

# Create a private subnet.
az network vnet subnet create \
    --vnet-name vnet-1 \
    --resource-group test-rg \
    --name subnet-private \
    --address-prefix 10.0.2.0/24

# Create a DMZ subnet.
az network vnet subnet create \
    --vnet-name vnet-1 \
    --resource-group test-rg \
    --name subnet-dmz \
    --address-prefix 10.0.3.0/24
Create Azure Bastion
Create a public IP address for the Azure Bastion host withaz network public-ip create. The following example creates a public IP address namedpublic-ip-bastionin thevnet-1virtual network.
az network public-ip create \
    --resource-group test-rg \
    --name public-ip-bastion \
    --location eastus2 \
    --allocation-method Static \
    --sku Standard
az network public-ip create \
    --resource-group test-rg \
    --name public-ip-bastion \
    --location eastus2 \
    --allocation-method Static \
    --sku Standard
Create an Azure Bastion host withaz network bastion create. The following example creates an Azure Bastion host namedbastionin theAzureBastionSubnetsubnet of thevnet-1virtual network. Azure Bastion is used to securely connect Azure virtual machines without exposing them to the public internet.
az network bastion create \
    --resource-group test-rg \
    --name bastion \
    --vnet-name vnet-1 \
    --public-ip-address public-ip-bastion \
    --location eastus2
    --no-wait
az network bastion create \
    --resource-group test-rg \
    --name bastion \
    --vnet-name vnet-1 \
    --public-ip-address public-ip-bastion \
    --location eastus2
    --no-wait
Create an NVA virtual machine
Network virtual appliances (NVAs) are virtual machines that help with network functions, such as routing and firewall optimization. In this section, create an NVA using anUbuntu 24.04virtual machine.
Portal
PowerShell
CLI
In the search box at the top of the portal, enterVirtual machine. SelectVirtual machinesin the search results.
In the search box at the top of the portal, enterVirtual machine. SelectVirtual machinesin the search results.
Select+ CreatethenAzure virtual machine.
Select+ CreatethenAzure virtual machine.
InCreate a virtual machineenter or select the following information in theBasicstab:SettingValueProject detailsSubscriptionSelect your subscription.Resource groupSelecttest-rg.Instance detailsVirtual machine nameEntervm-nva.RegionSelect(US) East US 2.Availability optionsSelectNo infrastructure redundancy required.Security typeSelectStandard.ImageSelectUbuntu Server 24.04 LTS - x64 Gen2.VM architectureLeave the default ofx64.SizeSelect a size.Administrator accountAuthentication typeSelectPassword.UsernameEnter a username.PasswordEnter a password.Confirm passwordReenter password.Inbound port rulesPublic inbound portsSelectNone.
InCreate a virtual machineenter or select the following information in theBasicstab:
SelectNext: DisksthenNext: Networking.
SelectNext: DisksthenNext: Networking.
In the Networking tab, enter or select the following information:SettingValueNetwork interfaceVirtual networkSelectvnet-1.SubnetSelectsubnet-dmz (10.0.3.0/24).Public IPSelectNone.NIC network security groupSelectAdvanced.Configure network security groupSelectCreate new.InNameenternsg-nva.SelectOK.
In the Networking tab, enter or select the following information:
Leave the rest of the options at the defaults and selectReview + create.
Leave the rest of the options at the defaults and selectReview + create.
SelectCreate.
SelectCreate.
Create the VM withNew-AzVM. The following example creates a VM namedvm-nva.
# Create a credential object
$cred = Get-Credential

# Define the VM parameters
$vmParams = @{
    ResourceGroupName = "test-rg"
    Location = "EastUS2"
    Name = "vm-nva"
    ImageName = "Canonical:ubuntu-24_04-lts:server-gen1:latest"
    Size = "Standard_DS1_v2"
    Credential = $cred
    VirtualNetworkName = "vnet-1"
    SubnetName = "subnet-dmz"
    PublicIpAddressName = $null  # No public IP address
}

# Create the VM
New-AzVM @vmParams
# Create a credential object
$cred = Get-Credential

# Define the VM parameters
$vmParams = @{
    ResourceGroupName = "test-rg"
    Location = "EastUS2"
    Name = "vm-nva"
    ImageName = "Canonical:ubuntu-24_04-lts:server-gen1:latest"
    Size = "Standard_DS1_v2"
    Credential = $cred
    VirtualNetworkName = "vnet-1"
    SubnetName = "subnet-dmz"
    PublicIpAddressName = $null  # No public IP address
}

# Create the VM
New-AzVM @vmParams
Create a VM to be used as the NVA in thesubnet-dmzsubnet withaz vm create.
az vm create \
    --resource-group test-rg \
    --name vm-nva \
    --image Ubuntu2204 \
    --public-ip-address "" \
    --subnet subnet-dmz \
    --vnet-name vnet-1 \
    --admin-username azureuser \
    --authentication-type password
az vm create \
    --resource-group test-rg \
    --name vm-nva \
    --image Ubuntu2204 \
    --public-ip-address "" \
    --subnet subnet-dmz \
    --vnet-name vnet-1 \
    --admin-username azureuser \
    --authentication-type password
The VM takes a few minutes to create. Don't continue to the next step until Azure finishes creating the VM and returns output about the VM.
Create public and private virtual machines
Create two virtual machines in thevnet-1virtual network. One virtual machine is in thesubnet-1subnet, and the other virtual machine is in thesubnet-privatesubnet. Use the same virtual machine image for both virtual machines.
Create public virtual machine
The public virtual machine is used to simulate a machine in the public internet. The public and private virtual machine are used to test the routing of network traffic through the NVA virtual machine.
Portal
PowerShell
CLI
In the search box at the top of the portal, enterVirtual machine. SelectVirtual machinesin the search results.
In the search box at the top of the portal, enterVirtual machine. SelectVirtual machinesin the search results.
Select+ CreatethenAzure virtual machine.
Select+ CreatethenAzure virtual machine.
InCreate a virtual machineenter or select the following information in theBasicstab:SettingValueProject detailsSubscriptionSelect your subscription.Resource groupSelecttest-rg.Instance detailsVirtual machine nameEntervm-public.RegionSelect(US) East US 2.Availability optionsSelectNo infrastructure redundancy required.Security typeSelectStandard.ImageSelectUbuntu Server 24.04 LTS - x64 Gen2.VM architectureLeave the default ofx64.SizeSelect a size.Administrator accountAuthentication typeSelectPassword.UsernameEnter a username.PasswordEnter a password.Confirm passwordReenter password.Inbound port rulesPublic inbound portsSelectNone.
InCreate a virtual machineenter or select the following information in theBasicstab:
SelectNext: DisksthenNext: Networking.
SelectNext: DisksthenNext: Networking.
In the Networking tab, enter or select the following information:SettingValueNetwork interfaceVirtual networkSelectvnet-1.SubnetSelectsubnet-1 (10.0.0.0/24).Public IPSelectNone.NIC network security groupSelectNone.
In the Networking tab, enter or select the following information:
Leave the rest of the options at the defaults and selectReview + create.
Leave the rest of the options at the defaults and selectReview + create.
SelectCreate.
SelectCreate.
Create private virtual machine
In the search box at the top of the portal, enterVirtual machine. SelectVirtual machinesin the search results.
In the search box at the top of the portal, enterVirtual machine. SelectVirtual machinesin the search results.
Select+ CreatethenAzure virtual machine.
Select+ CreatethenAzure virtual machine.
InCreate a virtual machineenter or select the following information in theBasicstab:SettingValueProject detailsSubscriptionSelect your subscription.Resource groupSelecttest-rg.Instance detailsVirtual machine nameEntervm-private.RegionSelect(US) East US 2.Availability optionsSelectNo infrastructure redundancy required.Security typeSelectStandard.ImageSelectUbuntu Server 24.04 LTS - x64 Gen2.VM architectureLeave the default ofx64.SizeSelect a size.Administrator accountAuthentication typeSelectPassword.UsernameEnter a username.PasswordEnter a password.Confirm passwordReenter password.Inbound port rulesPublic inbound portsSelectNone.
InCreate a virtual machineenter or select the following information in theBasicstab:
SelectNext: DisksthenNext: Networking.
SelectNext: DisksthenNext: Networking.
In the Networking tab, enter or select the following information:SettingValueNetwork interfaceVirtual networkSelectvnet-1.SubnetSelectsubnet-private (10.0.2.0/24).Public IPSelectNone.NIC network security groupSelectNone.
In the Networking tab, enter or select the following information:
Leave the rest of the options at the defaults and selectReview + create.
Leave the rest of the options at the defaults and selectReview + create.
SelectCreate.
SelectCreate.
Create a VM in thesubnet-1subnet withNew-AzVM. The following example creates a VM namedvm-publicin thesubnet-publicsubnet of thevnet-1virtual network.
# Create a credential object
$cred = Get-Credential

# Define the VM parameters
$vmParams = @{
    ResourceGroupName = "test-rg"
    Location = "EastUS2"
    Name = "vm-public"
    ImageName = "Canonical:ubuntu-24_04-lts:server-gen1:latest"
    Size = "Standard_DS1_v2"
    Credential = $cred
    VirtualNetworkName = "vnet-1"
    SubnetName = "subnet-1"
    PublicIpAddressName = $null  # No public IP address
}

# Create the VM
New-AzVM @vmParams
# Create a credential object
$cred = Get-Credential

# Define the VM parameters
$vmParams = @{
    ResourceGroupName = "test-rg"
    Location = "EastUS2"
    Name = "vm-public"
    ImageName = "Canonical:ubuntu-24_04-lts:server-gen1:latest"
    Size = "Standard_DS1_v2"
    Credential = $cred
    VirtualNetworkName = "vnet-1"
    SubnetName = "subnet-1"
    PublicIpAddressName = $null  # No public IP address
}

# Create the VM
New-AzVM @vmParams
Create a VM in thesubnet-privatesubnet.
# Create a credential object
$cred = Get-Credential

# Define the VM parameters
$vmParams = @{
    ResourceGroupName = "test-rg"
    Location = "EastUS2"
    Name = "vm-private"
    ImageName = "Canonical:ubuntu-24_04-lts:server-gen1:latest"
    Size = "Standard_DS1_v2"
    Credential = $cred
    VirtualNetworkName = "vnet-1"
    SubnetName = "subnet-private"
    PublicIpAddressName = $null  # No public IP address
}

# Create the VM
New-AzVM @vmParams
# Create a credential object
$cred = Get-Credential

# Define the VM parameters
$vmParams = @{
    ResourceGroupName = "test-rg"
    Location = "EastUS2"
    Name = "vm-private"
    ImageName = "Canonical:ubuntu-24_04-lts:server-gen1:latest"
    Size = "Standard_DS1_v2"
    Credential = $cred
    VirtualNetworkName = "vnet-1"
    SubnetName = "subnet-private"
    PublicIpAddressName = $null  # No public IP address
}

# Create the VM
New-AzVM @vmParams
The VM takes a few minutes to create. Don't continue with the next step until the VM is created and Azure returns output to PowerShell.
Create a VM in thesubnet-1subnet withaz vm create. The--no-waitparameter enables Azure to execute the command in the background so you can continue to the next command.
--no-wait
az vm create \
    --resource-group test-rg \
    --name vm-public \
    --image Ubuntu2204 \
    --vnet-name vnet-1 \
    --subnet subnet-1 \
    --public-ip-address "" \
    --admin-username azureuser \
    --authentication-type password \
    --no-wait
az vm create \
    --resource-group test-rg \
    --name vm-public \
    --image Ubuntu2204 \
    --vnet-name vnet-1 \
    --subnet subnet-1 \
    --public-ip-address "" \
    --admin-username azureuser \
    --authentication-type password \
    --no-wait
Create a VM in thesubnet-privatesubnet.
az vm create \
    --resource-group test-rg \
    --name vm-private \
    --image Ubuntu2204 \
    --vnet-name vnet-1 \
    --subnet subnet-private \
    --public-ip-address "" \
    --admin-username azureuser \
    --authentication-type password
az vm create \
    --resource-group test-rg \
    --name vm-private \
    --image Ubuntu2204 \
    --vnet-name vnet-1 \
    --subnet subnet-private \
    --public-ip-address "" \
    --admin-username azureuser \
    --authentication-type password
Enable IP forwarding
To route traffic through the NVA, turn on IP forwarding in Azure and in the operating system ofvm-nva. When IP forwarding is enabled, any traffic received byvm-nvathat's destined for a different IP address, isn't dropped and is forwarded to the correct destination.
Enable IP forwarding in Azure
In this section, you turn on IP forwarding for the network interface of thevm-nvavirtual machine.
Portal
PowerShell
CLI
In the search box at the top of the portal, enterVirtual machine. SelectVirtual machinesin the search results.
In the search box at the top of the portal, enterVirtual machine. SelectVirtual machinesin the search results.
InVirtual machines, selectvm-nva.
InVirtual machines, selectvm-nva.
Invm-nva, expandNetworkingthen selectNetwork settings.
Invm-nva, expandNetworkingthen selectNetwork settings.
Select the name of the interface next toNetwork Interface:. The name begins withvm-nvaand has a random number assigned to the interface. The name of the interface in this example isvm-nva313.
Select the name of the interface next toNetwork Interface:. The name begins withvm-nvaand has a random number assigned to the interface. The name of the interface in this example isvm-nva313.

In the network interface overview page, selectIP configurationsfrom theSettingssection.
In the network interface overview page, selectIP configurationsfrom theSettingssection.
InIP configurations, select the box next toEnable IP forwarding.
InIP configurations, select the box next toEnable IP forwarding.

SelectApply.
SelectApply.
Enable IP forwarding for the network interface of thevm-nvavirtual machine withSet-AzNetworkInterface. The following example enables IP forwarding for the network interface namedvm-nva313.
$nicParams = @{
  Name = "vm-nva"
  ResourceGroupName = "test-rg"
}
$nic = Get-AzNetworkInterface @nicParams

$nic.EnableIPForwarding = $true

Set-AzNetworkInterface -NetworkInterface $nic
$nicParams = @{
  Name = "vm-nva"
  ResourceGroupName = "test-rg"
}
$nic = Get-AzNetworkInterface @nicParams

$nic.EnableIPForwarding = $true

Set-AzNetworkInterface -NetworkInterface $nic
Enable IP forwarding for the network interface of thevm-nvavirtual machine withaz network nic update. The following example enables IP forwarding for the network interface namedvm-nvaVMNic.
az network nic update \
    --name vm-nvaVMNic \
    --resource-group test-rg \
    --ip-forwarding true
az network nic update \
    --name vm-nvaVMNic \
    --resource-group test-rg \
    --ip-forwarding true
Enable IP forwarding in the operating system
In this section, turn on IP forwarding for the operating system of thevm-nvavirtual machine to forward network traffic. Use the Azure Bastion service to connect to thevm-nvavirtual machine.
In the search box at the top of the portal, enterVirtual machine. SelectVirtual machinesin the search results.
In the search box at the top of the portal, enterVirtual machine. SelectVirtual machinesin the search results.
InVirtual machines, selectvm-nva.
InVirtual machines, selectvm-nva.
SelectConnect, thenConnect via Bastionin theOverviewsection.
SelectConnect, thenConnect via Bastionin theOverviewsection.
Enter the username and password you entered when the virtual machine was created.
Enter the username and password you entered when the virtual machine was created.
SelectConnect.
SelectConnect.
Enter the following information at the prompt of the virtual machine to enable IP forwarding:sudo vim /etc/sysctl.conf
Enter the following information at the prompt of the virtual machine to enable IP forwarding:
sudo vim /etc/sysctl.conf
sudo vim /etc/sysctl.conf
In the Vim editor, remove the#from the linenet.ipv4.ip_forward=1:Press theInsertkey.# Uncomment the next line to enable packet forwarding for IPv4
net.ipv4.ip_forward=1Press theEsckey.Enter:wqand pressEnter.
In the Vim editor, remove the#from the linenet.ipv4.ip_forward=1:
#
net.ipv4.ip_forward=1
Press theInsertkey.
# Uncomment the next line to enable packet forwarding for IPv4
net.ipv4.ip_forward=1
# Uncomment the next line to enable packet forwarding for IPv4
net.ipv4.ip_forward=1
Press theEsckey.
Enter:wqand pressEnter.
:wq
Close the Bastion session.
Close the Bastion session.
Restart the virtual machine.
Restart the virtual machine.
Create a route table
In this section, create a route table to define the route of the traffic through the NVA virtual machine. The route table is associated to thesubnet-1subnet where thevm-publicvirtual machine is deployed.
Portal
PowerShell
CLI
In the search box at the top of the portal, enterRoute table. SelectRoute tablesin the search results.
In the search box at the top of the portal, enterRoute table. SelectRoute tablesin the search results.
Select+ Create.
Select+ Create.
InCreate Route tableenter or select the following information:SettingValueProject detailsSubscriptionSelect your subscription.Resource groupSelecttest-rg.Instance detailsRegionSelectEast US 2.NameEnterroute-table-public.Propagate gateway routesLeave the default ofYes.
InCreate Route tableenter or select the following information:
SelectReview + create.
SelectReview + create.
SelectCreate.
SelectCreate.
Create a route
In this section, create a route in the route table that you created in the previous steps.
In the search box at the top of the portal, enterRoute table. SelectRoute tablesin the search results.
In the search box at the top of the portal, enterRoute table. SelectRoute tablesin the search results.
Selectroute-table-public.
Selectroute-table-public.
ExpandSettingsthen selectRoutes.
ExpandSettingsthen selectRoutes.
Select+ AddinRoutes.
Select+ AddinRoutes.
Enter or select the following information inAdd route:SettingValueRoute nameEnterto-private-subnet.Destination typeSelectIP Addresses.Destination IP addresses/CIDR rangesEnter10.0.2.0/24.Next hop typeSelectVirtual appliance.Next hop addressEnter10.0.3.4.This is the IP address of the vm-nva you created in the earlier steps..
Enter or select the following information inAdd route:
SelectAdd.
SelectAdd.
SelectSubnetsinSettings.
SelectSubnetsinSettings.
Select+ Associate.
Select+ Associate.
Enter or select the following information inAssociate subnet:SettingValueVirtual networkSelectvnet-1 (test-rg).SubnetSelectsubnet-1.
Enter or select the following information inAssociate subnet:
SelectOK.
SelectOK.
Create a route table withNew-AzRouteTable. The following example creates a route table namedroute-table-public.
$routeTableParams = @{
    Name = 'route-table-public'
    ResourceGroupName = 'test-rg'
    Location = 'eastus2'
}
$routeTablePublic = New-AzRouteTable @routeTableParams
$routeTableParams = @{
    Name = 'route-table-public'
    ResourceGroupName = 'test-rg'
    Location = 'eastus2'
}
$routeTablePublic = New-AzRouteTable @routeTableParams
Create a route by retrieving the route table object withGet-AzRouteTable, create a route withAdd-AzRouteConfig, then write the route configuration to the route table withSet-AzRouteTable.
$routeTableParams = @{
    ResourceGroupName = "test-rg"
    Name = "route-table-public"
}

$routeConfigParams = @{
    Name = "to-private-subnet"
    AddressPrefix = "10.0.2.0/24"
    NextHopType = "VirtualAppliance"
    NextHopIpAddress = "10.0.3.4"
}

$routeTable = Get-AzRouteTable @routeTableParams
$routeTable | Add-AzRouteConfig @routeConfigParams | Set-AzRouteTable
$routeTableParams = @{
    ResourceGroupName = "test-rg"
    Name = "route-table-public"
}

$routeConfigParams = @{
    Name = "to-private-subnet"
    AddressPrefix = "10.0.2.0/24"
    NextHopType = "VirtualAppliance"
    NextHopIpAddress = "10.0.3.4"
}

$routeTable = Get-AzRouteTable @routeTableParams
$routeTable | Add-AzRouteConfig @routeConfigParams | Set-AzRouteTable
Associate the route table with thesubnet-1subnet withSet-AzVirtualNetworkSubnetConfig. The following example associates theroute-table-publicroute table with thesubnet-1subnet.
$vnetParams = @{
    Name = 'vnet-1'
    ResourceGroupName = 'test-rg'
}
$virtualNetwork = Get-AzVirtualNetwork @vnetParams

$subnetParams = @{
    VirtualNetwork = $virtualNetwork
    Name = 'subnet-1'
    AddressPrefix = '10.0.0.0/24'
    RouteTable = $routeTablePublic
}
Set-AzVirtualNetworkSubnetConfig @subnetParams | Set-AzVirtualNetwork
$vnetParams = @{
    Name = 'vnet-1'
    ResourceGroupName = 'test-rg'
}
$virtualNetwork = Get-AzVirtualNetwork @vnetParams

$subnetParams = @{
    VirtualNetwork = $virtualNetwork
    Name = 'subnet-1'
    AddressPrefix = '10.0.0.0/24'
    RouteTable = $routeTablePublic
}
Set-AzVirtualNetworkSubnetConfig @subnetParams | Set-AzVirtualNetwork
Create a route table withaz network route-table create. The following example creates a route table namedroute-table-public.
# Create a route table
az network route-table create \
    --resource-group test-rg \
    --name route-table-public
# Create a route table
az network route-table create \
    --resource-group test-rg \
    --name route-table-public
Create a route in the route table withaz network route-table route create.
az network route-table route create \
    --name to-private-subnet \
    --resource-group test-rg \
    --route-table-name route-table-public \
    --address-prefix 10.0.2.0/24 \
    --next-hop-type VirtualAppliance \
    --next-hop-ip-address 10.0.3.4
az network route-table route create \
    --name to-private-subnet \
    --resource-group test-rg \
    --route-table-name route-table-public \
    --address-prefix 10.0.2.0/24 \
    --next-hop-type VirtualAppliance \
    --next-hop-ip-address 10.0.3.4
Associate theroute-table-subnet-publicroute table to thesubnet-1subnet withaz network vnet subnet update.
az network vnet subnet update \
    --vnet-name vnet-1 \
    --name subnet-1 \
    --resource-group test-rg \
    --route-table route-table-public
az network vnet subnet update \
    --vnet-name vnet-1 \
    --name subnet-1 \
    --resource-group test-rg \
    --route-table route-table-public
Test the routing of network traffic
Test routing of network traffic fromvm-publictovm-private. Test routing of network traffic fromvm-privatetovm-public.
Test network traffic from vm-public to vm-private
In the search box at the top of the portal, enterVirtual machine. SelectVirtual machinesin the search results.
In the search box at the top of the portal, enterVirtual machine. SelectVirtual machinesin the search results.
InVirtual machines, selectvm-public.
InVirtual machines, selectvm-public.
SelectConnectthenConnect via Bastionin theOverviewsection.
SelectConnectthenConnect via Bastionin theOverviewsection.
Enter the username and password you entered when the virtual machine was created.
Enter the username and password you entered when the virtual machine was created.
SelectConnect.
SelectConnect.
In the prompt, enter the following command to trace the routing of network traffic fromvm-publictovm-private:tracepath vm-privateThe response is similar to the following example:azureuser@vm-public:~$ tracepath vm-private
 1?: [LOCALHOST]                      pmtu 1500
 1:  vm-nva.internal.cloudapp.net                          1.766ms 
 1:  vm-nva.internal.cloudapp.net                          1.259ms 
 2:  vm-private.internal.cloudapp.net                      2.202ms reached
 Resume: pmtu 1500 hops 2 back 1You can see that there are two hops in the above response fortracepathICMP traffic fromvm-publictovm-private. The first hop isvm-nva. The second hop is the destinationvm-private.Azure sent the traffic fromsubnet-1through the NVA and not directly tosubnet-privatebecause you previously added theto-private-subnetroute toroute-table-publicand associated it tosubnet-1.
In the prompt, enter the following command to trace the routing of network traffic fromvm-publictovm-private:
tracepath vm-private
tracepath vm-private
The response is similar to the following example:
azureuser@vm-public:~$ tracepath vm-private
 1?: [LOCALHOST]                      pmtu 1500
 1:  vm-nva.internal.cloudapp.net                          1.766ms 
 1:  vm-nva.internal.cloudapp.net                          1.259ms 
 2:  vm-private.internal.cloudapp.net                      2.202ms reached
 Resume: pmtu 1500 hops 2 back 1
azureuser@vm-public:~$ tracepath vm-private
 1?: [LOCALHOST]                      pmtu 1500
 1:  vm-nva.internal.cloudapp.net                          1.766ms 
 1:  vm-nva.internal.cloudapp.net                          1.259ms 
 2:  vm-private.internal.cloudapp.net                      2.202ms reached
 Resume: pmtu 1500 hops 2 back 1
You can see that there are two hops in the above response fortracepathICMP traffic fromvm-publictovm-private. The first hop isvm-nva. The second hop is the destinationvm-private.
tracepath
Azure sent the traffic fromsubnet-1through the NVA and not directly tosubnet-privatebecause you previously added theto-private-subnetroute toroute-table-publicand associated it tosubnet-1.
Close the Bastion session.
Close the Bastion session.
Test network traffic from vm-private to vm-public
In the search box at the top of the portal, enterVirtual machine. SelectVirtual machinesin the search results.
In the search box at the top of the portal, enterVirtual machine. SelectVirtual machinesin the search results.
InVirtual machines, selectvm-private.
InVirtual machines, selectvm-private.
SelectConnectthenConnect via Bastionin theOverviewsection.
SelectConnectthenConnect via Bastionin theOverviewsection.
Enter the username and password you entered when the virtual machine was created.
Enter the username and password you entered when the virtual machine was created.
SelectConnect.
SelectConnect.
In the prompt, enter the following command to trace the routing of network traffic fromvm-privatetovm-public:tracepath vm-publicThe response is similar to the following example:azureuser@vm-private:~$ tracepath vm-public
 1?: [LOCALHOST]                      pmtu 1500
 1:  vm-public.internal.cloudapp.net                       2.584ms reached
 1:  vm-public.internal.cloudapp.net                       2.147ms reached
 Resume: pmtu 1500 hops 1 back 2You can see that there's one hop in the above response, which is the destinationvm-public.Azure sent the traffic directly fromsubnet-privatetosubnet-1. By default, Azure routes traffic directly between subnets.
In the prompt, enter the following command to trace the routing of network traffic fromvm-privatetovm-public:
tracepath vm-public
tracepath vm-public
The response is similar to the following example:
azureuser@vm-private:~$ tracepath vm-public
 1?: [LOCALHOST]                      pmtu 1500
 1:  vm-public.internal.cloudapp.net                       2.584ms reached
 1:  vm-public.internal.cloudapp.net                       2.147ms reached
 Resume: pmtu 1500 hops 1 back 2
azureuser@vm-private:~$ tracepath vm-public
 1?: [LOCALHOST]                      pmtu 1500
 1:  vm-public.internal.cloudapp.net                       2.584ms reached
 1:  vm-public.internal.cloudapp.net                       2.147ms reached
 Resume: pmtu 1500 hops 1 back 2
You can see that there's one hop in the above response, which is the destinationvm-public.
Azure sent the traffic directly fromsubnet-privatetosubnet-1. By default, Azure routes traffic directly between subnets.
Close the Bastion session.
Close the Bastion session.
Portal
PowerShell
CLI
When you finish using the resources that you created, you can delete the resource group and all its resources.
In the Azure portal, search for and selectResource groups.
In the Azure portal, search for and selectResource groups.
On theResource groupspage, select thetest-rgresource group.
On theResource groupspage, select thetest-rgresource group.
On thetest-rgpage, selectDelete resource group.
On thetest-rgpage, selectDelete resource group.
Entertest-rginEnter resource group name to confirm deletion, and then selectDelete.
Entertest-rginEnter resource group name to confirm deletion, and then selectDelete.
When no longer needed, useRemove-AzResourcegroupto remove the resource group and all of the resources it contains.
$rgParams = @{
    Name = "test-rg"
}
Remove-AzResourceGroup @rgParams -Force
$rgParams = @{
    Name = "test-rg"
}
Remove-AzResourceGroup @rgParams -Force
When no longer needed, useaz group deleteto remove the resource group and all of the resources it contains.
az group delete \
    --name test-rg \
    --yes \
    --no-wait
az group delete \
    --name test-rg \
    --yes \
    --no-wait
Next steps
In this tutorial, you:
Created a route table and associated it to a subnet.
Created a route table and associated it to a subnet.
Created a simple NVA that routed traffic from a public subnet to a private subnet.
Created a simple NVA that routed traffic from a public subnet to a private subnet.
You can deploy different preconfigured NVAs from theAzure Marketplace, which provide many useful network functions.
To learn more about routing, seeRouting overviewandManage a route table.
To learn how to restrict network access to PaaS resources with virtual network service endpoints, advance to the next tutorial.
Restrict network access using service endpoints
Feedback
Was this page helpful?
Additional resources