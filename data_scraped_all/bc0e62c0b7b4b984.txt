Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Core concepts for Azure Kubernetes Service (AKS)
Article
2025-02-26
3 contributors
In this article
This article describes core concepts of Azure Kubernetes Service (AKS), a managed Kubernetes service that you can use to deploy and operate containerized applications at scale on Azure.
What is Kubernetes?
Kubernetes is an open-source container orchestration platform for automating the deployment, scaling, and management of containerized applications. For more information, see the officialKubernetes documentation.
What is AKS?
AKS is a managed Kubernetes service that simplifies deploying, managing, and scaling containerized applications using Kubernetes. For more information, seeWhat is Azure Kubernetes Service (AKS)?
Cluster components
An AKS cluster is divided into two main components:
Control plane: The control plane provides the core Kubernetes services and orchestration of application workloads.
Nodes: Nodes are the underlying virtual machines (VMs) that run your applications.

Note
AKS managed components have the label "kubernetes.azure.com/managedby": "aks".
AKS manages the Helm releases with the prefixaks-managed. Continuously increasing revisions on these releases are expected and safe.
Control plane
The Azure managed control plane is composed of several components that help manage the cluster:
Nodes
Each AKS cluster has at least one node, which is an Azure virtual machine (VM) that runs Kubernetes node components. The following components run on each node:

Node configuration
VM size and image
TheAzure VM sizefor your nodes defines CPUs, memory, size, and the storage type available, such as high-performance SSD or regular HDD. The VM size you choose depends on the workload requirements and the number of pods you plan to run on each node. For more information, seeSupported VM sizes in Azure Kubernetes Service (AKS).
In AKS, theVM imagefor your cluster's nodes is based on Ubuntu Linux,Azure Linux, or Windows Server 2022. When you create an AKS cluster or scale out the number of nodes, the Azure platform automatically creates and configures the requested number of VMs. Agent nodes are billed as standard VMs, so any VM size discounts, includingAzure reservations, are automatically applied.
OS disks
Default OS disk sizing is only used on new clusters or node pools when a default OS disk size isn't specified. This applies to both Managed and Ephemeral OS disks. For more information, seeDefault OS disk sizing.
Resource reservations
AKS uses node resources to help the nodes function as part of the cluster. This usage can cause a discrepancy between the node's total resources and the allocatable resources in AKS. To maintain node performance and functionality, AKS reserves two types of resources,CPUandmemory, on each node. For more information, seeResource reservations in AKS.
OS
AKS supports Ubuntu 22.04 and Azure Linux 2.0 as the node OS for Linux node pools. For Windows node pools, AKS supports Windows Server 2022 as the default OS. Windows Server 2019 is being retired after Kubernetes version 1.32 reaches end of life and isn't supported in future releases. If you need to upgrade your Windows OS version, seeUpgrade from Windows Server 2019 to Windows Server 2022. For more information on using Windows Server on AKS, seeWindows container considerations in Azure Kubernetes Service (AKS).
Container runtime
A container runtime is software that executes containers and manages container images on a node. The runtime helps abstract away sys-calls or OS-specific functionality to run containers on Linux or Windows. For Linux node pools,containerdis used on Kubernetes version 1.19 and higher. For Windows Server 2019 and 2022 node pools,containerdis generally available and is the only runtime option on Kubernetes version 1.23 and higher.
containerd
containerd
Pods
Apodis a group of one or more containers that share the same network and storage resources and a specification for how to run the containers. Pods typically have a 1:1 mapping with a container, but you can run multiple containers in a pod.
Node pools
In AKS, nodes of the same configuration are grouped together intonode pools. These node pools contain the underlying virtual machine scale sets and virtual machines (VMs) that run your applications. When you create an AKS cluster, you define the initial number of nodes and their size (SKU), which creates asystem node pool. System node pools serve the primary purpose of hosting critical system pods, such as CoreDNS andkonnectivity. To support applications that have different compute or storage demands, you can createuser node pools. User node pools serve the primary purpose of hosting your application pods.
konnectivity
For more information, seeCreate node pools in AKSandManage node pools in AKS.
Node resource group
When you create an AKS cluster in an Azure resource group, the AKS resource provider automatically creates a second resource group called thenode resource group. This resource group contains all the infrastructure resources associated with the cluster, including virtual machines (VMs), virtual machine scale sets, and storage.
For more information, see the following resources:
Why are two resource groups created with AKS?
Can I provide my own name for the AKS node resource group?
Can I modify tags and other properties of the resources in the AKS node resource group?
Namespaces
Kubernetes resources, such as pods and deployments, are logically grouped intonamespacesto divide an AKS cluster and create, view, or manage access to resources.
The following namespaces are created by default in an AKS cluster:
coredns
konnectivity-agent
metrics-server

Cluster modes
In AKS, you can create a cluster with theAutomatic (preview)orStandardmode. AKS Automatic provides a more fully managed experience, managing cluster configuration, including nodes, scaling, security, and other preconfigured settings. AKS Standard provides more control over the cluster configuration, including the ability to manage node pools, scaling, and other settings.
For more information, seeAKS Automatic and Standard feature comparison.
Pricing tiers
AKS offers three pricing tiers for cluster management:Free,Standard, andPremium. The pricing tier you choose determines the features available for managing your cluster.
For more information, seePricing tiers for AKS cluster management.
Supported Kubernetes versions
For more information, seeSupported Kubernetes versions in AKS.
Next steps
For information on more core concepts for AKS, see the following resources:
AKS access and identity
AKS security
AKS networking
AKS storage
AKS scaling
AKS monitoring
AKS backup and recovery
Azure Kubernetes Service

Additional resources