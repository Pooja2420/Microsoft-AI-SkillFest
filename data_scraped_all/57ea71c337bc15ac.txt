Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Use autoscale actions to send email and webhook alert notifications in Azure Monitor
Article
2024-11-01
5 contributors
In this article
This article shows you how to set up notifications so that you can call specific web URLs or send emails based on autoscale actions in Azure.
Webhooks
Webhooks allow you to send HTTP requests to a specific URL endpoint (callback URL) when a certain event or trigger occurs. Using webhooks, you can automate and streamline processes by enabling the automatic exchange of information between different systems or applications. Use webhooks to trigger custom code, notifications, or other actions to run when an autoscale event occurs.
Email
You can send email to any valid email address when an autoscale event occurs.
Note
Starting April 3, 2024, you won't be able to add any new Co-Administrators for Azure Autoscale Notifications. Azure Classic administrators will be retired on August 31, 2024, and you would not be able to send Azure Autoscale Notifications using Administrators and Co-Administrators after August 31, 2024. For moe information, seePrepare for Co-administrators retirement
Configure Notifications
Use the Azure portal, CLI, PowerShell, or Resource Manager templates to configure notifications.
Portal
CLI
PowerShell
Resource Manager
Set up notifications using the Azure portal.
Select theNotifytab on the autoscale settings page to configure notifications.
Enter a list of email addresses to send notifications to.
Enter a webhook URI to send a notification to a web service. You can also add custom headers to the webhook request. For example, you can add an authentication token in the header, query parameters, or add a custom header to identify the source of the request.

Use CLI to configure notifications.
Use theaz monitor autoscale updateor theaz monitor autoscale createcommand to configure notifications using Azure CLI.
az monitor autoscale update
az monitor autoscale create
The following parameters are used to configure notifications:
--add-action- The action to take when the autoscale rule is triggered. The value must beemailorwebhook, and followed by the email address or webhook URI.
--add-action
email
webhook
--remove-action- Remove an action previously added by--add-action. The value must beemailorwebhook. The parameter is only relevant for theaz monitor autoscale updatecommand.
--remove-action
--add-action
email
webhook
az monitor autoscale update
For example, the following command adds an email notification and a webhook notification to and existing autoscale setting.
az monitor autoscale update \
--resource-group <resource group name> \
--name <autoscale setting name> \
--add-action email pdavis@contoso.com \
--add-action webhook http://myservice.com/webhook-listerner-123
az monitor autoscale update \
--resource-group <resource group name> \
--name <autoscale setting name> \
--add-action email pdavis@contoso.com \
--add-action webhook http://myservice.com/webhook-listerner-123
Note
You can add mote than one email or webhook notification by using the--add-actionparameter multiple times. While multiple webhook notifications are supported and can be seen in the JSON, the portal only shows the first webhook.
--add-action
For more information, seeaz monitor autoscale.
Use PowerShell to configure notifications.
The following example shows how to configure a webhook and email notification.
Create the webhook object.
Create the webhook object.
Create the notification object.
Create the notification object.
Add the notification object to the autoscale setting usingNew-AzAutoscaleSettingorUpdate-AzAutoscaleSettingcmdlets.
Add the notification object to the autoscale setting usingNew-AzAutoscaleSettingorUpdate-AzAutoscaleSettingcmdlets.
New-AzAutoscaleSetting
Update-AzAutoscaleSetting
# Assumining you have already created a profile object and have a vmssName, resourceGroup, and subscriptionId

 $webhook=New-AzAutoscaleWebhookNotificationObject  `
-Property @{"method"='GET'; "headers"= '"Authorization", "tokenvalue-12345678abcdef"'} `
-ServiceUri "http://myservice.com/webhook-listerner-123"

$notification=New-AzAutoscaleNotificationObject `
-EmailCustomEmail "pdavis@contoso.com" `
-Webhook $webhook


New-AzAutoscaleSetting -Name autoscalesetting2 `
-ResourceGroupName $resourceGroup `
-Location eastus `
-Profile $profile `
-Enabled -Notification $notification `
-PropertiesName "autoscalesetting" `
-TargetResourceUri "/subscriptions/$subscriptionId/resourceGroups/$resourceGroup/providers/Microsoft.Compute/virtualMachineScaleSets/$vmssName"
# Assumining you have already created a profile object and have a vmssName, resourceGroup, and subscriptionId

 $webhook=New-AzAutoscaleWebhookNotificationObject  `
-Property @{"method"='GET'; "headers"= '"Authorization", "tokenvalue-12345678abcdef"'} `
-ServiceUri "http://myservice.com/webhook-listerner-123"

$notification=New-AzAutoscaleNotificationObject `
-EmailCustomEmail "pdavis@contoso.com" `
-Webhook $webhook


New-AzAutoscaleSetting -Name autoscalesetting2 `
-ResourceGroupName $resourceGroup `
-Location eastus `
-Profile $profile `
-Enabled -Notification $notification `
-PropertiesName "autoscalesetting" `
-TargetResourceUri "/subscriptions/$subscriptionId/resourceGroups/$resourceGroup/providers/Microsoft.Compute/virtualMachineScaleSets/$vmssName"
Use Resource Manager templates to configure notifications.
When you use the Resource Manager templates or REST API, include thenotificationselement in yourautoscale settings, for example:
notifications
"notifications": [
      {
        "operation": "Scale",
        "email": {
          "sendToSubscriptionAdministrator": false,
          "sendToSubscriptionCoAdministrators": false,
          "customEmails": [
              "user1@mycompany.com",
              "user2@mycompany.com"
              ]
        },
        "webhooks": [
          {
            "serviceUri": "https://my.webhook.example.com?token=abcd1234",
            "properties": {
              "optional_key1": "optional_value1",
              "optional_key2": "optional_value2"
            }
          }
        ]
      }
    ]
"notifications": [
      {
        "operation": "Scale",
        "email": {
          "sendToSubscriptionAdministrator": false,
          "sendToSubscriptionCoAdministrators": false,
          "customEmails": [
              "user1@mycompany.com",
              "user2@mycompany.com"
              ]
        },
        "webhooks": [
          {
            "serviceUri": "https://my.webhook.example.com?token=abcd1234",
            "properties": {
              "optional_key1": "optional_value1",
              "optional_key2": "optional_value2"
            }
          }
        ]
      }
    ]
operation
Scale
sendToSubscriptionAdministrator
false
sendToSubscriptionCoAdministrators
false
customEmails
webhooks
serviceUri
properties
Authentication in webhooks
The webhook can authenticate by using token-based authentication, where you save the webhook URI with a token ID as a query parameter. For example,https://mysamplealert/webcallback?tokenid=123-abc456-7890&myparameter2=value123.
https://mysamplealert/webcallback?tokenid=123-abc456-7890&myparameter2=value123
Autoscale notification webhook payload schema
When the autoscale notification is generated, the following metadata is included in the webhook payload:
{
    "version": "1.0",
    "status": "Activated",
    "operation": "Scale Out",
    "context": {
        "timestamp": "2023-06-22T07:01:47.8926726Z",
        "id": "/subscriptions/aaaa0a0a-bb1b-cc2c-dd3d-eeeeee4e4e4e/resourceGroups/rg-001/providers/microsoft.insights/autoscalesettings/AutoscaleSettings-002",
        "name": "AutoscaleSettings-002",
        "details": "Autoscale successfully started scale operation for resource 'ScaleableAppServicePlan' from capacity '1' to capacity '2'",
        "subscriptionId": "aaaa0a0a-bb1b-cc2c-dd3d-eeeeee4e4e4e",
        "resourceGroupName": "rg-001",
        "resourceName": "ScaleableAppServicePlan",
        "resourceType": "microsoft.web/serverfarms",
        "resourceId": "/subscriptions/aaaa0a0a-bb1b-cc2c-dd3d-eeeeee4e4e4e/resourceGroups/rg-001/providers/Microsoft.Web/serverfarms/ScaleableAppServicePlan",
        "portalLink": "https://portal.azure.com/#resource/subscriptions/ffffffff-eeee-dddd-cccc-bbbbbbbbbbb0/resourceGroups/rg-001/providers/Microsoft.Web/serverfarms/ScaleableAppServicePlan",
        "resourceRegion": "West Central US",
        "oldCapacity": "1",
        "newCapacity": "2"
    },
    "properties": {
        "key1": "value1",
        "key2": "value2"
    }   
}
{
    "version": "1.0",
    "status": "Activated",
    "operation": "Scale Out",
    "context": {
        "timestamp": "2023-06-22T07:01:47.8926726Z",
        "id": "/subscriptions/aaaa0a0a-bb1b-cc2c-dd3d-eeeeee4e4e4e/resourceGroups/rg-001/providers/microsoft.insights/autoscalesettings/AutoscaleSettings-002",
        "name": "AutoscaleSettings-002",
        "details": "Autoscale successfully started scale operation for resource 'ScaleableAppServicePlan' from capacity '1' to capacity '2'",
        "subscriptionId": "aaaa0a0a-bb1b-cc2c-dd3d-eeeeee4e4e4e",
        "resourceGroupName": "rg-001",
        "resourceName": "ScaleableAppServicePlan",
        "resourceType": "microsoft.web/serverfarms",
        "resourceId": "/subscriptions/aaaa0a0a-bb1b-cc2c-dd3d-eeeeee4e4e4e/resourceGroups/rg-001/providers/Microsoft.Web/serverfarms/ScaleableAppServicePlan",
        "portalLink": "https://portal.azure.com/#resource/subscriptions/ffffffff-eeee-dddd-cccc-bbbbbbbbbbb0/resourceGroups/rg-001/providers/Microsoft.Web/serverfarms/ScaleableAppServicePlan",
        "resourceRegion": "West Central US",
        "oldCapacity": "1",
        "newCapacity": "2"
    },
    "properties": {
        "key1": "value1",
        "key2": "value2"
    }   
}
Feedback
Was this page helpful?
Additional resources