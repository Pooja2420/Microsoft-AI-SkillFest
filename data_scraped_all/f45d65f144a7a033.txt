Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Configure Microsoft Defender for Containers components
Article
2025-03-13
10 contributors
In this article
Microsoft Defender for Containersis the cloud-native solution for securing your containers. It helps protect your clusters whether they're running in:
Azure Kubernetes Service (AKS): Microsoft's managed service for developing, deploying, and managing containerized applications.
Azure Kubernetes Service (AKS): Microsoft's managed service for developing, deploying, and managing containerized applications.
Amazon Elastic Kubernetes Service (EKS) in a connected Amazon Web Services (AWS) account: Amazon's managed service for running Kubernetes on AWS without needing to install, operate, and maintain your own Kubernetes control plane or nodes.
Amazon Elastic Kubernetes Service (EKS) in a connected Amazon Web Services (AWS) account: Amazon's managed service for running Kubernetes on AWS without needing to install, operate, and maintain your own Kubernetes control plane or nodes.
Google Kubernetes Engine (GKE) in a connected Google Cloud Platform (GCP) project: Google's managed environment for deploying, managing, and scaling applications by using GCP infrastructure.
Google Kubernetes Engine (GKE) in a connected Google Cloud Platform (GCP) project: Google's managed environment for deploying, managing, and scaling applications by using GCP infrastructure.
Other Kubernetes distributions(using Azure Arc-enabled Kubernetes): Cloud Native Computing Foundation (CNCF) certified Kubernetes clusters hosted on-premises or on infrastructure as a service (IaaS). For more information, seeContainers support matrix in Defender for Cloud.
Other Kubernetes distributions(using Azure Arc-enabled Kubernetes): Cloud Native Computing Foundation (CNCF) certified Kubernetes clusters hosted on-premises or on infrastructure as a service (IaaS). For more information, seeContainers support matrix in Defender for Cloud.
You can first learn how to connect and help protect your containers in these articles:
Protect your Azure containers with Defender for Containers
Protect your on-premises Kubernetes clusters with Defender for Containers
Protect your Amazon Web Services (AWS) containers with Defender for Containers
Protect your Google Cloud Platform (GCP) containers with Defender for Containers
You can also learn more by watching these videos from theDefender for Cloud in the fieldvideo series:
Microsoft Defender for Containers in a multicloud environment
Protecting containers in GCP with Defender for Containers
Note
Defender for Containers support for Azure Arc-enabled Kubernetes clusters is a preview feature. The preview feature is available on a self-service, opt-in basis.
Previews are providedas isandas available. They're excluded from the service-level agreements and the limited warranty.
To learn more about the supported operating systems, feature availability, outbound proxy, and more, seeContainers support matrix in Defender for Cloud.
Network requirements
Validate that the following endpoints are configured for outbound access so that the Defender sensor can connect to Microsoft Defender for Cloud to send security data and events.
The Defender sensor must connect to the configured Azure Monitor Log Analytics workspace. By default, AKS clusters have unrestricted outbound (egress) internet access. If event egress from the cluster requires the use of an Azure Monitor Private Link Scope (AMPLS), you must:
Define the cluster with Container insights and a Log Analytics workspace.
Define the cluster's Log Analytics workspace as a resource in the AMPLS.
Create in the AMPLS a virtual network private endpoint between the virtual network of the cluster and the Log Analytics resource. The virtual network private endpoint integrates with a private DNS zone.
For instructions, refer toCreate an Azure Monitor Private Link Scope.
Network requirements
Validate that the following endpoints for public cloud deployments are configured for outbound access. Configuring them for outbound access helps ensure that the Defender sensor can connect to Microsoft Defender for Cloud to send security data and events.
You also need to validate theAzure Arc-enabled Kubernetes network requirements.
Enable the plan
In Defender for Cloud, selectEnvironment Settings, and then select the relevant subscription.
In Defender for Cloud, selectEnvironment Settings, and then select the relevant subscription.
On theDefender planspage, toggle the Containers plan toOnand then select itsSettingslink.
On theDefender planspage, toggle the Containers plan toOnand then select itsSettingslink.
Turn on the relevant component.NoteDefender for Containers customers who joined before August 2023 and don't haveK8S API accessturned on as part of Defender cloud security posture management (CSPM) when they enabled the plan must manually enable theK8S API accesstoggle within the Defender for Containers plan.When you turn off Defender for Containers, the components are set toOff. They're not deployed to any more containers, but they're not removed from containers where they're already installed.
Turn on the relevant component.

Note
Defender for Containers customers who joined before August 2023 and don't haveK8S API accessturned on as part of Defender cloud security posture management (CSPM) when they enabled the plan must manually enable theK8S API accesstoggle within the Defender for Containers plan.
When you turn off Defender for Containers, the components are set toOff. They're not deployed to any more containers, but they're not removed from containers where they're already installed.
Enablement method per capability
By default, when you enable the plan through the Azure portal,Microsoft Defender for Containersis configured to automatically enable all capabilities and install all required components to provide the protections that the plan offers. This configuration includes the assignment of a default workspace.
If you don't want to enable all capabilities of the plans, you can manually select which specific capabilities to enable by selecting theSettingslink for theContainersplan. Then, on theSettings & monitoringpage, select the capabilities that you want to enable.
You can also modify this configuration from theDefender planspage after initial configuration of the plan.
For detailed information on the enablement method for each capability, see thesupport matrix.
Roles and permissions
Learn more about theroles for provisioning Defender for Containers extensions.
Assign a custom workspace for the Defender sensor
You canassign a custom workspacethrough Azure Policy.
Manual deployment of the Defender sensor or Azure policy agent without automatic provisioning by using recommendations
Capabilities that require sensor installation can also be deployed on one or more Kubernetes clusters. Use the appropriate recommendation:
To deploy the Defender sensor on specific clusters:
On the Microsoft Defender for CloudRecommendationspage, open theEnable enhanced securitysecurity control or search for one of the preceding recommendations. (You can also use the preceding links to open the recommendation directly.)
On the Microsoft Defender for CloudRecommendationspage, open theEnable enhanced securitysecurity control or search for one of the preceding recommendations. (You can also use the preceding links to open the recommendation directly.)
View all clusters without a sensor by opening theUnhealthytab.
View all clusters without a sensor by opening theUnhealthytab.
Select the clusters where you want to deploy the sensor, and then selectFix.
Select the clusters where you want to deploy the sensor, and then selectFix.
SelectFix X resources.
SelectFix X resources.
Deploy the Defender sensor: All options
You can enable the Defender for Containers plan and deploy all of the relevant components by using the Azure portal, the REST API, or an Azure Resource Manager template. For detailed steps, select the relevant tab.
After the Defender sensor is deployed, a default workspace is automatically assigned. You canassign a custom workspacein place of the default workspace through Azure Policy.
Note
The Defender sensor is deployed to each node to provide the runtime protections and collect signals from those nodes by usingeBPF technology.
Azure portal
REST API
Azure CLI
Resource Manager
Use the Fix button from the Defender for Cloud recommendation
You can use Azure portal pages to enable the Defender for Cloud plan and set up automatic provisioning of all the necessary components for defending your Kubernetes clusters at scale. The process is streamlined.
A dedicated Defender for Cloud recommendation provides:
Visibility into which of your clusters has the Defender sensor deployed.
AFixbutton to deploy the sensor to clusters that don't have it.
To deploy the sensor:
On the Microsoft Defender for CloudRecommendationspage, open theEnable enhanced securitysecurity control.
On the Microsoft Defender for CloudRecommendationspage, open theEnable enhanced securitysecurity control.
Use the filter to find the recommendation namedAzure Kubernetes Service clusters should have Defender profile enabled.TipNotice theFixicon in theActionscolumn.
Use the filter to find the recommendation namedAzure Kubernetes Service clusters should have Defender profile enabled.
Tip
Notice theFixicon in theActionscolumn.
Select the clusters to see the details of the healthy and unhealthy resources (clusters with and without the sensor).
Select the clusters to see the details of the healthy and unhealthy resources (clusters with and without the sensor).
In the list of unhealthy resources, select a cluster. Then selectRemediateto open the pane with the remediation confirmation.
In the list of unhealthy resources, select a cluster. Then selectRemediateto open the pane with the remediation confirmation.
SelectFix X resources.
SelectFix X resources.
Use the REST API to deploy the Defender sensor
To installsecurityProfileon an existing cluster by using the REST API, run the followingPUTcommand:
securityProfile
PUT
PUT https://management.azure.com/subscriptions/{{Subscription ID}}/resourcegroups/{{Resource Group}}/providers/Microsoft.Kubernetes/connectedClusters/{{Cluster Name}}/providers/Microsoft.KubernetesConfiguration/extensions/microsoft.azuredefender.kubernetes?api-version=2020-07-01-preview
PUT https://management.azure.com/subscriptions/{{Subscription ID}}/resourcegroups/{{Resource Group}}/providers/Microsoft.Kubernetes/connectedClusters/{{Cluster Name}}/providers/Microsoft.KubernetesConfiguration/extensions/microsoft.azuredefender.kubernetes?api-version=2020-07-01-preview
Here's the request URI:
https://management.azure.com/subscriptions/{{SubscriptionId}}/resourcegroups/{{ResourceGroup}}/providers/Microsoft.ContainerService/managedClusters/{{ClusterName}}?api-version={{ApiVersion}}
https://management.azure.com/subscriptions/{{SubscriptionId}}/resourcegroups/{{ResourceGroup}}/providers/Microsoft.ContainerService/managedClusters/{{ClusterName}}?api-version={{ApiVersion}}
The request query has these parameters:
SubscriptionId
ResourceGroup
ClusterName
ApiVersion
This is the request body:
{
  "location": "{{Location}}",
  "properties": {
    "securityProfile": {
            "defender": {
                "logAnalyticsWorkspaceResourceId": "{{LAWorkspaceResourceId}}",
                "securityMonitoring": {
                    "enabled": true,
                }
            }
        }
    }
}
{
  "location": "{{Location}}",
  "properties": {
    "securityProfile": {
            "defender": {
                "logAnalyticsWorkspaceResourceId": "{{LAWorkspaceResourceId}}",
                "securityMonitoring": {
                    "enabled": true,
                }
            }
        }
    }
}
The request body has these parameters:
location
properties.securityProfile.defender.securityMonitoring.enabled
properties.securityProfile.defender.logAnalyticsWorkspaceResourceId
Use the Azure CLI to deploy the Defender sensor
Sign in to Azure:az login
az account set --subscription <your-subscription-id>ImportantEnsure that you use the same subscription ID for<your-subscription-id>as the one that's associated with your AKS cluster.
Sign in to Azure:
az login
az account set --subscription <your-subscription-id>
az login
az account set --subscription <your-subscription-id>
Important
Ensure that you use the same subscription ID for<your-subscription-id>as the one that's associated with your AKS cluster.
<your-subscription-id>
Enable the Defender sensor on your containers:Run the following command to create a new cluster with the Defender sensor enabled:az aks create --enable-defender --resource-group <your-resource-group> --name <your-cluster-name>Run the following command to enable the Defender sensor on an existing cluster:az aks update --enable-defender --resource-group <your-resource-group> --name <your-cluster-name>Here are the supported configuration settings on the Defender sensor type:PropertyDescriptionlogAnalyticsWorkspaceResourceIdOptional. Full resource ID of your own Log Analytics workspace.If you don't provide one, the default workspace of the region is used.To get the full resource ID, run the following command to display the list of workspaces in your subscriptions in the default JSON format:az resource list --resource-type Microsoft.OperationalInsights/workspaces -o jsonThe Log Analytics workspace's resource ID has the following syntax:/subscriptions/{your-subscription-id}/resourceGroups/{your-resource-group}/providers/Microsoft.OperationalInsights/workspaces/{your-workspace-name}Learn more inLog Analytics workspaces.You can include these settings in a JSON file and specify the JSON file in theaz aks createandaz aks updatecommands with this parameter:--defender-config <path-to-JSON-file>. The format of the JSON file must be:{"logAnalyticsWorkspaceResourceId": "<workspace-id>"}Learn more about AKS CLI commands inaz aks.
Enable the Defender sensor on your containers:
Run the following command to create a new cluster with the Defender sensor enabled:az aks create --enable-defender --resource-group <your-resource-group> --name <your-cluster-name>
Run the following command to create a new cluster with the Defender sensor enabled:
az aks create --enable-defender --resource-group <your-resource-group> --name <your-cluster-name>
az aks create --enable-defender --resource-group <your-resource-group> --name <your-cluster-name>
Run the following command to enable the Defender sensor on an existing cluster:az aks update --enable-defender --resource-group <your-resource-group> --name <your-cluster-name>
Run the following command to enable the Defender sensor on an existing cluster:
az aks update --enable-defender --resource-group <your-resource-group> --name <your-cluster-name>
az aks update --enable-defender --resource-group <your-resource-group> --name <your-cluster-name>
Here are the supported configuration settings on the Defender sensor type:
logAnalyticsWorkspaceResourceId
az resource list --resource-type Microsoft.OperationalInsights/workspaces -o json
/subscriptions/{your-subscription-id}/resourceGroups/{your-resource-group}/providers/Microsoft.OperationalInsights/workspaces/{your-workspace-name}
You can include these settings in a JSON file and specify the JSON file in theaz aks createandaz aks updatecommands with this parameter:--defender-config <path-to-JSON-file>. The format of the JSON file must be:
az aks create
az aks update
--defender-config <path-to-JSON-file>
{"logAnalyticsWorkspaceResourceId": "<workspace-id>"}
{"logAnalyticsWorkspaceResourceId": "<workspace-id>"}
Learn more about AKS CLI commands inaz aks.
To verify that the sensor was successfully added, run the following command on your machine with thekubeconfigfile pointed to your cluster:kubectl get pods -n kube-systemWhen the sensor is added, you should see a pod calledmicrosoft-defender-XXXXXin theRunningstate. It might take a few minutes for pods to be added.
To verify that the sensor was successfully added, run the following command on your machine with thekubeconfigfile pointed to your cluster:
kubeconfig
kubectl get pods -n kube-system
kubectl get pods -n kube-system
When the sensor is added, you should see a pod calledmicrosoft-defender-XXXXXin theRunningstate. It might take a few minutes for pods to be added.
microsoft-defender-XXXXX
Running
Use Azure Resource Manager to deploy the Defender sensor
To use Azure Resource Manager to deploy the Defender sensor, you need a Log Analytics workspace on your subscription. Learn more inLog Analytics workspaces.
Tip
If you're new to Resource Manager templates, start here:What are Azure Resource Manager templates?.
To installsecurityProfileon an existing cluster by using Resource Manager:
securityProfile
{ 
    "type": "Microsoft.ContainerService/managedClusters", 
    "apiVersion": "2022-06-01", 
    "name": "string", 
    "location": "string",
    "properties": {
        â¦
        "securityProfile": { 
            "defender": { 
                "logAnalyticsWorkspaceResourceId": "logAnalyticsWorkspaceResourceId",
                "securityMonitoring": {
                    "enabled": true
                }
            }
        }
    }
}
{ 
    "type": "Microsoft.ContainerService/managedClusters", 
    "apiVersion": "2022-06-01", 
    "name": "string", 
    "location": "string",
    "properties": {
        â¦
        "securityProfile": { 
            "defender": { 
                "logAnalyticsWorkspaceResourceId": "logAnalyticsWorkspaceResourceId",
                "securityMonitoring": {
                    "enabled": true
                }
            }
        }
    }
}
Enable the plan
In Defender for Cloud, selectSettings, and then select the relevant subscription.
In Defender for Cloud, selectSettings, and then select the relevant subscription.
On theDefender planspage, selectContainers>Settings.
On theDefender planspage, selectContainers>Settings.
Turn on the relevant component.NoteWhen you turn off Defender for Containers, the components are set toOff. They're not deployed to any more containers, but they're not removed from containers where they're already installed.
Turn on the relevant component.

Note
When you turn off Defender for Containers, the components are set toOff. They're not deployed to any more containers, but they're not removed from containers where they're already installed.
By default, when you enable the plan through the Azure portal,Microsoft Defender for Containersis configured to automatically install required components to provide the protections that the plan offers. This configuration includes the assignment of a default workspace.
If you want to disable automatic installation of components during the onboarding process, selectEdit configurationfor theContainersplan. The advanced options appear, and you can disable automatic installation for each component.
You can also modify this configuration from theDefender planspage.
Note
If you choose to disable the plan at any time after you enable it through the portal, you'll need to manually remove Defender for Containers components deployed on your clusters.
You canassign a custom workspacethrough Azure Policy.
If you disable the automatic installation of any component, you can easily deploy the component to one or more clusters by using the appropriate recommendation:
Azure Policy add-on for Kubernetes:Azure Kubernetes Service clusters should have the Azure Policy add-on for Kubernetes installed
Azure Kubernetes Service profile:Azure Kubernetes Service clusters should have Defender profile enabled
Defender extension for Azure Arc-enabled Kubernetes:Azure Arc-enabled Kubernetes clusters should have the Defender extension installed
Azure Policy extension for Azure Arc-enabled Kubernetes:Azure Arc-enabled Kubernetes clusters should have the Azure Policy extension installed
Learn more about theroles for provisioning Defender for Containers extensions.
Prerequisites
Before you deploy the sensor, ensure that you:
Connect the Kubernetes cluster to Azure Arc.
Complete theprerequisites listed in the documentation for generic cluster extensions.
Deploy the Defender sensor
You can deploy the Defender sensor by using a range of methods. For detailed steps, select the relevant tab.
Azure portal
Azure CLI
Resource Manager
REST API
Use the Fix button from the Defender for Cloud recommendation
A dedicated Defender for Cloud recommendation provides:
Visibility into which of your clusters has the Defender sensor deployed.
AFixbutton to deploy the sensor to clusters that don't have it.
To deploy the sensor:
On the Microsoft Defender for CloudRecommendationspage, open theEnable enhanced securitysecurity control.
On the Microsoft Defender for CloudRecommendationspage, open theEnable enhanced securitysecurity control.
Use the filter to find the recommendation namedAzure Arc-enabled Kubernetes clusters should have Microsoft Defender's extension enabled.TipNotice theFixicon in theActionscolumn.
Use the filter to find the recommendation namedAzure Arc-enabled Kubernetes clusters should have Microsoft Defender's extension enabled.

Tip
Notice theFixicon in theActionscolumn.
Select the sensor to see the details of the healthy and unhealthy resources (clusters with and without the sensor).
Select the sensor to see the details of the healthy and unhealthy resources (clusters with and without the sensor).
In the list of unhealthy resources, select a cluster. Then selectRemediateto open the pane with the remediation options.
In the list of unhealthy resources, select a cluster. Then selectRemediateto open the pane with the remediation options.
Select the relevant Log Analytics workspace, and then selectRemediate x resource.
Select the relevant Log Analytics workspace, and then selectRemediate x resource.

Use the Azure CLI to deploy the Defender sensor
Sign in to Azure:az login
az account set --subscription <your-subscription-id>ImportantEnsure that you use the same subscription ID for<your-subscription-id>as the one that you used when connecting your cluster to Azure Arc.
Sign in to Azure:
az login
az account set --subscription <your-subscription-id>
az login
az account set --subscription <your-subscription-id>
Important
Ensure that you use the same subscription ID for<your-subscription-id>as the one that you used when connecting your cluster to Azure Arc.
<your-subscription-id>
Run the following command to deploy the sensor on top of your Azure Arc-enabled Kubernetes cluster:az k8s-extension create --name microsoft.azuredefender.kubernetes --cluster-type connectedClusters --cluster-name <cluster-name> --resource-group <resource-group> --extension-type microsoft.azuredefender.kubernetesHere are the supported configuration settings on the Defender sensor type:PropertyDescriptionlogAnalyticsWorkspaceResourceIDOptional. Full resource ID of your own Log Analytics workspace.If you don't provide one, the default workspace of the region is used.To get the full resource ID, run the following command to display the list of workspaces in your subscriptions in the default JSON format:az resource list --resource-type Microsoft.OperationalInsights/workspaces -o jsonThe Log Analytics workspace resource ID has the following syntax:/subscriptions/{your-subscription-id}/resourceGroups/{your-resource-group}/providers/Microsoft.OperationalInsights/workspaces/{your-workspace-name}Learn more inLog Analytics workspaces.auditLogPathOptional. Full path to the audit log files.If you don't provide one, the default path/var/log/kube-apiserver/audit.logis used.For AKS Engine, the standard path is/var/log/kubeaudit/audit.log.The following command shows an example usage of all optional fields:az k8s-extension create --name microsoft.azuredefender.kubernetes --cluster-type connectedClusters --cluster-name <your-connected-cluster-name> --resource-group <your-rg> --extension-type microsoft.azuredefender.kubernetes --configuration-settings logAnalyticsWorkspaceResourceID=<log-analytics-workspace-resource-id> auditLogPath=<your-auditlog-path>
Run the following command to deploy the sensor on top of your Azure Arc-enabled Kubernetes cluster:
az k8s-extension create --name microsoft.azuredefender.kubernetes --cluster-type connectedClusters --cluster-name <cluster-name> --resource-group <resource-group> --extension-type microsoft.azuredefender.kubernetes
az k8s-extension create --name microsoft.azuredefender.kubernetes --cluster-type connectedClusters --cluster-name <cluster-name> --resource-group <resource-group> --extension-type microsoft.azuredefender.kubernetes
Here are the supported configuration settings on the Defender sensor type:
logAnalyticsWorkspaceResourceID
az resource list --resource-type Microsoft.OperationalInsights/workspaces -o json
/subscriptions/{your-subscription-id}/resourceGroups/{your-resource-group}/providers/Microsoft.OperationalInsights/workspaces/{your-workspace-name}
auditLogPath
/var/log/kube-apiserver/audit.log
/var/log/kubeaudit/audit.log
The following command shows an example usage of all optional fields:
az k8s-extension create --name microsoft.azuredefender.kubernetes --cluster-type connectedClusters --cluster-name <your-connected-cluster-name> --resource-group <your-rg> --extension-type microsoft.azuredefender.kubernetes --configuration-settings logAnalyticsWorkspaceResourceID=<log-analytics-workspace-resource-id> auditLogPath=<your-auditlog-path>
az k8s-extension create --name microsoft.azuredefender.kubernetes --cluster-type connectedClusters --cluster-name <your-connected-cluster-name> --resource-group <your-rg> --extension-type microsoft.azuredefender.kubernetes --configuration-settings logAnalyticsWorkspaceResourceID=<log-analytics-workspace-resource-id> auditLogPath=<your-auditlog-path>
Use Azure Resource Manager to deploy the Defender sensor
To use Azure Resource Manager to deploy the Defender sensor, you need a Log Analytics workspace on your subscription. Learn more inLog Analytics workspaces.
You can use theazure-defender-extension-arm-template.jsonResource Manager template from the Defender for Cloudinstallation examples.
Tip
If you're new to Resource Manager templates, start here:What are Azure Resource Manager templates?.
Use the REST API to deploy the Defender sensor
To use the REST API to deploy the Defender sensor, you need a Log Analytics workspace on your subscription. Learn more inLog Analytics workspaces.
To manually deploy the sensor by using the REST API, run the followingPUTcommand:
PUT
PUT https://management.azure.com/subscriptions/{{Subscription ID}}/resourcegroups/{{Resource Group}}/providers/Microsoft.Kubernetes/connectedClusters/{{Cluster Name}}/providers/Microsoft.KubernetesConfiguration/extensions/microsoft.azuredefender.kubernetes?api-version=2020-07-01-preview
PUT https://management.azure.com/subscriptions/{{Subscription ID}}/resourcegroups/{{Resource Group}}/providers/Microsoft.Kubernetes/connectedClusters/{{Cluster Name}}/providers/Microsoft.KubernetesConfiguration/extensions/microsoft.azuredefender.kubernetes?api-version=2020-07-01-preview
The command includes these parameters:
Subscription ID
Resource Group
Cluster Name
ForAuthentication, your header must have a bearer token (as with other Azure APIs). To get a bearer token, run the following command:
az account get-access-token --subscription <your-subscription-id>
az account get-access-token --subscription <your-subscription-id>
Use the following structure for the body of your message:
{ 
"properties": { 
    "extensionType": "microsoft.azuredefender.kubernetes",
"con    figurationSettings":â¯{ 
        "logAnalytics.workspaceId":"YOUR-WORKSPACE-ID"
    // ,    "auditLogPath":"PATH/TO/AUDITLOG"
    },
    "configurationProtectedSettings": {
        "logAnalytics.key":"YOUR-WORKSPACE-KEY"
    }
    }
}
{ 
"properties": { 
    "extensionType": "microsoft.azuredefender.kubernetes",
"con    figurationSettings":â¯{ 
        "logAnalytics.workspaceId":"YOUR-WORKSPACE-ID"
    // ,    "auditLogPath":"PATH/TO/AUDITLOG"
    },
    "configurationProtectedSettings": {
        "logAnalytics.key":"YOUR-WORKSPACE-KEY"
    }
    }
}
The message body includes these properties:
logAnalytics.workspaceId
logAnalytics.key
auditLogPath
/var/log/kube-apiserver/audit.log
Verify the deployment
To verify that your cluster has the Defender sensor installed on it, follow the steps on one of the following tabs.
Azure portal - Defender for Cloud
Azure portal - Azure Arc
Azure CLI
REST API
Use Defender for Cloud recommendations to verify the status of your sensor
On the Microsoft Defender for CloudRecommendationspage, open theEnable Microsoft Defender for Cloudsecurity control.
On the Microsoft Defender for CloudRecommendationspage, open theEnable Microsoft Defender for Cloudsecurity control.
Select the recommendation namedAzure Arc-enabled Kubernetes clusters should have Microsoft Defender's extension enabled.
Select the recommendation namedAzure Arc-enabled Kubernetes clusters should have Microsoft Defender's extension enabled.

Check that the cluster on which you deployed the sensor is listed asHealthy.
Check that the cluster on which you deployed the sensor is listed asHealthy.
Use the Azure Arc pages to verify the status of your sensor
In the Azure portal, openAzure Arc.
In the Azure portal, openAzure Arc.
In the infrastructure list, selectKubernetes clusters, and then select the specific cluster.
In the infrastructure list, selectKubernetes clusters, and then select the specific cluster.
Open theExtensionspage. The page lists the extensions on the cluster. To confirm whether the Defender sensor was installed correctly, check theInstall statuscolumn.
Open theExtensionspage. The page lists the extensions on the cluster. To confirm whether the Defender sensor was installed correctly, check theInstall statuscolumn.

For more details, select the extension.
For more details, select the extension.

Use the Azure CLI to verify that the sensor is deployed
Run the following command in the Azure CLI:az k8s-extension show --cluster-type connectedClusters --cluster-name <your-connected-cluster-name> --resource-group <your-rg> --name microsoft.azuredefender.kubernetes
Run the following command in the Azure CLI:
az k8s-extension show --cluster-type connectedClusters --cluster-name <your-connected-cluster-name> --resource-group <your-rg> --name microsoft.azuredefender.kubernetes
az k8s-extension show --cluster-type connectedClusters --cluster-name <your-connected-cluster-name> --resource-group <your-rg> --name microsoft.azuredefender.kubernetes
In the response, look for"extensionType": "microsoft.azuredefender.kubernetes"and"installState": "Installed".NoteThe response might show"installState": "Pending"for the first few minutes.
In the response, look for"extensionType": "microsoft.azuredefender.kubernetes"and"installState": "Installed".
"extensionType": "microsoft.azuredefender.kubernetes"
"installState": "Installed"
Note
The response might show"installState": "Pending"for the first few minutes.
"installState": "Pending"
If the state showsInstalled, run the following command on your machine with thekubeconfigfile pointed to your cluster. Then check that all pods under themdcnamespace are in theRunningstate.kubectl get pods -n mdc
If the state showsInstalled, run the following command on your machine with thekubeconfigfile pointed to your cluster. Then check that all pods under themdcnamespace are in theRunningstate.
Installed
kubeconfig
mdc
Running
kubectl get pods -n mdc
kubectl get pods -n mdc
Use the REST API to verify that the sensor is deployed
To confirm a successful deployment, or to validate the status of your sensor at any time:
Run the followingGETcommand:GET https://management.azure.com/subscriptions/{{Subscription ID}}/resourcegroups/{{Resource Group}}/providers/Microsoft.Kubernetes/connectedClusters/{{Cluster Name}}/providers/Microsoft.KubernetesConfiguration/extensions/microsoft.azuredefender.kubernetes?api-version=2020-07-01-preview
Run the followingGETcommand:
GET
GET https://management.azure.com/subscriptions/{{Subscription ID}}/resourcegroups/{{Resource Group}}/providers/Microsoft.Kubernetes/connectedClusters/{{Cluster Name}}/providers/Microsoft.KubernetesConfiguration/extensions/microsoft.azuredefender.kubernetes?api-version=2020-07-01-preview
GET https://management.azure.com/subscriptions/{{Subscription ID}}/resourcegroups/{{Resource Group}}/providers/Microsoft.Kubernetes/connectedClusters/{{Cluster Name}}/providers/Microsoft.KubernetesConfiguration/extensions/microsoft.azuredefender.kubernetes?api-version=2020-07-01-preview
In the response, look in"extensionType": "microsoft.azuredefender.kubernetes"for"installState": "Installed".TipThe response might show"installState": "Pending"for the first few minutes.
In the response, look in"extensionType": "microsoft.azuredefender.kubernetes"for"installState": "Installed".
"extensionType": "microsoft.azuredefender.kubernetes"
"installState": "Installed"
Tip
The response might show"installState": "Pending"for the first few minutes.
"installState": "Pending"
If the state showsInstalled, run the following command on your machine with thekubeconfigfile pointed to your cluster. Then check that all pods under themdcnamespace are in theRunningstate.kubectl get pods -n mdc
If the state showsInstalled, run the following command on your machine with thekubeconfigfile pointed to your cluster. Then check that all pods under themdcnamespace are in theRunningstate.
Installed
kubeconfig
mdc
Running
kubectl get pods -n mdc
kubectl get pods -n mdc
Enable the plan
Important
If you haven't connected an AWS account,connect your AWS account to Microsoft Defender for Cloudbefore you begin the following steps.
If you already enabled the plan on your connector, and you want to change optional configurations or enable new capabilities, go directly to step 4.
To help protect your EKS clusters, enable the Defender for Containers plan on the relevant account connector:
In Defender for Cloud, openEnvironment settings.
In Defender for Cloud, openEnvironment settings.
Select the AWS connector.
Select the AWS connector.

Select theDefender planspage and verify that the toggle for theContainersplan is set toOn.
Select theDefender planspage and verify that the toggle for theContainersplan is set toOn.
To change optional configurations for the plan, selectSettings.TheAgentless threat protectionfeature provides runtime protection to your cluster containers. The feature sends Kubernetes audit logs to Microsoft Defender. Set theAgentless threat protectiontoggle toOnand set the retention period of your audit logs.NoteIf you disable this configuration, control plane threat detection is disabled. Learn more aboutfeature availability.K8S API accesssets permissions to allow API-based discovery of your Kubernetes clusters. To enable, set theK8S API accesstoggle toOn.Registry accesssets permissions to allow vulnerability assessment of images stored in ECR. To enable, set theRegistry accesstoggle toOn.
To change optional configurations for the plan, selectSettings.

TheAgentless threat protectionfeature provides runtime protection to your cluster containers. The feature sends Kubernetes audit logs to Microsoft Defender. Set theAgentless threat protectiontoggle toOnand set the retention period of your audit logs.NoteIf you disable this configuration, control plane threat detection is disabled. Learn more aboutfeature availability.
TheAgentless threat protectionfeature provides runtime protection to your cluster containers. The feature sends Kubernetes audit logs to Microsoft Defender. Set theAgentless threat protectiontoggle toOnand set the retention period of your audit logs.
Note
If you disable this configuration, control plane threat detection is disabled. Learn more aboutfeature availability.
K8S API accesssets permissions to allow API-based discovery of your Kubernetes clusters. To enable, set theK8S API accesstoggle toOn.
K8S API accesssets permissions to allow API-based discovery of your Kubernetes clusters. To enable, set theK8S API accesstoggle toOn.
Registry accesssets permissions to allow vulnerability assessment of images stored in ECR. To enable, set theRegistry accesstoggle toOn.
Registry accesssets permissions to allow vulnerability assessment of images stored in ECR. To enable, set theRegistry accesstoggle toOn.
Continue through the remaining pages of the connector wizard.
Continue through the remaining pages of the connector wizard.
If you're enabling theAgentless discovery for Kubernetesfeature, you need to grant control plane permissions on the cluster. You can grant permissions in one of the following ways:Runthis Python script. The script adds the Defender for Cloud roleMDCContainersAgentlessDiscoveryK8sRoletoaws-auth ConfigMapfor the EKS clusters that you want to onboard.Grant each Amazon EKS cluster theMDCContainersAgentlessDiscoveryK8sRolerole with the ability to interact with the cluster. Sign in to all existing and newly created clusters by usingeksctland run the following script:eksctl create iamidentitymapping \ 
    --cluster my-cluster \ 
    --region region-code \ 
    --arn arn:aws:iam::account:role/MDCContainersAgentlessDiscoveryK8sRole \ 
    --group system:masters\ 
    --no-duplicate-arnsFor more information, seeGrant IAM users access to Kubernetes with EKS access entriesin the Amazon EKS user guide.
If you're enabling theAgentless discovery for Kubernetesfeature, you need to grant control plane permissions on the cluster. You can grant permissions in one of the following ways:
Runthis Python script. The script adds the Defender for Cloud roleMDCContainersAgentlessDiscoveryK8sRoletoaws-auth ConfigMapfor the EKS clusters that you want to onboard.
Runthis Python script. The script adds the Defender for Cloud roleMDCContainersAgentlessDiscoveryK8sRoletoaws-auth ConfigMapfor the EKS clusters that you want to onboard.
MDCContainersAgentlessDiscoveryK8sRole
aws-auth ConfigMap
Grant each Amazon EKS cluster theMDCContainersAgentlessDiscoveryK8sRolerole with the ability to interact with the cluster. Sign in to all existing and newly created clusters by usingeksctland run the following script:eksctl create iamidentitymapping \ 
    --cluster my-cluster \ 
    --region region-code \ 
    --arn arn:aws:iam::account:role/MDCContainersAgentlessDiscoveryK8sRole \ 
    --group system:masters\ 
    --no-duplicate-arnsFor more information, seeGrant IAM users access to Kubernetes with EKS access entriesin the Amazon EKS user guide.
Grant each Amazon EKS cluster theMDCContainersAgentlessDiscoveryK8sRolerole with the ability to interact with the cluster. Sign in to all existing and newly created clusters by usingeksctland run the following script:
MDCContainersAgentlessDiscoveryK8sRole
eksctl create iamidentitymapping \ 
    --cluster my-cluster \ 
    --region region-code \ 
    --arn arn:aws:iam::account:role/MDCContainersAgentlessDiscoveryK8sRole \ 
    --group system:masters\ 
    --no-duplicate-arns
eksctl create iamidentitymapping \ 
    --cluster my-cluster \ 
    --region region-code \ 
    --arn arn:aws:iam::account:role/MDCContainersAgentlessDiscoveryK8sRole \ 
    --group system:masters\ 
    --no-duplicate-arns
For more information, seeGrant IAM users access to Kubernetes with EKS access entriesin the Amazon EKS user guide.
Azure Arc-enabled Kubernetes, the Defender sensor, and Azure Policy for Kubernetes should be installed and running on your EKS clusters. There's a dedicated Defender for Cloud recommendation to install these extensions (and Azure Arc, if necessary):EKS clusters should have Microsoft Defender's extension for Azure Arc installed.Follow the remediation steps provided by the recommendation:
Azure Arc-enabled Kubernetes, the Defender sensor, and Azure Policy for Kubernetes should be installed and running on your EKS clusters. There's a dedicated Defender for Cloud recommendation to install these extensions (and Azure Arc, if necessary):EKS clusters should have Microsoft Defender's extension for Azure Arc installed.
Follow the remediation steps provided by the recommendation:

View recommendations and alerts for your EKS clusters
Tip
You can simulate container alerts by following the instructions inthis blog post.
To view the alerts and recommendations for your EKS clusters, use the filters on the alerts, recommendations, and inventory pages to filter by resource typeAWS EKS Cluster.

Deploy the Defender sensor
To deploy the Defender sensor on your AWS clusters:
Go toMicrosoft Defender for Cloud>Environment settings>Add environment>Amazon Web Services.
Go toMicrosoft Defender for Cloud>Environment settings>Add environment>Amazon Web Services.

Fill in the account details.
Fill in the account details.

Go  toSelect plans, open theContainersplan, and make sureAuto provision Defender's sensor for Azure Arcis set toOn.
Go  toSelect plans, open theContainersplan, and make sureAuto provision Defender's sensor for Azure Arcis set toOn.

Go toConfigure accessand follow the steps there.
Go toConfigure accessand follow the steps there.

After theCloud Formationtemplate is deployed successfully, selectCreate.
After theCloud Formationtemplate is deployed successfully, selectCreate.
Note
You can exclude a specific AWS cluster from automatic provisioning. For sensor deployment, apply thems_defender_container_exclude_agentstag on the resource with the valuetrue. For agentless deployment, apply thems_defender_container_exclude_agentlesstag on the resource with the valuetrue.
ms_defender_container_exclude_agents
true
ms_defender_container_exclude_agentless
true
Enable the plan
Important
If you haven't connected a GCP project,connect your GCP project to Microsoft Defender for Cloud.
To help protect your GKE clusters, use the following steps to enable the Defender for Containers plan on the relevant GCP project.
Note
Verify that you don't have any Azure policies that prevent the Azure Arc installation.
Sign in to theAzure portal.
Sign in to theAzure portal.
Go toMicrosoft Defender for Cloud>Environment settings.
Go toMicrosoft Defender for Cloud>Environment settings.
Select the relevant GCP connector.
Select the relevant GCP connector.

Select theNext: Select plans >button.
Select theNext: Select plans >button.
Ensure that the toggle for theContainersplan isOn.
Ensure that the toggle for theContainersplan isOn.

To change optional configurations for the plan, selectSettings.Agentless threat detection: Enabled by default. This configuration is available at the GCP project level only. It provides agentless collection of the audit log data throughGCP Cloud Loggingto the Microsoft Defender for Cloud back end for further analysis. Defender for Containers requires control plane audit logs to provideruntime threat protection. To send Kubernetes audit logs to Microsoft Defender, set the toggle toOn.NoteIf you disable this configuration, the control plane threat detection feature is also disabled.Learn more about feature availability.Auto provision Defender's sensor for Azure ArcandAuto provision Azure Policy extension for Azure Arc: Enabled by default. You can install Azure Arc-enabled Kubernetes and its extensions on your GKE clusters in three ways:Enable Defender for Containers automatic provisioning at the project level, as explained in the instructions in this section. We recommend this method.Use Defender for Cloud recommendations for per-cluster installation. They appear on the Microsoft Defender for CloudRecommendationspage.Learn how to deploy the solution to specific clusters.Manually installAzure Arc-enabled Kubernetesandextensions.TheK8S API accessfeature provides API-based discovery of your Kubernetes clusters. Set theK8S API accesstoggle toOn.TheRegistry accessfeature provides vulnerability management for images stored in Google registries (Google Artifact Registry and Google Container Registry) and running images on your GKE clusters. Set theRegistry accesstoggle toOn.
To change optional configurations for the plan, selectSettings.

Agentless threat detection: Enabled by default. This configuration is available at the GCP project level only. It provides agentless collection of the audit log data throughGCP Cloud Loggingto the Microsoft Defender for Cloud back end for further analysis. Defender for Containers requires control plane audit logs to provideruntime threat protection. To send Kubernetes audit logs to Microsoft Defender, set the toggle toOn.NoteIf you disable this configuration, the control plane threat detection feature is also disabled.Learn more about feature availability.
Agentless threat detection: Enabled by default. This configuration is available at the GCP project level only. It provides agentless collection of the audit log data throughGCP Cloud Loggingto the Microsoft Defender for Cloud back end for further analysis. Defender for Containers requires control plane audit logs to provideruntime threat protection. To send Kubernetes audit logs to Microsoft Defender, set the toggle toOn.
Note
If you disable this configuration, the control plane threat detection feature is also disabled.Learn more about feature availability.
Auto provision Defender's sensor for Azure ArcandAuto provision Azure Policy extension for Azure Arc: Enabled by default. You can install Azure Arc-enabled Kubernetes and its extensions on your GKE clusters in three ways:Enable Defender for Containers automatic provisioning at the project level, as explained in the instructions in this section. We recommend this method.Use Defender for Cloud recommendations for per-cluster installation. They appear on the Microsoft Defender for CloudRecommendationspage.Learn how to deploy the solution to specific clusters.Manually installAzure Arc-enabled Kubernetesandextensions.
Auto provision Defender's sensor for Azure ArcandAuto provision Azure Policy extension for Azure Arc: Enabled by default. You can install Azure Arc-enabled Kubernetes and its extensions on your GKE clusters in three ways:
Enable Defender for Containers automatic provisioning at the project level, as explained in the instructions in this section. We recommend this method.
Use Defender for Cloud recommendations for per-cluster installation. They appear on the Microsoft Defender for CloudRecommendationspage.Learn how to deploy the solution to specific clusters.
Manually installAzure Arc-enabled Kubernetesandextensions.
TheK8S API accessfeature provides API-based discovery of your Kubernetes clusters. Set theK8S API accesstoggle toOn.
TheK8S API accessfeature provides API-based discovery of your Kubernetes clusters. Set theK8S API accesstoggle toOn.
TheRegistry accessfeature provides vulnerability management for images stored in Google registries (Google Artifact Registry and Google Container Registry) and running images on your GKE clusters. Set theRegistry accesstoggle toOn.
TheRegistry accessfeature provides vulnerability management for images stored in Google registries (Google Artifact Registry and Google Container Registry) and running images on your GKE clusters. Set theRegistry accesstoggle toOn.
Select theCopybutton.
Select theCopybutton.

Select theGCP Cloud Shell >button.
Select theGCP Cloud Shell >button.
Paste the script into the Cloud Shell terminal and run it.
Paste the script into the Cloud Shell terminal and run it.
The connector is updated after the script runs. This process can take up to 8 hours to finish.
Deploy the solution to specific clusters
If you set any of the default automatic provisioning configurations toOffduring theGCP connector onboarding processor afterward, you need to manually install Azure Arc-enabled Kubernetes, the Defender sensor, and Azure Policy for Kubernetes in each of your GKE clusters. Installing them helps ensure that you get the full security value out of Defender for Containers.
You can use two dedicated Defender for Cloud recommendations to install the extensions (and Azure Arc, if necessary):
GKE clusters should have Microsoft Defender's extension for Azure Arc installed
GKE clusters should have the Azure Policy extension installed
Note
When you're installing Arc extensions, you must verify that the provided GCP project is identical to the one in the relevant connector.
To deploy the solution to specific clusters:
Sign in to theAzure portal.
Sign in to theAzure portal.
Go toMicrosoft Defender for Cloud>Recommendations.
Go toMicrosoft Defender for Cloud>Recommendations.
On the Defender for CloudRecommendationspage, search for one of the recommendations by name.
On the Defender for CloudRecommendationspage, search for one of the recommendations by name.

Select an unhealthy GKE cluster.ImportantYou must select clusters one at a time.Don't select the clusters by their hyperlinked names. Select anywhere else in the relevant row.
Select an unhealthy GKE cluster.
Important
You must select clusters one at a time.
Don't select the clusters by their hyperlinked names. Select anywhere else in the relevant row.
Select the name of the unhealthy resource.
Select the name of the unhealthy resource.
SelectFix.
SelectFix.

Defender for Cloud generates a script in the language of your choice:For Linux, selectBash.For Windows, selectPowerShell.
Defender for Cloud generates a script in the language of your choice:
For Linux, selectBash.
For Windows, selectPowerShell.
SelectDownload remediation logic.
SelectDownload remediation logic.
Run the generated script on your cluster.
Run the generated script on your cluster.
Repeat steps 3 through 8 for the other recommendation.
Repeat steps 3 through 8 for the other recommendation.
View your GKE cluster alerts
Sign in to theAzure portal.
Sign in to theAzure portal.
Go toMicrosoft Defender for Cloud>Security alerts.
Go toMicrosoft Defender for Cloud>Security alerts.
Select thebutton.
Select thebutton.
On theFilterdropdown menu, selectResource type.
On theFilterdropdown menu, selectResource type.
On theValuedropdown menu, selectGCP GKE Cluster.
On theValuedropdown menu, selectGCP GKE Cluster.
SelectOk.
SelectOk.
Deploy the Defender sensor
To deploy the Defender sensor on your GCP clusters:
Go toMicrosoft Defender for Cloud>Environment settings>Add environment>Google Cloud Platform.
Go toMicrosoft Defender for Cloud>Environment settings>Add environment>Google Cloud Platform.

Fill in the account details.
Fill in the account details.

Go toSelect plans, open theContainersplan, and make sureAuto provision Defender's sensor for Azure Arcis set toOn.
Go toSelect plans, open theContainersplan, and make sureAuto provision Defender's sensor for Azure Arcis set toOn.

Go toConfigure accessand follow the steps there.
Go toConfigure accessand follow the steps there.

After thegcloudscript runs successfully, selectCreate.
After thegcloudscript runs successfully, selectCreate.
gcloud
Note
You can exclude a specific GCP cluster from automatic provisioning. For sensor deployment, apply thems_defender_container_exclude_agentslabel on the resource with the valuetrue. For agentless deployment, apply thems_defender_container_exclude_agentlesslabel on the resource with the valuetrue.
ms_defender_container_exclude_agents
true
ms_defender_container_exclude_agentless
true
Simulate security alerts from Microsoft Defender for Containers
A full list of supported alerts is available in thereference table of all Defender for Cloud security alerts.
To simulate a security alert:
Run the following command from the cluster:kubectl get pods --namespace=asc-alerttest-662jfi039nThe expected response isNo resource found.Within 30 minutes, Defender for Cloud detects this activity and triggers a security alert.NoteAzure Arc isn't a prerequisite for simulating agentless alerts for Defender for Containers.
Run the following command from the cluster:
kubectl get pods --namespace=asc-alerttest-662jfi039n
kubectl get pods --namespace=asc-alerttest-662jfi039n
The expected response isNo resource found.
No resource found
Within 30 minutes, Defender for Cloud detects this activity and triggers a security alert.
Note
Azure Arc isn't a prerequisite for simulating agentless alerts for Defender for Containers.
In the Azure portal, go toMicrosoft Defender for Cloud>Security alertsand look for the alert on the relevant resource.
In the Azure portal, go toMicrosoft Defender for Cloud>Security alertsand look for the alert on the relevant resource.

Remove the Defender sensor
To remove this (or any) Defender for Cloud extension, it's not enough to turn off automatic provisioning:
Enabling automatic provisioning potentially affectsexistingandfuturemachines.
Disabling automatic provisioning for an extension affects only thefuturemachines. Nothing is uninstalled when you disable automatic provisioning.
Note
To disable the Defender for Containers plan entirely, go toEnvironment settingsand turn offMicrosoft Defender for Containers.
Nevertheless, to ensure that the Defender for Containers components aren't automatically provisioned to your resources from now on, disable automatic provisioning of the extensions.
You can remove the extension from currently running machines by using the Azure portal, the Azure CLI, or the REST API, as explained on the following tabs.
Azure portal - Arc
Azure CLI
REST API
Use the Azure portal to remove the extension
In the Azure portal, open Azure Arc.
In the Azure portal, open Azure Arc.
In the infrastructure list, selectKubernetes clusters, and then select the specific cluster.
In the infrastructure list, selectKubernetes clusters, and then select the specific cluster.
Open theExtensionspage, which lists extensions on the cluster.
Open theExtensionspage, which lists extensions on the cluster.
Select the extension, and then selectUninstall.
Select the extension, and then selectUninstall.

Use the Azure CLI to remove the Defender sensor
Remove the Azure Arc extension for Microsoft Defender for Kubernetes by using the following commands:az login
az account set --subscription <subscription-id>
az k8s-extension delete --cluster-type connectedClusters --cluster-name <your-connected-cluster-name> --resource-group <your-rg> --name microsoft.azuredefender.kubernetes --yesRemoving the extension might take a few minutes. We recommend that you wait before you try to verify that it was successful.
Remove the Azure Arc extension for Microsoft Defender for Kubernetes by using the following commands:
az login
az account set --subscription <subscription-id>
az k8s-extension delete --cluster-type connectedClusters --cluster-name <your-connected-cluster-name> --resource-group <your-rg> --name microsoft.azuredefender.kubernetes --yes
az login
az account set --subscription <subscription-id>
az k8s-extension delete --cluster-type connectedClusters --cluster-name <your-connected-cluster-name> --resource-group <your-rg> --name microsoft.azuredefender.kubernetes --yes
Removing the extension might take a few minutes. We recommend that you wait before you try to verify that it was successful.
To verify that you successfully removed the extension, run the following commands:az k8s-extension show --cluster-type connectedClusters --cluster-name <your-connected-cluster-name> --resource-group <your-rg> --name microsoft.azuredefender.kubernetes
To verify that you successfully removed the extension, run the following commands:
az k8s-extension show --cluster-type connectedClusters --cluster-name <your-connected-cluster-name> --resource-group <your-rg> --name microsoft.azuredefender.kubernetes
az k8s-extension show --cluster-type connectedClusters --cluster-name <your-connected-cluster-name> --resource-group <your-rg> --name microsoft.azuredefender.kubernetes
Validate that there are no pods under themdcnamespace on the cluster. Run the following command with thekubeconfigfile pointed to your cluster:kubectl get pods -n mdcDeletion of the pods might take a few minutes.
Validate that there are no pods under themdcnamespace on the cluster. Run the following command with thekubeconfigfile pointed to your cluster:
mdc
kubeconfig
kubectl get pods -n mdc
kubectl get pods -n mdc
Deletion of the pods might take a few minutes.
Use the REST API to remove the Defender sensor
To remove the extension by using the REST API, run the followingDELETEcommand:
DELETE
DELETE https://management.azure.com/subscriptions/{{Subscription ID}}/resourcegroups/{{Resource Group}}/providers/Microsoft.Kubernetes/connectedClusters/{{Cluster Name}}/providers/Microsoft.KubernetesConfiguration/extensions/microsoft.azuredefender.kubernetes?api-version=2020-07-01-preview
DELETE https://management.azure.com/subscriptions/{{Subscription ID}}/resourcegroups/{{Resource Group}}/providers/Microsoft.Kubernetes/connectedClusters/{{Cluster Name}}/providers/Microsoft.KubernetesConfiguration/extensions/microsoft.azuredefender.kubernetes?api-version=2020-07-01-preview
The command includes these parameters:
Subscription ID
Resource Group
Cluster Name
ForAuthentication, your header must have a bearer token (as with other Azure APIs). To get a bearer token, run the following command:
az account get-access-token --subscription <your-subscription-id>
az account get-access-token --subscription <your-subscription-id>
The request might take several minutes to complete.
Set a default Log Analytics workspace for AKS
The Defender sensor uses the Log Analytics workspace as a data pipeline to send data from the cluster to Defender for Cloud. The workspace doesn't retain any of the data. As a result, users aren't billed in this use case.
The Defender sensor uses a default Log Analytics workspace. If you don't have a default Log Analytics workspace, Defender for Cloud creates a new resource group and default workspace when you install the Defender sensor. The default workspace is based on yourregion.
The naming convention for the default Log Analytics workspace and resource group is:
Workspace: DefaultWorkspace-[subscription-ID]-[geo]
Resource group: DefaultResourceGroup-[geo]
Assign a custom workspace
When you enable automatic provisioning, a default workspace is automatically assigned. You can assign a custom workspace through Azure Policy.
To check if you have a workspace assigned:
Sign in to theAzure portal.
Sign in to theAzure portal.
Search for and selectPolicy.
Search for and selectPolicy.

SelectDefinitions.
SelectDefinitions.
Search for policy ID64def556-fbad-4622-930e-72d1d5589bf5.
Search for policy ID64def556-fbad-4622-930e-72d1d5589bf5.
64def556-fbad-4622-930e-72d1d5589bf5

SelectConfigure Azure Kubernetes Service clusters to enable Defender profile.
SelectConfigure Azure Kubernetes Service clusters to enable Defender profile.
SelectAssignments.
SelectAssignments.

Use one of the next sections in this article as follows:If the policy isn't yet assigned to the relevant scope, follow theCreate a new assignment with a custom workspacesteps.If the policy is already assigned and you want to change it to use a custom workspace, follow theUpdate an assignment with a custom workspacesteps.
Use one of the next sections in this article as follows:
If the policy isn't yet assigned to the relevant scope, follow theCreate a new assignment with a custom workspacesteps.
If the policy is already assigned and you want to change it to use a custom workspace, follow theUpdate an assignment with a custom workspacesteps.
If the policy isn't yet assigned, theAssignmentstab shows the number0.

To assign a custom workspace:
SelectAssign.
SelectAssign.
On theParameterstab, clear theOnly show parameters that need input or reviewoption.
On theParameterstab, clear theOnly show parameters that need input or reviewoption.
Select aLogAnalyticsWorkspaceResourceIdvalue from the dropdown menu.
Select aLogAnalyticsWorkspaceResourceIdvalue from the dropdown menu.

SelectReview + create.
SelectReview + create.
SelectCreate.
SelectCreate.
If the policy is assigned to a workspace, theAssignmentstab shows the number1.

Note
If you have more than one subscription, the number might be higher.
To assign a custom workspace:
Select the relevant assignment.
Select the relevant assignment.

SelectEdit assignment.
SelectEdit assignment.
On theParameterstab, clear theOnly show parameters that need input or reviewoption.
On theParameterstab, clear theOnly show parameters that need input or reviewoption.
Select aLogAnalyticsWorkspaceResourceIdvalue from the dropdown menu.
Select aLogAnalyticsWorkspaceResourceIdvalue from the dropdown menu.

SelectReview + save.
SelectReview + save.
SelectSave.
SelectSave.
Default Log Analytics workspace for Azure Arc
The Defender sensor uses the Log Analytics workspace as a data pipeline to send data from the cluster to Defender for Cloud. The workspace doesn't retain any of the data. As a result, users aren't billed in this use case.
The Defender sensor uses a default Log Analytics workspace. If you don't have a default Log Analytics workspace, Defender for Cloud creates a new resource group and default workspace when you install the Defender sensor. The default workspace is based on yourregion.
The naming convention for the default Log Analytics workspace and resource group is:
Workspace: DefaultWorkspace-[subscription-ID]-[geo]
Resource group: DefaultResourceGroup-[geo]
Assign a custom workspace
When you enable automatic provisioning, a default workspace is automatically assigned. You can assign a custom workspace through Azure Policy.
To check if you have a workspace assigned:
Sign in to theAzure portal.
Sign in to theAzure portal.
Search for and selectPolicy.
Search for and selectPolicy.

SelectDefinitions.
SelectDefinitions.
Search for policy ID708b60a6-d253-4fe0-9114-4be4c00f012c.
Search for policy ID708b60a6-d253-4fe0-9114-4be4c00f012c.
708b60a6-d253-4fe0-9114-4be4c00f012c

SelectConfigure Azure Arc enabled Kubernetes clusters to install Microsoft Defender for Cloud extension.
SelectConfigure Azure Arc enabled Kubernetes clusters to install Microsoft Defender for Cloud extension.
SelectAssignments.
SelectAssignments.

Use one of the next sections in this article as follows:If the policy isn't yet assigned to the relevant scope, follow theCreate a new assignment with a custom workspacesteps.If the policy is already assigned and you want to change it to use a custom workspace, follow theUpdate an assignment with a custom workspacesteps.
Use one of the next sections in this article as follows:
If the policy isn't yet assigned to the relevant scope, follow theCreate a new assignment with a custom workspacesteps.
If the policy is already assigned and you want to change it to use a custom workspace, follow theUpdate an assignment with a custom workspacesteps.
If the policy isn't yet assigned, theAssignmentstab shows the number0.

To assign a custom workspace:
SelectAssign.
SelectAssign.
On theParameterstab, clear theOnly show parameters that need input or reviewoption.
On theParameterstab, clear theOnly show parameters that need input or reviewoption.
Select aLogAnalyticsWorkspaceResourceIdvalue from the dropdown menu.
Select aLogAnalyticsWorkspaceResourceIdvalue from the dropdown menu.

SelectReview + create.
SelectReview + create.
SelectCreate.
SelectCreate.
If the policy is assigned to a workspace, theAssignmentstab shows the number1.
Note
If you have more than one subscription, the number might be higher. If you have a number1or higher but the assignment isn't on the relevant scope, follow theCreate a new assignment with a custom workspacesteps.

To assign a custom workspace:
Select the relevant assignment.
Select the relevant assignment.

SelectEdit assignment.
SelectEdit assignment.
On theParameterstab, clear theOnly show parameters that need input or reviewoption.
On theParameterstab, clear theOnly show parameters that need input or reviewoption.
Select aLogAnalyticsWorkspaceResourceIdvalue from the dropdown menu.
Select aLogAnalyticsWorkspaceResourceIdvalue from the dropdown menu.

SelectReview + save.
SelectReview + save.
SelectSave.
SelectSave.
Remove the Defender sensor
To remove this (or any) Defender for Cloud extension, it's not enough to turn off automatic provisioning:
Enabling automatic provisioning potentially affectsexistingandfuturemachines.
Disabling automatic provisioning for an extension affects only thefuturemachines. Nothing is uninstalled when you disable automatic provisioning.
Note
To disable the Defender for Containers plan entirely, go toEnvironment settingsand turn offMicrosoft Defender for Containers.
Nevertheless, to ensure that the Defender for Containers components aren't automatically provisioned to your resources from now on, disable automatic provisioning of the extensions.
You can remove the extension from currently running machines by using the REST API, the Azure CLI, or a Resource Manager template, as explained on the following tabs.
REST API
Azure CLI
Resource Manager
Use the REST API to remove the Defender sensor from AKS
To remove the extension by using the REST API, run the followingPUTcommand:
PUT
https://management.azure.com/subscriptions/{{SubscriptionId}}/resourcegroups/{{ResourceGroup}}/providers/Microsoft.ContainerService/managedClusters/{{ClusterName}}?api-version={{ApiVersion}}
https://management.azure.com/subscriptions/{{SubscriptionId}}/resourcegroups/{{ResourceGroup}}/providers/Microsoft.ContainerService/managedClusters/{{ClusterName}}?api-version={{ApiVersion}}
The command includes these parameters:
SubscriptionId
ResourceGroup
ClusterName
ApiVersion
This is the request body:
{
  "location": "{{Location}}",
  "properties": {
    "securityProfile": {
            "defender": {
                "securityMonitoring": {
                    "enabled": false
                }
            }
        }
    }
}
{
  "location": "{{Location}}",
  "properties": {
    "securityProfile": {
            "defender": {
                "securityMonitoring": {
                    "enabled": false
                }
            }
        }
    }
}
The request body has these parameters:
location
properties.securityProfile.defender.securityMonitoring.enabled
Use the Azure CLI to remove the Defender sensor
Run the following commands:az login
az account set --subscription <subscription-id>
az aks update --disable-defender --resource-group <your-resource-group> --name <your-cluster-name>Removing the extension might take a few minutes.
Run the following commands:
az login
az account set --subscription <subscription-id>
az aks update --disable-defender --resource-group <your-resource-group> --name <your-cluster-name>
az login
az account set --subscription <subscription-id>
az aks update --disable-defender --resource-group <your-resource-group> --name <your-cluster-name>
Removing the extension might take a few minutes.
To verify that you successfully removed the extension, run the following command:kubectl get pods -n kube-system | grep microsoft-defenderWhen the extension is removed, theget podscommand doesn't return any pods. Deletion of the pods might take a few minutes.
To verify that you successfully removed the extension, run the following command:
kubectl get pods -n kube-system | grep microsoft-defender
kubectl get pods -n kube-system | grep microsoft-defender
When the extension is removed, theget podscommand doesn't return any pods. Deletion of the pods might take a few minutes.
get pods
Use Azure Resource Manager to remove the Defender sensor from AKS
To use Azure Resource Manager to remove the Defender sensor, you need a Log Analytics workspace on your subscription. Learn more inLog Analytics workspaces.
Tip
If you're new to Resource Manager templates, start here:What are Azure Resource Manager templates?.
The relevant template and parameters to remove the Defender sensor from AKS are:
{ 
    "type": "Microsoft.ContainerService/managedClusters", 
    "apiVersion": "2022-06-01", 
    "name": "string", 
    "location": "string",
    "properties": {
        â¦
        "securityProfile": { 
            "defender": { 
                "securityMonitoring": {
                    "enabled": false
                }
            }
        }
    }
}
{ 
    "type": "Microsoft.ContainerService/managedClusters", 
    "apiVersion": "2022-06-01", 
    "name": "string", 
    "location": "string",
    "properties": {
        â¦
        "securityProfile": { 
            "defender": { 
                "securityMonitoring": {
                    "enabled": false
                }
            }
        }
    }
}
Next steps
Now that you enabled Defender for Containers, you can:
Scan your supported environment images for vulnerabilities with Microsoft Defender Vulnerability Management
Check outcommon questionsabout Defender for Containers.
Feedback
Was this page helpful?
Additional resources