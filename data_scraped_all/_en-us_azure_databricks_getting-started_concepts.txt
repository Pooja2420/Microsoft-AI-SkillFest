Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Azure Databricks concepts
Article
2025-01-28
10 contributors
In this article
This article introduces fundamental concepts you need to understand in order to use Azure Databricks effectively.
Accounts and workspaces
In Azure Databricks, aworkspaceis an Azure Databricks deployment in the cloud that functions as an environment for your team to access Databricks assets. Your organization can choose to have either multiple workspaces or just one, depending on its needs.
An Azure Databricksaccountrepresents a single entity that can include multiple workspaces. Accounts enabled forUnity Catalogcan be used to manage users and their access to data centrally across all of the workspaces in the account.
Billing: Databricks units (DBUs)
Azure Databricks bills based on Databricks units (DBUs), which are units of processing capability per hour based on VM instance type.
See theAzure Databricks pricing page.
Authentication and authorization
This section describes concepts that you need to know when you manage Azure Databricks identities and their access to Azure Databricks assets.
User
A unique individual who has access to the system. User identities are represented by email addresses. SeeManage users.
Service principal
A service identity for use with jobs, automated tools, and systems such as scripts, apps, and CI/CD platforms. Service principals are represented by an application ID. SeeService principals.
Group
A collection of identities. Groups simplify identity management, making it easier to assign access to workspaces, data, and other securable objects. All Databricks identities can be assigned as members of groups. SeeManage groups.
Access control list (ACL)
A list of permissions attached to the workspace, cluster, job, table, or experiment. An ACL specifies which users or system processes are granted access to the objects, as well as what operations are allowed on the assets. Each entry in a typical ACL specifies a subject and an operation. SeeAccess control lists.
Personal access token (PAT)
A personal access token is a string used to authenticate REST API calls,Technology partnersconnections, and other tools. SeeAzure Databricks personal access token authentication.
Microsoft Entra ID tokens can also be used to authenticate to the REST API.
Azure Databricks interfaces
This section describes the interfaces for accessing your assets in Azure Databricks.
UI
The Azure Databricks UI is a graphical interface for interacting with features, such as workspace folders and their contained objects, data objects, and computational resources.
REST API
The Databricks REST API provides endpoints for modifying or requesting information about Azure Databricks account and workspace objects. Seeaccount referenceandworkspace reference.
SQL REST API
The SQL REST API allows you to automate tasks on SQL objects. SeeSQL API.
CLI
TheDatabricks CLIis hosted onGitHub. The CLI is built on top of the Databricks REST API.
Data management
This section describes the tools and logical objects used to organize and govern data on Azure Databricks. SeeDatabase objects in Azure Databricks.
Unity Catalog
Unity Catalog is a unified governance solution for data and AI assets on Azure Databricks that provides centralized access control, auditing, lineage, and data discovery capabilities across Databricks workspaces. SeeWhat is Unity Catalog?.
Catalog
Catalogs are the highest level container for organizing and isolating data on Azure Databricks. You can share catalogs across workspaces within the same region and account. SeeWhat are catalogs in Azure Databricks?.
Schema
Schemas, also known as databases, are contained within catalogs and provide a more granular level of organization. They contain database objects and AI assets, such as volumes, tables, functions, and models. SeeWhat are schemas in Azure Databricks?.
Table
Tables organize and govern access to structured data. You query tables with Apache Spark SQL and Apache Spark APIs. SeeWhat is a table?.
View
A view is a read-only object derived from one or more tables and views. Views save queries that are defined against tables. SeeWhat is a view?.
Volume
Volumes represent a logical volume of storage in a cloud object storage location and organize and govern access to non-tabular data. Databricks recommends using volumes for managing all access to non-tabular data on cloud object storage. SeeWhat are Unity Catalog volumes?.
Delta table
By default, all tables created in Azure Databricks are Delta tables. Delta tables are based on theDelta Lake open source project, a framework for high-performance ACID table storage over cloud object stores. A Delta table stores data as a directory of files on cloud object storage and registers table metadata to the metastore within a catalog and schema.
Find out more abouttechnologies branded as Delta.
Metastore
Unity Catalog provides an account-level metastore that registers metadata about data, AI, and permissions about catalogs, schemas, and tables. SeeMetastores.
Azure Databricks provides a legacy Hive metastore for customers that have not adopted Unity Catalog. SeeHive metastore table access control (legacy).
Catalog Explorer
Catalog Explorer allows you to explore and manage data and AI assets, including schemas (databases), tables, models, volumes (non-tabular data), functions, and registered ML models. You can use it to find data objects and owners, understand data relationships across tables, and manage permissions and sharing. SeeWhat is Catalog Explorer?.
DBFS root
Important
Storing and accessing data using DBFS root or DBFS mounts is a deprecated pattern and not recommended by Databricks. Instead, Databricks recommends using Unity Catalog to manage access to all data. SeeWhat is Unity Catalog?.
The DBFS root is a storage location available to all users by default. SeeWhat is DBFS?.
Computation management
This section describes concepts that you need to know to run computations in Azure Databricks.
Cluster
A set of computation resources and configurations on which you run notebooks and jobs. There are two types of clusters: all-purpose and job. SeeCompute.
You create anall-purpose clusterusing the UI, CLI, or REST API. You can manually terminate and restart an all-purpose cluster. Multiple users can share such clusters to do collaborative interactive analysis.
The Azure Databricks job scheduler createsa job clusterwhen you run a job on anew job clusterand terminates the cluster when the job is complete. Youcannotrestart an job cluster.
Pool
A set of idle, ready-to-use instances that reduce cluster start and auto-scaling times. When attached to a pool, a cluster allocates its driver and worker nodes from the pool. SeePool configuration reference.
If the pool does not have sufficient idle resources to accommodate the clusterâs request, the pool expands by allocating new instances from the instance provider. When an attached cluster is terminated, the instances it used are returned to the pool and can be reused by a different cluster.
Databricks runtime
The set of core components that run on the clusters managed by Azure Databricks. SeeCompute. Azure Databricks has the following runtimes:
Databricks Runtimeincludes Apache Spark but also adds a number of components and updates that substantially improve the usability, performance, and security of big data analytics.
Databricks Runtime for Machine Learningis built on Databricks Runtime and provides prebuilt machine learning infrastructure that is integrated with all of the capabilities of the Azure Databricks workspace. It contains multiple popular libraries, including TensorFlow, Keras, PyTorch, and XGBoost.
Workflows
TheWorkflowsworkspace UI provides entry to the Jobs and DLT Pipelines UIs, which are tools that allow you orchestrate and schedule workflows.
Jobs
A non-interactive mechanism for orchestrating and scheduling notebooks, libraries, and other tasks. SeeOrchestration using Databricks Jobs
Pipelines
DLT Pipelines provide a declarative framework for building reliable, maintainable, and testable data processing pipelines. SeeDLT.
Workload
Workload is the amount of processing capability needed to perform a task or group of tasks. Azure Databricks identifies two types of workloads: data engineering (job) and data analytics (all-purpose).
Data engineeringAn (automated) workload runs ona job clusterwhich the Azure Databricks job scheduler creates for each workload.
Data analyticsAn (interactive) workload runs on anall-purpose cluster. Interactive workloads typically run commands within an Azure Databricksnotebook. However, running ajobon anexisting all-purposecluster is also treated as an interactive workload.
Execution context
The state for a readâevalâprint loop (REPL) environment for each supported programming language. The languages supported are Python, R, Scala, and SQL.
Data engineering
Data engineering tools aid collaboration among data scientists, data engineers, data analysts, and machine learning engineers.
Workspace
Aworkspaceis an environment for accessing all of your Azure Databricks assets. A workspace organizes objects (notebooks, libraries, dashboards, and experiments) intofoldersand provides access to data objects and computational resources.
Notebook
A web-based interface for creating data science and machine learning workflows that can contain runnable commands, visualizations, and narrative text. SeeIntroduction to Databricks notebooks.
Library
A package of code available to the notebook or job running on your cluster. Databricks runtimes include many libraries, and you can also upload your own. SeeLibraries.
Git folder (formerly Repos)
A folder whose contents are co-versioned together by syncing them to a remote Git repository.Databricks Git foldersintegrate with Git to provide source and version control for your projects.
AI and machine learning
Databricks provides an integrated end-to-end environment with managed services for developing and deploying AI and machine learning applications.
Mosaic AI
The brand name for products and services from Databricks Mosaic AI Research, a team of researchers and engineers responsible for Databricks biggest breakthroughs in generative AI. Mosaic AI products include the ML and AI features in Databricks. SeeMosaic Research.
Machine learning runtime
To help you develop ML and AI models, Databricks provides a Databricks Runtime for Machine Learning, which automates compute creation with pre-built machine learning and deep learning infrastructure including the most common ML and DL libraries. It also has built-in, pre-configured GPU support including drivers and supporting libraries. Browse to information about the latest runtime releases fromDatabricks Runtime release notes versions and compatibility.
Experiment
A collection ofMLflow runsfor training a machine learning model. SeeOrganize training runs with MLflow experiments.
Features
Features are an important component of ML models. A feature store enables feature sharing and discovery across your organization and also ensures that the same feature computation code is used for model training and inference. SeeFeature engineering and serving.
Generative AI models
Databricks supports the exploration, development, and deployment of generative AI models, including:
AI playground, a chat-like environment in the workspace where you can test, prompt, and compare LLMs. SeeChat with LLMs and prototype generative AI apps using AI Playground.
A built-in set of pre-configured foundation models that you can query:SeePay-per-token Foundation Model APIs.See[Recommended] Deploy foundation models from Unity Catalogfor foundation models you can serve with a single click.
SeePay-per-token Foundation Model APIs.
See[Recommended] Deploy foundation models from Unity Catalogfor foundation models you can serve with a single click.
Third-party hosted LLMs, calledexternal models. These models are meant to be used as-is.
Capabilities to customize a foundation model to optimize its performance for your specific application (often called fine-tuning). SeeFoundation Model Fine-tuning.
Model registry
Databricks provides a hosted version of MLflow Model Registry in Unity Catalog. Models registered in Unity Catalog inherit centralized access control, lineage, and cross-workspace discovery and access. SeeManage model lifecycle in Unity Catalog.
Model serving
Mosaic AI Model Serving provides a unified interface to deploy, govern, and query AI models. Each model you serve is available as a REST API that you can integrate into your web or client application. With Mosaic AI Model Serving, you can deploy your own models, foundation models, or third-party models hosted outside of Databricks. SeeDeploy models using Mosaic AI Model Serving.
Data warehousing
Data warehousing refers to collecting and storing data from multiple sources so it can be quickly accessed for business insights and reporting. Databricks SQL is the collection of services that bring data warehousing capabilities and performance to your existing data lakes. SeeWhat is data warehousing on Azure Databricks?.
Query
A query is a valid SQL statement that allows you to interact with your data. You can author queries using the in-platformSQL editor, or connect using aSQL connector, driver, or API. SeeAccess and manage saved queriesto learn more about how to work with queries.
SQL warehouse
A computation resource on which you run SQL queries. There are three types of SQL warehouses: Classic, Pro, and Serverless. Azure Databricks recommends using serverless warehouses where available. SeeSQL warehouse typesto compare available features for each warehouse type.
Query history
A list of executed queries and their performance characteristics. Query history allows you to monitor query performance, helping you identify bottlenecks and optimize query runtimes. SeeQuery history.
Visualization
A graphical presentation of the result of running a query. SeeVisualizations in Databricks notebooks.
Dashboard
A presentation of data visualizations and commentary. You can use dashboards to automatically send reports to anyone in your Azure Databricks account. Use the Databricks Assistant to help you build visualizations based on natural language prompts. SeeDashboards. You can also create a dashboard from a notebook. SeeDashboards in notebooks.
For legacy dashboards, seeLegacy dashboards.
Important
Databricks recommends using AI/BI dashboards (formerly Lakeview dashboards). Earlier versions of dashboards, previously referred to as Databricks SQL dashboards are now calledlegacy dashboards.
End of support timeline:
As of April 7, 2025: Official support for the legacy version of dashboards has ended. You can no longer create new legacy dashboards. Only critical security issues and service outages will be addressed.
As of April 7, 2025: Official support for the legacy version of dashboards has ended. You can no longer create new legacy dashboards. Only critical security issues and service outages will be addressed.
November 3, 2025: Databricks will begin archiving legacy dashboards that have not been accessed in the past six months. Archived dashboards will no longer be accessible, and the archival process will occur on a rolling basis. Access to actively used dashboards will remain unchanged.Databricks will work with customers to develop migration plans for active legacy dashboards after November 3, 2025.
November 3, 2025: Databricks will begin archiving legacy dashboards that have not been accessed in the past six months. Archived dashboards will no longer be accessible, and the archival process will occur on a rolling basis. Access to actively used dashboards will remain unchanged.
Databricks will work with customers to develop migration plans for active legacy dashboards after November 3, 2025.
Convert legacy dashboards using the migration tool or REST API. SeeClone a legacy dashboard to an AI/BI dashboardfor instructions on using the built-in migration tool. SeeDashboard tutorialsfor tutorials on creating and managing dashboards using the REST API.
Convert legacy dashboards using the migration tool or REST API. SeeClone a legacy dashboard to an AI/BI dashboardfor instructions on using the built-in migration tool. SeeDashboard tutorialsfor tutorials on creating and managing dashboards using the REST API.
Feedback
Was this page helpful?
Additional resources