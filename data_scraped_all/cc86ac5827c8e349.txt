Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Azure Container Apps environments
Article
2025-04-10
6 contributors
In this article
A Container Apps environment is a secure boundary around one or more container apps and jobs. The Container Apps runtime manages each environment by handling OS upgrades, scale operations, failover procedures, and resource balancing.
Environments include the following features:

Depending on your needs, you might want to use one or more Container Apps environments. Use the following criteria to help you decide if you should use a single or multiple environments.
Single environment
Use a single environment when you want to:
Manage related services
Deploy different applications to the same virtual network
Instrument Dapr applications that communicate via the Dapr service invocation API
Share the same Dapr configuration among applications
Share the same log destination among applications
Multiple environments
Use more than one environment when you want two or more applications to:
Never share the same compute resources
Not communicate via the Dapr service invocation API
Be isolated due to team or environment usage (for example, test vs. production)
Types
Logs
Logging is an essential part of monitoring and troubleshooting container apps running in your environment. Azure Container Apps environments provide centralized logging capabilities through integration with Azure Monitor and Application Insights.
By default, all container apps within an environment send logs to a common Log Analytics workspace, making it easier to query and analyze logs across multiple apps. These logs include:
Containerstdout/stderrstreams
stdout
stderr
Container app scaling events
Dapr sidecar logs (if Dapr is enabled)
System-level metrics and events
Log configuration properties
You can configure the following properties at the environment level through the API:
properties.appLogsConfiguration
properties.containerAppsConfiguration.daprAIInstrumentationKey
Policies
Azure Container Apps environments are automatically deleted if one of the following conditions is detected for longer than 90 days:
In an idle state (no active container apps or jobs running in the environment)
In a failed state due to VNet or Azure Policy configuration
Is blocking infrastructure updates due to VNet or Azure Policy configuration
These policies help ensure efficient resource use and maintain service quality. To prevent automatic deletion:
Keep at least one active container app or job running in your environment
Ensure your VNet and Azure Policy configurations are correctly set up
Respond to any notifications about your environment being in a problematic state
You can monitor the status of your environments through Azure Monitor alerts or by regularly checking the environment status in the Azure portal or via Azure CLI.
Limits and quotas
Understanding the limits and quotas for Container Apps environments helps you plan your application architecture effectively.
For the most up-to-date limits and quotas, refer to theAzure Container Apps service limits.
Related content
Containers in Azure Container Apps
Networking in Container Apps
Feedback
Was this page helpful?
Additional resources