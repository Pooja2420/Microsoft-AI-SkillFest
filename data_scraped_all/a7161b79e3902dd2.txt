Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Enable virtual network integration in Azure App Service
Article
2025-02-10
3 contributors
In this article
Through integrating with an Azure virtual network from yourAzure App Service app, you can reach private resources from your app within the virtual network.
Prerequisites
The virtual network integration feature requires:
An App Service pricing tierthat supports virtual network integration.
A virtual network in the same region with an empty subnet.
The subnet must be delegated to Microsoft.Web/serverFarms. If you don't delegate before integration, the provisioning process configures this delegation. The subnet must be allocated an IPv4/28block (16 addresses). We recommend that you have a minimum of 64 addresses (IPv4/26block) to allow for maximum horizontal scale.
/28
/26
If the virtual network is in a different subscription than the app, ensure that the subscription with the virtual network is registered for theMicrosoft.Webresource provider. The provider is registered when you create the first web app in a subscription. To explicitly register the provider, seeRegister resource provider.
Microsoft.Web
Configure in the Azure portal
Go to your app in the Azure portal. SelectSettings>Networking. UnderOutbound traffic configuration, next toVirtual network integration, select theNot configuredlink.
Go to your app in the Azure portal. SelectSettings>Networking. UnderOutbound traffic configuration, next toVirtual network integration, select theNot configuredlink.
SelectAdd virtual network integration.
SelectAdd virtual network integration.

Select a subscription and virtual network.
Select a subscription and virtual network.
UnderSubnet, the dropdown list contains all the virtual networks in your subscription in the same region. Select an empty preexisting subnet or create a new subnet. SelectConnect.
UnderSubnet, the dropdown list contains all the virtual networks in your subscription in the same region. Select an empty preexisting subnet or create a new subnet. SelectConnect.

During the integration, your app is restarted. When integration finishes, you see details on the virtual network that you integrated with.
Configure with the Azure CLI
You can also configure virtual network integration by using the Azure CLI:
az webapp vnet-integration add --resource-group <group-name> --name <app-name> --vnet <vnet-name> --subnet <subnet-name>
az webapp vnet-integration add --resource-group <group-name> --name <app-name> --vnet <vnet-name> --subnet <subnet-name>
Note
The command checks if the subnet is delegated to Microsoft.Web/serverFarms. If it isn't configured, the command applies the necessary delegation. If the subnet was configured and you don't have permissions to check it, or if the virtual network is in another subscription, you can use the--skip-delegation-checkparameter to bypass the validation.
--skip-delegation-check
Configure with Azure PowerShell
Prepare parameters.$siteName = '<app-name>'
$vNetResourceGroupName = '<group-name>'
$webAppResourceGroupName = '<group-name>'
$vNetName = '<vnet-name>'
$integrationSubnetName = '<subnet-name>'
$vNetSubscriptionId = '<subscription-guid>'NoteIf the virtual network is in another subscription than webapp, you can use theSet-AzContext -Subscription "xxxx-xxxx-xxxx-xxxx"command to set the current subscription context. Set the current subscription context to the subscription where the virtual network was deployed.
Prepare parameters.
$siteName = '<app-name>'
$vNetResourceGroupName = '<group-name>'
$webAppResourceGroupName = '<group-name>'
$vNetName = '<vnet-name>'
$integrationSubnetName = '<subnet-name>'
$vNetSubscriptionId = '<subscription-guid>'
$siteName = '<app-name>'
$vNetResourceGroupName = '<group-name>'
$webAppResourceGroupName = '<group-name>'
$vNetName = '<vnet-name>'
$integrationSubnetName = '<subnet-name>'
$vNetSubscriptionId = '<subscription-guid>'
Note
If the virtual network is in another subscription than webapp, you can use theSet-AzContext -Subscription "xxxx-xxxx-xxxx-xxxx"command to set the current subscription context. Set the current subscription context to the subscription where the virtual network was deployed.
Set-AzContext -Subscription "xxxx-xxxx-xxxx-xxxx"
Check if the subnet is delegated to Microsoft.Web/serverFarms.$vnet = Get-AzVirtualNetwork -Name $vNetName -ResourceGroupName $vNetResourceGroupName
$subnet = Get-AzVirtualNetworkSubnetConfig -Name $integrationSubnetName -VirtualNetwork $vnet
Get-AzDelegation -Subnet $subnet
Check if the subnet is delegated to Microsoft.Web/serverFarms.
$vnet = Get-AzVirtualNetwork -Name $vNetName -ResourceGroupName $vNetResourceGroupName
$subnet = Get-AzVirtualNetworkSubnetConfig -Name $integrationSubnetName -VirtualNetwork $vnet
Get-AzDelegation -Subnet $subnet
$vnet = Get-AzVirtualNetwork -Name $vNetName -ResourceGroupName $vNetResourceGroupName
$subnet = Get-AzVirtualNetworkSubnetConfig -Name $integrationSubnetName -VirtualNetwork $vnet
Get-AzDelegation -Subnet $subnet
If your subnet isn't delegated to Microsoft.Web/serverFarms, add delegation using these commands.$subnet = Add-AzDelegation -Name "myDelegation" -ServiceName "Microsoft.Web/serverFarms" -Subnet $subnet
Set-AzVirtualNetwork -VirtualNetwork $vnet
If your subnet isn't delegated to Microsoft.Web/serverFarms, add delegation using these commands.
$subnet = Add-AzDelegation -Name "myDelegation" -ServiceName "Microsoft.Web/serverFarms" -Subnet $subnet
Set-AzVirtualNetwork -VirtualNetwork $vnet
$subnet = Add-AzDelegation -Name "myDelegation" -ServiceName "Microsoft.Web/serverFarms" -Subnet $subnet
Set-AzVirtualNetwork -VirtualNetwork $vnet
Configure virtual network integration.$subnetResourceId = "/subscriptions/$vNetSubscriptionId/resourceGroups/$vNetResourceGroupName/providers/Microsoft.Network/virtualNetworks/$vNetName/subnets/$integrationSubnetName"
$webApp = Get-AzResource -ResourceType Microsoft.Web/sites -ResourceGroupName $webAppResourceGroupName -ResourceName $siteName
$webApp.Properties.virtualNetworkSubnetId = $subnetResourceId
$webApp.Properties.vnetRouteAllEnabled = 'true'
$webApp | Set-AzResource -ForceNoteIf the webapp is in another subscription than virtual network, you can use theSet-AzContext -Subscription "xxxx-xxxx-xxxx-xxxx"command to set the current subscription context. Set the current subscription context to the subscription where the web app was deployed.
Configure virtual network integration.
$subnetResourceId = "/subscriptions/$vNetSubscriptionId/resourceGroups/$vNetResourceGroupName/providers/Microsoft.Network/virtualNetworks/$vNetName/subnets/$integrationSubnetName"
$webApp = Get-AzResource -ResourceType Microsoft.Web/sites -ResourceGroupName $webAppResourceGroupName -ResourceName $siteName
$webApp.Properties.virtualNetworkSubnetId = $subnetResourceId
$webApp.Properties.vnetRouteAllEnabled = 'true'
$webApp | Set-AzResource -Force
$subnetResourceId = "/subscriptions/$vNetSubscriptionId/resourceGroups/$vNetResourceGroupName/providers/Microsoft.Network/virtualNetworks/$vNetName/subnets/$integrationSubnetName"
$webApp = Get-AzResource -ResourceType Microsoft.Web/sites -ResourceGroupName $webAppResourceGroupName -ResourceName $siteName
$webApp.Properties.virtualNetworkSubnetId = $subnetResourceId
$webApp.Properties.vnetRouteAllEnabled = 'true'
$webApp | Set-AzResource -Force
Note
If the webapp is in another subscription than virtual network, you can use theSet-AzContext -Subscription "xxxx-xxxx-xxxx-xxxx"command to set the current subscription context. Set the current subscription context to the subscription where the web app was deployed.
Set-AzContext -Subscription "xxxx-xxxx-xxxx-xxxx"
Related content
Configure virtual network integration routing
General networking overview
Feedback
Was this page helpful?
Additional resources