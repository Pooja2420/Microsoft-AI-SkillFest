Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Tutorial: Deploy your ASP.NET app to Azure virtual machines by using Azure DevOps Starter
Article
2020-03-24
1 contributor
In this article
Azure DevOps Starter presents a simplified experience where you can bring your existing code and Git repo or choose a sample application to create a continuous integration (CI) and continuous delivery (CD) pipeline to Azure.
DevOps Starter also:
Automatically creates Azure resources, such as a new Azure virtual machine (VM).
Creates and configures a release pipeline in Azure DevOps that includes a build pipeline for CI.
Sets up a release pipeline for CD.
Creates an Azure Application Insights resource for monitoring.
In this tutorial, you will:
Use DevOps Starter to deploy your ASP.NET app
Configure Azure DevOps and an Azure subscription
Examine the CI pipeline
Examine the CD pipeline
Commit changes to Azure Repos and automatically deploy them to Azure
Configure Azure Application Insights monitoring
Clean up resources
Prerequisites
An Azure subscription. You can get one free throughVisual Studio Dev Essentials.
Use DevOps Starter to deploy your ASP.NET app
DevOps Starter creates a CI/CD pipeline in Azure Pipelines. You can create a new Azure DevOps organization or use an existing organization. DevOps Projects also creates Azure resources such as virtual machines in the Azure subscription of your choice.
Sign in to theAzure portal.
Sign in to theAzure portal.
In the search box, typeDevOps Starter, and then select. Click onAddto create a new one.
In the search box, typeDevOps Starter, and then select. Click onAddto create a new one.

Select.NET, and then selectNext.
Select.NET, and then selectNext.
UnderChoose an application Framework, selectASP.NET, and then selectNext. The application framework, which you chose in a previous step, dictates the type of Azure service deployment target that's available here.
UnderChoose an application Framework, selectASP.NET, and then selectNext. The application framework, which you chose in a previous step, dictates the type of Azure service deployment target that's available here.
Select the virtual machine, and then selectNext.
Select the virtual machine, and then selectNext.
Configure Azure DevOps and an Azure subscription
Create a new Azure DevOps organization or select an existing organization.
Create a new Azure DevOps organization or select an existing organization.
Enter a name for your Azure DevOps project.
Enter a name for your Azure DevOps project.
Select your Azure subscription services. Optionally, you can selectChangeand then enter more configuration details, such as the location of the Azure resources.
Select your Azure subscription services. Optionally, you can selectChangeand then enter more configuration details, such as the location of the Azure resources.
Enter a virtual machine name, username, and password for your new Azure virtual machine resource, and then selectDone. After a few minutes, the Azure virtual machine will be ready. A sample ASP.NET application is set up in a repo in your Azure DevOps organization, a build and release is executed, and your application is deployed to the newly created Azure VM.After it's completed, the DevOps Starter dashboard is displayed in the Azure portal. You can also navigate to the dashboard directly fromAll resourcesin the Azure portal.The dashboard provides visibility into your Azure DevOps code repo, your CI/CD pipeline, and your running application in Azure.
Enter a virtual machine name, username, and password for your new Azure virtual machine resource, and then selectDone. After a few minutes, the Azure virtual machine will be ready. A sample ASP.NET application is set up in a repo in your Azure DevOps organization, a build and release is executed, and your application is deployed to the newly created Azure VM.
After it's completed, the DevOps Starter dashboard is displayed in the Azure portal. You can also navigate to the dashboard directly fromAll resourcesin the Azure portal.
The dashboard provides visibility into your Azure DevOps code repo, your CI/CD pipeline, and your running application in Azure.

DevOps Starter automatically configures a CI build and release trigger that deploys code changes to your repo. You can further configure additional options in Azure DevOps. To view your running application, selectBrowse.
Examine the CI pipeline
DevOps Starter automatically configured a CI/CD pipeline in Azure Pipelines. You can explore and customize the pipeline. To familiarize yourself with the build pipeline, do the following:
At the top of the DevOps Starter dashboard, selectBuild Pipelines. A browser tab displays the build pipeline for your new project.
At the top of the DevOps Starter dashboard, selectBuild Pipelines. A browser tab displays the build pipeline for your new project.
Point to theStatusfield, and then select the ellipsis (...). A menu displays several options, such as queueing a new build, pausing a build, and editing the build pipeline.
Point to theStatusfield, and then select the ellipsis (...). A menu displays several options, such as queueing a new build, pausing a build, and editing the build pipeline.
SelectEdit.
SelectEdit.
In this pane, you can examine the various tasks for your build pipeline. The build performs various tasks, such as fetching sources from the Git repo, restoring dependencies, and publishing outputs used for deployments.
In this pane, you can examine the various tasks for your build pipeline. The build performs various tasks, such as fetching sources from the Git repo, restoring dependencies, and publishing outputs used for deployments.
At the top of the build pipeline, select the build pipeline name.
At the top of the build pipeline, select the build pipeline name.
Change the name of your build pipeline to something more descriptive, selectSave & queue, and then selectSave.
Change the name of your build pipeline to something more descriptive, selectSave & queue, and then selectSave.
Under your build pipeline name, selectHistory. This pane displays an audit trail of your recent changes for the build. Azure DevOps keeps track of any changes made to the build pipeline, and it allows you to compare versions.
Under your build pipeline name, selectHistory. This pane displays an audit trail of your recent changes for the build. Azure DevOps keeps track of any changes made to the build pipeline, and it allows you to compare versions.
SelectTriggers. DevOps Starter automatically creates a CI trigger, and every commit to the repo starts a new build. Optionally, you can choose to include or exclude branches from the CI process.
SelectTriggers. DevOps Starter automatically creates a CI trigger, and every commit to the repo starts a new build. Optionally, you can choose to include or exclude branches from the CI process.
SelectRetention. Depending on your scenario, you can specify policies to keep or remove a certain number of builds.
SelectRetention. Depending on your scenario, you can specify policies to keep or remove a certain number of builds.
Examine the CD pipeline
DevOps Starter automatically creates and configures the necessary steps to deploy from your Azure DevOps organization to your Azure subscription. These steps include configuring an Azure service connection to authenticate Azure DevOps to your Azure subscription. The automation also creates a CD pipeline, which provides the CD to the Azure virtual machine. To learn more about the Azure DevOps CD pipeline, do the following:
SelectBuild and Release, and then selectReleases.  DevOps Starter creates a release pipeline to manage deployments to Azure.
SelectBuild and Release, and then selectReleases.  DevOps Starter creates a release pipeline to manage deployments to Azure.
Select the ellipsis (...) next to your release pipeline, and then selectEdit. The release pipeline contains apipeline, which defines the release process.
Select the ellipsis (...) next to your release pipeline, and then selectEdit. The release pipeline contains apipeline, which defines the release process.
UnderArtifacts, selectDrop. The build pipeline you examined in previous steps produces the output that's used for the artifact.
UnderArtifacts, selectDrop. The build pipeline you examined in previous steps produces the output that's used for the artifact.
Next to theDropicon, selectContinuous deployment trigger. This release pipeline has an enabled CD trigger, which executes a deployment each time a new build artifact is available. Optionally, you can disable the trigger so that your deployments require manual execution.
Next to theDropicon, selectContinuous deployment trigger. This release pipeline has an enabled CD trigger, which executes a deployment each time a new build artifact is available. Optionally, you can disable the trigger so that your deployments require manual execution.
At the left, selectTasks, and then select your environment. Tasks are the activities that your deployment process executes, and they're grouped in phases. This release pipeline happens in two phases:The first phase contains an Azure Resource Group Deployment task that does two things:Configures the VM for deploymentAdds the new VM to an Azure DevOps deployment group. The VM deployment group in Azure DevOps manages logical groups of deployment target machinesIn the second phase, an IIS Web App Manage task creates an IIS website on the VM. A second IIS Web App Deploy task is created to deploy the site.
At the left, selectTasks, and then select your environment. Tasks are the activities that your deployment process executes, and they're grouped in phases. This release pipeline happens in two phases:
The first phase contains an Azure Resource Group Deployment task that does two things:Configures the VM for deploymentAdds the new VM to an Azure DevOps deployment group. The VM deployment group in Azure DevOps manages logical groups of deployment target machines
The first phase contains an Azure Resource Group Deployment task that does two things:
Configures the VM for deployment
Adds the new VM to an Azure DevOps deployment group. The VM deployment group in Azure DevOps manages logical groups of deployment target machines
In the second phase, an IIS Web App Manage task creates an IIS website on the VM. A second IIS Web App Deploy task is created to deploy the site.
In the second phase, an IIS Web App Manage task creates an IIS website on the VM. A second IIS Web App Deploy task is created to deploy the site.
At the right, selectView releasesto display a history of releases.
At the right, selectView releasesto display a history of releases.
Select the ellipsis (...) next to a release, and then selectOpen. You can explore several menus, such as a release summary, associated work items, and tests.
Select the ellipsis (...) next to a release, and then selectOpen. You can explore several menus, such as a release summary, associated work items, and tests.
SelectCommits. This view shows code commits that are associated with this deployment. Compare releases to view the commit differences between deployments.
SelectCommits. This view shows code commits that are associated with this deployment. Compare releases to view the commit differences between deployments.
SelectLogs. The logs contain useful information about the deployment process. You can view them both during and after deployments.
SelectLogs. The logs contain useful information about the deployment process. You can view them both during and after deployments.
Commit changes to Azure Repos and automatically deploy them to Azure
You're now ready to collaborate with a team on your app by using a CI/CD process that automatically deploys your latest work to your website. Each change to the Git repo starts a build in Azure DevOps, and a CD pipeline executes a deployment to Azure. Follow the procedure in this section, or use another technique to commit changes to your repo. The code changes initiate the CI/CD process and automatically deploy your changes to the IIS website on the Azure VM.
In the left pane, selectCode, and then go to your repo.
In the left pane, selectCode, and then go to your repo.
Go to theViews\Homedirectory, select the ellipsis (...) next to theIndex.cshtmlfile, and then selectEdit.
Go to theViews\Homedirectory, select the ellipsis (...) next to theIndex.cshtmlfile, and then selectEdit.
Make a change to the file, such as adding some text within one of the div tags.
Make a change to the file, such as adding some text within one of the div tags.
At the top right, selectCommit, and then selectCommitagain to push your change. After a few moments, a build starts in Azure DevOps and a release executes to deploy the changes. Monitor the build status in the DevOps Starter dashboard or in the browser with your Azure DevOps organization.
At the top right, selectCommit, and then selectCommitagain to push your change. After a few moments, a build starts in Azure DevOps and a release executes to deploy the changes. Monitor the build status in the DevOps Starter dashboard or in the browser with your Azure DevOps organization.
After the release is completed, refresh your application to verify your changes.
After the release is completed, refresh your application to verify your changes.
Configure Azure Application Insights monitoring
With Azure Application insights, you can easily monitor your application's performance and usage. DevOps Starter automatically configures an Application Insights resource for your application. You can further configure various alerts and monitoring capabilities as needed.
In the Azure portal, go to the DevOps Starter dashboard.
In the Azure portal, go to the DevOps Starter dashboard.
At the lower right, select theApplication Insightslink for your app. TheApplication Insightspane opens. This view contains usage, performance, and availability monitoring information for your app.
At the lower right, select theApplication Insightslink for your app. TheApplication Insightspane opens. This view contains usage, performance, and availability monitoring information for your app.

SelectTime range, and then selectLast hour. To filter the results, selectUpdate. You can now view all activity from the last 60 minutes.
SelectTime range, and then selectLast hour. To filter the results, selectUpdate. You can now view all activity from the last 60 minutes.
To exit the time range, selectx.
To exit the time range, selectx.
SelectAlerts, and then selectAdd metric alert.
SelectAlerts, and then selectAdd metric alert.
Enter a name for the alert.
Enter a name for the alert.
In theMetricdrop-down list, examine the various alert metrics. The default alert is for aserver response time greater than 1 second. You can easily configure a variety of alerts to improve the monitoring capabilities of your app.
In theMetricdrop-down list, examine the various alert metrics. The default alert is for aserver response time greater than 1 second. You can easily configure a variety of alerts to improve the monitoring capabilities of your app.
Select theNotify via Email owners, contributors, and readerscheck box. Optionally, you can perform additional actions when an alert is displayed by executing an Azure logic app.
Select theNotify via Email owners, contributors, and readerscheck box. Optionally, you can perform additional actions when an alert is displayed by executing an Azure logic app.
SelectOKto create the alert. After a few moments, the alert appears as active on the dashboard.
SelectOKto create the alert. After a few moments, the alert appears as active on the dashboard.
Exit theAlertsarea, and go back to theApplication Insightspane.
Exit theAlertsarea, and go back to theApplication Insightspane.
SelectAvailability, and then selectAdd test.
SelectAvailability, and then selectAdd test.
Enter a test name, and then selectCreate. A simple ping test is created to verify the availability of your application. After a few minutes, test results are available, and the Application Insights dashboard displays an availability status.
Enter a test name, and then selectCreate. A simple ping test is created to verify the availability of your application. After a few minutes, test results are available, and the Application Insights dashboard displays an availability status.
Clean up resources
If you are testing, you can avoid accruing billing charges by cleaning up your resources. When they are no longer needed, you can delete the Azure virtual machine and related resources that you created in this tutorial. To do so, use theDeletefunctionality on the DevOps Starter dashboard.
Important
The following procedure permanently deletes resources. TheDeletefunctionality destroys the data that's created by the project in DevOps Starter in both Azure and Azure DevOps, and you will be unable to retrieve it. Use this procedure only after you've carefully read the prompts.
In the Azure portal, go to the DevOps Starter dashboard.
At the top right, selectDelete.
At the prompt, selectYestopermanently deletethe resources.
You can optionally modify these build and release pipelines to meet the needs of your team. You can also use this CI/CD pattern as a template for your other pipelines.
Next steps
In this tutorial, you learned how to:
Use DevOps Starter to deploy your ASP.NET app
Configure Azure DevOps and an Azure subscription
Examine the CI pipeline
Examine the CD pipeline
Commit changes to Azure Repos and automatically deploy them to Azure
Configure Azure Application Insights monitoring
Clean up resources
To learn more about the CI/CD pipeline, see:
Define your multi-stage continuous deployment (CD) pipeline
Additional resources