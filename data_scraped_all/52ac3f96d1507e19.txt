Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Use custom scale-in policies with Azure Virtual Machine Scale Sets
Article
2024-08-22
9 contributors
In this article
A Virtual Machine Scale Set deployment can be scaled-out or scaled-in based on an array of metrics, including platform and user-defined custom metrics. While a scale-out creates new virtual machines based on the scale set model, a scale-in affects running virtual machines that may have different configurations and/or functions as the scale set workload evolves.
The scale-in policy feature provides users a way to configure the order in which virtual machines are scaled-in, by way of three scale-in configurations:
Default
NewestVM
OldestVM
Default scale-in policy
By default, Virtual Machine Scale Set applies this policy to determine which instance(s) will be scaled in. With theDefaultpolicy, VMs are selected for scale-in in the following order:
Balance virtual machines across availability zones (if the scale set is deployed in zonal configuration)
Balance virtual machines across fault domains (best effort)
Delete virtual machine with the highest instance ID
Users don't need to specify a scale-in policy if they just want the default ordering to be followed.
By default, Virtual Machine Scale Set applies this policy to determine which instance(s) will be scaled in. With theDefaultpolicy, VMs are selected for scale-in in the following order:
Balance virtual machines across availability zones (if the scale set is deployed in zonal configuration)
Balance virtual machines across fault domains (best effort)
Delete virtual machine with the highest instance ID
Users don't need to specify a scale-in policy if they just want the default ordering to be followed.
Balancing across availability zones or fault domains doesn't move instances across availability zones or fault domains. The balancing is achieved through deletion of virtual machines from the unbalanced availability zones or fault domains until the distribution of virtual machines becomes balanced.
NewestVM scale-in policy
This policy will delete the newest, or most recently created virtual machine in the scale set, after balancing VMs across availability zones (for zonal deployments). Enabling this policy requires a configuration change on the Virtual Machine Scale Set model.
OldestVM scale-in policy
This policy will delete the oldest created virtual machine in the scale set, after balancing VMs across availability zones (for zonal deployments). Enabling this policy requires a configuration change on the Virtual Machine Scale Set model.
Enabling scale-in policy
A scale-in policy is defined in the Virtual Machine Scale Set model. As noted in the previous sections, a scale-in policy definition is needed when using the âNewestVMâ and âOldestVMâ policies. Virtual Machine Scale Set will automatically use the âDefaultâ scale-in policy if there's no scale-in policy definition found on the scale set model.
A scale-in policy can be defined on the Virtual Machine Scale Set model in the following ways:
Azure portal
The following steps define the scale-in policy when creating a new scale set.
Go toVirtual Machine Scale Sets.
Select+ Addto create a new scale set.
Go to theScalingtab.
Locate theScale-in policysection.
Select a scale-in policy from the drop-down.
When you're done creating the new scale set, selectReview + createbutton.
Using API
Execute a PUT on the Virtual Machine Scale Set using API 2019-03-01:
PUT
https://management.azure.com/subscriptions/<sub-id>/resourceGroups/<myRG>/providers/Microsoft.Compute/virtualMachineScaleSets/<myVMSS>?api-version=2019-03-01

{ 
"location": "<VMSS location>", 
    "properties": { 
        "scaleInPolicy": {  
            "rules": ["OldestVM"]  
        } 
    }    
}
PUT
https://management.azure.com/subscriptions/<sub-id>/resourceGroups/<myRG>/providers/Microsoft.Compute/virtualMachineScaleSets/<myVMSS>?api-version=2019-03-01

{ 
"location": "<VMSS location>", 
    "properties": { 
        "scaleInPolicy": {  
            "rules": ["OldestVM"]  
        } 
    }    
}
Azure PowerShell
Important
Starting November 2023, VM scale sets created using PowerShell and Azure CLI will default to Flexible Orchestration Mode if no orchestration mode is specified. For more information about this change and what actions you should take, go toBreaking Change for VMSS PowerShell/CLI Customers - Microsoft Community Hub
Create a resource group, then create a new scale set with scale-in policy set asOldestVM.
New-AzResourceGroup -ResourceGroupName "myResourceGroup" -Location "<VMSS location>"
New-AzVmss `
  -ResourceGroupName "myResourceGroup" `
  -Location "<VMSS location>" `
  -VMScaleSetName "myScaleSet" `
  -OrchestrationMode "Flexible" `
  -ScaleInPolicy âOldestVMâ
New-AzResourceGroup -ResourceGroupName "myResourceGroup" -Location "<VMSS location>"
New-AzVmss `
  -ResourceGroupName "myResourceGroup" `
  -Location "<VMSS location>" `
  -VMScaleSetName "myScaleSet" `
  -OrchestrationMode "Flexible" `
  -ScaleInPolicy âOldestVMâ
Azure CLI
Important
Starting November 2023, VM scale sets created using PowerShell and Azure CLI will default to Flexible Orchestration Mode if no orchestration mode is specified. For more information about this change and what actions you should take, go toBreaking Change for VMSS PowerShell/CLI Customers - Microsoft Community Hub
The following example adds a scale-in policy while creating a new scale set. First create a resource group, then create a new scale set with scale-in policy asOldestVM.
az group create --name <myResourceGroup> --location <VMSSLocation>
az vmss create \
  --resource-group <myResourceGroup> \
  --name <myVMScaleSet> \
  --orchestration-mode flexible \
  --image Ubuntu2204 \
  --admin-username <azureuser> \
  --generate-ssh-keys \
  --scale-in-policy OldestVM
az group create --name <myResourceGroup> --location <VMSSLocation>
az vmss create \
  --resource-group <myResourceGroup> \
  --name <myVMScaleSet> \
  --orchestration-mode flexible \
  --image Ubuntu2204 \
  --admin-username <azureuser> \
  --generate-ssh-keys \
  --scale-in-policy OldestVM
Using Template
In your template, under âpropertiesâ, add thescaleInPolicyproperty:
scaleInPolicy
"scaleInPolicy": {  
      "rules": ["OldestVM"]  
}
"scaleInPolicy": {  
      "rules": ["OldestVM"]  
}
These code blocks specify that the Virtual Machine Scale Set will delete the Oldest VM in a zone-balanced scale set, when a scale-in is triggered (through Autoscale or manual delete).
When a Virtual Machine Scale Set isn't zone balanced, the scale set will first delete VMs across the imbalanced zone(s). Within the imbalanced zones, the scale set uses the specified scale-in policy to determine which VM to scale in. In this case, within an imbalanced zone, the scale set will select the Oldest VM in that zone to be deleted.
For non-zonal Virtual Machine Scale Set, the policy selects the oldest VM across the scale set for deletion.
The same process applies when using the âNewestVMâ scale-in policy.
Modifying scale-in policies
Modifying the scale-in policy follows the same process as applying the scale-in policy. For example, if you want to change the policy from âOldestVMâ to âNewestVMâ, you can do so by:
Azure portal
You can modify the scale-in policy of an existing scale set through the Azure portal.
In an existing Virtual Machine Scale Set, selectScalingfrom the menu on the left.
Select theScale-In Policytab.
Select a scale-in policy from the drop-down.
When you're done, selectSave.
Using API
Execute a PUT on the Virtual Machine Scale Set using API 2019-03-01:
PUT
https://management.azure.com/subscriptions/<sub-id>/resourceGroups/<myRG>/providers/Microsoft.Compute/virtualMachineScaleSets/<myVMSS>?api-version=2019-03-01 

{ 
"location": "<VMSS location>", 
    "properties": { 
        "scaleInPolicy": {  
            "rules": ["NewestVM"]  
        } 
    }    
}
PUT
https://management.azure.com/subscriptions/<sub-id>/resourceGroups/<myRG>/providers/Microsoft.Compute/virtualMachineScaleSets/<myVMSS>?api-version=2019-03-01 

{ 
"location": "<VMSS location>", 
    "properties": { 
        "scaleInPolicy": {  
            "rules": ["NewestVM"]  
        } 
    }    
}
Azure PowerShell
Update the scale-in policy of an existing scale set:
Update-AzVmss `
 -ResourceGroupName "myResourceGroup" `
 -VMScaleSetName "myScaleSet" `
 -ScaleInPolicy âOldestVMâ
Update-AzVmss `
 -ResourceGroupName "myResourceGroup" `
 -VMScaleSetName "myScaleSet" `
 -ScaleInPolicy âOldestVMâ
Azure CLI
The following is an example for updating the scale-in policy of an existing scale set:
az vmss update \  
  --resource-group <myResourceGroup> \
  --name <myVMScaleSet> \
  --scale-in-policy OldestVM
az vmss update \  
  --resource-group <myResourceGroup> \
  --name <myVMScaleSet> \
  --scale-in-policy OldestVM
Using Template
In your template, under âpropertiesâ, modify the template as below and redeploy:
"scaleInPolicy": {  
      "rules": ["NewestVM"]  
}
"scaleInPolicy": {  
      "rules": ["NewestVM"]  
}
The same process applies if you decide to change âNewestVMâ to âDefaultâ or âOldestVMâ
Instance protection and scale-in policy
Virtual Machine Scale Sets provide two types ofinstance protection:
Protect from scale-in
Protect from scale-set actions
A protected virtual machine isn't deleted through a scale-in action, regardless of the scale-in policy applied. For example, if VM_0 (oldest VM in the scale set) is protected from scale-in, and the scale set has âOldestVMâ scale-in policy enabled, VM_0 will not be considered for being scaled in, even though it's the oldest VM in the scale set.
A protected virtual machine can be manually deleted by the user at any time, regardless of the scale-in policy enabled on the scale set.
Usage examples
The below examples demonstrate how a Virtual Machine Scale Set selects VMs to be deleted when a scale-in event is triggered. Virtual machines with the highest instance IDs are assumed to be the newest VMs in the scale set and the VMs with the smallest instance IDs are assumed to be the oldest VMs in the scale set.
OldestVM scale-in policy
For non-zonal Virtual Machine Scale Sets, the policy selects the oldest VM across the scale set for deletion. Any âprotectedâ VM is skipped for deletion.
NewestVM scale-in policy
For non-zonal Virtual Machine Scale Sets, the policy selects the newest VM across the scale set for deletion. Any âprotectedâ VM is skipped for deletion.
Troubleshoot
Failure to enable scaleInPolicy
If you get a âBadRequestâ error with an error message stating "Could not find member 'scaleInPolicy' on object of type 'properties'â, then check the API version used for Virtual Machine Scale Set. API version 2019-03-01 or higher is required for this feature.
Failure to enable scaleInPolicy
If you get a âBadRequestâ error with an error message stating "Could not find member 'scaleInPolicy' on object of type 'properties'â, then check the API version used for Virtual Machine Scale Set. API version 2019-03-01 or higher is required for this feature.
Wrong selection of VMs for scale-in
Refer to the examples in this document. If your Virtual Machine Scale Set is a Zonal deployment, scale-in policy is applied first to the imbalanced Zones and then across the scale set once it's zone balanced. If the order of scale-in isn't consistent with the examples documented here, raise a query with the Virtual Machine Scale Set team for troubleshooting.
Wrong selection of VMs for scale-in
Refer to the examples in this document. If your Virtual Machine Scale Set is a Zonal deployment, scale-in policy is applied first to the imbalanced Zones and then across the scale set once it's zone balanced. If the order of scale-in isn't consistent with the examples documented here, raise a query with the Virtual Machine Scale Set team for troubleshooting.
Next steps
Learn how todeploy your applicationon Virtual Machine Scale Sets.
Feedback
Was this page helpful?
Additional resources