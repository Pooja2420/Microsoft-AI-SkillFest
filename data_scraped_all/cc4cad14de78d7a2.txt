Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Use a private endpoint with an Azure Container Apps environment (preview)
Article
2025-02-03
2 contributors
In this article
In this article, you learn how to use a private endpoint to securely access your Azure Container App without exposing it to the public Internet.
A private endpoint uses a private IP address from your virtual network (VNet). This endpoint connects you privately and securely to a service powered byAzure Private Link.
Private endpoints on Azure Container Apps only support inbound HTTP traffic. TCP traffic isn't supported.
Prerequisites
Azure account with an active subscription.If you don't have one, youcan create one for free.
If you don't have one, youcan create one for free.
Create a container app
Begin by signing in to theAzure portal.
Search forContainer Appsin the top search bar.
Search forContainer Appsin the top search bar.
SelectContainer Appsin the search results.
SelectContainer Appsin the search results.
Select theCreatebutton.
Select theCreatebutton.
In theCreate Container Apppage, in theBasicstab, enter the following values.SettingActionSubscriptionSelect your Azure subscription.Resource groupSelect theCreate new resource grouplink and entermy-container-apps.Container app nameEntermy-container-app.Deployment sourceSelectContainer image.RegionSelectCentral US.
In theCreate Container Apppage, in theBasicstab, enter the following values.
In theCreate Container Apps Environmentfield, select theCreate new environmentlink.
In theCreate Container Apps Environmentfield, select theCreate new environmentlink.
In theCreate Container Apps Environmentpage, in theBasicstab, enter the following values:SettingValueEnvironment nameEntermy-environment.Zone redundancySelectDisabled
In theCreate Container Apps Environmentpage, in theBasicstab, enter the following values:
Select theNetworkingtab.
Select theNetworkingtab.
SetPublic Network AccesstoDisable: Block all incoming traffic from the public internet.By default, public network access is enabled, which means private endpoints are disabled.
SetPublic Network AccesstoDisable: Block all incoming traffic from the public internet.By default, public network access is enabled, which means private endpoints are disabled.
LeaveUse your own virtual networkset toNo.
You can use an existing VNet, but private endpoints are only supported in workload profiles environments, which require a subnet with a minimum CIDR range of/27or larger. To learn more about subnet sizing, see thenetworking architecture overview.
LeaveUse your own virtual networkset toNo.
You can use an existing VNet, but private endpoints are only supported in workload profiles environments, which require a subnet with a minimum CIDR range of/27or larger. To learn more about subnet sizing, see thenetworking architecture overview.
/27
SetEnable private endpointstoYes.
SetEnable private endpointstoYes.
SetPrivate endpoint nametomy-private-endpoint.
SetPrivate endpoint nametomy-private-endpoint.
In thePrivate endpoint virtual networkfield, select theCreate newlink.
In thePrivate endpoint virtual networkfield, select theCreate newlink.
In theCreate Virtual Networkpage, setVirtual Networktomy-private-endpoint-vnet. SelectOK.
In theCreate Virtual Networkpage, setVirtual Networktomy-private-endpoint-vnet. SelectOK.
In thePrivate endpoint virtual network Subnetfield, select theCreate newlink.
In thePrivate endpoint virtual network Subnetfield, select theCreate newlink.
In theCreate Subnetpage, setSubnet Nametomy-private-endpoint-vnet-subnet. SelectOK.
In theCreate Subnetpage, setSubnet Nametomy-private-endpoint-vnet-subnet. SelectOK.
LeaveDNSset toAzure Private DNS Zone.
LeaveDNSset toAzure Private DNS Zone.
SelectCreate.
SelectCreate.
In theCreate Container Apppage, select theContainertab.
In theCreate Container Apppage, select theContainertab.
SelectUse quickstart image.
SelectUse quickstart image.
Deploy the container app
SelectReview and createat the bottom of the page.If no errors are found, theCreatebutton is enabled.If there are errors, any tab containing errors is marked with a red dot. Navigate to the appropriate tab. Fields containing an error are highlighted in red. Once all errors are fixed, selectReview and createagain.
SelectReview and createat the bottom of the page.
If no errors are found, theCreatebutton is enabled.
If there are errors, any tab containing errors is marked with a red dot. Navigate to the appropriate tab. Fields containing an error are highlighted in red. Once all errors are fixed, selectReview and createagain.
SelectCreate.A page with the messageDeployment is in progressis displayed. Once the deployment is successfully completed, you see the message:Your deployment is complete.
SelectCreate.
A page with the messageDeployment is in progressis displayed. Once the deployment is successfully completed, you see the message:Your deployment is complete.
Verify deployment
SelectGo to resourceto view your new container app.
SelectGo to resourceto view your new container app.
Select the link next toApplication URLto view your application.
Select the link next toApplication URLto view your application.
When you browse to the container app endpoint, you see the following message:The public network access on this managed environment is disabled. To connect to this managed environment, please use the Private Endpoint from inside your virtual network. To learn more https://aka.ms/PrivateEndpointTroubleshooting.
When you browse to the container app endpoint, you see the following message:
The public network access on this managed environment is disabled. To connect to this managed environment, please use the Private Endpoint from inside your virtual network. To learn more https://aka.ms/PrivateEndpointTroubleshooting.
The public network access on this managed environment is disabled. To connect to this managed environment, please use the Private Endpoint from inside your virtual network. To learn more https://aka.ms/PrivateEndpointTroubleshooting.
Prerequisites
Azure account with an active subscription.If you don't have one, youcan create one for free.
Azure account with an active subscription.
If you don't have one, youcan create one for free.
The latest version of theAzure CLI. To ensure you're running the latest version, run the following command.az upgrade
The latest version of theAzure CLI. To ensure you're running the latest version, run the following command.
az upgrade
az upgrade
The latest version of the Azure Container Apps extension for the Azure CLI. To ensure you're running the latest version, run the following command.az extension add --name containerapp --upgrade --allow-preview trueNoteStarting in May 2024, Azure CLI extensions no longer enable preview features by default. To access Container Appspreview features, install the Container Apps extension with--allow-preview true.
The latest version of the Azure Container Apps extension for the Azure CLI. To ensure you're running the latest version, run the following command.
az extension add --name containerapp --upgrade --allow-preview true
az extension add --name containerapp --upgrade --allow-preview true
Note
Starting in May 2024, Azure CLI extensions no longer enable preview features by default. To access Container Appspreview features, install the Container Apps extension with--allow-preview true.
--allow-preview true
For more information about prerequisites and setup, seeQuickstart: Deploy your first container app with containerapp up.
Set environment variables
Set the following environment variables.
RESOURCE_GROUP="my-container-apps"
LOCATION="centralus"
ENVIRONMENT_NAME="my-environment"
CONTAINERAPP_NAME="my-container-app"
VNET_NAME="my-vnet"
SUBNET_NAME="my-subnet"
PRIVATE_ENDPOINT="my-private-endpoint"
PRIVATE_ENDPOINT_CONNECTION="my-private-endpoint-connection"
PRIVATE_DNS_ZONE="privatelink.${LOCATION}.azurecontainerapps.io"
DNS_LINK="my-dns-link"
RESOURCE_GROUP="my-container-apps"
LOCATION="centralus"
ENVIRONMENT_NAME="my-environment"
CONTAINERAPP_NAME="my-container-app"
VNET_NAME="my-vnet"
SUBNET_NAME="my-subnet"
PRIVATE_ENDPOINT="my-private-endpoint"
PRIVATE_ENDPOINT_CONNECTION="my-private-endpoint-connection"
PRIVATE_DNS_ZONE="privatelink.${LOCATION}.azurecontainerapps.io"
DNS_LINK="my-dns-link"
Create an Azure resource group
Create a resource group to organize the services related to your container app deployment.
az group create \
    --name $RESOURCE_GROUP \
    --location $LOCATION
az group create \
    --name $RESOURCE_GROUP \
    --location $LOCATION
Create a virtual network
Create an Azure virtual network (VNet). You can use an existing VNet, but private endpoints are only supported in workload profiles environments, which require a subnet with a minimum CIDR range of/27or larger. To learn more about subnet sizing, see thenetworking architecture overview.az network vnet create \
    --resource-group $RESOURCE_GROUP \
    --name $VNET_NAME \
    --location $LOCATION \
    --address-prefix 10.0.0.0/16
Create an Azure virtual network (VNet). You can use an existing VNet, but private endpoints are only supported in workload profiles environments, which require a subnet with a minimum CIDR range of/27or larger. To learn more about subnet sizing, see thenetworking architecture overview.
/27
az network vnet create \
    --resource-group $RESOURCE_GROUP \
    --name $VNET_NAME \
    --location $LOCATION \
    --address-prefix 10.0.0.0/16
az network vnet create \
    --resource-group $RESOURCE_GROUP \
    --name $VNET_NAME \
    --location $LOCATION \
    --address-prefix 10.0.0.0/16
Create a subnet to associate with the VNet and to contain the private endpoint.az network vnet subnet create \
    --resource-group $RESOURCE_GROUP \
    --vnet-name $VNET_NAME \
    --name $SUBNET_NAME \
    --address-prefixes 10.0.0.0/21
Create a subnet to associate with the VNet and to contain the private endpoint.
az network vnet subnet create \
    --resource-group $RESOURCE_GROUP \
    --vnet-name $VNET_NAME \
    --name $SUBNET_NAME \
    --address-prefixes 10.0.0.0/21
az network vnet subnet create \
    --resource-group $RESOURCE_GROUP \
    --vnet-name $VNET_NAME \
    --name $SUBNET_NAME \
    --address-prefixes 10.0.0.0/21
Retrieve the subnet ID. You use this ID to create the private endpoint.SUBNET_ID=$(az network vnet subnet show \
    --resource-group $RESOURCE_GROUP \
    --vnet-name $VNET_NAME \
    --name $SUBNET_NAME \
    --query "id" \
    --output tsv)
Retrieve the subnet ID. You use this ID to create the private endpoint.
SUBNET_ID=$(az network vnet subnet show \
    --resource-group $RESOURCE_GROUP \
    --vnet-name $VNET_NAME \
    --name $SUBNET_NAME \
    --query "id" \
    --output tsv)
SUBNET_ID=$(az network vnet subnet show \
    --resource-group $RESOURCE_GROUP \
    --vnet-name $VNET_NAME \
    --name $SUBNET_NAME \
    --query "id" \
    --output tsv)
Create an environment
Create the Container Apps environment. Private endpoints are only supported in workload profiles environments, which is the default type for new environments.az containerapp env create \
    --name $ENVIRONMENT_NAME \
    --resource-group $RESOURCE_GROUP \
    --location $LOCATION
Create the Container Apps environment. Private endpoints are only supported in workload profiles environments, which is the default type for new environments.
az containerapp env create \
    --name $ENVIRONMENT_NAME \
    --resource-group $RESOURCE_GROUP \
    --location $LOCATION
az containerapp env create \
    --name $ENVIRONMENT_NAME \
    --resource-group $RESOURCE_GROUP \
    --location $LOCATION
Retrieve the environment ID. You use this ID to configure the environment.ENVIRONMENT_ID=$(az containerapp env show \
    --resource-group $RESOURCE_GROUP \
    --name $ENVIRONMENT_NAME \
    --query "id" \
    --output tsv)
Retrieve the environment ID. You use this ID to configure the environment.
ENVIRONMENT_ID=$(az containerapp env show \
    --resource-group $RESOURCE_GROUP \
    --name $ENVIRONMENT_NAME \
    --query "id" \
    --output tsv)
ENVIRONMENT_ID=$(az containerapp env show \
    --resource-group $RESOURCE_GROUP \
    --name $ENVIRONMENT_NAME \
    --query "id" \
    --output tsv)
Disable public network access for the environment. This setting is needed to enable private endpoints.az containerapp env update \
    --id $ENVIRONMENT_ID \
    --public-network-access Disabled
Disable public network access for the environment. This setting is needed to enable private endpoints.
az containerapp env update \
    --id $ENVIRONMENT_ID \
    --public-network-access Disabled
az containerapp env update \
    --id $ENVIRONMENT_ID \
    --public-network-access Disabled
Create a private endpoint
Create the private endpoint in the environment and subnet you created previously.
az network private-endpoint create \
    --resource-group $RESOURCE_GROUP \
    --location $LOCATION \
    --name $PRIVATE_ENDPOINT \
    --subnet $SUBNET_ID \
    --private-connection-resource-id $ENVIRONMENT_ID \
    --connection-name $PRIVATE_ENDPOINT_CONNECTION \
    --group-id managedEnvironments
az network private-endpoint create \
    --resource-group $RESOURCE_GROUP \
    --location $LOCATION \
    --name $PRIVATE_ENDPOINT \
    --subnet $SUBNET_ID \
    --private-connection-resource-id $ENVIRONMENT_ID \
    --connection-name $PRIVATE_ENDPOINT_CONNECTION \
    --group-id managedEnvironments
Configure the private DNS zone
Retrieve the private endpoint IP address. You use this address to add a DNS record to your private DNS zone.PRIVATE_ENDPOINT_IP_ADDRESS=$(az network private-endpoint show \
    --name $PRIVATE_ENDPOINT \
    --resource-group $RESOURCE_GROUP \
    --query 'customDnsConfigs[0].ipAddresses[0]' \
    --output tsv)
Retrieve the private endpoint IP address. You use this address to add a DNS record to your private DNS zone.
PRIVATE_ENDPOINT_IP_ADDRESS=$(az network private-endpoint show \
    --name $PRIVATE_ENDPOINT \
    --resource-group $RESOURCE_GROUP \
    --query 'customDnsConfigs[0].ipAddresses[0]' \
    --output tsv)
PRIVATE_ENDPOINT_IP_ADDRESS=$(az network private-endpoint show \
    --name $PRIVATE_ENDPOINT \
    --resource-group $RESOURCE_GROUP \
    --query 'customDnsConfigs[0].ipAddresses[0]' \
    --output tsv)
Retrieve the environment default domain. You use this domain to add a DNS record to your private DNS zone.DNS_RECORD_NAME=$(az containerapp env show \
    --id $ENVIRONMENT_ID \
    --query 'properties.defaultDomain' \
    --output tsv | sed 's/\..*//')
Retrieve the environment default domain. You use this domain to add a DNS record to your private DNS zone.
DNS_RECORD_NAME=$(az containerapp env show \
    --id $ENVIRONMENT_ID \
    --query 'properties.defaultDomain' \
    --output tsv | sed 's/\..*//')
DNS_RECORD_NAME=$(az containerapp env show \
    --id $ENVIRONMENT_ID \
    --query 'properties.defaultDomain' \
    --output tsv | sed 's/\..*//')
Create a private DNS zone.az network private-dns zone create \
    --resource-group $RESOURCE_GROUP \
    --name $PRIVATE_DNS_ZONE
Create a private DNS zone.
az network private-dns zone create \
    --resource-group $RESOURCE_GROUP \
    --name $PRIVATE_DNS_ZONE
az network private-dns zone create \
    --resource-group $RESOURCE_GROUP \
    --name $PRIVATE_DNS_ZONE
Create a link between your VNet and your private DNS zone.az network private-dns link vnet create \
    --resource-group $RESOURCE_GROUP \
    --zone-name $PRIVATE_DNS_ZONE \
    --name $DNS_LINK \
    --virtual-network $VNET_NAME \
    --registration-enabled false
Create a link between your VNet and your private DNS zone.
az network private-dns link vnet create \
    --resource-group $RESOURCE_GROUP \
    --zone-name $PRIVATE_DNS_ZONE \
    --name $DNS_LINK \
    --virtual-network $VNET_NAME \
    --registration-enabled false
az network private-dns link vnet create \
    --resource-group $RESOURCE_GROUP \
    --zone-name $PRIVATE_DNS_ZONE \
    --name $DNS_LINK \
    --virtual-network $VNET_NAME \
    --registration-enabled false
Add a record for your private endpoint to your private DNS zone.az network private-dns record-set a add-record \
    --resource-group $RESOURCE_GROUP \
    --zone-name $PRIVATE_DNS_ZONE \
    --record-set-name $DNS_RECORD_NAME \
    --ipv4-address $PRIVATE_ENDPOINT_IP_ADDRESS
Add a record for your private endpoint to your private DNS zone.
az network private-dns record-set a add-record \
    --resource-group $RESOURCE_GROUP \
    --zone-name $PRIVATE_DNS_ZONE \
    --record-set-name $DNS_RECORD_NAME \
    --ipv4-address $PRIVATE_ENDPOINT_IP_ADDRESS
az network private-dns record-set a add-record \
    --resource-group $RESOURCE_GROUP \
    --zone-name $PRIVATE_DNS_ZONE \
    --record-set-name $DNS_RECORD_NAME \
    --ipv4-address $PRIVATE_ENDPOINT_IP_ADDRESS
Deploy a container app
Deploy a container app in your environment. This container app simply uses the quickstart image.
When you browse to the container app endpoint, you receiveERR_CONNECTION_CLOSEDbecause your container app environment has public access disabled. Instead, you access your container app using your private endpoint.
ERR_CONNECTION_CLOSED
az containerapp up \
    --name $CONTAINERAPP_NAME \
    --resource-group $RESOURCE_GROUP \
    --location $LOCATION \
    --environment $ENVIRONMENT_NAME \
    --image mcr.microsoft.com/k8se/quickstart:latest \
    --target-port 80 \
    --ingress external \
    --query properties.configuration.ingress.fqdn
az containerapp up \
    --name $CONTAINERAPP_NAME \
    --resource-group $RESOURCE_GROUP \
    --location $LOCATION \
    --environment $ENVIRONMENT_NAME \
    --image mcr.microsoft.com/k8se/quickstart:latest \
    --target-port 80 \
    --ingress external \
    --query properties.configuration.ingress.fqdn
Verify the private endpoint connection
In this section, you create a virtual machine associated to your VNet so you can access the container app you defined using your private endpoint.
Create a virtual machine (VM)
Begin by signing in to theAzure portal.
Search forVirtual machinesin the top search bar.
Search forVirtual machinesin the top search bar.
SelectVirtual machinesin the search results.
SelectVirtual machinesin the search results.
SelectCreate.
SelectCreate.
In theCreate a virtual machinepage on theBasicstab, enter the following values.SettingActionSubscriptionSelect your Azure subscription.Resource groupSelectmy-container-apps.Virtual machine nameEnterazurevm.RegionSelectCentral US.Availability optionsSelectNo infrastructure redundancy required.Security typeSelectStandard.ImageSelectWindows Server 2022 Datacenter : Azure Edition - x64 Gen2.UsernameEnterazureuser.PasswordEnter a password.Confirm passwordEnter the password again.Public inbound portsSelectNone.
In theCreate a virtual machinepage on theBasicstab, enter the following values.
In theNetworkingtab, enter the following values.SettingActionVirtual networkSelectmy-private-endpoint-vnet.SubnetSelectmy-private-endpoint-vnet-subnet (10.0.0.0/23).Public IPSelectNone.NIC network security groupSelectAdvanced.
In theNetworkingtab, enter the following values.
SelectReview + Create.
SelectReview + Create.
SelectCreate.
SelectCreate.
Set environment variables
Set the following environment variables.
VM_NAME="azurevm"
VM_ADMIN_USERNAME="azureuser"
VM_NAME="azurevm"
VM_ADMIN_USERNAME="azureuser"
Create a virtual machine (VM)
Run the following command.
az vm create \
    --resource-group $RESOURCE_GROUP \
    --name $VM_NAME \
    --image Win2022Datacenter \
    --public-ip-address "" \
    --vnet-name $VNET_NAME \
    --subnet $SUBNET_NAME \
    --admin-username $VM_ADMIN_USERNAME
az vm create \
    --resource-group $RESOURCE_GROUP \
    --name $VM_NAME \
    --image Win2022Datacenter \
    --public-ip-address "" \
    --vnet-name $VNET_NAME \
    --subnet $SUBNET_NAME \
    --admin-username $VM_ADMIN_USERNAME
After you run this command, you're prompted for an administrator password for your VM.
The administrator username must be between 1 and 20 characters long.
The administrator password has the following requirements:
Must be between 12 and 123 characters long.
Must have three of the following characters: 1 lower case character, 1 upper case character, 1 number, and 1 special character.
Test the connection
Begin by signing in to theAzure portal.
Begin by signing in to theAzure portal.
Search for the VM you created in the top search bar and select it from the search results.
Search for the VM you created in the top search bar and select it from the search results.
In theOverviewpage for the VM, selectConnect, then selectConnect via Bastion.
In theOverviewpage for the VM, selectConnect, then selectConnect via Bastion.
In theBastionpage, selectDeploy Bastion.
In theBastionpage, selectDeploy Bastion.
SetUsernameandVM Passwordto the username and password you used when you created the VM.
SetUsernameandVM Passwordto the username and password you used when you created the VM.
SelectConnect.
SelectConnect.
After you connect, run PowerShell in the VM.
After you connect, run PowerShell in the VM.
In PowerShell, run the following command. Replace the <PLACEHOLDERS> with your values.nslookup <CONTAINER_APP_ENDPOINT>The output is similar to the following example, with your values replacing the <PLACEHOLDERS>.Server:  UnKnown
Address:  168.63.129.16

Non-authoritative answer:
Name:    <ENVIRONMENT_DEFAULT_DOMAIN>.privatelink.<LOCATION>.azurecontainerapps.io

Address:  10.0.0.4
Aliases:  <CONTAINER_APP_ENDPOINT>
In PowerShell, run the following command. Replace the <PLACEHOLDERS> with your values.
nslookup <CONTAINER_APP_ENDPOINT>
nslookup <CONTAINER_APP_ENDPOINT>
The output is similar to the following example, with your values replacing the <PLACEHOLDERS>.
Server:  UnKnown
Address:  168.63.129.16

Non-authoritative answer:
Name:    <ENVIRONMENT_DEFAULT_DOMAIN>.privatelink.<LOCATION>.azurecontainerapps.io

Address:  10.0.0.4
Aliases:  <CONTAINER_APP_ENDPOINT>
Server:  UnKnown
Address:  168.63.129.16

Non-authoritative answer:
Name:    <ENVIRONMENT_DEFAULT_DOMAIN>.privatelink.<LOCATION>.azurecontainerapps.io

Address:  10.0.0.4
Aliases:  <CONTAINER_APP_ENDPOINT>
Open a browser in the VM.
Open a browser in the VM.
Browse to the container app endpoint. You see the output for the quickstart container app image.
Browse to the container app endpoint. You see the output for the quickstart container app image.
Clean up resources
If you're not going to continue to use this application, you can remove themy-container-appsresource group. This action deletes the Azure Container Apps instance and all associated services.
Caution
The following command deletes the specified resource group and all resources contained within it. If resources outside the scope of this guide exist in the specified resource group, they'll also be deleted.
az group delete --name $RESOURCE_GROUP
az group delete --name $RESOURCE_GROUP
Related content
Azure Private Link
Azure private endpoint overview
Feedback
Was this page helpful?
Additional resources