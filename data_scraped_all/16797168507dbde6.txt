Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
View metrics in real time
Article
2024-09-11
3 contributors
In this article
With Container insights Live Data, you can visualize metrics about node and pod state in a cluster in real time. The feature emulates direct access to thekubectl top nodes,kubectl get pods --all-namespaces, andkubectl get nodescommands to call, parse, and visualize the data in performance charts that are included with this insight.
kubectl top nodes
kubectl get pods --all-namespaces
kubectl get nodes
This article provides a detailed overview and helps you understand how to use this feature.
Note
Azure Kubernetes Service (AKS) clusters enabled asprivate clustersaren't supported with this feature. This feature relies on directly accessing the Kubernetes API through a proxy server from your browser. Enabling networking security to block the Kubernetes API from this proxy will block this traffic.
For help with setting up or troubleshooting the Live Data feature, review thesetup guide.
How it works
The Live Data feature directly accesses the Kubernetes API. For more information about the authentication model, seeThe Kubernetes API.
This feature performs a polling operation against the metrics endpoints including/api/v1/nodes,/apis/metrics.k8s.io/v1beta1/nodes, and/api/v1/pods. The interval is every five seconds by default. This data is cached in your browser and charted in four performance charts included in Container insights. Each subsequent poll is charted into a rolling five-minute visualization window. To see the charts, slide theLiveoption toOn.
/api/v1/nodes
/apis/metrics.k8s.io/v1beta1/nodes
/api/v1/pods

The polling interval is configured from theSet intervaldropdown list. Use this dropdown list to set polling for new data every 1, 5, 15, and 30 seconds.

Important
We recommend that you set the polling interval to one second while you troubleshoot an issue for a short period of time. These requests might affect the availability and throttling of the Kubernetes API on your cluster. Afterward, reconfigure to a longer polling interval.
These charts can't be pinned to the last Azure dashboard you viewed in live mode.
Important
No data is stored permanently during operation of this feature. All information captured during this session is immediately deleted when you close your browser or navigate away from the feature. Data only remains present for visualization inside the five-minute window. Any metrics older than five minutes are also permanently deleted.
Metrics captured
The following metrics are captured and displayed in four performance charts.
Node CPU utilization % and Node memory utilization %
These two performance charts map to an equivalent of invokingkubectl top nodesand capturing the results of theCPU%andMEMORY%columns to the respective chart.
kubectl top nodes



The percentile calculations will function in larger clusters to help identify outlier nodes in your cluster. For example, you can understand if nodes are underutilized for scale-down purposes. By using theMinaggregation, you can see which nodes have low utilization in the cluster. To further investigate, select theNodestab and sort the grid by CPU or memory utilization.
This information also helps you understand which nodes are being pushed to their limits and if scale-out might be required. By using both theMaxandP95aggregations, you can see if there are nodes in the cluster with high resource utilization. For further investigation, you would again switch to theNodestab.
Node count
This performance chart maps to an equivalent of invokingkubectl get nodesand mapping theSTATUScolumn to a chart grouped by status types.
kubectl get nodes


Nodes are reported either in aReadyorNot Readystate and they're counted to create a total count. The results of these two aggregations are charted so that, for example, you can understand if your nodes are falling into failed states. By using theNot Readyaggregation, you can quickly see the number of nodes in your cluster currently in theNot Readystate.
Active pod count
This performance chart maps to an equivalent of invokingkubectl get pods --all-namespacesand maps theSTATUScolumn the chart grouped by status types.
kubectl get pods --all-namespaces


Note
Names of status as interpreted bykubectlmight not exactly match in the chart.
kubectl
Next steps
Viewlog query examplesto see predefined queries and examples to create alerts and visualizations or perform further analysis of your clusters.
Feedback
Was this page helpful?
Additional resources