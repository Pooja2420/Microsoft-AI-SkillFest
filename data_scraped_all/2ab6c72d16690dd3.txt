Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Access and manage IBM DB2 resources by using Azure Logic Apps
Article
2024-01-04
7 contributors
In this article
Applies to:Azure Logic Apps (Consumption)
WithAzure Logic Appsand theIBM DB2 connector, you can create automated
tasks and workflows based on the resources stored in your DB2 database.
Your workflows can connect to the resources in your database, read and
list your database tables, add rows, change rows, delete rows, and more.
You can include actions in your logic apps that get responses
from your database and make the output available for other actions.
This article shows how you can create a logic app that performs
various database operations. If you're new to logic apps, reviewWhat is Azure Logic Apps?
Supported platforms and versions
The DB2 connector includes a Microsoft client that
communicates with remote DB2 servers across a TCP/IP network.
You can use this connector for accessing cloud databases such
as IBM DB2 for Windows running in Azure virtualization.
You can also access on-premises DB2 databases after youinstall and set up the on-premises data gateway.
The IBM DB2 connector supports these IBM DB2 platforms and versions along
with IBM DB2 compatible products that support Distributed Relational Database Architecture (DRDA)
SQL Access Manager (SQLAM) versions 10 and 11:
Supported database operations
The IBM DB2 connector supports these database operations,
which map to the corresponding actions in the connector:
Prerequisites
An Azure account and subscription. If you don't have an Azure subscription,sign up for a free Azure account.
An Azure account and subscription. If you don't have an Azure subscription,sign up for a free Azure account.
An IBM DB2 database, either cloud-based or on-premises
An IBM DB2 database, either cloud-based or on-premises
Basic knowledge about how to create logic apps. For more information, seeCreate an example Consumption logic app workflow
Basic knowledge about how to create logic apps. For more information, seeCreate an example Consumption logic app workflow
The logic app where you want to access your DB2 database.
This connector provides only actions, so to start your logic app,
select a separate trigger, for example, theRecurrencetrigger.
The examples in this article use theRecurrencetrigger.
The logic app where you want to access your DB2 database.
This connector provides only actions, so to start your logic app,
select a separate trigger, for example, theRecurrencetrigger.
The examples in this article use theRecurrencetrigger.

Add DB2 action - Get tables
In theAzure portal, open your
logic app in the Logic App Designer, if not already open.
In theAzure portal, open your
logic app in the Logic App Designer, if not already open.
Under the trigger, chooseNew step.
Under the trigger, chooseNew step.
In the search box, enter "db2" as your filter. For this example,
under the actions list, select this action:Get tables (Preview)You're now prompted to provide connection details for your DB2 database.
In the search box, enter "db2" as your filter. For this example,
under the actions list, select this action:Get tables (Preview)

You're now prompted to provide connection details for your DB2 database.
Follow the steps for creating connections forcloud databasesoron-premises databases.
Follow the steps for creating connections forcloud databasesoron-premises databases.

Connect to cloud DB2
To set up your connection, provide these connection details when prompted,
chooseCreate, and then save your logic app:

Note: This value is a string that represents a TCP/IP address or alias, either in IPv4 or IPv6 format, followed by a colon and a TCP/IP port number.

Note: This value is a string that represents a DRDA Relational Database Name (RDBNAM):
- DB2 for z/OS accepts a 16-byte string where the database is known as an "IBM DB2 for z/OS" location.- DB2 for i accepts an 18-byte string where the database is known as an "IBM DB2 for i" relational database.- DB2 for LUW accepts an 8-byte string.

Note: This value is a string whose length is based on the specific database:

- DB2 for z/OS accepts an 8-byte string.- DB2 for i accepts a 10-byte string.- DB2 for Linux or UNIX accepts an 8-byte string.- DB2 for Windows accepts a 30-byte string.
For example:


Connect to on-premises DB2
Before creating your connection, you must already have your on-premises data gateway installed.
Otherwise, you can't finish setting up your connection. If you have your gateway installation,
continue with providing these connection details, and then chooseCreate.

Note: This value is a string that represents a TCP/IP address or alias, either in IPv4 or IPv6 format, followed by a colon and a TCP/IP port number.

Note: This value is a string that represents a DRDA Relational Database Name (RDBNAM):
- DB2 for z/OS accepts a 16-byte string where the database is known as an "IBM DB2 for z/OS" location.- DB2 for i accepts an 18-byte string where the database is known as an "IBM DB2 for i" relational database.- DB2 for LUW accepts an 8-byte string.

Note: Select this value from the list, which includes Basic or Windows (Kerberos).

Note: This value is a string whose length is based on the specific database:

- DB2 for z/OS accepts an 8-byte string.- DB2 for i accepts a 10-byte string.- DB2 for Linux or UNIX accepts an 8-byte string.- DB2 for Windows accepts a 30-byte string.

Note: Select this value from the list, which includes all the installed data gateways within your Azure subscription and resource group.
For example:

View output tables
To run your logic app manually, on the designer toolbar, chooseRun.
After your logic app finishes running, you can view the output from the run.
On your logic app menu, selectOverview.
On your logic app menu, selectOverview.
UnderSummary, in theRuns historysection,
select the most recent run, which is the first item in the list.
UnderSummary, in theRuns historysection,
select the most recent run, which is the first item in the list.

UnderLogic app run, you can now review the status,
inputs, and outputs for each step in your logic app.
Expand theGet tablesaction.
UnderLogic app run, you can now review the status,
inputs, and outputs for each step in your logic app.
Expand theGet tablesaction.

To view the inputs, chooseShow raw inputs.
To view the inputs, chooseShow raw inputs.
To view the outputs, chooseShow raw outputs.The outputs include a list of tables.
To view the outputs, chooseShow raw outputs.
The outputs include a list of tables.

Get row
To fetch one record in a DB2 database table, use theGet rowaction in your logic app.
This action runs a DB2SELECT WHEREstatement, for example,SELECT FROM AREA WHERE AREAID = '99999'.
SELECT WHERE
SELECT FROM AREA WHERE AREAID = '99999'
If you've never used DB2 actions before in your logic app,
review the steps in theAdd DB2 action - Get tablessection, but add theGet rowaction instead, and then return here to continue.After you add theGet rowaction, here is how your example logic app appears:
If you've never used DB2 actions before in your logic app,
review the steps in theAdd DB2 action - Get tablessection, but add theGet rowaction instead, and then return here to continue.
After you add theGet rowaction, here is how your example logic app appears:

Specify values for all the required properties (*).
After you select a table, the action shows the relevant
properties that are specific to records in that table.PropertyRequiredDescriptionTable nameYesThe table that has the record you want, such as "AREA" in this exampleArea IDYesThe ID for the record you want, such as "99999" in this example
Specify values for all the required properties (*).
After you select a table, the action shows the relevant
properties that are specific to records in that table.

When you're done, on the designer toolbar, chooseSave.
When you're done, on the designer toolbar, chooseSave.
View output row
To run your logic app manually, on the designer toolbar, chooseRun.
After your logic app finishes running, you can view the output from the run.
On your logic app menu, selectOverview.
On your logic app menu, selectOverview.
UnderSummary, in theRuns historysection,
select the most recent run, which is the first item in the list.
UnderSummary, in theRuns historysection,
select the most recent run, which is the first item in the list.
UnderLogic app run, you can now review the status,
inputs, and outputs for each step in your logic app.
Expand theGet rowaction.
UnderLogic app run, you can now review the status,
inputs, and outputs for each step in your logic app.
Expand theGet rowaction.
To view the inputs, chooseShow raw inputs.
To view the inputs, chooseShow raw inputs.
To view the outputs, chooseShow raw outputs.The outputs include your specified row.
To view the outputs, chooseShow raw outputs.
The outputs include your specified row.

Get rows
To fetch all records in a DB2 database table, use theGet rowsaction in your logic app.
This action runs a DB2SELECTstatement, for example,SELECT * FROM AREA.
SELECT
SELECT * FROM AREA
If you've never used DB2 actions before in your logic app,
review the steps in theAdd DB2 action - Get tablessection, but add theGet rowsaction instead, and then return here to continue.After you add theGet rowsaction, here is how your example logic app appears:
If you've never used DB2 actions before in your logic app,
review the steps in theAdd DB2 action - Get tablessection, but add theGet rowsaction instead, and then return here to continue.
After you add theGet rowsaction, here is how your example logic app appears:

Open theTable namelist, and then select the table you want,
which is "AREA" in this example:
Open theTable namelist, and then select the table you want,
which is "AREA" in this example:

To specify a filter or query for results, chooseShow advanced options.
To specify a filter or query for results, chooseShow advanced options.
When you're done, on the designer toolbar, chooseSave.
When you're done, on the designer toolbar, chooseSave.
View output rows
To run your logic app manually, on the designer toolbar, chooseRun.
After your logic app finishes running, you can view the output from the run.
On your logic app menu, selectOverview.
On your logic app menu, selectOverview.
UnderSummary, in theRuns historysection,
select the most recent run, which is the first item in the list.
UnderSummary, in theRuns historysection,
select the most recent run, which is the first item in the list.
UnderLogic app run, you can now review the status,
inputs, and outputs for each step in your logic app.
Expand theGet rowsaction.
UnderLogic app run, you can now review the status,
inputs, and outputs for each step in your logic app.
Expand theGet rowsaction.
To view the inputs, chooseShow raw inputs.
To view the inputs, chooseShow raw inputs.
To view the outputs, chooseShow raw outputs.The outputs include all the records in your specified table.
To view the outputs, chooseShow raw outputs.
The outputs include all the records in your specified table.

Insert row
To add a single record to a DB2 database table,
use theInsert rowaction in your logic app.
This action runs a DB2INSERTstatement, for example,INSERT INTO AREA (AREAID, AREADESC, REGIONID) VALUES ('99999', 'Area 99999', 102).
INSERT
INSERT INTO AREA (AREAID, AREADESC, REGIONID) VALUES ('99999', 'Area 99999', 102)
If you've never used DB2 actions before in your logic app,
review the steps in theAdd DB2 action - Get tablessection, but add theInsert rowaction instead, and then return here to continue.After you add theInsert rowaction, here is how your example logic app appears:
If you've never used DB2 actions before in your logic app,
review the steps in theAdd DB2 action - Get tablessection, but add theInsert rowaction instead, and then return here to continue.
After you add theInsert rowaction, here is how your example logic app appears:

Specify values for all the required properties (*).
After you select a table, the action shows the relevant
properties that are specific to records in that table.For this example, here are the properties:PropertyRequiredDescriptionTable nameYesThe table where to add the record, such as "AREA"Area IDYesThe ID for the area to add, such as "99999"Area descriptionYesThe description for the area to add, such as "Area 99999"Region IDYesThe ID for the region to add, such as "102"For example:
Specify values for all the required properties (*).
After you select a table, the action shows the relevant
properties that are specific to records in that table.
For this example, here are the properties:
For example:

When you're done, on the designer toolbar, chooseSave.
When you're done, on the designer toolbar, chooseSave.
View insert row outputs
To run your logic app manually, on the designer toolbar, chooseRun.
After your logic app finishes running, you can view the output from the run.
On your logic app menu, selectOverview.
On your logic app menu, selectOverview.
UnderSummary, in theRuns historysection,
select the most recent run, which is the first item in the list.
UnderSummary, in theRuns historysection,
select the most recent run, which is the first item in the list.
UnderLogic app run, you can now review the status,
inputs, and outputs for each step in your logic app.
Expand theInsert rowaction.
UnderLogic app run, you can now review the status,
inputs, and outputs for each step in your logic app.
Expand theInsert rowaction.
To view the inputs, chooseShow raw inputs.
To view the inputs, chooseShow raw inputs.
To view the outputs, chooseShow raw outputs.The outputs include the record you added to your specified table.
To view the outputs, chooseShow raw outputs.
The outputs include the record you added to your specified table.

Update row
To update a single record in a DB2 database table,
use theUpdate rowaction in your logic app.
This action runs a DB2UPDATEstatement, for example,UPDATE AREA SET AREAID = '99999', AREADESC = 'Updated 99999', REGIONID = 102).
UPDATE
UPDATE AREA SET AREAID = '99999', AREADESC = 'Updated 99999', REGIONID = 102)
If you've never used DB2 actions before in your logic app,
review the steps in theAdd DB2 action - Get tablessection, but add theUpdate rowaction instead, and then return here to continue.After you add theUpdate rowaction, here is how your example logic app appears:
If you've never used DB2 actions before in your logic app,
review the steps in theAdd DB2 action - Get tablessection, but add theUpdate rowaction instead, and then return here to continue.
After you add theUpdate rowaction, here is how your example logic app appears:

Specify values for all the required properties (*).
After you select a table, the action shows the relevant
properties that are specific to records in that table.For this example, here are the properties:PropertyRequiredDescriptionTable nameYesThe table where to update the record, such as "AREA"Row IDYesThe ID for the record to update, such as "99999"Area IDYesThe new area ID, such as "99999"Area descriptionYesThe new area description, such as "Updated 99999"Region IDYesThe new region ID, such as "102"For example:
Specify values for all the required properties (*).
After you select a table, the action shows the relevant
properties that are specific to records in that table.
For this example, here are the properties:
For example:

When you're done, on the designer toolbar, chooseSave.
When you're done, on the designer toolbar, chooseSave.
View update row outputs
To run your logic app manually, on the designer toolbar, chooseRun.
After your logic app finishes running, you can view the output from the run.
On your logic app menu, selectOverview.
On your logic app menu, selectOverview.
UnderSummary, in theRuns historysection,
select the most recent run, which is the first item in the list.
UnderSummary, in theRuns historysection,
select the most recent run, which is the first item in the list.
UnderLogic app run, you can now review the status,
inputs, and outputs for each step in your logic app.
Expand theUpdate rowaction.
UnderLogic app run, you can now review the status,
inputs, and outputs for each step in your logic app.
Expand theUpdate rowaction.
To view the inputs, chooseShow raw inputs.
To view the inputs, chooseShow raw inputs.
To view the outputs, chooseShow raw outputs.The outputs include the record you updated in your specified table.
To view the outputs, chooseShow raw outputs.
The outputs include the record you updated in your specified table.

Delete row
To delete a single record from a DB2 database table,
use theDelete rowaction in your logic app.
This action runs a DB2DELETEstatement, for example,DELETE FROM AREA WHERE AREAID = '99999'.
DELETE
DELETE FROM AREA WHERE AREAID = '99999'
If you've never used DB2 actions before in your logic app,
review the steps in theAdd DB2 action - Get tablessection, but add theDelete rowaction instead, and then return here to continue.After you add theDelete rowaction, here is how your example logic app appears:
If you've never used DB2 actions before in your logic app,
review the steps in theAdd DB2 action - Get tablessection, but add theDelete rowaction instead, and then return here to continue.
After you add theDelete rowaction, here is how your example logic app appears:

Specify values for all the required properties (*).
After you select a table, the action shows the relevant
properties that are specific to records in that table.For this example, here are the properties:PropertyRequiredDescriptionTable nameYesThe table where to delete the record, such as "AREA"Row IDYesThe ID for the record to delete, such as "99999"For example:
Specify values for all the required properties (*).
After you select a table, the action shows the relevant
properties that are specific to records in that table.
For this example, here are the properties:
For example:

When you're done, on the designer toolbar, chooseSave.
When you're done, on the designer toolbar, chooseSave.
View delete row outputs
To run your logic app manually, on the designer toolbar, chooseRun.
After your logic app finishes running, you can view the output from the run.
On your logic app menu, selectOverview.
On your logic app menu, selectOverview.
UnderSummary, in theRuns historysection,
select the most recent run, which is the first item in the list.
UnderSummary, in theRuns historysection,
select the most recent run, which is the first item in the list.
UnderLogic app run, you can now review the status,
inputs, and outputs for each step in your logic app.
Expand theDelete rowaction.
UnderLogic app run, you can now review the status,
inputs, and outputs for each step in your logic app.
Expand theDelete rowaction.
To view the inputs, chooseShow raw inputs.
To view the inputs, chooseShow raw inputs.
To view the outputs, chooseShow raw outputs.The outputs no longer include the record you deleted from your specified table.
To view the outputs, chooseShow raw outputs.
The outputs no longer include the record you deleted from your specified table.

Connector reference
For more technical details about this connector, such as triggers, actions, and limits as described by the connector's Swagger file, see theconnector's reference page.
Next steps
Managed connectors for Azure Logic Apps
Built-in connectors for Azure Logic Apps
What are connectors in Azure Logic Apps
Feedback
Was this page helpful?
Additional resources