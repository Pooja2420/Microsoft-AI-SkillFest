Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Set up an Azure Kubernetes Service host on Windows Server and deploy a workload cluster using PowerShell
Article
2025-04-08
2 contributors
In this article
Applies to: Windows Server Datacenter
This quickstart guides you through setting up an Azure Kubernetes Service (AKS) host. You create Kubernetes clusters on Windows Server using PowerShell. To use Windows Admin Center instead, seeSet up with Windows Admin Center.
Note
If you pre-staged cluster service objects and DNS records, seeDeploy an AKS host with prestaged cluster service objects and DNS records using PowerShell.
If you have a proxy server, seeSet up an AKS host and deploy a workload cluster using PowerShell and a proxy server.
Before you begin
Make sure you satisfy all the prerequisites insystem requirements.
Use an Azure account to register your AKS host for billing. For more information, seeAzure requirements.
Install the AksHci PowerShell module
Follow these steps on all nodes in your Windows Server cluster:
Note
If you are using remote PowerShell, you must use CredSSP.
Close all open PowerShell windows, open a new PowerShell session as administrator, and run the following command on all nodes in your Windows Server cluster:Install-PackageProvider -Name NuGet -Force 
Install-Module -Name PowershellGet -Force -Confirm:$falseYou must close all existing PowerShell windows again to ensure that loaded modules are refreshed. Don't continue to the next step until you close all open PowerShell windows.
Close all open PowerShell windows, open a new PowerShell session as administrator, and run the following command on all nodes in your Windows Server cluster:
Install-PackageProvider -Name NuGet -Force 
Install-Module -Name PowershellGet -Force -Confirm:$false
Install-PackageProvider -Name NuGet -Force 
Install-Module -Name PowershellGet -Force -Confirm:$false
You must close all existing PowerShell windows again to ensure that loaded modules are refreshed. Don't continue to the next step until you close all open PowerShell windows.
Install theAksHciPowerShell module by running the following command on all nodes in your Windows Server cluster:Install-Module -Name AksHci -Repository PSGallery -Force -AcceptLicenseYou must close all existing PowerShell windows again to ensure that loaded modules are refreshed. Don't continue to the next step until you close all open PowerShell windows.
Install theAksHciPowerShell module by running the following command on all nodes in your Windows Server cluster:
Install-Module -Name AksHci -Repository PSGallery -Force -AcceptLicense
Install-Module -Name AksHci -Repository PSGallery -Force -AcceptLicense
You must close all existing PowerShell windows again to ensure that loaded modules are refreshed. Don't continue to the next step until you close all open PowerShell windows.
You can use ahelper script to delete old AKS-HCI PowerShell modules, to avoid any PowerShell version-related issues in your AKS deployment.
Validate your installation
Get-Command -Module AksHci
Get-Command -Module AksHci
For the complete list ofAksHciPowerShell commands, seeAksHci PowerShell.
Register the resource provider to your subscription
Before the registration process, enable the appropriate resource provider in Azure for the AKS registration. To do so, run the following PowerShell commands:
To sign in to Azure, run theConnect-AzAccountPowerShell command:
Connect-AzAccount
Connect-AzAccount
If you want to switch to a different subscription, run theSet-AzContextPowerShell command:
Set-AzContext -Subscription "xxxx-xxxx-xxxx-xxxx"
Set-AzContext -Subscription "xxxx-xxxx-xxxx-xxxx"
Run the following commands to register your Azure subscription to Azure Arc-enabled Kubernetes resource providers. This registration process can take up to 10 minutes, but it only needs to be performed once on a specific subscription:
Register-AzResourceProvider -ProviderNamespace Microsoft.Kubernetes
Register-AzResourceProvider -ProviderNamespace Microsoft.KubernetesConfiguration
Register-AzResourceProvider -ProviderNamespace Microsoft.ExtendedLocation
Register-AzResourceProvider -ProviderNamespace Microsoft.Kubernetes
Register-AzResourceProvider -ProviderNamespace Microsoft.KubernetesConfiguration
Register-AzResourceProvider -ProviderNamespace Microsoft.ExtendedLocation
To validate the registration process, run the following PowerShell commands:
Get-AzResourceProvider -ProviderNamespace Microsoft.Kubernetes
Get-AzResourceProvider -ProviderNamespace Microsoft.KubernetesConfiguration
Get-AzResourceProvider -ProviderNamespace Microsoft.ExtendedLocation
Get-AzResourceProvider -ProviderNamespace Microsoft.Kubernetes
Get-AzResourceProvider -ProviderNamespace Microsoft.KubernetesConfiguration
Get-AzResourceProvider -ProviderNamespace Microsoft.ExtendedLocation
Step 1: prepare your machine(s) for deployment
Run checks on every physical node to see if all the requirements to install AKS are satisfied. Open PowerShell as an administrator and run the followingInitialize-AksHciNodecommand on all nodes in your Windows Server cluster:
Initialize-AksHciNode
Initialize-AksHciNode
Step 2: create a virtual network
Run the following commands on any one node in your Windows Server cluster.
To get the names of your available switches, run the following command. Make sure theSwitchTypeof your VM switch isExternal:
SwitchType
Get-VMSwitch
Get-VMSwitch
Sample output:
Name        SwitchType     NetAdapterInterfaceDescription
----        ----------     ------------------------------
extSwitch   External       Mellanox ConnectX-3 Pro Ethernet Adapter
Name        SwitchType     NetAdapterInterfaceDescription
----        ----------     ------------------------------
extSwitch   External       Mellanox ConnectX-3 Pro Ethernet Adapter
To create a virtual network for the nodes in your deployment to use, create an environment variable with theNew-AksHciNetworkSettingPowerShell command. This virtual network is used later to configure a deployment that uses static IP. If you want to configure your AKS deployment with DHCP, seeNew-AksHciNetworkSettingfor examples. You can also review somenetworking node concepts.
# static IP
$vnet = New-AksHciNetworkSetting -name myvnet -vSwitchName "extSwitch" -k8sNodeIpPoolStart "172.16.10.1" -k8sNodeIpPoolEnd "172.16.10.255" -vipPoolStart "172.16.255.0" -vipPoolEnd "172.16.255.254" -ipAddressPrefix "172.16.0.0/16" -gateway "172.16.0.1" -dnsServers "172.16.0.1" -vlanId 9
# static IP
$vnet = New-AksHciNetworkSetting -name myvnet -vSwitchName "extSwitch" -k8sNodeIpPoolStart "172.16.10.1" -k8sNodeIpPoolEnd "172.16.10.255" -vipPoolStart "172.16.255.0" -vipPoolEnd "172.16.255.254" -ipAddressPrefix "172.16.0.0/16" -gateway "172.16.0.1" -dnsServers "172.16.0.1" -vlanId 9
Note
You must customize the values shown in this example command for your environment.
Step 3: configure your deployment
Run the following commands on any node in your Windows Server cluster.
To create the configuration settings for the AKS host, use theSet-AksHciConfigcommand. You must specify theimageDir,workingDir, andcloudConfigLocationparameters. If you want to reset your configuration details, run the command again with new parameters.
imageDir
workingDir
cloudConfigLocation
Configure your deployment with the following command:
$csvPath = 'C:\clusterstorage\volume01' # Specify your preferred CSV path
Set-AksHciConfig -imageDir $csvPath\Images -workingDir $csvPath\ImageStore -cloudConfigLocation $csvPath\Config -vnet $vnet
$csvPath = 'C:\clusterstorage\volume01' # Specify your preferred CSV path
Set-AksHciConfig -imageDir $csvPath\Images -workingDir $csvPath\ImageStore -cloudConfigLocation $csvPath\Config -vnet $vnet
Note
You must customize the values shown in this example command for your environment.
Step 4: sign in to Azure and configure registration settings

Option 1: use your Microsoft Entra account if you have "Owner" permissions
Run the followingSet-AksHciRegistrationPowerShell command with your subscription and resource group name to sign in to Azure. You must have an Azure subscription, and an existing Azure resource group in the Australia East, East US, Southeast Asia, or West Europe Azure regions:
Set-AksHciRegistration -subscriptionId "<subscriptionId>" -resourceGroupName "<resourceGroupName>"
Set-AksHciRegistration -subscriptionId "<subscriptionId>" -resourceGroupName "<resourceGroupName>"
Option 2: use an Azure service principal
If you don't have access to a subscription on which you're anOwner, you can register your AKS host to Azure for billing using a service principal. For more information about how to use a service principal, seeregister AKS on Windows Server using a service principal.
Step 5: start a new deployment
Run the following command on any node in your Windows Server cluster.
After you configure your deployment, you must start it in order to install the AKS agents and services, and the AKS host. To begin deployment, run the following command:
Tip
To see additional status details during installation, set$VerbosePreference = "Continue"before proceeding.
$VerbosePreference = "Continue"
Install-AksHci
Install-AksHci
Warning
During installation of your AKS host, aKubernetes - Azure Arcresource type is created in the resource group that's set during registration. Do not delete this resource, as it represents your AKS host. You can identify the resource by checking its distribution field for a value ofaks_management. If you delete this resource, it results in an out-of-policy deployment.
aks_management
Step 6: create a Kubernetes cluster
After you install your AKS host, you can deploy a Kubernetes cluster. Open PowerShell as an administrator and run the followingNew-AksHciClustercommand. This example command creates a new Kubernetes cluster with one Linux node pool namedlinuxnodepoolwith a node count of 1.
linuxnodepool
For more information about node pools, seeUse node pools in AKS.
New-AksHciCluster -name mycluster -nodePoolName linuxnodepool -nodeCount 1 -osType Linux
New-AksHciCluster -name mycluster -nodePoolName linuxnodepool -nodeCount 1 -osType Linux
Check your deployed clusters
To get a list of your deployed Kubernetes clusters, run the followingGet-AksHciClusterPowerShell command:
Get-AksHciCluster
Get-AksHciCluster
ProvisioningState     : provisioned
KubernetesVersion     : v1.20.7
NodePools             : linuxnodepool
WindowsNodeCount      : 0
LinuxNodeCount        : 0
ControlPlaneNodeCount : 1
Name                  : mycluster
ProvisioningState     : provisioned
KubernetesVersion     : v1.20.7
NodePools             : linuxnodepool
WindowsNodeCount      : 0
LinuxNodeCount        : 0
ControlPlaneNodeCount : 1
Name                  : mycluster
To get a list of the node pools in the cluster, run the followingGet-AksHciNodePoolPowerShell command:
Get-AksHciNodePool -clusterName mycluster
Get-AksHciNodePool -clusterName mycluster
ClusterName  : mycluster
NodePoolName : linuxnodepool
Version      : v1.20.7
OsType       : Linux
NodeCount    : 1
VmSize       : Standard_K8S3_v1
Phase        : Deployed
ClusterName  : mycluster
NodePoolName : linuxnodepool
Version      : v1.20.7
OsType       : Linux
NodeCount    : 1
VmSize       : Standard_K8S3_v1
Phase        : Deployed
Step 7: connect your cluster to Arc-enabled Kubernetes
Connect your cluster to Arc-enabled Kubernetes by running theEnable-AksHciArcConnectioncommand. The following example connects your Kubernetes cluster to Arc using the subscription and resource group details you passed in theSet-AksHciRegistrationcommand:
Set-AksHciRegistration
Connect-AzAccount
Enable-AksHciArcConnection -name mycluster
Connect-AzAccount
Enable-AksHciArcConnection -name mycluster
Note
If you encounter issues or error messages during the installation process, seeInstallation known issues and errorsfor more information.
Scale a Kubernetes cluster
If you need to scale your cluster up or down, you can change the number of control plane nodes by using theSet-AksHciClustercommand. To change the number of Linux or Windows worker nodes in your node pool, use theSet-AksHciNodePoolcommand.
To scale control plane nodes, run the following command:
Set-AksHciCluster -name mycluster -controlPlaneNodeCount 3
Set-AksHciCluster -name mycluster -controlPlaneNodeCount 3
To scale the worker nodes in your node pool, run the following command:
Set-AksHciNodePool -clusterName mycluster -name linuxnodepool -count 3
Set-AksHciNodePool -clusterName mycluster -name linuxnodepool -count 3
Note
In previous versions of AKS on Windows Server, theSet-AksHciClustercommand was also used to scale worker nodes. Now that AKS is introducing node pools in workload clusters, you can only use this command to scale worker nodes if your cluster was created with the old parameter set inNew-AksHciCluster.
To scale worker nodes in a nodepool, use theSet-AksHciNodePoolcommand.
Access your clusters using kubectl
To access your Kubernetes clusters usingkubectl, run theGet-AksHciCredentialPowerShell command. This command uses the specified cluster'skubeconfigfile as the defaultkubeconfigfile forkubectl. You can also usekubectltodeploy applications using Helm:
Get-AksHciCredential -name mycluster
Get-AksHciCredential -name mycluster
Delete a Kubernetes cluster
To delete a Kubernetes cluster, run the following command:
Remove-AksHciCluster -name mycluster
Remove-AksHciCluster -name mycluster
Note
Make sure that your cluster is deleted by looking at the existing VMs in Hyper-V Manager. If they aren't deleted, you can manually delete the VMs. Then, run the commandRestart-Service wssdagent. Run this command on each node in the failover cluster.
Restart-Service wssdagent
Get logs
To get logs from your all your pods, run theGet-AksHciLogscommand. This command creates an output zipped folder calledakshcilogs.zipin your working directory. The full path to theakshcilogs.zipfolder is the output after running the following command:
akshcilogs.zip
akshcilogs.zip
Get-AksHciLogs
Get-AksHciLogs
In this quickstart, you learned how to set up an AKS host and create Kubernetes clusters using PowerShell. You also learned how to use PowerShell to scale a Kubernetes cluster and to access clusters withkubectl.
Next steps
Prepare an application
Deploy a Windows application on your Kubernetes cluster
Set up multiple administrators
Feedback
Was this page helpful?
Additional resources