Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Create SAS tokens for storage containers
Article
2024-12-11
1 contributor
In this article
This content applies to:v4.0 (GA)v3.1 (GA)v3.0 (GA)v2.1 (GA)
In this article, learn how to create user delegation, shared access signature (SAS) tokens, using either the Azure portal or Azure Storage Explorer. User delegation SAS tokens are secured with Microsoft Entra credentials. SAS tokens provide secure, delegated access to resources in your Azure storage account.

At a high level, here's how SAS tokens work:
First, your application submits the SAS token to Azure Storage as part of a REST API request.
First, your application submits the SAS token to Azure Storage as part of a REST API request.
Next, if the storage service verifies that the SAS is valid, the request is authorized. If, the SAS token is deemed invalid, the request is declined and the error code 403 (Forbidden) is returned.
Next, if the storage service verifies that the SAS is valid, the request is authorized. If, the SAS token is deemed invalid, the request is declined and the error code 403 (Forbidden) is returned.
Azure Blob Storage offers three resource types:
Storageaccounts provide a unique namespace in Azure for your data.
Data storage containersare located in storage accounts and organize sets of blobs.
Blobsare located in containers and store text and binary data such as files, text, and images.
When to use a SAS token
Training custom models. Your assembled set of training documentsmustbe uploaded to an Azure Blob Storage container. You can opt to use a SAS token to grant access to your training documents.
Training custom models. Your assembled set of training documentsmustbe uploaded to an Azure Blob Storage container. You can opt to use a SAS token to grant access to your training documents.
Using storage containers with public access. You can opt to use a SAS token to grant limited access to your storage resources that have public read access.ImportantIf your Azure storage account is protected by a virtual network or firewall, you can't grant access with a SAS token. You'll have to use amanaged identityto grant access to your storage resource.Managed identitysupports both privately and publicly accessible Azure Blob Storage accounts.SAS tokens grant permissions to storage resources, and should be protected in the same manner as an account key.Operations that use SAS tokens should be performed only over an HTTPS connection, and SAS URIs should only be distributed on a secure connection such as HTTPS.
Using storage containers with public access. You can opt to use a SAS token to grant limited access to your storage resources that have public read access.
Important
If your Azure storage account is protected by a virtual network or firewall, you can't grant access with a SAS token. You'll have to use amanaged identityto grant access to your storage resource.
If your Azure storage account is protected by a virtual network or firewall, you can't grant access with a SAS token. You'll have to use amanaged identityto grant access to your storage resource.
Managed identitysupports both privately and publicly accessible Azure Blob Storage accounts.
Managed identitysupports both privately and publicly accessible Azure Blob Storage accounts.
SAS tokens grant permissions to storage resources, and should be protected in the same manner as an account key.
SAS tokens grant permissions to storage resources, and should be protected in the same manner as an account key.
Operations that use SAS tokens should be performed only over an HTTPS connection, and SAS URIs should only be distributed on a secure connection such as HTTPS.
Operations that use SAS tokens should be performed only over an HTTPS connection, and SAS URIs should only be distributed on a secure connection such as HTTPS.
Prerequisites
To get started, you need:
An activeAzure account. If you don't have one, you cancreate a free account.
An activeAzure account. If you don't have one, you cancreate a free account.
ADocument Intelligenceormulti-serviceresource.
ADocument Intelligenceormulti-serviceresource.
Astandard performanceAzure Blob Storage account. You need to create containers to store and organize your blob data within your storage account. If you don't know how to create an Azure storage account with a storage container, follow these quickstarts:Create a storage account. When you create your storage account, selectStandardperformance in theInstance details>Performancefield.Create a container. When you create your container, setPublic access leveltoContainer(anonymous read access for containers and blobs) in theNew Containerwindow.
Astandard performanceAzure Blob Storage account. You need to create containers to store and organize your blob data within your storage account. If you don't know how to create an Azure storage account with a storage container, follow these quickstarts:
Create a storage account. When you create your storage account, selectStandardperformance in theInstance details>Performancefield.
Create a container. When you create your container, setPublic access leveltoContainer(anonymous read access for containers and blobs) in theNew Containerwindow.
Upload your documents
Sign in to theAzure portal.SelectYour storage accountâData storageâContainers.
Sign in to theAzure portal.
SelectYour storage accountâData storageâContainers.

Select a container from the list.
Select a container from the list.
SelectUploadfrom the menu at the top of the page.
SelectUploadfrom the menu at the top of the page.

TheUpload blobwindow appears. Select your files to upload.NoteBy default, the REST API uses documents located at the root of your container. You can also use data organized in subfolders if specified in the API call. For more information, seeOrganize your data in subfolders.
TheUpload blobwindow appears. Select your files to upload.

Note
By default, the REST API uses documents located at the root of your container. You can also use data organized in subfolders if specified in the API call. For more information, seeOrganize your data in subfolders.
Generating SAS tokens
Once the prerequisites are met and you upload your documents, you can now generate SAS tokens. There are two paths you can take from here; one using the Azure portal and the other using the Azure storage explorer. Select between the two following tabs for more information.
Azure Portal
Azure Storage Explorer
The Azure portal is a web-based console that enables you to manage your Azure subscription and resources using a graphical user interface (GUI).
Sign in to theAzure portal.
Sign in to theAzure portal.
Navigate toYour storage account>containers>your container.
Navigate toYour storage account>containers>your container.
SelectGenerate SASfrom the menu near the top of the page.
SelectGenerate SASfrom the menu near the top of the page.
SelectSigning methodâUser delegation key.
SelectSigning methodâUser delegation key.
DefinePermissionsby selecting or clearing the appropriate checkbox.Make sure theRead,Write,Delete, andListpermissions are selected.ImportantIf you receive a message similar to the following one, you'll also need to assign access to the blob data in your storage account:Azure role-based access control(Azure RBAC) is the authorization system used to manage access to Azure resources. Azure RBAC helps you manage access and permissions for your Azure resources.Assign an Azure role for access to blob datato assign a role that allows for read, write, and delete permissions for your Azure storage container.SeeStorage Blob Data Contributor.
DefinePermissionsby selecting or clearing the appropriate checkbox.
Make sure theRead,Write,Delete, andListpermissions are selected.

Important
If you receive a message similar to the following one, you'll also need to assign access to the blob data in your storage account:
If you receive a message similar to the following one, you'll also need to assign access to the blob data in your storage account:

Azure role-based access control(Azure RBAC) is the authorization system used to manage access to Azure resources. Azure RBAC helps you manage access and permissions for your Azure resources.
Azure role-based access control(Azure RBAC) is the authorization system used to manage access to Azure resources. Azure RBAC helps you manage access and permissions for your Azure resources.
Assign an Azure role for access to blob datato assign a role that allows for read, write, and delete permissions for your Azure storage container.SeeStorage Blob Data Contributor.
Assign an Azure role for access to blob datato assign a role that allows for read, write, and delete permissions for your Azure storage container.SeeStorage Blob Data Contributor.
Specify the signed keyStartandExpirytimes.When you create a SAS token, the default duration is 48 hours. After 48 hours, you'll need to create a new token.Consider setting a longer duration period for the time you're using your storage account for Document Intelligence Service operations.The value of the expiry time is determined by whether you're using anAccount keyorUser delegation keySigning method:Account key: No imposed maximum time limit; however, best practices recommended that you configure an expiration policy to limit the interval and minimize compromise.Configure an expiration policy for shared access signatures.User delegation key: The value for the expiry time is a maximum of seven days from the creation of the SAS token. The SAS is invalid after the user delegation key expires, so a SAS with an expiry time of greater than seven days will still only be valid for seven days. For more information,seeUse Microsoft Entra credentials to secure a SAS.
Specify the signed keyStartandExpirytimes.
When you create a SAS token, the default duration is 48 hours. After 48 hours, you'll need to create a new token.
Consider setting a longer duration period for the time you're using your storage account for Document Intelligence Service operations.
The value of the expiry time is determined by whether you're using anAccount keyorUser delegation keySigning method:Account key: No imposed maximum time limit; however, best practices recommended that you configure an expiration policy to limit the interval and minimize compromise.Configure an expiration policy for shared access signatures.User delegation key: The value for the expiry time is a maximum of seven days from the creation of the SAS token. The SAS is invalid after the user delegation key expires, so a SAS with an expiry time of greater than seven days will still only be valid for seven days. For more information,seeUse Microsoft Entra credentials to secure a SAS.
Account key: No imposed maximum time limit; however, best practices recommended that you configure an expiration policy to limit the interval and minimize compromise.Configure an expiration policy for shared access signatures.
User delegation key: The value for the expiry time is a maximum of seven days from the creation of the SAS token. The SAS is invalid after the user delegation key expires, so a SAS with an expiry time of greater than seven days will still only be valid for seven days. For more information,seeUse Microsoft Entra credentials to secure a SAS.
TheAllowed IP addressesfield is optional and specifies an IP address or a range of IP addresses from which to accept requests. If the request IP address doesn't match the IP address or address range specified on the SAS token, authorization fails. The IP address or a range of IP addresses must be public IPs, not private. For more information,see,Specify an IP address or IP range.
TheAllowed IP addressesfield is optional and specifies an IP address or a range of IP addresses from which to accept requests. If the request IP address doesn't match the IP address or address range specified on the SAS token, authorization fails. The IP address or a range of IP addresses must be public IPs, not private. For more information,see,Specify an IP address or IP range.
TheAllowed protocolsfield is optional and specifies the protocol permitted for a request made with the SAS token. The default value is HTTPS.
TheAllowed protocolsfield is optional and specifies the protocol permitted for a request made with the SAS token. The default value is HTTPS.
SelectGenerate SAS token and URL.
SelectGenerate SAS token and URL.
TheBlob SAS tokenquery string andBlob SAS URLappear in the lower area of the window. To use the Blob SAS token, append it to a storage service URI.
TheBlob SAS tokenquery string andBlob SAS URLappear in the lower area of the window. To use the Blob SAS token, append it to a storage service URI.
Copy and paste theBlob SAS tokenandBlob SAS URLvalues in a secure location. The values are displayed only once and can't be retrieved after the window is closed.
Copy and paste theBlob SAS tokenandBlob SAS URLvalues in a secure location. The values are displayed only once and can't be retrieved after the window is closed.
Toconstruct a SAS URL, append the SAS token (URI) to the URL for a storage service.
Toconstruct a SAS URL, append the SAS token (URI) to the URL for a storage service.
Azure Storage Explorer is a free standalone app that enables you to easily manage your Azure cloud storage resources from your desktop.
You need theAzure Storage Explorerapp installed in your Windows, macOS, or Linux development environment.
You need theAzure Storage Explorerapp installed in your Windows, macOS, or Linux development environment.
After the Azure Storage Explorer app is installed,connect it the storage accountyou're using for Document Intelligence.
After the Azure Storage Explorer app is installed,connect it the storage accountyou're using for Document Intelligence.
Open the Azure Storage Explorer app on your local machine and navigate to your connectedStorage Accounts.
Open the Azure Storage Explorer app on your local machine and navigate to your connectedStorage Accounts.
Expand the Storage Accounts node and selectBlob Containers.
Expand the Storage Accounts node and selectBlob Containers.
Expand the Blob Containers node and right-click a storagecontainernode to display the options menu.
Expand the Blob Containers node and right-click a storagecontainernode to display the options menu.
SelectGet Shared Access Signaturefrom options menu.
SelectGet Shared Access Signaturefrom options menu.
In theShared Access Signaturewindow, make the following selections:Select yourAccess policy(the default is none).Specify the signed keyStartandExpirydate and time. A short lifespan is recommended because, once generated, a SAS can't be revoked.Select theTime zonefor the Start and Expiry date and time (default is Local).Define your containerPermissionsby selecting theRead,Write,List, andDeletecheckboxes.Selectkey1orkey2.Review and selectCreate.
In theShared Access Signaturewindow, make the following selections:
Select yourAccess policy(the default is none).
Specify the signed keyStartandExpirydate and time. A short lifespan is recommended because, once generated, a SAS can't be revoked.
Select theTime zonefor the Start and Expiry date and time (default is Local).
Define your containerPermissionsby selecting theRead,Write,List, andDeletecheckboxes.
Selectkey1orkey2.
Review and selectCreate.
A new window appears with theContainername,SAS URL, andQuery stringfor your container.
A new window appears with theContainername,SAS URL, andQuery stringfor your container.
Copy and paste the SAS URL and query string values in a secure location. They'll only be displayed once and can't be retrieved once the window is closed.
Copy and paste the SAS URL and query string values in a secure location. They'll only be displayed once and can't be retrieved once the window is closed.
Toconstruct a SAS URL, append the SAS token (URI) to the URL for a storage service.
Toconstruct a SAS URL, append the SAS token (URI) to the URL for a storage service.
Use your SAS URL to grant access
The SAS URL includes a special set ofquery parameters. Those parameters indicate how the client accesses the resources.
REST API
To use your SAS URL with theREST API, add the SAS URL to the request body:
{
    "source":"<BLOB SAS URL>"
}
{
    "source":"<BLOB SAS URL>"
}
That's it! You learned how to create SAS tokens to authorize how clients access your data.
Next step
Build a training data set
Feedback
Was this page helpful?
Additional resources