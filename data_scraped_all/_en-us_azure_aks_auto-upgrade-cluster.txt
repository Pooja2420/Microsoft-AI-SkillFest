Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Automatically upgrade an Azure Kubernetes Service (AKS) cluster
Article
2024-08-01
10 contributors
In this article
Part of the AKS cluster lifecycle involves performing periodic upgrades to the latest Kubernetes version. Itâs important you apply the latest security releases or upgrade to get the latest features. Before learning about auto-upgrade, make sure you understand theAKS cluster upgrade fundamentals.
Note
Any upgrade operation, whether performed manually or automatically, upgrades the node image version if it's not already on the latest version. The latest version is contingent on a full AKS release and can be determined by visiting theAKS release tracker.
Auto-upgrade first upgrades the control plane, and then upgrades agent pools one by one.
Why use cluster auto-upgrade
Cluster auto-upgrade provides a "set once and forget" mechanism that yields tangible time and operational cost benefits. You don't need to stop your workloads, redeploy your workloads, or create a new AKS cluster. By enabling auto-upgrade, you can ensure your clusters are up to date and don't miss the latest features or patches from AKS and upstream Kubernetes.
AKS follows a strict supportability versioning window. With properly selected auto-upgrade channels, you can avoid clusters falling into an unsupported version. For more on the AKS support window, seeAlias minor versions.
Customer versus AKS-initiated auto-upgrades
You can specify cluster auto-upgrade specifics using the following guidance. The upgrades occur based on your specified cadence and are recommended to remain on supported Kubernetes versions.
AKS also initiates auto-upgrades for unsupported clusters. When a cluster in an n-3 version (where n is the latest supported AKS GA minor version) is about to drop to n-4, AKS automatically upgrades the cluster to n-2 to remain in an AKS supportpolicy. Automatically upgrading a platform supported cluster to a supported version is enabled by default. Stopped node pools are upgraded during an auto-upgrade operation. The upgrade applies to nodes when the node pool is started. To minimize disruptions, set upmaintenance windows.
Cluster auto-upgrade limitations
If youâre using cluster auto-upgrade, you can no longer upgrade the control plane first, and then upgrade the individual node pools. Cluster auto-upgrade always upgrades the control plane and the node pools together. You can't upgrade the control plane only. Running theaz aks upgrade --control-plane-onlycommand raises the following error:NotAllAgentPoolOrchestratorVersionSpecifiedAndUnchanged: Using managed cluster api, all Agent pools' OrchestratorVersion must be all specified or all unspecified. If all specified, they must be stay unchanged or the same with control plane.
az aks upgrade --control-plane-only
NotAllAgentPoolOrchestratorVersionSpecifiedAndUnchanged: Using managed cluster api, all Agent pools' OrchestratorVersion must be all specified or all unspecified. If all specified, they must be stay unchanged or the same with control plane.
If using thenode-image(legacy and not to be used) cluster auto-upgrade channel or theNodeImagenode image auto-upgrade channel, Linuxunattended upgradesare disabled by default.
node-image
NodeImage
Cluster auto-upgrade channels
Automatically completed upgrades are functionally the same as manual upgrades. Theselected auto-upgrade channeldetermines the timing of upgrades. When making changes to auto-upgrade, allow 24 hours for the changes to take effect. Automatically upgrading a cluster follows the same process as manually upgrading a cluster. For more information, seeUpgrade an AKS cluster.
The following upgrade channels are available:
none
patch
stable
rapid
node-image
NodeImage
Note
Keep the following information in mind when using cluster auto-upgrade:
Cluster auto-upgrade only updates to GA versions of Kubernetes and doesn't update to preview versions.
Cluster auto-upgrade only updates to GA versions of Kubernetes and doesn't update to preview versions.
With AKS, you can create a cluster without specifying the exact patch version. When you create a cluster without designating a patch, the cluster runs the minor version's latest GA patch. To learn more, seeAKS support window.
With AKS, you can create a cluster without specifying the exact patch version. When you create a cluster without designating a patch, the cluster runs the minor version's latest GA patch. To learn more, seeAKS support window.
Auto-upgrade requires the cluster's Kubernetes version to be within theAKS support window, even if using thenode-imagechannel.
Auto-upgrade requires the cluster's Kubernetes version to be within theAKS support window, even if using thenode-imagechannel.
node-image
If you're using the preview API11-02-previewor later, and you select thenode-imagecluster auto-upgrade channel, thenode image auto-upgrade channelautomatically sets toNodeImage.
If you're using the preview API11-02-previewor later, and you select thenode-imagecluster auto-upgrade channel, thenode image auto-upgrade channelautomatically sets toNodeImage.
11-02-preview
node-image
NodeImage
Each cluster can only be associated with a single auto-upgrade channel. This is because your specified channel determines the Kubernetes version that runs on the cluster.
Each cluster can only be associated with a single auto-upgrade channel. This is because your specified channel determines the Kubernetes version that runs on the cluster.
If your cluster has no auto-upgrade channel and you enable it for LTS(Long-Term Support), it will default to apatchauto-upgrade channel.
If your cluster has no auto-upgrade channel and you enable it for LTS(Long-Term Support), it will default to apatchauto-upgrade channel.
patch
Use cluster auto-upgrade with a new AKS cluster
Azure CLI
Azure portal
Set the auto-upgrade channel when creating a new cluster using theaz aks createcommand and theauto-upgrade-channelparameter.az aks create --resource-group myResourceGroup --name myAKSCluster --auto-upgrade-channel stable --generate-ssh-keys
Set the auto-upgrade channel when creating a new cluster using theaz aks createcommand and theauto-upgrade-channelparameter.
az aks create
auto-upgrade-channel
az aks create --resource-group myResourceGroup --name myAKSCluster --auto-upgrade-channel stable --generate-ssh-keys
az aks create --resource-group myResourceGroup --name myAKSCluster --auto-upgrade-channel stable --generate-ssh-keys
In the Azure portal, selectCreate a resource>Containers>Azure Kubernetes Service (AKS).
In the Azure portal, selectCreate a resource>Containers>Azure Kubernetes Service (AKS).
In theBasicstab, underCluster details, select the desired auto-upgrade channel from theAutomatic upgradedropdown. We recommend selecting theEnabled with patch (recommended)option.
In theBasicstab, underCluster details, select the desired auto-upgrade channel from theAutomatic upgradedropdown. We recommend selecting theEnabled with patch (recommended)option.

Complete the remaining steps to create the cluster.
Complete the remaining steps to create the cluster.
Use cluster auto-upgrade with an existing AKS cluster
Azure CLI
Azure portal
Set the auto-upgrade channel on an existing cluster using theaz aks updatecommand with theauto-upgrade-channelparameter.az aks update --resource-group myResourceGroup --name myAKSCluster --auto-upgrade-channel stable
Set the auto-upgrade channel on an existing cluster using theaz aks updatecommand with theauto-upgrade-channelparameter.
az aks update
auto-upgrade-channel
az aks update --resource-group myResourceGroup --name myAKSCluster --auto-upgrade-channel stable
az aks update --resource-group myResourceGroup --name myAKSCluster --auto-upgrade-channel stable
In the Azure portal, navigate to your AKS cluster.
In the Azure portal, navigate to your AKS cluster.
In the service menu, underSettings, selectCluster configuration.
In the service menu, underSettings, selectCluster configuration.
UnderUpgrade>Kubernetes version, selectUpgrade version.
UnderUpgrade>Kubernetes version, selectUpgrade version.

On theUpgrade Kubernetes versionpage, select the desired auto-upgrade channel from theAutomatic upgradedropdown. We recommend selecting theEnabled with patch (recommended)option.
On theUpgrade Kubernetes versionpage, select the desired auto-upgrade channel from theAutomatic upgradedropdown. We recommend selecting theEnabled with patch (recommended)option.

SelectSave.
SelectSave.
Use auto-upgrade with Planned Maintenance
If using Planned Maintenance and cluster auto-upgrade, your upgrade starts during your specified maintenance window.
Note
To ensure proper functionality, use a maintenance window offour hours or more.
For more information on how to set a maintenance window with Planned Maintenance, seeUse Planned Maintenance to schedule maintenance windows for your Azure Kubernetes Service (AKS) cluster.
Best practices for cluster auto-upgrade
Use the following best practices to help maximize your success when using auto-upgrade:
To ensure your cluster is always in a supported version (i.e within the N-2 rule), choose eitherstableorrapidchannels.
stable
rapid
If you're interested in getting the latest patches as soon as possible, use thepatchchannel. Thenode-imagechannel is a good fit if you want your agent pools to always run the most recent node images.
patch
node-image
To automatically upgrade node images while using a different cluster upgrade channel, consider using thenode image auto-upgradeNodeImagechannel.
NodeImage
FollowOperator best practices.
FollowPDB best practices.
For upgrade troubleshooting information, see theAKS troubleshooting documentation.
For a detailed discussion of upgrade best practices and other considerations, seeAKS patch and upgrade guidance.
Azure Kubernetes Service

Additional resources