Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Use environment variables with Azure AI services
Article
2025-02-13
4 contributors
In this article
This guide shows you how to set and retrieve environment variables for your Azure AI services credentials when you test applications.
Important
We recommend Microsoft Entra ID authentication withmanaged identities for Azure resourcesto avoid storing credentials with your applications that run in the cloud.
Use API keys with caution. Don't include the API key directly in your code, and never post it publicly. If using API keys, store them securely in Azure Key Vault, rotate the keys regularly, and restrict access to Azure Key Vault using role based access control and network access restrictions. For more information about using API keys securely in your apps, seeAPI keys with Azure Key Vault.
For more information about AI services security, seeAuthenticate requests to Azure AI services.
Set an environment variable
To set environment variables, use one the following commands, where theENVIRONMENT_VARIABLE_KEYis the named key andvalueis the value stored in the environment variable.
ENVIRONMENT_VARIABLE_KEY
value
Command Line
PowerShell
Bash
Use the following command to create and assign a persisted environment variable, given the input value.
:: Assigns the env var to the value
setx ENVIRONMENT_VARIABLE_KEY "value"
:: Assigns the env var to the value
setx ENVIRONMENT_VARIABLE_KEY "value"
In a new instance of the Command Prompt, use the following command to read the environment variable.
:: Prints the env var value
echo %ENVIRONMENT_VARIABLE_KEY%
:: Prints the env var value
echo %ENVIRONMENT_VARIABLE_KEY%
Use the following command to create and assign a persisted environment variable, given the input value.
# Assigns the env var to the value
[System.Environment]::SetEnvironmentVariable('ENVIRONMENT_VARIABLE_KEY', 'value', 'User')
# Assigns the env var to the value
[System.Environment]::SetEnvironmentVariable('ENVIRONMENT_VARIABLE_KEY', 'value', 'User')
In a new instance of the Windows PowerShell, use the following command to read the environment variable.
# Prints the env var value
[System.Environment]::GetEnvironmentVariable('ENVIRONMENT_VARIABLE_KEY')
# Prints the env var value
[System.Environment]::GetEnvironmentVariable('ENVIRONMENT_VARIABLE_KEY')
Use the following command to create and assign a persisted environment variable, given the input value.
# Assigns the env var to the value
echo export ENVIRONMENT_VARIABLE_KEY="value" >> /etc/environment && source /etc/environment
# Assigns the env var to the value
echo export ENVIRONMENT_VARIABLE_KEY="value" >> /etc/environment && source /etc/environment
In a new instance of theBash, use the following command to read the environment variable.
# Prints the env var value
echo "${ENVIRONMENT_VARIABLE_KEY}"

# Or use printenv:
# printenv ENVIRONMENT_VARIABLE_KEY
# Prints the env var value
echo "${ENVIRONMENT_VARIABLE_KEY}"

# Or use printenv:
# printenv ENVIRONMENT_VARIABLE_KEY
Tip
After you set an environment variable, restart your integrated development environment (IDE) to ensure that the newly added environment variables are available.
Retrieve an environment variable
To use an environment variable in your code, it must be read into memory. Use one of the following code snippets, depending on which language you're using. These code snippets demonstrate how to get an environment variable given theENVIRONMENT_VARIABLE_KEYand assign the value to a program variable namedvalue.
ENVIRONMENT_VARIABLE_KEY
value
C#
C++
Java
Node.js
Python
Objective-C
For more information, seeEnvironment.GetEnvironmentVariable.
Environment.GetEnvironmentVariable
using static System.Environment;

class Program
{
    static void Main()
    {
        // Get the named env var, and assign it to the value variable
        var value =
            GetEnvironmentVariable(
                "ENVIRONMENT_VARIABLE_KEY");
    }
}
using static System.Environment;

class Program
{
    static void Main()
    {
        // Get the named env var, and assign it to the value variable
        var value =
            GetEnvironmentVariable(
                "ENVIRONMENT_VARIABLE_KEY");
    }
}
For more information, seegetenv_sandgetenv.
getenv_s
getenv
#include <iostream> 
#include <stdlib.h>

std::string GetEnvironmentVariable(const char* name);

int main()
{
    // Get the named env var, and assign it to the value variable
    auto value = GetEnvironmentVariable("ENVIRONMENT_VARIABLE_KEY");
}

std::string GetEnvironmentVariable(const char* name)
{
#if defined(_MSC_VER)
    size_t requiredSize = 0;
    (void)getenv_s(&requiredSize, nullptr, 0, name);
    if (requiredSize == 0)
    {
        return "";
    }
    auto buffer = std::make_unique<char[]>(requiredSize);
    (void)getenv_s(&requiredSize, buffer.get(), requiredSize, name);
    return buffer.get();
#else
    auto value = getenv(name);
    return value ? value : "";
#endif
}
#include <iostream> 
#include <stdlib.h>

std::string GetEnvironmentVariable(const char* name);

int main()
{
    // Get the named env var, and assign it to the value variable
    auto value = GetEnvironmentVariable("ENVIRONMENT_VARIABLE_KEY");
}

std::string GetEnvironmentVariable(const char* name)
{
#if defined(_MSC_VER)
    size_t requiredSize = 0;
    (void)getenv_s(&requiredSize, nullptr, 0, name);
    if (requiredSize == 0)
    {
        return "";
    }
    auto buffer = std::make_unique<char[]>(requiredSize);
    (void)getenv_s(&requiredSize, buffer.get(), requiredSize, name);
    return buffer.get();
#else
    auto value = getenv(name);
    return value ? value : "";
#endif
}
For more information, seeSystem.getenv.
System.getenv
import java.lang.*;

public class Program {
   public static void main(String[] args) throws Exception {
    // Get the named env var, and assign it to the value variable
    String value =
        System.getenv(
            "ENVIRONMENT_VARIABLE_KEY")
   }
}
import java.lang.*;

public class Program {
   public static void main(String[] args) throws Exception {
    // Get the named env var, and assign it to the value variable
    String value =
        System.getenv(
            "ENVIRONMENT_VARIABLE_KEY")
   }
}
For more information, seeprocess.env.
process.env
// Get the named env var, and assign it to the value variable
const value =
    process.env.ENVIRONMENT_VARIABLE_KEY;
// Get the named env var, and assign it to the value variable
const value =
    process.env.ENVIRONMENT_VARIABLE_KEY;
For more information, seeos.environ.
os.environ
import os

# Get the named env var, and assign it to the value variable
value = os.environ['ENVIRONMENT_VARIABLE_KEY']
import os

# Get the named env var, and assign it to the value variable
value = os.environ['ENVIRONMENT_VARIABLE_KEY']
For more information, seeenvironment.
environment
// Get the named env var, and assign it to the value variable
NSString* value =
    [[[NSProcessInfo processInfo]environment]objectForKey:@"ENVIRONMENT_VARIABLE_KEY"];
// Get the named env var, and assign it to the value variable
NSString* value =
    [[[NSProcessInfo processInfo]environment]objectForKey:@"ENVIRONMENT_VARIABLE_KEY"];
Next steps
ExploreAzure AI servicesand choose a service to get started.
Feedback
Was this page helpful?
Additional resources