Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Protect your cloud estate
Article
2025-04-25
6 contributors
In this article
This article provides best practices for maintaining the reliability and security of your Azure cloud estate. Reliability ensures your cloud services remain operational with minimal downtime. Security safeguards the confidentiality, integrity, and availability of your resources. Both reliability and security are critical for successful cloud operations.

Manage reliability
Reliability management involves using redundancy, replication, and defined recovery strategies to minimize downtime and protect your business.Table 1provides an example of three workload priorities, reliability requirements (uptime SLO, max downtime, redundancy, load balancing, replication), and example scenarios that align with service-level objectives (SLOs)
Table 1. Example of workload priority and reliability requirements.
Identify reliability responsibilities
Reliability responsibilities vary by deployment model. Use the following table to identify your management responsibilities for infrastructure (IaaS), platform (PaaS), software (SaaS), and on-premises deployments.
For more information, seeShared responsibility for reliability.
Define reliability requirements
Clearly defined reliability requirements are critical for uptime targets, recovery, and data loss tolerance. Follow these steps to define reliability requirements:
Prioritize workloads.Assign high, medium (default), or low priorities to workloads based on business criticality and financial investment levels. Regularly review priorities to maintain alignment with business goals.
Prioritize workloads.Assign high, medium (default), or low priorities to workloads based on business criticality and financial investment levels. Regularly review priorities to maintain alignment with business goals.
Assign uptime service level objective (SLO) to all workloads.Your SLO influences your architecture, data management strategies, recovery processes, and costs. Establish uptime targets according to workload priority. Higher-priority workloads require stricter uptime goals.
Assign uptime service level objective (SLO) to all workloads.Your SLO influences your architecture, data management strategies, recovery processes, and costs. Establish uptime targets according to workload priority. Higher-priority workloads require stricter uptime goals.
Identify service level indicators (SLIs).Use SLIs to measure uptime performance against your SLO. Examples includeservice health monitoringanderror rates.
Identify service level indicators (SLIs).Use SLIs to measure uptime performance against your SLO. Examples includeservice health monitoringanderror rates.
Assign a recovery time objective (RTO) to all workloads.The RTO defines the maximum acceptable downtime for your workload. RTO should be shorter than your annual downtime allowance. For example, an uptime SLO 99.99% requires less than 52 minutes of annual downtime (4.32 minutes per month). Follow these steps:Estimate the number of failures.Estimate how often you think each workload might fail per year. For workloads with operational history, use your SLIs. For new workloads, perform afailure mode analysisto get an accurate estimate.Estimate the RTO.Divide your annual allowable downtime by the estimated number of failures. If you estimate four failures per year, then your RTO must be 13 minutes or less (52 minutes / 4 failures = 13-minute RTO).Test your recovery time.Track the average time it takes to recover during failover tests and live failures. The time it takes you to recover from failure must be less than your RTO.
Assign a recovery time objective (RTO) to all workloads.The RTO defines the maximum acceptable downtime for your workload. RTO should be shorter than your annual downtime allowance. For example, an uptime SLO 99.99% requires less than 52 minutes of annual downtime (4.32 minutes per month). Follow these steps:
Estimate the number of failures.Estimate how often you think each workload might fail per year. For workloads with operational history, use your SLIs. For new workloads, perform afailure mode analysisto get an accurate estimate.
Estimate the number of failures.Estimate how often you think each workload might fail per year. For workloads with operational history, use your SLIs. For new workloads, perform afailure mode analysisto get an accurate estimate.
Estimate the RTO.Divide your annual allowable downtime by the estimated number of failures. If you estimate four failures per year, then your RTO must be 13 minutes or less (52 minutes / 4 failures = 13-minute RTO).
Estimate the RTO.Divide your annual allowable downtime by the estimated number of failures. If you estimate four failures per year, then your RTO must be 13 minutes or less (52 minutes / 4 failures = 13-minute RTO).
Test your recovery time.Track the average time it takes to recover during failover tests and live failures. The time it takes you to recover from failure must be less than your RTO.
Test your recovery time.Track the average time it takes to recover during failover tests and live failures. The time it takes you to recover from failure must be less than your RTO.
Define recovery point objectives (RPO) for all workloads.Your RPO influences how frequently you replicate and back up your data. Determine how much data loss your business can tolerate.
Define recovery point objectives (RPO) for all workloads.Your RPO influences how frequently you replicate and back up your data. Determine how much data loss your business can tolerate.
Define workload reliability targets.For workload reliability targets, see the Well-Architected FrameworkâsRecommendations for defining reliability targets.
Define workload reliability targets.For workload reliability targets, see the Well-Architected FrameworkâsRecommendations for defining reliability targets.
Manage data reliability
Data reliability involves data replication (replicas) and backups (point in time copies) to maintain availability and consistency. SeeTable 2for examples of workload priority aligned with data reliability targets.
Table 2. Workload priority with example data reliability configurations.
You must align data reliability configurations with the RTO and RPO requirements of your workloads. To make that alignment, follow these steps:
Manage data replication.Replicate your data synchronously or asynchronously according to your workloadâs RTO and RPO requirements.Data distributionData replicationLoad balancing configurationAcross availability zonesSynchronous (near real-time)Most PaaS services handle cross-zone load balancing nativelyAcross regions (active-active)SynchronousActive-active load balancingAcross regions (active-passive)Asynchronous (periodic)Active-passive configurationFor more information, seeReplication: Redundancy for data.
Manage data replication.Replicate your data synchronously or asynchronously according to your workloadâs RTO and RPO requirements.
For more information, seeReplication: Redundancy for data.
Manage data backups.Backups are for disaster recovery (service failure), data recovery (deletion or corruption), and incident response (security). Backups must support your RTO and RPO requirements for each workload. Prefer backup solutions built-in to your Azure service, such as native backup features in Azure Cosmos DB and Azure SQL Database. Where native backups are unavailable, including on-premises data, useAzure Backup. For more information, seeBackup.
Manage data backups.Backups are for disaster recovery (service failure), data recovery (deletion or corruption), and incident response (security). Backups must support your RTO and RPO requirements for each workload. Prefer backup solutions built-in to your Azure service, such as native backup features in Azure Cosmos DB and Azure SQL Database. Where native backups are unavailable, including on-premises data, useAzure Backup. For more information, seeBackup.
Design workload data reliability.For workload data reliability design, see the Well-Architected FrameworkData partitioning guideandAzure service guides(start with the Reliability section).
Design workload data reliability.For workload data reliability design, see the Well-Architected FrameworkData partitioning guideandAzure service guides(start with the Reliability section).
Manage code and runtime reliability
Code and runtime reliability is a workload responsibility. Follow the Well-Architected Frameworkâsself-healing and self-preservation guide.
Manage cloud resources reliability
Managing the reliability of your cloud resources often requires architecture redundancy (duplicate service instances) and an effective load-balancing strategy. SeeTable 3for examples of architecture redundancy aligned with workload priority.
Table 3. Workload priority and architecture redundancy examples.
Your approach must implement architecture redundancy to meet the reliability requirements of your workloads. Follow these steps:
Estimate the uptime of your architectures.For each workload, calculate the composite SLA. Only include services that could cause the workload to fail (critical path).List every service in the workloadâs critical path. Collect each serviceâsMicrosoft uptime SLAsfrom the official document.Decide whether the workload includes independent critical paths. An independent path can fail and the workload remains available.If you have one critical path, use the single-region formula: N = S1Ã S2Ã S3Ã â¦ Ã Sn.If you have two or more critical paths, use the independent-path formula: N = S1x 1 - [(1 - S2) Ã (1 - S3)].Complex workloads often combine both formula types. Example: N = S1Ã S2Ã S3Ã (S4x 1 - [(1 - S5) Ã (1 - S6)]).For multi-region applications, use the formula for the multi-region formula: M = 1 - (1 - N)^RCompare your calculated uptime with your uptime SLO. A deficit requires higher-tier SLAs or additional redundancy. Recalculate after each change. Stop after the calculated uptime exceeds the SLO.Use caseFormulaVariablesExampleExplanationSingle-regionN = S1Ã S2Ã S3Ã â¦ Ã SnN= Composite SLA.S= SLA of the Azure service.n= number of services on critical path.N = 99.99% (app) Ã 99.95% (database) Ã 99.9% (cache)Simple workload with app (99.99%), database (99.95%), and cache (99.9%) in a single critical path.Independent pathsS1x 1 - [(1 - S2) Ã (1 - S3)]S= SLA of the Azure service.99.99% (app) Ã (1 - [(1 - 99.95% database) Ã (1 - 99.9% cache)])In the app, either the database (99.95%) or cache (99.9%) can fail without causing downtime.Multi-regionM = 1 - (1 - N)^RM= Multi-region SLA.N= Single-region SLA.R= Number of regions.If N = 99.95% and R = 2, then M = 1 - (1 - 99.95%)^2Workload deployed in two regions.
Estimate the uptime of your architectures.For each workload, calculate the composite SLA. Only include services that could cause the workload to fail (critical path).
List every service in the workloadâs critical path. Collect each serviceâsMicrosoft uptime SLAsfrom the official document.
List every service in the workloadâs critical path. Collect each serviceâsMicrosoft uptime SLAsfrom the official document.
Decide whether the workload includes independent critical paths. An independent path can fail and the workload remains available.
Decide whether the workload includes independent critical paths. An independent path can fail and the workload remains available.
If you have one critical path, use the single-region formula: N = S1Ã S2Ã S3Ã â¦ Ã Sn.
If you have one critical path, use the single-region formula: N = S1Ã S2Ã S3Ã â¦ Ã Sn.
If you have two or more critical paths, use the independent-path formula: N = S1x 1 - [(1 - S2) Ã (1 - S3)].
If you have two or more critical paths, use the independent-path formula: N = S1x 1 - [(1 - S2) Ã (1 - S3)].
Complex workloads often combine both formula types. Example: N = S1Ã S2Ã S3Ã (S4x 1 - [(1 - S5) Ã (1 - S6)]).
Complex workloads often combine both formula types. Example: N = S1Ã S2Ã S3Ã (S4x 1 - [(1 - S5) Ã (1 - S6)]).
For multi-region applications, use the formula for the multi-region formula: M = 1 - (1 - N)^R
For multi-region applications, use the formula for the multi-region formula: M = 1 - (1 - N)^R
Compare your calculated uptime with your uptime SLO. A deficit requires higher-tier SLAs or additional redundancy. Recalculate after each change. Stop after the calculated uptime exceeds the SLO.
Compare your calculated uptime with your uptime SLO. A deficit requires higher-tier SLAs or additional redundancy. Recalculate after each change. Stop after the calculated uptime exceeds the SLO.
Adjust service tiers.Before modifying architectures, evaluate whether different Azure service tiers (SKUs) can meet your reliability requirements. Some Azure service tiers can have different uptime SLAs, such as Azure Managed Disks.
Adjust service tiers.Before modifying architectures, evaluate whether different Azure service tiers (SKUs) can meet your reliability requirements. Some Azure service tiers can have different uptime SLAs, such as Azure Managed Disks.
Add architecture redundancy.If your current uptime estimate falls short of your SLO, increase redundancy:Use multiple availability zones.Configure your workloads to use multiple availability zones. How availability zones improve your uptime can be difficult to estimate. Only a select number of services have uptime SLAs that account for availability zones. Where SLAs account for availability zones, use them in your uptime estimates. See the following table for some examples.Azure service typeAzure services with Availability Zone SLAsCompute PlatformApp ServiceAzure Kubernetes ServiceVirtual MachinesDatastoreAzure Service BusAzure Storage AccountsAzure Cache for RedisAzure Files Premium TierDatabaseAzure Cosmos DBAzure SQL DatabaseAzure Database for MySQLAzure Database for PostgreSQLAzure Managed Instance for Apache CassandraLoad BalancerApplication GatewaySecurityAzure FirewallUse multiple regions.Multiple regions are often necessary to meet uptime SLOs. Use global load balancers (Azure Front Door or Traffic Manager) for traffic distribution. Multi-region architectures require careful data consistency management.
Add architecture redundancy.If your current uptime estimate falls short of your SLO, increase redundancy:
Use multiple availability zones.Configure your workloads to use multiple availability zones. How availability zones improve your uptime can be difficult to estimate. Only a select number of services have uptime SLAs that account for availability zones. Where SLAs account for availability zones, use them in your uptime estimates. See the following table for some examples.Azure service typeAzure services with Availability Zone SLAsCompute PlatformApp ServiceAzure Kubernetes ServiceVirtual MachinesDatastoreAzure Service BusAzure Storage AccountsAzure Cache for RedisAzure Files Premium TierDatabaseAzure Cosmos DBAzure SQL DatabaseAzure Database for MySQLAzure Database for PostgreSQLAzure Managed Instance for Apache CassandraLoad BalancerApplication GatewaySecurityAzure Firewall
Use multiple availability zones.Configure your workloads to use multiple availability zones. How availability zones improve your uptime can be difficult to estimate. Only a select number of services have uptime SLAs that account for availability zones. Where SLAs account for availability zones, use them in your uptime estimates. See the following table for some examples.
Use multiple regions.Multiple regions are often necessary to meet uptime SLOs. Use global load balancers (Azure Front Door or Traffic Manager) for traffic distribution. Multi-region architectures require careful data consistency management.
Use multiple regions.Multiple regions are often necessary to meet uptime SLOs. Use global load balancers (Azure Front Door or Traffic Manager) for traffic distribution. Multi-region architectures require careful data consistency management.
Manage architecture redundancy.Decide how to use redundancy: You can use architecture redundancy as part of daily operations (active). Or you can use architecture redundancy in disaster recovery scenarios (passive). For examples, seeTable 3.Load balance across availability zones.Use all availability actively. Many Azure PaaS services manage load balancing across availability zones automatically. IaaS workloads must use aninternal load balancerto load balance across availability zones.Load balance across regions.Determine whether multi-region workloads should run active-active or active-passive based on reliability needs.
Manage architecture redundancy.Decide how to use redundancy: You can use architecture redundancy as part of daily operations (active). Or you can use architecture redundancy in disaster recovery scenarios (passive). For examples, seeTable 3.
Load balance across availability zones.Use all availability actively. Many Azure PaaS services manage load balancing across availability zones automatically. IaaS workloads must use aninternal load balancerto load balance across availability zones.
Load balance across availability zones.Use all availability actively. Many Azure PaaS services manage load balancing across availability zones automatically. IaaS workloads must use aninternal load balancerto load balance across availability zones.
Load balance across regions.Determine whether multi-region workloads should run active-active or active-passive based on reliability needs.
Load balance across regions.Determine whether multi-region workloads should run active-active or active-passive based on reliability needs.
Manage service configurations.Consistently apply configurations across redundant instances of Azure resources, so the resources behave in the same way. Useinfrastructure as codeto maintain consistency. For more information, seeDuplicate resource configuration.
Manage service configurations.Consistently apply configurations across redundant instances of Azure resources, so the resources behave in the same way. Useinfrastructure as codeto maintain consistency. For more information, seeDuplicate resource configuration.
Design workload reliability.For workload reliability design, see the Well-Architected Framework:Workload reliabilityGuidanceReliability pillarHighly available multi-region designDesigning for redundancyUsing availability zones and regionsService guideAzure service guides(start with the Reliability section)
Design workload reliability.For workload reliability design, see the Well-Architected Framework:
For more information, seeRedundancy.
Manage business continuity
Recovering from a failure requires a clear strategy to restore services quickly and minimize disruption to maintain user satisfaction. Follow these steps:
Prepare for failures.Create separate recovery procedures for workloads based on high, medium, and low priorities.Data reliability,code and runtime reliability, andcloud resource reliabilityare the foundation of preparing for failure. Select other recovery tools to assist with business continuity preparation. For example, useAzure Site Recoveryfor on-premises and virtual-machine based server workloads.
Prepare for failures.Create separate recovery procedures for workloads based on high, medium, and low priorities.Data reliability,code and runtime reliability, andcloud resource reliabilityare the foundation of preparing for failure. Select other recovery tools to assist with business continuity preparation. For example, useAzure Site Recoveryfor on-premises and virtual-machine based server workloads.
Test and document recovery plan.Regularly test your failover and failback processes to confirm your workloads meet recovery time objectives (RTO) and recovery point objectives (RPO). Clearly document each step of the recovery plan for easy reference during incidents. Verify that recovery tools, such as Azure Site Recovery, consistently meet your specified RTO.
Test and document recovery plan.Regularly test your failover and failback processes to confirm your workloads meet recovery time objectives (RTO) and recovery point objectives (RPO). Clearly document each step of the recovery plan for easy reference during incidents. Verify that recovery tools, such as Azure Site Recovery, consistently meet your specified RTO.
Detect failures.Adopt a proactive approach to identifying outages quickly, even if this method increases false positives. Prioritize customer experience by minimizing downtime and maintaining user trust.Monitor failures.Monitor workloads to detect outages within one minute. UseAzure Service HealthandAzure Resources Healthand useAzure Monitor alertsto notify relevant teams. Integrate these alerts with Azure DevOps or IT Service Management (ITSM) tools.Collect service level indicators (SLIs).Track performance by defining and gathering metrics that serve as SLIs. Ensure your teams use these metrics to measure workload performance against your service level objectives (SLOs).
Detect failures.Adopt a proactive approach to identifying outages quickly, even if this method increases false positives. Prioritize customer experience by minimizing downtime and maintaining user trust.
Monitor failures.Monitor workloads to detect outages within one minute. UseAzure Service HealthandAzure Resources Healthand useAzure Monitor alertsto notify relevant teams. Integrate these alerts with Azure DevOps or IT Service Management (ITSM) tools.
Monitor failures.Monitor workloads to detect outages within one minute. UseAzure Service HealthandAzure Resources Healthand useAzure Monitor alertsto notify relevant teams. Integrate these alerts with Azure DevOps or IT Service Management (ITSM) tools.
Collect service level indicators (SLIs).Track performance by defining and gathering metrics that serve as SLIs. Ensure your teams use these metrics to measure workload performance against your service level objectives (SLOs).
Collect service level indicators (SLIs).Track performance by defining and gathering metrics that serve as SLIs. Ensure your teams use these metrics to measure workload performance against your service level objectives (SLOs).
Respond to failures.Align your recovery response to the workload priority. Implement failover procedures to reroute requests to redundant infrastructure and data replicas immediately. Once systems stabilize, resolve the root cause, synchronize data, and execute failback procedures. For more information, seeFailover and failback.
Respond to failures.Align your recovery response to the workload priority. Implement failover procedures to reroute requests to redundant infrastructure and data replicas immediately. Once systems stabilize, resolve the root cause, synchronize data, and execute failback procedures. For more information, seeFailover and failback.
Analyze failures.Identify the root causes of the issues and then address the problem. Document any lessons and make the necessary changes.
Analyze failures.Identify the root causes of the issues and then address the problem. Document any lessons and make the necessary changes.
Manage workload failures.For workload disaster recovery, see the Well-Architected Framework'sdisaster recovery guideandAzure service guides(start with the Reliability section).
Manage workload failures.For workload disaster recovery, see the Well-Architected Framework'sdisaster recovery guideandAzure service guides(start with the Reliability section).
Azure reliability tools
Manage security
Use an iterative security process to identify and mitigate threats in your cloud environment. Follow these steps:
Manage security operations
Manage your security controls to detect threats to your cloud estate. Follow these steps:
Standardize security tooling.Use standardized tools to detect threats, fix vulnerabilities, investigate issues, secure data, harden resources, and enforce compliance at scale. Refer toAzure security tools.
Standardize security tooling.Use standardized tools to detect threats, fix vulnerabilities, investigate issues, secure data, harden resources, and enforce compliance at scale. Refer toAzure security tools.
Baseline your environment.Document the normal state of your cloud estate.Monitor securityand document network traffic patterns and user behaviors. UseAzure security baselinesandAzure service guidesto develop baseline configurations for services. This baseline makes it easier to detect anomalies and potential security weaknesses.
Baseline your environment.Document the normal state of your cloud estate.Monitor securityand document network traffic patterns and user behaviors. UseAzure security baselinesandAzure service guidesto develop baseline configurations for services. This baseline makes it easier to detect anomalies and potential security weaknesses.
Apply security controls.Implement security measures, such as access controls, encryption, and multifactor authentication, strengthens the environment and reduces the probability of compromise. For more information, seeManage security.
Apply security controls.Implement security measures, such as access controls, encryption, and multifactor authentication, strengthens the environment and reduces the probability of compromise. For more information, seeManage security.
Assign security responsibilities.Designate responsibility for security monitoring across your cloud environment. Regular monitoring and comparisons to the baseline enable quick identification of incidents, such as unauthorized access or unusual data transfers. Regular updates and audits keep your security baseline effective against evolving threats.
Assign security responsibilities.Designate responsibility for security monitoring across your cloud environment. Regular monitoring and comparisons to the baseline enable quick identification of incidents, such as unauthorized access or unusual data transfers. Regular updates and audits keep your security baseline effective against evolving threats.
For more information, seeCAF Secure.
Manage security incidents
Adopt a process and tools to recover from security incidents, such as ransomware, denial of service, or threat actor intrusion. Follow these steps:
Prepare for incidents.Develop an incident response plan that clearly defines roles for investigation, mitigation, and communication. Regularly test the effectiveness of your plan. Evaluate and implement vulnerability management tools, threat detection systems, and infrastructure monitoring solutions. Reduce your attack surface through infrastructure hardening and create workload-specific recovery strategies. SeeIncident response overviewandIncident response playbooks.
Prepare for incidents.Develop an incident response plan that clearly defines roles for investigation, mitigation, and communication. Regularly test the effectiveness of your plan. Evaluate and implement vulnerability management tools, threat detection systems, and infrastructure monitoring solutions. Reduce your attack surface through infrastructure hardening and create workload-specific recovery strategies. SeeIncident response overviewandIncident response playbooks.
Detect incidents.Use security information and event management (SIEM) tool, likeMicrosoft Sentinel, to centralize your security data. Use Microsoft Sentinelâssecurity orchestration, automation, and response capabilities (SOAR)to automate routine security tasks. Integratethreat intelligence feedsinto your SIEM to gain insights into adversary tactics relevant to your cloud environment. UseMicrosoft Defender for Cloudto regularly scan Azure for vulnerabilities. Microsoft Defenderintegrateswith Microsoft Sentinel to provide a unified view of security events.
Detect incidents.Use security information and event management (SIEM) tool, likeMicrosoft Sentinel, to centralize your security data. Use Microsoft Sentinelâssecurity orchestration, automation, and response capabilities (SOAR)to automate routine security tasks. Integratethreat intelligence feedsinto your SIEM to gain insights into adversary tactics relevant to your cloud environment. UseMicrosoft Defender for Cloudto regularly scan Azure for vulnerabilities. Microsoft Defenderintegrateswith Microsoft Sentinel to provide a unified view of security events.
Respond to incidents.Immediately activate your incident response plan upon detecting an incident. Quickly start investigation and mitigation procedures. Activate your disaster recovery plan to restore affected systems, and clearly communicate incident details to your team.
Respond to incidents.Immediately activate your incident response plan upon detecting an incident. Quickly start investigation and mitigation procedures. Activate your disaster recovery plan to restore affected systems, and clearly communicate incident details to your team.
Analyze security incidents.After each incident, review threat intelligence and update your incident response plan based on lessons learned and insights from public resources, such as theMITRE ATT&CKknowledge base. Evaluate the effectiveness of your vulnerability management and detection tools and refine strategies based on post-incident analysis.
Analyze security incidents.After each incident, review threat intelligence and update your incident response plan based on lessons learned and insights from public resources, such as theMITRE ATT&CKknowledge base. Evaluate the effectiveness of your vulnerability management and detection tools and refine strategies based on post-incident analysis.
For more information, seeManage incident response (CAF Secure).
Azure security tools
Next steps
CAF Manage checklist
Feedback
Was this page helpful?
Additional resources