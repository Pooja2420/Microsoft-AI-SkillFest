Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Create a private Azure Kubernetes Service (AKS) cluster
Article
2025-04-03
47 contributors
In this article
This article helps you deploy a private link-based AKS cluster. If you're interested in creating an AKS cluster without required private link or tunnel, seeCreate an Azure Kubernetes Service cluster with API Server VNet Integration (Preview).
Overview
In a private cluster, the control plane or API server has internal IP addresses that are defined in theRFC1918 - Address Allocation for Private Internetdocument. By using a private cluster, you can ensure network traffic between your API server and your node pools remains only on the private network.
The control plane or API server is in an AKS-managed Azure resource group, and your cluster or node pool is in your resource group. The server and the cluster or node pool can communicate with each other through theAzure Private Link servicein the API server virtual network and a private endpoint that's exposed on the subnet of your AKS cluster.
When you provision a private AKS cluster, AKS by default creates a private FQDN with a private DNS zone and an additional public FQDN with a correspondingArecord in Azure public DNS. The agent nodes continue to use theArecord in the private DNS zone to resolve the private IP address of the private endpoint for communication to the API server.
A
A
Region availability
Private clusters are available in public regions, Azure Government, and Microsoft Azure operated by 21Vianet regions whereAKS is supported.
Prerequisites
The Azure CLI version 2.28.0 or higher. Runaz --versionto find the version, and runaz upgradeto upgrade the version. If you need to install or upgrade, seeInstall Azure CLI.
az --version
az upgrade
Theaks-previewextension 0.5.29 or higher.
aks-preview
If using Azure Resource Manager (ARM) or the Azure REST API, the AKS API version must be 2021-05-01 or higher.
To use a custom DNS server, add the Azure public IP address 168.63.129.16 as the upstream DNS server in the custom DNS server, and make sure to add this public IP address as thefirstDNS server. For more information about the Azure IP address, seeWhat is IP address 168.63.129.16?The cluster's DNS zone should be what you forward to 168.63.129.16. You can find more information on zone names inAzure services DNS zone configuration.
The cluster's DNS zone should be what you forward to 168.63.129.16. You can find more information on zone names inAzure services DNS zone configuration.
Existing AKS clusters enabled with API Server VNet Integration can have private cluster mode enabled. For more information, seeEnable or disable private cluster mode on an existing cluster with API Server VNet Integration.
Note
The Azure Linux node pool is now generally available (GA). To learn about the benefits and deployment steps, see theIntroduction to the Azure Linux Container Host for AKS.
Limitations
IP authorized ranges can't be applied to the private API server endpoint, they only apply to the public API server.
Azure Private Link service limitationsapply to private clusters.
There's no support for Azure DevOps Microsoft-hosted Agents with private clusters. Consider usingself-hosted agents.
If you need to enable Azure Container Registry to work with a private AKS cluster,set up a private link for the container registry in the cluster virtual networkor set up peering between the container registry's virtual network and the private cluster's virtual network.
Deleting or modifying the private endpoint in the customer subnet will cause the cluster to stop functioning.
Azure Private Link service is supported on Standard Azure Load Balancer only. Basic Azure Load Balancer isn't supported.
Create a private AKS cluster
Default basic networking
Advanced networking
Create a resource group using theaz group createcommand. You can also use an existing resource group for your AKS cluster.az group create \
    --name <private-cluster-resource-group> \
    --location <location>
Create a resource group using theaz group createcommand. You can also use an existing resource group for your AKS cluster.
az group create
az group create \
    --name <private-cluster-resource-group> \
    --location <location>
az group create \
    --name <private-cluster-resource-group> \
    --location <location>
Create a private cluster with default basic networking using theaz aks createcommand with the--enable-private-clusterflag.az aks create \
    --name <private-cluster-name> \
    --resource-group <private-cluster-resource-group> \
    --load-balancer-sku standard \
    --enable-private-cluster \
    --generate-ssh-keys
Create a private cluster with default basic networking using theaz aks createcommand with the--enable-private-clusterflag.
az aks create
--enable-private-cluster
az aks create \
    --name <private-cluster-name> \
    --resource-group <private-cluster-resource-group> \
    --load-balancer-sku standard \
    --enable-private-cluster \
    --generate-ssh-keys
az aks create \
    --name <private-cluster-name> \
    --resource-group <private-cluster-resource-group> \
    --load-balancer-sku standard \
    --enable-private-cluster \
    --generate-ssh-keys
Create a resource group using theaz group createcommand. You can also use an existing resource group for your AKS cluster.az group create \
    --name <private-clusterresource-group> \
    --location <location>
Create a resource group using theaz group createcommand. You can also use an existing resource group for your AKS cluster.
az group create
az group create \
    --name <private-clusterresource-group> \
    --location <location>
az group create \
    --name <private-clusterresource-group> \
    --location <location>
Create a private cluster with advanced networking using theaz aks createcommand with the following flags:az aks create \
    --resource-group <private-cluster-resource-group> \
    --name <private-cluster-name> \
    --load-balancer-sku standard \
    --enable-private-cluster \
    --network-plugin azure \
    --vnet-subnet-id <subnet-id> \
    --dns-service-ip 10.2.0.10 \
    --service-cidr 10.2.0.0/24 
    --generate-ssh-keys
Create a private cluster with advanced networking using theaz aks createcommand with the following flags:
az aks create
az aks create \
    --resource-group <private-cluster-resource-group> \
    --name <private-cluster-name> \
    --load-balancer-sku standard \
    --enable-private-cluster \
    --network-plugin azure \
    --vnet-subnet-id <subnet-id> \
    --dns-service-ip 10.2.0.10 \
    --service-cidr 10.2.0.0/24 
    --generate-ssh-keys
az aks create \
    --resource-group <private-cluster-resource-group> \
    --name <private-cluster-name> \
    --load-balancer-sku standard \
    --enable-private-cluster \
    --network-plugin azure \
    --vnet-subnet-id <subnet-id> \
    --dns-service-ip 10.2.0.10 \
    --service-cidr 10.2.0.0/24 
    --generate-ssh-keys
Connect to the private cluster
To manage a Kubernetes cluster, use the Kubernetes command-line client,kubectl.kubectlis already installed if you use Azure Cloud Shell. To installkubectllocally, use theaz aks install-clicommand.
kubectl
kubectl
az aks install-cli
Configurekubectlto connect to your Kubernetes cluster using theaz aks get-credentialscommand. This command downloads credentials and configures the Kubernetes CLI to use them.az aks get-credentials --resource-group <private-cluster-resource-group> --name <private-cluster-name>
Configurekubectlto connect to your Kubernetes cluster using theaz aks get-credentialscommand. This command downloads credentials and configures the Kubernetes CLI to use them.
kubectl
az aks get-credentials
az aks get-credentials --resource-group <private-cluster-resource-group> --name <private-cluster-name>
az aks get-credentials --resource-group <private-cluster-resource-group> --name <private-cluster-name>
Verify the connection to your cluster using thekubectl getcommand. This command returns a list of the cluster nodes.kubectl get nodes
Verify the connection to your cluster using thekubectl getcommand. This command returns a list of the cluster nodes.
kubectl get
kubectl get nodes
kubectl get nodes
Use custom domains
If you want to configure custom domains that can only be resolved internally, seeUse custom domains.
Disable a public FQDN
Disable a public FQDN on a new cluster
Disable a public FQDN when creating a private AKS cluster using theaz aks createcommand with the--disable-public-fqdnflag.az aks create \
    --name <private-cluster-name> \
    --resource-group <private-cluster-resource-group> \
    --load-balancer-sku standard \
    --enable-private-cluster \
    --assign-identity <resourceID> \
    --private-dns-zone <private-dns-zone-mode> \
    --disable-public-fqdn \
    --generate-ssh-keys
Disable a public FQDN when creating a private AKS cluster using theaz aks createcommand with the--disable-public-fqdnflag.
az aks create
--disable-public-fqdn
az aks create \
    --name <private-cluster-name> \
    --resource-group <private-cluster-resource-group> \
    --load-balancer-sku standard \
    --enable-private-cluster \
    --assign-identity <resourceID> \
    --private-dns-zone <private-dns-zone-mode> \
    --disable-public-fqdn \
    --generate-ssh-keys
az aks create \
    --name <private-cluster-name> \
    --resource-group <private-cluster-resource-group> \
    --load-balancer-sku standard \
    --enable-private-cluster \
    --assign-identity <resourceID> \
    --private-dns-zone <private-dns-zone-mode> \
    --disable-public-fqdn \
    --generate-ssh-keys
Disable a public FQDN on an existing cluster
Disable a public FQDN on an existing AKS cluster using theaz aks updatecommand with the--disable-public-fqdnflag.az aks update \
    --name <private-cluster-name> \
    --resource-group <private-cluster-resource-group> \
    --disable-public-fqdn
Disable a public FQDN on an existing AKS cluster using theaz aks updatecommand with the--disable-public-fqdnflag.
az aks update
--disable-public-fqdn
az aks update \
    --name <private-cluster-name> \
    --resource-group <private-cluster-resource-group> \
    --disable-public-fqdn
az aks update \
    --name <private-cluster-name> \
    --resource-group <private-cluster-resource-group> \
    --disable-public-fqdn
Configure a private DNS zone
You can configure private DNS zones using the following parameters:
system: This is the default value. If the--private-dns-zoneargument is omitted, AKS creates a private DNS zone in the node resource group.
system
--private-dns-zone
none: The default is public DNS. AKS won't create a private DNS zone.
none
CUSTOM_PRIVATE_DNS_ZONE_RESOURCE_ID: This requires you to create a private DNS zone in the following format for Azure global cloud:privatelink.<region>.azmk8s.ioor<subzone>.privatelink.<region>.azmk8s.io. You'll need the resource ID of the private DNS zone for future use. You also need a user-assigned identity or service principal with thePrivate DNS Zone ContributorandNetwork Contributorroles. When deploying using API server VNet integration, a private DNS zone supports the naming format ofprivate.<region>.azmk8s.ioor<subzone>.private.<region>.azmk8s.io. Youcan't change or delete this resource after creating the cluster, as it can cause performance issues and cluster upgrade failures.If the private DNS zone is in a different subscription than the AKS cluster, you need to register theMicrosoft.ContainerServicesAzure provider in both subscriptions.You can usefqdn-subdomainwithCUSTOM_PRIVATE_DNS_ZONE_RESOURCE_IDonly to provide subdomain capabilities toprivatelink.<region>.azmk8s.io.If your AKS cluster is configured with an Active Directory service principal, AKS doesn't support using a system-assigned managed identity with custom private DNS zone. The cluster must useuser-assigned managed identity authentication.If you're specifying a<subzone>, there's a 32 character limit for the<subzone>name.
CUSTOM_PRIVATE_DNS_ZONE_RESOURCE_ID
privatelink.<region>.azmk8s.io
<subzone>.privatelink.<region>.azmk8s.io
private.<region>.azmk8s.io
<subzone>.private.<region>.azmk8s.io
If the private DNS zone is in a different subscription than the AKS cluster, you need to register theMicrosoft.ContainerServicesAzure provider in both subscriptions.
Microsoft.ContainerServices
You can usefqdn-subdomainwithCUSTOM_PRIVATE_DNS_ZONE_RESOURCE_IDonly to provide subdomain capabilities toprivatelink.<region>.azmk8s.io.
fqdn-subdomain
CUSTOM_PRIVATE_DNS_ZONE_RESOURCE_ID
privatelink.<region>.azmk8s.io
If your AKS cluster is configured with an Active Directory service principal, AKS doesn't support using a system-assigned managed identity with custom private DNS zone. The cluster must useuser-assigned managed identity authentication.
If you're specifying a<subzone>, there's a 32 character limit for the<subzone>name.
<subzone>
<subzone>
Note
You can configureCUSTOM_PRIVATE_DNS_ZONE_RESOURCE_IDusing an ARM template or the Azure CLI.privateDNSZoneaccepts the private DNZ zoneresourceIDas shown in the following example:
CUSTOM_PRIVATE_DNS_ZONE_RESOURCE_ID
privateDNSZone
resourceID
properties.apiServerAccessProfile.privateDNSZone.
"apiServerAccessProfile": {
"enablePrivateCluster": true,
"privateDNSZone": "system|none|[resourceId(..., 'Microsoft.Network/privateDnsZones', 'privatelink.<region>.azmk8s.io']"
}
properties.apiServerAccessProfile.privateDNSZone.
"apiServerAccessProfile": {
"enablePrivateCluster": true,
"privateDNSZone": "system|none|[resourceId(..., 'Microsoft.Network/privateDnsZones', 'privatelink.<region>.azmk8s.io']"
}
Create a private AKS cluster with a private DNS zone
Create a private AKS cluster with a private DNS zone using theaz aks createcommand with the following flags:az aks create \
    --name <private-cluster-name> \
    --resource-group <private-cluster-resource-group> \
    --load-balancer-sku standard \
    --enable-private-cluster \
    --assign-identity <resourceID> \
    --private-dns-zone [system|none] \
    --generate-ssh-keys
Create a private AKS cluster with a private DNS zone using theaz aks createcommand with the following flags:
az aks create
az aks create \
    --name <private-cluster-name> \
    --resource-group <private-cluster-resource-group> \
    --load-balancer-sku standard \
    --enable-private-cluster \
    --assign-identity <resourceID> \
    --private-dns-zone [system|none] \
    --generate-ssh-keys
az aks create \
    --name <private-cluster-name> \
    --resource-group <private-cluster-resource-group> \
    --load-balancer-sku standard \
    --enable-private-cluster \
    --assign-identity <resourceID> \
    --private-dns-zone [system|none] \
    --generate-ssh-keys
Create a private AKS cluster with a custom private DNS zone or private DNS subzone
Create a private AKS cluster with a custom private DNS zone or subzone using theaz aks createcommand with the following flags:# The custom private DNS zone name should be in the following format: "<subzone>.privatelink.<region>.azmk8s.io"

az aks create \
    --name <private-cluster-name> \
    --resource-group <private-cluster-resource-group> \
    --load-balancer-sku standard \
    --enable-private-cluster \
    --assign-identity <resourceID> \
    --private-dns-zone <custom private dns zone or custom private dns subzone resourceID> \
    --generate-ssh-keys
Create a private AKS cluster with a custom private DNS zone or subzone using theaz aks createcommand with the following flags:
az aks create
# The custom private DNS zone name should be in the following format: "<subzone>.privatelink.<region>.azmk8s.io"

az aks create \
    --name <private-cluster-name> \
    --resource-group <private-cluster-resource-group> \
    --load-balancer-sku standard \
    --enable-private-cluster \
    --assign-identity <resourceID> \
    --private-dns-zone <custom private dns zone or custom private dns subzone resourceID> \
    --generate-ssh-keys
# The custom private DNS zone name should be in the following format: "<subzone>.privatelink.<region>.azmk8s.io"

az aks create \
    --name <private-cluster-name> \
    --resource-group <private-cluster-resource-group> \
    --load-balancer-sku standard \
    --enable-private-cluster \
    --assign-identity <resourceID> \
    --private-dns-zone <custom private dns zone or custom private dns subzone resourceID> \
    --generate-ssh-keys
Create a private AKS cluster with a custom private DNS zone and custom subdomain
Create a private AKS cluster with a custom private DNS zone and subdomain using theaz aks createcommand with the following flags:# The custom private DNS zone name should be in one of the following formats: "privatelink.<region>.azmk8s.io" or "<subzone>.privatelink.<region>.azmk8s.io"

az aks create \
    --name <private-cluster-name> \
    --resource-group <private-cluster-resource-group> \
    --load-balancer-sku standard \
    --enable-private-cluster \
    --assign-identity <resourceID> \
    --private-dns-zone <custom private dns zone resourceID> \
    --fqdn-subdomain <subdomain> \
    --generate-ssh-keys
Create a private AKS cluster with a custom private DNS zone and subdomain using theaz aks createcommand with the following flags:
az aks create
# The custom private DNS zone name should be in one of the following formats: "privatelink.<region>.azmk8s.io" or "<subzone>.privatelink.<region>.azmk8s.io"

az aks create \
    --name <private-cluster-name> \
    --resource-group <private-cluster-resource-group> \
    --load-balancer-sku standard \
    --enable-private-cluster \
    --assign-identity <resourceID> \
    --private-dns-zone <custom private dns zone resourceID> \
    --fqdn-subdomain <subdomain> \
    --generate-ssh-keys
# The custom private DNS zone name should be in one of the following formats: "privatelink.<region>.azmk8s.io" or "<subzone>.privatelink.<region>.azmk8s.io"

az aks create \
    --name <private-cluster-name> \
    --resource-group <private-cluster-resource-group> \
    --load-balancer-sku standard \
    --enable-private-cluster \
    --assign-identity <resourceID> \
    --private-dns-zone <custom private dns zone resourceID> \
    --fqdn-subdomain <subdomain> \
    --generate-ssh-keys
Update a private cluster from a private DNS zone to public
You can only update frombyoorsystemtonone. No other combination of update values is supported. Before updating, make sure youconnect to the private cluster.
byo
system
none
Warning
When you update a private cluster frombyoorsystemtonone, the agent nodes change to use a public FQDN. In an AKS cluster that uses Azure Virtual Machine Scale Sets, anode image upgradeis performed to update your nodes with the public FQDN.
byo
system
none
Update a private cluster frombyoorsystemtononeusing theaz aks updatecommand with the following flags:az aks update \
    --name <private-cluster-name> \
    --resource-group <private-cluster-resource-group> \
    --private-dns-zone none
Update a private cluster frombyoorsystemtononeusing theaz aks updatecommand with the following flags:
byo
system
none
az aks update
az aks update \
    --name <private-cluster-name> \
    --resource-group <private-cluster-resource-group> \
    --private-dns-zone none
az aks update \
    --name <private-cluster-name> \
    --resource-group <private-cluster-resource-group> \
    --private-dns-zone none
Options for connecting to the private cluster
The API server endpoint has no public IP address. To manage the API server, you need to use a VM that has access to the AKS cluster's Azure Virtual Network (VNet). There are several options for establishing network connectivity to the private cluster:
Create a VM in the same VNet as the AKS cluster using theaz vm createcommand with the--vnet-nameflag.
az vm create
--vnet-name
Use a VM in a separate network and set upvirtual network peering.
Use anExpress Route or VPNconnection.
Use theAKScommand invokefeature.
command invoke
Use aprivate endpointconnection.
Use aCloud Shellinstance deployed into a subnet that's connected to the API server for the cluster.
Creating a VM in the same VNet as the AKS cluster is the easiest option. Express Route and VPNs add costs and require additional networking complexity. Virtual network peering requires you to plan your network CIDR ranges to ensure there are no overlapping ranges.
Virtual network peering
To use virtual network peering, you need to set up a link between the virtual network and the private DNS zone.
Azure portal
Azure CLI
In theAzure portal, navigate to your node resource group and select yourprivate DNS zone resource.
In the service menu, underDNS Management, selectVirtual Network Links>Add.
On theAdd Virtual Network Linkpage, configure the following settings:Link name: Enter a name for the virtual network link.Virtual Network: Select the virtual network that contains the VM.
Link name: Enter a name for the virtual network link.
Virtual Network: Select the virtual network that contains the VM.
SelectCreateto create the virtual network link.
Navigate to the resource group that contains your cluster's virtual network and select yourvirtual network resource.
In the service menu, underSettings, selectPeerings>Add.
On theAdd peeringpage, configure the following settings:Peering link name: Enter a name for the peering link.Virtual network: Select the virtual network of the VM.
Peering link name: Enter a name for the peering link.
Virtual network: Select the virtual network of the VM.
SelectAddto create the peering link.
For more information, seeVirtual network peering.
Create a new link to add the virtual network of the VM to the private DNS zone using theaz network private-dns link vnet createcommand.az network private-dns link vnet create \
    --name <new-link-name> \
    --resource-group <node-resource-group-name> \
    --zone-name <private-dns-zone-name> \
    --virtual-network <vm-virtual-network-resource-id> \
    --registration-enabled false
Create a new link to add the virtual network of the VM to the private DNS zone using theaz network private-dns link vnet createcommand.
az network private-dns link vnet create
az network private-dns link vnet create \
    --name <new-link-name> \
    --resource-group <node-resource-group-name> \
    --zone-name <private-dns-zone-name> \
    --virtual-network <vm-virtual-network-resource-id> \
    --registration-enabled false
az network private-dns link vnet create \
    --name <new-link-name> \
    --resource-group <node-resource-group-name> \
    --zone-name <private-dns-zone-name> \
    --virtual-network <vm-virtual-network-resource-id> \
    --registration-enabled false
Create a peering between the virtual network of the VM and the virtual network of the node resource group using theaz network vnet peering createcommand.az network vnet peering create \
    --name <new-peering-name-1> \
    --resource-group <vm-virtual-network-resource-group-name> \
    --vnet-name <vm-virtual-network-name> \
    --remote-vnet <node-resource-group-virtual-network-resource-id> \
    --allow-vnet-access
Create a peering between the virtual network of the VM and the virtual network of the node resource group using theaz network vnet peering createcommand.
az network vnet peering create
az network vnet peering create \
    --name <new-peering-name-1> \
    --resource-group <vm-virtual-network-resource-group-name> \
    --vnet-name <vm-virtual-network-name> \
    --remote-vnet <node-resource-group-virtual-network-resource-id> \
    --allow-vnet-access
az network vnet peering create \
    --name <new-peering-name-1> \
    --resource-group <vm-virtual-network-resource-group-name> \
    --vnet-name <vm-virtual-network-name> \
    --remote-vnet <node-resource-group-virtual-network-resource-id> \
    --allow-vnet-access
Create a second peering between the virtual network of the node resource group and the virtual network of the VM using theaz network vnet peering createcommand.az network vnet peering create \
    --name <new-peering-name-2> \
    --resource-group <node-resource-group-name> \
    --vnet-name <node-resource-group-virtual-network-name> \
    --remote-vnet <vm-virtual-network-resource-id> \
    --allow-vnet-access
Create a second peering between the virtual network of the node resource group and the virtual network of the VM using theaz network vnet peering createcommand.
az network vnet peering create
az network vnet peering create \
    --name <new-peering-name-2> \
    --resource-group <node-resource-group-name> \
    --vnet-name <node-resource-group-virtual-network-name> \
    --remote-vnet <vm-virtual-network-resource-id> \
    --allow-vnet-access
az network vnet peering create \
    --name <new-peering-name-2> \
    --resource-group <node-resource-group-name> \
    --vnet-name <node-resource-group-virtual-network-name> \
    --remote-vnet <vm-virtual-network-resource-id> \
    --allow-vnet-access
List the virtual network peerings you created using theaz network vnet peering listcommand.az network vnet peering list \
    --resource-group <node-resource-group-name> \
    --vnet-name <private-dns-zone-name>
List the virtual network peerings you created using theaz network vnet peering listcommand.
az network vnet peering list
az network vnet peering list \
    --resource-group <node-resource-group-name> \
    --vnet-name <private-dns-zone-name>
az network vnet peering list \
    --resource-group <node-resource-group-name> \
    --vnet-name <private-dns-zone-name>
Hub and spoke with custom DNS
Hub and spoke architecturesare commonly used to deploy networks in Azure. In many of these deployments, DNS settings in the spoke VNets are configured to reference a central DNS forwarder to allow for on-premises and Azure-based DNS resolution.

When deploying an AKS cluster into such a networking environment, there are some special considerations:
When a private cluster is provisioned, a private endpoint (1) and a private DNS zone (2) are created in the cluster-managed resource group by default. The cluster uses anArecord in the private zone to resolve the IP of the private endpoint for communication to the API server.
When a private cluster is provisioned, a private endpoint (1) and a private DNS zone (2) are created in the cluster-managed resource group by default. The cluster uses anArecord in the private zone to resolve the IP of the private endpoint for communication to the API server.
A
The private DNS zone is linked only to the VNet that the cluster nodes are attached to (3). This means that the private endpoint can only be resolved by hosts in that linked VNet. In scenarios where no custom DNS is configured on the VNet (default), this works without issue as hosts point at168.63.129.16for DNS that can resolve records in the private DNS zone because of the link.
The private DNS zone is linked only to the VNet that the cluster nodes are attached to (3). This means that the private endpoint can only be resolved by hosts in that linked VNet. In scenarios where no custom DNS is configured on the VNet (default), this works without issue as hosts point at168.63.129.16for DNS that can resolve records in the private DNS zone because of the link.
If you keep the default privateâDNSâzone behavior, AKS tries to link the zone directly to the spoke VNet that hosts the cluster even when the zone is already linked to a hub VNet.In spoke VNets that use custom DNS servers, this action can fail if the clusterâs managed identity lacksNetworkâ¯Contributoron the spoke VNet.To prevent the failure, chooseoneof the following supported configurations:Custom private DNS zoneâ Provide a preâcreated private zone and setprivateDNSZoneto its resource ID. Link that zone to the appropriate VNet (for example, the hub VNet) and setpublicDNStofalse.Public DNS onlyâ Disable privateâzone creation by settingprivateDNSZonetononeandleavepublicDNSat its default value (true).SettingprivateDNSZone: noneandpublicDNS: falseat the same time isnot supported;
If you keep the default privateâDNSâzone behavior, AKS tries to link the zone directly to the spoke VNet that hosts the cluster even when the zone is already linked to a hub VNet.In spoke VNets that use custom DNS servers, this action can fail if the clusterâs managed identity lacksNetworkâ¯Contributoron the spoke VNet.To prevent the failure, chooseoneof the following supported configurations:
Custom private DNS zoneâ Provide a preâcreated private zone and setprivateDNSZoneto its resource ID. Link that zone to the appropriate VNet (for example, the hub VNet) and setpublicDNStofalse.
Custom private DNS zoneâ Provide a preâcreated private zone and setprivateDNSZoneto its resource ID. Link that zone to the appropriate VNet (for example, the hub VNet) and setpublicDNStofalse.
privateDNSZone
publicDNS
false
Public DNS onlyâ Disable privateâzone creation by settingprivateDNSZonetononeandleavepublicDNSat its default value (true).
Public DNS onlyâ Disable privateâzone creation by settingprivateDNSZonetononeandleavepublicDNSat its default value (true).
privateDNSZone
none
publicDNS
true
SettingprivateDNSZone: noneandpublicDNS: falseat the same time isnot supported;
privateDNSZone: none
publicDNS: false
Note
Conditional forwarding doesn't support subdomains.
Note
If you're usingbring your own route table with kubenetand bring your own DNS with private clusters, the cluster creation will fail. You need to associate theRouteTablein the node resource group to the subnet after the cluster creation failed to make the creation successful.
RouteTable
Use a private endpoint connection
A private endpoint can be set up so that a VNet doesn't need to be peered to communicate with the private cluster. Create a new private endpoint in the virtual network containing the consuming resources, and then create a link between your virtual network and a new private DNS zone in the same network.
Important
If the virtual network is configured with custom DNS servers, private DNS needs to be set up appropriately for the environment. See thevirtual networks name resolution documentationfor more details.
Create a private endpoint resource
Create a private endpoint resource in your VNet:
From theAzure portal home page, selectCreate a resource.
Search forPrivate Endpointand selectCreate>Private Endpoint.
SelectCreate.
On theBasicstab, configure the following settings:Project detailsSubscription: Select the subscription where your private cluster is located.Resource group: Select the resource group that contains your virtual network.Instance detailsName: Enter a name for your private endpoint, such asmyPrivateEndpoint.Region: Select the same region as your virtual network.
Project detailsSubscription: Select the subscription where your private cluster is located.Resource group: Select the resource group that contains your virtual network.
Subscription: Select the subscription where your private cluster is located.
Resource group: Select the resource group that contains your virtual network.
Instance detailsName: Enter a name for your private endpoint, such asmyPrivateEndpoint.Region: Select the same region as your virtual network.
Name: Enter a name for your private endpoint, such asmyPrivateEndpoint.
Region: Select the same region as your virtual network.
SelectNext: Resourceand configure the following settings:Connection method: SelectConnect to an Azure resource in my directory.Subscription: Select the subscription where your private cluster is located.Resource type: SelectMicrosoft.ContainerService/managedClusters.Resource: Select your private cluster.Target sub-resource: Selectmanagement.
Connection method: SelectConnect to an Azure resource in my directory.
Subscription: Select the subscription where your private cluster is located.
Resource type: SelectMicrosoft.ContainerService/managedClusters.
Resource: Select your private cluster.
Target sub-resource: Selectmanagement.
SelectNext: Virtual Networkand configure the following settings:NetworkingVirtual network: Select your virtual network.Subnet: Select your subnet.
NetworkingVirtual network: Select your virtual network.Subnet: Select your subnet.
Virtual network: Select your virtual network.
Subnet: Select your subnet.
SelectNext: DNS>Next: Tagsand (optionally) set up key-values as needed.
SelectNext: Review + create>Create.
Once the resource is created, record the private IP address of the private endpoint for future use.
Create a private DNS zone
Once you create the private endpoint, create a new private DNS zone with the same name as the private DNS zone created by the private cluster. Remember to create this DNS zone in the VNet containing the consuming resources.
In the Azure portal, navigate to your node resource group and select yourprivate DNS zone resource.
In the service menu, underDNS Management, selectRecordsetsand note the following:The name of the private DNS zone, which follows the pattern*.privatelink.<region>.azmk8s.io.The name of theArecord (excluding the private DNS name).The time-to-live (TTL).
The name of the private DNS zone, which follows the pattern*.privatelink.<region>.azmk8s.io.
*.privatelink.<region>.azmk8s.io
The name of theArecord (excluding the private DNS name).
A
The time-to-live (TTL).
From theAzure portal home page, selectCreate a resource.
Search forPrivate DNS zoneand selectCreate>Private DNS zone.
On theBasicstab, configure the following settings:Project details:Select yourSubscription.Select theResource groupwhere you created the private endpoint.Instance detailsName: Enter the name of the DNS zone retrieved from previous steps.Regiondefaults to the location of your resource group.
Project details:Select yourSubscription.Select theResource groupwhere you created the private endpoint.
Select yourSubscription.
Select theResource groupwhere you created the private endpoint.
Instance detailsName: Enter the name of the DNS zone retrieved from previous steps.Regiondefaults to the location of your resource group.
Name: Enter the name of the DNS zone retrieved from previous steps.
Regiondefaults to the location of your resource group.
SelectReview + create>Create.
Create anArecord
A
Once the private DNS zone is created, create anArecord, which associates the private endpoint to the private cluster:
A
Go to the private DNS zone you created in previous steps.
In the service menu, underDNS Management, selectRecordsets>Add.
On theAdd record setpage, configure the following settings:Name: Enter the name retrieved from theArecord in the private cluster's DNS zone.Type: SelectA - Address record.TTL: Enter the number from theArecord in the private cluster's DNS zone.TTL unit: Change the dropdown value to match the one in theArecord from the private cluster's DNS zone.IP address: Enter theIP address of the private endpoint you created.
Name: Enter the name retrieved from theArecord in the private cluster's DNS zone.
A
Type: SelectA - Address record.
TTL: Enter the number from theArecord in the private cluster's DNS zone.
A
TTL unit: Change the dropdown value to match the one in theArecord from the private cluster's DNS zone.
A
IP address: Enter theIP address of the private endpoint you created.
SelectAddto create theArecord.
A
Important
When creating theArecord, only use the name and not the fully qualified domain name (FQDN).
A
Link the private DNS zone to the virtual network
Once theArecord is created, link the private DNS zone to the virtual network that will access the private cluster:
A
Go to the private DNS zone you created in previous steps.
In the service menu, underDNS Management, selectVirtual Network Links>Add.
On theAdd Virtual Network Linkpage, configure the following settings:Link name: Enter a name for your virtual network link.Subscription: Select the subscription where your private cluster is located.Virtual Network: Select the virtual network of your private cluster.
Link name: Enter a name for your virtual network link.
Subscription: Select the subscription where your private cluster is located.
Virtual Network: Select the virtual network of your private cluster.
SelectCreateto create the link.
It might take a few minutes for the operation to complete. Once the virtual network link is created, you can access it from theVirtual Network Linkstab you used in step 2.
Warning
If the private cluster is stopped and restarted, the private cluster's original private link service is removed and recreated, which breaks the connection between your private endpoint and the private cluster. To resolve this issue, delete and recreate any user-created private endpoints linked to the private cluster. If the recreated private endpoints have new IP addresses, you'll also need to update DNS records.
If you update the DNS records in the private DNS zone, ensure the host that you're trying to connect from is using the updated DNS records. You can verify this using thenslookupcommand. If you notice the updates aren't reflected in the output, you might need to flush the DNS cache on your machine and try again.
nslookup
Next steps
For associated best practices, seeBest practices for network connectivity and security in AKS.
Azure Kubernetes Service

Additional resources