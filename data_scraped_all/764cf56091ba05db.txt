Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Manually scale the node count in an Azure Kubernetes Service (AKS) cluster
Article
2024-08-01
16 contributors
In this article
If the resource needs of your applications change, your cluster performance may be impacted due to low capacity on CPU, memory, PID space, or disk sizes. To address these changes, you can manually scale your AKS cluster to run a different number of nodes. When you scale in, nodes are carefullycordoned and drainedto minimize disruption to running applications. When you scale out, AKS waits until nodes are markedReadyby the Kubernetes cluster before pods are scheduled on them.
This article describes how to manually increase or decrease the number of nodes in an AKS cluster.
Before you begin
Review theAKS service quotas and limitsto verify your cluster can scale to your desired number of nodes.
Review theAKS service quotas and limitsto verify your cluster can scale to your desired number of nodes.
The name of a node pool may only contain lowercase alphanumeric characters and must begin with a lowercase letter.For Linux node pools, the length must be between 1-11 characters.For Windows node pools, the length must be between 1-6 characters.
The name of a node pool may only contain lowercase alphanumeric characters and must begin with a lowercase letter.
For Linux node pools, the length must be between 1-11 characters.
For Windows node pools, the length must be between 1-6 characters.
Scale the cluster nodes
Important
Removing nodes from a node pool using the kubectl command isn't supported. Doing so can create scaling issues with your AKS cluster.
Azure CLI
Azure PowerShell
Get thenameof your node pool using theaz aks showcommand. The following example gets the node pool name for the cluster namedmyAKSClusterin themyResourceGroupresource group:az aks show --resource-group myResourceGroup --name myAKSCluster --query agentPoolProfilesThe following example output shows that thenameisnodepool1:[
  {
    "count": 1,
    "maxPods": 110,
    "name": "nodepool1",
    "osDiskSizeGb": 30,
    "osType": "Linux",
    "vmSize": "Standard_DS2_v2"
  }
]
Get thenameof your node pool using theaz aks showcommand. The following example gets the node pool name for the cluster namedmyAKSClusterin themyResourceGroupresource group:
az aks show
az aks show --resource-group myResourceGroup --name myAKSCluster --query agentPoolProfiles
az aks show --resource-group myResourceGroup --name myAKSCluster --query agentPoolProfiles
The following example output shows that thenameisnodepool1:
[
  {
    "count": 1,
    "maxPods": 110,
    "name": "nodepool1",
    "osDiskSizeGb": 30,
    "osType": "Linux",
    "vmSize": "Standard_DS2_v2"
  }
]
[
  {
    "count": 1,
    "maxPods": 110,
    "name": "nodepool1",
    "osDiskSizeGb": 30,
    "osType": "Linux",
    "vmSize": "Standard_DS2_v2"
  }
]
Scale the cluster nodes using theaz aks scalecommand. The following example scales a cluster namedmyAKSClusterto a single node. Provide your own--nodepool-namefrom the previous command, such asnodepool1:az aks scale --resource-group myResourceGroup --name myAKSCluster --node-count 1 --nodepool-name <your node pool name>The following example output shows the cluster successfully scaled to one node, as shown in theagentPoolProfilessection:{
  "aadProfile": null,
  "addonProfiles": null,
  "agentPoolProfiles": [
    {
      "count": 1,
      "maxPods": 110,
      "name": "nodepool1",
      "osDiskSizeGb": 30,
      "osType": "Linux",
      "vmSize": "Standard_DS2_v2",
      "vnetSubnetId": null
    }
  ],
  [...]
}
Scale the cluster nodes using theaz aks scalecommand. The following example scales a cluster namedmyAKSClusterto a single node. Provide your own--nodepool-namefrom the previous command, such asnodepool1:
az aks scale
--nodepool-name
az aks scale --resource-group myResourceGroup --name myAKSCluster --node-count 1 --nodepool-name <your node pool name>
az aks scale --resource-group myResourceGroup --name myAKSCluster --node-count 1 --nodepool-name <your node pool name>
The following example output shows the cluster successfully scaled to one node, as shown in theagentPoolProfilessection:
{
  "aadProfile": null,
  "addonProfiles": null,
  "agentPoolProfiles": [
    {
      "count": 1,
      "maxPods": 110,
      "name": "nodepool1",
      "osDiskSizeGb": 30,
      "osType": "Linux",
      "vmSize": "Standard_DS2_v2",
      "vnetSubnetId": null
    }
  ],
  [...]
}
{
  "aadProfile": null,
  "addonProfiles": null,
  "agentPoolProfiles": [
    {
      "count": 1,
      "maxPods": 110,
      "name": "nodepool1",
      "osDiskSizeGb": 30,
      "osType": "Linux",
      "vmSize": "Standard_DS2_v2",
      "vnetSubnetId": null
    }
  ],
  [...]
}
Get thenameof your node pool using theGet-AzAksClustercommand. The following example gets the node pool name for the cluster namedmyAKSClusterin themyResourceGroupresource group:Get-AzAksCluster -ResourceGroupName myResourceGroup -Name myAKSCluster |
 Select-Object -ExpandProperty AgentPoolProfilesThe following example output shows that thenameisnodepool1:Name                   : nodepool1
Count                  : 1
VmSize                 : Standard_D2_v2
OsDiskSizeGB           : 128
VnetSubnetID           :
MaxPods                : 30
OsType                 : Linux
MaxCount               :
MinCount               :
Mode                   : System
EnableAutoScaling      :
Type                   : VirtualMachineScaleSets
OrchestratorVersion    : 1.23.3
ProvisioningState      : Succeeded
...
Get thenameof your node pool using theGet-AzAksClustercommand. The following example gets the node pool name for the cluster namedmyAKSClusterin themyResourceGroupresource group:
Get-AzAksCluster
Get-AzAksCluster -ResourceGroupName myResourceGroup -Name myAKSCluster |
 Select-Object -ExpandProperty AgentPoolProfiles
Get-AzAksCluster -ResourceGroupName myResourceGroup -Name myAKSCluster |
 Select-Object -ExpandProperty AgentPoolProfiles
The following example output shows that thenameisnodepool1:
Name                   : nodepool1
Count                  : 1
VmSize                 : Standard_D2_v2
OsDiskSizeGB           : 128
VnetSubnetID           :
MaxPods                : 30
OsType                 : Linux
MaxCount               :
MinCount               :
Mode                   : System
EnableAutoScaling      :
Type                   : VirtualMachineScaleSets
OrchestratorVersion    : 1.23.3
ProvisioningState      : Succeeded
...
Name                   : nodepool1
Count                  : 1
VmSize                 : Standard_D2_v2
OsDiskSizeGB           : 128
VnetSubnetID           :
MaxPods                : 30
OsType                 : Linux
MaxCount               :
MinCount               :
Mode                   : System
EnableAutoScaling      :
Type                   : VirtualMachineScaleSets
OrchestratorVersion    : 1.23.3
ProvisioningState      : Succeeded
...
Scale the cluster nodes using theSet-AzAksClustercommand. The following example scales a cluster namedmyAKSClusterto a single node. Provide your own-NodeNamefrom the previous command, such asnodepool1:Set-AzAksCluster -ResourceGroupName myResourceGroup -Name myAKSCluster -NodeCount 1 -NodeName <your node pool name>The following example output shows the cluster successfully scaled to one node, as shown in theAgentPoolProfilesproperty:Name                   : nodepool1
Count                  : 1
VmSize                 : Standard_D2_v2
OsDiskSizeGB           : 128
VnetSubnetID           :
MaxPods                : 30
OsType                 : Linux
MaxCount               :
MinCount               :
Mode                   : System
EnableAutoScaling      :
Type                   : VirtualMachineScaleSets
OrchestratorVersion    : 1.23.3
ProvisioningState      : Succeeded
...
Scale the cluster nodes using theSet-AzAksClustercommand. The following example scales a cluster namedmyAKSClusterto a single node. Provide your own-NodeNamefrom the previous command, such asnodepool1:
-NodeName
Set-AzAksCluster -ResourceGroupName myResourceGroup -Name myAKSCluster -NodeCount 1 -NodeName <your node pool name>
Set-AzAksCluster -ResourceGroupName myResourceGroup -Name myAKSCluster -NodeCount 1 -NodeName <your node pool name>
The following example output shows the cluster successfully scaled to one node, as shown in theAgentPoolProfilesproperty:
Name                   : nodepool1
Count                  : 1
VmSize                 : Standard_D2_v2
OsDiskSizeGB           : 128
VnetSubnetID           :
MaxPods                : 30
OsType                 : Linux
MaxCount               :
MinCount               :
Mode                   : System
EnableAutoScaling      :
Type                   : VirtualMachineScaleSets
OrchestratorVersion    : 1.23.3
ProvisioningState      : Succeeded
...
Name                   : nodepool1
Count                  : 1
VmSize                 : Standard_D2_v2
OsDiskSizeGB           : 128
VnetSubnetID           :
MaxPods                : 30
OsType                 : Linux
MaxCount               :
MinCount               :
Mode                   : System
EnableAutoScaling      :
Type                   : VirtualMachineScaleSets
OrchestratorVersion    : 1.23.3
ProvisioningState      : Succeeded
...
ScaleUsernode pools to 0
User
UnlikeSystemnode pools that always require running nodes,Usernode pools allow you to scale to 0. To learn more on the differences between system and user node pools, seeSystem and user node pools.
System
User
Important
You can't scale a user node pool with the cluster autoscaler enabled to 0 nodes. To scale a user node pool to 0 nodes, you must disable the cluster autoscaler first. For more information, seeDisable the cluster autoscaler on a node pool.
Azure CLI
Azure PowerShell
To scale a user pool to 0, you can use theaz aks nodepool scalein alternative to the aboveaz aks scalecommand, and set0as your node count.az aks nodepool scale --name <your node pool name> --cluster-name myAKSCluster --resource-group myResourceGroup  --node-count 0
To scale a user pool to 0, you can use theaz aks nodepool scalein alternative to the aboveaz aks scalecommand, and set0as your node count.
az aks scale
0
az aks nodepool scale --name <your node pool name> --cluster-name myAKSCluster --resource-group myResourceGroup  --node-count 0
az aks nodepool scale --name <your node pool name> --cluster-name myAKSCluster --resource-group myResourceGroup  --node-count 0
You can also autoscaleUsernode pools to zero nodes, by setting the--min-countparameter of theCluster Autoscalerto0.
You can also autoscaleUsernode pools to zero nodes, by setting the--min-countparameter of theCluster Autoscalerto0.
User
--min-count
0
To scale a user pool to 0, you can use theUpdate-AzAksNodePoolin alternative to the aboveSet-AzAksClustercommand, and set0as your node count.Update-AzAksNodePool -Name <your node pool name> -ClusterName myAKSCluster -ResourceGroupName myResourceGroup -NodeCount 0
To scale a user pool to 0, you can use theUpdate-AzAksNodePoolin alternative to the aboveSet-AzAksClustercommand, and set0as your node count.
Set-AzAksCluster
0
Update-AzAksNodePool -Name <your node pool name> -ClusterName myAKSCluster -ResourceGroupName myResourceGroup -NodeCount 0
Update-AzAksNodePool -Name <your node pool name> -ClusterName myAKSCluster -ResourceGroupName myResourceGroup -NodeCount 0
You can also autoscaleUsernode pools to zero nodes, by setting the-NodeMinCountparameter of theCluster Autoscalerto0.
You can also autoscaleUsernode pools to zero nodes, by setting the-NodeMinCountparameter of theCluster Autoscalerto0.
User
-NodeMinCount
0
Next steps
In this article, you manually scaled an AKS cluster to increase or decrease the number of nodes. You can also use thecluster autoscalerto automatically scale your cluster.
Azure Kubernetes Service

Additional resources