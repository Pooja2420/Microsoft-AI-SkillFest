Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Configure application-consistent backup for Azure Linux VMs using Azure Backup
Article
2025-04-15
11 contributors
In this article
This article describes how to create application-consistent backups for Azure-deployed Linux VMs using Azure Backup. It covers configuring the script framework and troubleshooting.
When Azure Backup takes snapshot of a VM, application consistency ensures that applications start correctly after VM restoration. To achieve this, use the Linux prescript and post-script framework, which supports Azure Resource Manager-deployed Linux VMs. However, these scripts don't work for Service Manager-deployed or Windows VMs.
How the framework works?
The framework provides an option to run custom prescripts and post-scripts while you're taking VM snapshots. Prescripts run just before you take the VM snapshot, and post-scripts run immediately after you take the VM snapshot. Prescripts and post-scripts provide the flexibility to control your application and environment, while you're taking VM snapshots.
Prescripts invoke native application APIs, which quiesce the IOs, and flush in-memory content to the disk. These actions ensure the snapshot is application consistent. Post-scripts use native application APIs to thaw the IOs, which enable the application to resume normal operations after the VM snapshot.
Configure prescript and post-script for Azure Linux VM
To configure Prescript and post-script, follow these steps:
Sign in as the root user to the Linux VM that you want to back up.
Sign in as the root user to the Linux VM that you want to back up.
FromGitHub, downloadVMSnapshotScriptPluginConfig.jsonand copy it to the/etc/azurefolder for all VMs you want to back up. If the/etc/azurefolder doesn't exist, create it.
FromGitHub, downloadVMSnapshotScriptPluginConfig.jsonand copy it to the/etc/azurefolder for all VMs you want to back up. If the/etc/azurefolder doesn't exist, create it.
Copy the prescript and post-script for your application on all VMs you plan to back up. You can copy the scripts to any location on the VM. Be sure to update the full path of the script files in theVMSnapshotScriptPluginConfig.jsonfile.
Copy the prescript and post-script for your application on all VMs you plan to back up. You can copy the scripts to any location on the VM. Be sure to update the full path of the script files in theVMSnapshotScriptPluginConfig.jsonfile.
To use the following files, ensure that you have the corresponding permissions:VMSnapshotScriptPluginConfig.json: Permission600. For example, onlyrootuser should havereadandwritepermissions to this file, and no user should haveexecutepermissions.Pre-script file: Permission700.  For example, onlyrootuser should haveread,write, andexecutepermissions to this file. The file is expected to be a shell script but theoretically this script can internally spawn or refer to other scripts like a Python script.Post-scriptPermission700. For example, onlyrootuser should haveread,write, andexecutepermissions to this file. The file is expected to be a shell script but theoretically this script can internally spawn or refer to other scripts like a Python script.ImportantThe framework gives users numerous power. Secure the framework, and ensure onlyrootuser has access to critical JSON and script files.
If the requirements aren't met, the script won't run, which results in a file system crash and inconsistent backup.
To use the following files, ensure that you have the corresponding permissions:
VMSnapshotScriptPluginConfig.json: Permission600. For example, onlyrootuser should havereadandwritepermissions to this file, and no user should haveexecutepermissions.
VMSnapshotScriptPluginConfig.json: Permission600. For example, onlyrootuser should havereadandwritepermissions to this file, and no user should haveexecutepermissions.
Pre-script file: Permission700.  For example, onlyrootuser should haveread,write, andexecutepermissions to this file. The file is expected to be a shell script but theoretically this script can internally spawn or refer to other scripts like a Python script.
Pre-script file: Permission700.  For example, onlyrootuser should haveread,write, andexecutepermissions to this file. The file is expected to be a shell script but theoretically this script can internally spawn or refer to other scripts like a Python script.
Post-scriptPermission700. For example, onlyrootuser should haveread,write, andexecutepermissions to this file. The file is expected to be a shell script but theoretically this script can internally spawn or refer to other scripts like a Python script.
Post-scriptPermission700. For example, onlyrootuser should haveread,write, andexecutepermissions to this file. The file is expected to be a shell script but theoretically this script can internally spawn or refer to other scripts like a Python script.
Important
The framework gives users numerous power. Secure the framework, and ensure onlyrootuser has access to critical JSON and script files.
If the requirements aren't met, the script won't run, which results in a file system crash and inconsistent backup.
ConfigureVMSnapshotScriptPluginConfig.jsonas described here:pluginName: Leave this field as is, or your scripts might not work as expected.preScriptLocation: Provide the full path of the prescript on the VM that's going to be backed up.postScriptLocation: Provide the full path of the post-script on the VM that's going to be backed up.preScriptParams: Provide the optional parameters that need to be passed to the prescript. All parameters should be in quotes. If you use multiple parameters, separate the parameters with a comma.postScriptParams: Provide the optional parameters that need to be passed to the post-script. All parameters should be in quotes. If you use multiple parameters, separate the parameters with a comma.preScriptNoOfRetries: Set the number of times the prescript should be retried if there's any error before terminating. Zero means only one try and no retry if there's a failure.postScriptNoOfRetries:  Set the number of times the post-script should be retried if there's any error before terminating. Zero means only one try and no retry if there's a failure.timeoutInSeconds: Specify individual time-outs for the prescript and the post-script (maximum value can be 1800).continueBackupOnFailure: Set this value totrueif you want Azure Backup to fall back to a file system consistent/crash consistent backup if prescript or post-script fails. Setting this tofalsefails the backup if there's a script failure (except when you have a single-disk VM that falls back to crash-consistent backup regardless of this setting). When thecontinueBackupOnFailurevalue is set to false, if the backup fails the backup operation will be attempted again based on a retry logic in service (for the stipulated number of attempts).fsFreezeEnabled: Specify whether Linux fsfreeze should be called while you're taking the VM snapshot to ensure file system consistency. We recommend keeping this setting set totrueunless your application has a dependency on disabling fsfreeze.ScriptsExecutionPollTimeSeconds: Set the time the extension has to sleep between each poll to the script execution. For example, if the value is 2, the extension checks whether the pre/post script execution completed every 2 seconds. The minimum and maximum value it can take is 1 and 5 respectively. The value should be strictly an integer.
ConfigureVMSnapshotScriptPluginConfig.jsonas described here:
pluginName: Leave this field as is, or your scripts might not work as expected.
pluginName: Leave this field as is, or your scripts might not work as expected.
preScriptLocation: Provide the full path of the prescript on the VM that's going to be backed up.
preScriptLocation: Provide the full path of the prescript on the VM that's going to be backed up.
postScriptLocation: Provide the full path of the post-script on the VM that's going to be backed up.
postScriptLocation: Provide the full path of the post-script on the VM that's going to be backed up.
preScriptParams: Provide the optional parameters that need to be passed to the prescript. All parameters should be in quotes. If you use multiple parameters, separate the parameters with a comma.
preScriptParams: Provide the optional parameters that need to be passed to the prescript. All parameters should be in quotes. If you use multiple parameters, separate the parameters with a comma.
postScriptParams: Provide the optional parameters that need to be passed to the post-script. All parameters should be in quotes. If you use multiple parameters, separate the parameters with a comma.
postScriptParams: Provide the optional parameters that need to be passed to the post-script. All parameters should be in quotes. If you use multiple parameters, separate the parameters with a comma.
preScriptNoOfRetries: Set the number of times the prescript should be retried if there's any error before terminating. Zero means only one try and no retry if there's a failure.
preScriptNoOfRetries: Set the number of times the prescript should be retried if there's any error before terminating. Zero means only one try and no retry if there's a failure.
postScriptNoOfRetries:  Set the number of times the post-script should be retried if there's any error before terminating. Zero means only one try and no retry if there's a failure.
postScriptNoOfRetries:  Set the number of times the post-script should be retried if there's any error before terminating. Zero means only one try and no retry if there's a failure.
timeoutInSeconds: Specify individual time-outs for the prescript and the post-script (maximum value can be 1800).
timeoutInSeconds: Specify individual time-outs for the prescript and the post-script (maximum value can be 1800).
continueBackupOnFailure: Set this value totrueif you want Azure Backup to fall back to a file system consistent/crash consistent backup if prescript or post-script fails. Setting this tofalsefails the backup if there's a script failure (except when you have a single-disk VM that falls back to crash-consistent backup regardless of this setting). When thecontinueBackupOnFailurevalue is set to false, if the backup fails the backup operation will be attempted again based on a retry logic in service (for the stipulated number of attempts).
continueBackupOnFailure: Set this value totrueif you want Azure Backup to fall back to a file system consistent/crash consistent backup if prescript or post-script fails. Setting this tofalsefails the backup if there's a script failure (except when you have a single-disk VM that falls back to crash-consistent backup regardless of this setting). When thecontinueBackupOnFailurevalue is set to false, if the backup fails the backup operation will be attempted again based on a retry logic in service (for the stipulated number of attempts).
fsFreezeEnabled: Specify whether Linux fsfreeze should be called while you're taking the VM snapshot to ensure file system consistency. We recommend keeping this setting set totrueunless your application has a dependency on disabling fsfreeze.
fsFreezeEnabled: Specify whether Linux fsfreeze should be called while you're taking the VM snapshot to ensure file system consistency. We recommend keeping this setting set totrueunless your application has a dependency on disabling fsfreeze.
ScriptsExecutionPollTimeSeconds: Set the time the extension has to sleep between each poll to the script execution. For example, if the value is 2, the extension checks whether the pre/post script execution completed every 2 seconds. The minimum and maximum value it can take is 1 and 5 respectively. The value should be strictly an integer.
ScriptsExecutionPollTimeSeconds: Set the time the extension has to sleep between each poll to the script execution. For example, if the value is 2, the extension checks whether the pre/post script execution completed every 2 seconds. The minimum and maximum value it can take is 1 and 5 respectively. The value should be strictly an integer.
The script framework is now configured. If the VM backup is already configured, the next backup invokes the scripts and triggers application-consistent backup. If the VM backup isn't configured, configure it by usingBack up Azure virtual machines to Recovery Services vaults.
The script framework is now configured. If the VM backup is already configured, the next backup invokes the scripts and triggers application-consistent backup. If the VM backup isn't configured, configure it by usingBack up Azure virtual machines to Recovery Services vaults.
Troubleshoot Azure Linux VM application-consistent backup errors
Make sure you add appropriate logging while writing your prescript and post-script, and review your script logs to fix any script issues. If you still have problems running scripts, refer to the following table for more information.
Pluginhost
Next steps
Configure VM backup to a Recovery Services vault
Feedback
Was this page helpful?
Additional resources