Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Get started with the chat by using your own data sample for Python
Article
2024-12-20
16 contributors
In this article
This article shows you how to deploy and run thechat app with your own data sample for Python. This sample implements a chat app by using Python, Azure OpenAI Service, andRetrieval Augmented Generation (RAG)in Azure AI Search to get answers about employee benefits at a fictitious company. The app is seeded with PDF files that include the employee handbook, a benefits document, and a list of company roles and expectations.
Watch the followingdemo video.
By following the instructions in this article, you:
Deploy a chat app to Azure.
Get answers about employee benefits.
Change settings to change the behavior of responses.
After you finish this procedure, you can start modifying the new project with your custom code.
This article is part of a collection of articles that show you how to build a chat app by using Azure OpenAI and Azure AI Search.
Other articles in the collection include:
.NET
Java
JavaScript
JavaScript frontend + Python backend
Note
This article uses one or moreAI app templatesas the basis for the examples and guidance in the article. AI app templates provide you with well-maintained reference implementations that are easy to deploy. They help to ensure a high-quality starting point for your AI apps.
Architectural overview
The following diagram shows a simple architecture of the chat app.

Key components of the architecture include:
A web application to host the interactive chat experience.
A web application to host the interactive chat experience.
An Azure AI Search resource to get answers from your own data.
An Azure AI Search resource to get answers from your own data.
Azure OpenAI to provide:Keywords to enhance the search over your own data.Answers from the Azure OpenAI model.Embeddings from theadamodel.
Azure OpenAI to provide:
Keywords to enhance the search over your own data.
Answers from the Azure OpenAI model.
Embeddings from theadamodel.
ada
Cost
Most resources in this architecture use a basic or consumption pricing tier. Consumption pricing is based on usage, which means that you only pay for what you use. There's a charge to complete this article, but it's minimal. When you're finished with the article, you can delete the resources to stop incurring charges.
Learn more aboutcost in the sample repo.
Prerequisites
Adevelopment containerenvironment is available with all the dependencies that are required to complete this article. You can run the development container in GitHub Codespaces (in a browser) or locally by using Visual Studio Code.
To use this article, you need the following prerequisites.
GitHub Codespaces (recommended)
Visual Studio Code
An Azure subscription.Create one for free.
Azure account permissions. Your Azure account must haveMicrosoft.Authorization/roleAssignments/writepermissions, such asUser Access AdministratororOwner.
Microsoft.Authorization/roleAssignments/write
A GitHub account.
An Azure subscription.Create one for free.
Azure account permissions. Your Azure account must haveMicrosoft.Authorization/roleAssignments/writepermissions, such asUser Access AdministratororOwner.
Microsoft.Authorization/roleAssignments/write
Azure Developer CLI.
Docker Desktop. Start Docker Desktop if it's not already running.
Visual Studio Code.
Dev Containers extension.
Open a development environment
Use the following instructions to deploy a preconfigured development environment containing all required dependencies to complete this article.
GitHub Codespaces (recommended)
Visual Studio Code
GitHub Codespacesruns a development container managed by GitHub withVisual Studio Code for the Webas the user interface (UI). For the most straightforward development environment, use GitHub Codespaces so that you have the correct developer tools and dependencies preinstalled to complete this article.
Important
All GitHub accounts can use GitHub Codespaces for up to 60 hours free each month with two core instances. For more information, seeGitHub Codespaces monthly included storage and core hours.
Start the process to create a new GitHub codespace on themainbranch of theAzure-Samples/azure-search-openai-demoGitHub repository.
Start the process to create a new GitHub codespace on themainbranch of theAzure-Samples/azure-search-openai-demoGitHub repository.
main
Right-click the following button, and selectOpen link in new windowsto have the development environment and the documentation available at the same time.
Right-click the following button, and selectOpen link in new windowsto have the development environment and the documentation available at the same time.

On theCreate codespacepage, review the codespace configuration settings, and then selectCreate codespace.
On theCreate codespacepage, review the codespace configuration settings, and then selectCreate codespace.

Wait for the codespace to start. This startup process can take a few minutes.
Wait for the codespace to start. This startup process can take a few minutes.
In the terminal at the bottom of the screen, sign in to Azure with the Azure Developer CLI:azd auth login --use-device-code
In the terminal at the bottom of the screen, sign in to Azure with the Azure Developer CLI:
azd auth login --use-device-code
azd auth login --use-device-code
Copy the code from the terminal and then paste it into a browser. Follow the instructions to authenticate with your Azure account.
Copy the code from the terminal and then paste it into a browser. Follow the instructions to authenticate with your Azure account.
The remaining tasks in this article take place in the context of this development container.
TheDev Containers extensionfor Visual Studio Code requiresDockerto be installed on your local machine. The extension hosts the development container locally by using the Docker host with the correct developer tools and dependencies preinstalled to complete this article.
Create a new local directory on your computer for the project:mkdir my-intelligent-app && cd my-intelligent-app
Create a new local directory on your computer for the project:
mkdir my-intelligent-app && cd my-intelligent-app
mkdir my-intelligent-app && cd my-intelligent-app
Open Visual Studio Code in that directory:code .
Open Visual Studio Code in that directory:
code .
code .
Open a new terminal in Visual Studio Code.
Open a new terminal in Visual Studio Code.
Run the followingAZDcommand to bring the GitHub repository to your local computer:azd init -t azure-search-openai-demo
Run the followingAZDcommand to bring the GitHub repository to your local computer:
AZD
azd init -t azure-search-openai-demo
azd init -t azure-search-openai-demo
Open theCommandpalette, and search for and selectDev Containers: Open Folder in Containerto open the project in a dev container. Wait until the dev container opens before you continue.
Open theCommandpalette, and search for and selectDev Containers: Open Folder in Containerto open the project in a dev container. Wait until the dev container opens before you continue.
Sign in to Azure with the Azure Developer CLI:azd auth loginCopy the code from the terminal and then paste it into a browser. Follow the instructions to authenticate with your Azure account.
Sign in to Azure with the Azure Developer CLI:
azd auth login
azd auth login
Copy the code from the terminal and then paste it into a browser. Follow the instructions to authenticate with your Azure account.
The remaining exercises in this project take place in the context of this development container.
Deploy and run
The sample repository contains all the code and configuration files you need to deploy a chat app to Azure. The following steps walk you through the process of deploying the sample to Azure.
Deploy the chat app to Azure
Important
Azure resources created in this section incur immediate costs, primarily from the Azure AI Search resource. These resources might accrue costs even if you interrupt the command before it fully executes.
Run the following Azure Developer CLI command to provision the Azure resources and deploy the source code:azd up
Run the following Azure Developer CLI command to provision the Azure resources and deploy the source code:
azd up
azd up
If you're prompted to enter an environment name, keep it short and use lowercase letters. An example ismyenv. It's used as part of the resource group name.
If you're prompted to enter an environment name, keep it short and use lowercase letters. An example ismyenv. It's used as part of the resource group name.
myenv
When prompted, select a subscription in which to create the resources.
When prompted, select a subscription in which to create the resources.
When you're prompted to select a location the first time, select a location near you. This location is used for most of the resources, including hosting.
When you're prompted to select a location the first time, select a location near you. This location is used for most of the resources, including hosting.
If you're prompted for a location for the Azure OpenAI model or for the Azure AI Document Intelligence resource, select the location closest to you. If the same location is available as your first location, select that.
If you're prompted for a location for the Azure OpenAI model or for the Azure AI Document Intelligence resource, select the location closest to you. If the same location is available as your first location, select that.
Wait 5 or 10 minutes after the app deploys before you continue.
Wait 5 or 10 minutes after the app deploys before you continue.
After the application successfully deploys, a URL appears in the terminal.
After the application successfully deploys, a URL appears in the terminal.

Select the URL labeled(â) Done: Deploying service webappto open the chat application in a browser.
Select the URL labeled(â) Done: Deploying service webappto open the chat application in a browser.
(â) Done: Deploying service webapp

Use the chat app to get answers from PDF files
The chat app is preloaded with employee benefits information fromPDF files. You can use the chat app to ask questions about the benefits. The following steps walk you through the process of using the chat app. Your answers might vary as the underlying models are updated.
In the browser, select or enterWhat happens in a performance review?in the chat text box.
In the browser, select or enterWhat happens in a performance review?in the chat text box.

From the answer, select a citation.
From the answer, select a citation.

On the right pane, use the tabs to understand how the answer was generated.TabDescriptionThought processThis tab is a script of the interactions in chat. You can view the system prompt (content) and your user question (content).Supporting contentThis tab includes the information to answer your question and the source material. The number of source material citations is noted inDeveloper settings. The default value is3.CitationThis tab displays the original page that contains the citation.
On the right pane, use the tabs to understand how the answer was generated.
content
content
When you're finished, select the tab again to close the pane.
When you're finished, select the tab again to close the pane.
Use chat app settings to change the behavior of responses
The intelligence of the chat is determined by the Azure OpenAI model and the settings that are used to interact with the model.

The following steps walk you through the process of changing the settings.
In the browser, select theDeveloper Settingstab.
In the browser, select theDeveloper Settingstab.
Select theSuggest follow-up questionscheckbox and ask the same question again.What happens in a performance review?The chat returned suggested follow-up questions, such as the following examples:1. What is the frequency of performance reviews?
2. How can employees prepare for a performance review?
3. Can employees dispute the feedback received during the performance review?
Select theSuggest follow-up questionscheckbox and ask the same question again.
What happens in a performance review?
What happens in a performance review?
The chat returned suggested follow-up questions, such as the following examples:
1. What is the frequency of performance reviews?
2. How can employees prepare for a performance review?
3. Can employees dispute the feedback received during the performance review?
1. What is the frequency of performance reviews?
2. How can employees prepare for a performance review?
3. Can employees dispute the feedback received during the performance review?
On theSettingstab, clear theUse semantic ranker for retrievalcheckbox.
On theSettingstab, clear theUse semantic ranker for retrievalcheckbox.
Ask the same question again.What happens in a performance review?
Ask the same question again.
What happens in a performance review?
What happens in a performance review?
What's the difference in the answers?With the semantic ranker: During a performance review at Contoso Electronics, employees have the opportunity to discuss their successes and challenges in the workplace (1). The review provides positive and constructive feedback to help employees develop and grow in their roles (1). The employee receives a written summary of the performance review, which includes a rating of their performance, feedback, and goals and objectives for the upcoming year (1). The performance review is a two-way dialogue between managers and employees (1).Without the semantic ranker: During a performance review at Contoso Electronics, employees have the opportunity to discuss their successes and challenges in the workplace. Positive and constructive feedback is provided to help employees develop and grow in their roles. A written summary of the performance review is given, including a rating of performance, feedback, and goals for the upcoming year. The review is a two-way dialogue between managers and employees (1).
What's the difference in the answers?
With the semantic ranker: During a performance review at Contoso Electronics, employees have the opportunity to discuss their successes and challenges in the workplace (1). The review provides positive and constructive feedback to help employees develop and grow in their roles (1). The employee receives a written summary of the performance review, which includes a rating of their performance, feedback, and goals and objectives for the upcoming year (1). The performance review is a two-way dialogue between managers and employees (1).
Without the semantic ranker: During a performance review at Contoso Electronics, employees have the opportunity to discuss their successes and challenges in the workplace. Positive and constructive feedback is provided to help employees develop and grow in their roles. A written summary of the performance review is given, including a rating of performance, feedback, and goals for the upcoming year. The review is a two-way dialogue between managers and employees (1).
Clean up resources
The following steps walk you through the process of cleaning up the resources you used.
Clean up Azure resources
The Azure resources created in this article are billed to your Azure subscription. If you don't expect to need these resources in the future, delete them to avoid incurring more charges.
Run the following Azure Developer CLI command to delete the Azure resources and remove the source code:
azd down --purge --force
azd down --purge --force
The switches provide:
purge: Deleted resources are immediately purged so that you can reuse the Azure OpenAI tokens per minute.
purge
force: The deletion happens silently, without requiring user consent.
force
Clean up GitHub Codespaces and Visual Studio Code
GitHub Codespaces
Visual Studio Code
Deleting the GitHub Codespaces environment ensures that you can maximize the amount of free per-core hours entitlement that you get for your account.
Important
For more information about your GitHub account's entitlements, seeGitHub Codespaces monthly included storage and core hours.
Sign in to theGitHub Codespaces dashboard.
Sign in to theGitHub Codespaces dashboard.
Locate your currently running codespaces that are sourced from theAzure-Samples/azure-search-openai-demoGitHub repository.
Locate your currently running codespaces that are sourced from theAzure-Samples/azure-search-openai-demoGitHub repository.

Open the context menu for the codespace, and then selectDelete.
Open the context menu for the codespace, and then selectDelete.

You aren't necessarily required to clean up your local environment, but you can stop the running development container and return to running Visual Studio Code in the context of a local workspace.
Open theCommandpalette and search for theDev Containerscommands.
Open theCommandpalette and search for theDev Containerscommands.
SelectDev Containers: Reopen Folder Locally.
SelectDev Containers: Reopen Folder Locally.

Tip
Visual Studio Code stops the running development container, but the container still exists in Docker in a stopped state. You can always delete the container instance, container image, and volumes from Docker to free up more space on your local machine.
Get help
This sample repository offerstroubleshooting information.
If your issue isn't addressed, add your issue to the repository'sIssueswebpage.
Related content
Get thesource code for the sample used in this article.
Build achat app with Azure OpenAIbest-practices solution architecture.
Learn aboutaccess control in generative AI apps with Azure AI Search.
Build anenterprise-ready Azure OpenAI solution with Azure API Management.
SeeAzure AI Search: Outperforming vector search with hybrid retrieval and ranking capabilities.
Feedback
Was this page helpful?
Additional resources