Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Tutorial: Filter network traffic with a network security group
Article
2024-08-20
13 contributors
In this article
You can use a network security group to filter inbound and outbound network traffic to and from Azure resources in an Azure virtual network.
Network security groups contain security rules that filter network traffic by IP address, port, and protocol. When a network security group is associated with a subnet, security rules are applied to resources deployed in that subnet.

In this tutorial, you learn how to:
Create a network security group and security rules
Create application security groups
Create a virtual network and associate a network security group to a subnet
Deploy virtual machines and associate their network interfaces to the application security groups
Prerequisites
Portal
PowerShell
CLI
An Azure account with an active subscription. You cancreate an account for free.
An Azure account with an active subscription. You cancreate an account for free.
Azure Cloud Shell
Azure hosts Azure Cloud Shell, an interactive shell environment that you can use through your browser. You can use either Bash or PowerShell with Cloud Shell to work with Azure services. You can use the Cloud Shell preinstalled commands to run the code in this article, without having to install anything on your local environment.
To start Azure Cloud Shell:
To use Azure Cloud Shell:
Start Cloud Shell.
Start Cloud Shell.
Select theCopybutton on a code block (or command block) to copy the code or command.
Select theCopybutton on a code block (or command block) to copy the code or command.
Paste the code or command into the Cloud Shell session by selectingCtrl+Shift+Von Windows and Linux, or by selectingCmd+Shift+Von macOS.
Paste the code or command into the Cloud Shell session by selectingCtrl+Shift+Von Windows and Linux, or by selectingCmd+Shift+Von macOS.
SelectEnterto run the code or command.
SelectEnterto run the code or command.
If you choose to install and use PowerShell locally, this article requires the Azure PowerShell module version 1.0.0 or later. RunGet-Module -ListAvailable Azto find the installed version. If you need to upgrade, seeInstall Azure PowerShell module. If you're running PowerShell locally, you also need to runConnect-AzAccountto create a connection with Azure.
Get-Module -ListAvailable Az
Connect-AzAccount
If you don't have anAzure subscription, create anAzure free accountbefore you begin.
Use the Bash environment inAzure Cloud Shell. For more information, seeGet started with Azure Cloud Shell.
Use the Bash environment inAzure Cloud Shell. For more information, seeGet started with Azure Cloud Shell.

If you prefer to run CLI reference commands locally,installthe Azure CLI. If you're running on Windows or macOS, consider running Azure CLI in a Docker container. For more information, seeHow to run the Azure CLI in a Docker container.If you're using a local installation, sign in to the Azure CLI by using theaz logincommand. To finish the authentication process, follow the steps displayed in your terminal. For other sign-in options, seeAuthenticate to Azure using Azure CLI.When you're prompted, install the Azure CLI extension on first use. For more information about extensions, seeUse and manage extensions with the Azure CLI.Runaz versionto find the version and dependent libraries that are installed. To upgrade to the latest version, runaz upgrade.
If you prefer to run CLI reference commands locally,installthe Azure CLI. If you're running on Windows or macOS, consider running Azure CLI in a Docker container. For more information, seeHow to run the Azure CLI in a Docker container.
If you're using a local installation, sign in to the Azure CLI by using theaz logincommand. To finish the authentication process, follow the steps displayed in your terminal. For other sign-in options, seeAuthenticate to Azure using Azure CLI.
If you're using a local installation, sign in to the Azure CLI by using theaz logincommand. To finish the authentication process, follow the steps displayed in your terminal. For other sign-in options, seeAuthenticate to Azure using Azure CLI.
When you're prompted, install the Azure CLI extension on first use. For more information about extensions, seeUse and manage extensions with the Azure CLI.
When you're prompted, install the Azure CLI extension on first use. For more information about extensions, seeUse and manage extensions with the Azure CLI.
Runaz versionto find the version and dependent libraries that are installed. To upgrade to the latest version, runaz upgrade.
Runaz versionto find the version and dependent libraries that are installed. To upgrade to the latest version, runaz upgrade.
This article requires version 2.0.28 or later of the Azure CLI. If using Azure Cloud Shell, the latest version is already installed.
Portal
PowerShell
CLI
The following procedure creates a virtual network with a resource subnet.
In the portal, search for and selectVirtual networks.
In the portal, search for and selectVirtual networks.
On theVirtual networkspage, select+ Create.
On theVirtual networkspage, select+ Create.
On theBasicstab ofCreate virtual network, enter or select the following information:SettingValueProject detailsSubscriptionSelect your subscription.Resource groupSelectCreate new.Entertest-rginName.SelectOK.Instance detailsNameEntervnet-1.RegionSelectEast US 2.
On theBasicstab ofCreate virtual network, enter or select the following information:

SelectNextto proceed to theSecuritytab.
SelectNextto proceed to theSecuritytab.
SelectNextto proceed to theIP addressestab.
SelectNextto proceed to theIP addressestab.
In the address space box underSubnets, select thedefaultsubnet.
In the address space box underSubnets, select thedefaultsubnet.
On theEdit subnetpane, enter or select the following information:SettingValueSubnet detailsSubnet templateLeave the default asDefault.NameEntersubnet-1.Starting addressLeave the default of10.0.0.0.Subnet sizeLeave the default of/24(256 addresses).
On theEdit subnetpane, enter or select the following information:

SelectSave.
SelectSave.
SelectReview + createat the bottom of the screen. After validation passes, selectCreate.
SelectReview + createat the bottom of the screen. After validation passes, selectCreate.
First create a resource group for all the resources created in this article withNew-AzResourceGroup. The following example creates a resource group in thewestus2location:
$rg = @{
    ResourceGroupName = "test-rg"
    Location = "westus2"
}

New-AzResourceGroup @rg
$rg = @{
    ResourceGroupName = "test-rg"
    Location = "westus2"
}

New-AzResourceGroup @rg
Create a virtual network withNew-AzVirtualNetwork. The following example creates a virtual namedvnet-1:
$vnet = @{
    ResourceGroupName = "test-rg"
    Location = "westus2"
    Name = "vnet-1"
    AddressPrefix = "10.0.0.0/16"
}

$virtualNetwork = New-AzVirtualNetwork @vnet
$vnet = @{
    ResourceGroupName = "test-rg"
    Location = "westus2"
    Name = "vnet-1"
    AddressPrefix = "10.0.0.0/16"
}

$virtualNetwork = New-AzVirtualNetwork @vnet
Create a subnet configuration withNew-AzVirtualNetworkSubnetConfig, and then write the subnet configuration to the virtual network withSet-AzVirtualNetwork. The following example adds a subnet namedsubnet-1to the virtual network and associates thensg-1network security group to it:
$subnet = @{
    Name = "subnet-1"
    VirtualNetwork = $virtualNetwork
    AddressPrefix = "10.0.0.0/24"
}
Add-AzVirtualNetworkSubnetConfig @subnet

$virtualNetwork | Set-AzVirtualNetwork
$subnet = @{
    Name = "subnet-1"
    VirtualNetwork = $virtualNetwork
    AddressPrefix = "10.0.0.0/24"
}
Add-AzVirtualNetworkSubnetConfig @subnet

$virtualNetwork | Set-AzVirtualNetwork
First create a resource group for all the resources created in this article withaz group create. The following example creates a resource group in thewestus2location:
az group create \
  --name test-rg \
  --location westus2
az group create \
  --name test-rg \
  --location westus2
Create a virtual network withaz network vnet create. The following example creates a virtual namedvnet-1:
az network vnet create \
  --name vnet-1 \
  --resource-group test-rg \
  --address-prefixes 10.0.0.0/16
az network vnet create \
  --name vnet-1 \
  --resource-group test-rg \
  --address-prefixes 10.0.0.0/16
Add a subnet to a virtual network withaz network vnet subnet create. The following example adds a subnet namedsubnet-1to the virtual network and associates thensg-1network security group to it:
az network vnet subnet create \
  --vnet-name vnet-1 \
  --resource-group test-rg \
  --name subnet-1 \
  --address-prefix 10.0.0.0/24
az network vnet subnet create \
  --vnet-name vnet-1 \
  --resource-group test-rg \
  --name subnet-1 \
  --address-prefix 10.0.0.0/24
Create application security groups
Anapplication security group (ASGs)enables you to group together servers with similar functions, such as web servers.
Portal
PowerShell
CLI
In the search box at the top of the portal, enterApplication security group. SelectApplication security groupsin the search results.
In the search box at the top of the portal, enterApplication security group. SelectApplication security groupsin the search results.
Select+ Create.
Select+ Create.
On theBasicstab ofCreate an application security group, enter, or select this information:SettingValueProject detailsSubscriptionSelect your subscription.Resource groupSelecttest-rg.Instance detailsNameEnterasg-web.RegionSelectEast US 2.
On theBasicstab ofCreate an application security group, enter, or select this information:
SelectReview + create.
SelectReview + create.
Select+ Create.
Select+ Create.
Repeat the previous steps, specifying the following values:SettingValueProject detailsSubscriptionSelect your subscription.Resource groupSelecttest-rg.Instance detailsNameEnterasg-mgmt.RegionSelectEast US 2.
Repeat the previous steps, specifying the following values:
SelectReview + create.
SelectReview + create.
SelectCreate.
SelectCreate.
Create an application security group withNew-AzApplicationSecurityGroup. An application security group enables you to group servers with similar port filtering requirements. The following example creates two application security groups.
$web = @{
    ResourceGroupName = "test-rg"
    Name = "asg-web"
    Location = "westus2"
}
$webAsg = New-AzApplicationSecurityGroup @web

$mgmt = @{
    ResourceGroupName = "test-rg"
    Name = "asg-mgmt"
    Location = "westus2"
}
$mgmtAsg = New-AzApplicationSecurityGroup @mgmt
$web = @{
    ResourceGroupName = "test-rg"
    Name = "asg-web"
    Location = "westus2"
}
$webAsg = New-AzApplicationSecurityGroup @web

$mgmt = @{
    ResourceGroupName = "test-rg"
    Name = "asg-mgmt"
    Location = "westus2"
}
$mgmtAsg = New-AzApplicationSecurityGroup @mgmt
Create an application security group withaz network asg create. An application security group enables you to group servers with similar port filtering requirements. The following example creates two application security groups.
az network asg create \
  --resource-group test-rg \
  --name asg-web \
  --location westus2

az network asg create \
  --resource-group test-rg \
  --name asg-mgmt \
  --location westus2
az network asg create \
  --resource-group test-rg \
  --name asg-web \
  --location westus2

az network asg create \
  --resource-group test-rg \
  --name asg-mgmt \
  --location westus2
Create a network security group
Anetwork security group (NSG)secures network traffic in your virtual network.
Portal
PowerShell
CLI
In the search box at the top of the portal, enterNetwork security group. SelectNetwork security groupsin the search results.NoteIn the search results forNetwork security groups, you may seeNetwork security groups (classic). SelectNetwork security groups.
In the search box at the top of the portal, enterNetwork security group. SelectNetwork security groupsin the search results.
Note
In the search results forNetwork security groups, you may seeNetwork security groups (classic). SelectNetwork security groups.
Select+ Create.
Select+ Create.
On theBasicstab ofCreate network security group, enter, or select this information:SettingValueProject detailsSubscriptionSelect your subscription.Resource groupSelecttest-rg.Instance detailsNameEnternsg-1.LocationSelectEast US 2.
On theBasicstab ofCreate network security group, enter, or select this information:
SelectReview + create.
SelectReview + create.
SelectCreate.
SelectCreate.
Create a network security group withNew-AzNetworkSecurityGroup. The following example creates a network security group namednsg-1:
$nsgParams = @{
    ResourceGroupName = "test-rg"
    Location = "westus2"
    Name = "nsg-1"
}
$nsg = New-AzNetworkSecurityGroup @nsgParams
$nsgParams = @{
    ResourceGroupName = "test-rg"
    Location = "westus2"
    Name = "nsg-1"
}
$nsg = New-AzNetworkSecurityGroup @nsgParams
Create a network security group withaz network nsg create. The following example creates a network security group namednsg-1:
# Create a network security group
az network nsg create \
  --resource-group test-rg \
  --name nsg-1
# Create a network security group
az network nsg create \
  --resource-group test-rg \
  --name nsg-1
Associate network security group to subnet
In this section, you associate the network security group with the subnet of the virtual network you created earlier.
Portal
PowerShell
CLI
In the search box at the top of the portal, enterNetwork security group. SelectNetwork security groupsin the search results.
In the search box at the top of the portal, enterNetwork security group. SelectNetwork security groupsin the search results.
Selectnsg-1.
Selectnsg-1.
SelectSubnetsfrom theSettingssection ofnsg-1.
SelectSubnetsfrom theSettingssection ofnsg-1.
In theSubnetspage, select+ Associate:
In theSubnetspage, select+ Associate:
UnderAssociate subnet, selectvnet-1 (test-rg)forVirtual network.
UnderAssociate subnet, selectvnet-1 (test-rg)forVirtual network.
Selectsubnet-1forSubnet, and then selectOK.
Selectsubnet-1forSubnet, and then selectOK.
UseGet-AzVirtualNetworkto retrieve the virtual network object, and then useSet-AzVirtualNetworkSubnetConfigto associate the network security group with the subnet. The following example retrieves the virtual network object and updates the subnet configuration to associate the network security group:
# Retrieve the virtual network
$vnet = Get-AzVirtualNetwork -Name "vnet-1" -ResourceGroupName "test-rg"

# Update the subnet configuration to associate the network security group
$subnetConfigParams = @{
    VirtualNetwork = $vnet
    Name = "subnet-1"
    AddressPrefix = $vnet.Subnets[0].AddressPrefix
    NetworkSecurityGroup = Get-AzNetworkSecurityGroup -Name "nsg-1" -ResourceGroupName "test-rg"
}
Set-AzVirtualNetworkSubnetConfig @subnetConfigParams

# Update the virtual network with the new subnet configuration
$vnet | Set-AzVirtualNetwork
# Retrieve the virtual network
$vnet = Get-AzVirtualNetwork -Name "vnet-1" -ResourceGroupName "test-rg"

# Update the subnet configuration to associate the network security group
$subnetConfigParams = @{
    VirtualNetwork = $vnet
    Name = "subnet-1"
    AddressPrefix = $vnet.Subnets[0].AddressPrefix
    NetworkSecurityGroup = Get-AzNetworkSecurityGroup -Name "nsg-1" -ResourceGroupName "test-rg"
}
Set-AzVirtualNetworkSubnetConfig @subnetConfigParams

# Update the virtual network with the new subnet configuration
$vnet | Set-AzVirtualNetwork
Useaz network vnet subnet updateto associate the network security group with the subnet. The following example associates thensg-1network security group with thesubnet-1subnet:
az network vnet subnet update \
  --resource-group test-rg \
  --vnet-name vnet-1 \
  --name subnet-1 \
  --network-security-group nsg-1
az network vnet subnet update \
  --resource-group test-rg \
  --vnet-name vnet-1 \
  --name subnet-1 \
  --network-security-group nsg-1
Create security rules
Portal
PowerShell
CLI
SelectInbound security rulesfrom theSettingssection ofnsg-1.
SelectInbound security rulesfrom theSettingssection ofnsg-1.
InInbound security rulespage, select+ Add.
InInbound security rulespage, select+ Add.
Create a security rule that allows ports 80 and 443 to theasg-webapplication security group. InAdd inbound security rulepage, enter or select the following information:SettingValueSourceLeave the default ofAny.Source port rangesLeave the default of(*).DestinationSelectApplication security group.Destination application security groupsSelectasg-web.ServiceLeave the default ofCustom.Destination port rangesEnter80,443.ProtocolSelectTCP.ActionLeave the default ofAllow.PriorityLeave the default of100.NameEnterallow-web-all.
Create a security rule that allows ports 80 and 443 to theasg-webapplication security group. InAdd inbound security rulepage, enter or select the following information:
SelectAdd.
SelectAdd.
Complete the previous steps with the following information:SettingValueSourceLeave the default ofAny.Source port rangesLeave the default of(*).DestinationSelectApplication security group.Destination application security groupSelectasg-mgmt.ServiceSelectRDP.ActionLeave the default ofAllow.PriorityLeave the default of110.NameEnterallow-rdp-all.
Complete the previous steps with the following information:
SelectAdd.
SelectAdd.
Caution
In this article, RDP (port 3389) is exposed to the internet for the VM that is assigned to theasg-mgmtapplication security group.
For production environments, instead of exposing port 3389 to the internet, it's recommended that you connect to Azure resources that you want to manage using a VPN, private network connection, or Azure Bastion.
For more information on Azure Bastion, seeWhat is Azure Bastion?.
Create a security rule withNew-AzNetworkSecurityRuleConfig. The following example creates a rule that allows traffic inbound from the internet to theasg-webapplication security group over ports 80 and 443:
$webAsgParams = @{
    Name = "asg-web"
    ResourceGroupName = "test-rg"
}
$webAsg = Get-AzApplicationSecurityGroup @webAsgParams

$webRuleParams = @{
    Name = "Allow-Web-All"
    Access = "Allow"
    Protocol = "Tcp"
    Direction = "Inbound"
    Priority = 100
    SourceAddressPrefix = "Internet"
    SourcePortRange = "*"
    DestinationApplicationSecurityGroupId = $webAsg.id
    DestinationPortRange = 80,443
}
$webRule = New-AzNetworkSecurityRuleConfig @webRuleParams
$webAsgParams = @{
    Name = "asg-web"
    ResourceGroupName = "test-rg"
}
$webAsg = Get-AzApplicationSecurityGroup @webAsgParams

$webRuleParams = @{
    Name = "Allow-Web-All"
    Access = "Allow"
    Protocol = "Tcp"
    Direction = "Inbound"
    Priority = 100
    SourceAddressPrefix = "Internet"
    SourcePortRange = "*"
    DestinationApplicationSecurityGroupId = $webAsg.id
    DestinationPortRange = 80,443
}
$webRule = New-AzNetworkSecurityRuleConfig @webRuleParams
The following example creates a rule that allows traffic inbound from the internet to theasg-mgmtapplication security group over port 3389:
$mgmtAsgParams = @{
    Name = "asg-mgmt"
    ResourceGroupName = "test-rg"
}
$mgmtAsg = Get-AzApplicationSecurityGroup @mgmtAsgParams

$mgmtRuleParams = @{
    Name = "Allow-RDP-All"
    Access = "Allow"
    Protocol = "Tcp"
    Direction = "Inbound"
    Priority = 110
    SourceAddressPrefix = "Internet"
    SourcePortRange = "*"
    DestinationApplicationSecurityGroupId = $mgmtAsg.id
    DestinationPortRange = 3389
}
$mgmtRule = New-AzNetworkSecurityRuleConfig @mgmtRuleParams
$mgmtAsgParams = @{
    Name = "asg-mgmt"
    ResourceGroupName = "test-rg"
}
$mgmtAsg = Get-AzApplicationSecurityGroup @mgmtAsgParams

$mgmtRuleParams = @{
    Name = "Allow-RDP-All"
    Access = "Allow"
    Protocol = "Tcp"
    Direction = "Inbound"
    Priority = 110
    SourceAddressPrefix = "Internet"
    SourcePortRange = "*"
    DestinationApplicationSecurityGroupId = $mgmtAsg.id
    DestinationPortRange = 3389
}
$mgmtRule = New-AzNetworkSecurityRuleConfig @mgmtRuleParams
UseGet-AzNetworkSecurityGroupto retrieve the existing network security group, and then add the new rules with the+=operator. Finally, update the network security group withSet-AzNetworkSecurityGroup:
+=
# Retrieve the existing network security group
$nsg = Get-AzNetworkSecurityGroup -Name "nsg-1" -ResourceGroupName "test-rg"

# Add the new rules to the security group
$nsg.SecurityRules += $webRule
$nsg.SecurityRules += $mgmtRule

# Update the network security group with the new rules
Set-AzNetworkSecurityGroup -NetworkSecurityGroup $nsg
# Retrieve the existing network security group
$nsg = Get-AzNetworkSecurityGroup -Name "nsg-1" -ResourceGroupName "test-rg"

# Add the new rules to the security group
$nsg.SecurityRules += $webRule
$nsg.SecurityRules += $mgmtRule

# Update the network security group with the new rules
Set-AzNetworkSecurityGroup -NetworkSecurityGroup $nsg
Caution
In this article, RDP (port 3389) is exposed to the internet for the VM that is assigned to theasg-mgmtapplication security group.
For production environments, instead of exposing port 3389 to the internet, it's recommended that you connect to Azure resources that you want to manage using a VPN, private network connection, or Azure Bastion.
For more information on Azure Bastion, seeWhat is Azure Bastion?.
Create a security rule withaz network nsg rule create. The following example creates a rule that allows traffic inbound from the internet to theasg-webapplication security group over ports 80 and 443:
az network nsg rule create \
  --resource-group test-rg \
  --nsg-name nsg-1 \
  --name Allow-Web-All \
  --access Allow \
  --protocol Tcp \
  --direction Inbound \
  --priority 100 \
  --source-address-prefix Internet \
  --source-port-range "*" \
  --destination-asgs "asg-web" \
  --destination-port-range 80 443
az network nsg rule create \
  --resource-group test-rg \
  --nsg-name nsg-1 \
  --name Allow-Web-All \
  --access Allow \
  --protocol Tcp \
  --direction Inbound \
  --priority 100 \
  --source-address-prefix Internet \
  --source-port-range "*" \
  --destination-asgs "asg-web" \
  --destination-port-range 80 443
The following example creates a rule that allows traffic inbound from the Internet to theasg-mgmtapplication security group over port 22:
az network nsg rule create \
  --resource-group test-rg \
  --nsg-name nsg-1 \
  --name Allow-SSH-All \
  --access Allow \
  --protocol Tcp \
  --direction Inbound \
  --priority 110 \
  --source-address-prefix Internet \
  --source-port-range "*" \
  --destination-asgs "asg-mgmt" \
  --destination-port-range 22
az network nsg rule create \
  --resource-group test-rg \
  --nsg-name nsg-1 \
  --name Allow-SSH-All \
  --access Allow \
  --protocol Tcp \
  --direction Inbound \
  --priority 110 \
  --source-address-prefix Internet \
  --source-port-range "*" \
  --destination-asgs "asg-mgmt" \
  --destination-port-range 22
Caution
In this article, SSH (port 22) is exposed to the internet for the VM that is assigned to theasg-mgmtapplication security group.
For production environments, instead of exposing port 22 to the internet, it's recommended that you connect to Azure resources that you want to manage using a VPN, private network connection, or Azure Bastion.
For more information on Azure Bastion, seeWhat is Azure Bastion?.
Create virtual machines
Create two virtual machines (VMs) in the virtual network.
Portal
PowerShell
CLI
In the portal, search for and selectVirtual machines.
In the portal, search for and selectVirtual machines.
InVirtual machines, select+ Create, thenAzure virtual machine.
InVirtual machines, select+ Create, thenAzure virtual machine.
InCreate a virtual machine, enter or select this information in theBasicstab:SettingValueProject detailsSubscriptionSelect your subscription.Resource groupSelecttest-rg.Instance detailsVirtual machine nameEntervm-web.RegionSelect(US) East US 2.Availability optionsLeave the default ofNo infrastructure redundancy required.Security typeSelectStandard.ImageSelectWindows Server 2022 Datacenter - x64 Gen2.Azure Spot instanceLeave the default of unchecked.SizeSelect a size.Administrator accountUsernameEnter a username.PasswordEnter a password.Confirm passwordReenter password.Inbound port rulesSelect inbound portsSelectNone.
InCreate a virtual machine, enter or select this information in theBasicstab:
SelectNext: DisksthenNext: Networking.
SelectNext: DisksthenNext: Networking.
In theNetworkingtab, enter or select the following information:SettingValueNetwork interfaceVirtual networkSelectvnet-1.SubnetSelectsubnet-1 (10.0.0.0/24).Public IPLeave the default of a new public IP.NIC network security groupSelectNone.
In theNetworkingtab, enter or select the following information:
Select theReview + createtab, or select the blueReview + createbutton at the bottom of the page.
Select theReview + createtab, or select the blueReview + createbutton at the bottom of the page.
SelectCreate. The VM might take a few minutes to deploy.
SelectCreate. The VM might take a few minutes to deploy.
Repeat the previous steps to create a second virtual machine namedvm-mgmt.
Repeat the previous steps to create a second virtual machine namedvm-mgmt.
Before creating the VMs, retrieve the virtual network object with the subnet withGet-AzVirtualNetwork:
$virtualNetworkParams = @{
    Name = "vnet-1"
    ResourceGroupName = "test-rg"
}
$virtualNetwork = Get-AzVirtualNetwork @virtualNetworkParams
$virtualNetworkParams = @{
    Name = "vnet-1"
    ResourceGroupName = "test-rg"
}
$virtualNetwork = Get-AzVirtualNetwork @virtualNetworkParams
Create a public IP address for each VM withNew-AzPublicIpAddress:
$publicIpWebParams = @{
    AllocationMethod = "Static"
    ResourceGroupName = "test-rg"
    Location = "westus2"
    Name = "public-ip-vm-web"
}
$publicIpWeb = New-AzPublicIpAddress @publicIpWebParams

$publicIpMgmtParams = @{
    AllocationMethod = "Static"
    ResourceGroupName = "test-rg"
    Location = "westus2"
    Name = "public-ip-vm-mgmt"
}
$publicIpMgmt = New-AzPublicIpAddress @publicIpMgmtParams
$publicIpWebParams = @{
    AllocationMethod = "Static"
    ResourceGroupName = "test-rg"
    Location = "westus2"
    Name = "public-ip-vm-web"
}
$publicIpWeb = New-AzPublicIpAddress @publicIpWebParams

$publicIpMgmtParams = @{
    AllocationMethod = "Static"
    ResourceGroupName = "test-rg"
    Location = "westus2"
    Name = "public-ip-vm-mgmt"
}
$publicIpMgmt = New-AzPublicIpAddress @publicIpMgmtParams
Create two network interfaces withNew-AzNetworkInterface, and assign a public IP address to the network interface. The following example creates a network interface, associates thepublic-ip-vm-webpublic IP address to it.
$webNicParams = @{
    Location = "westus2"
    Name = "vm-web-nic"
    ResourceGroupName = "test-rg"
    SubnetId = $virtualNetwork.Subnets[0].Id
    PublicIpAddressId = $publicIpWeb.Id
}
$webNic = New-AzNetworkInterface @webNicParams
$webNicParams = @{
    Location = "westus2"
    Name = "vm-web-nic"
    ResourceGroupName = "test-rg"
    SubnetId = $virtualNetwork.Subnets[0].Id
    PublicIpAddressId = $publicIpWeb.Id
}
$webNic = New-AzNetworkInterface @webNicParams
The following example creates a network interface, associates thepublic-ip-vm-mgmtpublic IP address to it.
$mgmtNicParams = @{
    Location = "westus2"
    Name = "vm-mgmt-nic"
    ResourceGroupName = "test-rg"
    SubnetId = $virtualNetwork.Subnets[0].Id
    PublicIpAddressId = $publicIpMgmt.Id
}
$mgmtNic = New-AzNetworkInterface @mgmtNicParams
$mgmtNicParams = @{
    Location = "westus2"
    Name = "vm-mgmt-nic"
    ResourceGroupName = "test-rg"
    SubnetId = $virtualNetwork.Subnets[0].Id
    PublicIpAddressId = $publicIpMgmt.Id
}
$mgmtNic = New-AzNetworkInterface @mgmtNicParams
Create two VMs in the virtual network so you can validate traffic filtering in a later step.
Create a VM configuration withNew-AzVMConfig, then create the VM withNew-AzVM. The following example creates a VM that serves as a web server. The-AsJoboption creates the VM in the background, so you can continue to the next step:
-AsJob
# Create user object
$cred = Get-Credential -Message "Enter a username and password for the virtual machine."

$webVmConfigParams = @{
    VMName = "vm-web"
    VMSize = "Standard_DS1_V2"
}

$vmOSParams = @{
    ComputerName = "vm-web"
    Credential = $cred
}

$vmImageParams = @{
    PublisherName = "MicrosoftWindowsServer"
    Offer = "WindowsServer"
    Skus = "2022-Datacenter"
    Version = "latest"
}

$webVmConfig = New-AzVMConfig @webVmConfigParams | Set-AzVMOperatingSystem -Windows @vmOSParams | Set-AzVMSourceImage @vmImageParams | Add-AzVMNetworkInterface -Id $webNic.Id

$webVmParams = @{
    ResourceGroupName = "test-rg"
    Location = "westus2"
    VM = $webVmConfig
}

New-AzVM @webVmParams -AsJob
# Create user object
$cred = Get-Credential -Message "Enter a username and password for the virtual machine."

$webVmConfigParams = @{
    VMName = "vm-web"
    VMSize = "Standard_DS1_V2"
}

$vmOSParams = @{
    ComputerName = "vm-web"
    Credential = $cred
}

$vmImageParams = @{
    PublisherName = "MicrosoftWindowsServer"
    Offer = "WindowsServer"
    Skus = "2022-Datacenter"
    Version = "latest"
}

$webVmConfig = New-AzVMConfig @webVmConfigParams | Set-AzVMOperatingSystem -Windows @vmOSParams | Set-AzVMSourceImage @vmImageParams | Add-AzVMNetworkInterface -Id $webNic.Id

$webVmParams = @{
    ResourceGroupName = "test-rg"
    Location = "westus2"
    VM = $webVmConfig
}

New-AzVM @webVmParams -AsJob
Create a VM to serve as a management server:
# Create user object
$cred = Get-Credential -Message "Enter a username and password for the virtual machine."

$webVmConfigParams = @{
    VMName = "vm-mgmt"
    VMSize = "Standard_DS1_V2"
}

$vmOSParams = @{
    ComputerName = "vm-mgmt"
    Credential = $cred
}

$vmImageParams = @{
    PublisherName = "MicrosoftWindowsServer"
    Offer = "WindowsServer"
    Skus = "2022-Datacenter"
    Version = "latest"
}

$mgmtVmConfig = New-AzVMConfig @webVmConfigParams | Set-AzVMOperatingSystem -Windows @vmOSParams | Set-AzVMSourceImage @vmImageParams | Add-AzVMNetworkInterface -Id $mgmtNic.Id

$mgmtVmParams = @{
    ResourceGroupName = "test-rg"
    Location = "westus2"
    VM = $mgmtVmConfig
}

New-AzVM @mgmtVmParams
# Create user object
$cred = Get-Credential -Message "Enter a username and password for the virtual machine."

$webVmConfigParams = @{
    VMName = "vm-mgmt"
    VMSize = "Standard_DS1_V2"
}

$vmOSParams = @{
    ComputerName = "vm-mgmt"
    Credential = $cred
}

$vmImageParams = @{
    PublisherName = "MicrosoftWindowsServer"
    Offer = "WindowsServer"
    Skus = "2022-Datacenter"
    Version = "latest"
}

$mgmtVmConfig = New-AzVMConfig @webVmConfigParams | Set-AzVMOperatingSystem -Windows @vmOSParams | Set-AzVMSourceImage @vmImageParams | Add-AzVMNetworkInterface -Id $mgmtNic.Id

$mgmtVmParams = @{
    ResourceGroupName = "test-rg"
    Location = "westus2"
    VM = $mgmtVmConfig
}

New-AzVM @mgmtVmParams
The virtual machine takes a few minutes to create. Don't continue with the next step until Azure finishes creating the VM.
Create two VMs in the virtual network so you can validate traffic filtering in a later step.
Create a VM withaz vm create. The following example creates a VM that serves as a web server. The--nsg ""option is specified to prevent Azure from creating a default network security group for the network interface Azure creates when it creates the VM. The command prompts you to create a password for the VM. SSH keys aren't used in this example to facilitate the later steps in this article. In a production environment, use SSH keys for security.
--nsg ""
az vm create \
  --resource-group test-rg \
  --name vm-web \
  --image Ubuntu2204 \
  --vnet-name vnet-1 \
  --subnet subnet-1 \
  --nsg "" \
  --admin-username azureuser \
  --authentication-type password \
  --assign-identity
az vm create \
  --resource-group test-rg \
  --name vm-web \
  --image Ubuntu2204 \
  --vnet-name vnet-1 \
  --subnet subnet-1 \
  --nsg "" \
  --admin-username azureuser \
  --authentication-type password \
  --assign-identity
The VM takes a few minutes to create. After the VM is created, output similar to the following example is returned:
{
  "fqdns": "",
  "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Compute/virtualMachines/vm-web",
  "location": "westus2",
  "macAddress": "00-0D-3A-23-9A-49",
  "powerState": "VM running",
  "privateIpAddress": "10.0.0.4",
  "publicIpAddress": "203.0.113.24",
  "resourceGroup": "test-rg"
}
{
  "fqdns": "",
  "id": "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Compute/virtualMachines/vm-web",
  "location": "westus2",
  "macAddress": "00-0D-3A-23-9A-49",
  "powerState": "VM running",
  "privateIpAddress": "10.0.0.4",
  "publicIpAddress": "203.0.113.24",
  "resourceGroup": "test-rg"
}
Create a VM withaz vm create. The following example creates a VM that serves as a management server.
The following example creates a VM and adds a user account. The--generate-ssh-keysparameter causes the CLI to look for an available ssh key in~/.ssh. If one is found, that key is used. If not, one is generated and stored in~/.ssh. Finally, we deploy the latestUbuntu 22.04image.
--generate-ssh-keys
~/.ssh
~/.ssh
Ubuntu 22.04
az vm create \
  --resource-group test-rg \
  --name vm-mgmt \
  --image Ubuntu2204 \
  --vnet-name vnet-1 \
  --subnet subnet-1 \
  --nsg "" \
  --admin-username azureuser \
  --generate-ssh-keys \
  --assign-identity
az vm create \
  --resource-group test-rg \
  --name vm-mgmt \
  --image Ubuntu2204 \
  --vnet-name vnet-1 \
  --subnet subnet-1 \
  --nsg "" \
  --admin-username azureuser \
  --generate-ssh-keys \
  --assign-identity
The VM takes a few minutes to create. Don't continue with the next step until Azure finishes creating the VM.
Associate network interfaces to an ASG
Portal
PowerShell
CLI
When you created the VMs, Azure created a network interface for each VM, and attached it to the VM.
Add the network interface of each VM to one of the application security groups you created previously:
In the search box at the top of the portal, enterVirtual machine. SelectVirtual machinesin the search results, then selectvm-web.
In the search box at the top of the portal, enterVirtual machine. SelectVirtual machinesin the search results, then selectvm-web.
SelectApplication security groupsfrom theNetworkingsection ofvm-web.
SelectApplication security groupsfrom theNetworkingsection ofvm-web.
SelectAdd application security groups, then in theAdd application security groupstab, selectasg-web. Finally, selectAdd.
SelectAdd application security groups, then in theAdd application security groupstab, selectasg-web. Finally, selectAdd.

Repeat the previous steps forvm-mgmt, selectingasg-mgmtin theAdd application security groupstab.
Repeat the previous steps forvm-mgmt, selectingasg-mgmtin theAdd application security groupstab.
UseGet-AzNetworkInterfaceto retrieve the network interface of the virtual machine, and then useGet-AzApplicationSecurityGroupto retrieve the application security group. Finally, useSet-AzNetworkInterfaceto associate the application security group with the network interface. The following example associates theasg-webapplication security group with thevm-web-nicnetwork interface:
$params1 = @{
    Name = "vm-web-nic"
    ResourceGroupName = "test-rg"
}
$nic = Get-AzNetworkInterface @params1

$params2 = @{
    Name = "asg-web"
    ResourceGroupName = "test-rg"
}
$asg = Get-AzApplicationSecurityGroup @params2

$nic.IpConfigurations[0].ApplicationSecurityGroups = @($asg)

$params3 = @{
    NetworkInterface = $nic
}
Set-AzNetworkInterface @params3
$params1 = @{
    Name = "vm-web-nic"
    ResourceGroupName = "test-rg"
}
$nic = Get-AzNetworkInterface @params1

$params2 = @{
    Name = "asg-web"
    ResourceGroupName = "test-rg"
}
$asg = Get-AzApplicationSecurityGroup @params2

$nic.IpConfigurations[0].ApplicationSecurityGroups = @($asg)

$params3 = @{
    NetworkInterface = $nic
}
Set-AzNetworkInterface @params3
Repeat the command to associate theasg-mgmtapplication security group with thevm-mgmt-nicnetwork interface.
$params1 = @{
    Name = "vm-mgmt-nic"
    ResourceGroupName = "test-rg"
}
$nic = Get-AzNetworkInterface @params1

$params2 = @{
    Name = "asg-mgmt"
    ResourceGroupName = "test-rg"
}
$asg = Get-AzApplicationSecurityGroup @params2

$nic.IpConfigurations[0].ApplicationSecurityGroups = @($asg)

$params3 = @{
    NetworkInterface = $nic
}
Set-AzNetworkInterface @params3
$params1 = @{
    Name = "vm-mgmt-nic"
    ResourceGroupName = "test-rg"
}
$nic = Get-AzNetworkInterface @params1

$params2 = @{
    Name = "asg-mgmt"
    ResourceGroupName = "test-rg"
}
$asg = Get-AzApplicationSecurityGroup @params2

$nic.IpConfigurations[0].ApplicationSecurityGroups = @($asg)

$params3 = @{
    NetworkInterface = $nic
}
Set-AzNetworkInterface @params3
Useaz network nic updateto associate the network interface with the application security group. The following example associates theasg-webapplication security group with thevm-web-nicnetwork interface:
# Retrieve the network interface name associated with the virtual machine
nic_name=$(az vm show --resource-group test-rg --name vm-web --query 'networkProfile.networkInterfaces[0].id' -o tsv | xargs basename)

# Associate the application security group with the network interface
az network nic ip-config update \
    --name ipconfigvm-web \
    --nic-name $nic_name \
    --resource-group test-rg \
    --application-security-groups asg-web
# Retrieve the network interface name associated with the virtual machine
nic_name=$(az vm show --resource-group test-rg --name vm-web --query 'networkProfile.networkInterfaces[0].id' -o tsv | xargs basename)

# Associate the application security group with the network interface
az network nic ip-config update \
    --name ipconfigvm-web \
    --nic-name $nic_name \
    --resource-group test-rg \
    --application-security-groups asg-web
Repeat the command to associate theasg-mgmtapplication security group with thevm-mgmt-nicnetwork interface.
# Retrieve the network interface name associated with the virtual machine
nic_name=$(az vm show --resource-group test-rg --name vm-mgmt --query 'networkProfile.networkInterfaces[0].id' -o tsv | xargs basename)

# Associate the application security group with the network interface
az network nic ip-config update \
    --name ipconfigvm-mgmt \
    --nic-name $nic_name \
    --resource-group test-rg \
    --application-security-groups asg-mgmt
# Retrieve the network interface name associated with the virtual machine
nic_name=$(az vm show --resource-group test-rg --name vm-mgmt --query 'networkProfile.networkInterfaces[0].id' -o tsv | xargs basename)

# Associate the application security group with the network interface
az network nic ip-config update \
    --name ipconfigvm-mgmt \
    --nic-name $nic_name \
    --resource-group test-rg \
    --application-security-groups asg-mgmt
Test traffic filters
Portal
PowerShell
CLI
In the search box at the top of the portal, enterVirtual machine. SelectVirtual machinesin the search results.
In the search box at the top of the portal, enterVirtual machine. SelectVirtual machinesin the search results.
Selectvm-mgmt.
Selectvm-mgmt.
On theOverviewpage, select theConnectbutton and then selectNative RDP.
On theOverviewpage, select theConnectbutton and then selectNative RDP.
SelectDownload RDP file.
SelectDownload RDP file.
Open the downloaded rdp file and selectConnect. Enter the username and password you specified when creating the VM.
Open the downloaded rdp file and selectConnect. Enter the username and password you specified when creating the VM.
SelectOK.
SelectOK.
You might receive a certificate warning during the connection process. If you receive the warning, selectYesorContinue, to continue with the connection.The connection succeeds, because inbound traffic from the internet to theasg-mgmtapplication security group is allowed through port 3389.The network interface forvm-mgmtis associated with theasg-mgmtapplication security group and allows the connection.
You might receive a certificate warning during the connection process. If you receive the warning, selectYesorContinue, to continue with the connection.
The connection succeeds, because inbound traffic from the internet to theasg-mgmtapplication security group is allowed through port 3389.
The network interface forvm-mgmtis associated with theasg-mgmtapplication security group and allows the connection.
Open a PowerShell session onvm-mgmt. Connect tovm-webusing the following:mstsc /v:vm-webThe RDP connection fromvm-mgmttovm-websucceeds because virtual machines in the same network can communicate with each other over any port by default.You can't create an RDP connection to thevm-webvirtual machine from the internet. The security rule for theasg-webprevents connections to port 3389 inbound from the internet. Inbound traffic from the Internet is denied to all resources by default.
Open a PowerShell session onvm-mgmt. Connect tovm-webusing the following:
mstsc /v:vm-web
mstsc /v:vm-web
The RDP connection fromvm-mgmttovm-websucceeds because virtual machines in the same network can communicate with each other over any port by default.
You can't create an RDP connection to thevm-webvirtual machine from the internet. The security rule for theasg-webprevents connections to port 3389 inbound from the internet. Inbound traffic from the Internet is denied to all resources by default.
To install Microsoft IIS on thevm-webvirtual machine, enter the following command from a PowerShell session on thevm-webvirtual machine:Install-WindowsFeature -name Web-Server -IncludeManagementTools
To install Microsoft IIS on thevm-webvirtual machine, enter the following command from a PowerShell session on thevm-webvirtual machine:
Install-WindowsFeature -name Web-Server -IncludeManagementTools
Install-WindowsFeature -name Web-Server -IncludeManagementTools
After the IIS installation is complete, disconnect from thevm-webvirtual machine, which leaves you in thevm-mgmtvirtual machine remote desktop connection.
After the IIS installation is complete, disconnect from thevm-webvirtual machine, which leaves you in thevm-mgmtvirtual machine remote desktop connection.
Disconnect from thevm-mgmtVM.
Disconnect from thevm-mgmtVM.
Search forvm-webin the portal search box.
Search forvm-webin the portal search box.
On theOverviewpage ofvm-web, note thePublic IP addressfor your VM. The address shown in the following example is 203.0.113.103. Your address is different:
On theOverviewpage ofvm-web, note thePublic IP addressfor your VM. The address shown in the following example is 203.0.113.103. Your address is different:

To confirm that you can access thevm-webweb server from the internet, open an internet browser on your computer and browse tohttp://<public-ip-address-from-previous-step>.
To confirm that you can access thevm-webweb server from the internet, open an internet browser on your computer and browse tohttp://<public-ip-address-from-previous-step>.
http://<public-ip-address-from-previous-step>
You see the IIS default page, because inbound traffic from the internet to theasg-webapplication security group is allowed through port 80.
The network interface attached forvm-webis associated with theasg-webapplication security group and allows the connection.
UseGet-AzPublicIpAddressto return the public IP address of a VM. The following example returns the public IP address of thevm-mgmtVM:
$params = @{
    Name = "public-ip-vm-mgmt"
    ResourceGroupName = "test-rg"
}
$publicIP = Get-AzPublicIpAddress @params | Select IpAddress
$params = @{
    Name = "public-ip-vm-mgmt"
    ResourceGroupName = "test-rg"
}
$publicIP = Get-AzPublicIpAddress @params | Select IpAddress
Use the following command to create a remote desktop session with thevm-mgmtVM from your local computer.
mstsc /v:$publicIP
mstsc /v:$publicIP
Enter the user name and password you specified when creating the VM (you might need to selectMore choices, thenUse a different account, to specify the credentials you entered when you created the VM), then selectOK. You might receive a certificate warning during the sign-in process. SelectYesto proceed with the connection.
The connection succeeds. Port 3389 is allowed inbound from the internet to theasg-mgmtapplication security group. The network interface attached to thevm-mgmtVM is in this group.
Use the following command to create a remote desktop connection to thevm-webVM, from thevm-mgmtVM, with the following command, from PowerShell:
mstsc /v:vm-web
mstsc /v:vm-web
The connection succeeds because a default security rule within each network security group allows traffic over all ports between all IP addresses within a virtual network. You can't create a remote desktop connection to thevm-webVM from the internet because the security rule for theasg-webdoesn't allow port 3389 inbound from the internet.
Use the following command to install Microsoft IIS on thevm-webVM from PowerShell:
Install-WindowsFeature -name Web-Server -IncludeManagementTools
Install-WindowsFeature -name Web-Server -IncludeManagementTools
After the IIS installation is complete, disconnect from thevm-webVM, which leaves you in thevm-mgmtVM remote desktop connection. To view the IIS welcome screen, open an internet browser and browse to http://vm-web.
Disconnect from thevm-mgmtVM.
On your computer, enter the following command from PowerShell to retrieve the public IP address of thevm-webserver:
$params = @{
    Name = "public-ip-vm-web"
    ResourceGroupName = "test-rg"
}
Get-AzPublicIpAddress @params | Select IpAddress
$params = @{
    Name = "public-ip-vm-web"
    ResourceGroupName = "test-rg"
}
Get-AzPublicIpAddress @params | Select IpAddress
To confirm that you can access thevm-webweb server from outside of Azure, open an internet browser on your computer and browse tohttp://<public-ip-address-from-previous-step>. The connection succeeds. Port 80 is allowed inbound from the internet to theasg-webapplication security group. The network interface attached to thevm-webVM is in this group.
http://<public-ip-address-from-previous-step>
Using an SSH client of your choice, connect to the VMs created previously. For example, the following command can be used from a command line interface such asWindows Subsystem for Linuxto create an SSH session with thevm-mgmtVM. You can sign-in to the virtual machines using your Microsoft Entra ID credentials or you can use the SSH key that you used to create the VMs. In the following example, we use the SSH key to sign in to management VM and then sign in to the web VM from the management VM with a password.
For more information about how to SSH to a Linux VM and sign in with Microsoft Entra ID, seeSign in to a Linux virtual machine in Azure by using Microsoft Entra ID and OpenSSH.
Store IP address of VM in order to SSH
Run the following command to store the IP address of the VM as an environment variable:
export IP_ADDRESS=$(az vm show --show-details --resource-group test-rg --name vm-mgmt --query publicIps --output tsv)
export IP_ADDRESS=$(az vm show --show-details --resource-group test-rg --name vm-mgmt --query publicIps --output tsv)
ssh -o StrictHostKeyChecking=no azureuser@$IP_ADDRESS
ssh -o StrictHostKeyChecking=no azureuser@$IP_ADDRESS
The connection succeeds because the network interface attached to thevm-mgmtVM is in theasg-mgmtapplication security group, which allows port 22 inbound from the Internet.
Use the following command to SSH to thevm-webVM from thevm-mgmtVM:
ssh -o StrictHostKeyChecking=no azureuser@vm-web
ssh -o StrictHostKeyChecking=no azureuser@vm-web
The connection succeeds because a default security rule within each network security group allows traffic over all ports between all IP addresses within a virtual network. You can't SSH to thevm-webVM from the Internet because the security rule for theasg-webdoesn't allow port 22 inbound from the Internet.
Use the following commands to install the nginx web server on thevm-webVM:
# Update package source
sudo apt-get -y update

# Install NGINX
sudo apt-get -y install nginx
# Update package source
sudo apt-get -y update

# Install NGINX
sudo apt-get -y install nginx
Thevm-webVM is allowed outbound to the Internet to retrieve nginx because a default security rule allows all outbound traffic to the Internet. Exit thevm-webSSH session, which leaves you at theusername@vm-mgmt:~$prompt of thevm-mgmtVM. To retrieve the nginx welcome screen from thevm-webVM, enter the following command:
username@vm-mgmt:~$
curl vm-web
curl vm-web
Sign out of thevm-mgmtVM. To confirm that you can access thevm-webweb server from outside of Azure, entercurl <publicIpAddress>from your own computer. The connection succeeds because theasg-webapplication security group, which the network interface attached to thevm-webVM is in, allows port 80 inbound from the Internet.
curl <publicIpAddress>
Portal
PowerShell
CLI
When you finish using the resources that you created, you can delete the resource group and all its resources.
In the Azure portal, search for and selectResource groups.
In the Azure portal, search for and selectResource groups.
On theResource groupspage, select thetest-rgresource group.
On theResource groupspage, select thetest-rgresource group.
On thetest-rgpage, selectDelete resource group.
On thetest-rgpage, selectDelete resource group.
Entertest-rginEnter resource group name to confirm deletion, and then selectDelete.
Entertest-rginEnter resource group name to confirm deletion, and then selectDelete.
When no longer needed, you can useRemove-AzResourceGroupto remove the resource group and all of the resources it contains:
$params = @{
    Name = "test-rg"
    Force = $true
}
Remove-AzResourceGroup @params
$params = @{
    Name = "test-rg"
    Force = $true
}
Remove-AzResourceGroup @params
When no longer needed, useaz group deleteto remove the resource group and all of the resources it contains.
az group delete \
    --name test-rg \
    --yes \
    --no-wait
az group delete \
    --name test-rg \
    --yes \
    --no-wait
Next steps
In this tutorial, you:
Created a network security group and associated it to a virtual network subnet.
Created application security groups for web and management.
Created two virtual machines and associated their network interfaces with the application security groups.
Tested the application security group network filtering.
To learn more about network security groups, seeNetwork security group overviewandManage a network security group.
Azure routes traffic between subnets by default. You might instead, choose to route traffic between subnets through a VM, serving as a firewall, for example.
To learn how to create a route table, advance to the next tutorial.
Create a route table
Feedback
Was this page helpful?
Additional resources