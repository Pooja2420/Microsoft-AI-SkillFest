Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
VectorDistance (NoSQL query)
Article
2024-11-19
4 contributors
In this article
APPLIES TO:NoSQL
Returns the similarity score between two specified vectors.
Syntax
VectorDistance(<vector_expr_1>, <vector_expr_2>, <bool_expr>, <obj_expr>)
VectorDistance(<vector_expr_1>, <vector_expr_2>, <bool_expr>, <obj_expr>)
Arguments
vector_expr_1
float32
vector_expr_2
float32
bool_expr
true
false
false
obj_expr
distanceFunction
dataType
searchListSizeMultiplier
Supported parameters for the optionalobj_expr
obj_expr
distanceFunction
dataType
float32
int8
uint8
float32
searchListSizeMultiplier
Supported metrics fordistanceFunctionare:
distanceFunction
cosine, which has values from-1(least similar) to+1(most similar).
cosine
-1
+1
dotproduct, which has values from-â(-inf) (least similar) to+â(+inf) (most similar).
dotproduct
-â
-inf
+â
+inf
euclidean, which has values from0(most similar) to+â(+inf) (least similar).
euclidean
0
+â
+inf
Return types
Returns a numeric expression that enumerates the similarity score between two expressions.
Examples
This first example shows a top 10 vector search query with only the required arguments. One property is projected, along with the score returned byVectorDistance. Then, we user anORDER BYclause to sortVectorDistancescores in order from most similar to least.
VectorDistance
ORDER BY
VectorDistance
SELECT TOP 10 c.name, VectorDistance(c.vector1, <query_vector>)
FROM c
ORDER BY VectorDistance(c.vector1, <query_vector>)
SELECT TOP 10 c.name, VectorDistance(c.vector1, <query_vector>)
FROM c
ORDER BY VectorDistance(c.vector1, <query_vector>)
This next example also includes optional arguments forVectorDistance
VectorDistance
SELECT TOP 10 c.name, VectorDistance(c.vector1, <query_vector>, true, {'distanceFunction':'cosine', 'dataType':'float32'})
FROM c
ORDER BY VectorDistance(c.vector1, <query_vector>, true, {'distanceFunction':'cosine', 'dataType':'float32'})
SELECT TOP 10 c.name, VectorDistance(c.vector1, <query_vector>, true, {'distanceFunction':'cosine', 'dataType':'float32'})
FROM c
ORDER BY VectorDistance(c.vector1, <query_vector>, true, {'distanceFunction':'cosine', 'dataType':'float32'})
Important
Always use aTOP Nclause in theSELECTstatement of a query. Otherwise the vector search will try to return many more results and the query will cost more RUs and have higher latency than necessary.
TOP N
SELECT
Remarks
This function requires enabling theAzure Cosmos DB NoSQL Vector Search feature.
This function benefits from avector index
Iffalseis given as the optionalbool_expr, then the vector index defined on the path is used, if one exists. If no index is defined on the vector path, then this function reverts to full scan and incurs higher RU charges and higher latency than if using a vector index.
false
bool_expr
WhenVectorDistanceis used in anORDER BYclause, no direction needs to be specified for theORDER BYas the results are always sorted in order of most similar (first) to least similar (last) based on the similarity metric used.
VectorDistance
ORDER BY
ORDER BY
The result is expressed as a similarity score.
Related content
System functions
Setup Azure Cosmos DB for NoSQL for vector search.
vector index
Feedback
Was this page helpful?
Additional resources