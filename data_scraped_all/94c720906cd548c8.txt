Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Xcode@5 - Xcode v5 task
Article
2025-03-28
3 contributors
In this article
Use this task to build, test, or archive an Xcode workspace on macOS, and optionally package an app.
Syntax
# Xcode v5
# Build, test, or archive an Xcode workspace on macOS. Optionally package an app.
- task: Xcode@5
  inputs:
    actions: 'build' # string. Required. Actions. Default: build.
    #configuration: '$(Configuration)' # string. Configuration. Default: $(Configuration).
    #sdk: '$(SDK)' # string. SDK. Default: $(SDK).
    #xcWorkspacePath: '**/*.xcodeproj/project.xcworkspace' # string. Workspace or project path. Default: **/*.xcodeproj/project.xcworkspace.
    #scheme: # string. Scheme. 
    #xcodeVersion: 'default' # '8' | '9' | '10' | '11' | '12' | '13' | 'default' | 'specifyPath'. Xcode version. Default: default.
    #xcodeDeveloperDir: # string. Optional. Use when xcodeVersion == specifyPath. Xcode developer path. 
  # Package options
    #packageApp: false # boolean. Create app package. Default: false.
    #archivePath: # string. Optional. Use when packageApp == true. Archive path. 
    #exportPath: 'output/$(SDK)/$(Configuration)' # string. Optional. Use when packageApp == true. Export path. Default: output/$(SDK)/$(Configuration).
    #exportOptions: 'auto' # 'auto' | 'plist' | 'specify'. Optional. Use when packageApp == true. Export options. Default: auto.
    #exportMethod: 'development' # string. Required when exportOptions == specify. Export method. Default: development.
    #exportTeamId: # string. Optional. Use when exportOptions == specify. Team ID. 
    #exportOptionsPlist: # string. Required when exportOptions == plist. Export options plist. 
    #exportArgs: # string. Optional. Use when packageApp == true. Export arguments. 
  # Signing & provisioning
    #signingOption: 'nosign' # 'nosign' | 'default' | 'manual' | 'auto'. Signing style. Default: nosign.
    #signingIdentity: # string. Optional. Use when signingOption = manual. Signing identity. 
    #provisioningProfileUuid: # string. Optional. Use when signingOption = manual. Provisioning profile UUID. 
    #provisioningProfileName: # string. Optional. Use when signingOption = manual. Provisioning profile name. 
    #teamId: # string. Optional. Use when signingOption = auto. Team ID. 
  # Devices & simulators
    #destinationPlatformOption: 'default' # 'default' | 'iOS' | 'tvOS' | 'macOS' | 'custom'. Destination platform. Default: default.
    #destinationPlatform: # string. Optional. Use when destinationPlatformOption == custom. Custom destination platform. 
    #destinationTypeOption: 'simulators' # 'simulators' | 'devices'. Optional. Use when destinationPlatformOption != default && destinationPlatformOption != macOS. Destination type. Default: simulators.
    #destinationSimulators: # string. Optional. Use when destinationPlatformOption != default && destinationPlatformOption != macOS && destinationTypeOption == simulators. Simulator. 
    #destinationDevices: # string. Optional. Use when destinationPlatformOption != default && destinationPlatformOption != macOS && destinationTypeOption == devices. Device. 
  # Advanced
    #args: # string. Arguments. 
    #workingDirectory: # string. Alias: cwd. Working directory. 
    #useXcpretty: true # boolean. Use xcpretty. Default: true.
    #xcprettyArgs: # string. Optional. Use when useXcpretty == true. Xcpretty arguments. 
    #publishJUnitResults: false # boolean. Publish test results to Azure Pipelines. Default: false.
    #testRunTitle: # string. Optional. Use when publishJUnitResults == true. Test run title.
# Xcode v5
# Build, test, or archive an Xcode workspace on macOS. Optionally package an app.
- task: Xcode@5
  inputs:
    actions: 'build' # string. Required. Actions. Default: build.
    #configuration: '$(Configuration)' # string. Configuration. Default: $(Configuration).
    #sdk: '$(SDK)' # string. SDK. Default: $(SDK).
    #xcWorkspacePath: '**/*.xcodeproj/project.xcworkspace' # string. Workspace or project path. Default: **/*.xcodeproj/project.xcworkspace.
    #scheme: # string. Scheme. 
    #xcodeVersion: 'default' # '8' | '9' | '10' | '11' | '12' | '13' | 'default' | 'specifyPath'. Xcode version. Default: default.
    #xcodeDeveloperDir: # string. Optional. Use when xcodeVersion == specifyPath. Xcode developer path. 
  # Package options
    #packageApp: false # boolean. Create app package. Default: false.
    #archivePath: # string. Optional. Use when packageApp == true. Archive path. 
    #exportPath: 'output/$(SDK)/$(Configuration)' # string. Optional. Use when packageApp == true. Export path. Default: output/$(SDK)/$(Configuration).
    #exportOptions: 'auto' # 'auto' | 'plist' | 'specify'. Optional. Use when packageApp == true. Export options. Default: auto.
    #exportMethod: 'development' # string. Required when exportOptions == specify. Export method. Default: development.
    #exportTeamId: # string. Optional. Use when exportOptions == specify. Team ID. 
    #exportOptionsPlist: # string. Required when exportOptions == plist. Export options plist. 
    #exportArgs: # string. Optional. Use when packageApp == true. Export arguments. 
  # Signing & provisioning
    #signingOption: 'nosign' # 'nosign' | 'default' | 'manual' | 'auto'. Signing style. Default: nosign.
    #signingIdentity: # string. Optional. Use when signingOption = manual. Signing identity. 
    #provisioningProfileUuid: # string. Optional. Use when signingOption = manual. Provisioning profile UUID. 
    #provisioningProfileName: # string. Optional. Use when signingOption = manual. Provisioning profile name. 
    #teamId: # string. Optional. Use when signingOption = auto. Team ID. 
  # Devices & simulators
    #destinationPlatformOption: 'default' # 'default' | 'iOS' | 'tvOS' | 'macOS' | 'custom'. Destination platform. Default: default.
    #destinationPlatform: # string. Optional. Use when destinationPlatformOption == custom. Custom destination platform. 
    #destinationTypeOption: 'simulators' # 'simulators' | 'devices'. Optional. Use when destinationPlatformOption != default && destinationPlatformOption != macOS. Destination type. Default: simulators.
    #destinationSimulators: # string. Optional. Use when destinationPlatformOption != default && destinationPlatformOption != macOS && destinationTypeOption == simulators. Simulator. 
    #destinationDevices: # string. Optional. Use when destinationPlatformOption != default && destinationPlatformOption != macOS && destinationTypeOption == devices. Device. 
  # Advanced
    #args: # string. Arguments. 
    #workingDirectory: # string. Alias: cwd. Working directory. 
    #useXcpretty: true # boolean. Use xcpretty. Default: true.
    #xcprettyArgs: # string. Optional. Use when useXcpretty == true. Xcpretty arguments. 
    #publishJUnitResults: false # boolean. Publish test results to Azure Pipelines. Default: false.
    #testRunTitle: # string. Optional. Use when publishJUnitResults == true. Test run title.
# Xcode v5
# Build, test, or archive an Xcode workspace on macOS. Optionally package an app.
- task: Xcode@5
  inputs:
    actions: 'build' # string. Required. Actions. Default: build.
    #configuration: '$(Configuration)' # string. Configuration. Default: $(Configuration).
    #sdk: '$(SDK)' # string. SDK. Default: $(SDK).
    #xcWorkspacePath: '**/*.xcodeproj/project.xcworkspace' # string. Workspace or project path. Default: **/*.xcodeproj/project.xcworkspace.
    #scheme: # string. Scheme. 
    #xcodeVersion: 'default' # '8' | '9' | '10' | '11' | 'default' | 'specifyPath'. Xcode version. Default: default.
    #xcodeDeveloperDir: # string. Optional. Use when xcodeVersion == specifyPath. Xcode developer path. 
  # Package options
    #packageApp: false # boolean. Create app package. Default: false.
    #archivePath: # string. Optional. Use when packageApp == true. Archive path. 
    #exportPath: 'output/$(SDK)/$(Configuration)' # string. Optional. Use when packageApp == true. Export path. Default: output/$(SDK)/$(Configuration).
    #exportOptions: 'auto' # 'auto' | 'plist' | 'specify'. Optional. Use when packageApp == true. Export options. Default: auto.
    #exportMethod: 'development' # string. Required when exportOptions == specify. Export method. Default: development.
    #exportTeamId: # string. Optional. Use when exportOptions == specify. Team ID. 
    #exportOptionsPlist: # string. Required when exportOptions == plist. Export options plist. 
    #exportArgs: # string. Optional. Use when packageApp == true. Export arguments. 
  # Signing & provisioning
    #signingOption: 'nosign' # 'nosign' | 'default' | 'manual' | 'auto'. Signing style. Default: nosign.
    #signingIdentity: # string. Optional. Use when signingOption = manual. Signing identity. 
    #provisioningProfileUuid: # string. Optional. Use when signingOption = manual. Provisioning profile UUID. 
    #provisioningProfileName: # string. Optional. Use when signingOption = manual. Provisioning profile name. 
    #teamId: # string. Optional. Use when signingOption = auto. Team ID. 
  # Devices & simulators
    #destinationPlatformOption: 'default' # 'default' | 'iOS' | 'tvOS' | 'macOS' | 'custom'. Destination platform. Default: default.
    #destinationPlatform: # string. Optional. Use when destinationPlatformOption == custom. Custom destination platform. 
    #destinationTypeOption: 'simulators' # 'simulators' | 'devices'. Optional. Use when destinationPlatformOption != default && destinationPlatformOption != macOS. Destination type. Default: simulators.
    #destinationSimulators: # string. Optional. Use when destinationPlatformOption != default && destinationPlatformOption != macOS && destinationTypeOption == simulators. Simulator. 
    #destinationDevices: # string. Optional. Use when destinationPlatformOption != default && destinationPlatformOption != macOS && destinationTypeOption == devices. Device. 
  # Advanced
    #args: # string. Arguments. 
    #workingDirectory: # string. Alias: cwd. Working directory. 
    #useXcpretty: true # boolean. Use xcpretty. Default: true.
    #xcprettyArgs: # string. Optional. Use when useXcpretty == true. Xcpretty arguments. 
    #publishJUnitResults: false # boolean. Publish test results to Azure Pipelines. Default: false.
    #testRunTitle: # string. Optional. Use when publishJUnitResults == true. Test run title.
# Xcode v5
# Build, test, or archive an Xcode workspace on macOS. Optionally package an app.
- task: Xcode@5
  inputs:
    actions: 'build' # string. Required. Actions. Default: build.
    #configuration: '$(Configuration)' # string. Configuration. Default: $(Configuration).
    #sdk: '$(SDK)' # string. SDK. Default: $(SDK).
    #xcWorkspacePath: '**/*.xcodeproj/project.xcworkspace' # string. Workspace or project path. Default: **/*.xcodeproj/project.xcworkspace.
    #scheme: # string. Scheme. 
    #xcodeVersion: 'default' # '8' | '9' | '10' | '11' | 'default' | 'specifyPath'. Xcode version. Default: default.
    #xcodeDeveloperDir: # string. Optional. Use when xcodeVersion == specifyPath. Xcode developer path. 
  # Package options
    #packageApp: false # boolean. Create app package. Default: false.
    #archivePath: # string. Optional. Use when packageApp == true. Archive path. 
    #exportPath: 'output/$(SDK)/$(Configuration)' # string. Optional. Use when packageApp == true. Export path. Default: output/$(SDK)/$(Configuration).
    #exportOptions: 'auto' # 'auto' | 'plist' | 'specify'. Optional. Use when packageApp == true. Export options. Default: auto.
    #exportMethod: 'development' # string. Required when exportOptions == specify. Export method. Default: development.
    #exportTeamId: # string. Optional. Use when exportOptions == specify. Team ID. 
    #exportOptionsPlist: # string. Required when exportOptions == plist. Export options plist. 
    #exportArgs: # string. Optional. Use when packageApp == true. Export arguments. 
  # Signing & provisioning
    #signingOption: 'nosign' # 'nosign' | 'default' | 'manual' | 'auto'. Signing style. Default: nosign.
    #signingIdentity: # string. Optional. Use when signingOption = manual. Signing identity. 
    #provisioningProfileUuid: # string. Optional. Use when signingOption = manual. Provisioning profile UUID. 
    #provisioningProfileName: # string. Optional. Use when signingOption = manual. Provisioning profile name. 
    #teamId: # string. Optional. Use when signingOption = auto. Team ID. 
  # Devices & simulators
    #destinationPlatformOption: 'default' # 'default' | 'iOS' | 'tvOS' | 'macOS' | 'custom'. Destination platform. Default: default.
    #destinationPlatform: # string. Optional. Use when destinationPlatformOption == custom. Custom destination platform. 
    #destinationTypeOption: 'simulators' # 'simulators' | 'devices'. Optional. Use when destinationPlatformOption != default && destinationPlatformOption != macOS. Destination type. Default: simulators.
    #destinationSimulators: # string. Optional. Use when destinationPlatformOption != default && destinationPlatformOption != macOS && destinationTypeOption == simulators. Simulator. 
    #destinationDevices: # string. Optional. Use when destinationPlatformOption != default && destinationPlatformOption != macOS && destinationTypeOption == devices. Device. 
  # Advanced
    #args: # string. Arguments. 
    #workingDirectory: # string. Alias: cwd. Working directory. 
    #useXcpretty: true # boolean. Use xcpretty. Default: true.
    #xcprettyArgs: # string. Optional. Use when useXcpretty == true. Xcpretty arguments. 
    #publishJUnitResults: false # boolean. Publish test results to Azure Pipelines. Default: false.
    #testRunTitle: # string. Optional. Use when publishJUnitResults == true. Test run title.
# Xcode v5
# Build, test, or archive an Xcode workspace on macOS. Optionally package an app.
- task: Xcode@5
  inputs:
    actions: 'build' # string. Required. Actions. Default: build.
    #configuration: '$(Configuration)' # string. Configuration. Default: $(Configuration).
    #sdk: '$(SDK)' # string. SDK. Default: $(SDK).
    #xcWorkspacePath: '**/*.xcodeproj/project.xcworkspace' # string. Workspace or project path. Default: **/*.xcodeproj/project.xcworkspace.
    #scheme: # string. Scheme. 
    #xcodeVersion: 'default' # '8' | '9' | '10' | '11' | 'default' | 'specifyPath'. Xcode version. Default: default.
    #xcodeDeveloperDir: # string. Optional. Use when xcodeVersion == specifyPath. Xcode developer path. 
  # Package options
    #packageApp: false # boolean. Create app package. Default: false.
    #archivePath: # string. Optional. Use when packageApp == true. Archive path. 
    #exportPath: 'output/$(SDK)/$(Configuration)' # string. Optional. Use when packageApp == true. Export path. Default: output/$(SDK)/$(Configuration).
    #exportOptions: 'auto' # 'auto' | 'plist' | 'specify'. Optional. Use when packageApp == true. Export options. Default: auto.
    #exportMethod: 'development' # string. Required when exportOptions == specify. Export method. Default: development.
    #exportTeamId: # string. Optional. Use when exportOptions == specify. Team ID. 
    #exportOptionsPlist: # string. Required when exportOptions == plist. Export options plist. 
    #exportArgs: # string. Optional. Use when packageApp == true. Export arguments. 
  # Signing & provisioning
    #signingOption: 'nosign' # 'nosign' | 'default' | 'manual' | 'auto'. Signing style. Default: nosign.
    #signingIdentity: # string. Optional. Use when signingOption = manual. Signing identity. 
    #provisioningProfileUuid: # string. Optional. Use when signingOption = manual. Provisioning profile UUID. 
    #provisioningProfileName: # string. Optional. Use when signingOption = manual. Provisioning profile name. 
    #teamId: # string. Optional. Use when signingOption = auto. Team ID. 
  # Devices & simulators
    #destinationPlatformOption: 'default' # 'default' | 'iOS' | 'tvOS' | 'macOS' | 'custom'. Destination platform. Default: default.
    #destinationPlatform: # string. Optional. Use when destinationPlatformOption == custom. Custom destination platform. 
    #destinationTypeOption: 'simulators' # 'simulators' | 'devices'. Optional. Use when destinationPlatformOption != default && destinationPlatformOption != macOS. Destination type. Default: simulators.
    #destinationSimulators: 'iPhone 7' # string. Optional. Use when destinationPlatformOption != default && destinationPlatformOption != macOS && destinationTypeOption == simulators. Simulator. Default: iPhone 7.
    #destinationDevices: # string. Optional. Use when destinationPlatformOption != default && destinationPlatformOption != macOS && destinationTypeOption == devices. Device. 
  # Advanced
    #args: # string. Arguments. 
    #workingDirectory: # string. Alias: cwd. Working directory. 
    #useXcpretty: true # boolean. Use xcpretty. Default: true.
    #publishJUnitResults: false # boolean. Publish test results to Azure Pipelines. Default: false.
# Xcode v5
# Build, test, or archive an Xcode workspace on macOS. Optionally package an app.
- task: Xcode@5
  inputs:
    actions: 'build' # string. Required. Actions. Default: build.
    #configuration: '$(Configuration)' # string. Configuration. Default: $(Configuration).
    #sdk: '$(SDK)' # string. SDK. Default: $(SDK).
    #xcWorkspacePath: '**/*.xcodeproj/project.xcworkspace' # string. Workspace or project path. Default: **/*.xcodeproj/project.xcworkspace.
    #scheme: # string. Scheme. 
    #xcodeVersion: 'default' # '8' | '9' | '10' | '11' | 'default' | 'specifyPath'. Xcode version. Default: default.
    #xcodeDeveloperDir: # string. Optional. Use when xcodeVersion == specifyPath. Xcode developer path. 
  # Package options
    #packageApp: false # boolean. Create app package. Default: false.
    #archivePath: # string. Optional. Use when packageApp == true. Archive path. 
    #exportPath: 'output/$(SDK)/$(Configuration)' # string. Optional. Use when packageApp == true. Export path. Default: output/$(SDK)/$(Configuration).
    #exportOptions: 'auto' # 'auto' | 'plist' | 'specify'. Optional. Use when packageApp == true. Export options. Default: auto.
    #exportMethod: 'development' # string. Required when exportOptions == specify. Export method. Default: development.
    #exportTeamId: # string. Optional. Use when exportOptions == specify. Team ID. 
    #exportOptionsPlist: # string. Required when exportOptions == plist. Export options plist. 
    #exportArgs: # string. Optional. Use when packageApp == true. Export arguments. 
  # Signing & provisioning
    #signingOption: 'nosign' # 'nosign' | 'default' | 'manual' | 'auto'. Signing style. Default: nosign.
    #signingIdentity: # string. Optional. Use when signingOption = manual. Signing identity. 
    #provisioningProfileUuid: # string. Optional. Use when signingOption = manual. Provisioning profile UUID. 
    #provisioningProfileName: # string. Optional. Use when signingOption = manual. Provisioning profile name. 
    #teamId: # string. Optional. Use when signingOption = auto. Team ID. 
  # Devices & simulators
    #destinationPlatformOption: 'default' # 'default' | 'iOS' | 'tvOS' | 'macOS' | 'custom'. Destination platform. Default: default.
    #destinationPlatform: # string. Optional. Use when destinationPlatformOption == custom. Custom destination platform. 
    #destinationTypeOption: 'simulators' # 'simulators' | 'devices'. Optional. Use when destinationPlatformOption != default && destinationPlatformOption != macOS. Destination type. Default: simulators.
    #destinationSimulators: 'iPhone 7' # string. Optional. Use when destinationPlatformOption != default && destinationPlatformOption != macOS && destinationTypeOption == simulators. Simulator. Default: iPhone 7.
    #destinationDevices: # string. Optional. Use when destinationPlatformOption != default && destinationPlatformOption != macOS && destinationTypeOption == devices. Device. 
  # Advanced
    #args: # string. Arguments. 
    #workingDirectory: # string. Alias: cwd. Working directory. 
    #useXcpretty: true # boolean. Use xcpretty. Default: true.
    #publishJUnitResults: false # boolean. Publish test results to Azure Pipelines. Default: false.
Inputs
actions-Actionsstring. Required. Default value:build.
actions
string
build
Specifies a space-delimited list of actions. Some valid options arebuild,clean,test,analyze, andarchive. For example,clean buildperforms a clean build. SeeApple: Building from the command line with Xcode FAQ.
build
clean
test
analyze
archive
clean build
configuration-Configurationstring. Default value:$(Configuration).
configuration
string
$(Configuration)
Specifies the Xcode project or workspace configuration to build. When using a variable, specify a value (for example,Release) on theVariablestab.
Release
sdk-SDKstring. Default value:$(SDK).
sdk
string
$(SDK)
Specifies an SDK to use when building the Xcode project or workspace. From the macOS Terminal application, runxcodebuild -showsdksto display the valid list of SDKs. When using a variable, specify a value (for example,iphonesimulator) on theVariablestab.
xcodebuild -showsdks
iphonesimulator
xcWorkspacePath-Workspace or project pathstring. Default value:**/*.xcodeproj/project.xcworkspace.
xcWorkspacePath
string
**/*.xcodeproj/project.xcworkspace
Optional. Specifies a relative path from the root of the repository to the Xcode workspace or project. For example,MyApp/MyApp.xcworkspaceorMyApp/MyApp.xcodeproj. Wildcards can be used. Learn more aboutfile matching patterns.
MyApp/MyApp.xcworkspace
MyApp/MyApp.xcodeproj
scheme-Schemestring.
scheme
string
Optional. Specifies an Xcode scheme name.Must be a shared scheme(shared checkbox underManaged Schemesin Xcode). If you do not specify a scheme, and the specified workspace has a single shared scheme, the workspace scheme will be used.
xcodeVersion-Xcode versionstring. Allowed values:8(Xcode 8),9(Xcode 9),10(Xcode 10),11(Xcode 11),12(Xcode 12),13(Xcode 13),default,specifyPath(Specify path). Default value:default.
xcodeVersion
string
8
9
10
11
12
13
default
specifyPath
default
Specifies the target version of Xcode. SelectDefaultto use the default version of Xcode on the agent machine. Specifying a version number (for example,Xcode 9) relies on the version's location to be set by environment variables on the agent machine (for example,XCODE_9_DEVELOPER_DIR=/Applications/Xcode_9.0.0.app/Contents/Developer). SelectSpecify pathto provide a specific path to the Xcode developer directory.
Default
Xcode 9
XCODE_9_DEVELOPER_DIR=/Applications/Xcode_9.0.0.app/Contents/Developer
Specify path
xcodeVersion-Xcode versionstring. Allowed values:8(Xcode 8),9(Xcode 9),10(Xcode 10),11(Xcode 11),default,specifyPath(Specify path). Default value:default.
xcodeVersion
string
8
9
10
11
default
specifyPath
default
Specifies the target version of Xcode. SelectDefaultto use the default version of Xcode on the agent machine. Specifying a version number (for example,Xcode 9) relies on the version's location to be set by environment variables on the agent machine (for example,XCODE_9_DEVELOPER_DIR=/Applications/Xcode_9.0.0.app/Contents/Developer). SelectSpecify pathto provide a specific path to the Xcode developer directory.
Default
Xcode 9
XCODE_9_DEVELOPER_DIR=/Applications/Xcode_9.0.0.app/Contents/Developer
Specify path
xcodeDeveloperDir-Xcode developer pathstring. Optional. Use whenxcodeVersion == specifyPath.
xcodeDeveloperDir
string
xcodeVersion == specifyPath
Specifies a path to a specific Xcode developer directory (for example,/Applications/Xcode_9.0.0.app/Contents/Developer). This input is useful when multiple versions of Xcode are installed on the agent machine.
/Applications/Xcode_9.0.0.app/Contents/Developer
packageApp-Create app packageboolean. Default value:false.
packageApp
boolean
false
Specifies whether an IPA app package file is generated as a part of the build.
archivePath-Archive pathstring. Optional. Use whenpackageApp == true.
archivePath
string
packageApp == true
Specifies a directory where created archives are placed.
exportPath-Export pathstring. Optional. Use whenpackageApp == true. Default value:output/$(SDK)/$(Configuration).
exportPath
string
packageApp == true
output/$(SDK)/$(Configuration)
Specifies the destination for the product exported from the archive.
exportOptions-Export optionsstring. Optional. Use whenpackageApp == true. Allowed values:auto(Automatic),plist,specify. Default value:auto.
exportOptions
string
packageApp == true
auto
plist
specify
auto
Specifies options for exporting the archive. When the default value ofAutomaticis selected, the export method is automatically detected from the archive. SelectPlistto specify a plist file containing export options. SelectSpecifyto provide a specificExport methodandTeam ID.
Automatic
Plist
Specify
exportMethod-Export methodstring. Required whenexportOptions == specify. Default value:development.
exportMethod
string
exportOptions == specify
development
Specifies the method that Xcode uses to export the archive. For example:app-store,package,ad-hoc,enterprise, ordevelopment.
app-store
package
ad-hoc
enterprise
development
exportTeamId-Team IDstring. Optional. Use whenexportOptions == specify.
exportTeamId
string
exportOptions == specify
Specifies the Apple Developer Portal 10-character team ID to use during the export.
exportOptionsPlist-Export options pliststring. Required whenexportOptions == plist.
exportOptionsPlist
string
exportOptions == plist
Specifies the path to the plist file that contains options to use during the export.
exportArgs-Export argumentsstring. Optional. Use whenpackageApp == true.
exportArgs
string
packageApp == true
Specifies additional command line arguments used during the export.
signingOption-Signing stylestring. Allowed values:nosign(Do not code sign),default(Project defaults),manual(Manual signing),auto(Automatic signing). Default value:nosign.
signingOption
string
nosign
default
manual
auto
nosign
Specifies the method of signing the build. SelectDo not code signto disable signing. SelectProject defaultsto use only the project's signing configuration. SelectManual signingto force manual signing and optionally specify a signing identity and provisioning profile. SelectAutomatic signingto force automatic signing and optionally specify a development team ID. If your project requires signing, use theInstall Apple...tasks to install certificates and provisioning profiles prior to the Xcode build.
Do not code sign
Project defaults
Manual signing
Automatic signing
signingIdentity-Signing identitystring. Optional. Use whensigningOption = manual.
signingIdentity
string
signingOption = manual
Specifies a signing identity override with which to sign the build. Unlocking the default keychain on the agent machine may be required. If no value is entered, the Xcode project's setting is used.
provisioningProfileUuid-Provisioning profile UUIDstring. Optional. Use whensigningOption = manual.
provisioningProfileUuid
string
signingOption = manual
Specifies the UUID of an installed provisioning profile used for the build. Use separate build tasks with different schemes or targets to specify provisioning profiles by target in a single workspace (iOS, tvOS, watchOS).
provisioningProfileName-Provisioning profile namestring. Optional. Use whensigningOption = manual.
provisioningProfileName
string
signingOption = manual
Specifies the name of an installed provisioning profile used for the build. If specified, this takes precedence over the provisioning profile UUID. Use separate build tasks with different schemes or targets to specify provisioning profiles by target in a single workspace (iOS, tvOS, watchOS).
teamId-Team IDstring. Optional. Use whensigningOption = auto.
teamId
string
signingOption = auto
Required if you are a member of multiple development teams.Specifies the 10-character development team ID.
destinationPlatformOption-Destination platformstring. Allowed values:default,iOS(iOS and watchOS),tvOS,macOS,custom. Default value:default.
destinationPlatformOption
string
default
iOS
tvOS
macOS
custom
default
Specifies the destination device's platform used for UI testing when the generic build device isn't valid. ChooseCustomto specify a platform not included in this list. WhenDefaultis selected, no simulators or devices are targeted.
Custom
Default
destinationPlatform-Custom destination platformstring. Optional. Use whendestinationPlatformOption == custom.
destinationPlatform
string
destinationPlatformOption == custom
Specifies a destination device's platform used for UI testing when the generic build device isn't valid. ChooseCustomto specify a platform not included in the list. WhenDefaultis selected, no simulators nor devices are targeted.
Custom
Default
destinationTypeOption-Destination typestring. Optional. Use whendestinationPlatformOption != default && destinationPlatformOption != macOS. Allowed values:simulators(Simulator),devices(Connected Device). Default value:simulators.
destinationTypeOption
string
destinationPlatformOption != default && destinationPlatformOption != macOS
simulators
devices
simulators
Specifies the destination type to use for UI testing. Devices must be connected to the Mac performing the build via a cable or network connection. SeeDevices and Simulatorsin Xcode for more information.
destinationSimulators-Simulatorstring. Optional. Use whendestinationPlatformOption != default && destinationPlatformOption != macOS && destinationTypeOption == simulators.
destinationSimulators
string
destinationPlatformOption != default && destinationPlatformOption != macOS && destinationTypeOption == simulators
Specifies an Xcode simulator name used for UI testing. For example,iPhone X(iOS and watchOS) orApple TV 4K(tvOS). An optional target OS version can be specified in the formatOS=<versionNumber>, such asiPhone X,OS=11.1. See thislist of simulators installed on theHosted macOSagentfor more information.
iPhone X
Apple TV 4K
OS=<versionNumber>
iPhone X,OS=11.1
destinationSimulators-Simulatorstring. Optional. Use whendestinationPlatformOption != default && destinationPlatformOption != macOS && destinationTypeOption == simulators. Default value:iPhone 7.
destinationSimulators
string
destinationPlatformOption != default && destinationPlatformOption != macOS && destinationTypeOption == simulators
iPhone 7
Specifies an Xcode simulator name used for UI testing. For example,iPhone X(iOS and watchOS) orApple TV 4K(tvOS). An optional target OS version can be specified in the formatOS=<versionNumber>, such asiPhone X,OS=11.1. See thislist of simulators installed on theHosted macOSagentfor more information.
iPhone X
Apple TV 4K
OS=<versionNumber>
iPhone X,OS=11.1
destinationDevices-Devicestring. Optional. Use whendestinationPlatformOption != default && destinationPlatformOption != macOS && destinationTypeOption == devices.
destinationDevices
string
destinationPlatformOption != default && destinationPlatformOption != macOS && destinationTypeOption == devices
Specifies the name of the device used for UI testing, such asRaisa's iPad. Only one device is currently supported. Note that Apple does not allow apostrophes (') in device names. Instead, right single quotation marks (') can be used.
Raisa's iPad
'
'
args-Argumentsstring.
args
string
Optional. Specifies additional command line arguments with which to build. This input is useful for specifying-targetor-projectarguments instead of a workspace/project and scheme. SeeApple: Building from the command line with Xcode FAQ.
-target
-project
workingDirectory-Working directoryInput alias:cwd.string.
workingDirectory
cwd
string
Optional. Specifies the working directory in which to run the build. If no value is entered, the root of the repository is used.
useXcpretty-Use xcprettyboolean. Default value:true.
useXcpretty
boolean
true
Specifies whether to usexcprettyto formatxcodebuildoutput.xcprettymust be installed on the agent machine (It is preinstalled on Azure Pipelines hosted build agents). Ifxcprettyis not installed, rawxcodebuildoutput is shown. Seexcprettyfor more information.
xcpretty
xcodebuild
xcpretty
xcpretty
xcodebuild
xcprettyArgs-Xcpretty argumentsstring. Optional. Use whenuseXcpretty == true.
xcprettyArgs
string
useXcpretty == true
Ifxcprettyis enabled, this input specifies arguments forxcpretty. Seea list of xcpretty arguments on GitHub.
xcpretty
xcpretty
publishJUnitResults-Publish test results to Azure Pipelinesboolean. Default value:false.
publishJUnitResults
boolean
false
Specifies whether to publish JUnit test results to Azure Pipelines. This requiresxcprettyto be enabled to generate JUnit test results.
xcpretty
testRunTitle-Test run titlestring. Optional. Use whenpublishJUnitResults == true.
testRunTitle
string
publishJUnitResults == true
IfxcprettyandpublishJUnitResultsare enabled, you can specify the test run title.
xcpretty
publishJUnitResults
Task control options
All tasks have control options in addition to their task inputs. For more information, seeControl options and common task properties.
Output variables
None.
Remarks
Use this task to build, test, or archive an Xcode workspace on macOS, and optionally package an app.
Using multiple provisioning profiles
Currently there's no support of multiple provisioning profiles for the Xcode task (for example for iOS App Extension).
Examples
Build your Xcode app
Requirements
Feedback
Was this page helpful?
Additional resources