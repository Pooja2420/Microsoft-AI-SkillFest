Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Get resource changes
Article
2025-03-20
3 contributors
In this article
Resources change through the course of daily use, reconfiguration, and even redeployment. Most change is by design, but sometimes it isn't. You can:
Find when changes were detected on an Azure Resource Manager property.
View property change details.
Query changes at scale across your subscriptions, management group, or tenant.
In this article, you learn:
What the payload JSON looks like.
How to query resource changes through Resource Graph using either the CLI, PowerShell, or the Azure portal.
Query examples and best practices for querying resource changes.
Change analysis usesChange Actorfunctionality:changedBy: Who initiated a change in your resource, like an app ID or authorized person's email address.clientType: Which client made the change, likeAzure portal.operation: Whichoperationwas called, likeMicrosoft.Compute/virtualmachines/write. Theoperationfield in the resource changes data represents theAzure role-based access control permissionsused to initiate the change.
changedBy: Who initiated a change in your resource, like an app ID or authorized person's email address.
changedBy
clientType: Which client made the change, likeAzure portal.
clientType
operation: Whichoperationwas called, likeMicrosoft.Compute/virtualmachines/write. Theoperationfield in the resource changes data represents theAzure role-based access control permissionsused to initiate the change.
operation
Microsoft.Compute/virtualmachines/write
operation
Prerequisites
To enable Azure PowerShell to query Azure Resource Graph,add the module.
To enable Azure CLI to query Azure Resource Graph,add the extension.
Understand change event properties
When a resource is created, updated, or deleted, a new change resource (Microsoft.Resources/changes) is created to extend the modified resource and represent the changed properties. Change records should be available in less than five minutes. The following example JSON payload demonstrates the change resource properties:
Microsoft.Resources/changes
{
  "targetResourceId": "/subscriptions/11111111-1111-1111-1111-111111111111/resourceGroups/myResourceGroup/providers/microsoft.compute/virtualmachines/myVM",
  "targetResourceType": "microsoft.compute/virtualmachines",
  "changeType": "Update",
  "changeAttributes": {
    "previousResourceSnapshotId": "11111111111111111111_22222222-3333-aaaa-bbbb-444444444444_5555555555_6666666666",
    "newResourceSnapshotId": "33333333333333333333_44444444-5555-ffff-gggg-666666666666_7777777777_8888888888",
    "correlationId": "11111111-1111-1111-1111-111111111111",
    "changedByType": "User",
    "changesCount": 2,
    "clientType": "Azure Portal",
    "changedBy": "john@contoso.com",
    "operation": "microsoft.compute/virtualmachines/write",
    "timestamp": "2024-06-12T13:26:17.347+00:00"
  },
  "changes": {
    "properties.provisioningState": {
      "newValue": "Succeeded",
      "previousValue": "Updating",
      "isTruncated": "true"
    },
    "tags.key1": {
      "newValue": "NewTagValue",
      "previousValue": "null",
    }
  }
}
{
  "targetResourceId": "/subscriptions/11111111-1111-1111-1111-111111111111/resourceGroups/myResourceGroup/providers/microsoft.compute/virtualmachines/myVM",
  "targetResourceType": "microsoft.compute/virtualmachines",
  "changeType": "Update",
  "changeAttributes": {
    "previousResourceSnapshotId": "11111111111111111111_22222222-3333-aaaa-bbbb-444444444444_5555555555_6666666666",
    "newResourceSnapshotId": "33333333333333333333_44444444-5555-ffff-gggg-666666666666_7777777777_8888888888",
    "correlationId": "11111111-1111-1111-1111-111111111111",
    "changedByType": "User",
    "changesCount": 2,
    "clientType": "Azure Portal",
    "changedBy": "john@contoso.com",
    "operation": "microsoft.compute/virtualmachines/write",
    "timestamp": "2024-06-12T13:26:17.347+00:00"
  },
  "changes": {
    "properties.provisioningState": {
      "newValue": "Succeeded",
      "previousValue": "Updating",
      "isTruncated": "true"
    },
    "tags.key1": {
      "newValue": "NewTagValue",
      "previousValue": "null",
    }
  }
}
See the full reference guide for change resource properties.
Theoperationfield in the resource changes data represents theAzure role-based access control permissionsused to initiate the change. This field does not always describe the actual operation performed but rather the permission (authorization action) that was used. For example,Microsoft.Compute/virtualmachines/writecorresponds to the permission for the operationPUT/providers/Microsoft.Compute/virtualmachines.
operation
Microsoft.Compute/virtualmachines/write
PUT/providers/Microsoft.Compute/virtualmachines
For understanding the type of change that was captured in the resource (i.e. Create, Delete, Update), we recommend that you use thechangeTypefield rather than theoperationfield, which instead represents theAzure role-based access control permissionsused to initiate the change.
changeType
operation
Note
Snapshots are not currently supported for deleted resources.
For records withchangeType: Delete, thechangesCountis shown as 0 because the resource itself gets deleted, and there are no properties remaining. For records withchangeType: Create, thechangesCountis also shown as 0 because every resource property gets modified during resource creation, and logging every property change would cause too much noise.
changeType
changesCount
changeType
changesCount
When new properties are introduced, they will not be shown as changes. For example, this can occur when a new API version introduces new properties. Similarly, if new keys are added to tags without any values, these changes will not be shown.
Run a query
Try out a tenant-based Resource Graph query of theresourcechangestable. The query returns the first five most recent Azure resource changes with the change time, change type, target resource ID, target resource type, and change details of each change record.
resourcechanges
Azure CLI
PowerShell
Portal
# Login first with az login if not using Cloud Shell

# Run Azure Resource Graph query
az graph query -q 'resourcechanges | project properties.changeAttributes.timestamp, properties.changeType, properties.targetResourceId, properties.targetResourceType, properties.changes | limit 5'
# Login first with az login if not using Cloud Shell

# Run Azure Resource Graph query
az graph query -q 'resourcechanges | project properties.changeAttributes.timestamp, properties.changeType, properties.targetResourceId, properties.targetResourceType, properties.changes | limit 5'
# Login first with Connect-AzAccount if not using Cloud Shell

# Run Azure Resource Graph query
Search-AzGraph -Query 'resourcechanges | project properties.changeAttributes.timestamp, properties.changeType, properties.targetResourceId, properties.targetResourceType, properties.changes | limit 5'
# Login first with Connect-AzAccount if not using Cloud Shell

# Run Azure Resource Graph query
Search-AzGraph -Query 'resourcechanges | project properties.changeAttributes.timestamp, properties.changeType, properties.targetResourceId, properties.targetResourceType, properties.changes | limit 5'
Open theAzure portal.
Open theAzure portal.
SelectAll servicesin the left pane. Search for and selectResource Graph Explorer.
SelectAll servicesin the left pane. Search for and selectResource Graph Explorer.

In theQuery 1portion of the window, enter the following query.resourcechanges
| project properties.changeAttributes.timestamp, properties.changeType, properties.targetResourceId, properties.targetResourceType, properties.changes
| limit 5
In theQuery 1portion of the window, enter the following query.
resourcechanges
| project properties.changeAttributes.timestamp, properties.changeType, properties.targetResourceId, properties.targetResourceType, properties.changes
| limit 5
resourcechanges
| project properties.changeAttributes.timestamp, properties.changeType, properties.targetResourceId, properties.targetResourceType, properties.changes
| limit 5
SelectRun query.
SelectRun query.

Review the query response in theResultstab.
Review the query response in theResultstab.
Select theMessagestab to see details about the query, including the count of results and duration of the query. Any errors are displayed under this tab.
Select theMessagestab to see details about the query, including the count of results and duration of the query. Any errors are displayed under this tab.

You can update this query to specify a more user-friendly column name for thetimestampproperty.
Azure CLI
PowerShell
Portal
# Run Azure Resource Graph query with 'extend'
az graph query -q 'resourcechanges | extend changeTime=todatetime(properties.changeAttributes.timestamp) | project changeTime, properties.changeType, properties.targetResourceId, properties.targetResourceType, properties.changes | limit 5'
# Run Azure Resource Graph query with 'extend'
az graph query -q 'resourcechanges | extend changeTime=todatetime(properties.changeAttributes.timestamp) | project changeTime, properties.changeType, properties.targetResourceId, properties.targetResourceType, properties.changes | limit 5'
# Run Azure Resource Graph query with 'extend' to define a user-friendly name for properties.changeAttributes.timestamp
Search-AzGraph -Query 'resourcechanges | extend changeTime=todatetime(properties.changeAttributes.timestamp) | project changeTime, properties.changeType, properties.targetResourceId, properties.targetResourceType, properties.changes | limit 5'
# Run Azure Resource Graph query with 'extend' to define a user-friendly name for properties.changeAttributes.timestamp
Search-AzGraph -Query 'resourcechanges | extend changeTime=todatetime(properties.changeAttributes.timestamp) | project changeTime, properties.changeType, properties.targetResourceId, properties.targetResourceType, properties.changes | limit 5'
resourcechanges
| extend changeTime=todatetime(properties.changeAttributes.timestamp)
| project changeTime, properties.changeType, properties.targetResourceId, properties.targetResourceType, properties.changes
| limit 5
resourcechanges
| extend changeTime=todatetime(properties.changeAttributes.timestamp)
| project changeTime, properties.changeType, properties.targetResourceId, properties.targetResourceType, properties.changes
| limit 5
Then selectRun query.
To limit query results to the most recent changes, update the query toorder bythe user-definedchangeTimeproperty.
order by
changeTime
Azure CLI
PowerShell
Portal
# Run Azure Resource Graph query with 'order by'
az graph query -q 'resourcechanges | extend changeTime=todatetime(properties.changeAttributes.timestamp) | project changeTime, properties.changeType, properties.targetResourceId, properties.targetResourceType, properties.changes | order by changeTime desc | limit 5'
# Run Azure Resource Graph query with 'order by'
az graph query -q 'resourcechanges | extend changeTime=todatetime(properties.changeAttributes.timestamp) | project changeTime, properties.changeType, properties.targetResourceId, properties.targetResourceType, properties.changes | order by changeTime desc | limit 5'
# Run Azure Resource Graph query with 'order by'
Search-AzGraph -Query 'resourcechanges | extend changeTime=todatetime(properties.changeAttributes.timestamp) | project changeTime, properties.changeType, properties.targetResourceId, properties.targetResourceType, properties.changes | order by changeTime desc | limit 5'
# Run Azure Resource Graph query with 'order by'
Search-AzGraph -Query 'resourcechanges | extend changeTime=todatetime(properties.changeAttributes.timestamp) | project changeTime, properties.changeType, properties.targetResourceId, properties.targetResourceType, properties.changes | order by changeTime desc | limit 5'
resourcechanges
| extend changeTime=todatetime(properties.changeAttributes.timestamp)
| project changeTime, properties.changeType, properties.targetResourceId, properties.targetResourceType, properties.changes
| order by changeTime desc
| limit 5
resourcechanges
| extend changeTime=todatetime(properties.changeAttributes.timestamp)
| project changeTime, properties.changeType, properties.targetResourceId, properties.targetResourceType, properties.changes
| order by changeTime desc
| limit 5
Then selectRun query.
You can also query bymanagement groupor subscription with the-ManagementGroupor-Subscriptionparameters, respectively.
-ManagementGroup
-Subscription
Note
If the query does not return results from a subscription you already have access to, then theSearch-AzGraphPowerShell cmdlet defaults to subscriptions in the default context.
Search-AzGraph
Resource Graph Explorer also provides a clean interface for converting the results of some queries into a chart that can be pinned to an Azure dashboard.
Query resource changes
With Resource Graph, you can query either theresourcechanges,resourcecontainerchanges, orhealthresourcechangestables to filter or sort by any of the change resource properties. The following examples query theresourcechangestable, but can also be applied to theresourcecontainerchangesorhealthresourcechangestable.
resourcechanges
resourcecontainerchanges
healthresourcechanges
resourcechanges
resourcecontainerchanges
healthresourcechanges
Note
Learn more about thehealthresourcechangesdata inthe Project Flash documentation.
healthresourcechanges
Examples
Before querying and analyzing changes in your resources, review the following best practices.
Query for change events during a specific window of time and evaluate the change details.This query works best during incident management to understandpotentiallyrelated changes.
This query works best during incident management to understandpotentiallyrelated changes.
Keep an up-to-date Configuration Management Database (CMDB).Instead of refreshing all resources and their full property sets on a scheduled frequency, you only receive their changes.
Instead of refreshing all resources and their full property sets on a scheduled frequency, you only receive their changes.
Understand which other properties were changed when a resource changescompliance state.Evaluation of these extra properties can provide insights into other properties that might need to be managed via an Azure Policy definition.
Evaluation of these extra properties can provide insights into other properties that might need to be managed via an Azure Policy definition.
The order of query commands is important. In the following examples, theorder bymust come before thelimitcommand.Theorder bycommand orders the query results by the change time.Thelimitcommand then limits the ordered results to ensure that you get the five most recent results.
order by
limit
Theorder bycommand orders the query results by the change time.
order by
Thelimitcommand then limits the ordered results to ensure that you get the five most recent results.
limit
What doesUnknownmean?â¯Unknown is displayed when the change happened on a client that's unrecognized. Clients are recognized based on the user agent and client application ID associated with the original change request.
Unknown is displayed when the change happened on a client that's unrecognized. Clients are recognized based on the user agent and client application ID associated with the original change request.
What doesSystemmean?System is displayed as achangedByvalue when a background change occurred that wasn't correlated with any direct user action.
System is displayed as achangedByvalue when a background change occurred that wasn't correlated with any direct user action.
changedBy
resourcechanges
| extend changeTime = todatetime(properties.changeAttributes.timestamp), targetResourceId = tostring(properties.targetResourceId),
changeType = tostring(properties.changeType), correlationId = properties.changeAttributes.correlationId, 
changedProperties = properties.changes, changeCount = properties.changeAttributes.changesCount
| where changeTime > ago(1d)
| order by changeTime desc
| project changeTime, targetResourceId, changeType, correlationId, changeCount, changedProperties
resourcechanges
| extend changeTime = todatetime(properties.changeAttributes.timestamp), targetResourceId = tostring(properties.targetResourceId),
changeType = tostring(properties.changeType), correlationId = properties.changeAttributes.correlationId, 
changedProperties = properties.changes, changeCount = properties.changeAttributes.changesCount
| where changeTime > ago(1d)
| order by changeTime desc
| project changeTime, targetResourceId, changeType, correlationId, changeCount, changedProperties
resourcechanges
| where resourceGroup == "myResourceGroup"
| extend changeTime = todatetime(properties.changeAttributes.timestamp), targetResourceId = tostring(properties.targetResourceId),
  changeType = tostring(properties.changeType), correlationId = properties.changeAttributes.correlationId
| where changeType == "Delete"
| order by changeTime desc
| project changeTime, resourceGroup, targetResourceId, changeType, correlationId
resourcechanges
| where resourceGroup == "myResourceGroup"
| extend changeTime = todatetime(properties.changeAttributes.timestamp), targetResourceId = tostring(properties.targetResourceId),
  changeType = tostring(properties.changeType), correlationId = properties.changeAttributes.correlationId
| where changeType == "Delete"
| order by changeTime desc
| project changeTime, resourceGroup, targetResourceId, changeType, correlationId
resourcechanges
| extend provisioningStateChange = properties.changes["properties.provisioningState"], changeTime = todatetime(properties.changeAttributes.timestamp), targetResourceId = tostring(properties.targetResourceId), changeType = tostring(properties.changeType)
| where isnotempty(provisioningStateChange)and provisioningStateChange.newValue == "Succeeded"
| order by changeTime desc
| project changeTime, targetResourceId, changeType, provisioningStateChange.previousValue, provisioningStateChange.newValue
resourcechanges
| extend provisioningStateChange = properties.changes["properties.provisioningState"], changeTime = todatetime(properties.changeAttributes.timestamp), targetResourceId = tostring(properties.targetResourceId), changeType = tostring(properties.changeType)
| where isnotempty(provisioningStateChange)and provisioningStateChange.newValue == "Succeeded"
| order by changeTime desc
| project changeTime, targetResourceId, changeType, provisioningStateChange.previousValue, provisioningStateChange.newValue
resourcechangesâ¯
|â¯extendâ¯changeTimeâ¯=â¯todatetime(properties.changeAttributes.timestamp),â¯
  targetResourceIdâ¯=â¯tostring(properties.targetResourceId),â¯
  changeTypeâ¯=â¯tostring(properties.changeType),â¯changedByâ¯=â¯tostring(properties.changeAttributes.changedBy),â¯
  changedByTypeâ¯=â¯properties.changeAttributes.changedByType,â¯
  clientTypeâ¯=â¯tostring(properties.changeAttributes.clientType)â¯
|â¯whereâ¯changeTimeâ¯>â¯ago(7d)â¯
|â¯projectâ¯changeType,â¯changedBy,â¯changedByType,â¯clientTypeâ¯
|â¯summarizeâ¯count()â¯byâ¯changedBy,â¯changeType,â¯clientTypeâ¯
|â¯orderâ¯byâ¯count_â¯descâ¯
resourcechangesâ¯
|â¯extendâ¯changeTimeâ¯=â¯todatetime(properties.changeAttributes.timestamp),â¯
  targetResourceIdâ¯=â¯tostring(properties.targetResourceId),â¯
  changeTypeâ¯=â¯tostring(properties.changeType),â¯changedByâ¯=â¯tostring(properties.changeAttributes.changedBy),â¯
  changedByTypeâ¯=â¯properties.changeAttributes.changedByType,â¯
  clientTypeâ¯=â¯tostring(properties.changeAttributes.clientType)â¯
|â¯whereâ¯changeTimeâ¯>â¯ago(7d)â¯
|â¯projectâ¯changeType,â¯changedBy,â¯changedByType,â¯clientTypeâ¯
|â¯summarizeâ¯count()â¯byâ¯changedBy,â¯changeType,â¯clientTypeâ¯
|â¯orderâ¯byâ¯count_â¯descâ¯
resourcechanges
| extendâ¯vmSizeâ¯=â¯properties.changes["properties.hardwareProfile.vmSize"],â¯changeTimeâ¯=â¯todatetime(properties.changeAttributes.timestamp),â¯targetResourceIdâ¯=â¯tostring(properties.targetResourceId),â¯changeTypeâ¯=â¯tostring(properties.changeType)â¯
|â¯whereâ¯isnotempty(vmSize)â¯
|â¯orderâ¯byâ¯changeTimeâ¯descâ¯
|â¯projectâ¯changeTime,â¯targetResourceId,â¯changeType,â¯properties.changes,â¯previousSizeâ¯=â¯vmSize.previousValue,â¯newSizeâ¯=â¯vmSize.newValue
resourcechanges
| extendâ¯vmSizeâ¯=â¯properties.changes["properties.hardwareProfile.vmSize"],â¯changeTimeâ¯=â¯todatetime(properties.changeAttributes.timestamp),â¯targetResourceIdâ¯=â¯tostring(properties.targetResourceId),â¯changeTypeâ¯=â¯tostring(properties.changeType)â¯
|â¯whereâ¯isnotempty(vmSize)â¯
|â¯orderâ¯byâ¯changeTimeâ¯descâ¯
|â¯projectâ¯changeTime,â¯targetResourceId,â¯changeType,â¯properties.changes,â¯previousSizeâ¯=â¯vmSize.previousValue,â¯newSizeâ¯=â¯vmSize.newValue
resourcechangesâ¯â¯
| extendâ¯changeTypeâ¯=â¯tostring(properties.changeType),â¯changeTimeâ¯=â¯todatetime(properties.changeAttributes.timestamp),â¯targetResourceType=tostring(properties.targetResourceType)â¯â¯
|â¯summarizeâ¯count()â¯byâ¯changeType,â¯subscriptionIdâ¯
|â¯joinâ¯(resourcecontainersâ¯|â¯whereâ¯type=='microsoft.resources/subscriptions'â¯|â¯projectâ¯SubscriptionName=name,â¯subscriptionId)â¯onâ¯subscriptionIdâ¯
|â¯project-awayâ¯subscriptionId,â¯subscriptionId1
|â¯orderâ¯byâ¯count_â¯descâ¯â¯
resourcechangesâ¯â¯
| extendâ¯changeTypeâ¯=â¯tostring(properties.changeType),â¯changeTimeâ¯=â¯todatetime(properties.changeAttributes.timestamp),â¯targetResourceType=tostring(properties.targetResourceType)â¯â¯
|â¯summarizeâ¯count()â¯byâ¯changeType,â¯subscriptionIdâ¯
|â¯joinâ¯(resourcecontainersâ¯|â¯whereâ¯type=='microsoft.resources/subscriptions'â¯|â¯projectâ¯SubscriptionName=name,â¯subscriptionId)â¯onâ¯subscriptionIdâ¯
|â¯project-awayâ¯subscriptionId,â¯subscriptionId1
|â¯orderâ¯byâ¯count_â¯descâ¯â¯
resourcechangesâ¯
|extendâ¯targetResourceIdâ¯=â¯tostring(properties.targetResourceId),â¯changeTypeâ¯=â¯tostring(properties.changeType),â¯createTimeâ¯=â¯todatetime(properties.changeAttributes.timestamp)â¯
| whereâ¯createTimeâ¯> ago(7d) andâ¯changeTypeâ¯== "Create" or changeTypeâ¯== "Update" or changeTypeâ¯== "Delete"
| projectâ¯â¯targetResourceId,â¯changeType,â¯createTimeâ¯
| join ( resources | extend targetResourceId=id) on targetResourceId
| where tags ['Environment'] =~ 'prod'â¯
| order byâ¯createTimeâ¯descâ¯
| projectâ¯createTime, id,â¯resourceGroup, type
resourcechangesâ¯
|extendâ¯targetResourceIdâ¯=â¯tostring(properties.targetResourceId),â¯changeTypeâ¯=â¯tostring(properties.changeType),â¯createTimeâ¯=â¯todatetime(properties.changeAttributes.timestamp)â¯
| whereâ¯createTimeâ¯> ago(7d) andâ¯changeTypeâ¯== "Create" or changeTypeâ¯== "Update" or changeTypeâ¯== "Delete"
| projectâ¯â¯targetResourceId,â¯changeType,â¯createTimeâ¯
| join ( resources | extend targetResourceId=id) on targetResourceId
| where tags ['Environment'] =~ 'prod'â¯
| order byâ¯createTimeâ¯descâ¯
| projectâ¯createTime, id,â¯resourceGroup, type
Next steps
View resource changes in the portal
Related links
Starter Resource Graph query samples
Guidance for throttled requests
Azure Automation's change tracking
Azure Policy's machine configuration for VMs
Azure Resource Graph queries by category
Feedback
Was this page helpful?
Additional resources