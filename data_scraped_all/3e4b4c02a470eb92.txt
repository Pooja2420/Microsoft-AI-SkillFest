Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
lookup operator
Article
2025-01-20
5 contributors
In this article
Applies to: âMicrosoft FabricâAzure Data ExplorerâAzure MonitorâMicrosoft Sentinel
Extends the columns of a fact table with values looked-up in a dimension table.
For example, the following query results in a table that extends theFactTable($left) with data from theDimensionTable($right) by performing a lookup. The lookup matches each pair (CommonColumn,Col1) fromFactTablewith each pair (CommonColumn,Col2) in theDimensionTable. For the differences between fact and dimension tables, seefact and dimension tables.
FactTable
$left
DimensionTable
$right
CommonColumn
Col1
FactTable
CommonColumn
Col2
DimensionTable
FactTable | lookup kind=leftouter (DimensionTable) on CommonColumn, $left.Col1 == $right.Col2
FactTable | lookup kind=leftouter (DimensionTable) on CommonColumn, $left.Col1 == $right.Col2
Thelookupoperator performs an operation similar to thejoin operatorwith the following differences:
lookup
The result doesn't repeat columns from the$righttable that are the basis
for the join operation.
$right
Only two kinds of lookup are supported,leftouterandinner, withleftouterbeing the default.
leftouter
inner
leftouter
In terms of performance, the system by default assumes that the$lefttable
is the larger (facts) table, and the$righttable is the smaller (dimensions)
table. This is exactly opposite to the assumption used by thejoinoperator.
$left
$right
join
Thelookupoperator automatically broadcasts the$righttable to the$lefttable (essentially, behaves as ifhint.broadcastwas specified). This limits the size of the$righttable.
lookup
$right
$left
hint.broadcast
$right
Note
If the right side of the lookup is larger than several tens of MBs, the query will fail.
You can run the following query to estimate the size of the right side in bytes:
rightSide
| summarize sum(estimate_data_size(*))
rightSide
| summarize sum(estimate_data_size(*))
Syntax
LeftTable|lookup[kind=(leftouter|inner)](RightTable)onAttributes
|
lookup
kind
=
leftouter
inner
(
)
on
Learn more aboutsyntax conventions.
Parameters
string
$left
string
$right
string
and
kind
string
leftouter
inner
lookup
Rules
where
==
$left.
==
$right.
where
$left.
==
$right.
Note
In case of 'equality by value', the column namesmustbe qualified with the applicable owner table denoted by$leftand$rightnotations.
$left
$right
Returns
A table with:
A column for every column in each of the two tables, including the matching keys.
The columns of the right side are automatically renamed if there are name conflicts.
A row for every match between the input tables. A match is a row selected from one table that has the same value for all theonfields as a row in the other table.
on
TheAttributes(lookup keys) appear only once in the output table.
Ifkindis unspecified orkind=leftouter, then in addition to the inner matches, there's a row for every row on the left (and/or right), even if it has no match. In that case, the unmatched output cells contain nulls.
kind
kind=leftouter
Ifkind=inner, then there's a row in the output for every combination of matching rows from left and right.
kind=inner
Example
The following example shows how to perform a left outer join between theFactTableandDimTable, based on matching values in thePersonalandFamilycolumns.
FactTable
DimTable
Personal
Family
Run the query
let FactTable=datatable(Row:string,Personal:string,Family:string) [
  "1", "Rowan",   "Murphy",
  "2", "Ellis",   "Turner",
  "3", "Ellis",   "Turner",
  "4", "Maya",  "Robinson",
  "5", "Quinn",    "Campbell"
];
let DimTable=datatable(Personal:string,Family:string,Alias:string) [
  "Rowan",  "Murphy",   "rowanm",
  "Ellis",  "Turner", "ellist",
  "Maya", "Robinson", "mayar",
  "Quinn",   "Campbell",    "quinnc"
];
FactTable
| lookup kind=leftouter DimTable on Personal, Family
let FactTable=datatable(Row:string,Personal:string,Family:string) [
  "1", "Rowan",   "Murphy",
  "2", "Ellis",   "Turner",
  "3", "Ellis",   "Turner",
  "4", "Maya",  "Robinson",
  "5", "Quinn",    "Campbell"
];
let DimTable=datatable(Personal:string,Family:string,Alias:string) [
  "Rowan",  "Murphy",   "rowanm",
  "Ellis",  "Turner", "ellist",
  "Maya", "Robinson", "mayar",
  "Quinn",   "Campbell",    "quinnc"
];
FactTable
| lookup kind=leftouter DimTable on Personal, Family
Output
Related content
Broadcast join
leftouter join
inner join
join operator
Feedback
Was this page helpful?
Additional resources