Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Create and deploy virtual machines in an availability set using Azure PowerShell
Article
2021-03-08
1 contributor
In this article
Applies to:âï¸ Windows VMs
In this tutorial, you learn how to increase the availability and reliability of your Virtual Machines (VMs) using Availability Sets. Availability Sets make sure the VMs you deploy on Azure are distributed across multiple, isolated hardware nodes, in a cluster.
In this tutorial, you learn how to:
Create an availability set
Create a VM in an availability set
Check available VM sizes
Check Azure Advisor
Launch Azure Cloud Shell
The Azure Cloud Shell is a free interactive shell that you can use to run the steps in this article. It has common Azure tools preinstalled and configured to use with your account.
To open the Cloud Shell, just selectTry itfrom the upper right corner of a code block. You can also launch Cloud Shell in a separate browser tab by going tohttps://shell.azure.com/powershell. SelectCopyto copy the blocks of code, paste it into the Cloud Shell, and press enter to run it.
Create an availability set
The hardware in a location is divided in to multiple update domains and fault domains. Anupdate domainis a group of VMs and underlying physical hardware that can be rebooted at the same time. VMs in the samefault domainshare common storage as well as a common power source and network switch.
You can create an availability set usingNew-AzAvailabilitySet. In this example, the number of both update and fault domains is2and the availability set is namedmyAvailabilitySet.
Create a resource group.
New-AzResourceGroup `
   -Name myResourceGroupAvailability `
   -Location EastUS
New-AzResourceGroup `
   -Name myResourceGroupAvailability `
   -Location EastUS
Create a managed availability set usingNew-AzAvailabilitySetwith the-sku alignedparameter.
-sku aligned
New-AzAvailabilitySet `
   -Location "EastUS" `
   -Name "myAvailabilitySet" `
   -ResourceGroupName "myResourceGroupAvailability" `
   -Sku aligned `
   -PlatformFaultDomainCount 2 `
   -PlatformUpdateDomainCount 2
New-AzAvailabilitySet `
   -Location "EastUS" `
   -Name "myAvailabilitySet" `
   -ResourceGroupName "myResourceGroupAvailability" `
   -Sku aligned `
   -PlatformFaultDomainCount 2 `
   -PlatformUpdateDomainCount 2
Create VMs inside an availability set
VMs must be created within the availability set to make sure they're correctly distributed across the hardware. You can't add an existing VM to an availability set after it's created.
When you create a VM withNew-AzVM, you use the-AvailabilitySetNameparameter to specify the name of the availability set.
-AvailabilitySetName
First, set an administrator username and password for the VM withGet-Credential:
$cred = Get-Credential
$cred = Get-Credential
Now create two VMs withNew-AzVMin the availability set.
for ($i=1; $i -le 2; $i++)
{
    New-AzVm `
        -ResourceGroupName "myResourceGroupAvailability" `
        -Name "myVM$i" `
        -Location "East US" `
        -VirtualNetworkName "myVnet" `
        -SubnetName "mySubnet" `
        -SecurityGroupName "myNetworkSecurityGroup" `
        -PublicIpAddressName "myPublicIpAddress$i" `
        -AvailabilitySetName "myAvailabilitySet" `
        -Credential $cred
}
for ($i=1; $i -le 2; $i++)
{
    New-AzVm `
        -ResourceGroupName "myResourceGroupAvailability" `
        -Name "myVM$i" `
        -Location "East US" `
        -VirtualNetworkName "myVnet" `
        -SubnetName "mySubnet" `
        -SecurityGroupName "myNetworkSecurityGroup" `
        -PublicIpAddressName "myPublicIpAddress$i" `
        -AvailabilitySetName "myAvailabilitySet" `
        -Credential $cred
}
It takes a few minutes to create and configure both VMs. When finished, you have two virtual machines distributed across the underlying hardware.
If you look at the availability set in the portal by going toResource Groups>myResourceGroupAvailability>myAvailabilitySet, you should see how the VMs are distributed across the two fault and update domains.

Note
Under certain circumstances, 2 VMs in the same AvailabilitySet could share the same FaultDomain. This can be confirmed by going into your availability set and checking the Fault Domain column. This can be caused by the following sequence of events while deploying the VMs:
The 1st VM is Deployed
The 1st VM is Stopped/Deallocated
The 2nd VM is Deployed.
Under these circumstances, the OS Disk of the 2nd VM might be created on the same Fault Domain as the 1st VM, and so the 2nd VM will also land on the same FaultDomain. To avoid this issue, it's recommended to not stop/deallocate the VMs between deployments.
Check for available VM sizes
When you create a VM inside a availability set, you need to know what VM sizes are available on the hardware. UseGet-AzVMSizecommand to get all available sizes for virtual machines that you can deploy in the availability set.
Get-AzVMSize `
   -ResourceGroupName "myResourceGroupAvailability" `
   -AvailabilitySetName "myAvailabilitySet"
Get-AzVMSize `
   -ResourceGroupName "myResourceGroupAvailability" `
   -AvailabilitySetName "myAvailabilitySet"
Check Azure Advisor
You can also use Azure Advisor to get more information on how to improve the availability of your VMs. Azure Advisor analyzes your configuration and usage telemetry, then recommends solutions that can help you improve the cost effectiveness, performance, availability, and security of your Azure resources.
Sign in to theAzure portal, selectAll services, and typeAdvisor. The Advisor dashboard shows personalized recommendations for the selected subscription. For more information, seeGet started with Azure Advisor.
Next steps
In this tutorial, you learned how to:
Create an availability set
Create a VM in an availability set
Check available VM sizes
Check Azure Advisor
Advance to the next tutorial to learn about virtual machine scale sets.
Create a VM scale set
Additional resources