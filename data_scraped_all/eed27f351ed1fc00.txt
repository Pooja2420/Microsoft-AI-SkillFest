Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Microsoft.DocumentDB databaseAccounts
Article
2024-12-09
4 contributors
In this article
Latest
2024-12-01-preview
2024-11-15
2024-09-01-preview
2024-08-15
2024-05-15
2024-05-15-preview
2024-02-15-preview
2023-11-15
2023-11-15-preview
2023-09-15
2023-09-15-preview
2023-04-15
2023-03-15
2023-03-15-preview
2023-03-01-preview
2022-11-15
2022-11-15-preview
2022-08-15
2022-08-15-preview
2022-05-15
2022-05-15-preview
2022-02-15-preview
2021-11-15-preview
2021-10-15
2021-10-15-preview
2021-07-01-preview
2021-06-15
2021-05-15
2021-04-15
2021-04-01-preview
2021-03-15
2021-03-01-preview
2021-01-15
2020-09-01
2020-06-01-preview
2020-04-01
2020-03-01
2019-12-12
2019-08-01
2016-03-31
2016-03-19
2015-11-06
2015-04-08
2015-04-01
Bicep resource definition
The databaseAccounts resource type can be deployed with operations that target:
Resource groups- Seeresource group deployment commands
For a list of changed properties in each API version, seechange log.
Resource format
To create a Microsoft.DocumentDB/databaseAccounts resource, add the following Bicep to your template.
resource symbolicname 'Microsoft.DocumentDB/databaseAccounts@2024-12-01-preview' = {
  identity: {
    type: 'string'
    userAssignedIdentities: {
      {customized property}: {}
    }
  }
  kind: 'string'
  location: 'string'
  name: 'string'
  properties: {
    analyticalStorageConfiguration: {
      schemaType: 'string'
    }
    apiProperties: {
      serverVersion: 'string'
    }
    backupPolicy: {
      migrationState: {
        startTime: 'string'
        status: 'string'
        targetType: 'string'
      }
      type: 'string'
      // For remaining properties, see BackupPolicy objects
    }
    capabilities: [
      {
        name: 'string'
      }
    ]
    capacity: {
      totalThroughputLimit: int
    }
    capacityMode: 'string'
    connectorOffer: 'string'
    consistencyPolicy: {
      defaultConsistencyLevel: 'string'
      maxIntervalInSeconds: int
      maxStalenessPrefix: int
    }
    cors: [
      {
        allowedHeaders: 'string'
        allowedMethods: 'string'
        allowedOrigins: 'string'
        exposedHeaders: 'string'
        maxAgeInSeconds: int
      }
    ]
    createMode: 'string'
    customerManagedKeyStatus: 'string'
    databaseAccountOfferType: 'Standard'
    defaultIdentity: 'string'
    defaultPriorityLevel: 'string'
    diagnosticLogSettings: {
      enableFullTextQuery: 'string'
    }
    disableKeyBasedMetadataWriteAccess: bool
    disableLocalAuth: bool
    enableAnalyticalStorage: bool
    enableAutomaticFailover: bool
    enableBurstCapacity: bool
    enableCassandraConnector: bool
    enableFreeTier: bool
    enableMaterializedViews: bool
    enableMultipleWriteLocations: bool
    enablePartitionMerge: bool
    enablePerRegionPerPartitionAutoscale: bool
    enablePriorityBasedExecution: bool
    ipRules: [
      {
        ipAddressOrRange: 'string'
      }
    ]
    isVirtualNetworkFilterEnabled: bool
    keyVaultKeyUri: 'string'
    locations: [
      {
        failoverPriority: int
        isZoneRedundant: bool
        locationName: 'string'
      }
    ]
    minimalTlsVersion: 'string'
    networkAclBypass: 'string'
    networkAclBypassResourceIds: [
      'string'
    ]
    publicNetworkAccess: 'string'
    restoreParameters: {
      databasesToRestore: [
        {
          collectionNames: [
            'string'
          ]
          databaseName: 'string'
        }
      ]
      gremlinDatabasesToRestore: [
        {
          databaseName: 'string'
          graphNames: [
            'string'
          ]
        }
      ]
      restoreMode: 'string'
      restoreSource: 'string'
      restoreTimestampInUtc: 'string'
      restoreWithTtlDisabled: bool
      sourceBackupLocation: 'string'
      tablesToRestore: [
        'string'
      ]
    }
    virtualNetworkRules: [
      {
        id: 'string'
        ignoreMissingVNetServiceEndpoint: bool
      }
    ]
  }
  tags: {
    {customized property}: 'string'
  }
}
resource symbolicname 'Microsoft.DocumentDB/databaseAccounts@2024-12-01-preview' = {
  identity: {
    type: 'string'
    userAssignedIdentities: {
      {customized property}: {}
    }
  }
  kind: 'string'
  location: 'string'
  name: 'string'
  properties: {
    analyticalStorageConfiguration: {
      schemaType: 'string'
    }
    apiProperties: {
      serverVersion: 'string'
    }
    backupPolicy: {
      migrationState: {
        startTime: 'string'
        status: 'string'
        targetType: 'string'
      }
      type: 'string'
      // For remaining properties, see BackupPolicy objects
    }
    capabilities: [
      {
        name: 'string'
      }
    ]
    capacity: {
      totalThroughputLimit: int
    }
    capacityMode: 'string'
    connectorOffer: 'string'
    consistencyPolicy: {
      defaultConsistencyLevel: 'string'
      maxIntervalInSeconds: int
      maxStalenessPrefix: int
    }
    cors: [
      {
        allowedHeaders: 'string'
        allowedMethods: 'string'
        allowedOrigins: 'string'
        exposedHeaders: 'string'
        maxAgeInSeconds: int
      }
    ]
    createMode: 'string'
    customerManagedKeyStatus: 'string'
    databaseAccountOfferType: 'Standard'
    defaultIdentity: 'string'
    defaultPriorityLevel: 'string'
    diagnosticLogSettings: {
      enableFullTextQuery: 'string'
    }
    disableKeyBasedMetadataWriteAccess: bool
    disableLocalAuth: bool
    enableAnalyticalStorage: bool
    enableAutomaticFailover: bool
    enableBurstCapacity: bool
    enableCassandraConnector: bool
    enableFreeTier: bool
    enableMaterializedViews: bool
    enableMultipleWriteLocations: bool
    enablePartitionMerge: bool
    enablePerRegionPerPartitionAutoscale: bool
    enablePriorityBasedExecution: bool
    ipRules: [
      {
        ipAddressOrRange: 'string'
      }
    ]
    isVirtualNetworkFilterEnabled: bool
    keyVaultKeyUri: 'string'
    locations: [
      {
        failoverPriority: int
        isZoneRedundant: bool
        locationName: 'string'
      }
    ]
    minimalTlsVersion: 'string'
    networkAclBypass: 'string'
    networkAclBypassResourceIds: [
      'string'
    ]
    publicNetworkAccess: 'string'
    restoreParameters: {
      databasesToRestore: [
        {
          collectionNames: [
            'string'
          ]
          databaseName: 'string'
        }
      ]
      gremlinDatabasesToRestore: [
        {
          databaseName: 'string'
          graphNames: [
            'string'
          ]
        }
      ]
      restoreMode: 'string'
      restoreSource: 'string'
      restoreTimestampInUtc: 'string'
      restoreWithTtlDisabled: bool
      sourceBackupLocation: 'string'
      tablesToRestore: [
        'string'
      ]
    }
    virtualNetworkRules: [
      {
        id: 'string'
        ignoreMissingVNetServiceEndpoint: bool
      }
    ]
  }
  tags: {
    {customized property}: 'string'
  }
}
BackupPolicy objects
Set thetypeproperty to specify the type of object.
ForContinuous, use:
{
  continuousModeProperties: {
    tier: 'string'
  }
  type: 'Continuous'
}
{
  continuousModeProperties: {
    tier: 'string'
  }
  type: 'Continuous'
}
ForPeriodic, use:
{
  periodicModeProperties: {
    backupIntervalInMinutes: int
    backupRetentionIntervalInHours: int
    backupStorageRedundancy: 'string'
  }
  type: 'Periodic'
}
{
  periodicModeProperties: {
    backupIntervalInMinutes: int
    backupRetentionIntervalInHours: int
    backupStorageRedundancy: 'string'
  }
  type: 'Periodic'
}
Property Values
AnalyticalStorageConfiguration
ApiProperties
BackupPolicy
BackupPolicyMigrationState
Capability
Capacity
Components1Jq1T4ISchemasManagedserviceidentityPropertiesUserassignedidentitiesAdditionalproperties
ConsistencyPolicy
ContinuousModeBackupPolicy
ContinuousModeProperties
CorsPolicy
DatabaseAccountCreateUpdatePropertiesOrDatabaseAccountGetProperties
DatabaseRestoreResource
DiagnosticLogSettings
GremlinDatabaseRestoreResource
IpAddressOrRange
Location
ManagedServiceIdentity
ManagedServiceIdentityUserAssignedIdentities
Microsoft.DocumentDB/databaseAccounts
^[a-z0-9]+(-[a-z0-9]+)*
PeriodicModeBackupPolicy
PeriodicModeProperties
RestoreParameters
Tags
VirtualNetworkRule
Usage Examples
Azure Verified Modules
The followingAzure Verified Modulescan be used to deploy this resource type.
Azure Quickstart Samples
The followingAzure Quickstart templatescontain Bicep samples for deploying this resource type.
ARM template resource definition
The databaseAccounts resource type can be deployed with operations that target:
Resource groups- Seeresource group deployment commands
For a list of changed properties in each API version, seechange log.
Resource format
To create a Microsoft.DocumentDB/databaseAccounts resource, add the following JSON to your template.
{
  "type": "Microsoft.DocumentDB/databaseAccounts",
  "apiVersion": "2024-12-01-preview",
  "name": "string",
  "identity": {
    "type": "string",
    "userAssignedIdentities": {
      "{customized property}": {
      }
    }
  },
  "kind": "string",
  "location": "string",
  "properties": {
    "analyticalStorageConfiguration": {
      "schemaType": "string"
    },
    "apiProperties": {
      "serverVersion": "string"
    },
    "backupPolicy": {
      "migrationState": {
        "startTime": "string",
        "status": "string",
        "targetType": "string"
      },
      "type": "string"
      // For remaining properties, see BackupPolicy objects
    },
    "capabilities": [
      {
        "name": "string"
      }
    ],
    "capacity": {
      "totalThroughputLimit": "int"
    },
    "capacityMode": "string",
    "connectorOffer": "string",
    "consistencyPolicy": {
      "defaultConsistencyLevel": "string",
      "maxIntervalInSeconds": "int",
      "maxStalenessPrefix": "int"
    },
    "cors": [
      {
        "allowedHeaders": "string",
        "allowedMethods": "string",
        "allowedOrigins": "string",
        "exposedHeaders": "string",
        "maxAgeInSeconds": "int"
      }
    ],
    "createMode": "string",
    "customerManagedKeyStatus": "string",
    "databaseAccountOfferType": "Standard",
    "defaultIdentity": "string",
    "defaultPriorityLevel": "string",
    "diagnosticLogSettings": {
      "enableFullTextQuery": "string"
    },
    "disableKeyBasedMetadataWriteAccess": "bool",
    "disableLocalAuth": "bool",
    "enableAnalyticalStorage": "bool",
    "enableAutomaticFailover": "bool",
    "enableBurstCapacity": "bool",
    "enableCassandraConnector": "bool",
    "enableFreeTier": "bool",
    "enableMaterializedViews": "bool",
    "enableMultipleWriteLocations": "bool",
    "enablePartitionMerge": "bool",
    "enablePerRegionPerPartitionAutoscale": "bool",
    "enablePriorityBasedExecution": "bool",
    "ipRules": [
      {
        "ipAddressOrRange": "string"
      }
    ],
    "isVirtualNetworkFilterEnabled": "bool",
    "keyVaultKeyUri": "string",
    "locations": [
      {
        "failoverPriority": "int",
        "isZoneRedundant": "bool",
        "locationName": "string"
      }
    ],
    "minimalTlsVersion": "string",
    "networkAclBypass": "string",
    "networkAclBypassResourceIds": [ "string" ],
    "publicNetworkAccess": "string",
    "restoreParameters": {
      "databasesToRestore": [
        {
          "collectionNames": [ "string" ],
          "databaseName": "string"
        }
      ],
      "gremlinDatabasesToRestore": [
        {
          "databaseName": "string",
          "graphNames": [ "string" ]
        }
      ],
      "restoreMode": "string",
      "restoreSource": "string",
      "restoreTimestampInUtc": "string",
      "restoreWithTtlDisabled": "bool",
      "sourceBackupLocation": "string",
      "tablesToRestore": [ "string" ]
    },
    "virtualNetworkRules": [
      {
        "id": "string",
        "ignoreMissingVNetServiceEndpoint": "bool"
      }
    ]
  },
  "tags": {
    "{customized property}": "string"
  }
}
{
  "type": "Microsoft.DocumentDB/databaseAccounts",
  "apiVersion": "2024-12-01-preview",
  "name": "string",
  "identity": {
    "type": "string",
    "userAssignedIdentities": {
      "{customized property}": {
      }
    }
  },
  "kind": "string",
  "location": "string",
  "properties": {
    "analyticalStorageConfiguration": {
      "schemaType": "string"
    },
    "apiProperties": {
      "serverVersion": "string"
    },
    "backupPolicy": {
      "migrationState": {
        "startTime": "string",
        "status": "string",
        "targetType": "string"
      },
      "type": "string"
      // For remaining properties, see BackupPolicy objects
    },
    "capabilities": [
      {
        "name": "string"
      }
    ],
    "capacity": {
      "totalThroughputLimit": "int"
    },
    "capacityMode": "string",
    "connectorOffer": "string",
    "consistencyPolicy": {
      "defaultConsistencyLevel": "string",
      "maxIntervalInSeconds": "int",
      "maxStalenessPrefix": "int"
    },
    "cors": [
      {
        "allowedHeaders": "string",
        "allowedMethods": "string",
        "allowedOrigins": "string",
        "exposedHeaders": "string",
        "maxAgeInSeconds": "int"
      }
    ],
    "createMode": "string",
    "customerManagedKeyStatus": "string",
    "databaseAccountOfferType": "Standard",
    "defaultIdentity": "string",
    "defaultPriorityLevel": "string",
    "diagnosticLogSettings": {
      "enableFullTextQuery": "string"
    },
    "disableKeyBasedMetadataWriteAccess": "bool",
    "disableLocalAuth": "bool",
    "enableAnalyticalStorage": "bool",
    "enableAutomaticFailover": "bool",
    "enableBurstCapacity": "bool",
    "enableCassandraConnector": "bool",
    "enableFreeTier": "bool",
    "enableMaterializedViews": "bool",
    "enableMultipleWriteLocations": "bool",
    "enablePartitionMerge": "bool",
    "enablePerRegionPerPartitionAutoscale": "bool",
    "enablePriorityBasedExecution": "bool",
    "ipRules": [
      {
        "ipAddressOrRange": "string"
      }
    ],
    "isVirtualNetworkFilterEnabled": "bool",
    "keyVaultKeyUri": "string",
    "locations": [
      {
        "failoverPriority": "int",
        "isZoneRedundant": "bool",
        "locationName": "string"
      }
    ],
    "minimalTlsVersion": "string",
    "networkAclBypass": "string",
    "networkAclBypassResourceIds": [ "string" ],
    "publicNetworkAccess": "string",
    "restoreParameters": {
      "databasesToRestore": [
        {
          "collectionNames": [ "string" ],
          "databaseName": "string"
        }
      ],
      "gremlinDatabasesToRestore": [
        {
          "databaseName": "string",
          "graphNames": [ "string" ]
        }
      ],
      "restoreMode": "string",
      "restoreSource": "string",
      "restoreTimestampInUtc": "string",
      "restoreWithTtlDisabled": "bool",
      "sourceBackupLocation": "string",
      "tablesToRestore": [ "string" ]
    },
    "virtualNetworkRules": [
      {
        "id": "string",
        "ignoreMissingVNetServiceEndpoint": "bool"
      }
    ]
  },
  "tags": {
    "{customized property}": "string"
  }
}
BackupPolicy objects
Set thetypeproperty to specify the type of object.
ForContinuous, use:
{
  "continuousModeProperties": {
    "tier": "string"
  },
  "type": "Continuous"
}
{
  "continuousModeProperties": {
    "tier": "string"
  },
  "type": "Continuous"
}
ForPeriodic, use:
{
  "periodicModeProperties": {
    "backupIntervalInMinutes": "int",
    "backupRetentionIntervalInHours": "int",
    "backupStorageRedundancy": "string"
  },
  "type": "Periodic"
}
{
  "periodicModeProperties": {
    "backupIntervalInMinutes": "int",
    "backupRetentionIntervalInHours": "int",
    "backupStorageRedundancy": "string"
  },
  "type": "Periodic"
}
Property Values
AnalyticalStorageConfiguration
ApiProperties
BackupPolicy
BackupPolicyMigrationState
Capability
Capacity
Components1Jq1T4ISchemasManagedserviceidentityPropertiesUserassignedidentitiesAdditionalproperties
ConsistencyPolicy
ContinuousModeBackupPolicy
ContinuousModeProperties
CorsPolicy
DatabaseAccountCreateUpdatePropertiesOrDatabaseAccountGetProperties
DatabaseRestoreResource
DiagnosticLogSettings
GremlinDatabaseRestoreResource
IpAddressOrRange
Location
ManagedServiceIdentity
ManagedServiceIdentityUserAssignedIdentities
Microsoft.DocumentDB/databaseAccounts
^[a-z0-9]+(-[a-z0-9]+)*
PeriodicModeBackupPolicy
PeriodicModeProperties
RestoreParameters
Tags
VirtualNetworkRule
Usage Examples
Azure Quickstart Templates
The followingAzure Quickstart templatesdeploy this resource type.
Terraform (AzAPI provider) resource definition
The databaseAccounts resource type can be deployed with operations that target:
Resource groups
For a list of changed properties in each API version, seechange log.
Resource format
To create a Microsoft.DocumentDB/databaseAccounts resource, add the following Terraform to your template.
resource "azapi_resource" "symbolicname" {
  type = "Microsoft.DocumentDB/databaseAccounts@2024-12-01-preview"
  name = "string"
  identity = {
    type = "string"
    userAssignedIdentities = {
      {customized property} = {
      }
    }
  }
  location = "string"
  tags = {
    {customized property} = "string"
  }
  body = {
    kind = "string"
    properties = {
      analyticalStorageConfiguration = {
        schemaType = "string"
      }
      apiProperties = {
        serverVersion = "string"
      }
      backupPolicy = {
        migrationState = {
          startTime = "string"
          status = "string"
          targetType = "string"
        }
        type = "string"
        // For remaining properties, see BackupPolicy objects
      }
      capabilities = [
        {
          name = "string"
        }
      ]
      capacity = {
        totalThroughputLimit = int
      }
      capacityMode = "string"
      connectorOffer = "string"
      consistencyPolicy = {
        defaultConsistencyLevel = "string"
        maxIntervalInSeconds = int
        maxStalenessPrefix = int
      }
      cors = [
        {
          allowedHeaders = "string"
          allowedMethods = "string"
          allowedOrigins = "string"
          exposedHeaders = "string"
          maxAgeInSeconds = int
        }
      ]
      createMode = "string"
      customerManagedKeyStatus = "string"
      databaseAccountOfferType = "Standard"
      defaultIdentity = "string"
      defaultPriorityLevel = "string"
      diagnosticLogSettings = {
        enableFullTextQuery = "string"
      }
      disableKeyBasedMetadataWriteAccess = bool
      disableLocalAuth = bool
      enableAnalyticalStorage = bool
      enableAutomaticFailover = bool
      enableBurstCapacity = bool
      enableCassandraConnector = bool
      enableFreeTier = bool
      enableMaterializedViews = bool
      enableMultipleWriteLocations = bool
      enablePartitionMerge = bool
      enablePerRegionPerPartitionAutoscale = bool
      enablePriorityBasedExecution = bool
      ipRules = [
        {
          ipAddressOrRange = "string"
        }
      ]
      isVirtualNetworkFilterEnabled = bool
      keyVaultKeyUri = "string"
      locations = [
        {
          failoverPriority = int
          isZoneRedundant = bool
          locationName = "string"
        }
      ]
      minimalTlsVersion = "string"
      networkAclBypass = "string"
      networkAclBypassResourceIds = [
        "string"
      ]
      publicNetworkAccess = "string"
      restoreParameters = {
        databasesToRestore = [
          {
            collectionNames = [
              "string"
            ]
            databaseName = "string"
          }
        ]
        gremlinDatabasesToRestore = [
          {
            databaseName = "string"
            graphNames = [
              "string"
            ]
          }
        ]
        restoreMode = "string"
        restoreSource = "string"
        restoreTimestampInUtc = "string"
        restoreWithTtlDisabled = bool
        sourceBackupLocation = "string"
        tablesToRestore = [
          "string"
        ]
      }
      virtualNetworkRules = [
        {
          id = "string"
          ignoreMissingVNetServiceEndpoint = bool
        }
      ]
    }
  }
}
resource "azapi_resource" "symbolicname" {
  type = "Microsoft.DocumentDB/databaseAccounts@2024-12-01-preview"
  name = "string"
  identity = {
    type = "string"
    userAssignedIdentities = {
      {customized property} = {
      }
    }
  }
  location = "string"
  tags = {
    {customized property} = "string"
  }
  body = {
    kind = "string"
    properties = {
      analyticalStorageConfiguration = {
        schemaType = "string"
      }
      apiProperties = {
        serverVersion = "string"
      }
      backupPolicy = {
        migrationState = {
          startTime = "string"
          status = "string"
          targetType = "string"
        }
        type = "string"
        // For remaining properties, see BackupPolicy objects
      }
      capabilities = [
        {
          name = "string"
        }
      ]
      capacity = {
        totalThroughputLimit = int
      }
      capacityMode = "string"
      connectorOffer = "string"
      consistencyPolicy = {
        defaultConsistencyLevel = "string"
        maxIntervalInSeconds = int
        maxStalenessPrefix = int
      }
      cors = [
        {
          allowedHeaders = "string"
          allowedMethods = "string"
          allowedOrigins = "string"
          exposedHeaders = "string"
          maxAgeInSeconds = int
        }
      ]
      createMode = "string"
      customerManagedKeyStatus = "string"
      databaseAccountOfferType = "Standard"
      defaultIdentity = "string"
      defaultPriorityLevel = "string"
      diagnosticLogSettings = {
        enableFullTextQuery = "string"
      }
      disableKeyBasedMetadataWriteAccess = bool
      disableLocalAuth = bool
      enableAnalyticalStorage = bool
      enableAutomaticFailover = bool
      enableBurstCapacity = bool
      enableCassandraConnector = bool
      enableFreeTier = bool
      enableMaterializedViews = bool
      enableMultipleWriteLocations = bool
      enablePartitionMerge = bool
      enablePerRegionPerPartitionAutoscale = bool
      enablePriorityBasedExecution = bool
      ipRules = [
        {
          ipAddressOrRange = "string"
        }
      ]
      isVirtualNetworkFilterEnabled = bool
      keyVaultKeyUri = "string"
      locations = [
        {
          failoverPriority = int
          isZoneRedundant = bool
          locationName = "string"
        }
      ]
      minimalTlsVersion = "string"
      networkAclBypass = "string"
      networkAclBypassResourceIds = [
        "string"
      ]
      publicNetworkAccess = "string"
      restoreParameters = {
        databasesToRestore = [
          {
            collectionNames = [
              "string"
            ]
            databaseName = "string"
          }
        ]
        gremlinDatabasesToRestore = [
          {
            databaseName = "string"
            graphNames = [
              "string"
            ]
          }
        ]
        restoreMode = "string"
        restoreSource = "string"
        restoreTimestampInUtc = "string"
        restoreWithTtlDisabled = bool
        sourceBackupLocation = "string"
        tablesToRestore = [
          "string"
        ]
      }
      virtualNetworkRules = [
        {
          id = "string"
          ignoreMissingVNetServiceEndpoint = bool
        }
      ]
    }
  }
}
BackupPolicy objects
Set thetypeproperty to specify the type of object.
ForContinuous, use:
{
  continuousModeProperties = {
    tier = "string"
  }
  type = "Continuous"
}
{
  continuousModeProperties = {
    tier = "string"
  }
  type = "Continuous"
}
ForPeriodic, use:
{
  periodicModeProperties = {
    backupIntervalInMinutes = int
    backupRetentionIntervalInHours = int
    backupStorageRedundancy = "string"
  }
  type = "Periodic"
}
{
  periodicModeProperties = {
    backupIntervalInMinutes = int
    backupRetentionIntervalInHours = int
    backupStorageRedundancy = "string"
  }
  type = "Periodic"
}
Property Values
AnalyticalStorageConfiguration
ApiProperties
BackupPolicy
BackupPolicyMigrationState
Capability
Capacity
Components1Jq1T4ISchemasManagedserviceidentityPropertiesUserassignedidentitiesAdditionalproperties
ConsistencyPolicy
ContinuousModeBackupPolicy
ContinuousModeProperties
CorsPolicy
DatabaseAccountCreateUpdatePropertiesOrDatabaseAccountGetProperties
DatabaseRestoreResource
DiagnosticLogSettings
GremlinDatabaseRestoreResource
IpAddressOrRange
Location
ManagedServiceIdentity
ManagedServiceIdentityUserAssignedIdentities
Microsoft.DocumentDB/databaseAccounts
^[a-z0-9]+(-[a-z0-9]+)*
PeriodicModeBackupPolicy
PeriodicModeProperties
RestoreParameters
Tags
VirtualNetworkRule
Feedback
Was this page helpful?
Additional resources