Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Set up sign-in for a specific Microsoft Entra organization in Azure Active Directory B2C
Article
2025-01-27
13 contributors
In this article
This article shows you how to enable sign-in for users from a specific Microsoft Entra organization using a user flow in Azure AD B2C.
Before you begin, use theChoose a policy typeselector at the top of this page to choose the type of policy youâre setting up. Azure Active Directory B2C offers two methods to define how users interact with your applications: through predefineduser flowsor through fully configurablecustom policies. The steps required in this article are different for each method.
Note
In Azure Active Directory B2C,custom policiesare designed primarily to address complex scenarios. For most scenarios, we recommend that you use built-inuser flows. If you've not done so, learn about custom policy starter pack inGet started with custom policies in Active Directory B2C.
Prerequisites
Create a user flowso users can sign up and sign in to your application.
Register a web application.
Complete the steps inGet started with custom policies in Active Directory B2C. This tutorial guides you how to update custom policy files to use your Azure AD B2C tenant configuration.
Register a web application.
Verify the application's publisher domain
As of November 2020, new application registrations show up as unverified in the user consent prompt unlessthe application's publisher domain is verifiedandthe companyâs identity has been verified with the Microsoft Partner Network and associated with the application. (Learn moreabout this change.) Note that for Azure AD B2C user flows, the publisherâs domain appears only when using aMicrosoft accountor other Microsoft Entra tenant as the identity provider. To meet these new requirements, do the following:
Verify your company identity using your Microsoft Partner Network (MPN) account. This process verifies information about your company and your companyâs primary contact.
Complete the publisher verification process to associate your MPN account with your app registration using one of the following options:If the app registration for the Microsoft account identity provider is in a Microsoft Entra tenant,verify your app in the App Registration portal.If your app registration for the Microsoft account identity provider is in an Azure AD B2C tenant,mark your app as publisher verified using Microsoft Graph APIs(for example, using Graph Explorer). The UI for setting an appâs verified publisher is currently disabled for Azure AD B2C tenants.
If the app registration for the Microsoft account identity provider is in a Microsoft Entra tenant,verify your app in the App Registration portal.
If your app registration for the Microsoft account identity provider is in an Azure AD B2C tenant,mark your app as publisher verified using Microsoft Graph APIs(for example, using Graph Explorer). The UI for setting an appâs verified publisher is currently disabled for Azure AD B2C tenants.

Register a Microsoft Entra app
To enable sign-in for users with a Microsoft Entra account from a specific Microsoft Entra organization, in Azure Active Directory B2C (Azure AD B2C), you need to create an application in theAzure portal. For more information, seeRegister an application with the Microsoft identity platform.
Sign in to theAzure portal.
Sign in to theAzure portal.
If you have access to multiple tenants, select theSettingsicon in the top menu to switch to your Microsoft Entra ID tenant from theDirectories + subscriptionsmenu.
If you have access to multiple tenants, select theSettingsicon in the top menu to switch to your Microsoft Entra ID tenant from theDirectories + subscriptionsmenu.
In the Azure portal, search for and selectMicrosoft Entra ID.
In the Azure portal, search for and selectMicrosoft Entra ID.
In the left menu, underManage, selectApp registrations.
In the left menu, underManage, selectApp registrations.
Select+ New registration.
Select+ New registration.
Enter aNamefor your application. For example,Azure AD B2C App.
Enter aNamefor your application. For example,Azure AD B2C App.
Azure AD B2C App
Accept the default selection ofAccounts in this organizational directory only (Default Directory only - Single tenant)for this application.
Accept the default selection ofAccounts in this organizational directory only (Default Directory only - Single tenant)for this application.
For theRedirect URI, accept the value ofWeb, and enter the following URL in all lowercase letters, whereyour-B2C-tenant-nameis replaced with the name of your Azure AD B2C tenant.https://your-B2C-tenant-name.b2clogin.com/your-B2C-tenant-name.onmicrosoft.com/oauth2/authrespFor example,https://fabrikam.b2clogin.com/fabrikam.onmicrosoft.com/oauth2/authresp.If you use acustom domain, enterhttps://your-domain-name/your-tenant-name.onmicrosoft.com/oauth2/authresp. Replaceyour-domain-namewith your custom domain, andyour-tenant-namewith the name of your tenant.
For theRedirect URI, accept the value ofWeb, and enter the following URL in all lowercase letters, whereyour-B2C-tenant-nameis replaced with the name of your Azure AD B2C tenant.
your-B2C-tenant-name
https://your-B2C-tenant-name.b2clogin.com/your-B2C-tenant-name.onmicrosoft.com/oauth2/authresp
https://your-B2C-tenant-name.b2clogin.com/your-B2C-tenant-name.onmicrosoft.com/oauth2/authresp
For example,https://fabrikam.b2clogin.com/fabrikam.onmicrosoft.com/oauth2/authresp.
https://fabrikam.b2clogin.com/fabrikam.onmicrosoft.com/oauth2/authresp
If you use acustom domain, enterhttps://your-domain-name/your-tenant-name.onmicrosoft.com/oauth2/authresp. Replaceyour-domain-namewith your custom domain, andyour-tenant-namewith the name of your tenant.
https://your-domain-name/your-tenant-name.onmicrosoft.com/oauth2/authresp
your-domain-name
your-tenant-name
SelectRegister. Record theApplication (client) IDfor use in a later step.
SelectRegister. Record theApplication (client) IDfor use in a later step.
SelectCertificates & secrets, and then selectNew client secret.
SelectCertificates & secrets, and then selectNew client secret.
Enter aDescriptionfor the secret, select an expiration, and then selectAdd. Record theValueof the secret for use in a later step.
Enter aDescriptionfor the secret, select an expiration, and then selectAdd. Record theValueof the secret for use in a later step.

Configure Microsoft Entra ID as an identity provider
If you have access to multiple tenants, select theSettingsicon in the top menu to switch to your Azure AD B2C tenant from theDirectories + subscriptionsmenu.
If you have access to multiple tenants, select theSettingsicon in the top menu to switch to your Azure AD B2C tenant from theDirectories + subscriptionsmenu.
ChooseAll servicesin the top-left corner of the Azure portal, and then search for and selectAzure AD B2C.
ChooseAll servicesin the top-left corner of the Azure portal, and then search for and selectAzure AD B2C.
SelectIdentity providers, and then selectNew OpenID Connect provider.
SelectIdentity providers, and then selectNew OpenID Connect provider.
Enter aName. For example, enterContoso Microsoft Entra ID.
Enter aName. For example, enterContoso Microsoft Entra ID.
ForMetadata url, enter the following URL replacing{tenant}with the domain name of your Microsoft Entra tenant:https://login.microsoftonline.com/{tenant}/v2.0/.well-known/openid-configuration
ForMetadata url, enter the following URL replacing{tenant}with the domain name of your Microsoft Entra tenant:
{tenant}
https://login.microsoftonline.com/{tenant}/v2.0/.well-known/openid-configuration
https://login.microsoftonline.com/{tenant}/v2.0/.well-known/openid-configuration
For example,https://login.microsoftonline.com/contoso.onmicrosoft.com/v2.0/.well-known/openid-configuration. If you use a custom domain, replacecontoso.comwith your custom domain inhttps://login.microsoftonline.com/contoso.com/v2.0/.well-known/openid-configuration.
https://login.microsoftonline.com/contoso.onmicrosoft.com/v2.0/.well-known/openid-configuration
contoso.com
https://login.microsoftonline.com/contoso.com/v2.0/.well-known/openid-configuration
ForClient ID, enter the application ID that you previously recorded.
ForClient ID, enter the application ID that you previously recorded.
ForClient secret, enter the client secret value that you previously recorded.
ForClient secret, enter the client secret value that you previously recorded.
ForScope, enteropenid profile.
ForScope, enteropenid profile.
openid profile
Leave the default values forResponse type, andResponse mode.
Leave the default values forResponse type, andResponse mode.
(Optional) For theDomain hint, entercontoso.com. For more information, seeSet up direct sign-in using Azure Active Directory B2C.
(Optional) For theDomain hint, entercontoso.com. For more information, seeSet up direct sign-in using Azure Active Directory B2C.
contoso.com
UnderIdentity provider claims mapping, select the following claims:User ID:oidDisplay name:nameGiven name:given_nameSurname:family_nameEmail:email
UnderIdentity provider claims mapping, select the following claims:
User ID:oid
Display name:name
Given name:given_name
Surname:family_name
Email:email
SelectSave.
SelectSave.

Add Microsoft Entra identity provider to a user flow
At this point, the Microsoft Entra identity provider has been set up, but it's not yet available in any of the sign-in pages. To add the Microsoft Entra identity provider to a user flow:
In your Azure AD B2C tenant, selectUser flows.
Click the user flow that you want to add the Microsoft Entra identity provider.
UnderSettings, selectIdentity providers
UnderCustom identity providers, selectContoso Microsoft Entra ID.
SelectSave.
To test your policy, selectRun user flow.
ForApplication, select a web application that youpreviously registered. TheReply URLshould showhttps://jwt.ms.
https://jwt.ms
Select theRun user flowbutton.
From the sign-up or sign-in page, selectContoso Microsoft Entra IDto sign in with Microsoft Entra Contoso account.
If the sign-in process is successful, your browser is redirected tohttps://jwt.ms, which displays the contents of the token returned by Azure AD B2C.
https://jwt.ms
Create a policy key
You need to store the application key that you created in your Azure AD B2C tenant.
If you have access to multiple tenants, select theSettingsicon in the top menu to switch to your Azure AD B2C tenant from theDirectories + subscriptionsmenu.
ChooseAll servicesin the top-left corner of the Azure portal, and then search for and selectAzure AD B2C.
UnderPolicies, selectIdentity Experience Framework.
SelectPolicy keysand then selectAdd.
ForOptions, chooseManual.
Manual
Enter aNamefor the policy key. For example,ContosoAppSecret.  The prefixB2C_1A_is added automatically to the name of your key when it's created, so its reference in the XML in following section is toB2C_1A_ContosoAppSecret.
ContosoAppSecret
B2C_1A_
InSecret, enter your client secret value that you recorded earlier.
ForKey usage, selectSignature.
Signature
SelectCreate.

Configure Microsoft Entra ID as an identity provider
To enable users to sign in using a Microsoft Entra account, you need to define Microsoft Entra ID as a claims provider that Azure AD B2C can communicate with through an endpoint. The endpoint provides a set of claims that are used by Azure AD B2C to verify that a specific user has authenticated.
You can define Microsoft Entra ID as a claims provider by adding Microsoft Entra ID to theClaimsProviderelement in the extension file of your policy.
Open theTrustFrameworkExtensions.xmlfile.
Open theTrustFrameworkExtensions.xmlfile.
Find theClaimsProviderselement. If it does not exist, add it under the root element.
Find theClaimsProviderselement. If it does not exist, add it under the root element.
Add a newClaimsProvideras follows:<ClaimsProvider>
  <Domain>Contoso</Domain>
  <DisplayName>Login using Contoso</DisplayName>
  <TechnicalProfiles>
    <TechnicalProfile Id="AADContoso-OpenIdConnect">
      <DisplayName>Contoso Employee</DisplayName>
      <Description>Login with your Contoso account</Description>
      <Protocol Name="OpenIdConnect"/>
      <Metadata>
        <Item Key="METADATA">https://login.microsoftonline.com/tenant-name.onmicrosoft.com/v2.0/.well-known/openid-configuration</Item>
        <Item Key="client_id">00001111-aaaa-2222-bbbb-3333cccc4444</Item>
        <Item Key="response_types">code</Item>
        <Item Key="scope">openid profile</Item>
        <Item Key="response_mode">form_post</Item>
        <Item Key="HttpBinding">POST</Item>
        <Item Key="UsePolicyInRedirectUri">false</Item>
      </Metadata>
      <CryptographicKeys>
        <Key Id="client_secret" StorageReferenceId="B2C_1A_ContosoAppSecret"/>
      </CryptographicKeys>
      <OutputClaims>
        <OutputClaim ClaimTypeReferenceId="issuerUserId" PartnerClaimType="oid"/>
        <OutputClaim ClaimTypeReferenceId="tenantId" PartnerClaimType="tid"/>
        <OutputClaim ClaimTypeReferenceId="givenName" PartnerClaimType="given_name" />
        <OutputClaim ClaimTypeReferenceId="surName" PartnerClaimType="family_name" />
        <OutputClaim ClaimTypeReferenceId="displayName" PartnerClaimType="name" />
        <OutputClaim ClaimTypeReferenceId="authenticationSource" DefaultValue="socialIdpAuthentication" AlwaysUseDefaultValue="true" />
        <OutputClaim ClaimTypeReferenceId="identityProvider" PartnerClaimType="iss" />
      </OutputClaims>
      <OutputClaimsTransformations>
        <OutputClaimsTransformation ReferenceId="CreateRandomUPNUserName"/>
        <OutputClaimsTransformation ReferenceId="CreateUserPrincipalName"/>
        <OutputClaimsTransformation ReferenceId="CreateAlternativeSecurityId"/>
        <OutputClaimsTransformation ReferenceId="CreateSubjectClaimFromAlternativeSecurityId"/>
      </OutputClaimsTransformations>
      <UseTechnicalProfileForSessionManagement ReferenceId="SM-SocialLogin"/>
    </TechnicalProfile>
  </TechnicalProfiles>
</ClaimsProvider>
Add a newClaimsProvideras follows:
<ClaimsProvider>
  <Domain>Contoso</Domain>
  <DisplayName>Login using Contoso</DisplayName>
  <TechnicalProfiles>
    <TechnicalProfile Id="AADContoso-OpenIdConnect">
      <DisplayName>Contoso Employee</DisplayName>
      <Description>Login with your Contoso account</Description>
      <Protocol Name="OpenIdConnect"/>
      <Metadata>
        <Item Key="METADATA">https://login.microsoftonline.com/tenant-name.onmicrosoft.com/v2.0/.well-known/openid-configuration</Item>
        <Item Key="client_id">00001111-aaaa-2222-bbbb-3333cccc4444</Item>
        <Item Key="response_types">code</Item>
        <Item Key="scope">openid profile</Item>
        <Item Key="response_mode">form_post</Item>
        <Item Key="HttpBinding">POST</Item>
        <Item Key="UsePolicyInRedirectUri">false</Item>
      </Metadata>
      <CryptographicKeys>
        <Key Id="client_secret" StorageReferenceId="B2C_1A_ContosoAppSecret"/>
      </CryptographicKeys>
      <OutputClaims>
        <OutputClaim ClaimTypeReferenceId="issuerUserId" PartnerClaimType="oid"/>
        <OutputClaim ClaimTypeReferenceId="tenantId" PartnerClaimType="tid"/>
        <OutputClaim ClaimTypeReferenceId="givenName" PartnerClaimType="given_name" />
        <OutputClaim ClaimTypeReferenceId="surName" PartnerClaimType="family_name" />
        <OutputClaim ClaimTypeReferenceId="displayName" PartnerClaimType="name" />
        <OutputClaim ClaimTypeReferenceId="authenticationSource" DefaultValue="socialIdpAuthentication" AlwaysUseDefaultValue="true" />
        <OutputClaim ClaimTypeReferenceId="identityProvider" PartnerClaimType="iss" />
      </OutputClaims>
      <OutputClaimsTransformations>
        <OutputClaimsTransformation ReferenceId="CreateRandomUPNUserName"/>
        <OutputClaimsTransformation ReferenceId="CreateUserPrincipalName"/>
        <OutputClaimsTransformation ReferenceId="CreateAlternativeSecurityId"/>
        <OutputClaimsTransformation ReferenceId="CreateSubjectClaimFromAlternativeSecurityId"/>
      </OutputClaimsTransformations>
      <UseTechnicalProfileForSessionManagement ReferenceId="SM-SocialLogin"/>
    </TechnicalProfile>
  </TechnicalProfiles>
</ClaimsProvider>
<ClaimsProvider>
  <Domain>Contoso</Domain>
  <DisplayName>Login using Contoso</DisplayName>
  <TechnicalProfiles>
    <TechnicalProfile Id="AADContoso-OpenIdConnect">
      <DisplayName>Contoso Employee</DisplayName>
      <Description>Login with your Contoso account</Description>
      <Protocol Name="OpenIdConnect"/>
      <Metadata>
        <Item Key="METADATA">https://login.microsoftonline.com/tenant-name.onmicrosoft.com/v2.0/.well-known/openid-configuration</Item>
        <Item Key="client_id">00001111-aaaa-2222-bbbb-3333cccc4444</Item>
        <Item Key="response_types">code</Item>
        <Item Key="scope">openid profile</Item>
        <Item Key="response_mode">form_post</Item>
        <Item Key="HttpBinding">POST</Item>
        <Item Key="UsePolicyInRedirectUri">false</Item>
      </Metadata>
      <CryptographicKeys>
        <Key Id="client_secret" StorageReferenceId="B2C_1A_ContosoAppSecret"/>
      </CryptographicKeys>
      <OutputClaims>
        <OutputClaim ClaimTypeReferenceId="issuerUserId" PartnerClaimType="oid"/>
        <OutputClaim ClaimTypeReferenceId="tenantId" PartnerClaimType="tid"/>
        <OutputClaim ClaimTypeReferenceId="givenName" PartnerClaimType="given_name" />
        <OutputClaim ClaimTypeReferenceId="surName" PartnerClaimType="family_name" />
        <OutputClaim ClaimTypeReferenceId="displayName" PartnerClaimType="name" />
        <OutputClaim ClaimTypeReferenceId="authenticationSource" DefaultValue="socialIdpAuthentication" AlwaysUseDefaultValue="true" />
        <OutputClaim ClaimTypeReferenceId="identityProvider" PartnerClaimType="iss" />
      </OutputClaims>
      <OutputClaimsTransformations>
        <OutputClaimsTransformation ReferenceId="CreateRandomUPNUserName"/>
        <OutputClaimsTransformation ReferenceId="CreateUserPrincipalName"/>
        <OutputClaimsTransformation ReferenceId="CreateAlternativeSecurityId"/>
        <OutputClaimsTransformation ReferenceId="CreateSubjectClaimFromAlternativeSecurityId"/>
      </OutputClaimsTransformations>
      <UseTechnicalProfileForSessionManagement ReferenceId="SM-SocialLogin"/>
    </TechnicalProfile>
  </TechnicalProfiles>
</ClaimsProvider>
Under theClaimsProviderelement, update the value forDomainto a unique value that can be used to distinguish it from other identity providers. For exampleContoso. You don't put a.comat the end of this domain setting.
Under theClaimsProviderelement, update the value forDomainto a unique value that can be used to distinguish it from other identity providers. For exampleContoso. You don't put a.comat the end of this domain setting.
Contoso
.com
Under theClaimsProviderelement, update the value forDisplayNameto a friendly name for the claims provider. This value is not currently used.
Under theClaimsProviderelement, update the value forDisplayNameto a friendly name for the claims provider. This value is not currently used.
Update the technical profile
To get a token from the Microsoft Entra endpoint, you need to define the protocols that Azure AD B2C should use to communicate with Microsoft Entra ID. This is done inside theTechnicalProfileelement ofClaimsProvider.
Update the ID of theTechnicalProfileelement. This ID is used to refer to this technical profile from other parts of the policy, for exampleAADContoso-OpenIdConnect.
AADContoso-OpenIdConnect
Update the value forDisplayName. This value will be displayed on the sign-in button on your sign-in screen.
Update the value forDescription.
Microsoft Entra ID uses the OpenID Connect protocol, so make sure that the value forProtocolisOpenIdConnect.
OpenIdConnect
Set value of theMETADATAtohttps://login.microsoftonline.com/tenant-name.onmicrosoft.com/v2.0/.well-known/openid-configuration, wheretenant-nameis your Microsoft Entra tenant name. For example,https://login.microsoftonline.com/contoso.onmicrosoft.com/v2.0/.well-known/openid-configuration
https://login.microsoftonline.com/tenant-name.onmicrosoft.com/v2.0/.well-known/openid-configuration
tenant-name
https://login.microsoftonline.com/contoso.onmicrosoft.com/v2.0/.well-known/openid-configuration
Setclient_idto the application ID from the application registration.
UnderCryptographicKeys, update the value ofStorageReferenceIdto the name of the policy key that you created earlier. For example,B2C_1A_ContosoAppSecret.
B2C_1A_ContosoAppSecret
Add a user journey
At this point, the identity provider has been set up, but it's not yet available in any of the sign-in pages. If you don't have your own custom user journey, create a duplicate of an existing template user journey, otherwise continue to the next step.
Open theTrustFrameworkBase.xmlfile from the starter pack.
Find and copy the entire contents of theUserJourneyelement that includesId="SignUpOrSignIn".
Id="SignUpOrSignIn"
Open theTrustFrameworkExtensions.xmland find theUserJourneyselement. If the element doesn't exist, add one.
Paste the entire content of theUserJourneyelement that you copied as a child of theUserJourneyselement.
Rename the Id of the user journey. For example,Id="CustomSignUpSignIn".
Id="CustomSignUpSignIn"
Add the identity provider to a user journey
Now that you have a user journey, add the new identity provider to the user journey. You first add a sign-in button, then link the button to an action. The action is the technical profile you created earlier.
Find the orchestration step element that includesType="CombinedSignInAndSignUp", orType="ClaimsProviderSelection"in the user journey. It's usually the first orchestration step. TheClaimsProviderSelectionselement contains a list of identity providers that a user can sign in with. The order of the elements controls the order of the sign-in buttons presented to the user. Add aClaimsProviderSelectionXML element. Set the value ofTargetClaimsExchangeIdto a friendly name.
Find the orchestration step element that includesType="CombinedSignInAndSignUp", orType="ClaimsProviderSelection"in the user journey. It's usually the first orchestration step. TheClaimsProviderSelectionselement contains a list of identity providers that a user can sign in with. The order of the elements controls the order of the sign-in buttons presented to the user. Add aClaimsProviderSelectionXML element. Set the value ofTargetClaimsExchangeIdto a friendly name.
Type="CombinedSignInAndSignUp"
Type="ClaimsProviderSelection"
In the next orchestration step, add aClaimsExchangeelement. Set theIdto the value of the target claims exchange Id. Update the value ofTechnicalProfileReferenceIdto the Id of the technical profile you created earlier.
In the next orchestration step, add aClaimsExchangeelement. Set theIdto the value of the target claims exchange Id. Update the value ofTechnicalProfileReferenceIdto the Id of the technical profile you created earlier.
The following XML demonstrates the first two orchestration steps of a user journey with the identity provider:
<OrchestrationStep Order="1" Type="CombinedSignInAndSignUp" ContentDefinitionReferenceId="api.signuporsignin">
  <ClaimsProviderSelections>
    ...
    <ClaimsProviderSelection TargetClaimsExchangeId="AzureADContosoExchange" />
  </ClaimsProviderSelections>
  ...
</OrchestrationStep>

<OrchestrationStep Order="2" Type="ClaimsExchange">
  ...
  <ClaimsExchanges>
    <ClaimsExchange Id="AzureADContosoExchange" TechnicalProfileReferenceId="AADContoso-OpenIdConnect" />
  </ClaimsExchanges>
</OrchestrationStep>
<OrchestrationStep Order="1" Type="CombinedSignInAndSignUp" ContentDefinitionReferenceId="api.signuporsignin">
  <ClaimsProviderSelections>
    ...
    <ClaimsProviderSelection TargetClaimsExchangeId="AzureADContosoExchange" />
  </ClaimsProviderSelections>
  ...
</OrchestrationStep>

<OrchestrationStep Order="2" Type="ClaimsExchange">
  ...
  <ClaimsExchanges>
    <ClaimsExchange Id="AzureADContosoExchange" TechnicalProfileReferenceId="AADContoso-OpenIdConnect" />
  </ClaimsExchanges>
</OrchestrationStep>
Configure the relying party policy
The relying party policy, for exampleSignUpSignIn.xml, specifies the user journey which Azure AD B2C will execute. Find theDefaultUserJourneyelement withinrelying party. Update theReferenceIdto match the user journey ID, in which you added the identity provider.
In the following example, for theCustomSignUpSignInuser journey, theReferenceIdis set toCustomSignUpSignIn:
CustomSignUpSignIn
CustomSignUpSignIn
<RelyingParty>
  <DefaultUserJourney ReferenceId="CustomSignUpSignIn" />
  ...
</RelyingParty>
<RelyingParty>
  <DefaultUserJourney ReferenceId="CustomSignUpSignIn" />
  ...
</RelyingParty>
Upload the custom policy
Sign in to theAzure portal.
Select theDirectory + Subscriptionicon in the portal toolbar, and then select the directory that contains your Azure AD B2C tenant.
In the Azure portal, search for and selectAzure AD B2C.
UnderPolicies, selectIdentity Experience Framework.
SelectUpload Custom Policy, and then upload the two policy files that you changed, in the following order: the extension policy, for exampleTrustFrameworkExtensions.xml, then the relying party policy, such asSignUpSignIn.xml.
TrustFrameworkExtensions.xml
SignUpSignIn.xml
Test your custom policy
Select your relying party policy, for exampleB2C_1A_signup_signin.
B2C_1A_signup_signin
ForApplication, select a web application that youpreviously registered. TheReply URLshould showhttps://jwt.ms.
https://jwt.ms
Select theRun nowbutton.
From the sign-up or sign-in page, selectContoso Employeeto sign in with Microsoft Entra Contoso account.
If the sign-in process is successful, your browser is redirected tohttps://jwt.ms, which displays the contents of the token returned by Azure AD B2C.
https://jwt.ms
[Optional] Configuring optional claims
If you want to get thefamily_nameandgiven_nameclaims from Microsoft Entra ID, you can configure optional claims for your application in the Azure portal UI or application manifest. For more information, seeHow to provide optional claims to your Microsoft Entra app.
family_name
given_name
Sign in to theAzure portalusing your organizational Microsoft Entra tenant. Or if you're already signed in, make sure you're using the directory that contains your organizational Microsoft Entra tenant (for example, Contoso):Select theDirectories + subscriptionsicon in the portal toolbar.On thePortal settings | Directories + subscriptionspage, find your Microsoft Entra directory in theDirectory namelist, and then selectSwitch.
Select theDirectories + subscriptionsicon in the portal toolbar.
On thePortal settings | Directories + subscriptionspage, find your Microsoft Entra directory in theDirectory namelist, and then selectSwitch.
In the Azure portal, search for and selectMicrosoft Entra ID.
In the left menu, underManage, selectApp registrations.
Select the application you want to configure optional claims for in the list, such asAzure AD B2C App.
Azure AD B2C App
From theManagesection, selectToken configuration.
SelectAdd optional claim.
For theToken type, selectID.
Select the optional claims to add,family_nameandgiven_name.
family_name
given_name
SelectAdd. IfTurn on the Microsoft Graph profile permission (required for claims to appear in token)appears, enable it, and then selectAddagain.
[Optional] Verify your app authenticity
Publisher verificationhelps your users understand the authenticity of the app youregistered. A verified app means that the publisher of the app hasverifiedtheir identity using their Microsoft Partner Network (MPN). Learn how tomark your app as publisher verified.
Next steps
Learn how topass the Microsoft Entra token to your application.
Feedback
Was this page helpful?
Additional resources