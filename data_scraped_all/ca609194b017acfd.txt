Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Tracking schemas for B2B messages in Consumption workflows for Azure Logic Apps
Article
2025-03-27
1 contributor
In this article
Applies to:Azure Logic Apps (Consumption)
Note
This article applies only to Consumption logic app workflows. For information
about monitoring Standard logic apps, see the following documentation:
Enable or open Application Insights after deployment for Standard logic apps
Monitor and track B2B transactions in Standard workflows
Tracking schemas for B2B transactions in Standard workflows
Azure Logic Apps includes built-in tracking that you can enable for parts of your workflow. To help you monitor the successful delivery or receipt, errors, and properties for business-to-business (B2B) messages, you can create and use AS2, X12, and custom tracking schemas in your integration account. This reference guide describes the syntax and attributes for these tracking schemas.
AS2
AS2 message tracking schema
AS2 Message Disposition Notification (MDN) tracking schema

AS2 message - tracking schema
The following syntax describes the schema for tracking an AS2 message:
{
   "agreementProperties": {
      "senderPartnerName": "",
      "receiverPartnerName": "",
      "as2To": "",
      "as2From": "",
      "agreementName": ""
   },
   "messageProperties": {
      "direction": "",
      "messageId": "",
      "dispositionType": "",
      "fileName": "",
      "isMessageFailed": "",
      "isMessageSigned": "",
      "isMessageEncrypted": "",
      "isMessageCompressed": "",
      "incomingHeaders": {},
      "outgoingHeaders": {},
      "correlationMessageId": "",
      "isNrrEnabled": "",
      "isMdnExpected": "",
      "mdnType": ""
    }
}
{
   "agreementProperties": {
      "senderPartnerName": "",
      "receiverPartnerName": "",
      "as2To": "",
      "as2From": "",
      "agreementName": ""
   },
   "messageProperties": {
      "direction": "",
      "messageId": "",
      "dispositionType": "",
      "fileName": "",
      "isMessageFailed": "",
      "isMessageSigned": "",
      "isMessageEncrypted": "",
      "isMessageCompressed": "",
      "incomingHeaders": {},
      "outgoingHeaders": {},
      "correlationMessageId": "",
      "isNrrEnabled": "",
      "isMdnExpected": "",
      "mdnType": ""
    }
}
senderPartnerName
receiverPartnerName
as2To
as2From
agreementName
direction
send
receive
messageId
dispositionType
fileName
isMessageFailed
isMessageSigned
isMessageEncrypted
isMessageCompressed
incomingHeaders
outgoingHeaders
correlationMessageId
isNrrEnabled
isMdnExpected
mdnType
NotConfigured
Sync
Async

AS2 MDN - tracking schema
The following syntax describes the schema for tracking an AS2 MDN:
{
   "agreementProperties": {
      "senderPartnerName": "",
      "receiverPartnerName": "",
      "as2To": "",
      "as2From": "",
      "agreementName": ""
   },
   "messageProperties": {
      "direction": "",
      "messageId": "",
      "originalMessageId": "",
      "dispositionType": "",
      "isMessageFailed": "",
      "isMessageSigned": "",
      "isNrrEnabled": "",
      "statusCode": "",
      "micVerificationStatus": "",
      "correlationMessageId": "",
      "incomingHeaders": {},
      "outgoingHeaders": {}
   }
}
{
   "agreementProperties": {
      "senderPartnerName": "",
      "receiverPartnerName": "",
      "as2To": "",
      "as2From": "",
      "agreementName": ""
   },
   "messageProperties": {
      "direction": "",
      "messageId": "",
      "originalMessageId": "",
      "dispositionType": "",
      "isMessageFailed": "",
      "isMessageSigned": "",
      "isNrrEnabled": "",
      "statusCode": "",
      "micVerificationStatus": "",
      "correlationMessageId": "",
      "incomingHeaders": {},
      "outgoingHeaders": {}
   }
}
senderPartnerName
receiverPartnerName
as2To
as2From
agreementName
direction
send
receive
messageId
originalMessageId
dispositionType
isMessageFailed
isMessageSigned
isNrrEnabled
statusCode
Accepted
Rejected
AcceptedWithErrors
micVerificationStatus
NotApplicable
Succeeded
Failed
correlationMessageId
incomingHeaders
outgoingHeaders
X12
X12 transaction set tracking schema
X12 transaction set acknowledgment tracking schema
X12 interchange tracking schema
X12 interchange acknowledgment tracking schema
X12 functional group tracking schema
X12 functional group acknowledgment tracking schema

X12 transaction set - tracking schema
The following syntax describes the schema for tracking an X12 transaction set:
{
   "agreementProperties": {
      "senderPartnerName": "",
      "receiverPartnerName": "",
      "senderQualifier": "",
      "senderIdentifier": "",
      "receiverQualifier": "",
      "receiverIdentifier": "",
      "agreementName": ""
   },
   "messageProperties": {
      "direction": "",
      "interchangeControlNumber": "",
      "functionalGroupControlNumber": "",
      "transactionSetControlNumber": "",
      "correlationMessageId": "",
      "messageType": "",
      "isMessageFailed": "",
      "isTechnicalAcknowledgmentExpected": "",
      "isFunctionalAcknowledgmentExpected": "",
      "needAk2LoopForValidMessages": "",
      "segmentsCount": ""
   }
}
{
   "agreementProperties": {
      "senderPartnerName": "",
      "receiverPartnerName": "",
      "senderQualifier": "",
      "senderIdentifier": "",
      "receiverQualifier": "",
      "receiverIdentifier": "",
      "agreementName": ""
   },
   "messageProperties": {
      "direction": "",
      "interchangeControlNumber": "",
      "functionalGroupControlNumber": "",
      "transactionSetControlNumber": "",
      "correlationMessageId": "",
      "messageType": "",
      "isMessageFailed": "",
      "isTechnicalAcknowledgmentExpected": "",
      "isFunctionalAcknowledgmentExpected": "",
      "needAk2LoopForValidMessages": "",
      "segmentsCount": ""
   }
}
senderPartnerName
receiverPartnerName
senderQualifier
senderIdentifier
receiverQualifier
receiverIdentifier
agreementName
direction
send
receive
interchangeControlNumber
functionalGroupControlNumber
transactionSetControlNumber
correlationMessageId
messageType
isMessageFailed
isTechnicalAcknowledgmentExpected
isFunctionalAcknowledgmentExpected
needAk2LoopForValidMessages
segmentsCount

X12 transaction set acknowledgment - tracking schema
The following syntax describes the schema for tracking an X12 transaction set acknowledgment:
{
   "agreementProperties": {
      "senderPartnerName": "",
      "receiverPartnerName": "",
      "senderQualifier": "",
      "senderIdentifier": "",
      "receiverQualifier": "",
      "receiverIdentifier": "",
      "agreementName": ""
   },
   "messageProperties": {
      "direction": "",
      "interchangeControlNumber": "",
      "functionalGroupControlNumber": "",
      "isaSegment": "",
      "gsSegment": "",
      "respondingFunctionalGroupControlNumber": "",
      "respondingFunctionalGroupId": "",
      "respondingTransactionSetControlNumber": "",
      "respondingTransactionSetId": "",
      "statusCode": "",
      "processingStatus": "",
      "correlationMessageId": "",
      "isMessageFailed": "",
      "ak2Segment": "",
      "ak3Segment": "",
      "ak5Segment": ""
   }
}
{
   "agreementProperties": {
      "senderPartnerName": "",
      "receiverPartnerName": "",
      "senderQualifier": "",
      "senderIdentifier": "",
      "receiverQualifier": "",
      "receiverIdentifier": "",
      "agreementName": ""
   },
   "messageProperties": {
      "direction": "",
      "interchangeControlNumber": "",
      "functionalGroupControlNumber": "",
      "isaSegment": "",
      "gsSegment": "",
      "respondingFunctionalGroupControlNumber": "",
      "respondingFunctionalGroupId": "",
      "respondingTransactionSetControlNumber": "",
      "respondingTransactionSetId": "",
      "statusCode": "",
      "processingStatus": "",
      "correlationMessageId": "",
      "isMessageFailed": "",
      "ak2Segment": "",
      "ak3Segment": "",
      "ak5Segment": ""
   }
}
senderPartnerName
receiverPartnerName
senderQualifier
senderIdentifier
receiverQualifier
receiverIdentifier
agreementName
direction
send
receive
interchangeControlNumber
functionalGroupControlNumber
isaSegment
gsSegment
respondingFunctionalGroupControlNumber
respondingFunctionalGroupId
respondingTransactionSetControlNumber
respondingTransactionSetId
statusCode
processingStatus
Received
Generated
Sent
correlationMessageId
isMessageFailed
ak2Segment
ak3Segment
ak5Segment

X12 interchange - tracking schema
The following syntax describes the schema for tracking an X12 interchange:
{
   "agreementProperties": {
      "senderPartnerName": "",
      "receiverPartnerName": "",
      "senderQualifier": "",
      "senderIdentifier": "",
      "receiverQualifier": "",
      "receiverIdentifier": "",
      "agreementName": ""
   },
   "messageProperties": {
      "direction": "",
      "interchangeControlNumber": "",
      "isaSegment": "",
      "isTechnicalAcknowledgmentExpected": "",
      "isMessageFailed": "",
      "isa09": "",
      "isa10": "",
      "isa11": "",
      "isa12": "",
      "isa14": "",
      "isa15": "",
      "isa16": ""
   }
}
{
   "agreementProperties": {
      "senderPartnerName": "",
      "receiverPartnerName": "",
      "senderQualifier": "",
      "senderIdentifier": "",
      "receiverQualifier": "",
      "receiverIdentifier": "",
      "agreementName": ""
   },
   "messageProperties": {
      "direction": "",
      "interchangeControlNumber": "",
      "isaSegment": "",
      "isTechnicalAcknowledgmentExpected": "",
      "isMessageFailed": "",
      "isa09": "",
      "isa10": "",
      "isa11": "",
      "isa12": "",
      "isa14": "",
      "isa15": "",
      "isa16": ""
   }
}
senderPartnerName
receiverPartnerName
senderQualifier
senderIdentifier
receiverQualifier
receiverIdentifier
agreementName
direction
send
receive
interchangeControlNumber
isaSegment
isMessageFailed
isTechnicalAcknowledgmentExpected
isa09
isa10
isa11
isa12
isa14
isa15
isa16

X12 interchange acknowledgment - tracking schema
The following syntax describes the schema for tracking an X12 interchange acknowledgment:
{
   "agreementProperties": {
      "senderPartnerName": "",
      "receiverPartnerName": "",
      "senderQualifier": "",
      "senderIdentifier": "",
      "receiverQualifier": "",
      "receiverIdentifier": "",
      "agreementName": ""
   },
   "messageProperties": {
      "direction": "",
      "interchangeControlNumber": "",
      "isaSegment": "",
      "respondingInterchangeControlNumber": "",
      "isMessageFailed": "",
      "statusCode": "",
      "processingStatus": "",
      "ta102": "",
      "ta103": "",
      "ta105": ""
   }
}
{
   "agreementProperties": {
      "senderPartnerName": "",
      "receiverPartnerName": "",
      "senderQualifier": "",
      "senderIdentifier": "",
      "receiverQualifier": "",
      "receiverIdentifier": "",
      "agreementName": ""
   },
   "messageProperties": {
      "direction": "",
      "interchangeControlNumber": "",
      "isaSegment": "",
      "respondingInterchangeControlNumber": "",
      "isMessageFailed": "",
      "statusCode": "",
      "processingStatus": "",
      "ta102": "",
      "ta103": "",
      "ta105": ""
   }
}
senderPartnerName
receiverPartnerName
senderQualifier
senderIdentifier
receiverQualifier
receiverIdentifier
agreementName
direction
send
receive
interchangeControlNumber
isaSegment
respondingInterchangeControlNumber
isMessageFailed
statusCode
Accepted
Rejected
AcceptedWithErrors
processingStatus
Received
Generated
Sent
ta102
ta103
ta105

X12 functional group - tracking schema
The following syntax describes the schema for tracking an X12 functional group:
{
   "agreementProperties": {
      "senderPartnerName": "",
      "receiverPartnerName": "",
      "senderQualifier": "",
      "senderIdentifier": "",
      "receiverQualifier": "",
      "receiverIdentifier": "",
      "agreementName": ""
   },
   "messageProperties": {
      "direction": "",
      "interchangeControlNumber": "",
      "functionalGroupControlNumber": "",
      "gsSegment": "",
      "isTechnicalAcknowledgmentExpected": "",
      "isFunctionalAcknowledgmentExpected": "",
      "isMessageFailed": "",
      "gs01": "",
      "gs02": "",
      "gs03": "",
      "gs04": "",
      "gs05": "",
      "gs07": "",
      "gs08": ""
   }
}
{
   "agreementProperties": {
      "senderPartnerName": "",
      "receiverPartnerName": "",
      "senderQualifier": "",
      "senderIdentifier": "",
      "receiverQualifier": "",
      "receiverIdentifier": "",
      "agreementName": ""
   },
   "messageProperties": {
      "direction": "",
      "interchangeControlNumber": "",
      "functionalGroupControlNumber": "",
      "gsSegment": "",
      "isTechnicalAcknowledgmentExpected": "",
      "isFunctionalAcknowledgmentExpected": "",
      "isMessageFailed": "",
      "gs01": "",
      "gs02": "",
      "gs03": "",
      "gs04": "",
      "gs05": "",
      "gs07": "",
      "gs08": ""
   }
}
senderPartnerName
receiverPartnerName
senderQualifier
senderIdentifier
receiverQualifier
receiverIdentifier
agreementName
direction
send
receive
interchangeControlNumber
functionalGroupControlNumber
gsSegment
isTechnicalAcknowledgmentExpected
isFunctionalAcknowledgmentExpected
isMessageFailed
gs01
gs02
gs03
gs04
gs05
gs07
gs08

X12 functional group acknowledgment - tracking schema
The following syntax describes the schema for tracking an X12 functional group acknowledgment:
{
   "agreementProperties": {
      "senderPartnerName": "",
      "receiverPartnerName": "",
      "senderQualifier": "",
      "senderIdentifier": "",
      "receiverQualifier": "",
      "receiverIdentifier": "",
      "agreementName": ""
   },
   "messageProperties": {
      "direction": "",
      "interchangeControlNumber": "",
      "functionalGroupControlNumber": "",
      "isaSegment": "",
      "gsSegment": "",
      "respondingFunctionalGroupControlNumber": "",
      "respondingFunctionalGroupId": "",
      "isMessageFailed": "",
      "statusCode": "",
      "processingStatus": "",
      "ak903": "",
      "ak904": "",
      "ak9Segment": ""
   }
}
{
   "agreementProperties": {
      "senderPartnerName": "",
      "receiverPartnerName": "",
      "senderQualifier": "",
      "senderIdentifier": "",
      "receiverQualifier": "",
      "receiverIdentifier": "",
      "agreementName": ""
   },
   "messageProperties": {
      "direction": "",
      "interchangeControlNumber": "",
      "functionalGroupControlNumber": "",
      "isaSegment": "",
      "gsSegment": "",
      "respondingFunctionalGroupControlNumber": "",
      "respondingFunctionalGroupId": "",
      "isMessageFailed": "",
      "statusCode": "",
      "processingStatus": "",
      "ak903": "",
      "ak904": "",
      "ak9Segment": ""
   }
}
senderPartnerName
receiverPartnerName
senderQualifier
senderIdentifier
receiverQualifier
receiverIdentifier
agreementName
direction
send
receive
functionalGroupControlNumber
interchangeControlNumber
isaSegment
gsSegment
functionalGrouControlNumber
respondingFunctionalGroupControlNumber
respondingFunctionalGroupId
isMessageFailed
statusCode
Accepted
Rejected
AcceptedWithErrors
processingStatus
Received
Generated
Sent
ak903
ak904
ak9Segment

Custom
You can set up custom tracking that logs events from the start to the end of your logic app workflow. For example, you can log events from layers that include your workflow, SQL Server, BizTalk Server, or any other layer. The following section provides custom tracking schema code that you can use in the layers outside your workflow.
The following syntax describes the schema for custom tracking:
{
   "sourceType": "",
   "source": {
      "workflow": {
         "systemId": ""
      },
      "runInstance": {
         "runId": ""
      },
      "operation": {
         "operationName": "",
         "repeatItemScopeName": "",
         "repeatItemIndex": ,
         "trackingId": "",
         "correlationId": "",
         "clientRequestId": ""
      }
   },
   "events": [
      {
         "eventLevel": "",
         "eventTime": "",
         "recordType": "",
         "record": {}
      }
   ]
}
{
   "sourceType": "",
   "source": {
      "workflow": {
         "systemId": ""
      },
      "runInstance": {
         "runId": ""
      },
      "operation": {
         "operationName": "",
         "repeatItemScopeName": "",
         "repeatItemIndex": ,
         "trackingId": "",
         "correlationId": "",
         "clientRequestId": ""
      }
   },
   "events": [
      {
         "eventLevel": "",
         "eventTime": "",
         "recordType": "",
         "record": {}
      }
   ]
}
sourceType
Microsoft.Logic/workflows
custom
source
Microsoft.Logic/workflows
custom
systemId
runId
operationName
repeatItemScopeName
foreach
until
repeatItemIndex
foreach
until
trackingId
correlationId
clientRequestId
eventLevel
eventTime
recordType
custom
record
Related content
Monitor B2B messages with Azure Monitor logs
Feedback
Was this page helpful?
Additional resources