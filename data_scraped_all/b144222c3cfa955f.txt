Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Collect Windows and Linux performance data sources with the Log Analytics agent
Article
2024-11-14
10 contributors
In this article
Performance counters in Windows and Linux provide insight into the performance of hardware components, operating systems, and applications. Azure Monitor can collect performance counters from Log Analytics agents at frequent intervals for near real time analysis. Azure Monitor can also aggregate performance data for longer-term analysis and reporting.
Important
The legacyLog Analytics agentis deprecated as of August 31, 2024. Microsoft will no longer provide any support for the Log Analytics agent. If you use the Log Analytics agent to ingest data to Azure Monitor,migrate now to Azure Monitor agent.

Configure performance counters
Configure performance counters from theLegacy agents management menufor the Log Analytics workspace.
When you first configure Windows or Linux performance counters for a new workspace, you're given the option to quickly create several common counters. They're listed with a checkbox next to each. Ensure that any counters you want to initially create are selected and then selectAdd the selected performance counters.
For Windows performance counters, you can choose a specific instance for each performance counter. For Linux performance counters, the instance of each counter that you choose applies to all child counters of the parent counter. The following table shows the common instances available to both Windows and Linux performance counters.
Windows performance counters

Follow this procedure to add a new Windows performance counter to collect. V2 Windows performance counters aren't supported.
SelectAdd performance counter.
SelectAdd performance counter.
Enter the name of the counter in the text box in the formatobject(instance)\counter. When you start typing, a matching list of common counters appears. You can either select a counter from the list or enter one of your own. You can also return all instances for a particular counter by specifyingobject\counter.When SQL Server performance counters are collected from named instances, all named instance counters start withMSSQL$followed by the name of the instance. For example, to collect the Log Cache Hit Ratio counter for all databases from the Database performance object for named SQL instance INST2, specifyMSSQL$INST2:Databases(*)\Log Cache Hit Ratio.
Enter the name of the counter in the text box in the formatobject(instance)\counter. When you start typing, a matching list of common counters appears. You can either select a counter from the list or enter one of your own. You can also return all instances for a particular counter by specifyingobject\counter.
When SQL Server performance counters are collected from named instances, all named instance counters start withMSSQL$followed by the name of the instance. For example, to collect the Log Cache Hit Ratio counter for all databases from the Database performance object for named SQL instance INST2, specifyMSSQL$INST2:Databases(*)\Log Cache Hit Ratio.
MSSQL$INST2:Databases(*)\Log Cache Hit Ratio
When you add a counter, it uses the default of 10 seconds for itsSample Interval. Change this default value to a higher value of up to 1,800 seconds (30 minutes) if you want to reduce the storage requirements of the collected performance data.
When you add a counter, it uses the default of 10 seconds for itsSample Interval. Change this default value to a higher value of up to 1,800 seconds (30 minutes) if you want to reduce the storage requirements of the collected performance data.
After you're finished adding counters, selectApplyat the top of the screen to save the configuration.
After you're finished adding counters, selectApplyat the top of the screen to save the configuration.
Linux performance counters

Follow this procedure to add a new Linux performance counter to collect.
SelectAdd performance counter.
Enter the name of the counter in the text box in the formatobject(instance)\counter. When you start typing, a matching list of common counters appears. You can either select a counter from the list or enter one of your own.
All counters for an object use the sameSample Interval. The default is 10 seconds. Change this default value to a higher value of up to 1,800 seconds (30 minutes) if you want to reduce the storage requirements of the collected performance data.
After you're finished adding counters, selectApplyat the top of the screen to save the configuration.
Instead of configuring Linux performance counters by using the Azure portal, you have the option of editing configuration files on the Linux agent. Performance metrics to collect are controlled by the configuration in/etc/opt/microsoft/omsagent/<workspace id>/conf/omsagent.conf.
Each object, or category, of performance metrics to collect should be defined in the configuration file as a single<source>element. The syntax follows the pattern here:
<source>
<source>
    type oms_omi
    object_name "Processor"
    instance_regex ".*"
    counter_name_regex ".*"
    interval 30s
</source>
<source>
    type oms_omi
    object_name "Processor"
    instance_regex ".*"
    counter_name_regex ".*"
    interval 30s
</source>
The parameters in this element are described in the following table.
.*
_Total
(crond\|sshd)
.*
.+Swap.+
The following table lists the objects and counters that you can specify in the configuration file. More counters are available for certain applications. For more information, seeCollect performance counters for Linux applications in Azure Monitor.
The following configuration is the default for performance metrics:
<source>
    type oms_omi
    object_name "Physical Disk"
    instance_regex ".*"
    counter_name_regex ".*"
    interval 5m
</source>

<source>
    type oms_omi
    object_name "Logical Disk"
    instance_regex ".*"
    counter_name_regex ".*"
    interval 5m
</source>

<source>
    type oms_omi
    object_name "Processor"
    instance_regex ".*"
    counter_name_regex ".*"
    interval 30s
</source>

<source>
    type oms_omi
    object_name "Memory"
    instance_regex ".*"
    counter_name_regex ".*"
    interval 30s
</source>
<source>
    type oms_omi
    object_name "Physical Disk"
    instance_regex ".*"
    counter_name_regex ".*"
    interval 5m
</source>

<source>
    type oms_omi
    object_name "Logical Disk"
    instance_regex ".*"
    counter_name_regex ".*"
    interval 5m
</source>

<source>
    type oms_omi
    object_name "Processor"
    instance_regex ".*"
    counter_name_regex ".*"
    interval 30s
</source>

<source>
    type oms_omi
    object_name "Memory"
    instance_regex ".*"
    counter_name_regex ".*"
    interval 30s
</source>
Data collection
Azure Monitor collects all specified performance counters at their specified sample interval on all agents that have that counter installed. The data isn't aggregated. The raw data is available in all log query views for the duration specified by your Log Analytics workspace.
Performance record properties
Performance records have a type ofPerfand have the properties listed in the following table.
Sizing estimates
A rough estimate for collection of a particular counter at 10-second intervals is about 1 MB per day per instance. You can estimate the storage requirements of a particular counter with the following formula:
1 MB x (number of counters) x (number of agents) x (number of instances)
Log queries with performance records
The following table provides different examples of log queries that retrieve performance records.
Next steps
Collect performance counters from Linux applications, including MySQL and Apache HTTP Server.
Learn aboutlog queriesto analyze the data collected from data sources and solutions.
Export collected data toPower BIfor more visualizations and analysis.
Feedback
Was this page helpful?
Additional resources