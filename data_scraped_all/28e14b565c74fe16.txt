Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
PipAuthenticate@1 - Python pip authenticate v1 task
Article
2025-03-24
5 contributors
In this article
Use this task to provide authentication for thepipclient that installs Python distributions.
pip
Syntax
# Python pip authenticate v1
# Authentication task for the pip client used for installing Python distributions.
- task: PipAuthenticate@1
  inputs:
  # Feeds and Authentication
    #artifactFeeds: # string. My feeds (select below). 
    #pythonDownloadServiceConnections: # string. Feeds from external organizations. 
    #onlyAddExtraIndex: false # boolean. Don't set primary index URL. Default: false.
# Python pip authenticate v1
# Authentication task for the pip client used for installing Python distributions.
- task: PipAuthenticate@1
  inputs:
  # Feeds and Authentication
    #artifactFeeds: # string. My feeds (select below). 
    #pythonDownloadServiceConnections: # string. Feeds from external organizations. 
    #onlyAddExtraIndex: false # boolean. Don't set primary index URL. Default: false.
Inputs
artifactFeeds-My feeds (select below)string.
artifactFeeds
string
Specifies a comma-separated list of Azure Artifacts feeds to authenticate with pip.
pythonDownloadServiceConnections-Feeds from external organizationsstring.
pythonDownloadServiceConnections
string
Specifies a comma-separated list ofpip service connectionnames from external organizations to authenticate with pip.
onlyAddExtraIndex-Don't set primary index URLboolean. Default value:false.
onlyAddExtraIndex
boolean
false
If this task is set totrue, no feed will be set as the primary index URL. All of the configured feeds/endpoints will be set as extra index URLs.
true
Task control options
All tasks have control options in addition to their task inputs. For more information, seeControl options and common task properties.
Output variables
None.
Remarks
Provides authentication for thepipclient that is used to install Python distributions.
pip
When in my pipeline should I run this task?
What if I want my pipelines to be able to save from upstream sources?
My agent is behind a web proxy. Will PipAuthenticate set up pip to use my proxy?
My Pipeline needs to access a feed in a different project
When in my pipeline should I run this task?
This task must run before you use pip to download Python distributions to an authenticated package source such as Azure Artifacts. There are no other ordering requirements. Multiple invocations of this task will not stack credentials. Every run of the task will erase any previously stored credentials.
What if I want my pipelines to be able to save from upstream sources?
Check thepermissions tableto determine what permissions you want your pipeline to have. Then, determine whichidentityyou want to give those permissions to. To save packages from upstream sources, your identity needsFeed and Upstream Reader (Collaborator)permissions.
Feed and Upstream Reader (Collaborator)
My agent is behind a web proxy. Will PipAuthenticate set up pip to use my proxy?
No. While this task itself will work behind aweb proxy your agent has been configured to use, it does not configure pip to use the proxy.
To do so, you can:
Set the environment variableshttp_proxy,https_proxyand optionallyno_proxyto your proxy settings. SeePip official guidelinesfor details. These are commonly used variables, which other non-Python tools (e.g. curl) may also use.CautionThehttp_proxyandno_proxyvariables are case-sensitive on Linux and Mac operating systems and must be lowercase. Attempting to use an Azure Pipelines variable to set the environment variable will not work, as it will be converted to uppercase. Instead, set the environment variables on the self-hosted agent's machine and restart the agent.
http_proxy
https_proxy
no_proxy
Caution
Thehttp_proxyandno_proxyvariables are case-sensitive on Linux and Mac operating systems and must be lowercase. Attempting to use an Azure Pipelines variable to set the environment variable will not work, as it will be converted to uppercase. Instead, set the environment variables on the self-hosted agent's machine and restart the agent.
http_proxy
no_proxy
Add the proxy settings to thepip config filefile usingproxykey.
proxy
Use the--proxycommand-line option to specify proxy in the form[user:passwd@]proxy.server:port.
--proxy
[user:passwd@]proxy.server:port
My Pipeline needs to access a feed in a different project
If the pipeline is running in a different project than the project hosting the feed, you must set up the other project to grant read/write access to the build service. SeePackage permissions in Azure Pipelinesfor more details.
Examples
Download Python distributions from Azure Artifacts feeds without consulting official Python registry
In this example, we are setting authentication for downloading from private Azure Artifacts feeds. The authenticate task creates environment variablesPIP_INDEX_URLandPIP_EXTRA_INDEX_URLthat are required to download the distributions. The task sets the variables with authentication credentials the task generates for the provided Artifacts feeds.HelloTestPackagemust be present in eithermyTestFeed1ormyTestFeed2; otherwise, the install will fail.
PIP_INDEX_URL
PIP_EXTRA_INDEX_URL
HelloTestPackage
myTestFeed1
myTestFeed2
For project-scoped feeds that are in a different project than where the pipeline is running, you must manually give the project and the feed access to the pipeline's project's build service.
- task: PipAuthenticate@1
  displayName: 'Pip Authenticate'
  inputs:
    # Provide list of feed names which you want to authenticate.
    # Project scoped feeds must include the project name in addition to the feed name.
    artifactFeeds: 'project1/myTestFeed1, myTestFeed2'

# Use command line tool to 'pip install'.
- script: |
    pip install HelloTestPackage
- task: PipAuthenticate@1
  displayName: 'Pip Authenticate'
  inputs:
    # Provide list of feed names which you want to authenticate.
    # Project scoped feeds must include the project name in addition to the feed name.
    artifactFeeds: 'project1/myTestFeed1, myTestFeed2'

# Use command line tool to 'pip install'.
- script: |
    pip install HelloTestPackage
Consult official Python registry and then download Python distributions from Azure Artifacts feeds
In this example, we are setting authentication for downloading from a private Azure Artifacts feed,â¯butpypiis consulted first. The authenticate task creates an environment variablePIP_EXTRA_INDEX_URL, which contains auth credentials required to download the distributions.HelloTestPackagewill be downloaded from the authenticated feeds only if it's not present inpypi.
PIP_EXTRA_INDEX_URL
HelloTestPackage
For project-scoped feeds that are in a different project than where the pipeline is running, you must manually give the project and the feed access to the pipeline's project's build service.
- task: PipAuthenticate@1
  displayName: 'Pip Authenticate'
  inputs:
    # Provide list of feed names which you want to authenticate.
    # Project scoped feeds must include the project name in addition to the feed name.
    artifactFeeds: 'project1/myTestFeed1, myTestFeed2'
    # Setting this variable to "true" will force pip to get distributions from official python registry first and fallback to feeds mentioned above if distributions are not found there.
â¯â¯â¯ onlyAddExtraIndex: true

# Use command line tool to 'pip install'.
- script: |
â¯â¯  pip install HelloTestPackage
- task: PipAuthenticate@1
  displayName: 'Pip Authenticate'
  inputs:
    # Provide list of feed names which you want to authenticate.
    # Project scoped feeds must include the project name in addition to the feed name.
    artifactFeeds: 'project1/myTestFeed1, myTestFeed2'
    # Setting this variable to "true" will force pip to get distributions from official python registry first and fallback to feeds mentioned above if distributions are not found there.
â¯â¯â¯ onlyAddExtraIndex: true

# Use command line tool to 'pip install'.
- script: |
â¯â¯  pip install HelloTestPackage
Download Python distributions from other private Python servers
In this example, we are setting authentication for downloading from an external Python distribution server. Create apip service connectionentry for the external service. The authenticate task uses the service connection to create an environment variablePIP_INDEX_URL, which contains auth credentials required to download the distributions.HelloTestPackagehas to be present in thepypitestservice connection; otherwise, install will fail. If you wantpypito be consulted first, setonlyAddExtraIndextotrue.
PIP_INDEX_URL
HelloTestPackage
pypitest
onlyAddExtraIndex
true
- task: PipAuthenticate@1
  displayName: 'Pip Authenticate'
  inputs:
â¯â¯â¯ # In this case, name of the service connection is "pypitest". 
â¯â¯â¯ pythonDownloadServiceConnections: pypitest

# Use command line tool to 'pip install'.
- script: |
â¯â¯  pip install HelloTestPackage
- task: PipAuthenticate@1
  displayName: 'Pip Authenticate'
  inputs:
â¯â¯â¯ # In this case, name of the service connection is "pypitest". 
â¯â¯â¯ pythonDownloadServiceConnections: pypitest

# Use command line tool to 'pip install'.
- script: |
â¯â¯  pip install HelloTestPackage
Requirements
Feedback
Was this page helpful?
Additional resources