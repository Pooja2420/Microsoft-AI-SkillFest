Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Working with large Azure resource data sets
Article
2024-06-03
7 contributors
In this article
Azure Resource Graph is designed for working with and getting information about resources in your Azure environment. Resource Graph makes getting this data fast, even when querying thousands of records. Resource Graph has several options for working with these large data sets.
For guidance on working with queries at a high frequency, go toGuidance for throttled requests.
Data set result size
By default, Resource Graph limits any query to returning only 1,000 records. This control protects both the user and the service from unintentional queries that would result in large data sets. This event most often happens as a customer is experimenting with queries to find and filter resources in the way that suits their particular needs. This control is different than using thetoporlimitAzure Data Explorer language operators to limit the results.
Note
When usingfirst, it's recommended to order the results by at least one column withascordesc. Without sorting, the results returned are random and not repeatable.
first
asc
desc
The default limit can be overridden through all methods of interacting with Resource Graph. The following examples show how to change the data set size limit to200:
az graph query -q "Resources | project name | order by name asc" --first 200 --output table
az graph query -q "Resources | project name | order by name asc" --first 200 --output table
Search-AzGraph -Query "Resources | project name | order by name asc" -First 200
Search-AzGraph -Query "Resources | project name | order by name asc" -First 200
In theREST API, the control is$topand is part ofQueryRequestOptions.
$top
QueryRequestOptions
The control that'smost restrictivewins. For example, if your query uses thetoporlimitoperators and would result in more records thanfirst, the maximum records returned would be equal tofirst. Likewise, iftoporlimitis smaller thanfirst, the record set returned would be the smaller value configured bytoporlimit.
top
limit
first
first
top
limit
first
top
limit
Thefirstparameter has a maximum allowed value of1000.
first
CSV export result size limitation
When using the comma-separated value (CSV) export functionality of Azure Resource Graph Explorer, the result set is limited to 55,000 records. This limitation is a platform limit that can't be overridden by filing an Azure support ticket.
To download CSV results from the Azure portal, browse to the Azure Resource Graph Explorer and run a query. On the toolbar, selectDownload as CSV.
Skipping records
The next option for working with large data sets is theskipcontrol. This control allows your query to jump over or skip the defined number of records before returning the results.Skipis useful for queries that sort results in a meaningful way where the intent is to get at records somewhere in the middle of the result set. If the results needed are at the end of the returned data set, it's more efficient to use a different sort configuration and retrieve the results from the top of the data set instead.
skip
Skip
Note
When usingskip, it's recommended to order the results by at least one column withascordesc. Without sorting, the results returned are random and not repeatable. Iflimitortakeare used in the query,skipis ignored.
skip
asc
desc
limit
take
skip
The following examples show how to skip the first10records a query would result in, instead starting the returned result set with the 11th record:
az graph query -q "Resources | project name | order by name asc" --skip 10 --output table
az graph query -q "Resources | project name | order by name asc" --skip 10 --output table
Search-AzGraph -Query "Resources | project name | order by name asc" -Skip 10
Search-AzGraph -Query "Resources | project name | order by name asc" -Skip 10
In theREST API, the control is$skipand is part ofQueryRequestOptions.
$skip
QueryRequestOptions
Paging results
When it's necessary to break a result set into smaller sets of records for processing or because a result set would exceed the maximum allowed value of1000returned records, use paging. TheREST APIQueryResponseprovides values that indicate a results set was broken up:resultTruncatedand$skipToken.resultTruncatedis a Boolean value that informs the consumer if there are more records not returned in the response. This condition can also be identified when thecountproperty is less than thetotalRecordsproperty.totalRecordsdefines how many records that match the query.
QueryResponse
resultTruncated
$skipToken
resultTruncated
count
totalRecords
totalRecords
resultTruncatedistruewhen there are less resources available than a query is requesting or when paging is disabled or when paging isn't possible because:
resultTruncated
true
The query contains alimitorsample/takeoperator.
limit
sample
take
All output columns are eitherdynamicornulltype.
dynamic
null
WhenresultTruncatedistrue, the$skipTokenproperty isn't set.
resultTruncated
true
$skipToken
The following examples show how to skip the first 3,000 records and return thefirst1,000 records after those records skipped with Azure CLI and Azure PowerShell:
first
az graph query -q "Resources | project id, name | order by id asc" --first 1000 --skip 3000
az graph query -q "Resources | project id, name | order by id asc" --first 1000 --skip 3000
Search-AzGraph -Query "Resources | project id, name | order by id asc" -First 1000 -Skip 3000
Search-AzGraph -Query "Resources | project id, name | order by id asc" -First 1000 -Skip 3000
Important
The response won't include the$skipTokenif:
$skipToken
The query contains alimitorsample/takeoperator.
limit
sample
take
All output columns are eitherdynamicornulltype.
dynamic
null
For an example, go toNext page queryin the REST API docs.
Formatting results
Results of a Resource Graph query are provided in two formats,TableandObjectArray. The format is configured with theresultFormatparameter as part of the request options. TheTableformat is the default value forresultFormat.
Table
ObjectArray
resultFormat
Table
resultFormat
Results from Azure CLI are provided in JSON by default. Results in Azure PowerShell are aPSResourceGraphResponseobject, but they can quickly be converted to JSON using theConvertTo-Jsoncmdlet on thedataproperty. For other SDKs, the query results can be configured to output theObjectArrayformat.
PSResourceGraphResponse
ConvertTo-Json
data
ObjectArray
Format - Table
The default format,Table, returns results in a JSON format designed to highlight the column design and row values of the properties returned by the query. This format closely resembles data as defined in a structured table or spreadsheet with the columns identified first and then each row representing data aligned to those columns.
Table
Here's a sample of a query result with theTableformatting:
Table
{
  "totalRecords": 47,
  "count": 1,
  "data": {
    "columns": [
      {
        "name": "name",
        "type": "string"
      },
      {
        "name": "type",
        "type": "string"
      },
      {
        "name": "location",
        "type": "string"
      },
      {
        "name": "subscriptionId",
        "type": "string"
      }
    ],
    "rows": [
      [
        "veryscaryvm2-nsg",
        "microsoft.network/networksecuritygroups",
        "eastus",
        "11111111-1111-1111-1111-111111111111"
      ]
    ]
  },
  "facets": [],
  "resultTruncated": "true"
}
{
  "totalRecords": 47,
  "count": 1,
  "data": {
    "columns": [
      {
        "name": "name",
        "type": "string"
      },
      {
        "name": "type",
        "type": "string"
      },
      {
        "name": "location",
        "type": "string"
      },
      {
        "name": "subscriptionId",
        "type": "string"
      }
    ],
    "rows": [
      [
        "veryscaryvm2-nsg",
        "microsoft.network/networksecuritygroups",
        "eastus",
        "11111111-1111-1111-1111-111111111111"
      ]
    ]
  },
  "facets": [],
  "resultTruncated": "true"
}
Format - ObjectArray
TheObjectArrayformat also returns results in a JSON format. However, this design aligns to the key/value pair relationship common in JSON where the column and the row data are matched in array groups.
ObjectArray
Here's a sample of a query result with theObjectArrayformatting:
ObjectArray
{
  "totalRecords": 47,
  "count": 1,
  "data": [
    {
      "name": "veryscaryvm2-nsg",
      "type": "microsoft.network/networksecuritygroups",
      "location": "eastus",
      "subscriptionId": "11111111-1111-1111-1111-111111111111"
    }
  ],
  "facets": [],
  "resultTruncated": "true"
}
{
  "totalRecords": 47,
  "count": 1,
  "data": [
    {
      "name": "veryscaryvm2-nsg",
      "type": "microsoft.network/networksecuritygroups",
      "location": "eastus",
      "subscriptionId": "11111111-1111-1111-1111-111111111111"
    }
  ],
  "facets": [],
  "resultTruncated": "true"
}
Query timeout
Azure Resource Graph enforces a query timeout of 30 seconds that aligns with Azure Resource Manager.
Possible solutions:
Retry the query using a smaller scope. For example, query fewer subscriptions.
Queries that usejoinshould have smaller result sets on the left side of thejoin.
join
join
Next steps
Learn more aboutUnderstanding the Azure Resource Graph query language.
Learn more about how toexplore resources.
Feedback
Was this page helpful?
Additional resources