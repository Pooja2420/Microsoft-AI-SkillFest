Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
pivot plugin
Article
2024-08-12
3 contributors
In this article
Applies to: 창혵Microsoft Fabric창혵Azure Data Explorer
Rotates a table by turning the unique values from one column in the input table into multiple columns in the output table and performs aggregations as required on any remaining column values that will appear in the final output.
Note
If the OutputSchema is not specified, the output schema of thepivotplugin is based on the input data. Therefore, multiple executions of the plugin using different data inputs, may produce different output schema. This also means that the query that is referencing unpacked columns may become 'broken' at any time. For this reason, we do not recommend using this plugin for automation jobs without specifying the OutputSchema function.
pivot
Syntax
T | evaluate pivot(pivotColumn[,aggregationFunction] [,column1[,column2...]])[:OutputSchema]
T | evaluate pivot(
[,
] [,
[,
]])
:
Learn more aboutsyntax conventions.
Parameters
string
string
min()
max()
take_any()
sum()
dcount()
avg()
stdev()
variance()
make_list()
make_bag()
make_set()
count()
count()
string
pivot
(
:
,
)
Returns
Pivot returns the rotated table with specified columns (column1,column2, ...) plus all unique values of the pivot columns. Each cell for the pivoted columns will contain the aggregate function computation.
Examples
Pivot by a column
For each EventType and State starting with 'AL', count the number of events of this type in this state.
Run the query
StormEvents
| project State, EventType
| where State startswith "AL"
| where EventType has "Wind"
| evaluate pivot(State)
StormEvents
| project State, EventType
| where State startswith "AL"
| where EventType has "Wind"
| evaluate pivot(State)
Output
Pivot by a column with aggregation function
For each EventType and State starting with 'AR', display the total number of direct deaths.
Run the query
StormEvents
| where State startswith "AR"
| project State, EventType, DeathsDirect
| where DeathsDirect > 0
| evaluate pivot(State, sum(DeathsDirect))
StormEvents
| where State startswith "AR"
| project State, EventType, DeathsDirect
| where DeathsDirect > 0
| evaluate pivot(State, sum(DeathsDirect))
Output
Pivot by a column with aggregation function and a single additional column
Result is identical to previous example.
Run the query
StormEvents
| where State startswith "AR"
| project State, EventType, DeathsDirect
| where DeathsDirect > 0
| evaluate pivot(State, sum(DeathsDirect), EventType)
StormEvents
| where State startswith "AR"
| project State, EventType, DeathsDirect
| where DeathsDirect > 0
| evaluate pivot(State, sum(DeathsDirect), EventType)
Output
Specify the pivoted column, aggregation function, and multiple additional columns
For each event type, source, and state, sum the number of direct deaths.
Run the query
StormEvents
| where State startswith "AR"
| where DeathsDirect > 0
| evaluate pivot(State, sum(DeathsDirect), EventType, Source)
StormEvents
| where State startswith "AR"
| where DeathsDirect > 0
| evaluate pivot(State, sum(DeathsDirect), EventType, Source)
Output
Pivot with a query-defined output schema
The following example selects specific columns in the StormEvents table.
It uses an explicit schema definition that allows various optimizations to be evaluated before running the actual query.
Run the query
StormEvents
| project State, EventType
| where EventType has "Wind"
| evaluate pivot(State): (EventType:string, ALABAMA:long, ALASKA:long)
StormEvents
| project State, EventType
| where EventType has "Wind"
| evaluate pivot(State): (EventType:string, ALABAMA:long, ALASKA:long)
Output
Feedback
Was this page helpful?
Additional resources