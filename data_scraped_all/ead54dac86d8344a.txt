Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Checklist: Best practices for SQL Server on Azure VMs
Article
2025-03-20
23 contributors
In this article
Applies to:SQL Server on Azure VM
This article provides a quick checklist as a series of best practices and guidelines to optimize performance of your SQL Server on Azure Virtual Machines (VMs).
For comprehensive details, see the other articles in this series:VM size,Storage,Security,HADR configuration,Collect baseline.
EnableSQL Assessment for SQL Server on Azure VMsand your SQL Server will be evaluated against known best practices with results  on theSQL VM management pageof the Azure portal.
For videos about the latest features to optimize SQL Server VM performance and automate management, review the following Data Exposed videos:
Caching and Storage Capping
Automate Management with the SQL Server IaaS Agent extension
Use Azure Monitor Metrics to Track VM Cache Health
Get the best price-performance for your SQL Server workloads on Azure VM
Using PerfInsights to Evaluate Resource Health and Troubleshoot
Best Price-Performance with Ebdsv5 Series
Optimally Configure SQL Server on Azure Virtual Machines with SQL Assessment
New and Improved SQL Server on Azure VM deployment and management experience
Overview
While running SQL Server on Azure Virtual Machines, continue using the same database performance tuning options that are applicable to SQL Server in on-premises server environments. However, the performance of a relational database in a public cloud depends on many factors, such as the size of a virtual machine, and the configuration of the data disks.
There's typically a trade-off between optimizing for costs and optimizing for performance. This performance best practices series is focused on getting thebestperformance for SQL Server on Azure Virtual Machines. If your workload is less demanding, you might not require every recommended optimization. Consider your performance needs, costs, and workload patterns as you evaluate these recommendations.
Manually install SQL Server to an Azure VM
If you plan to manually install SQL Server on an Azure VM, consider the following:
Make sure you have a product key ready for your installation.
Avoidunsupportedconfigurations such as:More than 64 vCores per NUMA node.Storage with 8-KB sector size.Azure Virtual Machine Scale Sets.
More than 64 vCores per NUMA node.
Storage with 8-KB sector size.
Azure Virtual Machine Scale Sets.
If they don't already exist, create the folders for your SQL Server installation and data files prior to launching the installation media.
Copy the installation media to a local drive instead of installing directly from the mounted ISO.
After installation, register your SQL Server VM with theSQL Server IaaS Agent Extensionto automate management tasks.
Place thetempdbdatabase on thelocal SSD ephemeral storagewhen possible.
tempdb
VM size
The checklist in this section covers theVM size best practicesfor SQL Server on Azure VMs.
Identify workload performance characteristics to determine the appropriate VM size for your business.
If you're migrating to Azure, use tools likeData Migration AssistantandSKU recommendationto find the right VM size for your existing SQL Server workload, and then migrate withAzure Data Studio.
Use Azure Marketplace images to deploy your SQL Server VMs as the SQL Server settings and storage options are configured for optimal performance.
Use VM sizes with 4 or more vCPUs.
Use memory optimized virtual machine sizes for the best performance of SQL Server workloads.TheEdsv5-series, and theMsv3 and Mdsv3-seriesoffer an optimal memory-to-vCore ratio recommended for OLTP workloads.TheMbdsv3-series VMsoffer the best performance for SQL Server workloads on Azure VMs. Consider this series first for mission critical OLTP and data warehouse SQL Server workloads.TheEbdsv5-seriesprovides a high I/O throughput-to-vCore ratio, along with a memory-to-vCore ratio of 8:1. This series offers the best price-performance for SQL Server workloads on Azure VMs. Consider these VMs first for most SQL Server workloads.TheM-series familyoffers VMs with the highest memory allocation in Azure.TheMbsv3 and Mbdsv3 seriesVMs provide a high memory allocation and the highest I/O throughput-to-vCore ratio amongst the M-series family, along with a consistent memory-to-vCore ratio of at least 8:1.
TheEdsv5-series, and theMsv3 and Mdsv3-seriesoffer an optimal memory-to-vCore ratio recommended for OLTP workloads.
TheMbdsv3-series VMsoffer the best performance for SQL Server workloads on Azure VMs. Consider this series first for mission critical OLTP and data warehouse SQL Server workloads.
TheEbdsv5-seriesprovides a high I/O throughput-to-vCore ratio, along with a memory-to-vCore ratio of 8:1. This series offers the best price-performance for SQL Server workloads on Azure VMs. Consider these VMs first for most SQL Server workloads.
TheM-series familyoffers VMs with the highest memory allocation in Azure.
TheMbsv3 and Mbdsv3 seriesVMs provide a high memory allocation and the highest I/O throughput-to-vCore ratio amongst the M-series family, along with a consistent memory-to-vCore ratio of at least 8:1.
Start development environments with the lower-tier D-Series, B-Series, or Av2-series and grow your environment over time.
CheckVM supportabilityto avoid unsupported configurations.
Caution
SQL Server isn't supported on VM sizes that deploy with an uninitialized ephemeral disk. To learn more, reviewVM deployment and SQL Server failures.
Storage
The checklist in this section covers thestorage best practicesfor SQL Server on Azure VMs.
Monitor the application anddetermine storage bandwidth and latency requirementsfor SQL Server data, log, andtempdbfiles before choosing the disk type.
tempdb
If available, configure thetempdbdata and log files on the D: local SSD volume when you deploy anew virtual machine, or after you'veinstalled SQL Server manually. The SQL IaaS Agent extension handles the folder and permissions needed upon re-provisioning.
tempdb
To optimize storage performance, plan for highest uncached IOPS available and use data caching as a performance feature for data reads while avoidingvirtual machine and disks capping.
When using theEbdsv5 or Ebsv5series SQL Server VMs, usePremium SSD v2for the best price performance. You can deploy your SQL Server VM with Premium SSD v2 by using the Azure portal (currently in preview).
If your workload requires more than 160,000 IOPS, usePremium SSD v2orAzure Ultra Disks.
Place data, log, andtempdbfiles on separate drives.For the data drive, usepremium P30 and P40 or smaller disksto ensure the availability of cache support. When using theEbdsv5 VM series, usePremium SSD v2which provides better price-performance for workloads that require high IOPS and I/O throughput.For the log drive plan for capacity and test performance versus cost while evaluating eitherPremium SSD v2or Premium SSDP30 - P80 disksIf submillisecond storage latency is required, use eitherPremium SSD v2orAzure ultra disksfor the transaction log.For M-series virtual machine deployments, considerwrite acceleratorover using Azure ultra disks.Placetempdbon thetemporary disk(the temporary disk is ephemeral, and defaults toD:\) for most SQL Server workloads that aren't part of a failover cluster instance (FCI) after choosing the optimal VM size.If the capacity of the local drive isn't enough fortempdb, consider sizing up the VM. For more information, seeData file caching policies.For failover cluster instances (FCI) placetempdbon the shared storage.If the FCI workload is heavily dependent ontempdbdisk performance, then as an advanced configuration placetempdbon the local ephemeral SSD (defaultD:\) drive, which isn't part of FCI storage. This configuration needs custom monitoring and action to ensure the local ephemeral SSD (defaultD:\) drive is available all the time as any failures of this drive won't trigger action from FCI.
tempdb
For the data drive, usepremium P30 and P40 or smaller disksto ensure the availability of cache support. When using theEbdsv5 VM series, usePremium SSD v2which provides better price-performance for workloads that require high IOPS and I/O throughput.
For the log drive plan for capacity and test performance versus cost while evaluating eitherPremium SSD v2or Premium SSDP30 - P80 disksIf submillisecond storage latency is required, use eitherPremium SSD v2orAzure ultra disksfor the transaction log.For M-series virtual machine deployments, considerwrite acceleratorover using Azure ultra disks.
If submillisecond storage latency is required, use eitherPremium SSD v2orAzure ultra disksfor the transaction log.
For M-series virtual machine deployments, considerwrite acceleratorover using Azure ultra disks.
Placetempdbon thetemporary disk(the temporary disk is ephemeral, and defaults toD:\) for most SQL Server workloads that aren't part of a failover cluster instance (FCI) after choosing the optimal VM size.If the capacity of the local drive isn't enough fortempdb, consider sizing up the VM. For more information, seeData file caching policies.
D:\
If the capacity of the local drive isn't enough fortempdb, consider sizing up the VM. For more information, seeData file caching policies.
tempdb
For failover cluster instances (FCI) placetempdbon the shared storage.If the FCI workload is heavily dependent ontempdbdisk performance, then as an advanced configuration placetempdbon the local ephemeral SSD (defaultD:\) drive, which isn't part of FCI storage. This configuration needs custom monitoring and action to ensure the local ephemeral SSD (defaultD:\) drive is available all the time as any failures of this drive won't trigger action from FCI.
tempdb
If the FCI workload is heavily dependent ontempdbdisk performance, then as an advanced configuration placetempdbon the local ephemeral SSD (defaultD:\) drive, which isn't part of FCI storage. This configuration needs custom monitoring and action to ensure the local ephemeral SSD (defaultD:\) drive is available all the time as any failures of this drive won't trigger action from FCI.
tempdb
tempdb
D:\
D:\
Stripe multiple Azure data disks usingStorage Spacesto increase I/O bandwidth up to the target virtual machine's IOPS and throughput limits.
Sethost cachingtoread-onlyfor data file disks.
Sethost cachingtononefor log file disks.Don't enable read/write caching on disks that contain SQL Server data or log files.Always stop the SQL Server service before changing the cache settings of your disk.
Don't enable read/write caching on disks that contain SQL Server data or log files.
Always stop the SQL Server service before changing the cache settings of your disk.
When migrating several different workloads to the cloud,Azure Elastic SANcan be a cost-effective consolidated storage solution. However, when using Azure Elastic SAN, achieving desired IOPS/throughput for SQL Server workloads often requires overprovisioning capacity. While not typically appropriate for single SQL Server workloads, you can attain a cost-effective solution when combining low-performance workloads with SQL Server.
For development and test workloads, and long-term backup archival consider using standard storage. It isn't recommended to use Standard HDD/SSD for production workloads.
Credit-based Disk Bursting(P1-P20) should only be considered for smaller dev/test workloads and departmental systems.
To optimize storage performance, plan for highest uncached IOPS available, and use data caching as a performance feature for data reads while avoidingvirtual machine and disks capping/throttling.
Format your data disk to use 64-KB allocation unit size for all data files placed on a drive other than the temporaryD:\drive (which has a default of 4 KB). SQL Server VMs deployed through Azure Marketplace come with data disks formatted with allocation unit size and interleave for the storage pool set to 64 KB.
D:\
Configure the storage account in the same region as the SQL Server VM.
Disable Azure geo-redundant storage (geo-replication) and use LRS (local redundant storage) on the storage account.
Enable theSQL Best Practices Assessmentto identify possible performance issues and evaluate that your SQL Server VM is configured to follow best practices.
Review and monitor disk and VM limits usingStorage IO utilization metrics.
Exclude SQL Server filesfrom antivirus software scanning, including data files, log files, and backup files.
Security
The checklist in this section covers thesecurity best practicesfor SQL Server on Azure VMs.
SQL Server features and capabilities provide methods of securing data at the database level that can be combined with security features at the infrastructure level. Together, these features providedefense-in-depthat the infrastructure level for cloud-based and hybrid solutions. In addition, with Azure security measures, it's possible to encrypt your sensitive data, protect virtual machines from viruses and malware, secure network traffic, identify and detect threats, meet compliance requirements, and provides a single method for administration and reporting for any security need in the hybrid cloud.
UseMicrosoft Defender for Cloudto evaluate and take action to improve the security posture of your data environment. Capabilities such asAzure Advanced Threat Protection (ATP)can be used across your hybrid workloads to improve security evaluation and give the ability to react to risks. Registering your SQL Server VM with theSQL IaaS Agent extensionsurfaces Microsoft Defender for Cloud assessments within theSQL virtual machine resourceof the Azure portal.
UseMicrosoft Defender for SQLto discover and mitigate potential database vulnerabilities, as well as detect anomalous activities that could indicate a threat to your SQL Server instance and database layer.
Vulnerability Assessmentis a part ofMicrosoft Defender for SQLthat can discover and help remediate potential risks to your SQL Server environment. It provides visibility into your security state, and includes actionable steps to resolve security issues.
UseAzure confidential VMsto reinforce protection of your data in-use, and data-at-rest against host operator access. Azure confidential VMs allow you to confidently store your sensitive data in the cloud and meet strict compliance requirements.
If you're on SQL Server 2022, consider usingMicrosoft Entra authenticationto connect to your instance of SQL Server.
Azure Advisoranalyzes your resource configuration and usage telemetry and then recommends solutions that can help you improve the cost effectiveness, performance, high availability, and security of your Azure resources. Use Azure Advisor at the virtual machine, resource group, or subscription level to help identify and apply best practices to optimize your Azure deployments.
UseAzure Disk Encryptionwhen your compliance and security needs require you to encrypt the data end-to-end using your encryption keys, including encryption of the ephemeral (locally attached temporary) disk.
Managed Disks are encryptedat rest by default using Azure Storage Service Encryption, where the encryption keys are Microsoft-managed keys stored in Azure.
For a comparison of the managed disk encryption options, review themanaged disk encryption comparison chart
Management ports should be closed on your virtual machines - Open remote management ports expose your VM to a high level of risk from internet-based attacks. These attacks attempt to brute force credentials to gain admin access to the machine.
Turn onJust-in-time (JIT) accessfor Azure virtual machines
UseAzure Bastionover Remote Desktop Protocol (RDP).
Lock down ports and only allow the necessary application traffic usingAzure Firewallwhich is a managed Firewall as a Service (FaaS) that grants/ denies server access based on the originating IP address.
UseNetwork Security Groups (NSGs)to filter network traffic to, and from, Azure resources on Azure Virtual Networks
UseApplication Security Groupsto group servers together with similar port filtering requirements, with similar functions, such as web servers and database servers.
For web and application servers useAzure Distributed Denial of Service (DDoS) protection. DDoS attacks are designed to overwhelm and exhaust network resources, making apps slow or unresponsive. It's common for DDoS attacks to target user interfaces. Azure DDoS protection sanitizes unwanted network traffic, before it impacts service availability
Use VM extensions to help address anti-malware, desired state, threat detection, prevention, and remediation to address threats at the operating system, machine, and network levels:Guest Configuration extensionperforms audit and configuration operations inside virtual machines.Network Watcher Agent virtual machine extension for Windows and Linuxmonitors network performance, diagnostic, and analytics service that allows monitoring of Azure networks.Microsoft Antimalware Extension for Windowsto help identify and remove viruses, spyware, and other malicious software, with configurable alerts.Evaluate third party extensionssuch as Symantec Endpoint Protection for Windows VM (/azure/virtual-machines/extensions/symantec)
Guest Configuration extensionperforms audit and configuration operations inside virtual machines.
Network Watcher Agent virtual machine extension for Windows and Linuxmonitors network performance, diagnostic, and analytics service that allows monitoring of Azure networks.
Microsoft Antimalware Extension for Windowsto help identify and remove viruses, spyware, and other malicious software, with configurable alerts.
Evaluate third party extensionssuch as Symantec Endpoint Protection for Windows VM (/azure/virtual-machines/extensions/symantec)
UseAzure Policyto create business rules that can be applied to your environment. Azure Policies evaluate Azure resources by comparing the properties of those resources against rules defined in JSON format.
Azure Blueprints enables cloud architects and central information technology groups to define a repeatable set of Azure resources that implements and adheres to an organization's standards, patterns, and requirements. Azure Blueprints aredifferent than Azure Policies.
Use Windows Server 2019 or Windows Server 2022 to beFIPScompliant with SQL Server on Azure VMs.
SQL Server features
The following is a quick checklist of best practices for SQL Server configuration settings when running your SQL Server instances in an Azure virtual machine in production:
Enabledatabase page compressionwhere appropriate.
Enablebackup compression.
Enableinstant file initializationfor data files.
Limitautogrowthof the database.
Disableautoshrinkof the database.
Disable autoclose of the database.
Move all databases to data disks, includingsystem databases.
Move SQL Server error log and trace file directories to data disks.
Configure default backup and database file locations.
Set maxSQL Server memory limitto leave enough memory for the Operating System. (Use Memory\Available Bytesto monitor the operating system memory health).
Enablelock pages in memory.
Enableoptimize for adhoc workloadsfor OLTP heavy environments.
Evaluate and apply thelatest cumulative updatesfor the installed versions of SQL Server.
EnableQuery Storeon all production SQL Server databasesfollowing best practices.
Enableautomatic tuningon mission critical application databases.
Ensure that alltempdb best practicesare followed.
Use the recommended number of files, using multipletempdbdata files starting with one file per core, up to eight files.
tempdb
If available, configure thetempdbdata and log files on the D: local SSD volume. The SQL IaaS Agent extension handles the folder and permissions needed upon reprovisioning.
tempdb
Schedule SQL Server Agent jobs to runDBCC CHECKDB,index reorganize,index rebuild, andupdate statisticsjobs.
Monitor and manage the health and size of the SQL Servertransaction log file.
Take advantage of any newSQL Server featuresavailable for the version being used.
Be aware of the differences insupported featuresbetween the editions you're considering deploying.
Exclude SQL Server filesfrom antivirus software scanning. This includes data files, log files, and backup files.
Azure features
The following is a quick checklist of best practices for Azure-specific guidance when running your SQL Server on Azure VM:
Register withthe SQL IaaS Agent Extensionto unlock a number offeature benefits.
Use the bestbackup and restore strategyfor your SQL Server workload.
EnsureAccelerated Networking is enabledon the virtual machine.
UseMicrosoft Defender for Cloudto improve the overall security posture of your virtual machine deployment.
UseMicrosoft Defender for Cloud, integrated withMicrosoft Defender for Cloud, for specificSQL Server VM coverageincluding vulnerability assessments, and just-in-time access, which reduces the attack service while allowing legitimate users to access virtual machines when necessary. To learn more, seevulnerability assessments,enable vulnerability assessments for SQL Server VMsandjust-in-time access.
UseAzure Advisorto addressperformance,cost,reliability,operational excellence, andsecurity recommendations.
UseAzure Monitorto collect, analyze, and act on telemetry data from your SQL Server environment. This includes identifying infrastructure issues withVM insightsand monitoring data withLog Analyticsfor deeper diagnostics.
EnableAutoshutdownfor development and test environments.
Implement a high availability and disaster recovery (HADR) solution that meets your business continuity SLAs, see theHADR optionsoptions available for SQL Server on Azure VMs.
Use the Azure portal (support + troubleshooting) to evaluateresource healthand history; submit new support requests when needed.
HADR configuration
The checklist in this section covers theHADR best practicesfor SQL Server on Azure VMs.
High availability and disaster recovery (HADR) features, such as theAlways On availability groupand thefailover cluster instancerely on underlyingWindows Server Failover Clustertechnology. Review the best practices for modifying your HADR settings to better support the cloud environment.
For your Windows cluster, consider these best practices:
Deploy your SQL Server VMs to multiple subnets whenever possible to avoid the dependency on an Azure Load Balancer or a distributed network name (DNN) to route traffic to your HADR solution.
Change the cluster to less aggressive parameters to avoid unexpected outages from transient network failures or Azure platform maintenance. To learn more, seeheartbeat and threshold settings. For Windows Server 2012 and later, use the following recommended values:SameSubnetDelay:  1 secondSameSubnetThreshold: 40 heartbeatsCrossSubnetDelay: 1 secondCrossSubnetThreshold:  40 heartbeats
SameSubnetDelay:  1 second
SameSubnetThreshold: 40 heartbeats
CrossSubnetDelay: 1 second
CrossSubnetThreshold:  40 heartbeats
Place your VMs in an availability set or different availability zones.  To learn more, seeVM availability settings.
Use a single NIC per cluster node.
Configure clusterquorum votingto use 3 or more odd number of votes. Don't assign votes to DR regions.
Carefully monitorresource limitsto avoid unexpected restarts or failovers due to resource constraints.Ensure your OS, drivers, and SQL Server are at the latest builds.Optimize performance for SQL Server on Azure VMs. Review the other sections in this article to learn more.Reduce or spread out workload to avoid resource limits.Move to a VM or disk that his higher limits to avoid constraints.
Ensure your OS, drivers, and SQL Server are at the latest builds.
Optimize performance for SQL Server on Azure VMs. Review the other sections in this article to learn more.
Reduce or spread out workload to avoid resource limits.
Move to a VM or disk that his higher limits to avoid constraints.
For your SQL Server availability group or failover cluster instance, consider these best practices:
If you're experiencing frequent unexpected failures, follow the performance best practices outlined in the rest of this article.
If optimizing SQL Server VM performance doesn't resolve your unexpected failovers, considerrelaxing the monitoringfor the availability group or failover cluster instance. However, doing so may not address the underlying source of the issue and could mask symptoms by reducing the likelihood of failure. You may still need to investigate and address the underlying root cause. For Windows Server 2012 or higher, use the following recommended values:Lease timeout: Use this equation to calculate the maximum lease time-out value:Lease timeout < (2 * SameSubnetThreshold * SameSubnetDelay).Start with 40 seconds. If you're using the relaxedSameSubnetThresholdandSameSubnetDelayvalues recommended previously, don't exceed 80 seconds for the lease timeout value.Max failures in a specified period: Set this value to 6.
Lease timeout: Use this equation to calculate the maximum lease time-out value:Lease timeout < (2 * SameSubnetThreshold * SameSubnetDelay).Start with 40 seconds. If you're using the relaxedSameSubnetThresholdandSameSubnetDelayvalues recommended previously, don't exceed 80 seconds for the lease timeout value.
Lease timeout < (2 * SameSubnetThreshold * SameSubnetDelay)
SameSubnetThreshold
SameSubnetDelay
Max failures in a specified period: Set this value to 6.
When using the virtual network name (VNN) and an Azure Load Balancer to connect to your HADR solution, specifyMultiSubnetFailover = truein the connection string, even if your cluster only spans one subnet.If the client doesn't supportMultiSubnetFailover = Trueyou may need to setRegisterAllProvidersIP = 0andHostRecordTTL = 300to cache client credentials for shorter durations. However, doing so may cause additional queries to the DNS server.
MultiSubnetFailover = true
If the client doesn't supportMultiSubnetFailover = Trueyou may need to setRegisterAllProvidersIP = 0andHostRecordTTL = 300to cache client credentials for shorter durations. However, doing so may cause additional queries to the DNS server.
MultiSubnetFailover = True
RegisterAllProvidersIP = 0
HostRecordTTL = 300
To connect to your HADR solution using the distributed network name (DNN), consider the following:You must use a client driver that supportsMultiSubnetFailover = True, and this parameter must be in the connection string.Use a unique DNN port in the connection string when connecting to the DNN listener for an availability group.
You must use a client driver that supportsMultiSubnetFailover = True, and this parameter must be in the connection string.
MultiSubnetFailover = True
Use a unique DNN port in the connection string when connecting to the DNN listener for an availability group.
Use a database mirroring connection string for a basic availability group to bypass the need for a load balancer or DNN.
Validate the sector size of your VHDs before deploying your high availability solution to avoid having misaligned I/Os. SeeKB3009974to learn more.
If the SQL Server database engine, Always On availability group listener, or failover cluster instance health probe are configured to use a port between 49,152 and 65,536 (thedefault dynamic port range for TCP/IP), add an exclusion for each port. Doing so prevents other systems from being dynamically assigned the same port. The following example creates an exclusion for port 59999:netsh int ipv4 add excludedportrange tcp startport=59999 numberofports=1 store=persistent
netsh int ipv4 add excludedportrange tcp startport=59999 numberofports=1 store=persistent
Performance troubleshooting
The following is a list of resources that help you further troubleshoot SQL Server performance issues.
Troubleshoot high-CPU-usage issues
Understand and resolve blocking problems
Troubleshoot slow-running queries
Troubleshoot slow performance caused by I/O issues
Troubleshoot query time-out errors
Troubleshoot out of memory or low memory
Performance dashboardprovides fast insight into SQL Server performance state.
Related content
VM size
Storage
Security
HADR settings
Collect baseline
Consider enablingSQL Assessment for SQL Server on Azure VMs.
Review other SQL Server Virtual Machine articles atSQL Server on Azure Virtual Machines Overview. If you have questions about SQL Server virtual machines, see theFrequently Asked Questions.
Feedback
Was this page helpful?
Additional resources