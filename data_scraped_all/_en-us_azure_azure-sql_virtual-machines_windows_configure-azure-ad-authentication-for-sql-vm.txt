Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Enable Microsoft Entra authentication for SQL Server on Azure VMs
Article
2025-02-26
14 contributors
In this article
Applies to:SQL Server on Azure VM
This article teaches you to enable authentication with Microsoft Entra ID (formerly Azure Active Directory) for your SQL Server on Azure virtual machines (VMs).
Note
It's possible to configure Microsoft Entra authentication forunregistered instancesof SQL Server, such as when you have multiple SQL Server instances on the same VM.
Overview
Starting with SQL Server 2022, you can connect to SQL Server on Azure VMs using one of the following Microsoft Entra authentication methods:
Passwordoffers authentication with Microsoft Entra credentials
Universal with MFAadds multifactor authentication
Integrateduses federation providers likeActive Directory Federation Services(ADFS) to enable single sign-on (SSO) experiences
Service Principalenables authentication from Azure applications
Managed Identityenables authentication from applications assigned Microsoft Entra identities
When you create a Microsoft Entra login for SQL Server and when a user connects using that login, SQL Server uses a managed identity to query Microsoft Graph. When you enable Microsoft Entra authentication for your SQL Server on Azure VM, you need to provide a managed identity that SQL Server can use to communicate with Microsoft Entra ID. This managed identity needs to have permissions to query Microsoft Graph.
When enabling amanaged identityfor a resource in Azure, the security boundary of the identity is the resource to which it's attached. For example, the security boundary for a virtual machine with managed identities for Azure resources enabled is the virtual machine. Any code running on that VM is able to call the managed identities endpoint and request tokens. When enabling a managed identity for SQL Server on Azure VMs, the identity is attached to the virtual machine, so the security boundary is the virtual machine. The experience is similar when working with other resources that support managed identities. For more information, read theManaged Identities FAQ.
The system-assigned and user-assigned managed identities used for Microsoft Entra authentication with SQL Server on Azure VMs offer the following benefits:
System-assigned managed identityoffers a simplified configuration process. Since the managed identity has the same lifetime as the virtual machine, there's no need to delete it separately when you delete the virtual machine.
User-assigned managed identityoffers scalability since it can be attached to, and used for Microsoft Entra authentication, for multiple SQL Server on Azure VMs.
To get started with managed identities, reviewConfigure managed identities using the Azure portal.
Prerequisites
To enable Microsoft Entra authentication on your SQL Server, you need the following prerequisites:
Use SQL Server 2022.
Register SQL Server VM with theSQL Server Iaas Agent extensionin any cloud.
Have an existingsystem-assignedoruser-assignedmanaged identity in the same Microsoft Entra tenant as your SQL Server VM.Configure managed identities using the Azure portalto learn more.
Azure CLI 2.48.0 or laterif you intend to use the Azure CLI to configure Microsoft Entra authentication for your SQL Server VM.
Grant permissions
The managed identity you choose to facilitate authentication between SQL Server and Microsoft Entra ID has to have the following three Microsoft Graph application permissions (app roles):User.Read.All,GroupMember.Read.All, andApplication.Read.All.
User.Read.All
GroupMember.Read.All
Application.Read.All
Alternatively, adding the managed identity to theMicrosoft Entra Directory Readers rolegrants sufficient permissions. Another way to assign theDirectory Readersrole to a managed identity is to assign theDirectory Readers roleto a group in Microsoft Entra ID. The group owners can then add the Virtual Machine managed identity as a member of this group. This minimizes involving Microsoft Entra role admins and delegates the responsibility to the group owners.
Add managed identity to the role
This section explains how to add your managed identity to theDirectory Readersrole in Microsoft Entra ID. You need to have Privileged Role Administrator privileges to make changes to the Directory Readers role assignments. If you don't have sufficient permission, work with your Microsoft Entra administrator to follow these steps.
To grant your managed identity theDirectory Readersrole, follow these steps:
OpenMicrosoft Entra ID Roles and administratorsin the Azure portal:
OpenMicrosoft Entra ID Roles and administratorsin the Azure portal:
TypeDirectory readersin the search box, and then select the roleDirectory readersto open theDirectory Readers | Assignmentspage:
TypeDirectory readersin the search box, and then select the roleDirectory readersto open theDirectory Readers | Assignmentspage:

On theDirectory Readers | Assignmentspage, select+ Add assignmentsto open theAdd assignmentpage.
On theDirectory Readers | Assignmentspage, select+ Add assignmentsto open theAdd assignmentpage.

On theAdd assignmentspage, chooseNo member selectedunderSelect membersto open theSelect a memberpage.
On theAdd assignmentspage, chooseNo member selectedunderSelect membersto open theSelect a memberpage.

On theSelect a memberpage, search for the name of the managed identity you want to use with your SQL Server VM and add it to theDirectory Readersrole. For system-assigned managed identities, search for the name of the VM. UseSelectto confirm the identity and go back to theAdd assignmentspage.
On theSelect a memberpage, search for the name of the managed identity you want to use with your SQL Server VM and add it to theDirectory Readersrole. For system-assigned managed identities, search for the name of the VM. UseSelectto confirm the identity and go back to theAdd assignmentspage.

Verify that you see your chosen identity underSelect membersand then selectNext.
Verify that you see your chosen identity underSelect membersand then selectNext.

Verify that your assignment type is set toActiveand the box next toPermanently assignedis checked. Enter a business justification, such asAdding Directory Reader role permissions to the system-assigned identity for VM2and then selectAssignto save your settings and go back to theDirectory Readers | Assignmentspage.
Verify that your assignment type is set toActiveand the box next toPermanently assignedis checked. Enter a business justification, such asAdding Directory Reader role permissions to the system-assigned identity for VM2and then selectAssignto save your settings and go back to theDirectory Readers | Assignmentspage.

On theDirectory Readers | Assignmentspage, confirm you see your newly added identity underDirectory Readers.
On theDirectory Readers | Assignmentspage, confirm you see your newly added identity underDirectory Readers.

Add app role permissions
You can useAzure PowerShellto grant app roles to a managed identity. To do so, follow these steps:
Note
Azure AD and MSOnline PowerShell modules are deprecated as of March 30, 2024. To learn more, read thedeprecation update. After this date, support for these modules are limited to migration assistance to Microsoft Graph PowerShell SDK and security fixes. The deprecated modules will continue to function through March, 30 2025.
We recommend migrating toMicrosoft Graph PowerShellto interact with Microsoft Entra ID (formerly Azure AD). For common migration questions, refer to theMigration FAQ.Note:Versions 1.0.x of MSOnline may experience disruption after June 30, 2024.
Connect to Microsoft GraphConnect-MgGraph -Scopes "AppRoleAssignment.ReadWrite.All" -TenantId "<tenant id>"
Connect to Microsoft Graph
Connect-MgGraph -Scopes "AppRoleAssignment.ReadWrite.All" -TenantId "<tenant id>"
Connect-MgGraph -Scopes "AppRoleAssignment.ReadWrite.All" -TenantId "<tenant id>"
Retrieve the managed identity:$Graph_SP = Get-MgServicePrincipal -Filter "DisplayName eq 'Microsoft Graph'"
$MSI = Get-MgServicePrincipal -Filter "displayName eq '<your managed identity display name>'"
Retrieve the managed identity:
$Graph_SP = Get-MgServicePrincipal -Filter "DisplayName eq 'Microsoft Graph'"
$MSI = Get-MgServicePrincipal -Filter "displayName eq '<your managed identity display name>'"
$Graph_SP = Get-MgServicePrincipal -Filter "DisplayName eq 'Microsoft Graph'"
$MSI = Get-MgServicePrincipal -Filter "displayName eq '<your managed identity display name>'"
Assign theUser.Read.Allrole to the identity:$AAD_AppRole = $Graph_SP.AppRoles | Where-Object {$_.Value -eq "User.Read.All"}  
New-MgServicePrincipalAppRoleAssignment -ServicePrincipalId $MSI.Id -BodyParameter @{principalId=$MSI.Id; resourceId=$Graph_SP.Id; appRoleId=$AAD_AppRole.Id}
Assign theUser.Read.Allrole to the identity:
User.Read.All
$AAD_AppRole = $Graph_SP.AppRoles | Where-Object {$_.Value -eq "User.Read.All"}  
New-MgServicePrincipalAppRoleAssignment -ServicePrincipalId $MSI.Id -BodyParameter @{principalId=$MSI.Id; resourceId=$Graph_SP.Id; appRoleId=$AAD_AppRole.Id}
$AAD_AppRole = $Graph_SP.AppRoles | Where-Object {$_.Value -eq "User.Read.All"}  
New-MgServicePrincipalAppRoleAssignment -ServicePrincipalId $MSI.Id -BodyParameter @{principalId=$MSI.Id; resourceId=$Graph_SP.Id; appRoleId=$AAD_AppRole.Id}
AssignGroupMember.Read.Allrole to the identity:$AAD_AppRole = $Graph_SP.AppRoles | Where-Object {$_.Value -eq "GroupMember.Read.All"}  
New-MgServicePrincipalAppRoleAssignment -ServicePrincipalId $MSI.Id -BodyParameter @{principalId=$MSI.Id; resourceId=$Graph_SP.Id; appRoleId=$AAD_AppRole.Id}
AssignGroupMember.Read.Allrole to the identity:
GroupMember.Read.All
$AAD_AppRole = $Graph_SP.AppRoles | Where-Object {$_.Value -eq "GroupMember.Read.All"}  
New-MgServicePrincipalAppRoleAssignment -ServicePrincipalId $MSI.Id -BodyParameter @{principalId=$MSI.Id; resourceId=$Graph_SP.Id; appRoleId=$AAD_AppRole.Id}
$AAD_AppRole = $Graph_SP.AppRoles | Where-Object {$_.Value -eq "GroupMember.Read.All"}  
New-MgServicePrincipalAppRoleAssignment -ServicePrincipalId $MSI.Id -BodyParameter @{principalId=$MSI.Id; resourceId=$Graph_SP.Id; appRoleId=$AAD_AppRole.Id}
AssignApplication.Read.Allrole to the identity:$AAD_AppRole = $Graph_SP.AppRoles | Where-Object {$_.Value -eq "Application.Read.All"}  
New-MgServicePrincipalAppRoleAssignment -ServicePrincipalId $MSI.Id -BodyParameter @{principalId=$MSI.Id; resourceId=$Graph_SP.Id; appRoleId=$AAD_AppRole.Id}
AssignApplication.Read.Allrole to the identity:
Application.Read.All
$AAD_AppRole = $Graph_SP.AppRoles | Where-Object {$_.Value -eq "Application.Read.All"}  
New-MgServicePrincipalAppRoleAssignment -ServicePrincipalId $MSI.Id -BodyParameter @{principalId=$MSI.Id; resourceId=$Graph_SP.Id; appRoleId=$AAD_AppRole.Id}
$AAD_AppRole = $Graph_SP.AppRoles | Where-Object {$_.Value -eq "Application.Read.All"}  
New-MgServicePrincipalAppRoleAssignment -ServicePrincipalId $MSI.Id -BodyParameter @{principalId=$MSI.Id; resourceId=$Graph_SP.Id; appRoleId=$AAD_AppRole.Id}
You can validate permissions were assigned to the managed identity by doing the following:
Go toMicrosoft Entra IDin theAzure portal.
ChooseEnterprise applicationsand then selectAll applicationsunderManage.
Filter theApplication typebyManaged identities.
Managed identities
Select the managed identity and then choosePermissionsunderSecurity. You should see the following permissions:User.Read.All,GroupMember.Read.All,Application.Read.All.
User.Read.All
GroupMember.Read.All
Application.Read.All
Enable outbound communication
For Microsoft Entra authentication to work, you need the following:
Outbound communication from SQL Server to Microsoft Entra ID and the Microsoft Graph endpoint.
Outbound communication from the SQL client to Microsoft Entra ID.
Default Azure VM configurations allow outbound communication to the Microsoft Graph endpoint, as well as Microsoft Entra ID, but some users choose to restrict outbound communication either by using an OS level firewall, or the Azure VNet network security group (NSG).
Firewalls on the SQL Server VM and any SQL client need to allow outbound traffic on ports 80 and 443.
The Azure VNet NSG rule for the VNet that hosts your SQL Server VM should have the following:
A Service Tag ofAzureActiveDirectory.
AzureActiveDirectory
Destination port rangesof: 80, 443.
Action set toAllow.
A high priority (which is a low number).

Enable Microsoft Entra authentication for the registered instance
When you register your SQL Server instance with theSQL IaaS Agent extension, you can enable Microsoft Entra authentication for the registered instance by using the Azure portal, the Azure CLI or PowerShell. Using the Azure portal or Azure CLI to manage your instance is only supported on the registered instance of SQL Server.
Note
After Microsoft Entra authentication is enabled, you can follow the same steps in this section to update the configuration to use a different managed identity.
Portal
Azure CLI
PowerShell
To enable Microsoft Entra authentication to your SQL Server VM, follow these steps:
Navigate to yourSQL virtual machines resourcein the Azure portal.
Navigate to yourSQL virtual machines resourcein the Azure portal.
SelectSecurity ConfigurationunderSecurity.
SelectSecurity ConfigurationunderSecurity.
ChooseEnableunderMicrosoft Entra authentication.
ChooseEnableunderMicrosoft Entra authentication.
Choose the managed identity type from the drop-down, eitherSystem-assignedorUser-assigned. If you choose user-assigned, then select the identity you want to use to authenticate to SQL Server on your Azure VM from theUser-assigned managed identitydrop-down that appears.
Choose the managed identity type from the drop-down, eitherSystem-assignedorUser-assigned. If you choose user-assigned, then select the identity you want to use to authenticate to SQL Server on your Azure VM from theUser-assigned managed identitydrop-down that appears.

After Microsoft Entra authentication is enabled, you can follow the same steps to change which managed identity can authenticate to your SQL Server VM.
Note
The errorThe selected managed identity does not have enough permissions for Microsoft Entra authenticationindicates that permissions haven't been properly assigned to the identity you've selected. Check theGrant permissionssection to assign proper permissions.
The selected managed identity does not have enough permissions for Microsoft Entra authentication
The following table lists the Azure CLI commands you can use to work with Microsoft Entra authentication for your SQL Server on Azure VMs.

You can validate permissions have been correctly assigned to the specified managed identity by running theaz sql vm validate-azure-ad-authcommand at the client.
Validate Microsoft Entra authentication with asystem-assigned managed identity:az sql vm validate-azure-ad-auth -n sqlvm -g myresourcegroup
Validate Microsoft Entra authentication with asystem-assigned managed identity:
az sql vm validate-azure-ad-auth -n sqlvm -g myresourcegroup
az sql vm validate-azure-ad-auth -n sqlvm -g myresourcegroup
Validate Microsoft Entra authentication with auser-assigned managed identity:az sql vm validate-azure-ad-auth -n sqlvm -g myresourcegroup 
--msi-client-id 00001111-aaaa-2222-bbbb-3333cccc4444
Validate Microsoft Entra authentication with auser-assigned managed identity:
az sql vm validate-azure-ad-auth -n sqlvm -g myresourcegroup 
--msi-client-id 00001111-aaaa-2222-bbbb-3333cccc4444
az sql vm validate-azure-ad-auth -n sqlvm -g myresourcegroup 
--msi-client-id 00001111-aaaa-2222-bbbb-3333cccc4444

You can enable Microsoft Entra authentication to the specified machine by running theaz sql vm enable-azure-ad-authcommand.
Assuming your SQL Server VM name issqlvmand your resource group ismyResourceGroup, the following examples enable Microsoft Entra authentication:
sqlvm
myResourceGroup
Enable Microsoft Entra authentication with asystem-assigned managed identityusing client-side validation:az sql vm enable-azure-ad-auth -n sqlvm -g myresourcegroup
Enable Microsoft Entra authentication with asystem-assigned managed identityusing client-side validation:
az sql vm enable-azure-ad-auth -n sqlvm -g myresourcegroup
az sql vm enable-azure-ad-auth -n sqlvm -g myresourcegroup
Enable Microsoft Entra authentication with asystem assigned managed identity, but skip client side validation and rely on the server-side validation that always happens:az sql vm enable-azure-ad-auth -n sqlvm -g myresourcegroup 
--skip-client-validation
Enable Microsoft Entra authentication with asystem assigned managed identity, but skip client side validation and rely on the server-side validation that always happens:
az sql vm enable-azure-ad-auth -n sqlvm -g myresourcegroup 
--skip-client-validation
az sql vm enable-azure-ad-auth -n sqlvm -g myresourcegroup 
--skip-client-validation
Enable Microsoft Entra authentication with auser-assigned managed identityand client-side validation:az sql vm enable-azure-ad-auth -n sqlvm -g myresourcegroup 
--msi-client-id 00001111-aaaa-2222-bbbb-3333cccc4444
Enable Microsoft Entra authentication with auser-assigned managed identityand client-side validation:
az sql vm enable-azure-ad-auth -n sqlvm -g myresourcegroup 
--msi-client-id 00001111-aaaa-2222-bbbb-3333cccc4444
az sql vm enable-azure-ad-auth -n sqlvm -g myresourcegroup 
--msi-client-id 00001111-aaaa-2222-bbbb-3333cccc4444
Enable Microsoft Entra authentication with auser-assigned managed identitybut skip client-side validation and rely on the server-side validation that always happens:az sql vm enable-azure-ad-auth -n sqlvm -g myresourcegroup 
--msi-client-id 00001111-aaaa-2222-bbbb-3333cccc4444 --skip-client-validation
Enable Microsoft Entra authentication with auser-assigned managed identitybut skip client-side validation and rely on the server-side validation that always happens:
az sql vm enable-azure-ad-auth -n sqlvm -g myresourcegroup 
--msi-client-id 00001111-aaaa-2222-bbbb-3333cccc4444 --skip-client-validation
az sql vm enable-azure-ad-auth -n sqlvm -g myresourcegroup 
--msi-client-id 00001111-aaaa-2222-bbbb-3333cccc4444 --skip-client-validation

You can check if Microsoft Entra authentication has been enabled by running theaz sql vm show --expand *command.
Microsoft Entra ID isn't enabled ifAzureAdAuthenticationSettingsfromaz sql vm show --expand *showsNULL.
az sql vm show --expand *
NULL
For example, when you run:
az sql vm show -n sqlvm -g myresourcegroup --expand *
az sql vm show -n sqlvm -g myresourcegroup --expand *
The following output indicates Microsoft Entra authentication has been enabled with auser-assigned managed identity:
"azureAdAuthenticationSettings": { 
      "clientId": "00001111-aaaa-2222-bbbb-3333cccc4444" },
"azureAdAuthenticationSettings": { 
      "clientId": "00001111-aaaa-2222-bbbb-3333cccc4444" },
If you have a single instance of SQL Server already registered with the SQL IaaS agent extension, you can use theUpdate-AzSqlVMPowerShell command to enable Microsoft Entra authentication for that instance.
To configure Microsoft Entra authentication with asystem-assigned managed identity, use the following sample PowerShell command:
Update-AzSqlVM -ResourceGroupName 'myresourcegroup' -Name 'sqlvm' -IdentityType 'SystemAssigned'
Update-AzSqlVM -ResourceGroupName 'myresourcegroup' -Name 'sqlvm' -IdentityType 'SystemAssigned'
To configure Microsoft Entra authentication with auser-assigned managed identity, use the following sample PowerShell command:
Update-AzSqlVM -ResourceGroupName 'myresourcegroup' -Name 'sqlvm' -IdentityType 'UserAssigned' -ManagedIdentityClientId '00001111-aaaa-2222-bbbb-3333cccc4444'
Update-AzSqlVM -ResourceGroupName 'myresourcegroup' -Name 'sqlvm' -IdentityType 'UserAssigned' -ManagedIdentityClientId '00001111-aaaa-2222-bbbb-3333cccc4444'
Enable Microsoft Entra authentication for unregistered instances
If your SQL Server instance isn't registered with the SQL IaaS Agent extension, such as when you have multiple SQL Server instances on the same VM, you can enable Microsoft Entra authentication by using PowerShell.
You can enable Microsoft Entra authentication for specific unregistered instances, or for all instances on the VM.
Note
To use Microsoft Entra authentication with unregistered instances on SQL Server on Azure VMs, you must have at least one instance registered with theSQL IaaS Agent extension.
When using theSet-AzVMExtension -ExtensionName "SqlIaasExtension"command to enable Microsoft Entra authentication for a SQL Server instance, consider the following:
Set-AzVMExtension -ExtensionName "SqlIaasExtension"
Permissions of the managed identity are only checked when theCheckPermissionsparameter is set totrue.
CheckPermissions
true
Specify the client ID of the identityClientIDparameter to use auser-assigned managed identity. When theClientIDparameter is empty, asystem-assigned managed identityis used.
ClientID
ClientID
Provide a list of instances in the theEnableForGivenInstancesparameter to enable Microsoft Entra authentication for specific unregistered instances. Othewrise, use theEnableForAllInstancesparameter to enable Microsoft Entra authentication for all unregistered instances on the virtual machine.
EnableForGivenInstances
EnableForAllInstances
The following example enables Microsoft Entra authentication for all instances on the VM using asystem-assigned identity:
Set-AzVMExtension -ExtensionName "SqlIaasExtension" -ResourceGroupName $resourceGroupName -VMName $sqlVMName -Publisher "Microsoft.SqlServer.Management" -ExtensionType "SqlIaaSAgent" -TypeHandlerVersion 2.0 -Location $region -SettingString '{"ServerConfigurationsManagementSettings": {"AADAuthenticationSettings": {"ClientId":"", "EnableForAllInstances":true, "CheckPermissions":true}},"DeploymentTokenSettings":{"DeploymentToken":12345678}}'
Set-AzVMExtension -ExtensionName "SqlIaasExtension" -ResourceGroupName $resourceGroupName -VMName $sqlVMName -Publisher "Microsoft.SqlServer.Management" -ExtensionType "SqlIaaSAgent" -TypeHandlerVersion 2.0 -Location $region -SettingString '{"ServerConfigurationsManagementSettings": {"AADAuthenticationSettings": {"ClientId":"", "EnableForAllInstances":true, "CheckPermissions":true}},"DeploymentTokenSettings":{"DeploymentToken":12345678}}'
The following example enables Microsoft Entra authentication for specific unregistered instances using auser-assigned identity:
Set-AzVMExtension -ExtensionName "SqlIaasExtension" -ResourceGroupName $resourceGroupName -VMName $sqlVMName -Publisher "Microsoft.SqlServer.Management" -ExtensionType "SqlIaaSAgent" -TypeHandlerVersion 2.0 -Location $region -SettingString '{"ServerConfigurationsManagementSettings": {"AADAuthenticationSettings": {"ClientId":$clientId, "EnableForGivenInstances":["MSSQLSERVER","MSSQLSERVER01"], "CheckPermissions":true}},"DeploymentTokenSettings":{"DeploymentToken":12345678}}'
Set-AzVMExtension -ExtensionName "SqlIaasExtension" -ResourceGroupName $resourceGroupName -VMName $sqlVMName -Publisher "Microsoft.SqlServer.Management" -ExtensionType "SqlIaaSAgent" -TypeHandlerVersion 2.0 -Location $region -SettingString '{"ServerConfigurationsManagementSettings": {"AADAuthenticationSettings": {"ClientId":$clientId, "EnableForGivenInstances":["MSSQLSERVER","MSSQLSERVER01"], "CheckPermissions":true}},"DeploymentTokenSettings":{"DeploymentToken":12345678}}'
Limitations
Consider the following limitations:
Microsoft Entra authentication is only supported with SQL Server 2022 running on Windows VMs registered with theSQL IaaS Agent extension, deployed to any cloud.
Managing Microsoft Entra authentication in the Azure portal is only available to instances supported by the SQL IaaS Agent extension, such as a default instance, or a single named instance. Use the Azure CLI or PowerShell to manage Microsoft Entra authentication additional instances on the SQL Server VM that aren't registered with the SQL IaaS Agent extension.
Using Microsoft Entra authentication with failover cluster instances is not supported.
The identity you choose to authenticate to SQL Server has to have either theDirectory Readersrole in Microsoft Entra ID or the following three Microsoft Graph application permissions (app roles):User.Read.All,GroupMember.Read.All, andApplication.Read.All.
User.Read.All
GroupMember.Read.All
Application.Read.All
Once Microsoft Entra authentication is enabled, there's no way to disable it.
Currently, authenticating to SQL Server on Azure VMs through Microsoft Entra authentication using theFIDO2 methodisn't supported.
Next steps
Review the security best practices forSQL Server.
For other articles related to running SQL Server in Azure VMs, seeSQL Server on Azure Virtual Machines overview. If you have questions about SQL Server virtual machines, see theFrequently asked questions.
To learn more, see the other articles in this best practices series:
Quick checklist
VM size
Storage
HADR settings
Collect baseline
Feedback
Was this page helpful?
Additional resources