Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Troubleshoot Azure Developer CLI
Article
2024-09-14
13 contributors
In this article
This article provides solutions to common problems that might arise when you're using Azure Developer CLI (azd).
Get help and give feedback
If you're unable to find what you're looking for in this article or you want to provide feedback, you can post questions toAzure Developer CLI Discussions.
You can also report bugs by opening GitHub Issues in theAzure Developer CLI GitHub repository.
Using the--debugswitch
--debug
If you encounter an unexpected issue while working withazd, rerun the command with the--debugswitch to enable more debugging and diagnostic output.
azd
--debug
azd up --debug
azd up --debug
You can also send the debugging output to a local text file for improved usability. This approach allows other monitoring systems to ingest the debugging and can also be useful when filing an issue on GitHub.
Important
Make sure to redact any sensitive information when submitting debug logs on GitHub or saving them to other diagnostics systems.
azd deploy --debug > "<your-file-path>.txt"
azd deploy --debug > "<your-file-path>.txt"
The.azuredirectory
.azure
Azure Developer CLI assumes that any directories that are stored in the.azuredirectory are Azure Developer CLI environments. Don't run Azure Developer CLI commands from the home directory of a user that has the Azure CLI installed.
.azure
Not logged in to Azure or token expired in Visual Studio
After you runazd init -t <template-name>in Visual Studio, you get the following error: "To access remote: this repository, you must reauthorize the OAuth ApplicationVisual Studio."
azd init -t <template-name>
Visual Studio
Solution
Runazd auth loginto refresh the access token.
azd auth login
Updated Azure account permissions don't refresh inazd
azd
By default,azdcaches your Azure credentials and permissions. If your Azure account is assigned new roles and permissions, or is added to more subscriptions, these changes may not be immediately reflected inazd. To solve this issue, log out and then log back in toazdusing the following commands:
azd
azd
azd
azd auth logout

azd auth login
azd auth logout

azd auth login
Follow the prompts from theazd auth logincommand to complete the sign-in process and update your cached credentials.
azd auth login
Cloud Shell limitations forazd
azd
There are some limitations to runningazdin Cloud Shell:
azd
Docker support in Cloud Shell
Cloud Shell doesn't support running dockerbuildorruncommands  because the docker daemon isn't running. For more information, seeCloud Shell Troubleshooting.
build
run
Cloud Shell timeout
Cloud Shell may time out during a long deployment or other long-running tasks. Make sure the session doesn't become idle. SeeCloud Shell Usage limits.
Cloud Shell interface
Cloud Shell is primarily a command-line interface and has fewer features than an integrated development environment
like Visual Studio Code.
Cannot connect to the Docker daemon in Cloud Shell
Cloud Shell uses a container to host your shell environment, so tasks that require running the Docker daemon aren't allowed.
Install different version of azd in Cloud Shell
In some cases, it may be necessary to install a different version ofazdthan the version already in use in Cloud Shell. To do this in bash:
azd
Runmkdir -p ~/binto ensure that the~/binfolder is present
mkdir -p ~/bin
~/bin
Runmkdir -p ~/azdto ensure that a local~/azdfolder is present
mkdir -p ~/azd
~/azd
Runcurl -fsSL https://aka.ms/install-azd.sh | bash -s -- --install-folder ~/azd --symlink-folder ~/bin --version <version>(<version>would bestableby default but a specific released version like1.0.0can also be specified).
curl -fsSL https://aka.ms/install-azd.sh | bash -s -- --install-folder ~/azd --symlink-folder ~/bin --version <version>
<version>
stable
1.0.0
Once installed, the version ofazdsymbolically linked in~/bintakes precedence over the
version ofazdsymbolically linked in/usr/local/bin.
azd
~/bin
azd
/usr/local/bin
To revert to using the version ofazdalready installed on Cloud Shell in bash:
azd
Runrm ~/bin/azd
rm ~/bin/azd
Runrm -rf ~/azd
rm -rf ~/azd
Solution
Use another host to perform tasks that require the docker daemon. One option is to use docker-machine, as described in theCloud Shell troubleshootingdocumentation.
Azure Bicep CLI requirement
azd upandazd provisionrequire the latest release of Azure Bicep CLI. You might get the following error message: "Error: failed to compile bicep template: failed running Az PowerShell module bicep build: exit code: 1, stdout: , stderr: WARNING: A new Bicep release is available: v0.4.1272."
azd up
azd provision
Solution
Previously, Bicep was a prerequisite for installing and usingazd.azdnow automatically installs Bicep within the localazdscope (not globally) and this issue should now be resolved. However, if you want to use a different version, you can set the environment variable:AZD_BICEP_TOOL_PATHto point to the location of the version you need.
azd
azd
azd
AZD_BICEP_TOOL_PATH
azd uporazd provisionfails
azd up
azd provision
Things can sometimes go awry withazd uporazd provision. Common errors include:
azd up
azd provision
"Can't provision certain resources in an Azure region because the region is out of capacity."
"Relevant resource provider isn't present in that region."
The troubleshooting steps might differ, depending on the root cause.
Solution
Go to theAzure portal.
Go to theAzure portal.
Locate your resource group, which is rg-<your-environment-name>.
Locate your resource group, which is rg-<your-environment-name>.
SelectDeploymentsto get more information.
SelectDeploymentsto get more information.
Verify that you specified an environment name that's the same as your environment name.
Verify that you specified an environment name that's the same as your environment name.
Go to theActionstab of the impacted GitHub repo and investigate the log file in the pipeline run for more information.
Go to theActionstab of the impacted GitHub repo and investigate the log file in the pipeline run for more information.
For other resources, seeTroubleshoot common Azure deployment errors - Azure Resource Manager.
azd initrequiressudo
azd init
sudo
Beforeazd version = azure-dev-cli_0.2.0-beta.1,azdwould create an.azdfolder withdrw-r--r--access.
azd version = azure-dev-cli_0.2.0-beta.1
azd
.azd
drw-r--r--
This causes an issue, as using this or any prior version on any Linux set-up (WSL, ssh-remote, devcontainer, etc.) already provides an.azdfolder with read-only mode.
.azd
Solution
Manually delete the already provided.azdfolder:rm -r ~/.azd
Manually delete the already provided.azdfolder:
.azd
rm -r ~/.azd
rm -r ~/.azd
Runazd initforazdto create the folder again with the right access levels.
Runazd initforazdto create the folder again with the right access levels.
azd init
azd
azd monitorfor development container
azd monitor
azd monitoris currently not supported if you use a development container as your development environment.
azd monitor
Unable to authenticate in Codespaces environments
If you're experiencing authentication issues in Codespaces, make sure the template Dockerfile includes thesudo apt-get update && sudo apt-get install xdg-utilscommands. Thexdg-utilscommand opens a browser tab that allows you to sign-in.
sudo apt-get update && sudo apt-get install xdg-utils
xdg-utils
Static Web Apps fail to deploy despite success message
A known issue exists when deploying to Azure Static Web Apps in which the defaultazd upoutput may state the action was successful, but the changes weren't actually deployed. You can diagnose this problem by running theazd upcommand with the--debugflag enabled. In the output logs you may see the following message:
azd up
azd up
--debug
Preparing deployment. Please wait...
An unknown exception has occurred
Preparing deployment. Please wait...
An unknown exception has occurred
You're most likely to encounter this issue whenazdis run from a GitHub action. As a workaround, after you build your site, copystaticwebapp.config.jsoninto the build folder. You can automate this step this by using a prepackage or predeploycommand hook, which allows you to execute custom scripts at various points in the azd command workflows.
azd
staticwebapp.config.json
The product team is working to resolve this issue.
GitHub Actions error - "Does not have secrets get permission on key vault"
Sharing the same environment or resource group name when provisioning resources locally and in GitHub Actions can produce the errorDoes not have secrets get permission on key vault..from the Key Vault service. Key Vault doesn't support incremental permissions updates through Bicep, which effectively means the GitHub Actions workflow overwrites the Access Policy permissions of the local user.
Does not have secrets get permission on key vault..
The recommended solution to this issue is to use separate environment names for local development and GitHub Actions workflows. Read more aboutusing multiple environmentswith theazd envcommand on the FAQ page.
azd env
Text-based browser support
Text-based browsers are currently not supported byazd monitor.
azd monitor
azd pipeline configusing AzDo for Java templates on Windows
azd pipeline config
You may encounter a failure when runningazd pipeline configwith AzDo for Java templates on Windows. For example, you've:
azd pipeline config
Run the following on Windows:azd init --template Azure-Samples/todo-java-mongo
azd pipeline config
Run the following on Windows:
azd init --template Azure-Samples/todo-java-mongo
azd pipeline config
azd init --template Azure-Samples/todo-java-mongo
azd pipeline config
Received the following error:
Received the following error:

Solution
This is a known issue. While we address this issue, try the following command:
git update-index --chmod=+x src/api/mvnw && git commit -m "Fix executable bit permissions" && git push
git update-index --chmod=+x src/api/mvnw && git commit -m "Fix executable bit permissions" && git push
failed packaging service 'api': failed invoking action 'package', failed to run NPM script build, signal: segmentation faultfailure after upgradingazdon Apple Silicon (M1/M2)
failed packaging service 'api': failed invoking action 'package', failed to run NPM script build, signal: segmentation fault
azd
In some situations, upgrading from the x86_64 version ofazdto an ARM64 binary may result in failures for templates
which have been built with the x86_64 version ofazd. This is because the template uses a version ofv8-compile-cachewhich may try to load bytecode built under x86_64 into an ARM64 process.
azd
azd
v8-compile-cache
To fix this issue, upgrade thev8-compile-cachepackage in the affected project:
v8-compile-cache
Change directory to the service which failed (src/apiin the case offailed packaging service 'api')
src/api
failed packaging service 'api'
Runnpm upgrade v8-compile-cache
npm upgrade v8-compile-cache
Change directory to the root of the repo and run theazdcommand (e.g.azd packageorazd up) again
azd
azd package
azd up
azd pipeline configfailure due to Conditional Access Policy
azd pipeline config
When runningazd pipeline config, you may receive an error like the following:
azd pipeline config
ERROR: failed to create or update service principal: failed retrieving application list, failed executing request: http call(https://login.microsoftonline.com/common/oauth2/v2.0/token)(POST) error: reply status code was 400:
{"error":"invalid_grant","error_description":"AADSTS50005: User tried to log in to a device from a platform (Unknown) that's currently not supported through Conditional Access policy. Supported device platforms are: iOS, Android, Mac, and Windows flavors.\r\nTrace ID: 0000aaaa-11bb-cccc-dd22-eeeeee333333\r\nCorrelation ID: aaaa0000-bb11-2222-33cc-444444dddddd\r\nTimestamp: 2022-12-16 21:10:37Z","error_codes":[50005],"timestamp":"2022-12-16 21:10:37Z","trace_id":"0000aaaa-11bb-cccc-dd22-eeeeee333333","correlation_id":"aaaa0000-bb11-2222-33cc-444444dddddd"}
ERROR: failed to create or update service principal: failed retrieving application list, failed executing request: http call(https://login.microsoftonline.com/common/oauth2/v2.0/token)(POST) error: reply status code was 400:
{"error":"invalid_grant","error_description":"AADSTS50005: User tried to log in to a device from a platform (Unknown) that's currently not supported through Conditional Access policy. Supported device platforms are: iOS, Android, Mac, and Windows flavors.\r\nTrace ID: 0000aaaa-11bb-cccc-dd22-eeeeee333333\r\nCorrelation ID: aaaa0000-bb11-2222-33cc-444444dddddd\r\nTimestamp: 2022-12-16 21:10:37Z","error_codes":[50005],"timestamp":"2022-12-16 21:10:37Z","trace_id":"0000aaaa-11bb-cccc-dd22-eeeeee333333","correlation_id":"aaaa0000-bb11-2222-33cc-444444dddddd"}
This error is related to your Microsoft Entra tenant enablement of Conditional Access Policies. The specific policy requires that you're signed in into a supported device platform.
You may also be receiving this error due to being logged in using the device code mechanism, which prevents Microsoft Entra ID from detecting your device platform correctly.
Solution
To configure the workflow, you need to give GitHub permission to deploy to Azure on your behalf. Authorize GitHub by creating an Azure Service Principal stored in a GitHub secret namedAZURE_CREDENTIALS. Select your Codespace host for steps:
AZURE_CREDENTIALS
Browser
VS Code
Make sure you're running on a device listed as supported, per the error message.
Make sure you're running on a device listed as supported, per the error message.
Rerunazd auth loginwith the flag--use-device-code=falseappended:azd auth login --use-device-code=false
Rerunazd auth loginwith the flag--use-device-code=falseappended:
azd auth login
--use-device-code=false
azd auth login --use-device-code=false
azd auth login --use-device-code=false
You may receive an error with messagelocalhost refused to connectafter logging in. If so:Copy the URL.Runcurl '<pasted url>'(URL in quotes) in a new Codespaces terminal.In the original terminal, the login should now succeed.
You may receive an error with messagelocalhost refused to connectafter logging in. If so:
localhost refused to connect
Copy the URL.
Runcurl '<pasted url>'(URL in quotes) in a new Codespaces terminal.
curl '<pasted url>'
In the original terminal, the login should now succeed.
After logging in, rerunazd pipeline config.
After logging in, rerunazd pipeline config.
azd pipeline config
Make sure you're running on a device listed as supported, per the error message.
Make sure you're running on a device listed as supported, per the error message.
Rerunazd auth loginwith the flag--use-device-code=falseappended:azd auth login --use-device-code=false
Rerunazd auth loginwith the flag--use-device-code=falseappended:
azd auth login
--use-device-code=false
azd auth login --use-device-code=false
azd auth login --use-device-code=false
After logging in, rerunazd pipeline config.
After logging in, rerunazd pipeline config.
azd pipeline config
azd pipeline configsupport
azd pipeline config
azd pipeline configis currently not supported inDevContainers/VS Code Remote Containers.
azd pipeline config
Live metrics support for Python
Live Metrics (azd monitor --live) is currently not supported for Python apps. For more information, seeLive Metrics: Monitor and diagnose with 1-second latency.
azd monitor --live
Create a GitHub issue to request help

The Azure Developer CLI and theAzure Developer CLI Visual Studio Code extensionuseGitHub Issuesto track bugs and feature requests. Please search theexisting issuesbefore filing new issues to avoid duplicates.
For help and questions about using this project, please look at ourwikifor using Azure Developer CLI and ourCONTRIBUTING docif you want to contribute.
Feedback
Was this page helpful?
Additional resources