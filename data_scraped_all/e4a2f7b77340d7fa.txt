Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Azure custom roles
Article
2025-02-26
12 contributors
In this article
If theAzure built-in rolesdon't meet the specific needs of your organization, you can create your own custom roles. Just like built-in roles, you can assign custom roles to users, groups, and service principals at management group, subscription, and resource group scopes.
Custom roles can be shared between subscriptions that trust the same Microsoft Entra tenant. There is a limit of5,000custom roles per tenant. (For Microsoft Azure operated by 21Vianet, the limit is 2,000 custom roles.) Custom roles can be created using the Azure portal, Azure PowerShell, Azure CLI, or the REST API.
Steps to create a custom role
Here are the basic steps to create a custom role.
Determine the permissions you need.When you create a custom role, you need to know the actions that are available to define your permissions. Typically, you start with an existing built-in role and then modify it for your needs. You will add the actions to theActionsorNotActionsproperties of therole definition. If you have data actions, you will add those to theDataActionsorNotDataActionsproperties.For more information, see the next sectionHow to determine the permissions you need.
Determine the permissions you need.
When you create a custom role, you need to know the actions that are available to define your permissions. Typically, you start with an existing built-in role and then modify it for your needs. You will add the actions to theActionsorNotActionsproperties of therole definition. If you have data actions, you will add those to theDataActionsorNotDataActionsproperties.
Actions
NotActions
DataActions
NotDataActions
For more information, see the next sectionHow to determine the permissions you need.
Decide how you want to create the custom role.You can create custom roles usingAzure portal,Azure PowerShell,Azure CLI, or theREST API.
Decide how you want to create the custom role.
You can create custom roles usingAzure portal,Azure PowerShell,Azure CLI, or theREST API.
Create the custom role.The easiest way is to use the Azure portal. For steps on how to create a custom role using the Azure portal, seeCreate or update Azure custom roles using the Azure portal.
Create the custom role.
The easiest way is to use the Azure portal. For steps on how to create a custom role using the Azure portal, seeCreate or update Azure custom roles using the Azure portal.
Test the custom role.Once you have your custom role, you have to test it to verify that it works as you expect. If you need to make adjustments later, you can update the custom role.
Test the custom role.
Once you have your custom role, you have to test it to verify that it works as you expect. If you need to make adjustments later, you can update the custom role.
How to determine the permissions you need
Azure has thousands of permissions that you can potentially include in your custom role. Here are some methods that can help you determine the permissions you will want to add to your custom role:
Look at existingbuilt-in roles.You might want to modify an existing role or combine permissions used in multiple roles.
Look at existingbuilt-in roles.
You might want to modify an existing role or combine permissions used in multiple roles.
List the Azure services you want to grant access to.
List the Azure services you want to grant access to.
Determine theresource providers that map to the Azure services.Azure services expose their functionality and permissions throughresource providers. For example, the Microsoft.Compute resource provider supplies virtual machine resources and the Microsoft.Billing resource provider supplies subscription and billing resources. Knowing the resource providers can help you narrow down and determine the permissions you need for your custom role.When you create a custom role using the Azure portal, you can also determine the resource providers by searching for keywords. This search functionality is described inCreate or update Azure custom roles using the Azure portal.
Determine theresource providers that map to the Azure services.
Azure services expose their functionality and permissions throughresource providers. For example, the Microsoft.Compute resource provider supplies virtual machine resources and the Microsoft.Billing resource provider supplies subscription and billing resources. Knowing the resource providers can help you narrow down and determine the permissions you need for your custom role.
When you create a custom role using the Azure portal, you can also determine the resource providers by searching for keywords. This search functionality is described inCreate or update Azure custom roles using the Azure portal.

Search theavailable permissionsto find permissions you want to include.When you create a custom role using the Azure portal, you can search for permissions by keyword. For example, you can search forvirtual machineorbillingpermissions. You can also download all of the permissions as a CSV file and then search this file. This search functionality is described inCreate or update Azure custom roles using the Azure portal.
Search theavailable permissionsto find permissions you want to include.
When you create a custom role using the Azure portal, you can search for permissions by keyword. For example, you can search forvirtual machineorbillingpermissions. You can also download all of the permissions as a CSV file and then search this file. This search functionality is described inCreate or update Azure custom roles using the Azure portal.

Custom role example
The following shows what a custom role looks like as displayed using Azure PowerShell in JSON format. This custom role can be used for monitoring and restarting virtual machines.
{
  "Name": "Virtual Machine Operator",
  "Id": "88888888-8888-8888-8888-888888888888",
  "IsCustom": true,
  "Description": "Can monitor and restart virtual machines.",
  "Actions": [
    "Microsoft.Storage/*/read",
    "Microsoft.Network/*/read",
    "Microsoft.Compute/*/read",
    "Microsoft.Compute/virtualMachines/start/action",
    "Microsoft.Compute/virtualMachines/restart/action",
    "Microsoft.Authorization/*/read",
    "Microsoft.ResourceHealth/availabilityStatuses/read",
    "Microsoft.Resources/subscriptions/resourceGroups/read",
    "Microsoft.Insights/alertRules/*",
    "Microsoft.Insights/diagnosticSettings/*",
    "Microsoft.Support/*"
  ],
  "NotActions": [],
  "DataActions": [],
  "NotDataActions": [],
  "AssignableScopes": [
    "/subscriptions/{subscriptionId1}",
    "/subscriptions/{subscriptionId2}",
    "/providers/Microsoft.Management/managementGroups/{groupId1}"
  ]
}
{
  "Name": "Virtual Machine Operator",
  "Id": "88888888-8888-8888-8888-888888888888",
  "IsCustom": true,
  "Description": "Can monitor and restart virtual machines.",
  "Actions": [
    "Microsoft.Storage/*/read",
    "Microsoft.Network/*/read",
    "Microsoft.Compute/*/read",
    "Microsoft.Compute/virtualMachines/start/action",
    "Microsoft.Compute/virtualMachines/restart/action",
    "Microsoft.Authorization/*/read",
    "Microsoft.ResourceHealth/availabilityStatuses/read",
    "Microsoft.Resources/subscriptions/resourceGroups/read",
    "Microsoft.Insights/alertRules/*",
    "Microsoft.Insights/diagnosticSettings/*",
    "Microsoft.Support/*"
  ],
  "NotActions": [],
  "DataActions": [],
  "NotDataActions": [],
  "AssignableScopes": [
    "/subscriptions/{subscriptionId1}",
    "/subscriptions/{subscriptionId2}",
    "/providers/Microsoft.Management/managementGroups/{groupId1}"
  ]
}
The following shows the same custom role as displayed using Azure CLI.
[
  {
    "assignableScopes": [
      "/subscriptions/{subscriptionId1}",
      "/subscriptions/{subscriptionId2}",
      "/providers/Microsoft.Management/managementGroups/{groupId1}"
    ],
    "description": "Can monitor and restart virtual machines.",
    "id": "/subscriptions/{subscriptionId1}/providers/Microsoft.Authorization/roleDefinitions/88888888-8888-8888-8888-888888888888",
    "name": "88888888-8888-8888-8888-888888888888",
    "permissions": [
      {
        "actions": [
          "Microsoft.Storage/*/read",
          "Microsoft.Network/*/read",
          "Microsoft.Compute/*/read",
          "Microsoft.Compute/virtualMachines/start/action",
          "Microsoft.Compute/virtualMachines/restart/action",
          "Microsoft.Authorization/*/read",
          "Microsoft.ResourceHealth/availabilityStatuses/read",
          "Microsoft.Resources/subscriptions/resourceGroups/read",
          "Microsoft.Insights/alertRules/*",
          "Microsoft.Insights/diagnosticSettings/*",
          "Microsoft.Support/*"
        ],
        "dataActions": [],
        "notActions": [],
        "notDataActions": []
      }
    ],
    "roleName": "Virtual Machine Operator",
    "roleType": "CustomRole",
    "type": "Microsoft.Authorization/roleDefinitions"
  }
]
[
  {
    "assignableScopes": [
      "/subscriptions/{subscriptionId1}",
      "/subscriptions/{subscriptionId2}",
      "/providers/Microsoft.Management/managementGroups/{groupId1}"
    ],
    "description": "Can monitor and restart virtual machines.",
    "id": "/subscriptions/{subscriptionId1}/providers/Microsoft.Authorization/roleDefinitions/88888888-8888-8888-8888-888888888888",
    "name": "88888888-8888-8888-8888-888888888888",
    "permissions": [
      {
        "actions": [
          "Microsoft.Storage/*/read",
          "Microsoft.Network/*/read",
          "Microsoft.Compute/*/read",
          "Microsoft.Compute/virtualMachines/start/action",
          "Microsoft.Compute/virtualMachines/restart/action",
          "Microsoft.Authorization/*/read",
          "Microsoft.ResourceHealth/availabilityStatuses/read",
          "Microsoft.Resources/subscriptions/resourceGroups/read",
          "Microsoft.Insights/alertRules/*",
          "Microsoft.Insights/diagnosticSettings/*",
          "Microsoft.Support/*"
        ],
        "dataActions": [],
        "notActions": [],
        "notDataActions": []
      }
    ],
    "roleName": "Virtual Machine Operator",
    "roleType": "CustomRole",
    "type": "Microsoft.Authorization/roleDefinitions"
  }
]
Custom role properties
The following table describes what the custom role properties mean.
Name
roleName
Id
name
IsCustom
roleType
true
CustomRole
false
BuiltInRole
Description
description
Actions
actions
NotActions
notActions
Actions
DataActions
dataActions
DataActions
NotDataActions
notDataActions
DataActions
AssignableScopes
assignableScopes
AssignableScopes
Permission strings are case-insensitive. When you create your custom roles, the convention is to match the case that you see for permissions inAzure resource provider operations.
Wildcard permissions
Actions,NotActions,DataActions, andNotDataActionssupport wildcards (*) to define permissions. A wildcard (*) extends a permission to everything that matches the action string you provide. For example, suppose that you wanted to add all the permissions related to Azure Cost Management and exports. You could add all of these action strings:
Actions
NotActions
DataActions
NotDataActions
*
*
Microsoft.CostManagement/exports/action
Microsoft.CostManagement/exports/read
Microsoft.CostManagement/exports/write
Microsoft.CostManagement/exports/delete
Microsoft.CostManagement/exports/run/action
Microsoft.CostManagement/exports/action
Microsoft.CostManagement/exports/read
Microsoft.CostManagement/exports/write
Microsoft.CostManagement/exports/delete
Microsoft.CostManagement/exports/run/action
Instead of adding all of these strings, you could just add a wildcard string. For example, the following wildcard string is equivalent to the previous five strings. This would also include any future export permissions that might be added.
Microsoft.CostManagement/exports/*
Microsoft.CostManagement/exports/*
Note
It's recommended that you specifyActionsandDataActionsexplicitly instead of using the wildcard (*) character. The additional access and permissions granted through futureActionsorDataActionsmay be unwanted behavior using the wildcard.
Actions
DataActions
*
Actions
DataActions
Who can create, delete, update, or view a custom role
Just like built-in roles, theAssignableScopesproperty specifies the scopes that the role is available for assignment. TheAssignableScopesproperty for a custom role also controls who can create, delete, update, or view the custom role.
AssignableScopes
AssignableScopes
Microsoft.Authorization/ roleDefinitions/write
AssignableScopes
Microsoft.Authorization/ roleDefinitions/write
AssignableScopes
Microsoft.Authorization/ roleDefinitions/read
Note
Even if a role is renamed, the role ID does not change. If you are using scripts or automation to create your role assignments, it's a best practice to use the unique role ID instead of the role name. Therefore, if a role is renamed, your scripts are more likely to work.
Find role assignments to delete a custom role
Before you can delete a custom role, you must remove any role assignments that use the custom role. If you try to delete a custom role with role assignments, you get the message:There are existing role assignments referencing role (code: RoleDefinitionHasAssignments).
There are existing role assignments referencing role (code: RoleDefinitionHasAssignments)
Here are steps to help find the role assignments before deleting a custom role:
List thecustom role definition.
In theAssignableScopessection, get the management groups, subscriptions, and resource groups.
Iterate over theAssignableScopesandlist the role assignments.
AssignableScopes
Remove the role assignmentsthat use the custom role.
If you are usingMicrosoft Entra Privileged Identity Management, remove eligible custom role assignments.
Delete the custom role.
For information about how to find unused custom roles, seeSymptom - No more role definitions can be created.
Custom role limits
The following list describes the limits for custom roles.
Each tenant can have up to5000custom roles.
Microsoft Azure operated by 21Vianet can have up to 2000 custom roles for each tenant.
You cannot setAssignableScopesto the root scope ("/").
AssignableScopes
"/"
You cannot use wildcards (*) inAssignableScopes. This wildcard restriction helps ensure a user can't potentially obtain access to a scope by updating the role definition.
*
AssignableScopes
You can have only one wildcard in an action string.
You can define only one management group inAssignableScopesof a custom role.
AssignableScopes
Azure Resource Manager doesn't validate the management group's existence in the role definition'sAssignableScopes.
AssignableScopes
Custom roles withDataActionscan't be assigned at the management group scope.
DataActions
You can create a custom role withDataActionsand one management group inAssignableScopes. You can't assign the custom role at the management group scope itself; however, you can assign the custom role at the scope of the subscriptions within the management group. This can be helpful if you need to create a single custom role withDataActionsthat needs to be assigned in multiple subscriptions, instead of creating a separate custom role for each subscription.
DataActions
AssignableScopes
DataActions
For more information about custom roles and management groups, seeWhat are Azure management groups?.
Input and output formats
To create a custom role using the command line, you typically use JSON to specify the properties you want for the custom role. Depending on the tools you use, the input and output formats will look slightly different. This section lists the input and output formats depending on the tool.
Azure PowerShell
To create a custom role using Azure PowerShell, you must provide following input.
{
  "Name": "",
  "Description": "",
  "Actions": [],
  "NotActions": [],
  "DataActions": [],
  "NotDataActions": [],
  "AssignableScopes": []
}
{
  "Name": "",
  "Description": "",
  "Actions": [],
  "NotActions": [],
  "DataActions": [],
  "NotDataActions": [],
  "AssignableScopes": []
}
To update a custom role using Azure PowerShell, you must provide the following input. Note that theIdproperty has been added.
Id
{
  "Name": "",
  "Id": "",
  "Description": "",
  "Actions": [],
  "NotActions": [],
  "DataActions": [],
  "NotDataActions": [],
  "AssignableScopes": []
}
{
  "Name": "",
  "Id": "",
  "Description": "",
  "Actions": [],
  "NotActions": [],
  "DataActions": [],
  "NotDataActions": [],
  "AssignableScopes": []
}
The following shows an example of the output when you list a custom role using Azure PowerShell and theConvertTo-Jsoncommand.
{
  "Name": "",
  "Id": "",
  "IsCustom": true,
  "Description": "",
  "Actions": [],
  "NotActions": [],
  "DataActions": [],
  "NotDataActions": [],
  "AssignableScopes": []
}
{
  "Name": "",
  "Id": "",
  "IsCustom": true,
  "Description": "",
  "Actions": [],
  "NotActions": [],
  "DataActions": [],
  "NotDataActions": [],
  "AssignableScopes": []
}
Azure CLI
To create or update a custom role using Azure CLI, you must provide following input. This format is the same format when you create a custom role using Azure PowerShell.
{
  "Name": "",
  "Description": "",
  "Actions": [],
  "NotActions": [],
  "DataActions": [],
  "NotDataActions": [],
  "AssignableScopes": []
}
{
  "Name": "",
  "Description": "",
  "Actions": [],
  "NotActions": [],
  "DataActions": [],
  "NotDataActions": [],
  "AssignableScopes": []
}
The following shows an example of the output when you list a custom role using Azure CLI.
[
  {
    "assignableScopes": [],
    "description": "",
    "id": "",
    "name": "",
    "permissions": [
      {
        "actions": [],
        "dataActions": [],
        "notActions": [],
        "notDataActions": []
      }
    ],
    "roleName": "",
    "roleType": "CustomRole",
    "type": "Microsoft.Authorization/roleDefinitions"
  }
]
[
  {
    "assignableScopes": [],
    "description": "",
    "id": "",
    "name": "",
    "permissions": [
      {
        "actions": [],
        "dataActions": [],
        "notActions": [],
        "notDataActions": []
      }
    ],
    "roleName": "",
    "roleType": "CustomRole",
    "type": "Microsoft.Authorization/roleDefinitions"
  }
]
REST API
To create or update a custom role using the REST API, you must provide following input. This format is the same format that gets generated when you create a custom role using the Azure portal.
{
  "properties": {
    "roleName": "",
    "description": "",
    "assignableScopes": [],
    "permissions": [
      {
        "actions": [],
        "notActions": [],
        "dataActions": [],
        "notDataActions": []
      }
    ]
  }
}
{
  "properties": {
    "roleName": "",
    "description": "",
    "assignableScopes": [],
    "permissions": [
      {
        "actions": [],
        "notActions": [],
        "dataActions": [],
        "notDataActions": []
      }
    ]
  }
}
The following shows an example of the output when you list a custom role using the REST API.
{
    "properties": {
        "roleName": "",
        "type": "CustomRole",
        "description": "",
        "assignableScopes": [],
        "permissions": [
            {
                "actions": [],
                "notActions": [],
                "dataActions": [],
                "notDataActions": []
            }
        ],
        "createdOn": "",
        "updatedOn": "",
        "createdBy": "",
        "updatedBy": ""
    },
    "id": "",
    "type": "Microsoft.Authorization/roleDefinitions",
    "name": ""
}
{
    "properties": {
        "roleName": "",
        "type": "CustomRole",
        "description": "",
        "assignableScopes": [],
        "permissions": [
            {
                "actions": [],
                "notActions": [],
                "dataActions": [],
                "notDataActions": []
            }
        ],
        "createdOn": "",
        "updatedOn": "",
        "createdBy": "",
        "updatedBy": ""
    },
    "id": "",
    "type": "Microsoft.Authorization/roleDefinitions",
    "name": ""
}
Next steps
Tutorial: Create an Azure custom role using Azure PowerShell
Tutorial: Create an Azure custom role using Azure CLI
Understand Azure role definitions
Troubleshoot Azure RBAC
Feedback
Was this page helpful?
Additional resources