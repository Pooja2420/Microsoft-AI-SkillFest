Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Quickstart: Create an Azure container registry using the Azure portal
Article
2024-09-19
25 contributors
In this article
Azure Container Registry is a private registry service for building, storing, and managing container images and related artifacts. In this quickstart, you create an Azure container registry instance with the Azure portal. Then, use Docker commands to push a container image into the registry, and finally pull and run the image from your registry.
Azure CLI
Azure PowerShell
To log in to the registry to work with container images, this quickstart requires that you are running the Azure CLI (version 2.0.55 or later recommended). Runaz --versionto find the version. If you need to install or upgrade, seeInstall Azure CLI.
az --version
To log in to the registry to work with container images, this quickstart requires that you are running the Azure PowerShell (version 7.5.0 or later recommended). RunGet-Module Az -ListAvailableto find the version. If you need to install or upgrade, seeInstall Azure PowerShell module.
Get-Module Az -ListAvailable
You must also have Docker installed locally with the daemon running. Docker provides packages that easily configure Docker on anyMac,Windows, orLinuxsystem.
Sign in to Azure
Sign in to theAzure portal.
Create a container registry
SelectCreate a resource>Containers>Container Registry.

In theBasicstab, enter values forResource groupandRegistry name. The registry name must be unique within Azure, and contain 5-50 alphanumeric characters. For this quickstart create a new resource group in theWest USlocation namedmyResourceGroup, and forSKU, select 'Basic'.
West US
myResourceGroup

Accept default values for the remaining settings. Then selectReview + create. After reviewing the settings, selectCreate.
Tip
In this quickstart, you create aBasicregistry, which is a cost-optimized option for developers learning about Azure Container Registry. Choose other tiers for increased storage and image throughput, and capabilities such as connection using aprivate endpoint. For details on available service tiers (SKUs), seeContainer registry service tiers.
When theDeployment succeededmessage appears, select the container registry in the portal.

Take note of the registry name and the value of theLogin server, which is a fully qualified name ending withazurecr.ioin the Azure cloud. You use these values in the following steps when you push and pull images with Docker.
azurecr.io
Log in to registry
Azure CLI
Azure PowerShell
Before pushing and pulling container images, you must log in to the registry instance.Sign into the Azure CLIon your local machine, then run theaz acr logincommand. Specify only the registry resource name when logging in with the Azure CLI. Don't use the fully qualified login server name.
az acr login --name <registry-name>
az acr login --name <registry-name>
Example:
az acr login --name mycontainerregistry
az acr login --name mycontainerregistry
The command returnsLogin Succeededonce completed.
Login Succeeded
Before pushing and pulling container images, you must log in to the registry instance.Sign into the Azure PowerShellon your local machine, then run theConnect-AzContainerRegistrycmdlet. Specify only the registry resource name when logging in with the Azure PowerShell. Don't use the fully qualified login server name.
Connect-AzContainerRegistry -Name <registry-name>
Connect-AzContainerRegistry -Name <registry-name>
Example:
Connect-AzContainerRegistry -Name mycontainerregistry
Connect-AzContainerRegistry -Name mycontainerregistry
The command returnsLogin Succeededonce completed.
Login Succeeded
Push image to registry
To push an image to an Azure Container registry, you must first have an image. If you don't yet have any local container images, run the followingdocker pullcommand to pull an existing public image. For this example, pull thehello-worldimage from Microsoft Container Registry.
hello-world
docker pull mcr.microsoft.com/hello-world
docker pull mcr.microsoft.com/hello-world
Before you can push an image to your registry, you must tag it with the fully qualified name of your registry login server. The login server name is in the format<registry-name>.azurecr.io(must be all lowercase), for example,mycontainerregistry.azurecr.io.
Tag the image using thedocker tagcommand. Replace<login-server>with the login server name of your ACR instance.
<login-server>
docker tag mcr.microsoft.com/hello-world <login-server>/hello-world:v1
docker tag mcr.microsoft.com/hello-world <login-server>/hello-world:v1
Example:
docker tag mcr.microsoft.com/hello-world mycontainerregistry.azurecr.io/hello-world:v1
docker tag mcr.microsoft.com/hello-world mycontainerregistry.azurecr.io/hello-world:v1
Finally, usedocker pushto push the image to the registry instance. Replace<login-server>with the login server name of your registry instance. This example creates thehello-worldrepository, containing thehello-world:v1image.
<login-server>
hello-world:v1
docker push <login-server>/hello-world:v1
docker push <login-server>/hello-world:v1
After pushing the image to your container registry, remove thehello-world:v1image from your local Docker environment. (Note that thisdocker rmicommand does not remove the image from thehello-worldrepository in your Azure container registry.)
hello-world:v1
docker rmi <login-server>/hello-world:v1
docker rmi <login-server>/hello-world:v1
List container images
To list the images in your registry, navigate to your registry in the portal and selectRepositories, then select thehello-worldrepository you created withdocker push.
docker push

By selecting thehello-worldrepository, you see thev1-tagged image underTags.
v1
Run image from registry
Now, you can pull and run thehello-world:v1container image from your container registry by usingdocker run:
hello-world:v1
docker run <login-server>/hello-world:v1
docker run <login-server>/hello-world:v1
Example output:
Unable to find image 'mycontainerregistry.azurecr.io/hello-world:v1' locally
v1: Pulling from hello-world
Digest: sha256:662dd8e65ef7ccf13f417962c2f77567d3b132f12c95909de6c85ac3c326a345
Status: Downloaded newer image for mycontainerregistry.azurecr.io/hello-world:v1

Hello from Docker!
This message shows that your installation appears to be working correctly.

[...]
Unable to find image 'mycontainerregistry.azurecr.io/hello-world:v1' locally
v1: Pulling from hello-world
Digest: sha256:662dd8e65ef7ccf13f417962c2f77567d3b132f12c95909de6c85ac3c326a345
Status: Downloaded newer image for mycontainerregistry.azurecr.io/hello-world:v1

Hello from Docker!
This message shows that your installation appears to be working correctly.

[...]
Clean up resources
To clean up your resources, navigate to themyResourceGroupresource group in the portal. Once the resource group is loaded, click onDelete resource groupto remove the resource group, the container registry, and the container images stored there.

Next steps
In this quickstart, you created an Azure Container Registry with the Azure portal, pushed a container image, and pulled and ran the image from the registry. Continue to the Azure Container Registry tutorials for a deeper look at ACR.
Azure Container Registry tutorials
Azure Container Registry Tasks tutorials
Feedback
Was this page helpful?
Additional resources