Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Allow extensions
Article
2025-02-25
3 contributors
In this article
APPLIES TO:Azure Database for PostgreSQL - Flexible Server
Before creating extensions in Azure Database for PostgreSQL flexible server, you must allowlist them.
Steps to allow extensions
Portal
CLI
Resource Manager Template
Using theAzure portal:
Select your Azure Database for PostgreSQL flexible server.
Select your Azure Database for PostgreSQL flexible server.
From the resource menu, underSettingssection, selectServer parameters.
From the resource menu, underSettingssection, selectServer parameters.

Select the extensions that you want to allowlist, from the ones available in theazure.extensionsparameter.
Select the extensions that you want to allowlist, from the ones available in theazure.extensionsparameter.
azure.extensions

SelectSave.
SelectSave.

You can allow extensions via the CLI parameter setcommand.
az postgres flexible-server parameter set --resource-group <resource_group>  --server-name <server> --subscription <subscription_id> --name azure.extensions --value <extension_name>,<extension_name>
az postgres flexible-server parameter set --resource-group <resource_group>  --server-name <server> --subscription <subscription_id> --name azure.extensions --value <extension_name>,<extension_name>
Using theARM Template:
The following example adds extensions to the allowlistdblink,dict_xsyn,pg_buffercacheon a server whose name ispostgres-test-server:
dblink
dict_xsyn
pg_buffercache
postgres-test-server
{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "flexibleServers_name": {
            "defaultValue": "postgres-test-server",
            "type": "String"
        },
        "azure_extensions_set_value": {
            "defaultValue": " dblink,dict_xsyn,pg_buffercache",
            "type": "String"
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2021-06-01",
            "name": "[concat(parameters('flexibleServers_name'), '/azure.extensions')]",
            "properties": {
                "value": "[parameters('azure_extensions_set_value')]",
                "source": "user-override"
            }
        }
    ]
}
{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "flexibleServers_name": {
            "defaultValue": "postgres-test-server",
            "type": "String"
        },
        "azure_extensions_set_value": {
            "defaultValue": " dblink,dict_xsyn,pg_buffercache",
            "type": "String"
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/configurations",
            "apiVersion": "2021-06-01",
            "name": "[concat(parameters('flexibleServers_name'), '/azure.extensions')]",
            "properties": {
                "value": "[parameters('azure_extensions_set_value')]",
                "source": "user-override"
            }
        }
    ]
}
Related content
Extensions and modules
Special considerations with extensions and modules
List of extensions and modules by name
List of extensions and modules by version of PostgreSQL
Feedback
Was this page helpful?
Additional resources