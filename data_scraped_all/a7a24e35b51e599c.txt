Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Azure RBAC and Azure Device Update for IoT Hub
Article
2025-01-24
9 contributors
In this article
For users and applications to access Azure Device Update for IoT Hub, they must be granted access to the Device Update resource. The Device Update service principal must also get access to its associated IoT hub to deploy updates and manage devices.
This article explains how Device Update and Azure IoT Hub use Azure role-based access control (Azure RBAC) to provide authentication and authorization for users and service APIs. The article also describes Microsoft Entra ID authentication for Device Update REST APIs, and support for managed identities in Device Update and Azure IoT Hub.
Device Update access control roles
Device Update supports the following RBAC roles. For more information, seeConfigure access control to the Device Update account.
You can assign a combination of roles to provide the right level of access. For example, you can use the Device Update Content Administrator role to import and manage updates, but you need the Device Update Deployments Reader role to view the progress of an update. Conversely, with the Device Update Reader role you can view all updates, but you need the Device Update Deployments Administrator role to deploy an update to devices.
Device Update service principal access to IoT Hub
Device Update communicates with its associated IoT hub to deploy and manage updates at scale. To enable this communication, you need to grant the Device Update service principal access to the IoT hub with IoT Hub Data Contributor role.
Granting this permission allows the following deployment, device and update management, and diagnostic actions:
Create deployment
Cancel deployment
Retry deployment
Get device
You can set this permission from the IoT hubAccess Control (IAM)page. For more information, seeConfigure IoT hub access for the Device Update service principal.
Device Update REST APIs
Device Update uses Microsoft Entra ID for authentication to its REST APIs. To get started, you need to create and configure a client application.

Create a client Microsoft Entra app
To integrate an application or service with Microsoft Entra ID, firstregister a client application with Microsoft Entra ID. Client application setup varies depending on the authorization flow you need: users, applications, or managed identities. For example:
To call Device Update from a mobile or desktop application, selectPublic client/native (mobile & desktop)inSelect a platformand enterhttps://login.microsoftonline.com/common/oauth2/nativeclientfor theRedirect URI.
To call Device Update from a mobile or desktop application, selectPublic client/native (mobile & desktop)inSelect a platformand enterhttps://login.microsoftonline.com/common/oauth2/nativeclientfor theRedirect URI.
https://login.microsoftonline.com/common/oauth2/nativeclient
To call Device Update from a website with implicit sign-on, useWebplatform. UnderImplicit grant and hybrid flows, selectAccess tokens (used for implicit flows).NoteUse the most secure authentication flow available. Implicit flow authentication requires a high degree of trust in the application, and carries risks that aren't present in other flows. You should use this flow only when other more secure flows, such as managed identities, aren't viable.
To call Device Update from a website with implicit sign-on, useWebplatform. UnderImplicit grant and hybrid flows, selectAccess tokens (used for implicit flows).
Note
Use the most secure authentication flow available. Implicit flow authentication requires a high degree of trust in the application, and carries risks that aren't present in other flows. You should use this flow only when other more secure flows, such as managed identities, aren't viable.
Configure permissions
Next, grant permissions to your app to call Device Update.
Go to theAPI permissionspage of your app and selectAdd a permission.
Go toAPIs my organization usesand search forAzure Device Update.
Selectuser_impersonationpermission and selectAdd permissions.
Request authorization token
The Device Update REST API requires an OAuth 2.0 authorization token in the request header. The following sections show examples of some ways to request an authorization token.
az login
az account get-access-token --resource 'https://api.adu.microsoft.com/'
az login
az account get-access-token --resource 'https://api.adu.microsoft.com/'
MSAL.PSPowerShell module is a wrapper overMicrosoft Authentication Library for .NET (MSAL .NET)that supports various authentication methods.
MSAL.PS
User credentials:$clientId = '<app_id>'
$tenantId = '<tenant_id>'
$authority = "https://login.microsoftonline.com/$tenantId/v2.0"
$Scope = 'https://api.adu.microsoft.com/user_impersonation'

Get-MsalToken -ClientId $clientId -TenantId $tenantId -Authority $authority -Scopes $Scope
User credentials:
$clientId = '<app_id>'
$tenantId = '<tenant_id>'
$authority = "https://login.microsoftonline.com/$tenantId/v2.0"
$Scope = 'https://api.adu.microsoft.com/user_impersonation'

Get-MsalToken -ClientId $clientId -TenantId $tenantId -Authority $authority -Scopes $Scope
$clientId = '<app_id>'
$tenantId = '<tenant_id>'
$authority = "https://login.microsoftonline.com/$tenantId/v2.0"
$Scope = 'https://api.adu.microsoft.com/user_impersonation'

Get-MsalToken -ClientId $clientId -TenantId $tenantId -Authority $authority -Scopes $Scope
User credentials with device code:$clientId = '<app_id>â
$tenantId = '<tenant_id>â
$authority = "https://login.microsoftonline.com/$tenantId/v2.0"
$Scope = 'https://api.adu.microsoft.com/user_impersonation'

Get-MsalToken -ClientId $clientId -TenantId $tenantId -Authority $authority -Scopes $Scope -Interactive -DeviceCode
User credentials with device code:
$clientId = '<app_id>â
$tenantId = '<tenant_id>â
$authority = "https://login.microsoftonline.com/$tenantId/v2.0"
$Scope = 'https://api.adu.microsoft.com/user_impersonation'

Get-MsalToken -ClientId $clientId -TenantId $tenantId -Authority $authority -Scopes $Scope -Interactive -DeviceCode
$clientId = '<app_id>â
$tenantId = '<tenant_id>â
$authority = "https://login.microsoftonline.com/$tenantId/v2.0"
$Scope = 'https://api.adu.microsoft.com/user_impersonation'

Get-MsalToken -ClientId $clientId -TenantId $tenantId -Authority $authority -Scopes $Scope -Interactive -DeviceCode
App credentials:$clientId = '<app_id>â
$tenantId = '<tenant_id>â
$cert = '<client_certificate>'
$authority = "https://login.microsoftonline.com/$tenantId/v2.0"
$Scope = 'https://api.adu.microsoft.com/.default'

Get-MsalToken -ClientId $clientId -TenantId $tenantId -Authority $authority -Scopes $Scope -ClientCertificate $cert
App credentials:
$clientId = '<app_id>â
$tenantId = '<tenant_id>â
$cert = '<client_certificate>'
$authority = "https://login.microsoftonline.com/$tenantId/v2.0"
$Scope = 'https://api.adu.microsoft.com/.default'

Get-MsalToken -ClientId $clientId -TenantId $tenantId -Authority $authority -Scopes $Scope -ClientCertificate $cert
$clientId = '<app_id>â
$tenantId = '<tenant_id>â
$cert = '<client_certificate>'
$authority = "https://login.microsoftonline.com/$tenantId/v2.0"
$Scope = 'https://api.adu.microsoft.com/.default'

Get-MsalToken -ClientId $clientId -TenantId $tenantId -Authority $authority -Scopes $Scope -ClientCertificate $cert
Support for managed identities
Managed identities provide Azure services with secure, automatically managed Microsoft Entra ID identities. Managed identities eliminate the need for developers to manage credentials by providing identities. Device Update supports system-assigned managed identities.
To add a system-assigned managed identity for Device Update:
In the Azure portal, go to your Device Update account.
In the left navigation, selectSettings>Identity.
UnderSystem assignedon theIdentitypage, setStatustoOn.
SelectSave, and then selectYes.
To add a system-assigned managed identity for IoT Hub:
In the Azure portal, go to your IoT hub.
In the left navigation, selectSecurity settings>Identity.
UnderSystem-assignedon theIdentitypage, selectOnunderStatus.
SelectSave, and then selectYes.
To remove system-assigned managed identity from a Device Update account or IoT hub, set or selectOffon theIdentitypage, and then selectSave.
Related content
Create Azure Device Update for IoT Hub resources
Configure access control for Device Update resources
Feedback
Was this page helpful?
Additional resources