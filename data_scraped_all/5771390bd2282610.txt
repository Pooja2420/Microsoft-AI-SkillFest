Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Dismiss dependency scanning alerts in Advanced Security
Article
2023-07-11
2 contributors
In this article
Dependency scanning in Advanced Security detects the open source components used in your source code and identifies if there are any associated vulnerabilities. Any found vulnerabilities from open source components get flagged as an alert. With this update, you can dismiss dependency scanning alerts in Advanced Security that you believe to be a false positive or acceptable risk.
In Azure Repos, we changed the default behavior to remove "Edit policies" permission when creating a new branch.
Check out the release notes to learn more about these features.
GitHub Advanced Security for Azure DevOps
Alert dismissals for dependency scanning alerts in Advanced Security
Azure Boards
Copy link to work item
Azure Pipelines
Kubernetes tasks now support kubelogin
Updates to YAML cron schedules
Disable a check
Improvements to Approvals REST API
New toggles to control creation of classic pipelines
Azure Repos
Removing "Edit policies" permission to branch creator
General
Alert dismissals for dependency scanning alerts in Advanced Security
You can now dismiss any dependency scanning alerts you believe to be a false positive or acceptable risk. These are the same dismissal options for secret scanning and code scanning alerts in Advanced Security that you can currently use.

Note that you may need to re-run detection pipeline with the dependency scanning task as well as ensure you have theAdvanced Security: dismiss alertspermissions in order to dismiss these alerts.
Advanced Security: dismiss alerts
To learn more about alert dismissals, seeDismiss dependency scanning alerts.
Azure Boards
Copy link to work item
We made a small improvement to copy the work item url from several areas in Azure Boards. Making it easier to get the direct link to a specific work item.

Copy linkhas been added to the context menus on the work item form, backlog, and task backlog.
Note
This feature will only be available with theNew Boards Hubspreview.
Azure Pipelines
Kubernetes tasks now support kubelogin
We have updated theKubernetesManifest@1,HelmDeploy@0,Kubernetes@1andAzureFunctionOnKubernetes@1tasks to supportkubelogin. This allows you to target Azure Kubernetes Service (AKS) configured withAzure Active Directory integration.
Kubelogin isn't pre-installed onHosted images. To make sure above mentioned tasks use kubelogin, install it by inserting theKubeloginInstaller@0task before the task that depends on it:
- task: KubeloginInstaller@0

 - task: HelmDeploy@0
   # arguments do not need to be modified to use kubelogin
- task: KubeloginInstaller@0

 - task: HelmDeploy@0
   # arguments do not need to be modified to use kubelogin
Improvements to Approvals REST API
Approvalsincrease your YAML pipeline's security by giving you the possibility to manually review a deployment to production. We updated theApprovals Query REST APIto make it more powerful. Now, you:
Don't need to specify a list ofapprovalIds. All parameters are now optional.
approvalId
Can specify a list ofuserIds to retrieve the list of approvals pending on these users. Currently, the REST API returns the list of approvals for which the users are explicitly assigned as approvers.
userId
Can specify thestateof the approvals to be returned, for example,pending.
state
pending
Here's an example:GET https://dev.azure.com/fabrikamfiber/fabrikam-chat/_apis/pipelines/approvals?api-version=7.1-preview.1&userId=00aa00aa-bb11-cc22-dd33-44ee44ee44ee&state=pendingreturns
GET https://dev.azure.com/fabrikamfiber/fabrikam-chat/_apis/pipelines/approvals?api-version=7.1-preview.1&userId=00aa00aa-bb11-cc22-dd33-44ee44ee44ee&state=pending
{
    "count": 2,
    "value":
    [
        {
            "id": "87436c03-69a3-42c7-b5c2-6abfe049ee4c",
            "steps": [],
            "status": "pending",
            "createdOn": "2023-06-27T13:58:07.417Z",
            "lastModifiedOn": "2023-06-27T13:58:07.4164237Z",
            "executionOrder": "anyOrder",
            "minRequiredApprovers": 1,
            "blockedApprovers": [],
            "_links":
            {
                "self":
                {
                    "href": "https://dev.azure.com/fabrikamfiber/fabricam-chat/_apis/pipelines/approvals/87436c03-69a3-42c7-b5c2-6abfe049ee4c"
                }
            }
        },
        {
            "id": "2549baca-104c-4a6f-b05f-bdc4065a53b7",
            "steps": [],
            "status": "pending",
            "createdOn": "2023-06-27T13:58:07.417Z",
            "lastModifiedOn": "2023-06-27T13:58:07.4164237Z",
            "executionOrder": "anyOrder",
            "minRequiredApprovers": 1,
            "blockedApprovers": [],
            "_links":
            {
                "self":
                {
                    "href": "https://dev.azure.com/fabrikamfiber/fabricam-chat/_apis/pipelines/approvals/2549baca-104c-4a6f-b05f-bdc4065a53b7"
                }
            }
        }
    ]
}
{
    "count": 2,
    "value":
    [
        {
            "id": "87436c03-69a3-42c7-b5c2-6abfe049ee4c",
            "steps": [],
            "status": "pending",
            "createdOn": "2023-06-27T13:58:07.417Z",
            "lastModifiedOn": "2023-06-27T13:58:07.4164237Z",
            "executionOrder": "anyOrder",
            "minRequiredApprovers": 1,
            "blockedApprovers": [],
            "_links":
            {
                "self":
                {
                    "href": "https://dev.azure.com/fabrikamfiber/fabricam-chat/_apis/pipelines/approvals/87436c03-69a3-42c7-b5c2-6abfe049ee4c"
                }
            }
        },
        {
            "id": "2549baca-104c-4a6f-b05f-bdc4065a53b7",
            "steps": [],
            "status": "pending",
            "createdOn": "2023-06-27T13:58:07.417Z",
            "lastModifiedOn": "2023-06-27T13:58:07.4164237Z",
            "executionOrder": "anyOrder",
            "minRequiredApprovers": 1,
            "blockedApprovers": [],
            "_links":
            {
                "self":
                {
                    "href": "https://dev.azure.com/fabrikamfiber/fabricam-chat/_apis/pipelines/approvals/2549baca-104c-4a6f-b05f-bdc4065a53b7"
                }
            }
        }
    ]
}
Disable a check
We made debugging checks less tedious. Sometimes, an Invoke Azure Function or Invoke REST API check doesn't work correctly, and you need to fix it. Previously, you had to delete such checks, to prevent them from erroneously blocking a deployment. Once you fixed the check, you had to add it back and configure it correctly, making sure all the required headers are set or the query parameters are correct. This is tedious.
Now, you can just disable a check. The disabled check won't run in subsequent check suite evaluations.

Once you fix the erroneous check, you can just enable it.

Updates to YAML cron schedules
In YAML pipelines, you can definescheduled triggersusing thecronYAML property.
cron
We updated how thebatchproperty works. In a nutshell, if you setbatchtotrue, the cron schedule willnotrun if another scheduled pipeline run is in progress. This is regardless of the version of the pipeline repository.
batch
batch
true
The following table describes howalwaysandbatchinteract.
always
batch
false
false
false
true
true
false
true
true
For example, assumealways: falseandbatch: true. Assume there's a cron schedule that specifies the pipeline should run every 5 minutes. Imagine there's a new commit. Within 5 minutes, the pipeline starts its scheduled run. Imagine a pipeline run takes 30 minutes to complete. Within these 30 minutes, no scheduled run takes place, regardless of the number of commits. The next scheduled run happens onlyafterthe current scheduled run finishes.
always: false
batch: true
Your YAML pipeline may contain multiple cron schedules, and you may want your pipeline to run different stages / jobs based on which cron schedule runs. For example, you have a nightly build and a weekly build, and you wish that during the weekly build your pipeline collect more statistics.
We make this possible by introducing a new predefined system variable namedBuild.CronSchedule.DisplayNamethat contains thedisplayNameproperty of a cron schedule.
Build.CronSchedule.DisplayName
displayName
New toggles to control creation of classic pipelines
Last year, we launched a Pipelines configuration setting todisable creation of classic build and release pipelines.
In response to your feedback, we have split the initial toggle into two: one for classicbuildpipelines and one for classicreleasepipelines, deployment groups, and task groups.

If your organization has theDisable creation of classic build and release pipelinestoggle on, both of the new toggles are on. If the original toggle is off, both new toggles are off.
Disable creation of classic build and release pipelines
Azure Repos
Removing "Edit policies" permission to branch creator
Previously, when you created a new branch, you we're granted permission to edit policies on that branch. With this update, we are changing the default behavior to not grant this permission even if the "Permission management" setting is switched on for the repository.

You will need the "Edit policies" permission granted explicitly (either manually or through REST API) by security permission inheritance or through a group membership.
Next steps
Note
These features will roll out over the next two to three weeks.
Head over to Azure DevOps and take a look.
Go to Azure DevOps
How to provide feedback
We would love to hear what you think about these features. Use the help menu to report a problem or provide a suggestion.

You can also get advice and your questions answered by the community onStack Overflow.
Thanks,
Silviu Andrica
Feedback
Was this page helpful?
Additional resources