Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Deploy to Azure App Service by using Git locally
Article
2025-03-25
13 contributors
In this article
This article shows you how to deploy your app toAzure App Servicefrom a Git repository on your local computer.
Note
This deployment method requiresSource Control Manager (SCM) basic authentication, which is less secure thanother deployment methods. If local Git deployment doesn't work, you can't configure local Git deployment in the app Deployment Center.
Prerequisites
To complete the steps that are described in this article:
If you don't have anAzure subscription, create anAzure free accountbefore you begin.
If you don't have anAzure subscription, create anAzure free accountbefore you begin.
Install Git.
Install Git.
Have a local Git repository with code to deploy. To download a sample repository, run the following command in your local terminal window:git clone https://github.com/Azure-Samples/nodejs-docs-hello-world.git
Have a local Git repository with code to deploy. To download a sample repository, run the following command in your local terminal window:
git clone https://github.com/Azure-Samples/nodejs-docs-hello-world.git
git clone https://github.com/Azure-Samples/nodejs-docs-hello-world.git
Prepare your repository
To get automated builds from the App Service build server, make sure that your repository root has the correct files in your project.
*.sln
*.csproj
default.aspx
*.sln
*.csproj
index.php
Gemfile
server.js
app.js
package.json
*.py
requirements.txt
runtime.txt
default.htm
default.html
default.asp
index.htm
index.html
iisstart.htm
<job_name>/run.<extension>
App_Data/jobs/continuous
App_Data/jobs/triggered
To customize your deployment, include a.deploymentfile in the repository root. For more information, seeCustomize deploymentsandCustom deployment script.
.deployment
Tip
Visual Studiocan create a repository for you. With this method, your project is immediately ready for deployment via Git.
Configure a deployment user
Learn how toconfigure deployment credentials for Azure App Service. You can use either user-scope sign-in information or application-scope sign-in information.
Create a Git-enabled app
If you already have an App Service app and you want to configure a local Git deployment for the app, seeConfigure an existing appinstead.
Azure CLI
Azure PowerShell
Azure portal
Runaz webapp createwith the--deployment-local-gitoption.
--deployment-local-git
For example:
az webapp create --resource-group <group-name> --plan <plan-name> --name <app-name> --runtime "<runtime-flag>" --deployment-local-git
az webapp create --resource-group <group-name> --plan <plan-name> --name <app-name> --runtime "<runtime-flag>" --deployment-local-git
The output contains a URL like the examplehttps://<deployment-username>@<app-name>.scm.azurewebsites.net/<app-name>.git. Use this URL to deploy your app in the next step.
https://<deployment-username>@<app-name>.scm.azurewebsites.net/<app-name>.git
RunNew-AzWebAppfrom the root of your Git repository.
For example:
New-AzWebApp -Name <app-name>
New-AzWebApp -Name <app-name>
When your run this cmdlet from a directory that's a Git repository, a Git remote namedazurefor your App Service app is automatically created.
azure
In the portal, create an app first. Then, set up deployment for the app. For more information, seeConfigure an existing app.
Configure an existing app
If you don't have an app yet, get started withCreate a Git enabled app.
Azure CLI
Azure PowerShell
Azure portal
Runaz webapp deployment source config-local-git.
For example:
az webapp deployment source config-local-git --name <app-name> --resource-group <group-name>
az webapp deployment source config-local-git --name <app-name> --resource-group <group-name>
The output contains a URL like the examplehttps://<deployment-username>@<app-name>.scm.azurewebsites.net/<app-name>.git. Use this URL to deploy your app in the next step.
https://<deployment-username>@<app-name>.scm.azurewebsites.net/<app-name>.git
Tip
This URL contains the user-scope deployment username. You canuse application-scope sign-in informationinstead.
Set thescmTypeof your app by running theSet-AzResourcecmdlet.
scmType
$PropertiesObject = @{
    scmType = "LocalGit";
}

Set-AzResource -PropertyObject $PropertiesObject -ResourceGroupName <group-name> `
-ResourceType Microsoft.Web/sites/config -ResourceName <app-name>/web `
-ApiVersion 2015-08-01 -Force
$PropertiesObject = @{
    scmType = "LocalGit";
}

Set-AzResource -PropertyObject $PropertiesObject -ResourceGroupName <group-name> `
-ResourceType Microsoft.Web/sites/config -ResourceName <app-name>/web `
-ApiVersion 2015-08-01 -Force
In theAzure portal, go to your app.
In theAzure portal, go to your app.
On the resource menu, selectDeployment Center>Settings.
On the resource menu, selectDeployment Center>Settings.
ForSource, selectLocal Git, and then selectSave.
ForSource, selectLocal Git, and then selectSave.

In theLocal Gitsection, copy the value forGit Clone Urito use later. This URI doesn't contain any sign-in information.
In theLocal Gitsection, copy the value forGit Clone Urito use later. This URI doesn't contain any sign-in information.
Deploy the web app
In a local terminal window, change the directory to the root of your Git repository. Add a Git remote by using the URL from your app. If the method you use doesn't provide a URL, usehttps://<app-name>.scm.azurewebsites.net/<app-name>.gitwith your app name.git remote add azure <url>NoteIf youcreated a Git-enabled app in PowerShell by using New-AzWebApp, the remote is already created.
In a local terminal window, change the directory to the root of your Git repository. Add a Git remote by using the URL from your app. If the method you use doesn't provide a URL, usehttps://<app-name>.scm.azurewebsites.net/<app-name>.gitwith your app name.
https://<app-name>.scm.azurewebsites.net/<app-name>.git
git remote add azure <url>
git remote add azure <url>
Note
If youcreated a Git-enabled app in PowerShell by using New-AzWebApp, the remote is already created.
Push to the Azure remote branch by runninggit push azure master.For more information, seeChange the deployment branch.
Push to the Azure remote branch by runninggit push azure master.
git push azure master
For more information, seeChange the deployment branch.
In theGit Credential Managerdialog, enter youruser-scope or application-scope sign-in information, not your Azure sign-in information.If your Git remote URL already contains your username and password, you aren't prompted to enter them.
In theGit Credential Managerdialog, enter youruser-scope or application-scope sign-in information, not your Azure sign-in information.
If your Git remote URL already contains your username and password, you aren't prompted to enter them.
Review the output. You might see runtime-specific automation, such as MSBuild for ASP.NET, npm install for Node.js, or pip install for Python.
Review the output. You might see runtime-specific automation, such as MSBuild for ASP.NET, npm install for Node.js, or pip install for Python.
In the Azure portal, go to your app to verify that the content is deployed.
In the Azure portal, go to your app to verify that the content is deployed.

Change the deployment branch
When you push commits to your App Service repository, App Service deploys the files in themasterbranch by default. Because many Git repositories are moving frommastertomain, ensure that you push to the correct branch in the App Service repository in one of two ways:
master
master
main
Explicitly deploy tomasterby running a command like in this example:git push azure main:master
Explicitly deploy tomasterby running a command like in this example:
master
git push azure main:master
git push azure main:master
Change the deployment branch by setting theDEPLOYMENT_BRANCHapp setting, and then push commits to the custom branch.To do it by using the Azure CLI:az webapp config appsettings set --name <app-name> --resource-group <group-name> --settings DEPLOYMENT_BRANCH='main'
git push azure mainYou can also change theDEPLOYMENT_BRANCHapp setting in the Azure portal:UnderSettings, selectEnvironment variables.Add an app setting that has the nameDEPLOYMENT_BRANCHand the valuemain.
Change the deployment branch by setting theDEPLOYMENT_BRANCHapp setting, and then push commits to the custom branch.
DEPLOYMENT_BRANCH
To do it by using the Azure CLI:
az webapp config appsettings set --name <app-name> --resource-group <group-name> --settings DEPLOYMENT_BRANCH='main'
git push azure main
az webapp config appsettings set --name <app-name> --resource-group <group-name> --settings DEPLOYMENT_BRANCH='main'
git push azure main
You can also change theDEPLOYMENT_BRANCHapp setting in the Azure portal:
DEPLOYMENT_BRANCH
UnderSettings, selectEnvironment variables.
Add an app setting that has the nameDEPLOYMENT_BRANCHand the valuemain.
DEPLOYMENT_BRANCH
main
Troubleshoot deployment
You might see the following common error messages when you use Git to publish to an App Service app in Azure:
Unable to access '[siteURL]': Failed to connect to [scmAddress]
Couldn't resolve host 'hostname'
azure
git remote -v
azure
No refs in common and none specified; doing nothing. Perhaps you should specify a branch such as 'main'.
git push
push.default
.gitconfig
git push
git push azure main
Error - Changes committed to remote repository but deployment to website failed.
azure
master
DEPLOYMENT_BRANCH
src refspec [branchname] does not match any.
main
azure
git push
git push azure main
RPC failed; result=22, HTTP code = 5xx.
postBuffer
git config --global http.postBuffer 524288000
Error - Changes committed to remote repository but your web app not updated.
npm ERR!
npm ERR!
npm ERR! Couldn't read dependencies.
npm ERR! \cmd "/c" "node-gyp rebuild"\ failed with 1
npm ERR! [modulename@version] preinstall: \make \|\| gmake\
Related content
App Service build server (Project Kudu documentation)
Continuous deployment to Azure App Service
Sample: Create a web app and deploy code from a local Git repository (Azure CLI)
Sample: Create a web app and deploy code from a local Git repository (PowerShell)
Feedback
Was this page helpful?
Additional resources