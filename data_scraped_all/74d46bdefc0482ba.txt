Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Deploy ASP.NET Core apps to Azure Kubernetes Service with Azure DevOps Starter
Article
2020-03-24
1 contributor
In this article
Azure DevOps Starter presents a simplified experience where you can bring your existing code and Git repo or choose a sample application to create a continuous integration (CI) and continuous delivery (CD) pipeline to Azure.
DevOps Starter also:
Automatically creates Azure resources, such as Azure Kubernetes Service (AKS).
Creates and configures a release pipeline in Azure DevOps that sets up a build and release pipeline for CI/CD.
Creates an Azure Application Insights resource for monitoring.
EnablesAzure Monitor for containersto monitor performance for the container workloads on the AKS cluster
In this tutorial, you will:
Use DevOps Starter to deploy an ASP.NET Core app to AKS
Configure Azure DevOps and an Azure subscription
Examine the AKS cluster
Examine the CI pipeline
Examine the CD pipeline
Commit changes to Git and automatically deploy them to Azure
Clean up resources
Prerequisites
An Azure subscription. You can get one free throughVisual Studio Dev Essentials.
Use DevOps Starter to deploy an ASP.NET Core app to AKS
DevOps Starter creates a CI/CD pipeline in Azure Pipelines. You can create a new Azure DevOps organization or use an existing organization. DevOps Starter also creates Azure resources, such as an AKS cluster, in the Azure subscription of your choice.
Sign in to theAzure portal.
Sign in to theAzure portal.
In the search box, typeDevOps Starter, and then select. Click onAddto create a new one.
In the search box, typeDevOps Starter, and then select. Click onAddto create a new one.

Select.NET, and then selectNext.
Select.NET, and then selectNext.
UnderChoose an application framework, selectASP.NET Coreand then selectNext.
UnderChoose an application framework, selectASP.NET Coreand then selectNext.
SelectKubernetes Service, and then selectNext.
SelectKubernetes Service, and then selectNext.
Configure Azure DevOps and an Azure subscription
Create a new Azure DevOps organization, or select an existing organization.
Create a new Azure DevOps organization, or select an existing organization.
Enter a name for your Azure DevOps project.
Enter a name for your Azure DevOps project.
Select your Azure subscription.
Select your Azure subscription.
To view additional Azure configuration settings and to identify the number of nodes for the AKS cluster, selectChange. This pane displays various options for configuring the type and location of Azure services.
To view additional Azure configuration settings and to identify the number of nodes for the AKS cluster, selectChange. This pane displays various options for configuring the type and location of Azure services.
Exit the Azure configuration area, and then selectDone. After a few minutes, the process is completed. A sample ASP.NET Core app is set up in a Git repo in your Azure DevOps organization, an AKS cluster is created, a CI/CD pipeline is executed, and your app is deployed to Azure.After all this is completed, the Azure DevOps Starter dashboard is displayed in the Azure portal. You can also go to the DevOps Starter dashboard directly fromAll resourcesin the Azure portal.This dashboard provides visibility into your Azure DevOps code repository, your CI/CD pipeline, and your AKS cluster. You can configure additional CI/CD options in your Azure DevOps pipeline. At the right, selectBrowseto view your running app.
Exit the Azure configuration area, and then selectDone. After a few minutes, the process is completed. A sample ASP.NET Core app is set up in a Git repo in your Azure DevOps organization, an AKS cluster is created, a CI/CD pipeline is executed, and your app is deployed to Azure.
After all this is completed, the Azure DevOps Starter dashboard is displayed in the Azure portal. You can also go to the DevOps Starter dashboard directly fromAll resourcesin the Azure portal.
This dashboard provides visibility into your Azure DevOps code repository, your CI/CD pipeline, and your AKS cluster. You can configure additional CI/CD options in your Azure DevOps pipeline. At the right, selectBrowseto view your running app.
Examine the AKS cluster
DevOps Starter automatically configures an AKS cluster, which you can explore and customize. To familiarize yourself with the AKS cluster, do the following:
Go to the DevOps Starter dashboard.
Go to the DevOps Starter dashboard.
At the right, select the AKS service. A pane opens for the AKS cluster. From this view you can perform various actions, such as monitoring container health, searching logs, and opening the Kubernetes dashboard.
At the right, select the AKS service. A pane opens for the AKS cluster. From this view you can perform various actions, such as monitoring container health, searching logs, and opening the Kubernetes dashboard.
At the right, selectView Kubernetes dashboard. Optionally, follow the steps to open the Kubernetes dashboard.
At the right, selectView Kubernetes dashboard. Optionally, follow the steps to open the Kubernetes dashboard.
Examine the CI pipeline
DevOps Starter automatically configures a CI/CD pipeline in your Azure DevOps organization. You can explore and customize the pipeline. To familiarize yourself with it, do the following:
Go to the DevOps Starter dashboard.
Go to the DevOps Starter dashboard.
At the top of the DevOps Starter dashboard, selectBuild Pipelines.  A browser tab displays the build pipeline for your new project.
At the top of the DevOps Starter dashboard, selectBuild Pipelines.  A browser tab displays the build pipeline for your new project.
Point to theStatusfield, and then select the ellipsis (...).  A menu displays several options, such as queueing a new build, pausing a build, and editing the build pipeline.
Point to theStatusfield, and then select the ellipsis (...).  A menu displays several options, such as queueing a new build, pausing a build, and editing the build pipeline.
SelectEdit.
SelectEdit.
In this pane, you can examine the various tasks for your build pipeline. The build performs various tasks, such as fetching sources from the Git repo, restoring dependencies, and publishing outputs used for deployments.
In this pane, you can examine the various tasks for your build pipeline. The build performs various tasks, such as fetching sources from the Git repo, restoring dependencies, and publishing outputs used for deployments.
At the top of the build pipeline, select the build pipeline name.
At the top of the build pipeline, select the build pipeline name.
Change the name of your build pipeline to something more descriptive, selectSave & queue, and then selectSave.
Change the name of your build pipeline to something more descriptive, selectSave & queue, and then selectSave.
Under your build pipeline name, selectHistory. This pane displays an audit trail of your recent changes for the build. Azure DevOps keeps track of any changes made to the build pipeline, and it allows you to compare versions.
Under your build pipeline name, selectHistory. This pane displays an audit trail of your recent changes for the build. Azure DevOps keeps track of any changes made to the build pipeline, and it allows you to compare versions.
SelectTriggers. DevOps Starter automatically creates a CI trigger, and every commit to the repo starts a new build. Optionally, you can choose to include or exclude branches from the CI process.
SelectTriggers. DevOps Starter automatically creates a CI trigger, and every commit to the repo starts a new build. Optionally, you can choose to include or exclude branches from the CI process.
SelectRetention. Depending on your scenario, you can specify policies to keep or remove a certain number of builds.
SelectRetention. Depending on your scenario, you can specify policies to keep or remove a certain number of builds.
Examine the CD release pipeline
DevOps Starter automatically creates and configures the necessary steps to deploy from your Azure DevOps organization to your Azure subscription. These steps include configuring an Azure service connection to authenticate Azure DevOps to your Azure subscription. The automation also creates a release pipeline, which provides the CD to Azure. To learn more about the release pipeline, do the following:
SelectBuild and Release, and then selectReleases.  DevOps Starter creates a release pipeline to manage deployments to Azure.
SelectBuild and Release, and then selectReleases.  DevOps Starter creates a release pipeline to manage deployments to Azure.
Select the ellipsis (...) next to your release pipeline, and then selectEdit. The release pipeline contains apipeline, which defines the release process.
Select the ellipsis (...) next to your release pipeline, and then selectEdit. The release pipeline contains apipeline, which defines the release process.
UnderArtifacts, selectDrop. The build pipeline you examined in the previous steps produces the output that's used for the artifact.
UnderArtifacts, selectDrop. The build pipeline you examined in the previous steps produces the output that's used for the artifact.
At the right of theDropicon, selectContinuous deployment trigger. This release pipeline has an enabled CD trigger, which executes a deployment every time a new build artifact is available. Optionally, you can disable the trigger so that your deployments require manual execution.
At the right of theDropicon, selectContinuous deployment trigger. This release pipeline has an enabled CD trigger, which executes a deployment every time a new build artifact is available. Optionally, you can disable the trigger so that your deployments require manual execution.
At the right, selectView releasesto display a history of releases.
At the right, selectView releasesto display a history of releases.
Select the ellipsis (...) next to a release, and then selectOpen. You can explore several menus, such as a release summary, associated work items, and tests.
Select the ellipsis (...) next to a release, and then selectOpen. You can explore several menus, such as a release summary, associated work items, and tests.
SelectCommits. This view shows code commits that are associated with this deployment. Compare releases to view the commit differences between deployments.
SelectCommits. This view shows code commits that are associated with this deployment. Compare releases to view the commit differences between deployments.
SelectLogs. The logs contain useful information about the deployment process. You can view them both during and after deployments.
SelectLogs. The logs contain useful information about the deployment process. You can view them both during and after deployments.
Commit changes to Azure Repos and automatically deploy them to Azure
Note
The following procedure tests the CI/CD pipeline by making a simple text change.
You're now ready to collaborate with a team on your app by using a CI/CD process that automatically deploys your latest work to your website. Each change to the Git repo starts a build in Azure DevOps, and a CD pipeline executes a deployment to Azure. Follow the procedure in this section, or use another technique to commit changes to your repo. For example, you can clone the Git repo in your favorite tool or IDE, and then push changes to this repo.
In the Azure DevOps menu, selectCode>Files, and then go to your repo.
In the Azure DevOps menu, selectCode>Files, and then go to your repo.
Go to theViews\Homedirectory, select the ellipsis (...) next to theIndex.cshtmlfile, and then selectEdit.
Go to theViews\Homedirectory, select the ellipsis (...) next to theIndex.cshtmlfile, and then selectEdit.
Make a change to the file, such as adding some text within one of the div tags.
Make a change to the file, such as adding some text within one of the div tags.
At the top right, selectCommit, and then selectCommitagain to push your change. After a few moments, a build starts in Azure DevOps and a release executes to deploy the changes. Monitor the build status on the DevOps Starter dashboard or in the browser with your Azure DevOps organization.
At the top right, selectCommit, and then selectCommitagain to push your change. After a few moments, a build starts in Azure DevOps and a release executes to deploy the changes. Monitor the build status on the DevOps Starter dashboard or in the browser with your Azure DevOps organization.
After the release is completed, refresh your app to verify your changes.
After the release is completed, refresh your app to verify your changes.
Clean up resources
If you are testing, you can avoid accruing billing charges by cleaning up your resources. When they are no longer needed, you can delete the AKS cluster and related resources that you created in this tutorial. To do so, use theDeletefunctionality on the DevOps Starter dashboard.
Important
The following procedure permanently deletes resources. TheDeletefunctionality destroys the data that's created by the project in DevOps Starter in both Azure and Azure DevOps, and you will be unable to retrieve it. Use this procedure only after you've carefully read the prompts.
In the Azure portal, go to the DevOps Starter dashboard.
At the top right, selectDelete.
At the prompt, selectYestopermanently deletethe resources.
Next steps
You can optionally modify these build and release pipelines to meet the needs of your team. You can also use this CI/CD pattern as a template for your other pipelines. In this tutorial, you learned how to:
Use DevOps Starter to deploy an ASP.NET Core app to AKS
Configure Azure DevOps and an Azure subscription
Examine the AKS cluster
Examine the CI pipeline
Examine the CD pipeline
Commit changes to Git and automatically deploy them to Azure
Clean up resources
To learn more about using the Kubernetes dashboard, see:
Use the Kubernetes dashboard
Additional resources