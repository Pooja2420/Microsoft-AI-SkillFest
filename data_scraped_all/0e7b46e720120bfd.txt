Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Configure Azure Storage firewalls and virtual networks
Article
2024-11-19
81 contributors
In this article
Azure Storage provides a layered security model. This model enables you to control the level of access to your storage accounts that your applications and enterprise environments demand, based on the type and subset of networks or resources that you use.
When you configure network rules, only applications that request data over the specified set of networks or through the specified set of Azure resources can access a storage account. You can limit access to your storage account to requests that come from specified IP addresses, IP ranges, subnets in an Azure virtual network, or resource instances of some Azure services.
Storage accounts have a public endpoint that's accessible through the internet. You can also createprivate endpoints for your storage account. Creating private endpoints assigns a private IP address from your virtual network to the storage account. It helps secure traffic between your virtual network and the storage account over a private link.
The Azure Storage firewall provides access control for the public endpoint of your storage account. You can also use the firewall to block all access through the public endpoint when you're using private endpoints. Your firewall configuration also enables trusted Azure platform services to access the storage account.
An application that accesses a storage account when network rules are in effect still requires proper authorization for the request. Authorization is supported with Microsoft Entra credentials for blobs, tables, file shares and queues, with a valid account access key, or with a shared access signature (SAS) token. When you configure a blob container for anonymous access, requests to read data in that container don't need to be authorized. The firewall rules remain in effect and will block anonymous traffic.
Turning on firewall rules for your storage account blocks incoming requests for data by default, unless the requests originate from a service that operates within an Azure virtual network or from allowed public IP addresses. Requests that are blocked include those from other Azure services, from the Azure portal, and from logging and metrics services.
You can grant access to Azure services that operate from within a virtual network by allowing traffic from the subnet that hosts the service instance. You can also enable a limited number of scenarios through the exceptions mechanism that this article describes. To access data from the storage account through the Azure portal, you need to be on a machine within the trusted boundary (either IP or virtual network) that you set up.
Note
We recommend that you use the Azure Az PowerShell module to interact with Azure. To get started, seeInstall Azure PowerShell. To learn how to migrate to the Az PowerShell module, seeMigrate Azure PowerShell from AzureRM to Az.
Scenarios
To secure your storage account, you should first configure a rule to deny access to traffic from all networks (including internet traffic) on the public endpoint, by default. Then, you should configure rules that grant access to traffic from specific virtual networks. You can also configure rules to grant access to traffic from selected public internet IP address ranges, enabling connections from specific internet or on-premises clients. This configuration helps you build a secure network boundary for your applications.
You can combine firewall rules that allow access from specific virtual networks and from public IP address ranges on the same storage account. You can apply storage firewall rules to existing storage accounts or when you create new storage accounts.
Storage firewall rules apply to the public endpoint of a storage account. You don't need any firewall access rules to allow traffic for private endpoints of a storage account. The process of approving the creation of a private endpoint grants implicit access to traffic from the subnet that hosts the private endpoint.
Important
Azure Storage firewall rules only apply todata planeoperations.Control planeoperations are not subject to the restrictions specified in firewall rules.
Some operations, such as blob container operations, can be performed through both the control plane and the data plane. So if you attempt to perform an operation such as listing containers from the Azure portal, the operation will succeed unless it is blocked by another mechanism. Attempts to access blob data from an application such as Azure Storage Explorer are controlled by the firewall restrictions.
For a list of data plane operations, see theAzure Storage REST API Reference.
For a list of control plane operations, see theAzure Storage Resource Provider REST API Reference.
Configure network access to Azure Storage
You can control access to the data in your storage account over network endpoints, or through trusted services or resources in any combination including:
Allow access from selected virtual network subnets using private endpoints.
Allow access from selected virtual network subnets using service endpoints.
Allow access from specific public IP addresses or ranges.
Allow access from selected Azure resource instances.
Allow access from trusted Azure services(usingManage exceptions).
Configure exceptions for logging and metrics services.
About virtual network endpoints
There are two types of virtual network endpoints for storage accounts:
Virtual Network service endpoints
Private endpoints
Virtual network service endpoints are public and accessible via the internet. The Azure Storage firewall provides the ability to control access to your storage account over such public endpoints. When you disable public network access to your storage account, all incoming requests for data are blocked by default. Only applications that request data from allowed sources that you configure in your storage account firewall settings will be able to access your data. Sources can include the source IP address or virtual network subnet of a client, or an Azure service or resource instance through which clients or services access your data. Requests that are blocked include those from other Azure services, from the Azure portal, and from logging and metrics services, unless you explicitly allow access in your firewall configuration.
A private endpoint uses a private IP address from your virtual network to access a storage account over the Microsoft backbone network. With a private endpoint, traffic between your virtual network and the storage account are secured over a private link. Storage firewall rules only apply to the public endpoints of a storage account, not private endpoints. The process of approving the creation of a private endpoint grants implicit access to traffic from the subnet that hosts the private endpoint. You can useNetwork Policiesto control traffic over private endpoints if you want to refine access rules. If you want to use private endpoints exclusively, you can use the firewall to block all access through the public endpoint.
To help you decide when to use each type of endpoint in your environment, seeCompare Private Endpoints and Service Endpoints.
How to approach network security for your storage account
To secure your storage account and build a secure network boundary for your applications:
Start by disabling all public network access for the storage account under thePublic network accesssetting in the storage account firewall.
Start by disabling all public network access for the storage account under thePublic network accesssetting in the storage account firewall.
Where possible, configure private links to your storage account from private endpoints on virtual network subnets where the clients reside that require access to your data.
Where possible, configure private links to your storage account from private endpoints on virtual network subnets where the clients reside that require access to your data.
If client applications require access over the public endpoints, change thePublic network accesssetting toEnabled from selected virtual networks and IP addresses. Then, as needed:Specify the virtual network subnets from which you want to allow access.Specify the public IP address ranges of clients from which you want to allow access, such as those on on-premises networks.Allow access from selected Azure resource instances.Add exceptions to allow access from trusted services required for operations such as backing up data.Add exceptions for logging and metrics.
If client applications require access over the public endpoints, change thePublic network accesssetting toEnabled from selected virtual networks and IP addresses. Then, as needed:
Specify the virtual network subnets from which you want to allow access.
Specify the public IP address ranges of clients from which you want to allow access, such as those on on-premises networks.
Allow access from selected Azure resource instances.
Add exceptions to allow access from trusted services required for operations such as backing up data.
Add exceptions for logging and metrics.
After you apply network rules, they're enforced for all requests. SAS tokens that grant access to a specific IP address serve to limit the access of the token holder, but they don't grant new access beyond configured network rules.
Network security perimeter (preview)
Network security perimeter(preview) allows organizations to define a logical network isolation boundary for PaaS resources (for example, Azure Blob Storage and SQL Database) that are deployed outside their virtual networks. The feature restricts public network access to PaaS resources outside the perimeter. However, you can exempt access by using explicit access rules for public inbound and outbound traffic. By design, access to a storage account from within a network security perimeter takes the highest precedence over other network access restrictions.
Currently, network security perimeter is in public preview for Azure Blob Storage, Azure Files (REST), Azure Tables, and Azure Queues. SeeTransition to a network security perimeter.
The list of services that have been onboarded to network security perimeter can be foundhere.
For services that are not on this list, as they have not yet been onboarded to network security perimeter, if you would like to allow access you can use a subscription-based rule on the network security perimeter. All resources within that subscription will then be given access to that network security perimeter. For more information on adding subscription-based access rule, referhere.
Important
Private endpoint traffic is considered highly secure and therefore isn't subject to network security perimeter rules. All other traffic, including trusted services, will be subject to network security perimeter rules if the storage account is associated with a perimeter.
This preview doesn't support the following services, operations, and protocols on a storage account:
Object replicationfor Azure Blob Storage
Object replicationfor Azure Blob Storage
Lifecycle managementfor Azure Blob Storage
Lifecycle managementfor Azure Blob Storage
SSH File transfer protocol (SFTP)over Azure Blob Storage
SSH File transfer protocol (SFTP)over Azure Blob Storage
Network file system (NFS) protocol withAzure Blob StorageandAzure Files.
Network file system (NFS) protocol withAzure Blob StorageandAzure Files.
Server message block (SMB) protocol with Azure Files can only be achieved through IP allowlisting at this time.
Server message block (SMB) protocol with Azure Files can only be achieved through IP allowlisting at this time.
Azure Blob Inventory
Azure Blob Inventory
Unmanaged disksdo not honour network security perimeter rules.
Unmanaged disksdo not honour network security perimeter rules.
Vaulted backups for Azure Blob Storage
Vaulted backups for Azure Blob Storage
We recommend you don't enable network security perimeter if you need to use any of these services, operations, or protocols. This is to prevent any potential data loss or data exfiltration risk.
Warning
For storage accounts that are associated with a network security perimeter, in order for customer managed keys (CMK) scenarios to work, ensure that the Azure Key Vault is accessible from within the perimeter to which the storage account has been associated.
To associate a network security perimeter with a storage account, follow thesecommon instructionsfor all PaaS resources.
Restrictions and considerations
Before implementing network security for your storage accounts, review the important restrictions and considerations discussed in this section.
Azure Storage firewall rules only apply todata planeoperations.Control planeoperations are not subject to the restrictions specified in firewall rules.
Review theRestrictions for IP network rules.
To access data by using tools such as the Azure portal, Azure Storage Explorer, and AzCopy, you must be on a machine within the trusted boundary that you establish when configuring network security rules.
Network rules are enforced on all network protocols for Azure Storage, including REST and SMB.
Network rules don't affect virtual machine (VM) disk traffic, including mount and unmount operations and disk I/O, but they do help protect REST access to page blobs.
You can use unmanaged disks in storage accounts with network rules applied to back up and restore VMs bycreating an exception. Firewall exceptions aren't applicable to managed disks, because Azure already manages them.
Classic storage accounts don't support firewalls and virtual networks.
If you delete a subnet that's included in a virtual network rule, it will be removed from the network rules for the storage account. If you create a new subnet by the same name, it won't have access to the storage account. To allow access, you must explicitly authorize the new subnet in the network rules for the storage account.
When referencing a service endpoint in a client application, it's recommended that you avoid taking a dependency on a cached IP address. The storage account IP address is subject to change, and relying on a cached IP address may result in unexpected behavior. Additionally, it's recommended that you honor the time-to-live (TTL) of the DNS record and avoid overriding it. Overriding the DNS TTL may result in unexpected behavior.
By design, access to a storage account from trusted services takes the highest precedence over other network access restrictions. If you setPublic network accesstoDisabledafter previously setting it toEnabled from selected virtual networks and IP addresses, anyresource instancesandexceptionsthat you previously configured, includingAllow Azure services on the trusted services list to access this storage account, will remain in effect. As a result, those resources and services might still have access to the storage account.
Authorization
Clients granted access via network rules must continue to meet the authorization requirements of the storage account to access the data. Authorization is supported with Microsoft Entra credentials for blobs and queues, with a valid account access key, or with a shared access signature (SAS) token.
When you configure a blob container for anonymous public access, requests to read data in that container don't need to be authorized, but the firewall rules remain in effect and will block anonymous traffic.
Change the default network access rule
By default, storage accounts accept connections from clients on any network. You can limit access to selected networksorprevent traffic from all networks and permit access only through aprivate endpoint.
You must set the default rule todeny, or network rules have no effect. However, changing this setting can affect your application's ability to connect to Azure Storage. Be sure to grant access to any allowed networks or set up access through a private endpoint before you change this setting.
Note
We recommend that you use the Azure Az PowerShell module to interact with Azure. To get started, seeInstall Azure PowerShell. To learn how to migrate to the Az PowerShell module, seeMigrate Azure PowerShell from AzureRM to Az.
Portal
PowerShell
Azure CLI
Go to the storage account that you want to secure.
Go to the storage account that you want to secure.
In the service menu, underSecurity + networking, selectNetworking.
In the service menu, underSecurity + networking, selectNetworking.
Choose what network access is enabled through the storage account's public endpoint:Select eitherEnabled from all networksorEnabled from selected virtual networks and IP addresses. If you select the second option, you'll be prompted to add virtual networks and IP address ranges.To restrict inbound access while allowing outbound access, selectDisabled.
Choose what network access is enabled through the storage account's public endpoint:
Select eitherEnabled from all networksorEnabled from selected virtual networks and IP addresses. If you select the second option, you'll be prompted to add virtual networks and IP address ranges.
Select eitherEnabled from all networksorEnabled from selected virtual networks and IP addresses. If you select the second option, you'll be prompted to add virtual networks and IP address ranges.
To restrict inbound access while allowing outbound access, selectDisabled.
To restrict inbound access while allowing outbound access, selectDisabled.
SelectSaveto apply your changes.
SelectSaveto apply your changes.

InstallAzure PowerShellandsign in.
InstallAzure PowerShellandsign in.
Choose which type of public network access you want to allow:To allow traffic from all networks, use theUpdate-AzStorageAccountNetworkRuleSetcommand and set the-DefaultActionparameter toAllow:Update-AzStorageAccountNetworkRuleSet -ResourceGroupName "myresourcegroup" -Name "mystorageaccount" -DefaultAction AllowTo allow traffic only from specific virtual networks, use theUpdate-AzStorageAccountNetworkRuleSetcommand and set the-DefaultActionparameter toDeny:Update-AzStorageAccountNetworkRuleSet -ResourceGroupName "myresourcegroup" -Name "mystorageaccount" -DefaultAction DenyTo block traffic from all networks, use theSet-AzStorageAccountcommand and set the-PublicNetworkAccessparameter toDisabled. Traffic will be allowed only through aprivate endpoint. You'll have to create that private endpoint.Set-AzStorageAccount -ResourceGroupName "myresourcegroup" -Name "mystorageaccount" -PublicNetworkAccess Disabled
Choose which type of public network access you want to allow:
To allow traffic from all networks, use theUpdate-AzStorageAccountNetworkRuleSetcommand and set the-DefaultActionparameter toAllow:Update-AzStorageAccountNetworkRuleSet -ResourceGroupName "myresourcegroup" -Name "mystorageaccount" -DefaultAction Allow
To allow traffic from all networks, use theUpdate-AzStorageAccountNetworkRuleSetcommand and set the-DefaultActionparameter toAllow:
Update-AzStorageAccountNetworkRuleSet
-DefaultAction
Allow
Update-AzStorageAccountNetworkRuleSet -ResourceGroupName "myresourcegroup" -Name "mystorageaccount" -DefaultAction Allow
Update-AzStorageAccountNetworkRuleSet -ResourceGroupName "myresourcegroup" -Name "mystorageaccount" -DefaultAction Allow
To allow traffic only from specific virtual networks, use theUpdate-AzStorageAccountNetworkRuleSetcommand and set the-DefaultActionparameter toDeny:Update-AzStorageAccountNetworkRuleSet -ResourceGroupName "myresourcegroup" -Name "mystorageaccount" -DefaultAction Deny
To allow traffic only from specific virtual networks, use theUpdate-AzStorageAccountNetworkRuleSetcommand and set the-DefaultActionparameter toDeny:
Update-AzStorageAccountNetworkRuleSet
-DefaultAction
Deny
Update-AzStorageAccountNetworkRuleSet -ResourceGroupName "myresourcegroup" -Name "mystorageaccount" -DefaultAction Deny
Update-AzStorageAccountNetworkRuleSet -ResourceGroupName "myresourcegroup" -Name "mystorageaccount" -DefaultAction Deny
To block traffic from all networks, use theSet-AzStorageAccountcommand and set the-PublicNetworkAccessparameter toDisabled. Traffic will be allowed only through aprivate endpoint. You'll have to create that private endpoint.Set-AzStorageAccount -ResourceGroupName "myresourcegroup" -Name "mystorageaccount" -PublicNetworkAccess Disabled
To block traffic from all networks, use theSet-AzStorageAccountcommand and set the-PublicNetworkAccessparameter toDisabled. Traffic will be allowed only through aprivate endpoint. You'll have to create that private endpoint.
Set-AzStorageAccount
-PublicNetworkAccess
Disabled
Set-AzStorageAccount -ResourceGroupName "myresourcegroup" -Name "mystorageaccount" -PublicNetworkAccess Disabled
Set-AzStorageAccount -ResourceGroupName "myresourcegroup" -Name "mystorageaccount" -PublicNetworkAccess Disabled
Install theAzure CLIandsign in.
Install theAzure CLIandsign in.
Choose which type of public network access you want to allow:To allow traffic from all networks, use theaz storage account updatecommand and set the--default-actionparameter toAllow:az storage account update --resource-group "myresourcegroup" --name "mystorageaccount" --default-action AllowTo allow traffic only from specific virtual networks, use theaz storage account updatecommand and set the--default-actionparameter toDeny:az storage account update --resource-group "myresourcegroup" --name "mystorageaccount" --default-action DenyTo block traffic from all networks, use theaz storage account updatecommand and set the--public-network-accessparameter toDisabled. Traffic will be allowed only through aprivate endpoint. You'll have to create that private endpoint.az storage account update --name MyStorageAccount --resource-group MyResourceGroup --public-network-access Disabled
Choose which type of public network access you want to allow:
To allow traffic from all networks, use theaz storage account updatecommand and set the--default-actionparameter toAllow:az storage account update --resource-group "myresourcegroup" --name "mystorageaccount" --default-action Allow
To allow traffic from all networks, use theaz storage account updatecommand and set the--default-actionparameter toAllow:
az storage account update
--default-action
Allow
az storage account update --resource-group "myresourcegroup" --name "mystorageaccount" --default-action Allow
az storage account update --resource-group "myresourcegroup" --name "mystorageaccount" --default-action Allow
To allow traffic only from specific virtual networks, use theaz storage account updatecommand and set the--default-actionparameter toDeny:az storage account update --resource-group "myresourcegroup" --name "mystorageaccount" --default-action Deny
To allow traffic only from specific virtual networks, use theaz storage account updatecommand and set the--default-actionparameter toDeny:
az storage account update
--default-action
Deny
az storage account update --resource-group "myresourcegroup" --name "mystorageaccount" --default-action Deny
az storage account update --resource-group "myresourcegroup" --name "mystorageaccount" --default-action Deny
To block traffic from all networks, use theaz storage account updatecommand and set the--public-network-accessparameter toDisabled. Traffic will be allowed only through aprivate endpoint. You'll have to create that private endpoint.az storage account update --name MyStorageAccount --resource-group MyResourceGroup --public-network-access Disabled
To block traffic from all networks, use theaz storage account updatecommand and set the--public-network-accessparameter toDisabled. Traffic will be allowed only through aprivate endpoint. You'll have to create that private endpoint.
az storage account update
--public-network-access
Disabled
az storage account update --name MyStorageAccount --resource-group MyResourceGroup --public-network-access Disabled
az storage account update --name MyStorageAccount --resource-group MyResourceGroup --public-network-access Disabled
Grant access from a virtual network
You can configure storage accounts to allow access only from specific subnets. The allowed subnets can belong to a virtual network in the same subscription or a different subscription, including those that belong to a different Microsoft Entra tenant. Withcross-region service endpoints, the allowed subnets can also be in different regions from the storage account.
You can enable aservice endpointfor Azure Storage within the virtual network. The service endpoint routes traffic from the virtual network through an optimal path to the Azure Storage service. The identities of the subnet and the virtual network are also transmitted with each request. Administrators can then configure network rules for the storage account that allow requests to be received from specific subnets in a virtual network. Clients granted access via these network rules must continue to meet the authorization requirements of the storage account to access the data.
Each storage account supports up to 400 virtual network rules. You can combine these rules withIP network rules.
Important
When referencing a service endpoint in a client application, it's recommended that you avoid taking a dependency on a cached IP address. The storage account IP address is subject to change, and relying on a cached IP address may result in unexpected behavior.
Additionally, it's recommended that you honor the time-to-live (TTL) of the DNS record and avoid overriding it. Overriding the DNS TTL may result in unexpected behavior.
Required permissions
To apply a virtual network rule to a storage account, the user must have the appropriate permissions for the subnets that are being added. AStorage Account Contributoror a user who has permission to theMicrosoft.Network/virtualNetworks/subnets/joinViaServiceEndpoint/actionAzure resource provider operationcan apply a rule by using a custom Azure role.
Microsoft.Network/virtualNetworks/subnets/joinViaServiceEndpoint/action
The storage account and the virtual networks that get access can be in different subscriptions, including subscriptions that are a part of a different Microsoft Entra tenant.
Configuration of rules that grant access to subnets in virtual networks that are a part of a different Microsoft Entra tenant are currently supported only through PowerShell, the Azure CLI, and REST APIs. You can't configure such rules through the Azure portal, though you can view them in the portal.
Azure Storage cross-region service endpoints
Cross-region service endpoints for Azure Storage became generally available in April 2023. They work between virtual networks and storage service instances in any region. With cross-region service endpoints, subnets no longer use a public IP address to communicate with any storage account, including those in another region. Instead, all the traffic from subnets to storage accounts uses a private IP address as a source IP. As a result, any storage accounts that use IP network rules to permit traffic from those subnets no longer have an effect.
Configuring service endpoints between virtual networks and service instances in apaired regioncan be an important part of your disaster recovery plan. Service endpoints allow continuity during a regional failover and access to read-only geo-redundant storage (RA-GRS) instances. Network rules that grant access from a virtual network to a storage account also grant access to any RA-GRS instance.
When you're planning for disaster recovery during a regional outage, create the virtual networks in the paired region in advance. Enable service endpoints for Azure Storage, with network rules granting access from these alternative virtual networks. Then apply these rules to your geo-redundant storage accounts.
Local and cross-region service endpoints can't coexist on the same subnet. To replace existing service endpoints with cross-region ones, delete the existingMicrosoft.Storageendpoints and re-create them as cross-region endpoints (Microsoft.Storage.Global).
Microsoft.Storage
Microsoft.Storage.Global
Managing virtual network and access rules
You can manage virtual network and access rules for storage accounts through the Azure portal, PowerShell, or the Azure CLI v2.
If you want to enable access to your storage account from a virtual network or subnet in another Microsoft Entra tenant, you must use PowerShell or the Azure CLI. The Azure portal doesn't show subnets in other Microsoft Entra tenants.
Portal
PowerShell
Azure CLI
Go to the storage account for which you want to configure virtual network and access rules.
Go to the storage account for which you want to configure virtual network and access rules.
In the service menu, underSecurity + networking, selectNetworking.
In the service menu, underSecurity + networking, selectNetworking.
Check that you've chosen to enable public network access from selected virtual networks and IP addresses.
Check that you've chosen to enable public network access from selected virtual networks and IP addresses.
To grant access to a virtual network by using a new network rule, underVirtual networks, selectAdd existing virtual network. Select theVirtual networksandSubnetsoptions, and then selectAdd. To create a new virtual network and grant it access, selectAdd new virtual network. Provide the necessary information to create the new virtual network, and then selectCreate. Currently, only virtual networks that belong to the same Microsoft Entra tenant appear for selection during rule creation. To grant access to a subnet in a virtual network that belongs to another tenant, use PowerShell, the Azure CLI, or REST API.
To grant access to a virtual network by using a new network rule, underVirtual networks, selectAdd existing virtual network. Select theVirtual networksandSubnetsoptions, and then selectAdd. To create a new virtual network and grant it access, selectAdd new virtual network. Provide the necessary information to create the new virtual network, and then selectCreate. Currently, only virtual networks that belong to the same Microsoft Entra tenant appear for selection during rule creation. To grant access to a subnet in a virtual network that belongs to another tenant, use PowerShell, the Azure CLI, or REST API.
To remove a virtual network or subnet rule, select the ellipsis (...) to open the context menu for the virtual network or subnet, and then selectRemove.
To remove a virtual network or subnet rule, select the ellipsis (...) to open the context menu for the virtual network or subnet, and then selectRemove.
SelectSaveto apply your changes.
SelectSaveto apply your changes.
Important
If you delete a subnet that's included in a network rule, it will be removed from the network rules for the storage account. If you create a new subnet by the same name, it won't have access to the storage account. To allow access, you must explicitly authorize the new subnet in the network rules for the storage account.
InstallAzure PowerShellandsign in.
InstallAzure PowerShellandsign in.
List virtual network rules:(Get-AzStorageAccountNetworkRuleSet -ResourceGroupName "myresourcegroup" -AccountName "mystorageaccount").VirtualNetworkRules
List virtual network rules:
(Get-AzStorageAccountNetworkRuleSet -ResourceGroupName "myresourcegroup" -AccountName "mystorageaccount").VirtualNetworkRules
(Get-AzStorageAccountNetworkRuleSet -ResourceGroupName "myresourcegroup" -AccountName "mystorageaccount").VirtualNetworkRules
Enable a service endpoint for Azure Storage on an existing virtual network and subnet:Get-AzVirtualNetwork -ResourceGroupName "myresourcegroup" -Name "myvnet" | Set-AzVirtualNetworkSubnetConfig -Name "mysubnet" -AddressPrefix "10.0.0.0/24" -ServiceEndpoint "Microsoft.Storage.Global" | Set-AzVirtualNetwork
Enable a service endpoint for Azure Storage on an existing virtual network and subnet:
Get-AzVirtualNetwork -ResourceGroupName "myresourcegroup" -Name "myvnet" | Set-AzVirtualNetworkSubnetConfig -Name "mysubnet" -AddressPrefix "10.0.0.0/24" -ServiceEndpoint "Microsoft.Storage.Global" | Set-AzVirtualNetwork
Get-AzVirtualNetwork -ResourceGroupName "myresourcegroup" -Name "myvnet" | Set-AzVirtualNetworkSubnetConfig -Name "mysubnet" -AddressPrefix "10.0.0.0/24" -ServiceEndpoint "Microsoft.Storage.Global" | Set-AzVirtualNetwork
Add a network rule for a virtual network and subnet:$subnet = Get-AzVirtualNetwork -ResourceGroupName "myresourcegroup" -Name "myvnet" | Get-AzVirtualNetworkSubnetConfig -Name "mysubnet"
Add-AzStorageAccountNetworkRule -ResourceGroupName "myresourcegroup" -Name "mystorageaccount" -VirtualNetworkResourceId $subnet.IdTo add a network rule for a subnet in a virtual network that belongs to another Microsoft Entra tenant, use a fully qualifiedVirtualNetworkResourceIdparameter in the form/subscriptions/subscription-ID/resourceGroups/resourceGroup-Name/providers/Microsoft.Network/virtualNetworks/vNet-name/subnets/subnet-name.
Add a network rule for a virtual network and subnet:
$subnet = Get-AzVirtualNetwork -ResourceGroupName "myresourcegroup" -Name "myvnet" | Get-AzVirtualNetworkSubnetConfig -Name "mysubnet"
Add-AzStorageAccountNetworkRule -ResourceGroupName "myresourcegroup" -Name "mystorageaccount" -VirtualNetworkResourceId $subnet.Id
$subnet = Get-AzVirtualNetwork -ResourceGroupName "myresourcegroup" -Name "myvnet" | Get-AzVirtualNetworkSubnetConfig -Name "mysubnet"
Add-AzStorageAccountNetworkRule -ResourceGroupName "myresourcegroup" -Name "mystorageaccount" -VirtualNetworkResourceId $subnet.Id
To add a network rule for a subnet in a virtual network that belongs to another Microsoft Entra tenant, use a fully qualifiedVirtualNetworkResourceIdparameter in the form/subscriptions/subscription-ID/resourceGroups/resourceGroup-Name/providers/Microsoft.Network/virtualNetworks/vNet-name/subnets/subnet-name.
VirtualNetworkResourceId
/subscriptions/subscription-ID/resourceGroups/resourceGroup-Name/providers/Microsoft.Network/virtualNetworks/vNet-name/subnets/subnet-name
Remove a network rule for a virtual network and subnet:$subnet = Get-AzVirtualNetwork -ResourceGroupName "myresourcegroup" -Name "myvnet" | Get-AzVirtualNetworkSubnetConfig -Name "mysubnet"
Remove-AzStorageAccountNetworkRule -ResourceGroupName "myresourcegroup" -Name "mystorageaccount" -VirtualNetworkResourceId $subnet.Id
Remove a network rule for a virtual network and subnet:
$subnet = Get-AzVirtualNetwork -ResourceGroupName "myresourcegroup" -Name "myvnet" | Get-AzVirtualNetworkSubnetConfig -Name "mysubnet"
Remove-AzStorageAccountNetworkRule -ResourceGroupName "myresourcegroup" -Name "mystorageaccount" -VirtualNetworkResourceId $subnet.Id
$subnet = Get-AzVirtualNetwork -ResourceGroupName "myresourcegroup" -Name "myvnet" | Get-AzVirtualNetworkSubnetConfig -Name "mysubnet"
Remove-AzStorageAccountNetworkRule -ResourceGroupName "myresourcegroup" -Name "mystorageaccount" -VirtualNetworkResourceId $subnet.Id
Install theAzure CLIandsign in.
Install theAzure CLIandsign in.
List virtual network rules:az storage account network-rule list --resource-group "myresourcegroup" --account-name "mystorageaccount" --query virtualNetworkRules
List virtual network rules:
az storage account network-rule list --resource-group "myresourcegroup" --account-name "mystorageaccount" --query virtualNetworkRules
az storage account network-rule list --resource-group "myresourcegroup" --account-name "mystorageaccount" --query virtualNetworkRules
Enable a service endpoint for Azure Storage on an existing virtual network and subnet:az network vnet subnet update --resource-group "myresourcegroup" --vnet-name "myvnet" --name "mysubnet" --service-endpoints "Microsoft.Storage.Global"
Enable a service endpoint for Azure Storage on an existing virtual network and subnet:
az network vnet subnet update --resource-group "myresourcegroup" --vnet-name "myvnet" --name "mysubnet" --service-endpoints "Microsoft.Storage.Global"
az network vnet subnet update --resource-group "myresourcegroup" --vnet-name "myvnet" --name "mysubnet" --service-endpoints "Microsoft.Storage.Global"
Add a network rule for a virtual network and subnet:subnetid=$(az network vnet subnet show --resource-group "myresourcegroup" --vnet-name "myvnet" --name "mysubnet" --query id --output tsv)
az storage account network-rule add --resource-group "myresourcegroup" --account-name "mystorageaccount" --subnet $subnetidTo add a rule for a subnet in a virtual network that belongs to another Microsoft Entra tenant, use a fully qualified subnet ID in the form/subscriptions/<subscription-ID>/resourceGroups/<resourceGroup-Name>/providers/Microsoft.Network/virtualNetworks/<vNet-name>/subnets/<subnet-name>. You can use thesubscriptionparameter to retrieve the subnet ID for a virtual network that belongs to another Microsoft Entra tenant.
Add a network rule for a virtual network and subnet:
subnetid=$(az network vnet subnet show --resource-group "myresourcegroup" --vnet-name "myvnet" --name "mysubnet" --query id --output tsv)
az storage account network-rule add --resource-group "myresourcegroup" --account-name "mystorageaccount" --subnet $subnetid
subnetid=$(az network vnet subnet show --resource-group "myresourcegroup" --vnet-name "myvnet" --name "mysubnet" --query id --output tsv)
az storage account network-rule add --resource-group "myresourcegroup" --account-name "mystorageaccount" --subnet $subnetid
To add a rule for a subnet in a virtual network that belongs to another Microsoft Entra tenant, use a fully qualified subnet ID in the form/subscriptions/<subscription-ID>/resourceGroups/<resourceGroup-Name>/providers/Microsoft.Network/virtualNetworks/<vNet-name>/subnets/<subnet-name>. You can use thesubscriptionparameter to retrieve the subnet ID for a virtual network that belongs to another Microsoft Entra tenant.
/subscriptions/<subscription-ID>/resourceGroups/<resourceGroup-Name>/providers/Microsoft.Network/virtualNetworks/<vNet-name>/subnets/<subnet-name>
subscription
Remove a network rule for a virtual network and subnet:subnetid=$(az network vnet subnet show --resource-group "myresourcegroup" --vnet-name "myvnet" --name "mysubnet" --query id --output tsv)
az storage account network-rule remove --resource-group "myresourcegroup" --account-name "mystorageaccount" --subnet $subnetid
Remove a network rule for a virtual network and subnet:
subnetid=$(az network vnet subnet show --resource-group "myresourcegroup" --vnet-name "myvnet" --name "mysubnet" --query id --output tsv)
az storage account network-rule remove --resource-group "myresourcegroup" --account-name "mystorageaccount" --subnet $subnetid
subnetid=$(az network vnet subnet show --resource-group "myresourcegroup" --vnet-name "myvnet" --name "mysubnet" --query id --output tsv)
az storage account network-rule remove --resource-group "myresourcegroup" --account-name "mystorageaccount" --subnet $subnetid
Grant access from an internet IP range
You can use IP network rules to allow access from specific public internet IP address ranges by creating IP network rules. Each storage account supports up to 400 rules. These rules grant access to specific internet-based services and on-premises networks and block general internet traffic.
Restrictions for IP network rules
The following restrictions apply to IP address ranges:
IP network rules are allowed only forpublic internetIP addresses.IP address ranges reserved for private networks (as defined inRFC 1918) aren't allowed in IP rules. Private networks include addresses that start with 10, 172.16 to 172.31, and 192.168.
IP network rules are allowed only forpublic internetIP addresses.
IP address ranges reserved for private networks (as defined inRFC 1918) aren't allowed in IP rules. Private networks include addresses that start with 10, 172.16 to 172.31, and 192.168.
You must provide allowed internet address ranges by usingCIDR notationin the form 16.17.18.0/24 or as individual IP addresses like 16.17.18.19.
You must provide allowed internet address ranges by usingCIDR notationin the form 16.17.18.0/24 or as individual IP addresses like 16.17.18.19.
Small address ranges that use /31 or /32 prefix sizes are not supported. Configure these ranges by using individual IP address rules.
Small address ranges that use /31 or /32 prefix sizes are not supported. Configure these ranges by using individual IP address rules.
Only IPv4 addresses are supported for configuration of storage firewall rules.
Only IPv4 addresses are supported for configuration of storage firewall rules.
Important
You can't use IP network rules in the following cases:
To restrict access to clients in same Azure region as the storage account. IP network rules have no effect on requests that originate from the same Azure region as the storage account. UseVirtual network rulesto allow same-region requests.
To restrict access to clients in apaired regionthat are in a virtual network that has a service endpoint.
To restrict access to Azure services deployed in the same region as the storage account. Services deployed in the same region as the storage account use private Azure IP addresses for communication. So, you can't restrict access to specific Azure services based on their public outbound IP address range.
Configuring access from on-premises networks
To grant access from your on-premises networks to your storage account by using an IP network rule, you must identify the internet-facing IP addresses that your network uses. Contact your network administrator for help.
If you're usingAzure ExpressRoutefrom your premises, you need to identify the NAT IP addresses used for Microsoft peering. Either the service provider or the customer provides the NAT IP addresses.
To allow access to your service resources, you must allow these public IP addresses in the firewall setting for resource IPs.
Managing IP network rules
You can manage IP network rules for storage accounts through the Azure portal, PowerShell, or the Azure CLI v2.
Portal
PowerShell
Azure CLI
Go to the storage account for which you want to manage IP network rules.
Go to the storage account for which you want to manage IP network rules.
In the service menu, underSecurity + networking, selectNetworking.
In the service menu, underSecurity + networking, selectNetworking.
Check that you've chosen to enable public network access from selected virtual networks and IP addresses.
Check that you've chosen to enable public network access from selected virtual networks and IP addresses.
To grant access to an internet IP range, enter the IP address or address range (in CIDR format) underFirewall>Address Range.
To grant access to an internet IP range, enter the IP address or address range (in CIDR format) underFirewall>Address Range.
To remove an IP network rule, select the delete icon () next to the address range.
To remove an IP network rule, select the delete icon () next to the address range.
SelectSaveto apply your changes.
SelectSaveto apply your changes.
InstallAzure PowerShellandsign in.
InstallAzure PowerShellandsign in.
List IP network rules:(Get-AzStorageAccountNetworkRuleSet -ResourceGroupName "myresourcegroup" -AccountName "mystorageaccount").IPRules
List IP network rules:
(Get-AzStorageAccountNetworkRuleSet -ResourceGroupName "myresourcegroup" -AccountName "mystorageaccount").IPRules
(Get-AzStorageAccountNetworkRuleSet -ResourceGroupName "myresourcegroup" -AccountName "mystorageaccount").IPRules
Add a network rule for an individual IP address:Add-AzStorageAccountNetworkRule -ResourceGroupName "myresourcegroup" -AccountName "mystorageaccount" -IPAddressOrRange "16.17.18.19"
Add a network rule for an individual IP address:
Add-AzStorageAccountNetworkRule -ResourceGroupName "myresourcegroup" -AccountName "mystorageaccount" -IPAddressOrRange "16.17.18.19"
Add-AzStorageAccountNetworkRule -ResourceGroupName "myresourcegroup" -AccountName "mystorageaccount" -IPAddressOrRange "16.17.18.19"
Add a network rule for an IP address range:Add-AzStorageAccountNetworkRule -ResourceGroupName "myresourcegroup" -AccountName "mystorageaccount" -IPAddressOrRange "16.17.18.0/24"
Add a network rule for an IP address range:
Add-AzStorageAccountNetworkRule -ResourceGroupName "myresourcegroup" -AccountName "mystorageaccount" -IPAddressOrRange "16.17.18.0/24"
Add-AzStorageAccountNetworkRule -ResourceGroupName "myresourcegroup" -AccountName "mystorageaccount" -IPAddressOrRange "16.17.18.0/24"
Remove a network rule for an individual IP address:Remove-AzStorageAccountNetworkRule -ResourceGroupName "myresourcegroup" -AccountName "mystorageaccount" -IPAddressOrRange "16.17.18.19"
Remove a network rule for an individual IP address:
Remove-AzStorageAccountNetworkRule -ResourceGroupName "myresourcegroup" -AccountName "mystorageaccount" -IPAddressOrRange "16.17.18.19"
Remove-AzStorageAccountNetworkRule -ResourceGroupName "myresourcegroup" -AccountName "mystorageaccount" -IPAddressOrRange "16.17.18.19"
Remove a network rule for an IP address range:Remove-AzStorageAccountNetworkRule -ResourceGroupName "myresourcegroup" -AccountName "mystorageaccount" -IPAddressOrRange "16.17.18.0/24"
Remove a network rule for an IP address range:
Remove-AzStorageAccountNetworkRule -ResourceGroupName "myresourcegroup" -AccountName "mystorageaccount" -IPAddressOrRange "16.17.18.0/24"
Remove-AzStorageAccountNetworkRule -ResourceGroupName "myresourcegroup" -AccountName "mystorageaccount" -IPAddressOrRange "16.17.18.0/24"
Install theAzure CLIandsign in.
Install theAzure CLIandsign in.
List IP network rules:az storage account network-rule list --resource-group "myresourcegroup" --account-name "mystorageaccount" --query ipRules
List IP network rules:
az storage account network-rule list --resource-group "myresourcegroup" --account-name "mystorageaccount" --query ipRules
az storage account network-rule list --resource-group "myresourcegroup" --account-name "mystorageaccount" --query ipRules
Add a network rule for an individual IP address:az storage account network-rule add --resource-group "myresourcegroup" --account-name "mystorageaccount" --ip-address "16.17.18.19"
Add a network rule for an individual IP address:
az storage account network-rule add --resource-group "myresourcegroup" --account-name "mystorageaccount" --ip-address "16.17.18.19"
az storage account network-rule add --resource-group "myresourcegroup" --account-name "mystorageaccount" --ip-address "16.17.18.19"
Add a network rule for an IP address range:az storage account network-rule add --resource-group "myresourcegroup" --account-name "mystorageaccount" --ip-address "16.17.18.0/24"
Add a network rule for an IP address range:
az storage account network-rule add --resource-group "myresourcegroup" --account-name "mystorageaccount" --ip-address "16.17.18.0/24"
az storage account network-rule add --resource-group "myresourcegroup" --account-name "mystorageaccount" --ip-address "16.17.18.0/24"
Remove a network rule for an individual IP address:az storage account network-rule remove --resource-group "myresourcegroup" --account-name "mystorageaccount" --ip-address "16.17.18.19"
Remove a network rule for an individual IP address:
az storage account network-rule remove --resource-group "myresourcegroup" --account-name "mystorageaccount" --ip-address "16.17.18.19"
az storage account network-rule remove --resource-group "myresourcegroup" --account-name "mystorageaccount" --ip-address "16.17.18.19"
Remove a network rule for an IP address range:az storage account network-rule remove --resource-group "myresourcegroup" --account-name "mystorageaccount" --ip-address "16.17.18.0/24"
Remove a network rule for an IP address range:
az storage account network-rule remove --resource-group "myresourcegroup" --account-name "mystorageaccount" --ip-address "16.17.18.0/24"
az storage account network-rule remove --resource-group "myresourcegroup" --account-name "mystorageaccount" --ip-address "16.17.18.0/24"

Grant access from Azure resource instances
In some cases, an application might depend on Azure resources that can't be isolated through a virtual network or an IP address rule. But you still want to secure and restrict storage account access to only your application's Azure resources. You can configure storage accounts to allow access to specific resource instances of trusted Azure services by creating a resource instance rule.
The Azure role assignments of the resource instance determine the types of operations that a resource instance can perform on storage account data. Resource instances must be from the same tenant as your storage account, but they can belong to any subscription in the tenant.
Portal
PowerShell
Azure CLI
You can add or remove resource network rules in the Azure portal:
Sign in to theAzure portal.
Sign in to theAzure portal.
Locate your storage account and display the account overview.
Locate your storage account and display the account overview.
In the service menu, underSecurity + networking, selectNetworking.
In the service menu, underSecurity + networking, selectNetworking.
Check that you've chosen to enable public network access from selected virtual networks and IP addresses.
Check that you've chosen to enable public network access from selected virtual networks and IP addresses.
Scroll down to findResource instances. In theResource typedropdown list, select the resource type of your resource instance.
Scroll down to findResource instances. In theResource typedropdown list, select the resource type of your resource instance.
In theInstance namedropdown list, select the resource instance. You can also choose to include all resource instances in the current tenant, subscription, or resource group.
In theInstance namedropdown list, select the resource instance. You can also choose to include all resource instances in the current tenant, subscription, or resource group.
SelectSaveto apply your changes. The resource instance appears in theResource instancessection of the page for network settings.
SelectSaveto apply your changes. The resource instance appears in theResource instancessection of the page for network settings.
To remove the resource instance, select the delete icon () next to the resource instance.
You can use PowerShell commands to add or remove resource network rules.
Add a network rule that grants access from a resource instance:
$resourceId = "/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/myResourceGroup/providers/Microsoft.DataFactory/factories/myDataFactory"
$tenantId = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
$resourceGroupName = "myResourceGroup"
$accountName = "mystorageaccount"

Add-AzStorageAccountNetworkRule -ResourceGroupName $resourceGroupName -Name $accountName -TenantId $tenantId -ResourceId $resourceId
$resourceId = "/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/myResourceGroup/providers/Microsoft.DataFactory/factories/myDataFactory"
$tenantId = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
$resourceGroupName = "myResourceGroup"
$accountName = "mystorageaccount"

Add-AzStorageAccountNetworkRule -ResourceGroupName $resourceGroupName -Name $accountName -TenantId $tenantId -ResourceId $resourceId
Specify multiple resource instances at once by modifying the network rule set:
$resourceId1 = "/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/myResourceGroup/providers/Microsoft.DataFactory/factories/myDataFactory"
$resourceId2 = "/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/myResourceGroup/providers/Microsoft.Sql/servers/mySQLServer"
$tenantId = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
$resourceGroupName = "myResourceGroup"
$accountName = "mystorageaccount"

Update-AzStorageAccountNetworkRuleSet -ResourceGroupName $resourceGroupName -Name $accountName -ResourceAccessRule (@{ResourceId=$resourceId1;TenantId=$tenantId},@{ResourceId=$resourceId2;TenantId=$tenantId})
$resourceId1 = "/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/myResourceGroup/providers/Microsoft.DataFactory/factories/myDataFactory"
$resourceId2 = "/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/myResourceGroup/providers/Microsoft.Sql/servers/mySQLServer"
$tenantId = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
$resourceGroupName = "myResourceGroup"
$accountName = "mystorageaccount"

Update-AzStorageAccountNetworkRuleSet -ResourceGroupName $resourceGroupName -Name $accountName -ResourceAccessRule (@{ResourceId=$resourceId1;TenantId=$tenantId},@{ResourceId=$resourceId2;TenantId=$tenantId})
Remove a network rule that grants access from a resource instance:
$resourceId = "/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/myResourceGroup/providers/Microsoft.DataFactory/factories/myDataFactory"
$tenantId = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
$resourceGroupName = "myResourceGroup"
$accountName = "mystorageaccount"

Remove-AzStorageAccountNetworkRule -ResourceGroupName $resourceGroupName -Name $accountName -TenantId $tenantId -ResourceId $resourceId
$resourceId = "/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/myResourceGroup/providers/Microsoft.DataFactory/factories/myDataFactory"
$tenantId = "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx"
$resourceGroupName = "myResourceGroup"
$accountName = "mystorageaccount"

Remove-AzStorageAccountNetworkRule -ResourceGroupName $resourceGroupName -Name $accountName -TenantId $tenantId -ResourceId $resourceId
Remove all network rules that grant access from resource instances:
$resourceGroupName = "myResourceGroup"
$accountName = "mystorageaccount"

Update-AzStorageAccountNetworkRuleSet -ResourceGroupName $resourceGroupName -Name $accountName -ResourceAccessRule @()
$resourceGroupName = "myResourceGroup"
$accountName = "mystorageaccount"

Update-AzStorageAccountNetworkRuleSet -ResourceGroupName $resourceGroupName -Name $accountName -ResourceAccessRule @()
View a complete list of resource instances that have access to the storage account:
$resourceGroupName = "myResourceGroup"
$accountName = "mystorageaccount"

$rule = Get-AzStorageAccountNetworkRuleSet -ResourceGroupName $resourceGroupName -Name $accountName
$rule.ResourceAccessRules
$resourceGroupName = "myResourceGroup"
$accountName = "mystorageaccount"

$rule = Get-AzStorageAccountNetworkRuleSet -ResourceGroupName $resourceGroupName -Name $accountName
$rule.ResourceAccessRules
You can use Azure CLI commands to add or remove resource network rules.
Add a network rule that grants access from a resource instance:
az storage account network-rule add \
    --resource-id /subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/myResourceGroup/providers/Microsoft.Synapse/workspaces/testworkspace \
    --tenant-id xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx \
    -g myResourceGroup \
    --account-name mystorageaccount
az storage account network-rule add \
    --resource-id /subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/myResourceGroup/providers/Microsoft.Synapse/workspaces/testworkspace \
    --tenant-id xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx \
    -g myResourceGroup \
    --account-name mystorageaccount
Remove a network rule that grants access from a resource instance:
az storage account network-rule remove \
    --resource-id /subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/myResourceGroup/providers/Microsoft.Synapse/workspaces/testworkspace \
    --tenant-id xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx \
    -g myResourceGroup \
    --account-name mystorageaccount
az storage account network-rule remove \
    --resource-id /subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/myResourceGroup/providers/Microsoft.Synapse/workspaces/testworkspace \
    --tenant-id xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx \
    -g myResourceGroup \
    --account-name mystorageaccount
View a complete list of resource instances that have access to the storage account:
az storage account network-rule list \
    -g myResourceGroup \
    --account-name mystorageaccount
az storage account network-rule list \
    -g myResourceGroup \
    --account-name mystorageaccount

Grant access to trusted Azure services
Some Azure services operate from networks that you can't include in your network rules. You can grant a subset of such trusted Azure services access to the storage account, while maintaining network rules for other apps. These trusted services will then use strong authentication to connect to your storage account.
You can grant access to trusted Azure services by creating a network rule exception. TheManage exceptionssection of this article provides step-by-step guidance.

Trusted access for resources registered in your Microsoft Entra tenant
Resources of some services can access your storage account for selected operations, such as writing logs or running backups. Those services must be registered in a subscription that is located in the same Microsoft Entra tenant as your storage account. The following table describes each service and the allowed operations.
Microsoft.RecoveryServices
Microsoft.DataBox
Microsoft.Kusto
Microsoft.DevTestLab
Microsoft.EventGrid
Microsoft.EventHub
Microsoft.StorageSync
Microsoft.HDInsight
Microsoft.ImportExport
Microsoft.Insights
Microsoft.Network
Microsoft.SiteRecovery

Trusted access based on a managed identity
The following table lists services that can access your storage account data if the resource instances of those services have the appropriate permission.
Microsoft.AgFoodPlatform/farmBeats
Microsoft.ApiManagement/service
Microsoft.AutonomousSystems/workspaces
Microsoft.Cache/Redis
Microsoft.Search/searchServices
Microsoft.CognitiveService/accounts
Microsoft.CostManagementExports
Microsoft.Databricks/accessConnectors
Microsoft.DataFactory/factories
Microsoft.Kusto/Clusters
Microsoft.DataProtection/BackupVaults
Microsoft.DataShare/accounts
Microsoft.DBForPostgreSQL
Microsoft.Devices/IotHubs
Microsoft.DevTestLab/labs
Microsoft.EventGrid/domains
Microsoft.EventGrid/partnerTopics
Microsoft.EventGrid/systemTopics
Microsoft.EventGrid/topics
Microsoft.Fabric
Microsoft.HealthcareApis/services
Microsoft.HealthcareApis/workspaces
Microsoft.IoTCentral/IoTApps
Microsoft.keyvault/managedHSMs
Microsoft.Logic/integrationAccounts
Microsoft.Logic/workflows
Microsoft.MachineLearning/registries
Microsoft.MachineLearningServices
Microsoft.MachineLearningServices/workspaces
Microsoft.Media/mediaservices
Microsoft.Migrate/migrateprojects
Microsoft.Network/expressRoutePorts
Microsoft.PowerPlatform/enterprisePolicies
Microsoft.ProjectArcadia/workspaces
Microsoft.ProjectBabylon/accounts
Microsoft.Purview/accounts
Microsoft.RecoveryServices/vaults
Microsoft.Security/dataScanners
Microsoft.Singularity/accounts
Microsoft.Sql
Microsoft.Sql/servers
Microsoft.Sql
COPY
openrowset
Microsoft.StreamAnalytics
Microsoft.StreamAnalytics/streamingjobs
Microsoft.Synapse/workspaces
Microsoft.VideoIndexer/Accounts
If your account doesn't have the hierarchical namespace feature enabled on it, you can grant permission by explicitly assigning an Azure role to themanaged identityfor each resource instance. In this case, the scope of access for the instance corresponds to the Azure role that's assigned to the managed identity.
You can use the same technique for an account that has the hierarchical namespace feature enabled on it. However, you don't have to assign an Azure role if you add the managed identity to the access control list (ACL) of any directory or blob that the storage account contains. In that case, the scope of access for the instance corresponds to the directory or file to which the managed identity has access.
You can also combine Azure roles and ACLs together to grant access. To learn more, seeAccess control model in Azure Data Lake Storage.
We recommend that youuse resource instance rules to grant access to specific resources.

Manage exceptions
In some cases, like storage analytics, access to read resource logs and metrics is required from outside the network boundary. When you configure trusted services to access the storage account, you can allow read access for the log files, metrics tables, or both by creating a network rule exception. You can manage network rule exceptions through the Azure portal, PowerShell, or the Azure CLI v2.
To learn more about working with storage analytics, seeUse Azure Storage analytics to collect logs and metrics data.
Portal
PowerShell
Azure CLI
Go to the storage account for which you want to manage exceptions.
Go to the storage account for which you want to manage exceptions.
In the service menu, underSecurity + networking, selectNetworking.
In the service menu, underSecurity + networking, selectNetworking.
Check that you've chosen to enable public network access from selected virtual networks and IP addresses.
Check that you've chosen to enable public network access from selected virtual networks and IP addresses.
UnderExceptions, select the exceptions that you want to grant.
UnderExceptions, select the exceptions that you want to grant.
SelectSaveto apply your changes.
SelectSaveto apply your changes.
InstallAzure PowerShellandsign in.
InstallAzure PowerShellandsign in.
Display the exceptions for the storage account's network rules:(Get-AzStorageAccountNetworkRuleSet -ResourceGroupName "myresourcegroup" -Name "mystorageaccount").Bypass
Display the exceptions for the storage account's network rules:
(Get-AzStorageAccountNetworkRuleSet -ResourceGroupName "myresourcegroup" -Name "mystorageaccount").Bypass
(Get-AzStorageAccountNetworkRuleSet -ResourceGroupName "myresourcegroup" -Name "mystorageaccount").Bypass
Configure the exceptions to the storage account's network rules:Update-AzStorageAccountNetworkRuleSet -ResourceGroupName "myresourcegroup" -Name "mystorageaccount" -Bypass AzureServices,Metrics,Logging
Configure the exceptions to the storage account's network rules:
Update-AzStorageAccountNetworkRuleSet -ResourceGroupName "myresourcegroup" -Name "mystorageaccount" -Bypass AzureServices,Metrics,Logging
Update-AzStorageAccountNetworkRuleSet -ResourceGroupName "myresourcegroup" -Name "mystorageaccount" -Bypass AzureServices,Metrics,Logging
Remove the exceptions to the storage account's network rules:Update-AzStorageAccountNetworkRuleSet -ResourceGroupName "myresourcegroup" -Name "mystorageaccount" -Bypass None
Remove the exceptions to the storage account's network rules:
Update-AzStorageAccountNetworkRuleSet -ResourceGroupName "myresourcegroup" -Name "mystorageaccount" -Bypass None
Update-AzStorageAccountNetworkRuleSet -ResourceGroupName "myresourcegroup" -Name "mystorageaccount" -Bypass None
Install theAzure CLIandsign in.
Install theAzure CLIandsign in.
Display the exceptions for the storage account's network rules:az storage account show --resource-group "myresourcegroup" --name "mystorageaccount" --query networkRuleSet.bypass
Display the exceptions for the storage account's network rules:
az storage account show --resource-group "myresourcegroup" --name "mystorageaccount" --query networkRuleSet.bypass
az storage account show --resource-group "myresourcegroup" --name "mystorageaccount" --query networkRuleSet.bypass
Configure the exceptions to the storage account's network rules:az storage account update --resource-group "myresourcegroup" --name "mystorageaccount" --bypass Logging Metrics AzureServices
Configure the exceptions to the storage account's network rules:
az storage account update --resource-group "myresourcegroup" --name "mystorageaccount" --bypass Logging Metrics AzureServices
az storage account update --resource-group "myresourcegroup" --name "mystorageaccount" --bypass Logging Metrics AzureServices
Remove the exceptions to the storage account's network rules:az storage account update --resource-group "myresourcegroup" --name "mystorageaccount" --bypass None
Remove the exceptions to the storage account's network rules:
az storage account update --resource-group "myresourcegroup" --name "mystorageaccount" --bypass None
az storage account update --resource-group "myresourcegroup" --name "mystorageaccount" --bypass None
Next steps
Learn more aboutAzure network service endpoints.
Dig deeper intosecurity recommendations for Azure Blob storage.
Feedback
Was this page helpful?
Additional resources