Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Create Azure Local virtual machines enabled by Azure Arc
Article
2025-03-24
5 contributors
In this article
Applies to: Azure Local 2311.2 and later
This article describes how to create Azure Local virtual machines (VMs) starting with the VM images that you created on your Azure Local instance. You can create Azure Local VMs using the Azure CLI, Azure portal, or Azure Resource Manager template.
About Azure Local resource
Use theAzure Local resource pagefor the following operations:
Create and manage Azure Local VM resources such as VM images, disks, network interfaces.
View and access Azure Arc resource bridge and custom location associated with the Azure Local instance.
Provision and manage VMs.
The procedure to create VMs is described in the next section.
Prerequisites
Before you create an Azure Local VM, make sure that the following prerequisites are completed.
Azure CLI
Azure portal
Azure Resource Manager template
Bicep template
Terraform template
Access to an Azure subscription with the appropriate RBAC role and permissions assigned. For more information, seeRBAC roles for Azure Local VM management.
Access to a resource group where you want to provision the VM.
Access to one or more VM images on your Azure Local. These VM images could be created by one of the following procedures:VM image starting from an image in Azure Marketplace.VM image starting from an image in Azure Storage account.VM image starting from an image in a local share.
VM image starting from an image in Azure Marketplace.
VM image starting from an image in Azure Storage account.
VM image starting from an image in a local share.
A custom location for your Azure Local that you'll use to provision VMs. The custom location will also show up in theOverviewpage for Azure Local.
If using a client to connect to your Azure Local, seeConnect to Azure Local via Azure CLI client.
If using a client to connect to your Azure Local, seeConnect to Azure Local via Azure CLI client.
Access to a network interface that you created on a logical network associated with your Azure Local. You can choose a network interface with static IP or one with a dynamic IP allocation. For more information, see how toCreate network interfaces.
Access to a network interface that you created on a logical network associated with your Azure Local. You can choose a network interface with static IP or one with a dynamic IP allocation. For more information, see how toCreate network interfaces.
Access to an Azure subscription with the appropriate RBAC role and permissions assigned. For more information, seeRBAC roles for Azure Local VM management.
Access to a resource group where you want to provision the VM.
Access to one or more VM images on your Azure Local. These VM images could be created by one of the following procedures:VM image starting from an image in Azure Marketplace.VM image starting from an image in Azure Storage account.VM image starting from an image in a local share.
VM image starting from an image in Azure Marketplace.
VM image starting from an image in Azure Storage account.
VM image starting from an image in a local share.
A custom location for your Azure Local that you'll use to provision VMs. The custom location will also show up in theOverviewpage for Azure Local.
Access to an Azure subscription with the appropriate RBAC role and permissions assigned. For more information, seeRBAC roles for Azure Local VM management.
Access to a resource group where you want to provision the VM.
Access to one or more VM images on your Azure Local. These VM images could be created by one of the following procedures:VM image starting from an image in Azure Marketplace.VM image starting from an image in Azure Storage account.VM image starting from an image in a local share.
VM image starting from an image in Azure Marketplace.
VM image starting from an image in Azure Storage account.
VM image starting from an image in a local share.
A custom location for your Azure Local that you'll use to provision VMs. The custom location will also show up in theOverviewpage for Azure Local.
Access to a logical network that you associate with the VM on your Azure Local. For more information, see how toCreate logical network.
Download the sample Azure Resource Manager templatein the GitHub Azure QuickStarts repo. You use this template to create a VM.
Access to an Azure subscription with the appropriate RBAC role and permissions assigned. For more information, seeRBAC roles for Azure Local VM management.
Access to a resource group where you want to provision the VM.
Access to one or more VM images on your Azure Local. These VM images could be created by one of the following procedures:VM image starting from an image in Azure Marketplace.VM image starting from an image in Azure Storage account.VM image starting from an image in a local share.
VM image starting from an image in Azure Marketplace.
VM image starting from an image in Azure Storage account.
VM image starting from an image in a local share.
A custom location for your Azure Local that you'll use to provision VMs. The custom location will also show up in theOverviewpage for Azure Local.
Access to a logical network that you associate with the VM on your Azure Local. For more information, see how toCreate logical network.
Download the sample Bicep template
Access to an Azure subscription with the appropriate RBAC role and permissions assigned. For more information, seeRBAC roles for Azure Local VM management.
Access to a resource group where you want to provision the VM.
Access to one or more VM images on your Azure Local. These VM images could be created by one of the following procedures:VM image starting from an image in Azure Marketplace.VM image starting from an image in Azure Storage account.VM image starting from an image in a local share.
VM image starting from an image in Azure Marketplace.
VM image starting from an image in Azure Storage account.
VM image starting from an image in a local share.
A custom location for your Azure Local that you'll use to provision VMs. The custom location will also show up in theOverviewpage for Azure Local.
Access to a logical network that you associate with the VM of your Azure Local. For more information, seeCreate logical networks.
Access to a logical network that you associate with the VM of your Azure Local. For more information, seeCreate logical networks.
Make sure Terraform is installed and up to date on your machine.To verify your Terraform version, run theterraform -vcommand.Here's an example of sample output:PS C:\Users\username\terraform-azurenn-avm-res-azurestackhci-virtualmachineinstance> terraform -v 
Terraform vi.9.8 on windows_amd64
+ provider registry.terraform.io/azure/azapi vl.15.0 
+ provider registry.terraform.io/azure/modtm V0.3.2 
+ provider registry.terraform.io/hashicorp/azurerm v3.116.0 
+ provider registry.terraform.io/hashicorp/random V3.6.3
Make sure Terraform is installed and up to date on your machine.
To verify your Terraform version, run theterraform -vcommand.
terraform -v
Here's an example of sample output:
PS C:\Users\username\terraform-azurenn-avm-res-azurestackhci-virtualmachineinstance> terraform -v 
Terraform vi.9.8 on windows_amd64
+ provider registry.terraform.io/azure/azapi vl.15.0 
+ provider registry.terraform.io/azure/modtm V0.3.2 
+ provider registry.terraform.io/hashicorp/azurerm v3.116.0 
+ provider registry.terraform.io/hashicorp/random V3.6.3
PS C:\Users\username\terraform-azurenn-avm-res-azurestackhci-virtualmachineinstance> terraform -v 
Terraform vi.9.8 on windows_amd64
+ provider registry.terraform.io/azure/azapi vl.15.0 
+ provider registry.terraform.io/azure/modtm V0.3.2 
+ provider registry.terraform.io/hashicorp/azurerm v3.116.0 
+ provider registry.terraform.io/hashicorp/random V3.6.3
Make sure Git is installed and up to date on your machine.To verify your version of Git, run thegit --versioncommand.
Make sure Git is installed and up to date on your machine.
To verify your version of Git, run thegit --versioncommand.
git --version
Create Azure Local VMs
Follow these steps to create a VM on your Azure Local.
Azure CLI
Azure portal
Azure Resource Manager template
Bicep template
Terraform template
Follow these steps on the client running az CLI that is connected to your Azure Local.
Sign in and set subscription
Connect to a machineon your Azure Local.
Connect to a machineon your Azure Local.
Sign in. Type:az login --use-device-code
Sign in. Type:
az login --use-device-code
az login --use-device-code
Set your subscription.az account set --subscription <Subscription ID>
Set your subscription.
az account set --subscription <Subscription ID>
az account set --subscription <Subscription ID>
Create a Windows VM
Depending on the type of the network interface that you created, you can create a VM that has network interface with static IP or one with a dynamic IP allocation.
Note
If you need more than one network interface with static IPs for your VM, create one or more interfaces now before you create the VM. Adding a network interface with static IP, after the VM is provisioned, isn't supported.
Here we create a VM that uses specific memory and processor counts on a specified storage path.
Set some parameters.$vmName ="local-vm"
$subscription =  "<Subscription ID>"
$resource_group = "local-rg"
$customLocationName = "local-cl"
$customLocationID ="/subscriptions/$subscription/resourceGroups/$resource_group/providers/Microsoft.ExtendedLocation/customLocations/$customLocationName"
$location = "eastus"
$computerName = "mycomputer"
$userName = "local-user"
$password = "<Password for the VM>"
$imageName ="ws22server"
$nicName ="local-vnic" 
$storagePathName = "local-sp" 
$storagePathId = "/subscriptions/<Subscription ID>/resourceGroups/local-rg/providers/Microsoft.AzureStackHCI/storagecontainers/local-sp"The parameters for VM creation are tabulated as follows:ParametersDescriptionnameName for the VM that you create for your Azure Local. Make sure to provide a name that follows theRules for Azure resources.admin-usernameUsername for the user on the VM you're deploying on your Azure Local.admin-passwordPassword for the user on the VM you're deploying on your Azure Local.image-nameName of the VM image used to provision the VM.locationAzure regions as specified byaz locations. For example, this could beeastus,westeurope.resource-groupName of the resource group where you create the VM. For ease of management, we recommend that you use the same resource group as your Azure Local.subscriptionName or ID of the subscription where your Azure Local is deployed. This could be another subscription you use for VM on your Azure Local.custom-locationUse this to provide the custom location associated with your Azure Local where you're creating this VM.authentication-typeType of authentication to use with the VM. The accepted values areall,password, andssh. Default is password for Windows and SSH public key for Linux. Useallto enable bothsshandpasswordauthentication.nicsNames or the IDs of the network interfaces associated with your VM. You must have atleast one network interface when you create a VM, to enable guest management.memory-mbMemory in Megabytes allocated to your VM. If not specified, defaults are used.processorsThe number of processors allocated to your VM. If not specified, defaults are used.storage-path-idThe associated storage path where the VM configuration and the data are saved.proxy-configurationUse this optional parameter to configure a proxy server for your VM. For more information, seeCreate a VM with proxy configured.
Set some parameters.
$vmName ="local-vm"
$subscription =  "<Subscription ID>"
$resource_group = "local-rg"
$customLocationName = "local-cl"
$customLocationID ="/subscriptions/$subscription/resourceGroups/$resource_group/providers/Microsoft.ExtendedLocation/customLocations/$customLocationName"
$location = "eastus"
$computerName = "mycomputer"
$userName = "local-user"
$password = "<Password for the VM>"
$imageName ="ws22server"
$nicName ="local-vnic" 
$storagePathName = "local-sp" 
$storagePathId = "/subscriptions/<Subscription ID>/resourceGroups/local-rg/providers/Microsoft.AzureStackHCI/storagecontainers/local-sp"
$vmName ="local-vm"
$subscription =  "<Subscription ID>"
$resource_group = "local-rg"
$customLocationName = "local-cl"
$customLocationID ="/subscriptions/$subscription/resourceGroups/$resource_group/providers/Microsoft.ExtendedLocation/customLocations/$customLocationName"
$location = "eastus"
$computerName = "mycomputer"
$userName = "local-user"
$password = "<Password for the VM>"
$imageName ="ws22server"
$nicName ="local-vnic" 
$storagePathName = "local-sp" 
$storagePathId = "/subscriptions/<Subscription ID>/resourceGroups/local-rg/providers/Microsoft.AzureStackHCI/storagecontainers/local-sp"
The parameters for VM creation are tabulated as follows:
az locations
eastus
westeurope
all
password
ssh
all
ssh
password
Run the following commands to create the applicable VM.To create a Trusted launch Azure Local VM:Specify additional flags to enable secure boot, enable virtual TPM, and choose security type. Note, when you specify security type as Trusted launch, you must enable secure boot and vTPM, otherwise Trusted launch VM creation will fail.az stack-hci-vm create --name $vmName --resource-group $resource_group --admin-username $userName --admin-password $password --computer-name $computerName --image $imageName --location $location --authentication-type all --nics $nicName --custom-location $customLocationID --hardware-profile memory-mb="8192" processors="4" --storage-path-id $storagePathId --enable-secure-boot true --enable-vtpm true --security-type "TrustedLaunch"Once the VM is created, to verify the security type of the VM isTrusted launch, do the following.Run the following cmdlet (on one of the cluster nodes) to find the owner node of the VM:Get-ClusterGroup $vmNameRun the following cmdlet on the owner node of the VM:(Get-VM $vmName).GuestStateIsolationTypeEnsure a value ofTrustedLaunchis returned.To create a standard Azure Local VM:az stack-hci-vm create --name $vmName --resource-group $resource_group --admin-username $userName --admin-password $password --computer-name $computerName --image $imageName --location $location --authentication-type all --nics $nicName --custom-location $customLocationID --hardware-profile memory-mb="8192" processors="4" --storage-path-id $storagePathId
Run the following commands to create the applicable VM.
To create a Trusted launch Azure Local VM:
Specify additional flags to enable secure boot, enable virtual TPM, and choose security type. Note, when you specify security type as Trusted launch, you must enable secure boot and vTPM, otherwise Trusted launch VM creation will fail.az stack-hci-vm create --name $vmName --resource-group $resource_group --admin-username $userName --admin-password $password --computer-name $computerName --image $imageName --location $location --authentication-type all --nics $nicName --custom-location $customLocationID --hardware-profile memory-mb="8192" processors="4" --storage-path-id $storagePathId --enable-secure-boot true --enable-vtpm true --security-type "TrustedLaunch"
Specify additional flags to enable secure boot, enable virtual TPM, and choose security type. Note, when you specify security type as Trusted launch, you must enable secure boot and vTPM, otherwise Trusted launch VM creation will fail.
az stack-hci-vm create --name $vmName --resource-group $resource_group --admin-username $userName --admin-password $password --computer-name $computerName --image $imageName --location $location --authentication-type all --nics $nicName --custom-location $customLocationID --hardware-profile memory-mb="8192" processors="4" --storage-path-id $storagePathId --enable-secure-boot true --enable-vtpm true --security-type "TrustedLaunch"
az stack-hci-vm create --name $vmName --resource-group $resource_group --admin-username $userName --admin-password $password --computer-name $computerName --image $imageName --location $location --authentication-type all --nics $nicName --custom-location $customLocationID --hardware-profile memory-mb="8192" processors="4" --storage-path-id $storagePathId --enable-secure-boot true --enable-vtpm true --security-type "TrustedLaunch"
Once the VM is created, to verify the security type of the VM isTrusted launch, do the following.
Once the VM is created, to verify the security type of the VM isTrusted launch, do the following.
Trusted launch
Run the following cmdlet (on one of the cluster nodes) to find the owner node of the VM:Get-ClusterGroup $vmName
Run the following cmdlet (on one of the cluster nodes) to find the owner node of the VM:
Get-ClusterGroup $vmName
Get-ClusterGroup $vmName
Run the following cmdlet on the owner node of the VM:(Get-VM $vmName).GuestStateIsolationType
Run the following cmdlet on the owner node of the VM:
(Get-VM $vmName).GuestStateIsolationType
(Get-VM $vmName).GuestStateIsolationType
Ensure a value ofTrustedLaunchis returned.
Ensure a value ofTrustedLaunchis returned.
TrustedLaunch
To create a standard Azure Local VM:
az stack-hci-vm create --name $vmName --resource-group $resource_group --admin-username $userName --admin-password $password --computer-name $computerName --image $imageName --location $location --authentication-type all --nics $nicName --custom-location $customLocationID --hardware-profile memory-mb="8192" processors="4" --storage-path-id $storagePathId
az stack-hci-vm create --name $vmName --resource-group $resource_group --admin-username $userName --admin-password $password --computer-name $computerName --image $imageName --location $location --authentication-type all --nics $nicName --custom-location $customLocationID --hardware-profile memory-mb="8192" processors="4" --storage-path-id $storagePathId
The VM is successfully created when theprovisioningStateshows assucceededin the output.
provisioningState
succeeded
Note
The VM created has guest management enabled by default. If for any reason guest management fails during VM creation, you can follow the steps inEnable guest management on Azure Local VMto enable it after the VM creation.
In this example, the storage path was specified using the--storage-path-idflag and that ensured that the workload data (including the VM, VM image, non-OS data disk) is placed in the specified storage path.
--storage-path-id
If the flag isn't specified, the workload (VM, VM image, non-OS data disk) is automatically placed in a high availability storage path.
Additional parameters for Windows Server 2012 and Windows Server 2012 R2 images
When creating a VM using Windows Server 2012 and Windows Server 2012 R2 images, specify the following additional parameters to create the VM:
--enable-agent: Set this parameter totrueto onboard the Azure Connected Machine agent on VMs.
--enable-agent
true
--enable-vm-config-agent: Set this parameter tofalseto prevent the onboarding of the VM agent on the VM from the host via Hyper-V sockets channel. Windows Server 2012 and Windows Server 2012 R2 don't support Hyper-V sockets. In the newer image versions that support Hyper-V sockets, the VM agent is used to onboard the Azure Connected Machine agent on VMs. For more information on Hyper-V sockets, seeMake your own integration services.
--enable-vm-config-agent
false
Create a Linux VM
To create a Linux VM, use the same command that you used to create the Windows VM.
The gallery image specified should be a Linux image.
The username and password works with theauthentication-type-allparameter.
authentication-type-all
For SSH keys, you need to pass thessh-key-valuesparameters along with theauthentication-type-all.
ssh-key-values
authentication-type-all
Important
Setting the proxy server during VM creation is supported for Ubuntu Server VMs.
Create a VM with proxy configured
Use this optional parameterproxy-configurationto configure a proxy server for your VM.
Proxy configuration for VMs is applied only to the onboarding of the Azure connected machine agent and set as environment variables within the guest VM operating system. Browsers and applications on the VM aren't necessarily all enabled with this proxy configuration.
As such, you may need to specifically set the proxy configuration for your applications if they don't reference the environment variables set within the VM.
If creating a VM behind a proxy server, run the following command:
az stack-hci-vm create --name $vmName --resource-group $resource_group --admin-username $userName --admin-password $password --computer-name $computerName --image $imageName --location $location --authentication-type all --nics $nicName --custom-location $customLocationID --hardware-profile memory-mb="8192" processors="4" --storage-path-id $storagePathId --proxy-configuration http_proxy="<Http URL of proxy server>" https_proxy="<Https URL of proxy server>" no_proxy="<URLs which bypass proxy>" cert_file_path="<Certificate file path for your machine>"
az stack-hci-vm create --name $vmName --resource-group $resource_group --admin-username $userName --admin-password $password --computer-name $computerName --image $imageName --location $location --authentication-type all --nics $nicName --custom-location $customLocationID --hardware-profile memory-mb="8192" processors="4" --storage-path-id $storagePathId --proxy-configuration http_proxy="<Http URL of proxy server>" https_proxy="<Https URL of proxy server>" no_proxy="<URLs which bypass proxy>" cert_file_path="<Certificate file path for your machine>"
You can input the following parameters forproxy-server-configuration:
proxy-server-configuration
http://proxy.example.com:3128
http://proxy.example.com:3128
localhost,127.0.0.1,.svc,10.0.0.0/8,172.16.0.0/12,192.168.0.0/16,100.0.0.0/8
C:\Users\Palomino\proxycert.crt
Here's a sample command:
az stack-hci-vm create --name $vmName --resource-group $resource_group --admin-username $userName --admin-password $password --computer-name $computerName --image $imageName --location $location --authentication-type all --nics $nicName --custom-location $customLocationID --hardware-profile memory-mb="8192" processors="4" --storage-path-id $storagePathId --proxy-configuration http_proxy="http://ubuntu:ubuntu@192.168.200.200:3128" https_proxy="http://ubuntu:ubuntu@192.168.200.200:3128" no_proxy="localhost,127.0.0.1,.svc,10.0.0.0/8,172.16.0.0/12,192.168.0.0/16,100.0.0.0/8,s-cluster.test.contoso.com" cert_file_path="C:\ClusterStorage\UserStorage_1\server.crt"
az stack-hci-vm create --name $vmName --resource-group $resource_group --admin-username $userName --admin-password $password --computer-name $computerName --image $imageName --location $location --authentication-type all --nics $nicName --custom-location $customLocationID --hardware-profile memory-mb="8192" processors="4" --storage-path-id $storagePathId --proxy-configuration http_proxy="http://ubuntu:ubuntu@192.168.200.200:3128" https_proxy="http://ubuntu:ubuntu@192.168.200.200:3128" no_proxy="localhost,127.0.0.1,.svc,10.0.0.0/8,172.16.0.0/12,192.168.0.0/16,100.0.0.0/8,s-cluster.test.contoso.com" cert_file_path="C:\ClusterStorage\UserStorage_1\server.crt"
For proxy authentication, you can pass the username and password combined in a URL as follows:"http://username:password@proxyserver.contoso.com:3128".
"http://username:password@proxyserver.contoso.com:3128"
Follow these steps in Azure portal for your Azure Local.
Important
Setting the proxy server during VM creation is supported for Ubuntu Server VMs.
Go toAzure Arc cluster view>Virtual machines.
Go toAzure Arc cluster view>Virtual machines.
From the top command bar, select+ Create VM.
From the top command bar, select+ Create VM.

In theCreate an Azure Arc virtual machinewizard, on theBasicstab, input the following parameters in theProject detailssection:Subscriptionâ The subscription is tied to the billing. Choose the subscription that you want to use to deploy this VM.Resource groupâ Create new or choose an existing resource group where you deploy all the resources associated with your VM.
In theCreate an Azure Arc virtual machinewizard, on theBasicstab, input the following parameters in theProject detailssection:

Subscriptionâ The subscription is tied to the billing. Choose the subscription that you want to use to deploy this VM.
Subscriptionâ The subscription is tied to the billing. Choose the subscription that you want to use to deploy this VM.
Resource groupâ Create new or choose an existing resource group where you deploy all the resources associated with your VM.
Resource groupâ Create new or choose an existing resource group where you deploy all the resources associated with your VM.
In theSystem detailssection, input the following parameters:Virtual machine nameâ Enter a name for your VM. The name should follow all the naming conventions for Azure virtual machines.ImportantVM names should be in lowercase letters and can include hyphens and numbers.custom-locationâ Select the custom location for your VM. The custom locations are filtered to only show those locations that are enabled for your Azure Local.The Virtual machine kindis automatically set toAzure Local.Security type- For the security of your VM, selectStandardorTrusted launch virtual machines. For more information on what are Trusted launch Arc virtual machines, seeWhat is Trusted launch for Azure Arc Virtual Machines?.Storage path- Select the storage path for your VM image. SelectChoose automaticallyto have a storage path with high availability automatically selected. SelectChoose manuallyto specify a storage path to store VM images and configuration files on your Azure Local. In this case, ensure that the selected storage path has sufficient storage space.Imageâ Select the Marketplace or customer managed image to create the VM image.If you selected a Windows image, provide a username and password for the administrator account, and then confirm the password.If you selected a Linux image, in addition to providing username and password, you'll also need SSH keys.Virtual processor countâ Specify the number of vCPUs you would like to use to create the VM.Memoryâ Specify the memory in MB for the VM you intend to create.Memory typeâ Specify the memory type as static or dynamic.
In theSystem detailssection, input the following parameters:

Virtual machine nameâ Enter a name for your VM. The name should follow all the naming conventions for Azure virtual machines.ImportantVM names should be in lowercase letters and can include hyphens and numbers.
Virtual machine nameâ Enter a name for your VM. The name should follow all the naming conventions for Azure virtual machines.
Important
VM names should be in lowercase letters and can include hyphens and numbers.
custom-locationâ Select the custom location for your VM. The custom locations are filtered to only show those locations that are enabled for your Azure Local.The Virtual machine kindis automatically set toAzure Local.
custom-locationâ Select the custom location for your VM. The custom locations are filtered to only show those locations that are enabled for your Azure Local.
The Virtual machine kindis automatically set toAzure Local.
Security type- For the security of your VM, selectStandardorTrusted launch virtual machines. For more information on what are Trusted launch Arc virtual machines, seeWhat is Trusted launch for Azure Arc Virtual Machines?.
Security type- For the security of your VM, selectStandardorTrusted launch virtual machines. For more information on what are Trusted launch Arc virtual machines, seeWhat is Trusted launch for Azure Arc Virtual Machines?.
Storage path- Select the storage path for your VM image. SelectChoose automaticallyto have a storage path with high availability automatically selected. SelectChoose manuallyto specify a storage path to store VM images and configuration files on your Azure Local. In this case, ensure that the selected storage path has sufficient storage space.
Storage path- Select the storage path for your VM image. SelectChoose automaticallyto have a storage path with high availability automatically selected. SelectChoose manuallyto specify a storage path to store VM images and configuration files on your Azure Local. In this case, ensure that the selected storage path has sufficient storage space.
Imageâ Select the Marketplace or customer managed image to create the VM image.If you selected a Windows image, provide a username and password for the administrator account, and then confirm the password.If you selected a Linux image, in addition to providing username and password, you'll also need SSH keys.
Imageâ Select the Marketplace or customer managed image to create the VM image.
If you selected a Windows image, provide a username and password for the administrator account, and then confirm the password.
If you selected a Linux image, in addition to providing username and password, you'll also need SSH keys.
If you selected a Linux image, in addition to providing username and password, you'll also need SSH keys.
Virtual processor countâ Specify the number of vCPUs you would like to use to create the VM.
Virtual processor countâ Specify the number of vCPUs you would like to use to create the VM.
Memoryâ Specify the memory in MB for the VM you intend to create.
Memoryâ Specify the memory in MB for the VM you intend to create.
Memory typeâ Specify the memory type as static or dynamic.
Memory typeâ Specify the memory type as static or dynamic.
In theVM extensionssection, select the checkbox to enable guest management and input the following parameters. You can install extensions on VMs where the guest management is enabled.NoteAdd at least one network interface through theNetworkingtab to complete guest management setup.The network interface that you enable, must have a valid IP address and internet access. For more information, seeAzure Local VM management networking.
In theVM extensionssection, select the checkbox to enable guest management and input the following parameters. You can install extensions on VMs where the guest management is enabled.
Note
Add at least one network interface through theNetworkingtab to complete guest management setup.
The network interface that you enable, must have a valid IP address and internet access. For more information, seeAzure Local VM management networking.
In the VM proxy configuration section, to configure a proxy for your VM, input the following parameters:NoteProxy configuration for VMs is applied only to the onboarding of the Azure connected machine agent and set as environment variables within the guest VM operating system. Browsers and applications on the VM aren't necessarily all enabled with this proxy configuration. As such, you may need to specifically set the proxy configuration for your applications if they don't reference the environment variables set within the VM.Http proxy- Provide an HTTP URL for the proxy server. An example URL is:http://proxy.example.com:3128.Https proxy- Provide an HTTPS URL for the proxy server. The server may still use an HTTP address as shown in this example:http://proxy.example.com:3128.No proxy- Specify URLs to bypass the proxy. Typical examples would be:localhost,127.0.0.1,.svc,10.0.0.0/8,172.16.0.0/12,192.168.0.0/16,100.0.0.0/8.Certificate file- Select the certificate file used to establish trust with your proxy server.NoteFor proxy authentication, you can pass the username and password combined in a URL as follows:http://username:password@proxyserver.contoso.com:3128.
In the VM proxy configuration section, to configure a proxy for your VM, input the following parameters:
Note
Proxy configuration for VMs is applied only to the onboarding of the Azure connected machine agent and set as environment variables within the guest VM operating system. Browsers and applications on the VM aren't necessarily all enabled with this proxy configuration. As such, you may need to specifically set the proxy configuration for your applications if they don't reference the environment variables set within the VM.

Http proxy- Provide an HTTP URL for the proxy server. An example URL is:http://proxy.example.com:3128.
http://proxy.example.com:3128
Https proxy- Provide an HTTPS URL for the proxy server. The server may still use an HTTP address as shown in this example:http://proxy.example.com:3128.
http://proxy.example.com:3128
No proxy- Specify URLs to bypass the proxy. Typical examples would be:localhost,127.0.0.1,.svc,10.0.0.0/8,172.16.0.0/12,192.168.0.0/16,100.0.0.0/8.
localhost,127.0.0.1
.svc,10.0.0.0/8
172.16.0.0/12
192.168.0.0/16
100.0.0.0/8
Certificate file- Select the certificate file used to establish trust with your proxy server.
Note
For proxy authentication, you can pass the username and password combined in a URL as follows:http://username:password@proxyserver.contoso.com:3128.
http://username:password@proxyserver.contoso.com:3128
Set the local VM administrator account credentials used when connecting to your VM via RDP. In theAdministrator accountsection, input the following parameters:Specify the local VM administrator account username.Specify the password and thenConfirm password.
Set the local VM administrator account credentials used when connecting to your VM via RDP. In theAdministrator accountsection, input the following parameters:

Specify the local VM administrator account username.
Specify the password and thenConfirm password.
If you selected a Windows VM image, you can domain join your Windows VM. In theDomain joinsection, input the following parameters:SelectEnable domain join.Only the Active Directory domain join is supported and selected by default.Provide the UPN of an Active Directory user who has privileges to join the virtual machine to your domain.ImportantFor your Active Directory, if your SAM Account Name and UPN are different, enter the SAM Account Name in the UPN field as:SAMAccountName@domain.Provide the domain administrator password. If using SAM Account Name in the UPN field, enter the corresponding password.Specify domain or organizational unit. You can join virtual machines to a specific domain or to an organizational unit (OU) and then provide the domain to join and the OU path.If the domain isn't specified, the suffix of the Active Directory domain join UPN is used by default. For example, the userguspinto@contoso.comwould get the default domain namecontoso.com.
If you selected a Windows VM image, you can domain join your Windows VM. In theDomain joinsection, input the following parameters:
SelectEnable domain join.
SelectEnable domain join.
Only the Active Directory domain join is supported and selected by default.
Only the Active Directory domain join is supported and selected by default.
Provide the UPN of an Active Directory user who has privileges to join the virtual machine to your domain.ImportantFor your Active Directory, if your SAM Account Name and UPN are different, enter the SAM Account Name in the UPN field as:SAMAccountName@domain.
Provide the UPN of an Active Directory user who has privileges to join the virtual machine to your domain.
Important
For your Active Directory, if your SAM Account Name and UPN are different, enter the SAM Account Name in the UPN field as:SAMAccountName@domain.
SAMAccountName@domain
Provide the domain administrator password. If using SAM Account Name in the UPN field, enter the corresponding password.
Provide the domain administrator password. If using SAM Account Name in the UPN field, enter the corresponding password.
Specify domain or organizational unit. You can join virtual machines to a specific domain or to an organizational unit (OU) and then provide the domain to join and the OU path.If the domain isn't specified, the suffix of the Active Directory domain join UPN is used by default. For example, the userguspinto@contoso.comwould get the default domain namecontoso.com.
Specify domain or organizational unit. You can join virtual machines to a specific domain or to an organizational unit (OU) and then provide the domain to join and the OU path.
If the domain isn't specified, the suffix of the Active Directory domain join UPN is used by default. For example, the userguspinto@contoso.comwould get the default domain namecontoso.com.
(Optional)Create new or add more disks to the VM.Select+ Add new disk.Provide aNameandSize.Choose the diskProvisioning typeto beStaticorDynamic.Storage path- Select the storage path for your VM image. SelectChoose automaticallyto have a storage path with high availability automatically selected.  SelectChoose manuallyto specify a storage path to store VM images and configuration files on the Azure Local instance. In this case, ensure that the selected storage path has sufficient storage space. If you select the manual option, previous storage options autopopulate the dropdown by default.SelectAdd. After it's created, you can see the new disk in the list view.
(Optional)Create new or add more disks to the VM.

Select+ Add new disk.
Select+ Add new disk.
Provide aNameandSize.
Provide aNameandSize.
Choose the diskProvisioning typeto beStaticorDynamic.
Choose the diskProvisioning typeto beStaticorDynamic.
Storage path- Select the storage path for your VM image. SelectChoose automaticallyto have a storage path with high availability automatically selected.  SelectChoose manuallyto specify a storage path to store VM images and configuration files on the Azure Local instance. In this case, ensure that the selected storage path has sufficient storage space. If you select the manual option, previous storage options autopopulate the dropdown by default.
Storage path- Select the storage path for your VM image. SelectChoose automaticallyto have a storage path with high availability automatically selected.  SelectChoose manuallyto specify a storage path to store VM images and configuration files on the Azure Local instance. In this case, ensure that the selected storage path has sufficient storage space. If you select the manual option, previous storage options autopopulate the dropdown by default.
SelectAdd. After it's created, you can see the new disk in the list view.
SelectAdd. After it's created, you can see the new disk in the list view.

(Optional)Create or add a network interface for the VM.NoteIf you enabled guest management, you must add at least one network interface.If you need more than one network interface with static IPs for your VM, create one or more interfaces now before you create the VM. Adding a network interface with static IP, after the VM is provisioned, isn't supported.Provide aNamefor the network interface.From the drop-down list, select theNetwork. Based on the network selected, you see the IPv4 type automatically populate asStaticorDHCP.ForStaticIP, choose theAllocation methodasAutomaticorManual. ForManualIP, provide an IP address.SelectAdd.
(Optional)Create or add a network interface for the VM.
Note
If you enabled guest management, you must add at least one network interface.
If you need more than one network interface with static IPs for your VM, create one or more interfaces now before you create the VM. Adding a network interface with static IP, after the VM is provisioned, isn't supported.

Provide aNamefor the network interface.
Provide aNamefor the network interface.
From the drop-down list, select theNetwork. Based on the network selected, you see the IPv4 type automatically populate asStaticorDHCP.
From the drop-down list, select theNetwork. Based on the network selected, you see the IPv4 type automatically populate asStaticorDHCP.
ForStaticIP, choose theAllocation methodasAutomaticorManual. ForManualIP, provide an IP address.
ForStaticIP, choose theAllocation methodasAutomaticorManual. ForManualIP, provide an IP address.
SelectAdd.
SelectAdd.
(Optional)Add tags to the VM resource if necessary.
(Optional)Add tags to the VM resource if necessary.
Review all the properties of the VM.
Review all the properties of the VM.

SelectCreate. It should take a few minutes to provision the VM.
SelectCreate. It should take a few minutes to provision the VM.
Follow these steps to deploy the Resource Manager template:
In the Azure portal, from the top search bar, search fordeploy a custom template. SelectDeploy a custom templatefrom the available options.
In the Azure portal, from the top search bar, search fordeploy a custom template. SelectDeploy a custom templatefrom the available options.
On theSelect a templatetab, selectBuild your own template in the editor.
On theSelect a templatetab, selectBuild your own template in the editor.

You see a blank template.
You see a blank template.

Replace the blank template with the template that you downloaded during the prerequisites step.This template creates an Azure Local VM. First, a virtual network interface is created. You can optionally enable domain-join and attach a virtual disk to the VM you create. Finally, the VM is created with the guest management enabled.{
     "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
     "contentVersion": "1.0.0.0",
     "parameters": {
         "name": {
             "type": "String",
             "metadata": {
                 "description": "The name of the Virtual Machine."
             }
         },
         "location": {
             "type": "String",
             "metadata": {
                 "description": "The Azure region where the resources will be deployed."
             }
         },
         "customLocationId": {
             "type": "String",
             "metadata": {
                 "description": "The custom location ID where the resources will be deployed."
             }
         },
         "adminUsername": {
             "type": "String",
             "metadata": {
                 "description": "The username for the administrator account of the VM."
             }
         },
         "adminPassword": {
             "type": "SecureString",
             "metadata": {
                 "description": "The password for the administrator account of the VM. This should be a secure string."
             }
         },
         "securityType": {
             "type": "String",
             "metadata": {
                 "description": "The type of security configuration for the VM."
             }
         },
         "vNicName": {
             "type": "String",
             "metadata": {
                 "description": "The name of the vNic."
             }
         },
         "privateIPAddress": {
             "type": "String",
             "metadata": {
                 "description": "The IP address for the network interface."
             }
         },
         "subnetId": {
             "type": "String",
             "metadata": {
                 "description": "The Azure Resource Manager ID of the subnet for the network interface."
             }
         },
         "vmSize": {
             "type": "String",
             "metadata": {
                 "description": "The size of the virtual machine instance. It is 'Default' by default."
             }
         },
         "enableVirtualDisk": {
             "type": "bool",
             "metadata": {
                 "description": "Enable or disable the virtual disk."
             }
         },
         "diskName": {
             "type": "String",
             "defaultValue": "",
             "metadata": {
                 "description": "The name of the virtual data disk for your VM. Required if enableVirtualDisk is true."
             }
         },
         "diskSize": {
             "type": "Int",
             "defaultValue": 0,
             "metadata": {
                 "description": "Specify the size of the additional virtual disk to be added to your VM. Required if enableVirtualDisk is true."
             }
         },
         "processors": {
             "type": "Int",
             "metadata": {
                 "description": "The number of processors for the virtual machine."
             }
         },
         "memoryMB": {
             "type": "Int",
             "metadata": {
                 "description": "The amount of memory in MB for the virtual machine."
             }
         },
         "imageReferenceId": {
             "type": "String",
             "metadata": {
                 "description": "The Azure Resource Manager ID of the image to be used for the virtual machine."
             }
         },
         "enableDomainJoin": {
             "type": "bool",
             "metadata": {
                 "description": "Enable or disable the domain join extension."
             }
         },
         "domainToJoin": {
             "type": "String",
             "defaultValue": "",
             "metadata": {
                 "description": "The domain to join. Required if enableDomainJoin is true."
             }
         },
         "orgUnitPath": {
             "type": "String",
             "defaultValue": "",
             "metadata": {
                 "description": "The Organizational Unit path. Optional, used if enableDomainJoin is true."
             }
         },
         "domainUsername": {
             "type": "String",
             "defaultValue": "",
             "metadata": {
                 "description": "The domain username. Required if enableDomainJoin is true."
             }
         },
         "domainPassword": {
             "type": "SecureString",
             "defaultValue": "",
             "metadata": {
                 "description": "The domain password. Required if enableDomainJoin is true."
             }
         }
     },
     "variables": {
         "domainJoinExtensionName": "[if(parameters('enableDomainJoin'), concat(parameters('name'),'/joindomain'), '')]",
         "virtualDiskName": "[if(parameters('enableVirtualDisk'), parameters('diskName'), '')]"
     },
     "resources": [
         {
             "type": "Microsoft.HybridCompute/machines",
             "apiVersion": "2023-03-15-preview",
             "name": "[parameters('name')]",
             "location": "[parameters('location')]",
             "kind": "HCI",
             "identity": {
                 "type": "SystemAssigned"
             }
         },
         {
             "condition": "[parameters('enableVirtualDisk')]",
             "type": "Microsoft.AzureStackHCI/virtualHardDisks",
             "apiVersion": "2023-09-01-preview",
             "name": "[variables('virtualDiskName')]",
             "location": "[parameters('location')]",
             "extendedLocation": {
                 "type": "CustomLocation",
                 "name": "[parameters('customLocationId')]"
             },
             "properties": {
                 "diskSizeGB": "[parameters('diskSize')]",
                 "dynamic": true
             }
         },
         {
             "type": "Microsoft.AzureStackHCI/networkInterfaces",
             "apiVersion": "2023-09-01-preview",
             "name": "[parameters('vNicName')]",
             "location": "[parameters('location')]",
             "extendedLocation": {
                 "type": "CustomLocation",
                 "name": "[parameters('customLocationId')]"
             },
             "properties": {
                 "ipConfigurations": [
                     {
                         "name": "[parameters('vNicName')]",
                         "properties": {
                             "privateIPAddress": "[parameters('privateIPAddress')]",
                             "subnet": {
                                 "id": "[parameters('subnetId')]"
                             }
                         }
                     }
                 ]
             }
         },
         {
             "type": "Microsoft.AzureStackHCI/VirtualMachineInstances",
             "apiVersion": "2023-09-01-preview",
             "name": "default",
             "extendedLocation": {
                 "type": "CustomLocation",
                 "name": "[parameters('customLocationId')]"            },
             "dependsOn": [
                 "[resourceId('Microsoft.HybridCompute/machines', parameters('name'))]",
                 "[resourceId('Microsoft.AzureStackHCI/networkInterfaces', parameters('vNicName'))]",
                 "[resourceid('Microsoft.AzureStackHCI/virtualHardDisks', parameters('diskName'))]"
             ],
             "properties": {
                 "osProfile": {
                     "adminUsername": "[parameters('adminUsername')]",
                     "adminPassword": "[parameters('adminPassword')]",
                     "computerName": "[parameters('name')]",
                     "windowsConfiguration": {
                         "provisionVMAgent": true,
                         "provisionVMConfigAgent": true
                     }
                 },
                 "hardwareProfile": {
                     "vmSize": "Default",
                     "processors": 4,
                     "memoryMB": 8192
                 },
                 "storageProfile": {
                     "imageReference": {
                         "id": "[parameters('imageReferenceId')]"
                     },
                     "dataDisks": [
                         {
                             "id": "[resourceid('Microsoft.AzureStackHCI/virtualHardDisks',parameters('diskName'))]"
                         }
                     ]
                 },
                 "networkProfile": {
                     "networkInterfaces": [
                         {
                             "id": "[resourceId('Microsoft.AzureStackHCI/networkInterfaces', parameters('vNicName'))]"
                         }
                     ]
                 }
             },
             "scope": "[concat('Microsoft.HybridCompute/machines/', parameters('name'))]"
         },
         {
             "condition": "[parameters('enableDomainJoin')]",
             "type": "Microsoft.HybridCompute/machines/extensions",
             "apiVersion": "2023-03-15-preview",
             "name": "[variables('domainJoinExtensionName')]",
             "location": "[parameters('location')]",
             "dependsOn": [
                 "[concat(resourceId('Microsoft.HybridCompute/machines', parameters('name')), '/providers/Microsoft.AzureStackHCI/virtualmachineinstances/default')]"
             ],
             "properties": {
                 "publisher": "Microsoft.Compute",
                 "type": "JsonADDomainExtension",
                 "typeHandlerVersion": "1.3",
                 "autoUpgradeMinorVersion": true,
                 "settings": {
                     "Name": "[parameters('domainToJoin')]",
                     "OUPath": "[parameters('orgUnitPath')]",
                     "User": "[concat(parameters('domainToJoin'), '\\', parameters('domainUsername'))]",
                     "Restart": "true",
                     "Options": "3"
                 },
                 "protectedSettings": {
                     "Password": "[parameters('domainPassword')]"
                 }
             }
         }
     ]
 }
Replace the blank template with the template that you downloaded during the prerequisites step.
This template creates an Azure Local VM. First, a virtual network interface is created. You can optionally enable domain-join and attach a virtual disk to the VM you create. Finally, the VM is created with the guest management enabled.
{
     "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
     "contentVersion": "1.0.0.0",
     "parameters": {
         "name": {
             "type": "String",
             "metadata": {
                 "description": "The name of the Virtual Machine."
             }
         },
         "location": {
             "type": "String",
             "metadata": {
                 "description": "The Azure region where the resources will be deployed."
             }
         },
         "customLocationId": {
             "type": "String",
             "metadata": {
                 "description": "The custom location ID where the resources will be deployed."
             }
         },
         "adminUsername": {
             "type": "String",
             "metadata": {
                 "description": "The username for the administrator account of the VM."
             }
         },
         "adminPassword": {
             "type": "SecureString",
             "metadata": {
                 "description": "The password for the administrator account of the VM. This should be a secure string."
             }
         },
         "securityType": {
             "type": "String",
             "metadata": {
                 "description": "The type of security configuration for the VM."
             }
         },
         "vNicName": {
             "type": "String",
             "metadata": {
                 "description": "The name of the vNic."
             }
         },
         "privateIPAddress": {
             "type": "String",
             "metadata": {
                 "description": "The IP address for the network interface."
             }
         },
         "subnetId": {
             "type": "String",
             "metadata": {
                 "description": "The Azure Resource Manager ID of the subnet for the network interface."
             }
         },
         "vmSize": {
             "type": "String",
             "metadata": {
                 "description": "The size of the virtual machine instance. It is 'Default' by default."
             }
         },
         "enableVirtualDisk": {
             "type": "bool",
             "metadata": {
                 "description": "Enable or disable the virtual disk."
             }
         },
         "diskName": {
             "type": "String",
             "defaultValue": "",
             "metadata": {
                 "description": "The name of the virtual data disk for your VM. Required if enableVirtualDisk is true."
             }
         },
         "diskSize": {
             "type": "Int",
             "defaultValue": 0,
             "metadata": {
                 "description": "Specify the size of the additional virtual disk to be added to your VM. Required if enableVirtualDisk is true."
             }
         },
         "processors": {
             "type": "Int",
             "metadata": {
                 "description": "The number of processors for the virtual machine."
             }
         },
         "memoryMB": {
             "type": "Int",
             "metadata": {
                 "description": "The amount of memory in MB for the virtual machine."
             }
         },
         "imageReferenceId": {
             "type": "String",
             "metadata": {
                 "description": "The Azure Resource Manager ID of the image to be used for the virtual machine."
             }
         },
         "enableDomainJoin": {
             "type": "bool",
             "metadata": {
                 "description": "Enable or disable the domain join extension."
             }
         },
         "domainToJoin": {
             "type": "String",
             "defaultValue": "",
             "metadata": {
                 "description": "The domain to join. Required if enableDomainJoin is true."
             }
         },
         "orgUnitPath": {
             "type": "String",
             "defaultValue": "",
             "metadata": {
                 "description": "The Organizational Unit path. Optional, used if enableDomainJoin is true."
             }
         },
         "domainUsername": {
             "type": "String",
             "defaultValue": "",
             "metadata": {
                 "description": "The domain username. Required if enableDomainJoin is true."
             }
         },
         "domainPassword": {
             "type": "SecureString",
             "defaultValue": "",
             "metadata": {
                 "description": "The domain password. Required if enableDomainJoin is true."
             }
         }
     },
     "variables": {
         "domainJoinExtensionName": "[if(parameters('enableDomainJoin'), concat(parameters('name'),'/joindomain'), '')]",
         "virtualDiskName": "[if(parameters('enableVirtualDisk'), parameters('diskName'), '')]"
     },
     "resources": [
         {
             "type": "Microsoft.HybridCompute/machines",
             "apiVersion": "2023-03-15-preview",
             "name": "[parameters('name')]",
             "location": "[parameters('location')]",
             "kind": "HCI",
             "identity": {
                 "type": "SystemAssigned"
             }
         },
         {
             "condition": "[parameters('enableVirtualDisk')]",
             "type": "Microsoft.AzureStackHCI/virtualHardDisks",
             "apiVersion": "2023-09-01-preview",
             "name": "[variables('virtualDiskName')]",
             "location": "[parameters('location')]",
             "extendedLocation": {
                 "type": "CustomLocation",
                 "name": "[parameters('customLocationId')]"
             },
             "properties": {
                 "diskSizeGB": "[parameters('diskSize')]",
                 "dynamic": true
             }
         },
         {
             "type": "Microsoft.AzureStackHCI/networkInterfaces",
             "apiVersion": "2023-09-01-preview",
             "name": "[parameters('vNicName')]",
             "location": "[parameters('location')]",
             "extendedLocation": {
                 "type": "CustomLocation",
                 "name": "[parameters('customLocationId')]"
             },
             "properties": {
                 "ipConfigurations": [
                     {
                         "name": "[parameters('vNicName')]",
                         "properties": {
                             "privateIPAddress": "[parameters('privateIPAddress')]",
                             "subnet": {
                                 "id": "[parameters('subnetId')]"
                             }
                         }
                     }
                 ]
             }
         },
         {
             "type": "Microsoft.AzureStackHCI/VirtualMachineInstances",
             "apiVersion": "2023-09-01-preview",
             "name": "default",
             "extendedLocation": {
                 "type": "CustomLocation",
                 "name": "[parameters('customLocationId')]"            },
             "dependsOn": [
                 "[resourceId('Microsoft.HybridCompute/machines', parameters('name'))]",
                 "[resourceId('Microsoft.AzureStackHCI/networkInterfaces', parameters('vNicName'))]",
                 "[resourceid('Microsoft.AzureStackHCI/virtualHardDisks', parameters('diskName'))]"
             ],
             "properties": {
                 "osProfile": {
                     "adminUsername": "[parameters('adminUsername')]",
                     "adminPassword": "[parameters('adminPassword')]",
                     "computerName": "[parameters('name')]",
                     "windowsConfiguration": {
                         "provisionVMAgent": true,
                         "provisionVMConfigAgent": true
                     }
                 },
                 "hardwareProfile": {
                     "vmSize": "Default",
                     "processors": 4,
                     "memoryMB": 8192
                 },
                 "storageProfile": {
                     "imageReference": {
                         "id": "[parameters('imageReferenceId')]"
                     },
                     "dataDisks": [
                         {
                             "id": "[resourceid('Microsoft.AzureStackHCI/virtualHardDisks',parameters('diskName'))]"
                         }
                     ]
                 },
                 "networkProfile": {
                     "networkInterfaces": [
                         {
                             "id": "[resourceId('Microsoft.AzureStackHCI/networkInterfaces', parameters('vNicName'))]"
                         }
                     ]
                 }
             },
             "scope": "[concat('Microsoft.HybridCompute/machines/', parameters('name'))]"
         },
         {
             "condition": "[parameters('enableDomainJoin')]",
             "type": "Microsoft.HybridCompute/machines/extensions",
             "apiVersion": "2023-03-15-preview",
             "name": "[variables('domainJoinExtensionName')]",
             "location": "[parameters('location')]",
             "dependsOn": [
                 "[concat(resourceId('Microsoft.HybridCompute/machines', parameters('name')), '/providers/Microsoft.AzureStackHCI/virtualmachineinstances/default')]"
             ],
             "properties": {
                 "publisher": "Microsoft.Compute",
                 "type": "JsonADDomainExtension",
                 "typeHandlerVersion": "1.3",
                 "autoUpgradeMinorVersion": true,
                 "settings": {
                     "Name": "[parameters('domainToJoin')]",
                     "OUPath": "[parameters('orgUnitPath')]",
                     "User": "[concat(parameters('domainToJoin'), '\\', parameters('domainUsername'))]",
                     "Restart": "true",
                     "Options": "3"
                 },
                 "protectedSettings": {
                     "Password": "[parameters('domainPassword')]"
                 }
             }
         }
     ]
 }
{
     "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
     "contentVersion": "1.0.0.0",
     "parameters": {
         "name": {
             "type": "String",
             "metadata": {
                 "description": "The name of the Virtual Machine."
             }
         },
         "location": {
             "type": "String",
             "metadata": {
                 "description": "The Azure region where the resources will be deployed."
             }
         },
         "customLocationId": {
             "type": "String",
             "metadata": {
                 "description": "The custom location ID where the resources will be deployed."
             }
         },
         "adminUsername": {
             "type": "String",
             "metadata": {
                 "description": "The username for the administrator account of the VM."
             }
         },
         "adminPassword": {
             "type": "SecureString",
             "metadata": {
                 "description": "The password for the administrator account of the VM. This should be a secure string."
             }
         },
         "securityType": {
             "type": "String",
             "metadata": {
                 "description": "The type of security configuration for the VM."
             }
         },
         "vNicName": {
             "type": "String",
             "metadata": {
                 "description": "The name of the vNic."
             }
         },
         "privateIPAddress": {
             "type": "String",
             "metadata": {
                 "description": "The IP address for the network interface."
             }
         },
         "subnetId": {
             "type": "String",
             "metadata": {
                 "description": "The Azure Resource Manager ID of the subnet for the network interface."
             }
         },
         "vmSize": {
             "type": "String",
             "metadata": {
                 "description": "The size of the virtual machine instance. It is 'Default' by default."
             }
         },
         "enableVirtualDisk": {
             "type": "bool",
             "metadata": {
                 "description": "Enable or disable the virtual disk."
             }
         },
         "diskName": {
             "type": "String",
             "defaultValue": "",
             "metadata": {
                 "description": "The name of the virtual data disk for your VM. Required if enableVirtualDisk is true."
             }
         },
         "diskSize": {
             "type": "Int",
             "defaultValue": 0,
             "metadata": {
                 "description": "Specify the size of the additional virtual disk to be added to your VM. Required if enableVirtualDisk is true."
             }
         },
         "processors": {
             "type": "Int",
             "metadata": {
                 "description": "The number of processors for the virtual machine."
             }
         },
         "memoryMB": {
             "type": "Int",
             "metadata": {
                 "description": "The amount of memory in MB for the virtual machine."
             }
         },
         "imageReferenceId": {
             "type": "String",
             "metadata": {
                 "description": "The Azure Resource Manager ID of the image to be used for the virtual machine."
             }
         },
         "enableDomainJoin": {
             "type": "bool",
             "metadata": {
                 "description": "Enable or disable the domain join extension."
             }
         },
         "domainToJoin": {
             "type": "String",
             "defaultValue": "",
             "metadata": {
                 "description": "The domain to join. Required if enableDomainJoin is true."
             }
         },
         "orgUnitPath": {
             "type": "String",
             "defaultValue": "",
             "metadata": {
                 "description": "The Organizational Unit path. Optional, used if enableDomainJoin is true."
             }
         },
         "domainUsername": {
             "type": "String",
             "defaultValue": "",
             "metadata": {
                 "description": "The domain username. Required if enableDomainJoin is true."
             }
         },
         "domainPassword": {
             "type": "SecureString",
             "defaultValue": "",
             "metadata": {
                 "description": "The domain password. Required if enableDomainJoin is true."
             }
         }
     },
     "variables": {
         "domainJoinExtensionName": "[if(parameters('enableDomainJoin'), concat(parameters('name'),'/joindomain'), '')]",
         "virtualDiskName": "[if(parameters('enableVirtualDisk'), parameters('diskName'), '')]"
     },
     "resources": [
         {
             "type": "Microsoft.HybridCompute/machines",
             "apiVersion": "2023-03-15-preview",
             "name": "[parameters('name')]",
             "location": "[parameters('location')]",
             "kind": "HCI",
             "identity": {
                 "type": "SystemAssigned"
             }
         },
         {
             "condition": "[parameters('enableVirtualDisk')]",
             "type": "Microsoft.AzureStackHCI/virtualHardDisks",
             "apiVersion": "2023-09-01-preview",
             "name": "[variables('virtualDiskName')]",
             "location": "[parameters('location')]",
             "extendedLocation": {
                 "type": "CustomLocation",
                 "name": "[parameters('customLocationId')]"
             },
             "properties": {
                 "diskSizeGB": "[parameters('diskSize')]",
                 "dynamic": true
             }
         },
         {
             "type": "Microsoft.AzureStackHCI/networkInterfaces",
             "apiVersion": "2023-09-01-preview",
             "name": "[parameters('vNicName')]",
             "location": "[parameters('location')]",
             "extendedLocation": {
                 "type": "CustomLocation",
                 "name": "[parameters('customLocationId')]"
             },
             "properties": {
                 "ipConfigurations": [
                     {
                         "name": "[parameters('vNicName')]",
                         "properties": {
                             "privateIPAddress": "[parameters('privateIPAddress')]",
                             "subnet": {
                                 "id": "[parameters('subnetId')]"
                             }
                         }
                     }
                 ]
             }
         },
         {
             "type": "Microsoft.AzureStackHCI/VirtualMachineInstances",
             "apiVersion": "2023-09-01-preview",
             "name": "default",
             "extendedLocation": {
                 "type": "CustomLocation",
                 "name": "[parameters('customLocationId')]"            },
             "dependsOn": [
                 "[resourceId('Microsoft.HybridCompute/machines', parameters('name'))]",
                 "[resourceId('Microsoft.AzureStackHCI/networkInterfaces', parameters('vNicName'))]",
                 "[resourceid('Microsoft.AzureStackHCI/virtualHardDisks', parameters('diskName'))]"
             ],
             "properties": {
                 "osProfile": {
                     "adminUsername": "[parameters('adminUsername')]",
                     "adminPassword": "[parameters('adminPassword')]",
                     "computerName": "[parameters('name')]",
                     "windowsConfiguration": {
                         "provisionVMAgent": true,
                         "provisionVMConfigAgent": true
                     }
                 },
                 "hardwareProfile": {
                     "vmSize": "Default",
                     "processors": 4,
                     "memoryMB": 8192
                 },
                 "storageProfile": {
                     "imageReference": {
                         "id": "[parameters('imageReferenceId')]"
                     },
                     "dataDisks": [
                         {
                             "id": "[resourceid('Microsoft.AzureStackHCI/virtualHardDisks',parameters('diskName'))]"
                         }
                     ]
                 },
                 "networkProfile": {
                     "networkInterfaces": [
                         {
                             "id": "[resourceId('Microsoft.AzureStackHCI/networkInterfaces', parameters('vNicName'))]"
                         }
                     ]
                 }
             },
             "scope": "[concat('Microsoft.HybridCompute/machines/', parameters('name'))]"
         },
         {
             "condition": "[parameters('enableDomainJoin')]",
             "type": "Microsoft.HybridCompute/machines/extensions",
             "apiVersion": "2023-03-15-preview",
             "name": "[variables('domainJoinExtensionName')]",
             "location": "[parameters('location')]",
             "dependsOn": [
                 "[concat(resourceId('Microsoft.HybridCompute/machines', parameters('name')), '/providers/Microsoft.AzureStackHCI/virtualmachineinstances/default')]"
             ],
             "properties": {
                 "publisher": "Microsoft.Compute",
                 "type": "JsonADDomainExtension",
                 "typeHandlerVersion": "1.3",
                 "autoUpgradeMinorVersion": true,
                 "settings": {
                     "Name": "[parameters('domainToJoin')]",
                     "OUPath": "[parameters('orgUnitPath')]",
                     "User": "[concat(parameters('domainToJoin'), '\\', parameters('domainUsername'))]",
                     "Restart": "true",
                     "Options": "3"
                 },
                 "protectedSettings": {
                     "Password": "[parameters('domainPassword')]"
                 }
             }
         }
     ]
 }
SelectSave.
SelectSave.

You see the blade for providing deployment values. Again, select the resource group. You can use the other default values. When you're done providing values, selectReview + create
You see the blade for providing deployment values. Again, select the resource group. You can use the other default values. When you're done providing values, selectReview + create

After the portal validates the template, selectCreate. A deployment job should start.
After the portal validates the template, selectCreate. A deployment job should start.

When the deployment completes, you see the status of the deployment as complete. After the deployment has successfully completed, a VM is created on your Azure Local.
When the deployment completes, you see the status of the deployment as complete. After the deployment has successfully completed, a VM is created on your Azure Local.
Download the sample Bicep template below from theAzure QuickStarts Repo.
Download the sample Bicep template below from theAzure QuickStarts Repo.
Specify parameter values to match your environment. The Custom Location name, Logical Network name parameter values should reference resources you have already created for your Azure Local.
Specify parameter values to match your environment. The Custom Location name, Logical Network name parameter values should reference resources you have already created for your Azure Local.
Deploy the Bicep template usingAzure CLIorAzure PowerShell@maxLength(15)
param name string
param location string
param vCPUCount int = 2
param memoryMB int = 8192
param adminUsername string
@description('The name of the image to use for the VM deployment. For example: winServer2022-01')
param imageName string
@description('Set to true if the referenced image is from Azure Marketplace.')
param isMarketplaceImage bool = true
@description('The name of an existing Logical Network in your HCI cluster - for example: lnet-compute-vlan240-dhcp')
param hciLogicalNetworkName string
@description('The name of the custom location to use for the deployment. This name is specified during the deployment of the Azure Stack HCI cluster and can be found on the Azure Stack HCI cluster resource Overview in the Azure portal.')
param customLocationName string
@secure()
param adminPassword string

// below parameters are used to join the VM to a domain
@description('Optional Domain name to join - specify to join the VM to domain. example: contoso.com - If left empty, ou, username and password parameters will not be evaluated in the deployment.')
param domainToJoin string = ''
@description('Optional domain organizational unit to join. example: ou=computers,dc=contoso,dc=com - Required if \'domainToJoin\' is secified.')
param domainTargetOu string = ''
@description('Optional User Name with permissions to join the domain. example: domain-joiner - Required if \'domainToJoin\' is secified.')
param domainJoinUserName string = ''
@description('Optional Password of User with permissions to join the domain. - Required if \'domainToJoin\' is secified.')
@secure()
param domainJoinPassword string = ''

//define a custom type for the dataDiskParams parameter and array of disks
type dataDiskType = {
  diskSizeGB: int
  dynamic: bool?
  //containerId: string
}
type dataDiskArrayType = dataDiskType[]

@description('The bicep array description of the dataDisks to attached to the vm. Provide an empty array for no addtional disks, or an array following the example below.')
// param dataDiskParams array = [{'diskSizeGB': 1024,'dynamic': true},{'diskSizeGB': 2048,'dynamic': false}]
param dataDiskParams dataDiskArrayType = []

var nicName = 'nic-${name}' // name of the NIC to be created
var customLocationId = resourceId('Microsoft.ExtendedLocation/customLocations', customLocationName) // full custom location ID
var imageId = isMarketplaceImage ? resourceId('microsoft.azurestackhci/marketplaceGalleryImages', imageName) : resourceId('microsoft.azurestackhci/galleryImages', imageName) // full image ID
var logicalNetworkId = resourceId('microsoft.azurestackhci/logicalnetworks', hciLogicalNetworkName) // full logical network ID

// precreate an Arc Connected Machine with an identity--used for zero-touch onboarding of the Arc VM during deployment
resource hybridComputeMachine 'Microsoft.HybridCompute/machines@2023-10-03-preview' = {
  name: name
  location: location
  kind: 'HCI'
  identity: {
    type: 'SystemAssigned'
  }
}

resource nic 'Microsoft.AzureStackHCI/networkInterfaces@2024-01-01' = {
  name: nicName
  location: location
  extendedLocation: {
    type: 'CustomLocation'
    name: customLocationId
  }
  properties: {
    ipConfigurations: [
      {
        name: 'ipconfig1'
        properties: {
          // uncomment to specify an IP, otherwise an IP address is dynamically allocated from the Logical Network's address pool or DHCP
          // privateIPAddress: 'x.x.x.x'
          subnet: {
            id: logicalNetworkId
          }
        }
      }
    ]
  }
}

resource dataDisks 'Microsoft.AzureStackHCI/virtualHardDisks@2024-01-01' = [for (disk, i) in dataDiskParams: {
  name: '${name}dataDisk${padLeft(i + 1, 2, '0')}'
  location: location
  extendedLocation: {
    type: 'CustomLocation'
    name: customLocationId
  }
  properties: {
    diskSizeGB: disk.diskSizeGB
    dynamic: disk.?dynamic // dynamic is optional
    // containerId: uncomment if you want to target a specific CSV/storage path in your HCI cluster
  }
}]

resource virtualMachine 'Microsoft.AzureStackHCI/virtualMachineInstances@2024-01-01' = {
  name: 'default' // value must be 'default' per 2023-09-01-preview
  properties: {
    hardwareProfile: {
      vmSize: 'Custom'
      processors: vCPUCount
      memoryMB: memoryMB
      // ### uncomment to use dymamic memory ###
      // dynamicMemoryConfig: {
      //   maximumMemoryMB: memoryMB
      //   minimumMemoryMB: 512
      //   targetMemoryBuffer: 20
      // }
    }
    osProfile: {
      adminUsername: adminUsername
      adminPassword: adminPassword
      computerName: name
      windowsConfiguration: {
        provisionVMAgent: true // mocguestagent
        provisionVMConfigAgent: true // azure arc connected machine agent
      }
    }
    storageProfile: {
      // vmConfigStoragePathId: specify a storage path ID to target a specific CSV/storage path in your HCI cluster
      imageReference: {
        id: imageId
      }
      dataDisks: [for (disk, i) in dataDiskParams: {
        id: resourceId('Microsoft.AzureStackHCI/virtualHardDisks', '${name}dataDisk${padLeft(i + 1, 2, '0')}')

      }]
    }

    // // Use this optional block to configure a proxy server for your VM
    // httpProxyConfig: {
    //   httpProxy: 'http://proxy.example.com:3128' // HTTP URL for proxy server.
    //   httpsProxy: 'https://proxy.example.com:3128' // HTTPS URL for proxy server.
    //   noProxy: [  // URLs, which can bypass proxy.
    //     'localhost'
    //     '127.0.0.1'
    //   ]
    //   trustedCa: '-----BEGIN CERTIFICATE-----....-----END CERTIFICATE-----' // Alternative CA cert to use for connecting to proxy servers.
    // }

    networkProfile: {
      networkInterfaces: [
        {
          id: nic.id
        }
      ]
    }
  }
  extendedLocation: {
    type: 'CustomLocation'
    name: customLocationId
  }
  scope: hybridComputeMachine

}

resource domainJoin 'Microsoft.HybridCompute/machines/extensions@2023-10-03-preview' = if (!empty(domainToJoin)) {
  parent: hybridComputeMachine
  location: location
  name: 'domainJoinExtension'
  properties: {
    publisher: 'Microsoft.Compute'
    type: 'JsonADDomainExtension'
    typeHandlerVersion: '1.3'
    autoUpgradeMinorVersion: true
    settings: {
      name: domainToJoin
      OUPath: domainTargetOu
      User: '${domainToJoin}\\${domainJoinUserName}'
      Restart: true
      Options: 3
    }
    protectedSettings: {
      Password: domainJoinPassword
    }
  }
}
Deploy the Bicep template usingAzure CLIorAzure PowerShell
@maxLength(15)
param name string
param location string
param vCPUCount int = 2
param memoryMB int = 8192
param adminUsername string
@description('The name of the image to use for the VM deployment. For example: winServer2022-01')
param imageName string
@description('Set to true if the referenced image is from Azure Marketplace.')
param isMarketplaceImage bool = true
@description('The name of an existing Logical Network in your HCI cluster - for example: lnet-compute-vlan240-dhcp')
param hciLogicalNetworkName string
@description('The name of the custom location to use for the deployment. This name is specified during the deployment of the Azure Stack HCI cluster and can be found on the Azure Stack HCI cluster resource Overview in the Azure portal.')
param customLocationName string
@secure()
param adminPassword string

// below parameters are used to join the VM to a domain
@description('Optional Domain name to join - specify to join the VM to domain. example: contoso.com - If left empty, ou, username and password parameters will not be evaluated in the deployment.')
param domainToJoin string = ''
@description('Optional domain organizational unit to join. example: ou=computers,dc=contoso,dc=com - Required if \'domainToJoin\' is secified.')
param domainTargetOu string = ''
@description('Optional User Name with permissions to join the domain. example: domain-joiner - Required if \'domainToJoin\' is secified.')
param domainJoinUserName string = ''
@description('Optional Password of User with permissions to join the domain. - Required if \'domainToJoin\' is secified.')
@secure()
param domainJoinPassword string = ''

//define a custom type for the dataDiskParams parameter and array of disks
type dataDiskType = {
  diskSizeGB: int
  dynamic: bool?
  //containerId: string
}
type dataDiskArrayType = dataDiskType[]

@description('The bicep array description of the dataDisks to attached to the vm. Provide an empty array for no addtional disks, or an array following the example below.')
// param dataDiskParams array = [{'diskSizeGB': 1024,'dynamic': true},{'diskSizeGB': 2048,'dynamic': false}]
param dataDiskParams dataDiskArrayType = []

var nicName = 'nic-${name}' // name of the NIC to be created
var customLocationId = resourceId('Microsoft.ExtendedLocation/customLocations', customLocationName) // full custom location ID
var imageId = isMarketplaceImage ? resourceId('microsoft.azurestackhci/marketplaceGalleryImages', imageName) : resourceId('microsoft.azurestackhci/galleryImages', imageName) // full image ID
var logicalNetworkId = resourceId('microsoft.azurestackhci/logicalnetworks', hciLogicalNetworkName) // full logical network ID

// precreate an Arc Connected Machine with an identity--used for zero-touch onboarding of the Arc VM during deployment
resource hybridComputeMachine 'Microsoft.HybridCompute/machines@2023-10-03-preview' = {
  name: name
  location: location
  kind: 'HCI'
  identity: {
    type: 'SystemAssigned'
  }
}

resource nic 'Microsoft.AzureStackHCI/networkInterfaces@2024-01-01' = {
  name: nicName
  location: location
  extendedLocation: {
    type: 'CustomLocation'
    name: customLocationId
  }
  properties: {
    ipConfigurations: [
      {
        name: 'ipconfig1'
        properties: {
          // uncomment to specify an IP, otherwise an IP address is dynamically allocated from the Logical Network's address pool or DHCP
          // privateIPAddress: 'x.x.x.x'
          subnet: {
            id: logicalNetworkId
          }
        }
      }
    ]
  }
}

resource dataDisks 'Microsoft.AzureStackHCI/virtualHardDisks@2024-01-01' = [for (disk, i) in dataDiskParams: {
  name: '${name}dataDisk${padLeft(i + 1, 2, '0')}'
  location: location
  extendedLocation: {
    type: 'CustomLocation'
    name: customLocationId
  }
  properties: {
    diskSizeGB: disk.diskSizeGB
    dynamic: disk.?dynamic // dynamic is optional
    // containerId: uncomment if you want to target a specific CSV/storage path in your HCI cluster
  }
}]

resource virtualMachine 'Microsoft.AzureStackHCI/virtualMachineInstances@2024-01-01' = {
  name: 'default' // value must be 'default' per 2023-09-01-preview
  properties: {
    hardwareProfile: {
      vmSize: 'Custom'
      processors: vCPUCount
      memoryMB: memoryMB
      // ### uncomment to use dymamic memory ###
      // dynamicMemoryConfig: {
      //   maximumMemoryMB: memoryMB
      //   minimumMemoryMB: 512
      //   targetMemoryBuffer: 20
      // }
    }
    osProfile: {
      adminUsername: adminUsername
      adminPassword: adminPassword
      computerName: name
      windowsConfiguration: {
        provisionVMAgent: true // mocguestagent
        provisionVMConfigAgent: true // azure arc connected machine agent
      }
    }
    storageProfile: {
      // vmConfigStoragePathId: specify a storage path ID to target a specific CSV/storage path in your HCI cluster
      imageReference: {
        id: imageId
      }
      dataDisks: [for (disk, i) in dataDiskParams: {
        id: resourceId('Microsoft.AzureStackHCI/virtualHardDisks', '${name}dataDisk${padLeft(i + 1, 2, '0')}')

      }]
    }

    // // Use this optional block to configure a proxy server for your VM
    // httpProxyConfig: {
    //   httpProxy: 'http://proxy.example.com:3128' // HTTP URL for proxy server.
    //   httpsProxy: 'https://proxy.example.com:3128' // HTTPS URL for proxy server.
    //   noProxy: [  // URLs, which can bypass proxy.
    //     'localhost'
    //     '127.0.0.1'
    //   ]
    //   trustedCa: '-----BEGIN CERTIFICATE-----....-----END CERTIFICATE-----' // Alternative CA cert to use for connecting to proxy servers.
    // }

    networkProfile: {
      networkInterfaces: [
        {
          id: nic.id
        }
      ]
    }
  }
  extendedLocation: {
    type: 'CustomLocation'
    name: customLocationId
  }
  scope: hybridComputeMachine

}

resource domainJoin 'Microsoft.HybridCompute/machines/extensions@2023-10-03-preview' = if (!empty(domainToJoin)) {
  parent: hybridComputeMachine
  location: location
  name: 'domainJoinExtension'
  properties: {
    publisher: 'Microsoft.Compute'
    type: 'JsonADDomainExtension'
    typeHandlerVersion: '1.3'
    autoUpgradeMinorVersion: true
    settings: {
      name: domainToJoin
      OUPath: domainTargetOu
      User: '${domainToJoin}\\${domainJoinUserName}'
      Restart: true
      Options: 3
    }
    protectedSettings: {
      Password: domainJoinPassword
    }
  }
}
@maxLength(15)
param name string
param location string
param vCPUCount int = 2
param memoryMB int = 8192
param adminUsername string
@description('The name of the image to use for the VM deployment. For example: winServer2022-01')
param imageName string
@description('Set to true if the referenced image is from Azure Marketplace.')
param isMarketplaceImage bool = true
@description('The name of an existing Logical Network in your HCI cluster - for example: lnet-compute-vlan240-dhcp')
param hciLogicalNetworkName string
@description('The name of the custom location to use for the deployment. This name is specified during the deployment of the Azure Stack HCI cluster and can be found on the Azure Stack HCI cluster resource Overview in the Azure portal.')
param customLocationName string
@secure()
param adminPassword string

// below parameters are used to join the VM to a domain
@description('Optional Domain name to join - specify to join the VM to domain. example: contoso.com - If left empty, ou, username and password parameters will not be evaluated in the deployment.')
param domainToJoin string = ''
@description('Optional domain organizational unit to join. example: ou=computers,dc=contoso,dc=com - Required if \'domainToJoin\' is secified.')
param domainTargetOu string = ''
@description('Optional User Name with permissions to join the domain. example: domain-joiner - Required if \'domainToJoin\' is secified.')
param domainJoinUserName string = ''
@description('Optional Password of User with permissions to join the domain. - Required if \'domainToJoin\' is secified.')
@secure()
param domainJoinPassword string = ''

//define a custom type for the dataDiskParams parameter and array of disks
type dataDiskType = {
  diskSizeGB: int
  dynamic: bool?
  //containerId: string
}
type dataDiskArrayType = dataDiskType[]

@description('The bicep array description of the dataDisks to attached to the vm. Provide an empty array for no addtional disks, or an array following the example below.')
// param dataDiskParams array = [{'diskSizeGB': 1024,'dynamic': true},{'diskSizeGB': 2048,'dynamic': false}]
param dataDiskParams dataDiskArrayType = []

var nicName = 'nic-${name}' // name of the NIC to be created
var customLocationId = resourceId('Microsoft.ExtendedLocation/customLocations', customLocationName) // full custom location ID
var imageId = isMarketplaceImage ? resourceId('microsoft.azurestackhci/marketplaceGalleryImages', imageName) : resourceId('microsoft.azurestackhci/galleryImages', imageName) // full image ID
var logicalNetworkId = resourceId('microsoft.azurestackhci/logicalnetworks', hciLogicalNetworkName) // full logical network ID

// precreate an Arc Connected Machine with an identity--used for zero-touch onboarding of the Arc VM during deployment
resource hybridComputeMachine 'Microsoft.HybridCompute/machines@2023-10-03-preview' = {
  name: name
  location: location
  kind: 'HCI'
  identity: {
    type: 'SystemAssigned'
  }
}

resource nic 'Microsoft.AzureStackHCI/networkInterfaces@2024-01-01' = {
  name: nicName
  location: location
  extendedLocation: {
    type: 'CustomLocation'
    name: customLocationId
  }
  properties: {
    ipConfigurations: [
      {
        name: 'ipconfig1'
        properties: {
          // uncomment to specify an IP, otherwise an IP address is dynamically allocated from the Logical Network's address pool or DHCP
          // privateIPAddress: 'x.x.x.x'
          subnet: {
            id: logicalNetworkId
          }
        }
      }
    ]
  }
}

resource dataDisks 'Microsoft.AzureStackHCI/virtualHardDisks@2024-01-01' = [for (disk, i) in dataDiskParams: {
  name: '${name}dataDisk${padLeft(i + 1, 2, '0')}'
  location: location
  extendedLocation: {
    type: 'CustomLocation'
    name: customLocationId
  }
  properties: {
    diskSizeGB: disk.diskSizeGB
    dynamic: disk.?dynamic // dynamic is optional
    // containerId: uncomment if you want to target a specific CSV/storage path in your HCI cluster
  }
}]

resource virtualMachine 'Microsoft.AzureStackHCI/virtualMachineInstances@2024-01-01' = {
  name: 'default' // value must be 'default' per 2023-09-01-preview
  properties: {
    hardwareProfile: {
      vmSize: 'Custom'
      processors: vCPUCount
      memoryMB: memoryMB
      // ### uncomment to use dymamic memory ###
      // dynamicMemoryConfig: {
      //   maximumMemoryMB: memoryMB
      //   minimumMemoryMB: 512
      //   targetMemoryBuffer: 20
      // }
    }
    osProfile: {
      adminUsername: adminUsername
      adminPassword: adminPassword
      computerName: name
      windowsConfiguration: {
        provisionVMAgent: true // mocguestagent
        provisionVMConfigAgent: true // azure arc connected machine agent
      }
    }
    storageProfile: {
      // vmConfigStoragePathId: specify a storage path ID to target a specific CSV/storage path in your HCI cluster
      imageReference: {
        id: imageId
      }
      dataDisks: [for (disk, i) in dataDiskParams: {
        id: resourceId('Microsoft.AzureStackHCI/virtualHardDisks', '${name}dataDisk${padLeft(i + 1, 2, '0')}')

      }]
    }

    // // Use this optional block to configure a proxy server for your VM
    // httpProxyConfig: {
    //   httpProxy: 'http://proxy.example.com:3128' // HTTP URL for proxy server.
    //   httpsProxy: 'https://proxy.example.com:3128' // HTTPS URL for proxy server.
    //   noProxy: [  // URLs, which can bypass proxy.
    //     'localhost'
    //     '127.0.0.1'
    //   ]
    //   trustedCa: '-----BEGIN CERTIFICATE-----....-----END CERTIFICATE-----' // Alternative CA cert to use for connecting to proxy servers.
    // }

    networkProfile: {
      networkInterfaces: [
        {
          id: nic.id
        }
      ]
    }
  }
  extendedLocation: {
    type: 'CustomLocation'
    name: customLocationId
  }
  scope: hybridComputeMachine

}

resource domainJoin 'Microsoft.HybridCompute/machines/extensions@2023-10-03-preview' = if (!empty(domainToJoin)) {
  parent: hybridComputeMachine
  location: location
  name: 'domainJoinExtension'
  properties: {
    publisher: 'Microsoft.Compute'
    type: 'JsonADDomainExtension'
    typeHandlerVersion: '1.3'
    autoUpgradeMinorVersion: true
    settings: {
      name: domainToJoin
      OUPath: domainTargetOu
      User: '${domainToJoin}\\${domainJoinUserName}'
      Restart: true
      Options: 3
    }
    protectedSettings: {
      Password: domainJoinPassword
    }
  }
}
You can use the Azure Verified Module (AVM) that contains the Terraform template for creating Virtual Machines. This module ensures your Terraform templates meet Microsoft's rigorous standards for quality, security, and operational excellence, enabling you to seamlessly deploy and manage on Azure. With this template, you can create one or multiple Virtual Machines on your cluster.
Steps to use the Terraform template
Download the Terraform template fromAzure verified module.
Download the Terraform template fromAzure verified module.
Navigate to theexamplesfolder in the repository, and look for the following subfolders:default: Creates one virtual machine instance.multi: Creates multiple virtual machine instances.
Navigate to theexamplesfolder in the repository, and look for the following subfolders:
default: Creates one virtual machine instance.
multi: Creates multiple virtual machine instances.
Choose the appropriate folder for your deployment.
Choose the appropriate folder for your deployment.
To initialize Terraform in your folder from step 2, run theterraform initcommand.
To initialize Terraform in your folder from step 2, run theterraform initcommand.
terraform init
To apply the configuration that deploys virtual machines, run theterraform applycommand.
To apply the configuration that deploys virtual machines, run theterraform applycommand.
terraform apply
After the deployment is complete, verify your virtual machines via the Azure portal. Navigate toResources>Virtual machines.
After the deployment is complete, verify your virtual machines via the Azure portal. Navigate toResources>Virtual machines.

Use managed identity to authenticate Azure Local VMs
When the VMs are created on your Azure Local via Azure CLI or Azure portal, a system-assigned managed identity is also created that lasts for the lifetime of the VMs.
The VMs on Azure Local are extended from Arc-enabled servers and can use system-assigned managed identity to access other Azure resources that support Microsoft Entra ID-based authentication. For example, the VMs can use a system-assigned managed identity to access the Azure Key Vault.
For  more information, seesystem-assigned managed identitiesandAuthenticate against Azure resource with Azure Arc-enabled servers.
Next steps
Delete Azure Local VMs.
Install and manage VM extensions.
Troubleshoot Azure Local VMs.
Frequently Asked Questions for Azure Local VM management.
Feedback
Was this page helpful?
Additional resources