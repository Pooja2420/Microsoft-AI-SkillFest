Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Check workflow status, view run history, and set up alerts in Azure Logic Apps
Article
2025-02-10
1 contributor
In this article
Applies to:Azure Logic Apps (Consumption + Standard)
After you run a logic app workflow, you can check that workflow's run status, trigger history, workflow run history, and performance.
This guide shows you how to perform the following tasks:
Review trigger history.
Review workflow run history.
Set up alertsto get notifications about failures or other possible problems. For example, you can create an alert that detects "when more than five runs fail in an hour".
For real-time event monitoring and richer debugging, you can set up diagnostics logging for your logic app workflow by usingAzure Monitor logs. This Azure service helps you monitor your cloud and on-premises environments so that you can more easily maintain their availability and performance. You can then find and view events, such as trigger events, run events, and action events. By storing this information inAzure Monitor logs, you can createlog queriesthat help you find and analyze this information. You can also use this diagnostic data with other Azure services, such as Azure Storage and Azure Event Hubs. For more information, seeMonitor logic apps by using Azure Monitor.

Review trigger history
Each workflow run starts with a trigger, which either fires on a schedule or waits for an incoming request or event. The trigger history lists all the trigger attempts that your workflow made and information about the inputs and outputs for each trigger attempt.
Consumption
Standard
In theAzure portal, open your Consumption logic app resource and workflow in the designer.
In theAzure portal, open your Consumption logic app resource and workflow in the designer.
On your logic app menu, selectOverview. On theOverviewpage, selectTrigger history.UnderTrigger history, all trigger attempts appear. Each time the trigger successfully fires, Azure Logic Apps creates an individual workflow instance and runs that instance. By default, each instance runs in parallel so that no workflow has to wait before starting a run. If your workflow triggers for multiple events or items at the same time, a trigger entry appears for each item with the same date and time.The following table lists the possible trigger statuses:Trigger statusDescriptionFailedAn error occurred. To review any generated error messages for a failed trigger, select that trigger attempt, and chooseOutputs. For example, you might find inputs that aren't valid.SkippedThe trigger checked the endpoint but found no data that met the specified criteria.SucceededThe trigger checked the endpoint and found available data. Usually, aFiredstatus also appears alongside this status. If not, the trigger definition might have a condition orSplitOncommand that wasn't met.This status can apply to a manual trigger, recurrence-based trigger, or polling trigger. A trigger can run successfully, but the run itself might still fail when the actions generate unhandled errors.TipYou can recheck the trigger without waiting for the next recurrence. On theOverviewpage toolbar or on the designer toolbar, selectRun,Run.
On your logic app menu, selectOverview. On theOverviewpage, selectTrigger history.

UnderTrigger history, all trigger attempts appear. Each time the trigger successfully fires, Azure Logic Apps creates an individual workflow instance and runs that instance. By default, each instance runs in parallel so that no workflow has to wait before starting a run. If your workflow triggers for multiple events or items at the same time, a trigger entry appears for each item with the same date and time.

The following table lists the possible trigger statuses:
Tip
You can recheck the trigger without waiting for the next recurrence. On theOverviewpage toolbar or on the designer toolbar, selectRun,Run.
To view information about a specific trigger attempt, select that trigger event.If the list shows many trigger attempts, and you can't find the entry that you want, try filtering the list. If you don't find the data that you expect, try selectingRefreshon the toolbar.You can now review information about the selected trigger event, for example:
To view information about a specific trigger attempt, select that trigger event.

If the list shows many trigger attempts, and you can't find the entry that you want, try filtering the list. If you don't find the data that you expect, try selectingRefreshon the toolbar.
You can now review information about the selected trigger event, for example:

For a stateful workflow, you can review the trigger history for each run, including the trigger status along with inputs and outputs, separately from theworkflow's run history. In the Azure portal, trigger history and run history appear at the workflow level, not the logic app level.
In theAzure portal, open your Standard logic app resource and workflow in the designer.
In theAzure portal, open your Standard logic app resource and workflow in the designer.
On the workflow menu, underTools, selectRun history. On theRun historypage, selectTrigger history.UnderTrigger history, all trigger attempts appear. Each time the trigger successfully fires, Azure Logic Apps creates an individual workflow instance and runs that instance. By default, each instance runs in parallel so that no workflow has to wait before starting a run. If your workflow triggers for multiple events or items at the same time, a trigger entry appears for each item with the same date and time.The following table lists the possible trigger statuses:Trigger statusDescriptionFailedAn error occurred. To review any generated error messages for a failed trigger, select that trigger attempt and chooseOutputs. For example, you might find inputs that aren't valid.SkippedThe trigger checked the endpoint but found no data that met the specified criteria.SucceededThe trigger checked the endpoint and found available data. Usually, aFiredstatus also appears alongside this status. If not, the trigger definition might have a condition orSplitOncommand that wasn't met.This status can apply to a manual trigger, recurrence-based trigger, or polling trigger. A trigger can run successfully, but the run itself might still fail when the actions generate unhandled errors.TipYou can recheck the trigger without waiting for the next recurrence. On theRun historypage toolbar, selectRun,Run.
On the workflow menu, underTools, selectRun history. On theRun historypage, selectTrigger history.

UnderTrigger history, all trigger attempts appear. Each time the trigger successfully fires, Azure Logic Apps creates an individual workflow instance and runs that instance. By default, each instance runs in parallel so that no workflow has to wait before starting a run. If your workflow triggers for multiple events or items at the same time, a trigger entry appears for each item with the same date and time.

The following table lists the possible trigger statuses:
Tip
You can recheck the trigger without waiting for the next recurrence. On theRun historypage toolbar, selectRun,Run.
To view information about a specific trigger attempt, select the identifier for that trigger attempt.If the list shows many trigger attempts, and you can't find the entry that you want, try filtering the list. If you don't find the data that you expect, try selectingRefreshon the toolbar.
To view information about a specific trigger attempt, select the identifier for that trigger attempt.

If the list shows many trigger attempts, and you can't find the entry that you want, try filtering the list. If you don't find the data that you expect, try selectingRefreshon the toolbar.
Check the trigger's inputs to confirm that they appear as you expect. On theHistorypane, underInputs link, select the link, which opens theInputspane.
Check the trigger's inputs to confirm that they appear as you expect. On theHistorypane, underInputs link, select the link, which opens theInputspane.

Check the triggers outputs, if any, to confirm that they appear as you expect. On theHistorypane, underOutputs link, select the link, which opens theOutputspane.Trigger outputs include the data that the trigger passes to the next step in your workflow. Reviewing these outputs can help you determine whether the correct or expected values passed on to the next step in your workflow.For example, the RSS trigger generated an error message that states that the RSS feed wasn't found.
Check the triggers outputs, if any, to confirm that they appear as you expect. On theHistorypane, underOutputs link, select the link, which opens theOutputspane.
Trigger outputs include the data that the trigger passes to the next step in your workflow. Reviewing these outputs can help you determine whether the correct or expected values passed on to the next step in your workflow.
For example, the RSS trigger generated an error message that states that the RSS feed wasn't found.


Review workflow run history
Each time that a trigger successfully fires, Azure Logic Apps creates a workflow instance and runs that instance. By default, each instance runs in parallel so that no workflow has to wait before starting a run. You can review what happened during each run, including the status, inputs, and outputs for each step in the workflow.
Consumption
Standard
In theAzure portal, open your Consumption logic app resource and workflow in the designer.
In theAzure portal, open your Consumption logic app resource and workflow in the designer.
On your logic app menu, selectOverview. On theOverviewpage, selectRuns history.UnderRuns history, all the past, current, and any waiting runs appear. If the trigger fires for multiple events or items at the same time, an entry appears for each item with the same date and time.TipIf the run status doesn't appear, try refreshing theOverviewpage by selectingRefresh.
No run happens for a trigger that is skipped due to unmet criteria or finding no data.The following table lists the possible run statuses:Run statusDescriptionAbortedThe run stopped or didn't finish due to external problems, for example, a system outage or lapsed Azure subscription.CancelledThe run was triggered and started, but received a cancellation request.FailedAt least one action in the run failed. No subsequent actions in the workflow were set up to handle the failure.RunningThe run was triggered and is in progress. However, this status can also appear for a run that is throttled due toaction limitsor thecurrent pricing plan.Tip: If you set updiagnostics logging, you can get information about any throttle events that happen.SucceededThe run succeeded. If any action failed, a subsequent action in the workflow handled that failure.Timed outThe run timed out because the current duration exceeded the run duration limit, which is controlled by thesetting namedRun history retention in days. The run duration is calculated by using the run's start time and run duration limit at that start time.Note: If the run duration also exceeds the currentrun history retention limit, which is also controlled by thesetting namedRun history retention in days, the run is cleared from the run history by a daily cleanup job. Whether the run times out or completes, the retention period is always calculated by using the run's start time andcurrentretention limit. So, if you reduce the duration limit for an in-flight run, the run times out. However, the run either stays or is cleared from the run history based on whether the run duration exceeded the retention limit.WaitingThe run didn't start yet or is paused, for example, due to an earlier workflow instance that is still running.
On your logic app menu, selectOverview. On theOverviewpage, selectRuns history.
UnderRuns history, all the past, current, and any waiting runs appear. If the trigger fires for multiple events or items at the same time, an entry appears for each item with the same date and time.
Tip
If the run status doesn't appear, try refreshing theOverviewpage by selectingRefresh.
No run happens for a trigger that is skipped due to unmet criteria or finding no data.

The following table lists the possible run statuses:
To review the steps and other information for a specific run, underRuns history, select that run. If the list shows many runs, and you can't find the entry that you want, try filtering the list.The run history page opens and shows the status for each step in the selected run, for example:The following table shows the possible statuses that each workflow action can have and show in the portal:Action statusIconDescriptionAbortedThe action stopped or didn't finish due to external problems, for example, a system outage or lapsed Azure subscription.CancelledThe action was running but received a cancel request.FailedThe action failed.RunningThe action is currently running.SkippedThe action was skipped because itsrunAfterconditions weren't met, for example, a preceding action failed. Each action has arunAfterobject where you can set up conditions that must be met before the current action can run.SucceededThe action succeeded.Succeeded with retriesThe action succeeded but only after a single or multiple retries. To review the retry history, on the run history page, select that action so that you can view the inputs and outputs.Timed outThe action stopped due to the time-out limit specified by that action's settings.WaitingApplies to a webhook action that is waiting for an inbound request from a caller.
To review the steps and other information for a specific run, underRuns history, select that run. If the list shows many runs, and you can't find the entry that you want, try filtering the list.

The run history page opens and shows the status for each step in the selected run, for example:

The following table shows the possible statuses that each workflow action can have and show in the portal:
runAfter
To view the information in list form, on the run history toolbar, selectRun details.TheLogic app run detailspane lists each step, their status, and other information.For example, you can get the run'sCorrelation Idproperty, which you might need when you use theREST API for Logic Apps.
To view the information in list form, on the run history toolbar, selectRun details.
TheLogic app run detailspane lists each step, their status, and other information.

For example, you can get the run'sCorrelation Idproperty, which you might need when you use theREST API for Logic Apps.
To get more information about a specific step, select either option:On the run history page, select a step to open a pane that shows the inputs, outputs, and any errors that happened in that step.For example, suppose you have a workflow with a failed step. You want to review the inputs that might have caused the step to fail.In this scenario, the failure resulted from an invalid or missing connection to an email account that is used to send an email.On the run history page toolbar, selectRun details. In theLogic app run detailspane that opens, select the step that you want, for example:NoteAll runtime details and events are encrypted within Azure Logic Apps and
are decrypted only when a user requests to view that data. You canhide inputs and outputs in the workflow run historyor control user access to this information by usingAzure role-based access control (Azure RBAC).
To get more information about a specific step, select either option:
On the run history page, select a step to open a pane that shows the inputs, outputs, and any errors that happened in that step.For example, suppose you have a workflow with a failed step. You want to review the inputs that might have caused the step to fail.In this scenario, the failure resulted from an invalid or missing connection to an email account that is used to send an email.
On the run history page, select a step to open a pane that shows the inputs, outputs, and any errors that happened in that step.
For example, suppose you have a workflow with a failed step. You want to review the inputs that might have caused the step to fail.
In this scenario, the failure resulted from an invalid or missing connection to an email account that is used to send an email.

On the run history page toolbar, selectRun details. In theLogic app run detailspane that opens, select the step that you want, for example:
On the run history page toolbar, selectRun details. In theLogic app run detailspane that opens, select the step that you want, for example:

Note
All runtime details and events are encrypted within Azure Logic Apps and
are decrypted only when a user requests to view that data. You canhide inputs and outputs in the workflow run historyor control user access to this information by usingAzure role-based access control (Azure RBAC).
You can view run history only for stateful workflows, not stateless workflows. To enable run history for a stateless workflow, seeEnable run history for stateless workflows.
In theAzure portal, open your Standard logic app resource and workflow in the designer.
In theAzure portal, open your Standard logic app resource and workflow in the designer.
On your workflow menu, underTools, selectRun history. On theRun historypage, selectRun history.UnderRun history, all the past, current, and any waiting runs appear. If the trigger fires for multiple events or items at the same time, an entry appears for each item with the same date and time.TipIf the run status doesn't appear, on theRun historypage toolbar, selectRefresh.
No run happens for a trigger that is skipped due to unmet criteria or finding no data.The following table lists the possible final statuses that each workflow run can have and show in the portal:Run statusIconDescriptionAbortedThe run stopped or didn't finish due to external problems, for example, a system outage or lapsed Azure subscription.CancelledThe run was triggered and started, but received a cancellation request.FailedAt least one action in the run failed. No subsequent actions in the workflow were set up to handle the failure.RunningThe run was triggered and is in progress. However, this status can also appear for a run that is throttled due toaction limitsor thecurrent pricing plan.Tip: If you set updiagnostics logging, you can get information about any throttle events that happen.SkippedThe trigger condition was checked but wasn't met, so the run never started.SucceededThe run succeeded. If any action failed, a subsequent action in the workflow handled that failure.Timed outThe run timed out because the current duration exceeded the run duration limit, which is controlled by thesetting namedRun history retention in days. The run duration is calculated by using the run's start time and run duration limit at that start time.Note: If the run duration also exceeds the currentrun history retention limit, which is also controlled by thesetting namedRun history retention in days, the run is cleared from the run history by a daily cleanup job. Whether the run times out or completes, the retention period is always calculated by using the run's start time andcurrentretention limit. So, if you reduce the duration limit for an in-flight run, the run times out. However, the run either stays or is cleared from the run history based on whether the run duration exceeded the retention limit.WaitingThe run didn't start yet or is paused, for example, due to an earlier workflow instance that is still running.
On your workflow menu, underTools, selectRun history. On theRun historypage, selectRun history.
UnderRun history, all the past, current, and any waiting runs appear. If the trigger fires for multiple events or items at the same time, an entry appears for each item with the same date and time.
Tip
If the run status doesn't appear, on theRun historypage toolbar, selectRefresh.
No run happens for a trigger that is skipped due to unmet criteria or finding no data.

The following table lists the possible final statuses that each workflow run can have and show in the portal:
To review the steps and other information for a specific run, on theRun historytab, select that run. If the list shows many runs, and you can't find the entry that you want, try filtering the list.The run history page opens and shows the status for each step in the selected run, for example:The following table shows the possible statuses that each workflow action can have and show in the portal:Action statusIconDescriptionAbortedThe action stopped or didn't finish due to external problems, for example, a system outage or lapsed Azure subscription.CancelledThe action was running but received a cancel request.FailedThe action failed.RunningThe action is currently running.SkippedThe action was skipped because itsrunAfterconditions weren't met, for example, a preceding action failed. Each action has arunAfterobject where you can set up conditions that must be met before the current action can run.SucceededThe action succeeded.Succeeded with retriesThe action succeeded but only after a single or multiple retries. To review the retry history, on the run history page, select that action so that you can view the inputs and outputs.Timed outThe action stopped due to the time-out limit specified by that action's settings.WaitingApplies to a webhook action that is waiting for an inbound request from a caller.
To review the steps and other information for a specific run, on theRun historytab, select that run. If the list shows many runs, and you can't find the entry that you want, try filtering the list.

The run history page opens and shows the status for each step in the selected run, for example:

The following table shows the possible statuses that each workflow action can have and show in the portal:
runAfter
To get more information about a specific step, on the run history page, select a step to open a pane that shows the inputs, outputs, and any errors that happened in that step.For example, suppose you have a workflow with a failed step. You want to review the inputs that might have caused the step to fail.In this scenario, the failure resulted from not finding the specified RSS feed, for example:The following screenshot shows the outputs from the failed step.NoteAll runtime details and events are encrypted within Azure Logic Apps and
are decrypted only when a user requests to view that data. You canhide inputs and outputs in the workflow run historyor control user access to this information by usingAzure role-based access control (Azure RBAC).
To get more information about a specific step, on the run history page, select a step to open a pane that shows the inputs, outputs, and any errors that happened in that step.
For example, suppose you have a workflow with a failed step. You want to review the inputs that might have caused the step to fail.
In this scenario, the failure resulted from not finding the specified RSS feed, for example:

The following screenshot shows the outputs from the failed step.

Note
All runtime details and events are encrypted within Azure Logic Apps and
are decrypted only when a user requests to view that data. You canhide inputs and outputs in the workflow run historyor control user access to this information by usingAzure role-based access control (Azure RBAC).

Rerun a workflow with same inputs
You can rerun a previously finished workflow with the same inputs that the workflow used previously in the following ways:
Rerun the entire workflow.
Rerun the entire workflow.
Rerun the workflow starting at a specific action. The resubmitted action and all subsequent actions run as usual.
Rerun the workflow starting at a specific action. The resubmitted action and all subsequent actions run as usual.
Completing this task creates and adds a new workflow run to your workflow's run history.
Limitations and considerations
By default, only Consumption workflows and Standard stateful workflows, which record and store run history, are supported. To use these capabilities with a stateless Standard workflow, enable stateful mode. For more information, seeEnable run history for stateless workflowsandEnable stateful mode for stateless connectors.
By default, only Consumption workflows and Standard stateful workflows, which record and store run history, are supported. To use these capabilities with a stateless Standard workflow, enable stateful mode. For more information, seeEnable run history for stateless workflowsandEnable stateful mode for stateless connectors.
The resubmitted run executes the same workflow version as the original run, even if you updated the workflow definition.
The resubmitted run executes the same workflow version as the original run, even if you updated the workflow definition.
You can rerun only actions from sequential workflows. Workflows with parallel paths are currently not supported.
You can rerun only actions from sequential workflows. Workflows with parallel paths are currently not supported.
The workflow must have a completed state, such as Succeeded, Failed, or Cancelled.
The workflow must have a completed state, such as Succeeded, Failed, or Cancelled.
The workflow must have 40 or fewer actions for you to rerun from a specific action.
The workflow must have 40 or fewer actions for you to rerun from a specific action.
If your workflow has operations such as create or delete operations, resubmitting a run might create duplicate data or try to delete data that no longer exists, resulting in an error.
If your workflow has operations such as create or delete operations, resubmitting a run might create duplicate data or try to delete data that no longer exists, resulting in an error.
These capabilities currently are unavailable with Visual Studio Code or Azure CLI.
These capabilities currently are unavailable with Visual Studio Code or Azure CLI.
Consumption
Standard
In theAzure portal, open your Consumption logic app resource and workflow in the designer.
In theAzure portal, open your Consumption logic app resource and workflow in the designer.
On your logic app menu, selectOverview. On theOverviewpage, selectRuns history.UnderRuns history, all the past, current, and any waiting runs appear. If the trigger fires for multiple events or items at the same time, an entry appears for each item with the same date and time.
On your logic app menu, selectOverview. On theOverviewpage, selectRuns history.
UnderRuns history, all the past, current, and any waiting runs appear. If the trigger fires for multiple events or items at the same time, an entry appears for each item with the same date and time.
On theRuns historypage, select the run that you want to rerun, and then selectResubmit.TheRuns historytab adds the resubmitted run to the runs list.TipIf the resubmitted run doesn't appear, on theRuns historypage toolbar, selectRefresh.
No run happens for a trigger that is skipped due to unmet criteria or finding no data.
On theRuns historypage, select the run that you want to rerun, and then selectResubmit.
TheRuns historytab adds the resubmitted run to the runs list.
Tip
If the resubmitted run doesn't appear, on theRuns historypage toolbar, selectRefresh.
No run happens for a trigger that is skipped due to unmet criteria or finding no data.
To review the inputs and outputs after the resubmitted run finishes, on theRuns historytab, select that run.
To review the inputs and outputs after the resubmitted run finishes, on theRuns historytab, select that run.
Rerun from a specific action
The rerun action capability is available for most actions except for nonsequential workflows, complex concurrency scenarios, and the following limitations:
In theAzure portal, open your Consumption logic app resource.
In theAzure portal, open your Consumption logic app resource.
On the logic app resource menu, selectOverview. On theOverviewpage, selectRuns history, which shows the run history for the workflow.
On the logic app resource menu, selectOverview. On theOverviewpage, selectRuns history, which shows the run history for the workflow.
On theRuns historytab, select the run that has the action from where you want to rerun the workflow.The run history page opens and shows the status for each step in the selected run.
On theRuns historytab, select the run that has the action from where you want to rerun the workflow.
The run history page opens and shows the status for each step in the selected run.
To rerun the workflow starting from a specific action, choose either option:Find the action from where to start rerunning the workflow, open the shortcut menu, and selectSubmit from this action.Select the action from where to start rerunning the workflow. In the pane that opens, under the action name, selectSubmit from this action.The run history page refreshes and shows the resubmitted run. All the operations that precede the resubmitted action show a lighter-colored status icon, representing reused inputs and outputs. The resubmitted action and subsequent actions show the colored status icons. For more information, seeReview workflow run history.TipIf the resubmitted run doesn't fully finish, on the run details page toolbar, selectRefresh.
To rerun the workflow starting from a specific action, choose either option:
Find the action from where to start rerunning the workflow, open the shortcut menu, and selectSubmit from this action.
Find the action from where to start rerunning the workflow, open the shortcut menu, and selectSubmit from this action.
Select the action from where to start rerunning the workflow. In the pane that opens, under the action name, selectSubmit from this action.
Select the action from where to start rerunning the workflow. In the pane that opens, under the action name, selectSubmit from this action.
The run history page refreshes and shows the resubmitted run. All the operations that precede the resubmitted action show a lighter-colored status icon, representing reused inputs and outputs. The resubmitted action and subsequent actions show the colored status icons. For more information, seeReview workflow run history.
Tip
If the resubmitted run doesn't fully finish, on the run details page toolbar, selectRefresh.
You can rerun only stateful workflows, not stateless workflows. To enable run history for a stateless workflow, seeEnable run history for stateless workflows.
In theAzure portal, open your Standard logic app resource and workflow in the designer.
In theAzure portal, open your Standard logic app resource and workflow in the designer.
On the workflow menu, underTools, selectRun history. On theRun historypage, selectRun history, which shows the run history for the current workflow.
On the workflow menu, underTools, selectRun history. On theRun historypage, selectRun history, which shows the run history for the current workflow.
On theRun historytab, select the run that you want to rerun, and then selectResubmit.TheRun historytab adds the resubmitted run to the runs list.TipIf the resubmitted run doesn't appear, on theRun historypage toolbar, selectRefresh.
No run happens for a trigger that is skipped due to unmet criteria or finding no data.
On theRun historytab, select the run that you want to rerun, and then selectResubmit.
TheRun historytab adds the resubmitted run to the runs list.
Tip
If the resubmitted run doesn't appear, on theRun historypage toolbar, selectRefresh.
No run happens for a trigger that is skipped due to unmet criteria or finding no data.
To review the inputs and outputs after the resubmitted run finishes, on theRun historytab, select that run.
To review the inputs and outputs after the resubmitted run finishes, on theRun historytab, select that run.
Rerun from a specific action
The rerun action capability is available for most actions except for nonsequential workflows, complex concurrency scenarios, and the following limitations:
In theAzure portal, open your Standard logic app resource and workflow.
In theAzure portal, open your Standard logic app resource and workflow.
On the workflow menu, underTools, selectRun history, and then selectRun history, which shows the run history for the current workflow.
On the workflow menu, underTools, selectRun history, and then selectRun history, which shows the run history for the current workflow.
On theRun historytab, select the run that has the action from where you want to rerun the workflow.The run details page opens and shows the status for each step in the selected run.
On theRun historytab, select the run that has the action from where you want to rerun the workflow.
The run details page opens and shows the status for each step in the selected run.
To rerun the workflow starting from a specific action, choose either option:Find the action from where to start rerunning the workflow, open the shortcut menu, and selectSubmit from this action.Select the action from where to start rerunning the workflow. In the pane that opens, under the action name, selectSubmit from this action.On the run details page, all the operations that precede the resubmitted action show a lighter-colored status icon, representing reused inputs and outputs. The resubmitted action and subsequent actions show the colored status icons. For more information, seeReview workflow run history.TipIf the resubmitted run doesn't fully finish, on the run details page toolbar, selectRefresh.
To rerun the workflow starting from a specific action, choose either option:
Find the action from where to start rerunning the workflow, open the shortcut menu, and selectSubmit from this action.
Find the action from where to start rerunning the workflow, open the shortcut menu, and selectSubmit from this action.
Select the action from where to start rerunning the workflow. In the pane that opens, under the action name, selectSubmit from this action.
Select the action from where to start rerunning the workflow. In the pane that opens, under the action name, selectSubmit from this action.
On the run details page, all the operations that precede the resubmitted action show a lighter-colored status icon, representing reused inputs and outputs. The resubmitted action and subsequent actions show the colored status icons. For more information, seeReview workflow run history.
Tip
If the resubmitted run doesn't fully finish, on the run details page toolbar, selectRefresh.
Return to the run history page, which now includes the resubmitted run.
Return to the run history page, which now includes the resubmitted run.

Set up monitoring alerts
To get alerts based on specific metrics or exceeded thresholds in your workflow, set up your logic app resource withalerts in Azure Monitor. For more information, seeMetrics in Azure.
To set up alerts without usingAzure Monitor, follow these steps, which apply to both Consumption and Standard logic app resources:
On your logic app resource menu, underMonitoring, selectAlerts. On the toolbar, selectCreate>Alert rule.
On your logic app resource menu, underMonitoring, selectAlerts. On the toolbar, selectCreate>Alert rule.
On theCreate an alert rulepage, from theSignal namelist, select the signal for which you want to get an alert.NoteAlert signals differ between Consumption and Standard logic apps. For example,
Consumption logic apps have many trigger-related signals, such asTriggers CompletedandTriggers Failed, while Standard workflows have theWorkflow Triggers Completed CountandWorkflow Triggers Failure Ratesignals.For example, to send an alert when a trigger fails in a Consumption workflow, follow these steps:From theSignal namelist, select theTriggers Failedsignal.UnderAlert logic, set up your condition, for example:PropertyExample valueThresholdStaticAggregation typeCountOperatorGreater than or equal toUnitCountThreshold value1ThePreviewsection now shows the condition that you set up, for example:Whenever the count Triggers Failed is greater than or equal to 1UnderWhen to evaluate, set up the schedule for checking the condition:PropertyExample valueCheck every1 minuteLookback period5 minutesFor example, the finished condition looks similar to the following example, and theCreate an alert rulepage now shows the cost for running that alert:
On theCreate an alert rulepage, from theSignal namelist, select the signal for which you want to get an alert.
Note
Alert signals differ between Consumption and Standard logic apps. For example,
Consumption logic apps have many trigger-related signals, such asTriggers CompletedandTriggers Failed, while Standard workflows have theWorkflow Triggers Completed CountandWorkflow Triggers Failure Ratesignals.
For example, to send an alert when a trigger fails in a Consumption workflow, follow these steps:
From theSignal namelist, select theTriggers Failedsignal.
From theSignal namelist, select theTriggers Failedsignal.
UnderAlert logic, set up your condition, for example:PropertyExample valueThresholdStaticAggregation typeCountOperatorGreater than or equal toUnitCountThreshold value1ThePreviewsection now shows the condition that you set up, for example:Whenever the count Triggers Failed is greater than or equal to 1
UnderAlert logic, set up your condition, for example:
ThePreviewsection now shows the condition that you set up, for example:
Whenever the count Triggers Failed is greater than or equal to 1
UnderWhen to evaluate, set up the schedule for checking the condition:PropertyExample valueCheck every1 minuteLookback period5 minutesFor example, the finished condition looks similar to the following example, and theCreate an alert rulepage now shows the cost for running that alert:
UnderWhen to evaluate, set up the schedule for checking the condition:
For example, the finished condition looks similar to the following example, and theCreate an alert rulepage now shows the cost for running that alert:

When you're ready, selectReview + Create.
When you're ready, selectReview + Create.
For general information, seeCreate an alert rule from a specific resource - Azure Monitor.
Related content
Monitor logic apps with Azure Monitor
Feedback
Was this page helpful?
Additional resources