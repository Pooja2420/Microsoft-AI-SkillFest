Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Authorize access to REST APIs with OAuth 2.0
Article
2025-01-07
18 contributors
In this article
Azure DevOps Services
Learn how to authenticate your web app users for REST API access, so your app doesn't continue to ask for usernames and passwords.
Note
The following guidance is intended for Azure DevOps Services users since OAuth 2.0 isn't supported on Azure DevOps Server. Client Libraries are a series of packages built specifically for extending Azure DevOps Server functionality. For on-premises users, we recommend usingClient Libraries, Windows Auth, orpersonal access tokens (PATs)to authenticate on behalf of a user.
About OAuth 2.0
Azure DevOps Services uses theOAuth 2.0 protocolto authorize your app for a user and generate an access token. Use this token when you call the REST APIs from your application. When you call Azure DevOps Services APIs for that user, use that user's access token. Access tokens expire, so refresh the access token if expired.

Available OAuth models
Important
When creating a new OAuth 2.0 app, use Microsoft Entra ID OAuth. Azure DevOps OAuth 2.0 is slated for deprecation in 2026. Starting April 2025, we will stop accepting new Azure DevOps OAuth apps.Learn more in our blog post.

Microsoft Entra ID OAuth
Building on a new platform can be overwhelming. Inthis guide to building a Microsoft Entra app for Azure DevOps, we collect helpful links that might be useful to kicking off the OAuth app development process on Microsoft Entra. For folks migrating from Azure DevOps OAuth to Microsoft Entra OAuth, we offer tips to consider during your migration effort.
Azure DevOps OAuth
For existing apps, see theAzure DevOps OAuth app guide. You can alsomanage which Azure DevOps apps are authorizedto access your resources.
Scopes
Developers are expected to specify what scopes they require from their users. The same scopes are available on both OAuth models. The following scopes are available via delegated (on-behalf-of user) flows only.
To find out what scopes you need for your app, look under thescopesheader on the API Reference page for each API you're using.
scopes
Some scopes might be inclusive of other scopes, for example,vso.code_manageincludesvso.code_write. For example, many scopes inherit fromvso.profile. Consider what is the minimal number of scopes you need when requesting scope consent from users.
vso.code_manage
vso.code_write
vso.profile
Note
Scopes only enable access to REST APIs and select Git endpoints. SOAP API access isn't supported.
vso.advsec
vso.advsec_write
vso.advsec
vso.advsec_manage
vso.advsec_write
vso.agentpools
vso.agentpools_manage
vso.agentpools
vso.environment_manage
vso.agentpools_manage
vso.analytics
vso.auditlog
vso.auditstreams_manage
vso.auditlog
vso.build
vso.hooks_write
vso.build_execute
vso.build
vso.code
vso.hooks_write
vso.code_write
vso.code
vso.code_manage
vso.code_write
vso.code_full
vso.code_manage
vso.code_status
vso.connected_server
vso.entitlements
vso.memberentitlementmanagement
vso.memberentitlementmanagement_write
vso.memberentitlementmanagement
vso.extension
vso.profile
vso.extension_manage
vso.extension
vso.extension.data
vso.profile
vso.extension.data_write
vso.extension.data
vso.githubconnections
vso.githubconnections_manage
vso.githubconnections
vso.graph
vso.graph_manage
vso.graph
vso.identity
vso.identity_manage
vso.identity
vso.machinegroup_manage
vso.agentpools_manage
vso.gallery
vso.profile
vso.gallery_acquire
vso.gallery
vso.gallery_publish
vso.gallery
vso.gallery_manage
vso.gallery_publish
vso.notification
vso.profile
vso.notification_write
vso.notification
vso.notification_manage
vso.notification_write
vso.notification_diagnostics
vso.notification
vso.packaging
vso.profile
vso.packaging_write
vso.packaging
vso.packaging_manage
vso.packaging_write
vso.pipelineresources_use
vso.pipelineresources_manage
vso.pipelineresources_manage
vso.project
vso.project_write
vso.project
vso.project_manage
vso.project_write
vso.release
vso.profile
vso.release_execute
vso.release
vso.release_manage
vso.release_manage
vso.securefiles_read
vso.securefiles_write
vso.securefiles_read
vso.securefiles_manage
vso.securefiles_write
vso.security_manage
vso.serviceendpoint
vso.profile
vso.serviceendpoint_query
vso.serviceendpoint
vso.serviceendpoint_manage
vso.serviceendpoint_query
vso.hooks
vso.profile
vso.hooks_write
vso.hooks
vso.hooks_interact
vso.profile
vso.settings
vso.settings_write
vso.symbols
vso.profile
vso.symbols_write
vso.symbols
vso.symbols_manage
vso.symbols_write
vso.taskgroups_read
vso.taskgroups_write
vso.taskgroups_read
vso.taskgroups_manage
vso.taskgroups_write
vso.dashboards
vso.dashboards_manage
vso.dashboards
vso.test
vso.profile
vso.test_write
vso.test
vso.threads_full
vso.tokens
vso.tokenadministration
vso.profile
vso.profile_write
vso.profile
vso.variablegroups_read
vso.variablegroups_write
vso.variablegroups_read
vso.variablegroups_manage
vso.variablegroups_write
vso.wiki
vso.wiki_write
vso.wiki
vso.work
vso.hooks_write
vso.work_write
vso.work
vso.work_full
vso.work_write
user_impersonation
Frequently asked questions (FAQs)
A: No. Azure DevOps Services only supports the web server flow, so there's no way to implement OAuth, as you can't securely store the app secret.
A: No. OAuth is only supported in the REST APIs.
Related articles
Choosing the right authentication method
Building for Azure DevOps with Microsoft Entra OAuth apps
Using Azure DevOps OAuth
Feedback
Was this page helpful?
Additional resources