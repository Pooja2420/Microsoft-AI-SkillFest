Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Azure authentication with Java and Azure Identity
Article
2025-04-01
4 contributors
In this article
This article provides an overview of the Azure Identity library for Java, which provides Microsoft Entra token authentication support across the Azure SDK for Java. This library provides a set ofTokenCredentialimplementations that you can use to construct Azure SDK clients that support Microsoft Entra token authentication.
TokenCredential
The Azure Identity library currently supports:
Azure authentication in Java development environments, which enables:IDEA IntelliJ authentication, with the sign-in information retrieved from theAzure Toolkit for IntelliJ.Azure CLI authentication, with the sign-in information saved in theAzure CLIAzure Developer CLI authentication, with the sign-in information saved in theAzure Developer CLIAzure PowerShell authentication, with the sign-in information saved inAzure PowerShell
IDEA IntelliJ authentication, with the sign-in information retrieved from theAzure Toolkit for IntelliJ.
Azure CLI authentication, with the sign-in information saved in theAzure CLI
Azure Developer CLI authentication, with the sign-in information saved in theAzure Developer CLI
Azure PowerShell authentication, with the sign-in information saved inAzure PowerShell
Authenticating applications hosted in Azure, which enables:DefaultAzureCredentialauthenticationManaged Identity authentication
DefaultAzureCredentialauthentication
DefaultAzureCredential
Managed Identity authentication
Authentication with service principals, which enables:Client Secret authenticationClient Certificate authentication
Client Secret authentication
Client Certificate authentication
Authentication with user credentials, which enables:Interactive browser authenticationDevice code authenticationUsername/password authentication
Interactive browser authentication
Device code authentication
Username/password authentication
Follow these links to learn more about the specifics of each of these authentication approaches. In the rest of this article, we introduce the commonly usedDefaultAzureCredentialand related subjects.
DefaultAzureCredential
Add the Maven dependencies
Include theazure-sdk-bomin your project to take a dependency on the stable version of the library. In the following snippet, replace the{bom_version_to_target}placeholder with the version number. To learn more about the BOM, see theAdd Azure SDK for Java to an existing projectsection ofGet started with Azure SDK and Apache Maven.
azure-sdk-bom
{bom_version_to_target}
<dependencyManagement>
    <dependencies>
        <dependency>
            <groupId>com.azure</groupId>
            <artifactId>azure-sdk-bom</artifactId>
            <version>{bom_version_to_target}</version>
            <type>pom</type>
            <scope>import</scope>
        </dependency>
    </dependencies>
</dependencyManagement>
<dependencyManagement>
    <dependencies>
        <dependency>
            <groupId>com.azure</groupId>
            <artifactId>azure-sdk-bom</artifactId>
            <version>{bom_version_to_target}</version>
            <type>pom</type>
            <scope>import</scope>
        </dependency>
    </dependencies>
</dependencyManagement>
Then include the direct dependency in thedependenciessection without the version tag:
dependencies
<dependencies>
  <dependency>
    <groupId>com.azure</groupId>
    <artifactId>azure-identity</artifactId>
  </dependency>
</dependencies>
<dependencies>
  <dependency>
    <groupId>com.azure</groupId>
    <artifactId>azure-identity</artifactId>
  </dependency>
</dependencies>
Key concepts
There are two key concepts in understanding the Azure Identity library: the concept of a credential, and the most common implementation of that credential,DefaultAzureCredential.
DefaultAzureCredential
A credential is a class that contains or can obtain the data needed for a service client to authenticate requests. Service clients across the Azure SDK accept credentials when they're constructed, and service clients use those credentials to authenticate requests to the service.
The Azure Identity library focuses on OAuth authentication with Microsoft Entra ID, and it offers various credential classes that can acquire a Microsoft Entra token to authenticate service requests. All of the credential classes in this library are implementations of theTokenCredentialabstract class inazure-core, and you can use any of them to construct service clients that can authenticate with aTokenCredential.
TokenCredential
TokenCredential
DefaultAzureCredentialis appropriate for most scenarios where the application is intended to ultimately run in the Azure Cloud.DefaultAzureCredentialcombines credentials that are commonly used to authenticate when deployed, with credentials that are used to authenticate in a development environment. For more information, including examples usingDefaultAzureCredential, see theDefaultAzureCredentialsection ofAuthenticating Azure-hosted Java applications.
DefaultAzureCredential
DefaultAzureCredential
DefaultAzureCredential
Examples
As noted inUse the Azure SDK for Java, the management libraries differ slightly. One of the ways they differ is that there are libraries for consuming Azure services, calledclient libraries, and libraries for managing Azure services, calledmanagement libraries. In the following sections, there's a quick overview of authenticating in both client and management libraries.
Authenticate Azure client libraries
The following example demonstrates authenticating theSecretClientfrom theazure-security-keyvault-secretsclient library usingDefaultAzureCredential.
SecretClient
DefaultAzureCredential
// Azure SDK client builders accept the credential as a parameter.
SecretClient client = new SecretClientBuilder()
  .vaultUrl("https://<your Key Vault name>.vault.azure.net")
  .credential(new DefaultAzureCredentialBuilder().build())
  .buildClient();
// Azure SDK client builders accept the credential as a parameter.
SecretClient client = new SecretClientBuilder()
  .vaultUrl("https://<your Key Vault name>.vault.azure.net")
  .credential(new DefaultAzureCredentialBuilder().build())
  .buildClient();
Authenticate Azure management libraries
The Azure management libraries use the same credential APIs as the Azure client libraries, but also require anAzure subscription IDto manage the Azure resources on that subscription.
You can find the subscription IDs on theSubscriptions page in the Azure portal. Alternatively, use the followingAzure CLIcommand to get subscription IDs:
az account list --output table
az account list --output table
You can set the subscription ID in theAZURE_SUBSCRIPTION_IDenvironment variable.AzureProfilepicks up this ID as the default subscription ID during the creation of aManagerinstance in the following example:
AZURE_SUBSCRIPTION_ID
AzureProfile
Manager
AzureResourceManager azureResourceManager = AzureResourceManager.authenticate(
        new DefaultAzureCredentialBuilder().build(),
        new AzureProfile(AzureEnvironment.AZURE))
    .withDefaultSubscription();
AzureResourceManager azureResourceManager = AzureResourceManager.authenticate(
        new DefaultAzureCredentialBuilder().build(),
        new AzureProfile(AzureEnvironment.AZURE))
    .withDefaultSubscription();
DefaultAzureCredentialused in this example authenticates anAzureResourceManagerinstance usingDefaultAzureCredential. You can also use other Token Credential implementations offered in the Azure Identity library in place ofDefaultAzureCredential.
DefaultAzureCredential
AzureResourceManager
DefaultAzureCredential
DefaultAzureCredential
Troubleshooting
For guidance, seeTroubleshoot Azure Identity authentication issues.
Next steps
This article introduced the Azure Identity functionality available in the Azure SDK for Java. It describedDefaultAzureCredentialas common and appropriate in many cases. The following articles describe other ways to authenticate using the Azure Identity library, and provide more information aboutDefaultAzureCredential:
DefaultAzureCredential
DefaultAzureCredential
Azure authentication in development environments
Authenticating applications hosted in Azure
Authentication with service principals
Authentication with user credentials
Feedback
Was this page helpful?
Additional resources