Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Associate automated tests with test cases
Article
2025-03-20
14 contributors
In this article
Azure DevOps Services | Azure DevOps Server 2022 - Azure DevOps Server 2019
Visual Studio 2022 | Visual Studio 2019 | Visual Studio 2017 | Visual Studio 2015
Associating automated tests with test cases can enhance your testing process by providing better traceability and integration with your CI/CD pipeline. This article guides you through the scenarios where associating automated tests with test cases is beneficial and how to do it effectively.
Prerequisites
For more information, seeManual test access and permissions.
Create a test project and build pipeline
Do the following steps to create a test project and build pipeline.
Create a test project containing your automated test. For more information, seewhat types of tests are supported.
Check your test project into an Azure DevOps.
Create a build pipeline for your project and ensure that it contains the automated test. For more information, seewhat the differences are if you're still using a XAML build.

Associate your automated test in Visual Studio
Consider using Visual Studio to associate automated tests with a test case in the following scenarios:
Automating manual test cases: If you created a manual test case that you later decide is a good candidate for automation, but you still want to run it as part of a test plan. You can run these tests in the CI/CD pipeline by selecting the test plan or test suite in the settings of theVisual Studio Testtask. You can also run automated tests from theTest Plansweb portal. If you're using XAML builds, you canrun these automated tests using Microsoft Test Manager.
Automating manual test cases: If you created a manual test case that you later decide is a good candidate for automation, but you still want to run it as part of a test plan. You can run these tests in the CI/CD pipeline by selecting the test plan or test suite in the settings of theVisual Studio Testtask. You can also run automated tests from theTest Plansweb portal. If you're using XAML builds, you canrun these automated tests using Microsoft Test Manager.
Enabling end-to-end traceability: If your test cases are linked to requirements or user stories, you can use the results of the test execution to establish the quality of those requirements.
Enabling end-to-end traceability: If your test cases are linked to requirements or user stories, you can use the results of the test execution to establish the quality of those requirements.
Do the following steps to associate your automated test with a test case in Visual Studio.
Open your solution in Visual Studio Enterprise or Professional 2017 or a later version.
Open your solution in Visual Studio Enterprise or Professional 2017 or a later version.
If you don't know the identifier of the work item for the test case,
locate the test case inAzure Test Plans, orquery for the work itemin theWorkhub.
If you don't know the identifier of the work item for the test case,
locate the test case inAzure Test Plans, orquery for the work itemin theWorkhub.
When you know the identifier of the work item for the test case:If you're using Visual Studio 2017 or later version, do the following steps to associate your tests.If theTest Explorerwindow isn't displayed, open it from theTest | Windowsmenu.If your tests aren't displayed inTest Explorer, build the solution.InTest Explorer, select the test method you want to associate and chooseAssociate to Test Case.In the dialog that opens, type the test case identifier and chooseAdd Association, then chooseSave.The dialog shows a list of test cases currently associated with the selected test method.
You can't associate more than one test method with a test case, but you can associate a
test method with more than one test case.If you're using the build and release services in Azure DevOps, not aXAML build, you can run associated tests in the build and release pipelines by using theVisual Studio Testtask. Youcan'trun tests on-demand using Microsoft Test Manager unless you're using a XAML build.The parameters in a test case aren't used by any automated test that you associate with a test case. Iterations of a test case that use these parameters are for manual tests only.
When you know the identifier of the work item for the test case:
If you're using Visual Studio 2017 or later version, do the following steps to associate your tests.
If theTest Explorerwindow isn't displayed, open it from theTest | Windowsmenu.
If your tests aren't displayed inTest Explorer, build the solution.
InTest Explorer, select the test method you want to associate and chooseAssociate to Test Case.
In the dialog that opens, type the test case identifier and chooseAdd Association, then chooseSave.

The dialog shows a list of test cases currently associated with the selected test method.
You can't associate more than one test method with a test case, but you can associate a
test method with more than one test case.
If you're using the build and release services in Azure DevOps, not aXAML build, you can run associated tests in the build and release pipelines by using theVisual Studio Testtask. Youcan'trun tests on-demand using Microsoft Test Manager unless you're using a XAML build.
The parameters in a test case aren't used by any automated test that you associate with a test case. Iterations of a test case that use these parameters are for manual tests only.
For more information, see the following articles:
Add files to the server
Continuous integration on any platform
Recording and Playing Back Manual Tests
Use UI Automation To Test Your Code

Associate your automated test in Azure DevOps
Associate your test from a build pipeline
Navigate toPipelinesand choose a pipeline where the automated tests ran.
Navigate toPipelinesand choose a pipeline where the automated tests ran.
Choose the build in which your tests were executed.
Choose the build in which your tests were executed.
In theTeststab, look for the automated test you wish to link with a manual test case.
In theTeststab, look for the automated test you wish to link with a manual test case.
Select the test and then click onAssociate Test Case.
Select the test and then click onAssociate Test Case.
Locate the manual test case you want to associate to the automated test and clickAssociate.
Locate the manual test case you want to associate to the automated test and clickAssociate.

After you associate your automated tests with their corresponding test cases, you can utilize theAzure Test Plan taskto execute them as part of a pipeline.
FAQs about associating automated tests
See the following frequently asked questions (FAQs).

Q: What types of tests are supported?
A: The following capabilities and limitations exist for each test type:
* Supported in Visual Studio 15.9 Preview 2 or later.
Tests that use the .NET core frameworkcanbe associated with a test case
work item when using Visual Studio 15.9 Preview 2 or later.
Run the .NET core tests. The appropriate target framework must be specified
in a.runsettings file.

Q: Can I associate my tests from my GitHub repo?
A: As long as you run your automated tests in Azure Pipelines with the VSTest task, or you report the test results with the PublishTestResults task, the automated tests will be available for association to test cases.
Please keep in mind that the test must run at least once before it becomes available for association.

Q: What are the differences if I'm still using a XAML build?
A: If you're using a XAML build in Azure Pipelines, you can run tests
that you associated in a Build-Deploy-Test workflow using aLab environment.
You can also run tests using Microsoft Test Manager and aLab environment.

Q: Can I configure work items to open in Visual Studio?
A: Yes. If you want test work items to open inside Visual Studio
instead of the default Azure Pipelines UI in your web browser,
change theWork Items | Generalsetting from theTools | Optionsmenu in Visual Studio.

Related articles
Associate automated test results with requirements
Run automated tests from test plans
Run automated tests with Microsoft Test Manager
Feedback
Was this page helpful?
Additional resources