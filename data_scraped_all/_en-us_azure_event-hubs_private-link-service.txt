Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Allow access to Azure Event Hubs namespaces via private endpoints
Article
2024-07-31
3 contributors
In this article
Azure Private Link Service enables you to access Azure Services (for example, Azure Event Hubs, Azure Storage, and Azure Cosmos DB) and Azure hosted customer/partner services over aprivate endpointin your virtual network.
A private endpoint is a network interface that connects you privately and securely to a service powered by Azure Private Link. The private endpoint uses a private IP address from your virtual network, effectively bringing the service into your virtual network. All traffic to the service is routed through the private endpoint, so no gateways, NAT devices, ExpressRoute or VPN connections, or public IP addresses are needed. Traffic between your virtual network and the service traverses over the Microsoft backbone network, eliminating exposure from the public Internet. You can connect to an instance of an Azure resource, giving you the highest level of granularity in access control.
For more information, seeWhat is Azure Private Link?
Important points
This feature isn't supported in thebasictier.
Enabling private endpoints can prevent other Azure services from interacting with Event Hubs. Requests that are blocked include those from other Azure services, from the Azure portal, from logging and metrics services, and so on. As an exception, you can allow access to Event Hubs resources from certaintrusted serviceseven when private endpoints are enabled. For a list of trusted services, seeTrusted services.
Specifyat least one IP rule or virtual network rulefor the namespace to allow traffic only from the specified IP addresses or subnet of a virtual network. If there are no IP and virtual network rules, the namespace can be accessed over the public internet (using the access key).
Add a private endpoint using Azure portal
Prerequisites
To integrate an Event Hubs namespace with Azure Private Link, you need the following entities or permissions:
An Event Hubs namespace.
An Azure virtual network.
A subnet in the virtual network. You can use thedefaultsubnet.
Owner or contributor permissions for both the namespace and the virtual network.
Your private endpoint and virtual network must be in the same region. When you select a region for the private endpoint using the portal, it automatically filters virtual networks that are in that region. Your namespace can be in a different region.
Your private endpoint uses a private IP address in your virtual network.
Configure private access when creating a namespace
When creating a namespace, you can either allow public only (from all networks) or private only (only via private endpoints) access to the namespace.
If you select thePrivate accessoption on theNetworkingpage of the namespace creation wizard, you can add a private endpoint on the page by selecting+ Private endpointbutton. See the next section for the detailed steps for adding a private endpoint.

Configure private access for an existing namespace
If you already have an Event Hubs namespace, you can create a private link connection by following these steps:
Sign in to theAzure portal.
Sign in to theAzure portal.
In the search bar, type inevent hubs.
In the search bar, type inevent hubs.
Select thenamespacefrom the list to which you want to add a private endpoint.
Select thenamespacefrom the list to which you want to add a private endpoint.
On theNetworkingpage, forPublic network access, selectDisabledif you want the namespace to be accessed only via private endpoints.
On theNetworkingpage, forPublic network access, selectDisabledif you want the namespace to be accessed only via private endpoints.
ForAllow trusted Microsoft services to bypass this firewall, selectYesif you want to allowtrusted Microsoft servicesto bypass this firewall.
ForAllow trusted Microsoft services to bypass this firewall, selectYesif you want to allowtrusted Microsoft servicesto bypass this firewall.

Switch to thePrivate endpoint connectionstab.
Switch to thePrivate endpoint connectionstab.
Select the+ Private Endpointbutton at the top of the page.
Select the+ Private Endpointbutton at the top of the page.

On theBasicspage, follow these steps:Select theAzure subscriptionin which you want to create the private endpoint.Select theresource groupfor the private endpoint resource.Enter anamefor the private endpoint.Enter aname for the network interface.Select aregionfor the private endpoint. Your private endpoint must be in the same region as your virtual network, but can be in a different region from the private link resource that you're connecting to.SelectNext: Resource >button at the bottom of the page.
On theBasicspage, follow these steps:
Select theAzure subscriptionin which you want to create the private endpoint.
Select theAzure subscriptionin which you want to create the private endpoint.
Select theresource groupfor the private endpoint resource.
Select theresource groupfor the private endpoint resource.
Enter anamefor the private endpoint.
Enter anamefor the private endpoint.
Enter aname for the network interface.
Enter aname for the network interface.
Select aregionfor the private endpoint. Your private endpoint must be in the same region as your virtual network, but can be in a different region from the private link resource that you're connecting to.
Select aregionfor the private endpoint. Your private endpoint must be in the same region as your virtual network, but can be in a different region from the private link resource that you're connecting to.
SelectNext: Resource >button at the bottom of the page.
SelectNext: Resource >button at the bottom of the page.

On theResourcepage, review settings, and selectNext: Virtual Network.
On theResourcepage, review settings, and selectNext: Virtual Network.

On theVirtual Networkpage, you select the subnet in a virtual network to where you want to deploy the private endpoint.Select avirtual network. Only virtual networks in the currently selected subscription and location are listed in the drop-down list.Select asubnetin the virtual network you selected.Notice that thenetwork policy for private endpointsis disabled. If you want to enable it, selectedit, update the setting, and selectSave.ForPrivate IP configuration, by default,Dynamically allocate IP addressoption is selected. If you want to assign a static IP address, selectStatically allocate IP address*.ForApplication security group, select an existing application security group or create one that's to be associated with the private endpoint.SelectNext: DNS >button at the bottom of the page.
On theVirtual Networkpage, you select the subnet in a virtual network to where you want to deploy the private endpoint.
Select avirtual network. Only virtual networks in the currently selected subscription and location are listed in the drop-down list.
Select avirtual network. Only virtual networks in the currently selected subscription and location are listed in the drop-down list.
Select asubnetin the virtual network you selected.
Select asubnetin the virtual network you selected.
Notice that thenetwork policy for private endpointsis disabled. If you want to enable it, selectedit, update the setting, and selectSave.
Notice that thenetwork policy for private endpointsis disabled. If you want to enable it, selectedit, update the setting, and selectSave.
ForPrivate IP configuration, by default,Dynamically allocate IP addressoption is selected. If you want to assign a static IP address, selectStatically allocate IP address*.
ForPrivate IP configuration, by default,Dynamically allocate IP addressoption is selected. If you want to assign a static IP address, selectStatically allocate IP address*.
ForApplication security group, select an existing application security group or create one that's to be associated with the private endpoint.
ForApplication security group, select an existing application security group or create one that's to be associated with the private endpoint.
SelectNext: DNS >button at the bottom of the page.
SelectNext: DNS >button at the bottom of the page.

On theDNSpage, select whether you want the private endpoint to be integrated with a private DNS zone, and then selectNext: Tags.
On theDNSpage, select whether you want the private endpoint to be integrated with a private DNS zone, and then selectNext: Tags.
On theTagspage, create any tags (names and values) that you want to associate with the private endpoint resource. Then, selectReview + createbutton at the bottom of the page.
On theTagspage, create any tags (names and values) that you want to associate with the private endpoint resource. Then, selectReview + createbutton at the bottom of the page.
On theReview + create, review all the settings, and selectCreateto create the private endpoint.
On theReview + create, review all the settings, and selectCreateto create the private endpoint.

Confirm that you see the private endpoint connection you created shows up in the list of endpoints. Refresh the page and switch to thePrivate endpoint connectionstab. In this example, the private endpoint is auto-approved because you connected to an Azure resource in your directory and you have sufficient permissions.
Confirm that you see the private endpoint connection you created shows up in the list of endpoints. Refresh the page and switch to thePrivate endpoint connectionstab. In this example, the private endpoint is auto-approved because you connected to an Azure resource in your directory and you have sufficient permissions.

Trusted Microsoft services
When you enable theAllow trusted Microsoft services to bypass this firewallsetting, the following services within the same tenant are granted access to your Event Hubs resources.
Enable system-assigned identity for a topic or a domain
Add the identity to the Azure Event Hubs Data Sender role on the Event Hubs namespace
Then, configure the event subscription that uses an event hub as an endpoint to use the system-assigned identity.
For more information, seeEvent delivery with a managed identity
Important: The Stream Analytics job should be configured to use amanaged identityto access the event hub. For more information, seeUse managed identities to access the event hub from an Azure Stream Analytics job (Preview).
Enable system-assigned identity for your IoT hub
Add the identity to the Azure Event Hubs Data Sender role on the Event Hubs namespace.
Then, configure the IoT Hub that uses an event hub as a custom endpoint to use the identity-based authentication.
The API Management service allows you to send events to an event hub in your Event Hubs namespace.
You can trigger custom workflows by sending events to your event hub when an API is invoked by using thesend-request policy.
You can also treat an event hub as your backend in an API. For a sample policy, seeAuthenticate using a managed identity to access an event hub. You also need to do the following steps:Enable system-assigned identity on the API Management instance. For instructions, seeUse managed identities in Azure API Management.Add the identity to theAzure Event Hubs Data Senderrole on the Event Hubs namespace
Enable system-assigned identity on the API Management instance. For instructions, seeUse managed identities in Azure API Management.
Add the identity to theAzure Event Hubs Data Senderrole on the Event Hubs namespace
Configurethe Managed Identity on Azure Data Explorer
Grant theAzure Event Hubs Data Receiverrole to the identity, on the event hub.
Allows IoT Central to export data to event hubs in your Event Hubs namespace. You also need to do the following steps:
Enable system-assigned identity for your IoT Central application.
Add the identity to theAzure Event Hubs Data Senderrole on the Event Hubs namespace.
Then, configure the Event Hubsexport destination on your IoT Central applicationto use identity-based authentication.

Enable system-assigned identity for your Azure Digital Twins instance.
Add the identity to theAzure Event Hubs Data Senderrole on the Event Hubs namespace.
Then, configure an Azure Digital Twins endpoint or Azure Digital Twins data history connection that uses the system-assigned identity to authenticate. For more information about configuring endpoints and event routes to Event Hubs resources from Azure Digital Twins, seeRoute Azure Digital Twins eventsandCreate endpoints in Azure Digital Twins.
The other trusted services for Azure Event Hubs can be found below:
Azure Arc
Azure Kubernetes
Azure Machine Learning
Microsoft Purview
To allow trusted services to access your namespace, switch to thePublic Accesstab on theNetworkingpage, and selectYesforAllow trusted Microsoft services to bypass this firewall?.
Add a private endpoint using PowerShell
The following example shows how to use Azure PowerShell to create a private endpoint connection. It doesn't create a dedicated cluster for you. Follow steps inthis articleto create a dedicated Event Hubs cluster.
$rgName = "<RESOURCE GROUP NAME>"
$vnetlocation = "<VIRTUAL NETWORK LOCATION>"
$vnetName = "<VIRTUAL NETWORK NAME>"
$subnetName = "<SUBNET NAME>"
$namespaceLocation = "<NAMESPACE LOCATION>"
$namespaceName = "<NAMESPACE NAME>"
$peConnectionName = "<PRIVATE ENDPOINT CONNECTION NAME>"

# create resource group
New-AzResourceGroup -Name $rgName -Location $vnetLocation 

# create virtual network
$virtualNetwork = New-AzVirtualNetwork `
                    -ResourceGroupName $rgName `
                    -Location $vnetlocation `
                    -Name $vnetName `
                    -AddressPrefix 10.0.0.0/16

# create subnet with endpoint network policy disabled
$subnetConfig = Add-AzVirtualNetworkSubnetConfig `
                    -Name $subnetName `
                    -AddressPrefix 10.0.0.0/24 `
                    -PrivateEndpointNetworkPoliciesFlag "Disabled" `
                    -VirtualNetwork $virtualNetwork

# update virtual network
$virtualNetwork | Set-AzVirtualNetwork

# create an event hubs namespace in a dedicated cluster
$namespaceResource = New-AzResource -Location $namespaceLocation `
                                    -ResourceName $namespaceName `
                                    -ResourceGroupName $rgName `
                                    -Sku @{name = "Standard"; capacity = 1} `
                                    -Properties @{clusterArmId = "/subscriptions/<SUBSCRIPTION ID>/resourceGroups/<RESOURCE GROUP NAME>/providers/Microsoft.EventHub/clusters/<EVENT HUBS CLUSTER NAME>"} `
                                    -ResourceType "Microsoft.EventHub/namespaces" -ApiVersion "2018-01-01-preview"

# create private endpoint connection
$privateEndpointConnection = New-AzPrivateLinkServiceConnection `
                                -Name $peConnectionName `
                                -PrivateLinkServiceId $namespaceResource.ResourceId `
                                -GroupId "namespace"

# get subnet object that you'll use later
$virtualNetwork = Get-AzVirtualNetwork -ResourceGroupName  $rgName -Name $vnetName
$subnet = $virtualNetwork | Select -ExpandProperty subnets `
                                | Where-Object  {$_.Name -eq $subnetName}  
   
# create a private endpoint   
$privateEndpoint = New-AzPrivateEndpoint -ResourceGroupName $rgName  `
                                -Name $vnetName   `
                                -Location $vnetlocation `
                                -Subnet  $subnet   `
                                -PrivateLinkServiceConnection $privateEndpointConnection

(Get-AzResource -ResourceId $namespaceResource.ResourceId -ExpandProperties).Properties
$rgName = "<RESOURCE GROUP NAME>"
$vnetlocation = "<VIRTUAL NETWORK LOCATION>"
$vnetName = "<VIRTUAL NETWORK NAME>"
$subnetName = "<SUBNET NAME>"
$namespaceLocation = "<NAMESPACE LOCATION>"
$namespaceName = "<NAMESPACE NAME>"
$peConnectionName = "<PRIVATE ENDPOINT CONNECTION NAME>"

# create resource group
New-AzResourceGroup -Name $rgName -Location $vnetLocation 

# create virtual network
$virtualNetwork = New-AzVirtualNetwork `
                    -ResourceGroupName $rgName `
                    -Location $vnetlocation `
                    -Name $vnetName `
                    -AddressPrefix 10.0.0.0/16

# create subnet with endpoint network policy disabled
$subnetConfig = Add-AzVirtualNetworkSubnetConfig `
                    -Name $subnetName `
                    -AddressPrefix 10.0.0.0/24 `
                    -PrivateEndpointNetworkPoliciesFlag "Disabled" `
                    -VirtualNetwork $virtualNetwork

# update virtual network
$virtualNetwork | Set-AzVirtualNetwork

# create an event hubs namespace in a dedicated cluster
$namespaceResource = New-AzResource -Location $namespaceLocation `
                                    -ResourceName $namespaceName `
                                    -ResourceGroupName $rgName `
                                    -Sku @{name = "Standard"; capacity = 1} `
                                    -Properties @{clusterArmId = "/subscriptions/<SUBSCRIPTION ID>/resourceGroups/<RESOURCE GROUP NAME>/providers/Microsoft.EventHub/clusters/<EVENT HUBS CLUSTER NAME>"} `
                                    -ResourceType "Microsoft.EventHub/namespaces" -ApiVersion "2018-01-01-preview"

# create private endpoint connection
$privateEndpointConnection = New-AzPrivateLinkServiceConnection `
                                -Name $peConnectionName `
                                -PrivateLinkServiceId $namespaceResource.ResourceId `
                                -GroupId "namespace"

# get subnet object that you'll use later
$virtualNetwork = Get-AzVirtualNetwork -ResourceGroupName  $rgName -Name $vnetName
$subnet = $virtualNetwork | Select -ExpandProperty subnets `
                                | Where-Object  {$_.Name -eq $subnetName}  
   
# create a private endpoint   
$privateEndpoint = New-AzPrivateEndpoint -ResourceGroupName $rgName  `
                                -Name $vnetName   `
                                -Location $vnetlocation `
                                -Subnet  $subnet   `
                                -PrivateLinkServiceConnection $privateEndpointConnection

(Get-AzResource -ResourceId $namespaceResource.ResourceId -ExpandProperties).Properties
Configure the private DNS Zone
Create a private DNS zone for Event Hubs domain and create an association link with the virtual network:
$zone = New-AzPrivateDnsZone -ResourceGroupName $rgName `
                            -Name "privatelink.servicebus.windows.net" 
 
$link  = New-AzPrivateDnsVirtualNetworkLink -ResourceGroupName $rgName `
                                            -ZoneName "privatelink.servicebus.windows.net" `
                                            -Name "mylink" `
                                            -VirtualNetworkId $virtualNetwork.Id  
 
$networkInterface = Get-AzResource -ResourceId $privateEndpoint.NetworkInterfaces[0].Id -ApiVersion "2019-04-01" 
 
foreach ($ipconfig in $networkInterface.properties.ipConfigurations) { 
    foreach ($fqdn in $ipconfig.properties.privateLinkConnectionProperties.fqdns) { 
        Write-Host "$($ipconfig.properties.privateIPAddress) $($fqdn)"  
        $recordName = $fqdn.split('.',2)[0] 
        $dnsZone = $fqdn.split('.',2)[1] 
        New-AzPrivateDnsRecordSet -Name $recordName -RecordType A -ZoneName "privatelink.servicebus.windows.net"  `
                                -ResourceGroupName $rgName -Ttl 600 `
                                -PrivateDnsRecords (New-AzPrivateDnsRecordConfig -IPv4Address $ipconfig.properties.privateIPAddress)  
    } 
}
$zone = New-AzPrivateDnsZone -ResourceGroupName $rgName `
                            -Name "privatelink.servicebus.windows.net" 
 
$link  = New-AzPrivateDnsVirtualNetworkLink -ResourceGroupName $rgName `
                                            -ZoneName "privatelink.servicebus.windows.net" `
                                            -Name "mylink" `
                                            -VirtualNetworkId $virtualNetwork.Id  
 
$networkInterface = Get-AzResource -ResourceId $privateEndpoint.NetworkInterfaces[0].Id -ApiVersion "2019-04-01" 
 
foreach ($ipconfig in $networkInterface.properties.ipConfigurations) { 
    foreach ($fqdn in $ipconfig.properties.privateLinkConnectionProperties.fqdns) { 
        Write-Host "$($ipconfig.properties.privateIPAddress) $($fqdn)"  
        $recordName = $fqdn.split('.',2)[0] 
        $dnsZone = $fqdn.split('.',2)[1] 
        New-AzPrivateDnsRecordSet -Name $recordName -RecordType A -ZoneName "privatelink.servicebus.windows.net"  `
                                -ResourceGroupName $rgName -Ttl 600 `
                                -PrivateDnsRecords (New-AzPrivateDnsRecordConfig -IPv4Address $ipconfig.properties.privateIPAddress)  
    } 
}
Manage private endpoints using Azure portal
When you create a private endpoint, the connection must be approved. If the resource for which you're creating a private endpoint is in your directory, you can approve the connection request provided you have sufficient permissions. If you're connecting to an Azure resource in another directory, you must wait for the owner of that resource to approve your connection request.
There are four provisioning states:
Approve, reject, or remove a private endpoint connection
Sign in to the Azure portal.
In the search bar, type inevent hubs.
Select thenamespacethat you want to manage.
Select theNetworkingtab.
Go to the appropriate following section based on the operation you want to: approve, reject, or remove.
Approve a private endpoint connection
If there are any connections that are pending, you see a connection listed withPendingin the provisioning state.
If there are any connections that are pending, you see a connection listed withPendingin the provisioning state.
Select theprivate endpointyou wish to approve
Select theprivate endpointyou wish to approve
Select theApprovebutton.
Select theApprovebutton.

On theApprove connectionpage, add a comment (optional), and selectYes. If you selectNo, nothing happens.
On theApprove connectionpage, add a comment (optional), and selectYes. If you selectNo, nothing happens.
You should see the status of the private endpoint connection in the list changed toApproved.
You should see the status of the private endpoint connection in the list changed toApproved.
Reject a private endpoint connection
If there are any private endpoint connections you want to reject, whether it's a pending request or existing connection, select the connection and select theRejectbutton.
If there are any private endpoint connections you want to reject, whether it's a pending request or existing connection, select the connection and select theRejectbutton.

On theReject connectionpage, enter a comment (optional), and selectYes. If you selectNo, nothing happens.
On theReject connectionpage, enter a comment (optional), and selectYes. If you selectNo, nothing happens.
You should see the status of the private endpoint connection in the list changed toRejected.
You should see the status of the private endpoint connection in the list changed toRejected.
Remove a private endpoint connection
To remove a private endpoint connection, select it in the list, and selectRemoveon the toolbar.
On theDelete connectionpage, selectYesto confirm the deletion of the private endpoint. If you selectNo, nothing happens.
You should see the status changed toDisconnected. Then, the endpoint disappears from the list.
Validate that the private link connection works
You should validate that resources within the virtual network of the private endpoint are connecting to your Event Hubs namespace over a private IP address, and that they have the correct private DNS zone integration.
First, create a virtual machine by following the steps inCreate a Windows virtual machine in the Azure portal
In theNetworkingtab:
SpecifyVirtual networkandSubnet. You must select the Virtual Network on which you deployed the private endpoint.
Specify apublic IPresource.
ForNIC network security group, selectNone.
ForLoad balancing, selectNo.
Connect to the VM, open the command line, and run the following command:
nslookup <event-hubs-namespace-name>.servicebus.windows.net
nslookup <event-hubs-namespace-name>.servicebus.windows.net
You should see a result that looks like the following.
Non-authoritative answer:
Name:    <event-hubs-namespace-name>.privatelink.servicebus.windows.net
Address:  10.0.0.4 (private IP address associated with the private endpoint)
Aliases:  <event-hubs-namespace-name>.servicebus.windows.net
Non-authoritative answer:
Name:    <event-hubs-namespace-name>.privatelink.servicebus.windows.net
Address:  10.0.0.4 (private IP address associated with the private endpoint)
Aliases:  <event-hubs-namespace-name>.servicebus.windows.net
Limitations and design considerations
For pricing information, seeAzure Private Link pricing.
This feature is available in all Azure public regions.
Maximum number of private endpoints per Event Hubs namespace: 120.
The traffic is blocked at the application layer, not at the TCP layer. Therefore, you see TCP connections ornslookupoperations succeeding against the public endpoint even though the public access is disabled.
nslookup
For more, seeAzure Private Link service: Limitations
Related content
Learn more aboutAzure Private Link
Learn more aboutAzure Event Hubs
Feedback
Was this page helpful?
Additional resources