Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Azure Policy definitions denyAction effect
Article
2025-03-04
2 contributors
In this article
ThedenyActioneffect is used to block requests based on intended action to resources at scale. The only supported action today isDELETE. This effect and action name helps prevent any accidental deletion of critical resources.
denyAction
DELETE
DenyAction evaluation
When a request call with an applicable action name and targeted scope is submitted,denyActionprevents the request from succeeding. The request is returned as a403 (Forbidden). In the portal, theForbiddencan be viewed as a deployment status that was prevented by the policy assignment.
denyAction
403 (Forbidden)
Forbidden
Microsoft.Authorization/policyAssignments,Microsoft.Authorization/denyAssignments,Microsoft.Blueprint/blueprintAssignments,Microsoft.Resources/deploymentStacks,Microsoft.Resources/subscriptions, andMicrosoft.Authorization/locksare all exempt fromdenyActionenforcement to prevent lockout scenarios.
Microsoft.Authorization/policyAssignments
Microsoft.Authorization/denyAssignments
Microsoft.Blueprint/blueprintAssignments
Microsoft.Resources/deploymentStacks
Microsoft.Resources/subscriptions
Microsoft.Authorization/locks
denyAction
Subscription deletion
Policy doesn't block removal of resources that happens during a subscription deletion.
Resource group deletion
Policy evaluates resources that support location and tags againstdenyActionpolicies during a resource group deletion. Only policies that have thecascadeBehaviorsset todenyin the policy rule block a resource group deletion. Policy doesn't block removal of resources that don't support location and tags nor any policy withmode:all.
denyAction
cascadeBehaviors
deny
mode:all
Cascade deletion
Cascade deletion occurs when deleting of a parent resource is implicitly deletes all its child and extension resources. Policy doesn't block removal of child and extension resources when a delete action targets the parent resources. For example,Microsoft.Insights/diagnosticSettingsis an extension resource ofMicrosoft.Storage/storageaccounts. If adenyActionpolicy targetsMicrosoft.Insights/diagnosticSettings, a delete call to the diagnostic setting (child) fails, but a delete to the storage account (parent) implicitly deletes the diagnostic setting (extension).
Microsoft.Insights/diagnosticSettings
Microsoft.Storage/storageaccounts
denyAction
Microsoft.Insights/diagnosticSettings
This table describes if a resource is protected from deletion given the resource applicable to the assigneddenyActionpolicy and the targeted scope of theDELETEcall. In the context of this table, an indexed resource is one that supports tags and locations and a non-indexed resource is one that doesn't support tags or locations. For more information on indexed and non-indexed resources, go todefinition mode. Child resources are resources that exist only within the context of another resource. For example, a virtual machines extension resource is a child of the virtual machine, which is the parent resource.
denyAction
DELETE
cascadeBehaviors
DenyAction properties
Thedetailsproperty of thedenyActioneffect has all the subproperties that define the action and behaviors.
details
denyAction
actionNames(required)Anarraythat specifies what actions to prevent from being executed.Supported action names are:delete.
actionNames
Anarraythat specifies what actions to prevent from being executed.
Supported action names are:delete.
delete
cascadeBehaviors(optional)Anobjectthat defines which behavior is followed when a resource is implicitly deleted when a resource group is removed.Only supported in policy definitions withmodeset toindexed.Allowed values areallowordeny.Default value isdeny.
cascadeBehaviors
Anobjectthat defines which behavior is followed when a resource is implicitly deleted when a resource group is removed.
Only supported in policy definitions withmodeset toindexed.
indexed
Allowed values areallowordeny.
allow
deny
Default value isdeny.
deny
DenyAction example
Example: Deny any delete calls targeting database accounts that have a tag environment that equals prod. Since cascade behavior is set to deny, block anyDELETEcall that targets a resource group with an applicable database account.
DELETE
{
  "if": {
    "allOf": [
      {
        "field": "type",
        "equals": "Microsoft.DocumentDb/accounts"
      },
      {
        "field": "tags.environment",
        "equals": "prod"
      }
    ]
  },
  "then": {
    "effect": "denyAction",
    "details": {
      "actionNames": [
        "delete"
      ],
      "cascadeBehaviors": {
        "resourceGroup": "deny"
      }
    }
  }
}
{
  "if": {
    "allOf": [
      {
        "field": "type",
        "equals": "Microsoft.DocumentDb/accounts"
      },
      {
        "field": "tags.environment",
        "equals": "prod"
      }
    ]
  },
  "then": {
    "effect": "denyAction",
    "details": {
      "actionNames": [
        "delete"
      ],
      "cascadeBehaviors": {
        "resourceGroup": "deny"
      }
    }
  }
}
Next steps
Review examples atAzure Policy samples.
Review theAzure Policy definition structure.
Understand how toprogrammatically create policies.
Learn how toget compliance data.
Learn how toremediate non-compliant resources.
ReviewAzure management groups.
Feedback
Was this page helpful?
Additional resources