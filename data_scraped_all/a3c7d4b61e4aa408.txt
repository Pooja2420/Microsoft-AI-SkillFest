Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Monitor metrics in Azure Database for PostgreSQL flexible server
Article
2025-04-21
9 contributors
In this article
APPLIES TO:Azure Database for PostgreSQL - Flexible Server
Monitoring data about your servers helps you troubleshoot and optimize for your workload. Azure Database for PostgreSQL flexible server provides various monitoring options to provide insight into how your server is performing.
Metrics
Azure Database for PostgreSQL flexible server provides various metrics that give insight into the behavior of the resources that support the Azure Database for PostgreSQL flexible server instance. Each metric is emitted at a 1-minute interval and has up to93 days of retention. You can configure alerts on the metrics. Other options include setting up automated actions, performing advanced analytics, and archiving the history. For more information, see theAzure Metrics overview.
Note
While metrics are stored for 93 days, you can only query (in the Metrics tile) for a maximum of 30 days' worth of data on any single chart. If you see a blank chart or your chart displays only part of metric data, verify that the difference between start and end dates in the time picker doesn't exceed the 30-day interval. After you've selected a 30-day interval, you can pan the chart to view the full retention window.
Default Metrics
The following metrics are available for an Azure Database for PostgreSQL flexible server instance:
active_connections
pg_stat_activity
backup_storage_used
connections_failed
connections_succeeded
cpu_credits_consumed
cpu_credits_remaining
cpu_percent
database_size_bytes
disk_queue_depth
iops
maximum_used_transactionIDs
memory_percent
network_bytes_egress
network_bytes_ingress
read_iops
read_throughput
storage_free
storage_percent
storage_used
txlogs_storage_used
write_throughput
write_iops
Note
Metrics marked with^are emitted every one minute but are processed and displayed in 5-minute batches. This results in up to a 5-minute delay in metric visibility. When creating alerts on these metrics, please account for this latency to ensure accurate and timely alerting.
^
Enhanced metrics
You can use enhanced metrics for Azure Database for PostgreSQL flexible server to get fine-grained monitoring and alerting on databases. Each metric is emitted at a1-minuteinterval and has up to93 days of retention. You can configure alerts on the metrics. Some enhanced metrics include aDimensionparameter that you can use to split and filter metrics data by using a dimension like database name or state.
Dimension
Most of these new metrics aredisabledby default. There are a few exceptions though, which are enabled by default. Rightmost column in the following tables indicates whether each metric is enabled by default or not.
To enable those metrics which are not enabled by default, set the server parametermetrics.collector_database_activitytoON. This parameter is dynamic and doesn't require an instance restart.
metrics.collector_database_activity
ON
You can choose from the following categories of enhanced metrics:
Activity
Database
Logical replication
Replication
Saturation
Traffic
sessions_by_state
pg_stat_activity
sessions_by_wait_event_type
oldest_backend_time_sec
longest_query_time_sec
longest_transaction_time_sec
oldest_backend_xmin
xmin
xmin
oldest_backend_xmin_age
xmin
xmin
numbackends
deadlocks
blks_hit
blks_read
temp_files
temp_bytes
xact_total
xact_commit
tps
xact_rollback
tup_deleted
tup_fetched
tup_inserted
tup_returned
tup_updated
logical_replication_delay_in_bytes
physical_replication_delay_in_bytes
physical_replication_delay_in_seconds
disk_bandwidth_consumed_percentage
disk_iops_consumed_percentage
postmaster_process_cpu_usage_percent
Note
Metrics marked with^are emitted every one minute but are processed and displayed in 5-minute batches. This results in up to a 5-minute delay in metric visibility. When creating alerts on these metrics, please account for this latency to ensure accurate and timely alerting.
^
max_connections
tcp_connection_backlog
**Max Connectionsrepresents the configured value for themax_connectionsserver parameter. This metric is polled every 30 minutes.
max_connections
Enhanced metrics that use the DatabaseName dimension have a50-databaselimit.
On theBurstableSKU, the limit is 10 databases for metrics that use the DatabaseName dimension.
The DatabaseName dimension limit is applied on the database identifier (datid) column of the pg_stat_database system view, which reflects the order of creation for the database.
TheDatabaseNamein the metrics dimension iscase insensitive. That means that after queryingpg_stat_databaseview, filtering out rows in whichdatnameis eithertemplate1ortemplate0, ordering bydatid, and limiting the returned rows to the first 50 (or 10 in the case ofBurstableSKU), the metrics for database names in that result set, that are the same except for case (for example,contoso_databaseandContoso_database) will be merged and might not show accurate data.
DatabaseName
pg_stat_database
datname
template1
template0
datid
contoso_database
Contoso_database
Autovacuum metrics
Autovacuum metrics can be used to monitor and tune autovacuum performance for Azure Database for PostgreSQL flexible server. Each metric is emitted at a30-minuteinterval and has up to93 days of retention. You can create alerts for specific metrics, and you can split and filter metrics data by using theDatabaseNamedimension.
DatabaseName
Autovacuum metrics are disabled by default.
To enable these metrics, set the server parametermetrics.autovacuum_diagnosticstoON.
metrics.autovacuum_diagnostics
ON
This parameter is dynamic, so an instance restart isn't required.
analyze_count_user_tables
autoanalyze_count_user_tables
autovacuum_count_user_tables
bloat_percent
n_dead_tup_user_tables
n_live_tup_user_tables
n_mod_since_analyze_user_tables
tables_analyzed_user_tables
tables_autoanalyzed_user_tables
tables_autovacuumed_user_tables
tables_counter_user_tables
tables_vacuumed_user_tables
vacuum_count_user_tables
VACUUM FULL
Autovacuum metrics that use the DatabaseName dimension have a30-databaselimit.
On theBurstableSKU, the limit is 10 databases for metrics that use the DatabaseName dimension.
The DatabaseName dimension limit is applied on the OID column, which reflects the order of creation for the database.
PgBouncer metrics
You can use PgBouncer metrics to monitor the performance of the PgBouncer process, including details for active connections, idle connections, total pooled connections, and the number of connection pools. Each metric is emitted at a1-minuteinterval and has up to93 days of retention. Customers can configure alerts on the metrics and also access the new metrics dimensions to split and filter metrics data by database name.
To monitor PgBouncer metrics, ensure that thepgbouncerfeature is enabled via the server parameterpgbouncer.enabledand metrics parametermetrics.pgbouncer_diagnosticsis enabled.
pgbouncer.enabled
metrics.pgbouncer_diagnostics
These parameters are dynamic and don't require an instance restart.
PgBouncer metrics are disabled by default.
client_connections_active
client_connections_waiting
server_connections_active
server_connections_idle
total_pooled_connections
num_pools
PgBouncer metrics that use the DatabaseName dimension have a30-databaselimit.
On theBurstableSKU, the limit is 10 databases that have the DatabaseName dimension.
The DatabaseName dimension limit is applied to the OID column, which reflects the order of creation for the database.
Database availability metric
Is-db-alive is a database server availability metric for Azure Database for PostgreSQL flexible server that returns[1 for available]and[0 for not-available]. Each metric is emitted at a1 minutefrequency, and has up to93 days of retention. Customers can configure alerts on the metric.
[1 for available]
[0 for not-available]
is_db_alive
Aggregating this metric withMAX()will allow customers to determine whether the server has been up or down in the last minute.
MAX()
Customers have option to further aggregate these metrics with any desired frequency (5m, 10m, 30m etc.) to suit their alerting requirements and avoid any false positive.
Other possible aggregations areAVG()andMIN().
AVG()
MIN()
Filter and split on dimension metrics
In the preceding tables, some metrics have dimensions like DatabaseName or State. You can usefilteringandsplittingfor the metrics that have dimensions. These features show how various metric segments (ordimension values) affect the overall value of the metric. You can use them to identify possible outliers.
Filtering: Use filtering to choose which dimension values are included in the chart. For example, you might want to show idle connections when you chart theSessions-by-Statemetric. You set the filter for Idle in the State dimension.
Sessions-by-State
Splitting: Use splitting to control whether the chart displays separate lines for each value of a dimension or if it aggregates the values in a single line. For example, you can see one line for aSessions-by-Statemetric across all sessions. You can see separate lines for each session grouped by State value. Apply splitting on the State dimension to see separate lines.
Sessions-by-State
The following example demonstrates splitting by the State dimension and filtering on specific State values:

For more information about setting up charts for dimensional metrics, seeMetric chart examples.
Metrics visualization
There are several options to visualize Azure Monitor metrics.
Logs
In addition to the metrics, you can use Azure Database for PostgreSQL flexible server to configure and access Azure Database for PostgreSQL standard logs. For more information, seeLogging concepts.
Logs visualization
Server Logs
The Server Logs feature in Azure Database for PostgreSQL Flexible Server allows users to enable, configure, anddownload server logs, which are essential for troubleshooting and performing historical analyses of server activity. By default, the server logs feature in Azure Database for PostgreSQL flexible server is disabled. However, after you enable the feature, Azure Database for PostgreSQL flexible server starts capturing events of the selected log type and writes them to a file. You can then use the Azure portal or the Azure CLI to download the files to assist with your troubleshooting efforts.
Server logs retention
Server logs have minimum retention 1 days and maximum retention is 7 days. If this limit is exceeded, the oldest logs are deleted to make room for new ones. For details on enabling and managing server logs, seeConfigure capture of PostgreSQL server logs and major version upgrade logs.
Related content
Configure logging and access logs in Azure Database for PostgreSQL flexible server.
Azure Monitor pricing.
Audit logging in Azure Database for PostgreSQL flexible server.
Feedback
Was this page helpful?
Additional resources