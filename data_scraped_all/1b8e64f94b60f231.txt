Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Define resources with Bicep, ARM templates, and Terraform AzAPI provider
Article
2023-03-22
5 contributors
In this article
When deploying Azure resources with an Infrastructure as Code tool, you need to understand what resource types are available, and what values to use in your files. The Azure resource reference documentation provides these values. The syntax is shown for Bicep, ARM template JSON, and Terraform AzAPI provider.
Choose language
Select the deployment language you wish to use for viewing the resource reference. The options are available at the top of each article.

Bicep
For an introduction to working with Bicep files, seeQuickstart: Create Bicep files with Visual Studio Code. To learn about the sections of a Bicep file, seeUnderstand the structure and syntax of Bicep files.
To learn about Bicep files through a guided set of Learn modules, seeDeploy and manage resources in Azure by using Bicep.
Microsoft recommends that you use VS Code to create Bicep files. For more information, seeInstall Bicep tools.
ARM templates
Tip
Bicep is a new language that offers the same capabilities as ARM templates but with a syntax that's easier to use. If you're deciding between the two languages, we recommend Bicep.
To learn about the sections of an ARM template, seeUnderstand the structure and syntax of ARM templates. For an introduction to working with templates, seeTutorial: Create and deploy your first ARM template.
Microsoft recommends that you use VS Code to create ARM templates. When you add the Azure Resource Managed tools extension, you get intellisense for the template properties. For more information, seeQuickstart: Create ARM templates with Visual Studio Code.
Terraform AzAPI provider
To learn about the Terraform AzAPI provider, seeOverview of the Terraform AzAPI provider.
For an introduction to creating a configuration file for the Terraform AzAPI provider, seeQuickstart: Deploy your first Azure resource with the AzAPI Terraform provider.
Find resources
If you know the resource type, you can go directly to it with the following URL format:https://learn.microsoft.com/azure/templates/{provider-namespace}/{resource-type}. For example, the SQL database reference content is available at:https://learn.microsoft.com/azure/templates/microsoft.sql/servers/databases.
https://learn.microsoft.com/azure/templates/{provider-namespace}/{resource-type}
The resource types are located under the Reference node. Expand the resource provider that contains the type you are looking for. The following image shows the types for Storage.

Or, you can filter the resource types in navigation pane:

See changes in versions
Each resource provider contains a list of changes for each API version. You can locate the change log in the left navigation pane.

Feedback
Was this page helpful?
Additional resources