Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Use the portal to attach a data disk to a Linux VM
How-to
2025-01-07
5 contributors
In this article
Applies to:âï¸ Linux VMs âï¸ Flexible scale sets
This article shows you how to attach both new and existing disks to a Linux virtual machine through the Azure portal. You can alsoattach a data disk to a Windows VM in the Azure portal.
Prerequisites
Before you attach disks to your VM, review these tips:
The size of the virtual machine controls how many data disks you can attach. For details, seeSizes for virtual machines.
The size of the virtual machine controls how many data disks you can attach. For details, seeSizes for virtual machines.
Find the virtual machine
Follow these steps:
Go to theAzure portalto find the VM. Search for and selectVirtual machines.
Go to theAzure portalto find the VM. Search for and selectVirtual machines.
Select the VM you'd like to attach the disk to from the list.
Select the VM you'd like to attach the disk to from the list.
In theVirtual machinespage, underSettings, selectDisks.
In theVirtual machinespage, underSettings, selectDisks.
Attach a new disk
Follow these steps:
On theDiskspane, underData disks, selectCreate and attach a new disk.
On theDiskspane, underData disks, selectCreate and attach a new disk.
Enter a name for your managed disk. Review the default settings, and update theStorage type,Size (GiB),EncryptionandHost cachingas necessary.
Enter a name for your managed disk. Review the default settings, and update theStorage type,Size (GiB),EncryptionandHost cachingas necessary.

When you're done, selectSaveat the top of the page to create the managed disk and update the VM configuration.
When you're done, selectSaveat the top of the page to create the managed disk and update the VM configuration.
Attach an existing disk
Follow these steps:
On theDiskspane, underData disks, selectAttach existing disks.
On theDiskspane, underData disks, selectAttach existing disks.
Select the drop-down menu forDisk nameand select a disk from the list of available managed disks.
Select the drop-down menu forDisk nameand select a disk from the list of available managed disks.
SelectSaveto attach the existing managed disk and update the VM configuration:
SelectSaveto attach the existing managed disk and update the VM configuration:
Connect to the Linux VM to mount the new disk
To partition, format, and mount your new disk so your Linux VM can use it, SSH into your VM. For more information, seeHow to use SSH with Linux on Azure. The following example connects to a VM with the public IP address of10.123.123.25with the usernameazureuser:
ssh azureuser@10.123.123.25
ssh azureuser@10.123.123.25
Find the disk
Once connected to your VM, you need to find the disk. In this example, we're usinglsblkto list the disks.
lsblk
lsblk -o NAME,HCTL,SIZE,MOUNTPOINT | grep -i "sd"
lsblk -o NAME,HCTL,SIZE,MOUNTPOINT | grep -i "sd"
The output is similar to the following example:
sda     0:0:0:0      30G
ââsda1             29.9G /
ââsda14               4M
ââsda15             106M /boot/efi
sdb     1:0:1:0      14G
ââsdb1               14G /mnt
sdc     3:0:0:0       4G
sda     0:0:0:0      30G
ââsda1             29.9G /
ââsda14               4M
ââsda15             106M /boot/efi
sdb     1:0:1:0      14G
ââsdb1               14G /mnt
sdc     3:0:0:0       4G
In this example, the disk that was added wassdc. It's a LUN 0 and is 4GB.
sdc
For a more complex example, here's what multiple data disks look like in the portal:

In the image, you can see that there are 3 data disks: 4 GB on LUN 0, 16GB at LUN 1, and 32G at LUN 2.
Here's what that might look like usinglsblk:
lsblk
sda     0:0:0:0      30G
ââsda1             29.9G /
ââsda14               4M
ââsda15             106M /boot/efi
sdb     1:0:1:0      14G
ââsdb1               14G /mnt
sdc     3:0:0:0       4G
sdd     3:0:0:1      16G
sde     3:0:0:2      32G
sda     0:0:0:0      30G
ââsda1             29.9G /
ââsda14               4M
ââsda15             106M /boot/efi
sdb     1:0:1:0      14G
ââsdb1               14G /mnt
sdc     3:0:0:0       4G
sdd     3:0:0:1      16G
sde     3:0:0:2      32G
From the output oflsblkyou can see that the 4GB disk at LUN 0 issdc, the 16GB disk at LUN 1 issdd, and the 32G disk at LUN 2 issde.
lsblk
sdc
sdd
sde
Prepare a new empty disk
Important
If you are using an existing disk that contains data, skip tomounting the disk.
The following instructions will delete data on the disk.
If you're attaching a new disk, you need to partition the disk.
Thepartedutility can be used to partition and to format a data disk.
parted
Use the latest versionpartedthat is available for your distro.
parted
If the disk size is 2 tebibytes (TiB) or larger, you must use GPT partitioning. If disk size is under 2 TiB, then you can use either MBR or GPT partitioning.
The following example usespartedon/dev/sdc, which is where the first data disk will typically be on most VMs. Replacesdcwith the correct option for your disk. We're also formatting it using theXFSfilesystem.
parted
/dev/sdc
sdc
sudo parted /dev/sdc --script mklabel gpt mkpart xfspart xfs 0% 100%
sudo mkfs.xfs /dev/sdc1
sudo partprobe /dev/sdc1
sudo parted /dev/sdc --script mklabel gpt mkpart xfspart xfs 0% 100%
sudo mkfs.xfs /dev/sdc1
sudo partprobe /dev/sdc1
Use thepartprobeutility to make sure the kernel is aware of the new partition and filesystem. Failure to usepartprobecan cause the blkid or lslbk commands to not return the UUID for the new filesystem immediately.
partprobe
partprobe
Mount the disk
Create a directory to mount the file system usingmkdir. The following example creates a directory at/datadrive:
mkdir
/datadrive
sudo mkdir /datadrive
sudo mkdir /datadrive
Usemountto then mount the filesystem. The following example mounts the/dev/sdc1partition to the/datadrivemount point:
mount
/datadrive
sudo mount /dev/sdc1 /datadrive
sudo mount /dev/sdc1 /datadrive
To ensure that the drive is remounted automatically after a reboot, it must be added to the/etc/fstabfile. It's also highly recommended that the UUID (Universally Unique Identifier) is used in/etc/fstabto refer to the drive rather than just the device name (such as,/dev/sdc1). If the OS detects a disk error during boot, using the UUID avoids the incorrect disk being mounted to a given location. Remaining data disks would then be assigned those same device IDs. To find the UUID of the new drive, use theblkidutility:
blkid
sudo blkid
sudo blkid
The output looks similar to the following example:
/dev/sda1: LABEL="cloudimg-rootfs" UUID="11111111-1b1b-1c1c-1d1d-1e1e1e1e1e1e" TYPE="ext4" PARTUUID="1a1b1c1d-11aa-1234-1a1a1a1a1a1a"
/dev/sda15: LABEL="UEFI" UUID="BCD7-96A6" TYPE="vfat" PARTUUID="1e1g1cg1h-11aa-1234-1u1u1a1a1u1u"
/dev/sdb1: UUID="22222222-2b2b-2c2c-2d2d-2e2e2e2e2e2e" TYPE="ext4" TYPE="ext4" PARTUUID="1a2b3c4d-01"
/dev/sda14: PARTUUID="2e2g2cg2h-11aa-1234-1u1u1a1a1u1u"
/dev/sdc1: UUID="33333333-3b3b-3c3c-3d3d-3e3e3e3e3e3e" TYPE="xfs" PARTLABEL="xfspart" PARTUUID="c1c2c3c4-1234-cdef-asdf3456ghjk"
/dev/sda1: LABEL="cloudimg-rootfs" UUID="11111111-1b1b-1c1c-1d1d-1e1e1e1e1e1e" TYPE="ext4" PARTUUID="1a1b1c1d-11aa-1234-1a1a1a1a1a1a"
/dev/sda15: LABEL="UEFI" UUID="BCD7-96A6" TYPE="vfat" PARTUUID="1e1g1cg1h-11aa-1234-1u1u1a1a1u1u"
/dev/sdb1: UUID="22222222-2b2b-2c2c-2d2d-2e2e2e2e2e2e" TYPE="ext4" TYPE="ext4" PARTUUID="1a2b3c4d-01"
/dev/sda14: PARTUUID="2e2g2cg2h-11aa-1234-1u1u1a1a1u1u"
/dev/sdc1: UUID="33333333-3b3b-3c3c-3d3d-3e3e3e3e3e3e" TYPE="xfs" PARTLABEL="xfspart" PARTUUID="c1c2c3c4-1234-cdef-asdf3456ghjk"
Note
Improperly editing the/etc/fstabfile could result in an unbootable system. If unsure, refer to the distribution's documentation for information on how to properly edit this file. You should create a backup of the/etc/fstabfile is created before editing.
Next, open the/etc/fstabfile in a text editor. Add a line to the end of the file, using the UUID value for the/dev/sdc1device that was created in the previous steps, and the mountpoint of/datadrive. Using the example from this article, the new line would look like the following:
/dev/sdc1
/datadrive
UUID=33333333-3b3b-3c3c-3d3d-3e3e3e3e3e3e   /datadrive   xfs   defaults,nofail   1   2
UUID=33333333-3b3b-3c3c-3d3d-3e3e3e3e3e3e   /datadrive   xfs   defaults,nofail   1   2
When you're done editing the file, save and close the editor.
Note
Later removing a data disk without editing fstab could cause the VM to fail to boot. Most distributions provide either thenofailand/ornobootwaitfstab options. These options allow a system to boot even if the disk fails to mount at boot time. Consult your distribution's documentation for more information on these parameters.
Thenofailoption ensures that the VM starts even if the filesystem is corrupt or the disk does not exist at boot time. Without this option, you may encounter behavior as described inCannot SSH to Linux VM due to FSTAB errors
Verify the disk
You can now uselsblkagain to see the disk and the mountpoint.
lsblk
lsblk -o NAME,HCTL,SIZE,MOUNTPOINT | grep -i "sd"
lsblk -o NAME,HCTL,SIZE,MOUNTPOINT | grep -i "sd"
The output will look something like this:
sda     0:0:0:0      30G
ââsda1             29.9G /
ââsda14               4M
ââsda15             106M /boot/efi
sdb     1:0:1:0      14G
ââsdb1               14G /mnt
sdc     3:0:0:0       4G
ââsdc1                4G /datadrive
sda     0:0:0:0      30G
ââsda1             29.9G /
ââsda14               4M
ââsda15             106M /boot/efi
sdb     1:0:1:0      14G
ââsdb1               14G /mnt
sdc     3:0:0:0       4G
ââsdc1                4G /datadrive
You can see thatsdcis now mounted at/datadrive.
sdc
/datadrive
TRIM/UNMAP support for Linux in Azure
Some Linux kernels support TRIM/UNMAP operations to discard unused blocks on the disk. This feature is primarily useful to inform Azure that deleted pages are no longer valid and can be discarded. This feature can save money on disks that are billed based on the amount of consumed storage, such as unmanaged standard disks and disk snapshots.
There are two ways to enable TRIM support in your Linux VM. As usual, consult your distribution for the recommended approach:
Use thediscardmount option in/etc/fstab, for example:```config
UUID=33333333-3b3b-3c3c-3d3d-3e3e3e3e3e3e   /datadrive   xfs   defaults,discard   1   2
```
Use thediscardmount option in/etc/fstab, for example:
discard
```config
UUID=33333333-3b3b-3c3c-3d3d-3e3e3e3e3e3e   /datadrive   xfs   defaults,discard   1   2
```
```config
UUID=33333333-3b3b-3c3c-3d3d-3e3e3e3e3e3e   /datadrive   xfs   defaults,discard   1   2
```
In some cases, thediscardoption may have performance implications. Alternatively, you can run thefstrimcommand manually from the command line, or add it to your crontab to run regularly:Ubuntusudo apt-get install util-linux
sudo fstrim /datadriveRHELsudo yum install util-linux
sudo fstrim /datadriveSUSEsudo zypper install util-linux
sudo fstrim /datadrive
In some cases, thediscardoption may have performance implications. Alternatively, you can run thefstrimcommand manually from the command line, or add it to your crontab to run regularly:
discard
fstrim
Ubuntu
sudo apt-get install util-linux
sudo fstrim /datadrive
sudo apt-get install util-linux
sudo fstrim /datadrive
RHEL
sudo yum install util-linux
sudo fstrim /datadrive
sudo yum install util-linux
sudo fstrim /datadrive
SUSE
sudo zypper install util-linux
sudo fstrim /datadrive
sudo zypper install util-linux
sudo fstrim /datadrive
Related content
Troubleshoot Linux VM device name changes
Attach a data disk using the Azure CLI
Feedback
Was this page helpful?