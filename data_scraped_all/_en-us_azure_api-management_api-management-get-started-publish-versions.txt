Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Tutorial: Publish multiple versions of your API
Article
2025-03-26
14 contributors
In this article
APPLIES TO: All API Management tiers
There are times when it's impractical to have all callers to your API use the same version. When callers want to upgrade to a later version, they want an approach that's easy to understand. As shown in this tutorial, it's possible to provide multipleversionsin Azure API Management.
For background, seeVersionsandRevisions.
Tip
API teams can use this feature inworkspaces. Workspaces provide isolated administrative access to APIs and their own API runtime environments.
In this tutorial, you learn how to:
Add a new version to an existing API
Choose a version scheme
Add the version to a product
View the version in the developer portal

Prerequisites
LearnAzure API Management terminology.
Complete the quickstartCreate an Azure API Management instance.
Complete the tutorialImport and publish your first API.
Add a new version
In theAzure portal, navigate to your API Management instance.
In the left menu, in theAPIssection, selectAPIs.
LocateSwagger Petstore - OpenAPI 3.0in the API list. Select the ellipsis (...) next toSwagger Petstore - OpenAPI 3.0and then selectAdd version. You'll add values to the resulting window in the next section.

Tip
You can also enable versions when you create a new API. On theAdd APIscreen, selectVersion this API?.
Choose a versioning scheme
In API Management, you choose how callers specify the API version by selecting aversioning scheme:Path,Header, orQuery string. In the following example,Pathis used as the versioning scheme.
In theCreate a new API as a versionwindow, enter the values from the following table. Then selectCreateto create your version.

After you create the version, it appears underSwagger Petstore - OpenAPI 3.0in the API list. You now see two APIs:Originalandv1:

Note
If you add a version to a non-versioned API, an original version is also automatically created. This version responds on the default URL. The original version ensures that calls from existing callers still work after the version is added. If you create a new API with versions enabled at the start, an original isn't created.
Edit a version
After you add the version, you can edit and configure it as an API that's separate from the original. Changes to one version don't affect another (for example, if you add or remove API operations, or edit the OpenAPI specification). For more information, seeEdit an API.
Add the version to a product
For callers to see the new version, it must be added to aproduct. If you didn't already add the version to a product, you can do so at any time.
To add the version to a product:
In the Azure portal, navigate to your API Management instance.
UnderAPIsin the left pane, selectProducts.
Select the product, and then selectAPIsin the left pane.
Select+ Add.
Select the API.
ClickSelect.

Use version sets
When you create multiple versions, the Azure portal creates aversion set, which represents a set of versions for a single logical API. If you select the name of an API that has multiple versions, the portal displays its version set. You can customize the name and description of a version set.
You can interact directly with version sets by using the Azure CLI:
Use the Bash environment inAzure Cloud Shell. For more information, seeGet started with Azure Cloud Shell.
Use the Bash environment inAzure Cloud Shell. For more information, seeGet started with Azure Cloud Shell.

If you prefer to run CLI reference commands locally,installthe Azure CLI. If you're running on Windows or macOS, consider running Azure CLI in a Docker container. For more information, seeHow to run the Azure CLI in a Docker container.If you're using a local installation, sign in to the Azure CLI by using theaz logincommand. To finish the authentication process, follow the steps displayed in your terminal. For other sign-in options, seeAuthenticate to Azure using Azure CLI.When you're prompted, install the Azure CLI extension on first use. For more information about extensions, seeUse and manage extensions with the Azure CLI.Runaz versionto find the version and dependent libraries that are installed. To upgrade to the latest version, runaz upgrade.
If you prefer to run CLI reference commands locally,installthe Azure CLI. If you're running on Windows or macOS, consider running Azure CLI in a Docker container. For more information, seeHow to run the Azure CLI in a Docker container.
If you're using a local installation, sign in to the Azure CLI by using theaz logincommand. To finish the authentication process, follow the steps displayed in your terminal. For other sign-in options, seeAuthenticate to Azure using Azure CLI.
If you're using a local installation, sign in to the Azure CLI by using theaz logincommand. To finish the authentication process, follow the steps displayed in your terminal. For other sign-in options, seeAuthenticate to Azure using Azure CLI.
When you're prompted, install the Azure CLI extension on first use. For more information about extensions, seeUse and manage extensions with the Azure CLI.
When you're prompted, install the Azure CLI extension on first use. For more information about extensions, seeUse and manage extensions with the Azure CLI.
Runaz versionto find the version and dependent libraries that are installed. To upgrade to the latest version, runaz upgrade.
Runaz versionto find the version and dependent libraries that are installed. To upgrade to the latest version, runaz upgrade.
To see all your version sets, run theaz apim api versionset listcommand:
az apim api versionset list --resource-group <resource-group-name> \
    --service-name <API-Management-service-name> --output table
az apim api versionset list --resource-group <resource-group-name> \
    --service-name <API-Management-service-name> --output table
When the Azure portal creates a version set for you, it assigns an alphanumeric name, which appears in theNamecolumn of the list. Use this name in other Azure CLI commands.
To see details about a version set, run theaz apim api versionset showcommand:
az apim api versionset show --resource-group <resource-group-name> \
    --service-name <API-Management-service-name> --version-set-id <ID from the Name column>
az apim api versionset show --resource-group <resource-group-name> \
    --service-name <API-Management-service-name> --version-set-id <ID from the Name column>
For more information about version sets, seeVersions in Azure API Management.
View the version in the developer portal
If you use thedeveloper portal, you can see API versions there.
SelectDeveloper portalat the top of the window.
SelectAPIs, and then selectSwagger Petstore.
You should see a dropdown that lists multiple versions next to the API name.
Selectv1.
Notice theRequest URLof the first operation in the list. It shows that the API URL path includesv1.
Next step
Go to the next tutorial:
Customize the style of the Developer portal pages
Feedback
Was this page helpful?
Additional resources