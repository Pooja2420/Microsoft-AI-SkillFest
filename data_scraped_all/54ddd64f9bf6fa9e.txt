Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Monitor Azure App Service
Article
2024-07-10
5 contributors
In this article
This article describes:
The types of monitoring data you can collect for this service.
Ways to analyze that data.
Note
If you're already familiar with this service and/or Azure Monitor and just want to know how to analyze monitoring data, see theAnalyzesection near the end of this article.
When you have critical applications and business processes that rely on Azure resources, you need to monitor and get alerts for your system. The Azure Monitor service collects and aggregates metrics and logs from every component of your system. Azure Monitor provides you with a view of availability, performance, and resilience, and notifies you of issues. You can use the Azure portal, PowerShell, Azure CLI, REST API, or client libraries to set up and view monitoring data.
For more information on Azure Monitor, see theAzure Monitor overview.
For more information on how to monitor Azure resources in general, seeMonitor Azure resources with Azure Monitor.
App Service monitoring
Azure App Service provides several monitoring options for monitoring resources for availability, performance, and operation. Options include Diagnostic Settings, Application Insights, log stream, metrics, quotas and alerts, and activity logs.
On the Azure portal page for your web app, you can selectDiagnose and solve problemsfrom the left navigation to access complete App Service diagnostics for your app. For more information about the App Service diagnostics tool, seeAzure App Service diagnostics overview.
App Service provides built-in diagnostics logging to assist with debugging apps. For more information about the built-in logs, seeStream diagnostics logs.
You can also use Azure Health check to monitor App Service instances. For more information, seeMonitor App Service instances using Health check.
If you're using ASP.NET Core, ASP.NET, Java, Node.js, or Python, we recommendenabling observability with Application Insights. To learn more about observability experiences offered by Application Insights, seeApplication Insights overview.
Monitoring scenarios
The following table lists monitoring methods to use for different scenarios.
Insights
Some services in Azure have a built-in monitoring dashboard in the Azure portal that provides a starting point for monitoring your service. These dashboards are calledinsights, and you can find them in theInsights Hubof Azure Monitor in the Azure portal.
Application Insights
Application Insights uses the powerful data analysis platform in Azure Monitor to provide you with deep insights into your application's operations. Application Insights monitors the availability, performance, and usage of your web applications, so you can identify and diagnose errors without waiting for a user to report them.
Application Insights includes connection points to various development tools and integrates with Visual Studio to support your DevOps processes. For more information, seeApplication monitoring for App Service.
Resource types
Azure uses the concept of resource types and IDs to identify everything in a subscription. Resource types are also part of the resource IDs for every resource running in Azure. For example, one resource type for a virtual machine isMicrosoft.Compute/virtualMachines. For a list of services and their associated resource types, seeResource providers.
Microsoft.Compute/virtualMachines
Azure Monitor similarly organizes core monitoring data into metrics and logs based on resource types, also callednamespaces. Different metrics and logs are available for different resource types. Your service might be associated with more than one resource type.
For more information about the resource types for App Service, seeApp Service monitoring data reference.
Data storage
For Azure Monitor:
Metrics data is stored in the Azure Monitor metrics database.
Log data is stored in the Azure Monitor logs store. Log Analytics is a tool in the Azure portal that can query this store.
The Azure activity log is a separate store with its own interface in the Azure portal.
You can optionally route metric and activity log data to the Azure Monitor logs store. You can then use Log Analytics to query the data and correlate it with other log data.
Many services can use diagnostic settings to send metric and log data to other storage locations outside Azure Monitor. Examples include Azure Storage,hosted partner systems, andnon-Azure partner systems, by using Event Hubs.
For detailed information on how Azure Monitor stores data, seeAzure Monitor data platform.


Azure Monitor platform metrics
Azure Monitor provides platform metrics for most services. These metrics are:
Individually defined for each namespace.
Stored in the Azure Monitor time-series metrics database.
Lightweight and capable of supporting near real-time alerting.
Used to track the performance of a resource over time.
Collection:Azure Monitor collects platform metrics automatically. No configuration is required.
Routing:You can also route some platform metrics to Azure Monitor Logs / Log Analytics so you can query them with other log data. Check theDS exportsetting for each metric to see if you can use a diagnostic setting to route the metric to Azure Monitor Logs / Log Analytics.
For more information, see theMetrics diagnostic setting.
To configure diagnostic settings for a service, seeCreate diagnostic settings in Azure Monitor.
For a list of all metrics it's possible to gather for all resources in Azure Monitor, seeSupported metrics in Azure Monitor.
For a list of available metrics for App Service, seeApp Service monitoring data reference.
For help understanding metrics in App Service, seeUnderstand metrics. Metrics can be viewed by aggregates on data (ie. average, max, min, etc.), instances, time range, and other filters. Metrics can monitor performance, memory, CPU, and other attributes.

Azure Monitor resource logs
Resource logs provide insight into operations that were done by an Azure resource. Logs are generated automatically, but you must route them to Azure Monitor logs to save or query them. Logs are organized in categories. A given namespace might have multiple resource log categories.
Collection:Resource logs aren't collected and stored until you create adiagnostic settingand route the logs to one or more locations. When you create a diagnostic setting, you specify which categories of logs to collect. There are multiple ways to create and maintain diagnostic settings, including the Azure portal, programmatically, and though Azure Policy.
Routing:The suggested default is to route resource logs to Azure Monitor Logs so you can query them with other log data. Other locations such as Azure Storage, Azure Event Hubs, and certain Microsoft monitoring partners are also available. For more information, seeAzure resource logsandResource log destinations.
For detailed information about collecting, storing, and routing resource logs, seeDiagnostic settings in Azure Monitor.
For a list of all available resource log categories in Azure Monitor, seeSupported resource logs in Azure Monitor.
All resource logs in Azure Monitor have the same header fields, followed by service-specific fields. The common schema is outlined inAzure Monitor resource log schema.
For the available resource log categories, their associated Log Analytics tables, and the logs schemas for App Service, seeApp Service monitoring data reference.
Tip
Logs are grouped into Category groups. Category groups are a collection of different logs to help you achieve different monitoring goals.Theauditcategory group allows you to select the resource logs that are necessary for auditing your resource. For more information, seeDiagnostic settings in Azure Monitor Resource logs.

Azure activity log
The activity log contains subscription-level events that track operations for each Azure resource as seen from outside that resource; for example, creating a new resource or starting a virtual machine.
Collection:Activity log events are automatically generated and collected in a separate store for viewing in the Azure portal.
Routing:You can send activity log data to Azure Monitor Logs so you can analyze it alongside other log data. Other locations such as Azure Storage, Azure Event Hubs, and certain Microsoft monitoring partners are also available. For more information on how to route the activity log, seeOverview of the Azure activity log.
Azure activity logs for App Service
Azure activity logs for App Service include details such as:
What operations were taken on the resources (ex: App Service Plans)
Who started the operation
When the operation occurred
Status of the operation
Property values to help you research the operation
Azure activity logs can be queried using the Azure portal, PowerShell, REST API, or CLI.
Ship activity logs to Event Grid
While activity logs are user-based, there's a newAzure Event Gridintegration with App Service (preview) that logs both user actions and automated events. With Event Grid, you can configure a handler to react to the said events. For example, use Event Grid to instantly trigger a serverless function to run image analysis each time a new photo is added to a blob storage container.
Alternatively, you can use Event Grid with Logic Apps to process data anywhere, without writing code. Event Grid connects data sources and event handlers.
To view the properties and schema for App Service events, seeAzure App Service as an Event Grid source.
Log stream (via App Service Logs)
Azure provides built-in diagnostics to assist during testing and development to debug an App Service app.Log streamcan be used to get quick access to output and errors written by your application, and logs from the web server. These are standard output/error logs in addition to web server logs.
Analyze monitoring data
There are many tools for analyzing monitoring data.
Azure Monitor tools
Azure Monitor supports the following basic tools:
Metrics explorer, a tool in the Azure portal that allows you to view and analyze metrics for Azure resources. For more information, seeAnalyze metrics with Azure Monitor metrics explorer.
Metrics explorer, a tool in the Azure portal that allows you to view and analyze metrics for Azure resources. For more information, seeAnalyze metrics with Azure Monitor metrics explorer.
Log Analytics, a tool in the Azure portal that allows you to query and analyze log data by using theKusto query language (KQL). For more information, seeGet started with log queries in Azure Monitor.
Log Analytics, a tool in the Azure portal that allows you to query and analyze log data by using theKusto query language (KQL). For more information, seeGet started with log queries in Azure Monitor.
Theactivity log, which has a user interface in the Azure portal for viewing and basic searches. To do more in-depth analysis, you have to route the data to Azure Monitor logs and run more complex queries in Log Analytics.
Theactivity log, which has a user interface in the Azure portal for viewing and basic searches. To do more in-depth analysis, you have to route the data to Azure Monitor logs and run more complex queries in Log Analytics.
Tools that allow more complex visualization include:
Dashboardsthat let you combine different kinds of data into a single pane in the Azure portal.
Workbooks, customizable reports that you can create in the Azure portal. Workbooks can include text, metrics, and log queries.
Grafana, an open platform tool that excels in operational dashboards. You can use Grafana to create dashboards that include data from multiple sources other than Azure Monitor.
Power BI, a business analytics service that provides interactive visualizations across various data sources. You can configure Power BI to automatically import log data from Azure Monitor to take advantage of these visualizations.

Azure Monitor export tools
You can get data out of Azure Monitor into other tools by using the following methods:
Metrics:Use theREST API for metricsto extract metric data from the Azure Monitor metrics database. The API supports filter expressions to refine the data retrieved. For more information, seeAzure Monitor REST API reference.
Metrics:Use theREST API for metricsto extract metric data from the Azure Monitor metrics database. The API supports filter expressions to refine the data retrieved. For more information, seeAzure Monitor REST API reference.
Logs:Use the REST API or theassociated client libraries.
Logs:Use the REST API or theassociated client libraries.
Another option is theworkspace data export.
Another option is theworkspace data export.
To get started with the REST API for Azure Monitor, seeAzure monitoring REST API walkthrough.

Kusto queries
You can analyze monitoring data in the Azure Monitor Logs / Log Analytics store by using the Kusto query language (KQL).
Important
When you selectLogsfrom the service's menu in the portal, Log Analytics opens with the query scope set to the current service. This scope means that log queries will only include data from that type of resource. If you want to run a query that includes data from other Azure services, selectLogsfrom theAzure Monitormenu. SeeLog query scope and time range in Azure Monitor Log Analyticsfor details.
For a list of common queries for any service, see theLog Analytics queries interface.
The following sample query can help you monitor app logs usingAppServiceAppLogs:
AppServiceAppLogs
AppServiceAppLogs 
| project CustomLevel, _ResourceId
| summarize count() by CustomLevel, _ResourceId
AppServiceAppLogs 
| project CustomLevel, _ResourceId
| summarize count() by CustomLevel, _ResourceId
The following sample query can help you monitor HTTP logs usingAppServiceHTTPLogswhere theHTTP response codeis500or higher:
AppServiceHTTPLogs
HTTP response code
500
AppServiceHTTPLogs 
//| where ResourceId = "MyResourceId" // Uncomment to get results for a specific resource Id when querying over a group of Apps
| where ScStatus >= 500
| reduce by strcat(CsMethod, ':\\', CsUriStem)
AppServiceHTTPLogs 
//| where ResourceId = "MyResourceId" // Uncomment to get results for a specific resource Id when querying over a group of Apps
| where ScStatus >= 500
| reduce by strcat(CsMethod, ':\\', CsUriStem)
The following sample query can help you monitor HTTP 500 errors by joiningAppServiceConsoleLogsandAppserviceHTTPLogs:
AppServiceConsoleLogs
AppserviceHTTPLogs
let myHttp = AppServiceHTTPLogs | where  ScStatus == 500 | project TimeGen=substring(TimeGenerated, 0, 19), CsUriStem, ScStatus;  

let myConsole = AppServiceConsoleLogs | project TimeGen=substring(TimeGenerated, 0, 19), ResultDescription;

myHttp | join myConsole on TimeGen | project TimeGen, CsUriStem, ScStatus, ResultDescription;
let myHttp = AppServiceHTTPLogs | where  ScStatus == 500 | project TimeGen=substring(TimeGenerated, 0, 19), CsUriStem, ScStatus;  

let myConsole = AppServiceConsoleLogs | project TimeGen=substring(TimeGenerated, 0, 19), ResultDescription;

myHttp | join myConsole on TimeGen | project TimeGen, CsUriStem, ScStatus, ResultDescription;
SeeAzure Monitor queries for App Servicefor more sample queries.
Alerts
Azure Monitor alerts proactively notify you when specific conditions are found in your monitoring data. Alerts allow you to identify and address issues in your system before your customers notice them. For more information, seeAzure Monitor alerts.
There are many sources of common alerts for Azure resources. For examples of common alerts for Azure resources, seeSample log alert queries. TheAzure Monitor Baseline Alerts (AMBA)site provides a semi-automated method of implementing important platform metric alerts, dashboards, and guidelines. The site applies to a continually expanding subset of Azure services, including all services that are part of the Azure Landing Zone (ALZ).
The common alert schema standardizes the consumption of Azure Monitor alert notifications. For more information, seeCommon alert schema.
Types of alerts
You can alert on any metric or log data source in the Azure Monitor data platform. There are many different types of alerts depending on the services you're monitoring and the monitoring data you're collecting. Different types of alerts have various benefits and drawbacks. For more information, seeChoose the right monitoring alert type.
The following list describes the types of Azure Monitor alerts you can create:
Metric alertsevaluate resource metrics at regular intervals. Metrics can be platform metrics, custom metrics, logs from Azure Monitor converted to metrics, or Application Insights metrics. Metric alerts can also apply multiple conditions and dynamic thresholds.
Log alertsallow users to use a Log Analytics query to evaluate resource logs at a predefined frequency.
Activity log alertstrigger when a new activity log event occurs that matches defined conditions. Resource Health alerts and Service Health alerts are activity log alerts that report on your service and resource health.
Some Azure services also supportsmart detection alerts,Prometheus alerts, orrecommended alert rules.
For some services, you can monitor at scale by applying the same metric alert rule to multiple resources of the same type that exist in the same Azure region. Individual notifications are sent for each monitored resource. For supported Azure services and clouds, seeMonitor multiple resources with one alert rule.
Note
If you're creating or running an application that runs on your service,Azure Monitor application insightsmight offer more types of alerts.
Quotas and alerts
Apps that are hosted in App Service are subject to certain limits on the resources they can use.The limitsare defined by the App Service plan that's associated with the app. Metrics for an app or an App Service plan can be hooked up to alerts.
App Service alert rules
The following table lists common and recommended alert rules for App Service.
Advisor recommendations
For some services, if critical conditions or imminent changes occur during resource operations, an alert displays on the serviceOverviewpage in the portal. You can find more information and recommended fixes for the alert inAdvisor recommendationsunderMonitoringin the left menu. During normal operations, no advisor recommendations display.
For more information on Azure Advisor, seeAzure Advisor overview.
Related content
SeeApp Service monitoring data referencefor a reference of the metrics, logs, and other important values created for App Service.
SeeMonitoring Azure resources with Azure Monitorfor general details on monitoring Azure resources.
Feedback
Was this page helpful?
Additional resources