Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Azure Arc-enabled Kubernetes system requirements
Article
2024-10-08
3 contributors
In this article
This article describes the basic requirements forconnecting a Kubernetes cluster to Azure Arc, along with system requirement information related to various Arc-enabled Kubernetes scenarios.
Cluster requirements
Azure Arc-enabled Kubernetes works with any Cloud Native Computing Foundation (CNCF) certified Kubernetes clusters. This includes clusters running on other public cloud providers (such as GCP or AWS) and clusters running on your on-premises data center (such as VMware vSphere or Azure Local).
You must also have akubeconfig fileand context pointing to your cluster.
The cluster must have at least one node with operating system and architecture typelinux/amd64and/orlinux/arm64.
linux/amd64
linux/arm64
Important
Many Arc-enabled Kubernetes features and scenarios are supported on ARM64 nodes, such ascluster connectandviewing Kubernetes resources in the Azure portal. However, if using Azure CLI to enable these scenarios,Azure CLI must be installedand run from an AMD64 machine. Azure RBAC on Arc-enabled Kubernetes is currently not supported on ARM64 nodes. For access to ARM64 nodes, useKubernetes RBAC.
Currently, Azure Arc-enabled Kubernetescluster extensionsaren't supported on ARM64-based clusters, except forFlux (GitOps). Toinstall and use other cluster extensions, the cluster must have at least one node of operating system and architecture typelinux/amd64.
linux/amd64
Compute and memory requirements
TheArc agents deployed on the clusterrequire:
At least 850 MB of free memory
Capacity to use approximately 7% of a single CPU
For a multi-node Kubernetes cluster environment, pods can get scheduled on different nodes.
Management tool requirements
To connect a cluster to Azure Arc, you'll need to use either Azure CLI or Azure PowerShell.
For Azure CLI:
Install or upgrade Azure CLIto the latest version.
Install or upgrade Azure CLIto the latest version.
Install the latest version ofconnectedk8sAzure CLI extension:az extension add --name connectedk8s
Install the latest version ofconnectedk8sAzure CLI extension:
az extension add --name connectedk8s
az extension add --name connectedk8s
For Azure PowerShell:
InstallAzure PowerShell version 6.6.0 or later.
InstallAzure PowerShell version 6.6.0 or later.
Install theAz.ConnectedKubernetesPowerShell module:Install-Module -Name Az.ConnectedKubernetes
Install theAz.ConnectedKubernetesPowerShell module:
Install-Module -Name Az.ConnectedKubernetes
Install-Module -Name Az.ConnectedKubernetes
Note
When you deploy the Azure Arc agents to a cluster,  Helm v. 3.6.3 will be installed in the.azurefolder of the deployment machine. ThisHelm 3installation is only used for Azure Arc, and it doesn't remove or change any previously installed versions of Helm on the machine.
.azure

Microsoft Entra identity requirements
To connect your cluster to Azure Arc, you must have a Microsoft Entra identity (user or service principal) which can be used to log in toAzure CLIorAzure PowerShelland connect your cluster to Azure Arc.
This identity must haveReadandWritepermissions on the Azure Arc-enabled Kubernetes resource type (Microsoft.Kubernetes/connectedClusters). If connecting the cluster to an existing resource group (rather than a new one created by this identity), the identity must haveReadpermission for that resource group.
Microsoft.Kubernetes/connectedClusters
TheKubernetes Cluster - Azure Arc Onboarding built-in rolecan be used for this identity. This role is useful for at-scale onboarding, as it has only the granular permissions required to connect clusters to Azure Arc, and doesn't have permission to update, delete, or modify any other clusters or other Azure resources.
Azure resource provider requirements
To use Azure Arc-enabled Kubernetes, the followingAzure resource providersmust be registered in your subscription:
Microsoft.Kubernetes
Microsoft.KubernetesConfiguration
Microsoft.ExtendedLocation
You can register the resource providers using the following commands:
Azure PowerShell:
Connect-AzAccount
Set-AzContext -SubscriptionId [subscription you want to onboard]
Register-AzResourceProvider -ProviderNamespace Microsoft.Kubernetes
Register-AzResourceProvider -ProviderNamespace Microsoft.KubernetesConfiguration
Register-AzResourceProvider -ProviderNamespace Microsoft.ExtendedLocation
Connect-AzAccount
Set-AzContext -SubscriptionId [subscription you want to onboard]
Register-AzResourceProvider -ProviderNamespace Microsoft.Kubernetes
Register-AzResourceProvider -ProviderNamespace Microsoft.KubernetesConfiguration
Register-AzResourceProvider -ProviderNamespace Microsoft.ExtendedLocation
Azure CLI:
az account set --subscription "{Your Subscription Name}"
az provider register --namespace Microsoft.Kubernetes
az provider register --namespace Microsoft.KubernetesConfiguration
az provider register --namespace Microsoft.ExtendedLocation
az account set --subscription "{Your Subscription Name}"
az provider register --namespace Microsoft.Kubernetes
az provider register --namespace Microsoft.KubernetesConfiguration
az provider register --namespace Microsoft.ExtendedLocation
You can also register the resource providers in theAzure portal.
Network requirements
Be sure that you have connectivity to therequired endpoints for Azure Arc-enabled Kubernetes.
Next steps
Review thenetwork requirements for using Arc-enabled Kubernetes.
Use ourquickstartto connect your cluster.
Feedback
Was this page helpful?
Additional resources