Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Validate content
Article
2024-08-30
4 contributors
In this article
APPLIES TO: All API Management tiers
Thevalidate-contentpolicy validates the size or content of a request or response body against one or moresupported schemas.
validate-content
The following table shows the schema formats and request or response content types that the policy supports. Content type values are case insensitive.
application/json
application/hal+json
application/xml
application/soap+xml
text/xml
Note
The maximum size of the API schema that can be used by this validation policy is 4 MB. If the schema exceeds this limit, validation policies will return errors on runtime. To increase it, please contactsupport.
What content is validated
The policy validates the following content in the request or response against the schema:
Presence of all required properties.
Presence or absence of additional properties, if the schema has theadditionalPropertiesfield set. May be overridden with theallow-additional-propertiesattribute.
additionalProperties
allow-additional-properties
Types of all properties. For example, if a schema specifies a property as an integer, the request (or response) must include an integer and not another type, such as a string.
The format of the properties, if specified in the schema - for example, regex (if thepatternkeyword is specified),minimumfor integers, and so on.
pattern
minimum
Tip
For examples of regex pattern constraints that can be used in schemas, seeOWASP Validation Regex Repository.
Note
Set the policy's elements and child elements in the order provided in the policy statement. To help you configure this policy, the portal provides a guided, form-based editor. Learn more abouthow to set or edit API Management policies.
Policy statement
<validate-content unspecified-content-type-action="ignore | prevent | detect" max-size="size in bytes" size-exceeded-action="ignore | prevent | detect" errors-variable-name="variable name">
    <content-type-map any-content-type-value="content type string" missing-content-type-value="content type string">
        <type from | when="content type string" to="content type string" />
    </content-type-map>
    <content type="content type string" validate-as="json | xml | soap" schema-id="schema id" schema-ref="#/local/reference/path" action="ignore | prevent | detect" allow-additional-properties="true | false" case-insensitive-property-names="true | false"/>
</validate-content>
<validate-content unspecified-content-type-action="ignore | prevent | detect" max-size="size in bytes" size-exceeded-action="ignore | prevent | detect" errors-variable-name="variable name">
    <content-type-map any-content-type-value="content type string" missing-content-type-value="content type string">
        <type from | when="content type string" to="content type string" />
    </content-type-map>
    <content type="content type string" validate-as="json | xml | soap" schema-id="schema id" schema-ref="#/local/reference/path" action="ignore | prevent | detect" allow-additional-properties="true | false" case-insensitive-property-names="true | false"/>
</validate-content>
Attributes
Content-Length
max-size
context.Variables
Elements
content-type-map attributes
content-type-map-elements
from
when
any-content-type-value
missing-content-type-value
content attributes
content-type-mapping
validate-as
type
application/soap+xml
text/xml
type
schema-id
#/components/schemas/address
schema-ref
additionalProperties
true
additionalProperties
false
additionalProperties
additionalProperties
true
false
Actions
The content validation policies include one or more attributes that specify an action, which API Management takes when validating an entity in an API request or response against the API schema.
An action may be specified for elements that are represented in the API schema and, depending on the policy, for elements that aren't represented in the API schema.
An action may be specified for elements that are represented in the API schema and, depending on the policy, for elements that aren't represented in the API schema.
An action specified in a policy's child element overrides an action specified for its parent.
An action specified in a policy's child element overrides an action specified for its parent.
Available actions:
Usage
Policy sections:inbound, outbound, on-error
Policy scopes:global, workspace, product, API, operation
Gateways:classic, v2, consumption, self-hosted, workspace
Logs
Details about the validation errors during policy execution are logged to the variable incontext.Variablesspecified in theerrors-variable-nameattribute in the policy's root element. When configured in apreventaction, a validation error blocks further request or response processing and is also propagated to thecontext.LastErrorproperty.
context.Variables
errors-variable-name
prevent
context.LastError
To investigate errors, use atracepolicy to log the errors from context variables toApplication Insights.
Performance implications
Adding a validation policy may affect API throughput. The following general principles apply:
The larger the API schema size, the lower the throughput will be.
The larger the payload in a request or response, the lower the throughput will be.
The size of the API schema has a larger impact on performance than the size of the payload.
Validation against an API schema that is several megabytes in size may cause request or response timeouts under some conditions. The effect is more pronounced in theConsumptionandDevelopertiers of the service.
We recommend performing load tests with your expected production workloads to assess the impact of validation policies on API throughput.
Schemas for content validation
By default, validation of request or response content uses JSON or XML schemas from the API definition. These schemas can be specified manually or generated automatically when importing an API from an OpenAPI or WSDL specification into API Management.
Using thevalidate-contentpolicy, you may optionally validate against one or more JSON or XML schemas that youâve added to your API Management instance and that aren't part of the API definition. A schema that you add to API Management can be reused across many APIs.
validate-content
To add a schema to your API Management instance using the Azure portal:
In theportal, navigate to your API Management instance.
In theportal, navigate to your API Management instance.
In theAPIssection of the left-hand menu, selectSchemas>+ Add.
In theAPIssection of the left-hand menu, selectSchemas>+ Add.
In theCreate schemawindow, do the following:Enter aName(ID) for the schema.InSchema type, selectJSONorXML.Enter aDescription.InCreate method, do one of the following:SelectCreate newand enter or paste the schema.SelectImport from fileorImport from URLand enter a schema location.NoteTo import a schema from URL, the schema needs to be accessible over the internet from the browser.SelectSave.
In theCreate schemawindow, do the following:
Enter aName(ID) for the schema.
InSchema type, selectJSONorXML.
Enter aDescription.
InCreate method, do one of the following:SelectCreate newand enter or paste the schema.SelectImport from fileorImport from URLand enter a schema location.NoteTo import a schema from URL, the schema needs to be accessible over the internet from the browser.
SelectCreate newand enter or paste the schema.
SelectImport from fileorImport from URLand enter a schema location.NoteTo import a schema from URL, the schema needs to be accessible over the internet from the browser.
Note
To import a schema from URL, the schema needs to be accessible over the internet from the browser.
SelectSave.

API Management adds the schema resource at the relative URI/schemas/<schemaId>, and the schema appears in the list on theSchemaspage. Select a schema to view its properties or to edit in a schema editor.
/schemas/<schemaId>
Note
A schema may cross-reference another schema that is added to the API Management instance. For example, include an XML schema added to API Management by using an element similar to:<xs:include schemaLocation="/schemas/myschema" />
<xs:include schemaLocation="/schemas/myschema" />
Tip
Open-source tools to resolve WSDL and XSD schema references and to batch-import generated schemas to API Management are available onGitHub.
Examples
JSON schema validation
In the following example, API Management interprets requests with an empty content type header or requests with a content type headerapplication/hal+jsonas requests with the content typeapplication/json. Then, API Management performs the validation in the detection mode against a schema defined for theapplication/jsoncontent type in the API definition. Messages with payloads larger than 100 KB are blocked. Requests containing additional properties are blocked, even if the schema'sadditionalPropertiesfield is configured to allow additional properties.
application/hal+json
application/json
application/json
additionalProperties
<validate-content unspecified-content-type-action="prevent" max-size="102400" size-exceeded-action="prevent" errors-variable-name="requestBodyValidation">
    <content-type-map missing-content-type-value="application/json">
        <type from="application/hal+json" to="application/json" />
    </content-type-map>
    <content type="application/json" validate-as="json" action="detect" allow-additional-properties="false" />
</validate-content>
<validate-content unspecified-content-type-action="prevent" max-size="102400" size-exceeded-action="prevent" errors-variable-name="requestBodyValidation">
    <content-type-map missing-content-type-value="application/json">
        <type from="application/hal+json" to="application/json" />
    </content-type-map>
    <content type="application/json" validate-as="json" action="detect" allow-additional-properties="false" />
</validate-content>
SOAP schema validation
In the following example, API Management interprets any request as a request with the content typeapplication/soap+xml(the content type that's used by SOAP 1.2 APIs), regardless of the incoming content type. The request could arrive with an empty content type header, content type header oftext/xml(used by SOAP 1.1 APIs), or another content type header. Then, API Management extracts the XML payload from the SOAP envelope and performs the validation in prevention mode against the schema named "myschema". Messages with payloads larger than 100 KB are blocked.
application/soap+xml
text/xml
<validate-content unspecified-content-type-action="prevent" max-size="102400" size-exceeded-action="prevent" errors-variable-name="requestBodyValidation">
    <content-type-map any-content-type-value="application/soap+xml" />
    <content type="application/soap+xml" validate-as="soap" schema-id="myschema" action="prevent" /> 
</validate-content>
<validate-content unspecified-content-type-action="prevent" max-size="102400" size-exceeded-action="prevent" errors-variable-name="requestBodyValidation">
    <content-type-map any-content-type-value="application/soap+xml" />
    <content type="application/soap+xml" validate-as="soap" schema-id="myschema" action="prevent" /> 
</validate-content>
Validation errors
API Management generates content validation errors  in the following format:
{
 "Name": string,
 "Type": string,
 "ValidationRule": string,
 "Details": string,
 "Action": string
}
{
 "Name": string,
 "Type": string,
 "ValidationRule": string,
 "Details": string,
 "Action": string
}
The following table lists all possible errors of the validation policies.
Details: Can be used to investigate errors. Not meant to be shared publicly.
Public response: Error returned to the client. Does not leak implementation details.
When a validation policy specifies thepreventaction and produces an error, the response from API management includes an HTTP status code: 400 when the policy is applied in the inbound section, and 502 when the policy is applied in the outbound section.
prevent
The following table lists all the possible Reason values of a validation error along with possible Message values:
Related policies
Content validation
Related content
For more information about working with policies, see:
Tutorial: Transform and protect your API
Policy referencefor a full list of policy statements and their settings
Policy expressions
Set or edit policies
Reuse policy configurations
Policy snippets repo
Azure API Management policy toolkit
Get Copilot assistance to create, explain, and troubleshoot policies
Feedback
Was this page helpful?
Additional resources