Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Bot Framework security guidelines
Article
2024-10-09
4 contributors
In this article
APPLIES TO:SDK v4
Bots are more and more prevalent in key business areas like financial services, retail, travel, and so on. A bot might collect very sensitive data such as credit cards, SSN, bank accounts, and other personal information. So, it's important that bots are secure and protect against common threats and vulnerabilities.
You can take some standard preventative measures to improve your bot's security. Some security measures are similar to the ones used in other software systems, while some are specific to the Bot Framework. For the latter, refer to theAzure Security Benchmark. The benchmark provides recommendations on how you can secure your cloud solutions on Azure.
Security issues in a nutshell
This article groups security issues into 2 categories:
Threats: The tactics someone might use to compromise your bot, such as spoofing, tampering, disclosing information, denial of service, and so on.
Threats: The tactics someone might use to compromise your bot, such as spoofing, tampering, disclosing information, denial of service, and so on.
Vulnerabilities: The ways in which your bot or the management of your bot might be susceptible to such tactics, such as bugs, or lax security.
Vulnerabilities: The ways in which your bot or the management of your bot might be susceptible to such tactics, such as bugs, or lax security.
Reducing your vulnerabilities is a good way to mitigate threats, and a known way to reduce vulnerabilities is to implement security check points in the development and deployment process.
Common security guidelines
The following areas are covered by standard security best practices common to applications.
Securing network traffic
Protocols exist that provide cryptographic controls to address data tampering and disclosure during transmission. In this regard, bots should communicate only over secured channels.
To exchange data on the wire any secure system must use theHTTPSprotocol, which transfers data over HTTP in encrypted connections protected byTransport Layer Security(TLS) orSecure Sockets Layer(SSL).  See alsoRFC 2818 - HTTP Over TLS.
Note
All Bot Service channels requireHTTPSandTLS 1.2.
Self-destructing messages
Permanently delete any sensitive data as soon as it's no longer needed, usually after the message exchange ends, or after a certain amount of time. This can include personally-identifying information, IDs, PINs, passwords, security questions and answers, and so so.
Data storage
The best practice calls for storing information in a secure state for a certain amount of time and then discarding it later after it served its purpose.
Some common security techniques are listed below.
Firewalls deny access to traffic by default. The only traffic allowed should originate from specific applications or web servers that need to access the data.
You should also deploy a web application firewall. This is because attacks such as SQL injection attacks directed at a web application can be used to exfiltrate or delete data from the database.
Make sure that the database is still supported by the vendor, and you're running the latest version of the database with all the security patches installed to remove known vulnerabilities.
Uninstall or disable any features or services that you don't need and make sure you change the passwords of any default accounts from their default values; or better, delete any default accounts that you don't need.
Make sure that all the database security controls provided by the database are enabled, unless there is a specific reason for any to be disabled.
Make sure that you're not storing any confidential information that doesn't need to be in the database.
Data retained for compliance or other purposes can be moved to more secure storage, perhaps offline, which is less susceptible to database security threats.
Make sure to delete any history files that are written by a server during the original installation procedure. If the installation is successful these files have no value but can contain information that can potentially be exploited.
Education
Bots provide an innovative interaction tool between a company and its customers. But they could potentially provide a backdoor for tampering with a company's website. Therefore, a company must assure that its developers understand the importance of bot security as part of the website security. Moreover, users' errors can be a problem, too. This will require some education on how bots can be used securely, for example:
For the developers, a strategy should include internal training on how to use the bot securely.
Customers can be given guidelines detailing how to interact with the bot safely.
Bot-specific security guidelines
The following areas are covered by some standard security best practices for Bot Framework applications.
The following guidelines describe the Bot Framework best practice security measures. For more information, see theSecurity and Privacy FAQ.
Bot Connector authentication
The Bot Connector service natively uses HTTPS to exchange messages between a bot and channels (users). the Bot Framework SDK automates basic bot-to-channel authentication for you.
Warning
If you're writing your own authentication code, it's critical that you implement all security procedures correctly. By implementing all steps described in theAuthenticationarticle, you can mitigate the risk of an attacker being able to read messages that are sent to your bot, send messages that impersonate your bot, and steal secret keys.
User authentication
Azure AI Bot Service authenticationenables you to authenticate users to and getaccess tokensfrom various identity providers such asMicrosoft Entra ID,GitHub,Uberand so on. You can also configure authentication for a customOAuth2identity provider. All this enables you to writeone piece of authentication codethat works across all supported identity providers and channels. To utilize these capabilities you need to perform the following steps:
Statically configuresettingson your bot that contains the details of your application registration with an identity provider.
settings
Use anOAuthCard, backed by the application information you supplied in the previous step, to sign-in a user.
OAuthCard
Retrieve access tokens throughAzure AI Bot Service API. A good practice is to place a time limit on how long an authenticated user can staylogged in.
For more information, see theUser authenticationarticle.
Web Chat
When you use theWeb Chatcontrol you must keep in mind some important security considerations about impersonation and identity spoofing. For more information, seeDirect Line enhanced authentication.
Additional information
User authentication
Add authentication to your bot via Azure AI Bot Service
Enable security and test on localhost
Secrets and tokens
Authentication technologies
Enhanced Direct Line Authentication Features
Security recommendations in Azure Security Center
Threat protection in Azure Security Center
Azure Security Center Data Security
Container security in Security Center
Additional resources