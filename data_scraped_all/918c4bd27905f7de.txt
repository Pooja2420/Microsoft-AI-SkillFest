Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
sql_request plugin
Article
2024-08-27
5 contributors
In this article
Applies to: 창혵Microsoft Fabric창혵Azure Data Explorer
Thesql_requestplugin sends a SQL query to an Azure SQL Server network endpoint and returns the results.
If more than one rowset is returned by SQL, only the first one is used.
The plugin is invoked with theevaluateoperator.
sql_request
evaluate
Syntax
evaluatesql_request(ConnectionString,SqlQuery[,SqlParameters[,Options]])[:OutputSchema]
evaluate
sql_request
(
,
,
,
)
:
Learn more aboutsyntax conventions.
Parameters
string
string
dynamic
dynamic
token
string
sql_request
(
:
,
)
Note
Specifying theOutputSchemais highly recommended, as it allows the plugin to be used in scenarios that might otherwise not work without it, such as a cross-cluster query. TheOutputSchemacan also enable multiple query optimizations.
An error is raised if the run-time schema of the first row set returned by the SQL network endpoint doesn't match theOutputSchemaschema.
Authentication and authorization
The sql_request plugin supports the following three methods of authentication to the
SQL Server endpoint.
Authentication="Active Directory Integrated"
Authentication="Active Directory Managed Identity";User Id={object_id}
User ID=...; Password=...;
dynamic({'token': h"eyJ0..."})
token
Note
Connection strings and queries that include confidential information or information that should be guarded should be obfuscated to be omitted from any Kusto tracing. For more information, seeobfuscated string literals.
Examples

Send a SQL query using Microsoft Entra integrated authentication
The following example sends a SQL query to an Azure SQL DB database. It
retrieves all records from[dbo].[Table], and then processes the results on the
Kusto side. Authentication reuses the calling user's Microsoft Entra token.
[dbo].[Table]
Note
This example should not be taken as a recommendation to filter or project data in this manner. SQL queries should be constructed to return the smallest dataset possible.
evaluate sql_request(
  'Server=tcp:contoso.database.windows.net,1433;'
    'Authentication="Active Directory Integrated";'
    'Initial Catalog=Fabrikam;',
  'select * from [dbo].[Table]') : (Id:long, Name:string)
| where Id > 0
| project Name
evaluate sql_request(
  'Server=tcp:contoso.database.windows.net,1433;'
    'Authentication="Active Directory Integrated";'
    'Initial Catalog=Fabrikam;',
  'select * from [dbo].[Table]') : (Id:long, Name:string)
| where Id > 0
| project Name
Send a SQL query using Username/Password authentication
The following example is identical to the previous one, except that SQL
authentication is done by username/password. For confidentiality,
we use obfuscated strings here.
evaluate sql_request(
  'Server=tcp:contoso.database.windows.net,1433;'
    'Initial Catalog=Fabrikam;'
    h'User ID=USERNAME;'
    h'Password=PASSWORD;',
  'select * from [dbo].[Table]') : (Id:long, Name:string)
| where Id > 0
| project Name
evaluate sql_request(
  'Server=tcp:contoso.database.windows.net,1433;'
    'Initial Catalog=Fabrikam;'
    h'User ID=USERNAME;'
    h'Password=PASSWORD;',
  'select * from [dbo].[Table]') : (Id:long, Name:string)
| where Id > 0
| project Name

Send a SQL query using a Microsoft Entra access token
The following example sends a SQL query to an Azure SQL database
retrieving all records from[dbo].[Table], while appending anotherdatetimecolumn,
and then processes the results on the Kusto side.
It specifies a SQL parameter (@param0) to be used in the SQL query.
[dbo].[Table]
datetime
@param0
evaluate sql_request(
  'Server=tcp:contoso.database.windows.net,1433;'
    'Authentication="Active Directory Integrated";'
    'Initial Catalog=Fabrikam;',
  'select *, @param0 as dt from [dbo].[Table]',
  dynamic({'param0': datetime(2020-01-01 16:47:26.7423305)})) : (Id:long, Name:string, dt: datetime)
| where Id > 0
| project Name
evaluate sql_request(
  'Server=tcp:contoso.database.windows.net,1433;'
    'Authentication="Active Directory Integrated";'
    'Initial Catalog=Fabrikam;',
  'select *, @param0 as dt from [dbo].[Table]',
  dynamic({'param0': datetime(2020-01-01 16:47:26.7423305)})) : (Id:long, Name:string, dt: datetime)
| where Id > 0
| project Name
Send a SQL query without a query-defined output schema
The following example sends a SQL query to an Azure SQL database without an output schema. This is not recommended unless the schema is unknown, as it may impact the performance of the query
evaluate sql_request(
  'Server=tcp:contoso.database.windows.net,1433;'
    'Initial Catalog=Fabrikam;'
    h'User ID=USERNAME;'
    h'Password=PASSWORD;',
  'select * from [dbo].[Table]')
| where Id > 0
| project Name
evaluate sql_request(
  'Server=tcp:contoso.database.windows.net,1433;'
    'Initial Catalog=Fabrikam;'
    h'User ID=USERNAME;'
    h'Password=PASSWORD;',
  'select * from [dbo].[Table]')
| where Id > 0
| project Name
Encryption and server validation
The following connection properties are forced when connecting to a SQL Server network
endpoint, for security reasons.
Encryptis set totrueunconditionally.
Encrypt
true
TrustServerCertificateis set tofalseunconditionally.
TrustServerCertificate
false
As a result, the SQL Server must be configured with a valid SSL/TLS server certificate.
Specify the network endpoint
Specifying the SQL network endpoint as part of the connection string is mandatory.
The appropriate syntax is:
Server=tcp:FQDN[,Port]
Server
=
tcp:
,
Where:
FQDNis the fully qualified domain name of the endpoint.
Portis the TCP port of the endpoint. By default,1433is assumed.
1433
Note
Other forms of specifying the network endpoint are not supported.
One cannot omit, for example, the prefixtcp:even though it is possible to
do so when using the SQL client libraries programmatically.
tcp:
Feedback
Was this page helpful?
Additional resources