Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Use Microsoft Entra for cache authentication
Article
2024-10-02
7 contributors
Applies to: â Azure Cache for Redis
In this article
Azure Cache for Redis offers two methods toauthenticateto your cache instance: access keys and Microsoft Entra.
Although access key authentication is simple, it comes with a set of challenges around security and password management. For contrast, in this article, you learn how to use a Microsoft Entra token for cache authentication.
Azure Cache for Redis offers a password-free authentication mechanism by integrating withMicrosoft Entra. This integration also includesrole-based access controlfunctionality provided throughaccess control lists (ACLs)supported in open-source Redis.
To use the ACL integration, your client application must assume the identity of a Microsoft Entra entity, like service principal or managed identity, and connect to your cache. In this article, you learn how to use your service principal or managed identity to connect to your cache. You also learn how to grant your connection predefined permissions based on the Microsoft Entra artifact that's used for the connection.
Scope of availability
Prerequisites and limitations
Microsoft Entra authentication is supported for SSL connections and TLS 1.2 or higher.
Microsoft Entra authentication isn't supported in the Enterprise tiers of Azure Cache for Redis Enterprise.
Microsoft Entra groups are not supported.
Some Redis commands are blocked. For a full list of blocked commands, seeRedis commands not supported in Azure Cache for Redis.
Important
After a connection is established by using a Microsoft Entra token, client applications must periodically refresh the Microsoft Entra token before expiry. Then the apps must send anAUTHcommand to the Redis server to avoid disrupting connections. For more information, seeConfigure your Redis client to use Microsoft Entra.
AUTH
Enable Microsoft Entra authentication on your cache
In the Azure portal, select the Azure Cache for Redis instance where you want to configure Microsoft Entra token-based authentication.
In the Azure portal, select the Azure Cache for Redis instance where you want to configure Microsoft Entra token-based authentication.
On theResourcemenu, selectAuthentication.
On theResourcemenu, selectAuthentication.
On the working pane, select theMicrosoft Entra Authenticationtab.
On the working pane, select theMicrosoft Entra Authenticationtab.
SelectEnable Microsoft Entra Authenticationand enter the name of a valid user. The user you enter is automatically assignedData Owner Access Policyby default when you selectSave. You can also enter a managed identity or service principal to connect to your cache instance.
SelectEnable Microsoft Entra Authenticationand enter the name of a valid user. The user you enter is automatically assignedData Owner Access Policyby default when you selectSave. You can also enter a managed identity or service principal to connect to your cache instance.

A pop-up dialog asks if you want to update your configuration and informs you that it takes several minutes. SelectYes.ImportantAfter the enable operation is finished, the nodes in your cache instance reboot to load the new configuration. We recommend that you perform this operation during your maintenance window or outside your peak business hours. The operation can take up to 30 minutes.
A pop-up dialog asks if you want to update your configuration and informs you that it takes several minutes. SelectYes.
Important
After the enable operation is finished, the nodes in your cache instance reboot to load the new configuration. We recommend that you perform this operation during your maintenance window or outside your peak business hours. The operation can take up to 30 minutes.
For information on how to use Microsoft Entra with the Azure CLI, see thereference pages for identity.
Disable access key authentication on your cache
Using Microsoft Entra is the secure way to connect your cache. We recommend that you use Microsoft Entra and disable access keys.
When you disable access key authentication for a cache, all existing client connections are terminated, whether they use access keys or Microsoft Entra authentication. Follow the recommended Redis client best practices to implement proper retry mechanisms for reconnecting Microsoft Entra-based connections, if any.
Before you disable access keys
Ensure that Microsoft Entra authentication is enabled and you have at least one Redis User configured.
Ensure all applications connecting to your cache instance switch to using Microsoft Entra Authentication.
Ensure that the metricsConnected ClientsandConnected Clients Using Microsoft Entra Tokenhave the same values. If the values for these two metrics aren't the same, that means there are still some connections that were created using access keys and not Microsoft Entra Token.
Consider disabling access during the scheduled maintenance window for your cache instance.
Disabling access keys is only available for Basic, Standard, and Premium tier caches.
For geo-replicated caches, you must:
Unlink the caches.
Disable access keys.
Relink the caches.
If you have a cache where you used access keys, and you want to disable access keys, follow this procedure:
In the Azure portal, select the Azure Cache for Redis instance where you want to disable access keys.
In the Azure portal, select the Azure Cache for Redis instance where you want to disable access keys.
On theResourcemenu, selectâ¯Authentication.
On theResourcemenu, selectâ¯Authentication.
On the working pane, selectâ¯Access keys.
On the working pane, selectâ¯Access keys.
Selectâ¯Disable Access Keys Authentication. Then, selectâ¯Save.
Selectâ¯Disable Access Keys Authentication. Then, selectâ¯Save.

Confirm that you want to update your configuration by selectingâ¯Yes.
Confirm that you want to update your configuration by selectingâ¯Yes.
Important
When theDisable Access Keys Authenticationsetting is changed for a cache, all existing client connections, using access keys or Microsoft Entra, are terminated. Follow the best practices to implement proper retry mechanisms for reconnecting Microsoft Entra-based connections. For more information, seeConnection resilience.
Use data access configuration with your cache
If you want to use a custom access policy instead of Redis Data Owner, go toData Access Configurationon theResourcemenu. For more information, seeConfigure a custom data access policy for your application.
In the Azure portal, select the Azure Cache for Redis instance where you want to add to the data access configuration.
In the Azure portal, select the Azure Cache for Redis instance where you want to add to the data access configuration.
On theResourcemenu, selectData Access Configuration.
On theResourcemenu, selectData Access Configuration.
SelectAddand then selectNew Redis User.
SelectAddand then selectNew Redis User.
On theAccess Policiestab, select one of the available policies in the table:Data Owner,Data Contributor, orData Reader. Then, selectNext: Redis Users.
On theAccess Policiestab, select one of the available policies in the table:Data Owner,Data Contributor, orData Reader. Then, selectNext: Redis Users.

Choose eitherUser or service principalorManaged Identityto determine how to assign access to your Azure Cache for Redis instance. If you selectUser or service principaland you want to add a user, you must firstenable Microsoft Entra authentication.
Choose eitherUser or service principalorManaged Identityto determine how to assign access to your Azure Cache for Redis instance. If you selectUser or service principaland you want to add a user, you must firstenable Microsoft Entra authentication.
Then, chooseSelect membersand chooseSelect. Then, selectNext: Review + assign.
Then, chooseSelect membersand chooseSelect. Then, selectNext: Review + assign.

A pop-up dialog notifies you that upgrading is permanent and might cause a brief connection blip. SelectYes.ImportantAfter the enable operation is finished, the nodes in your cache instance reboot to load the new configuration. We recommend that you perform this operation during your maintenance window or outside your peak business hours. The operation can take up to 30 minutes.
A pop-up dialog notifies you that upgrading is permanent and might cause a brief connection blip. SelectYes.
Important
After the enable operation is finished, the nodes in your cache instance reboot to load the new configuration. We recommend that you perform this operation during your maintenance window or outside your peak business hours. The operation can take up to 30 minutes.
Configure your Redis client to use Microsoft Entra
Because most Azure Cache for Redis clients assume that a password and access key are used for authentication, you likely need to update your client workflow to support authentication by using Microsoft Entra. In this section, you learn how to configure your client applications to connect to Azure Cache for Redis by using a Microsoft Entra token.
Microsoft Entra client workflow
Configure your client application to acquire a Microsoft Entra token for scope,https://redis.azure.com/.defaultoracca5fbb-b7e4-4009-81f1-37e38fd66d78/.default, by using theMicrosoft Authentication Library (MSAL).
Configure your client application to acquire a Microsoft Entra token for scope,https://redis.azure.com/.defaultoracca5fbb-b7e4-4009-81f1-37e38fd66d78/.default, by using theMicrosoft Authentication Library (MSAL).
https://redis.azure.com/.default
acca5fbb-b7e4-4009-81f1-37e38fd66d78/.default
Update your Redis connection logic to use the followingUserandPassword:User= Object ID of your managed identity or service principalPassword= Microsoft Entra token that you acquired by using MSAL
Update your Redis connection logic to use the followingUserandPassword:
User
Password
User= Object ID of your managed identity or service principal
User
Password= Microsoft Entra token that you acquired by using MSAL
Password
Ensure that your client executes a RedisAUTH commandautomatically before your Microsoft Entra token expires by using:User= Object ID of your managed identity or service principalPassword= Microsoft Entra token refreshed periodically
Ensure that your client executes a RedisAUTH commandautomatically before your Microsoft Entra token expires by using:
User= Object ID of your managed identity or service principal
User
Password= Microsoft Entra token refreshed periodically
Password
Client library support
The libraryMicrosoft.Azure.StackExchangeRedisis an extension ofStackExchange.Redisthat enables you to use Microsoft Entra to authenticate connections from a Redis client application to an Azure Cache for Redis. The extension manages the authentication token, including proactively refreshing tokens before they expire to maintain persistent Redis connections over multiple days.
Microsoft.Azure.StackExchangeRedis
StackExchange.Redis
This code sampledemonstrates how to use theMicrosoft.Azure.StackExchangeRedisNuGet package to connect to your Azure Cache for Redis instance by using Microsoft Entra.
Microsoft.Azure.StackExchangeRedis
The following table includes links to code samples. They demonstrate how to connect to your Azure Cache for Redis instance by using a Microsoft Entra token. Various client libraries are included in multiple languages.
Best practices for Microsoft Entra authentication
Configure private links or firewall rules to protect your cache from a denial of service attack.
Ensure that your client application sends a new Microsoft Entra token at least three minutes before token expiry to avoid connection disruption.
When you call the Redis serverAUTHcommand periodically, consider adding a random delay so that theAUTHcommands are staggered. In this way, your Redis server doesn't receive too manyAUTHcommands at the same time.
AUTH
AUTH
AUTH
Related content
Configure role-based access control with Data Access Policy
Reference pages for identity
Feedback
Was this page helpful?
Additional resources