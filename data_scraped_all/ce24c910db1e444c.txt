Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Get Microsoft Entra ID tokens for service principals
Article
2024-12-16
3 contributors
In this article
Important
This section describes how to manually get Microsoft Entra ID tokens for service principals.
Azure Databricks managed service principals are managed directly within Azure Databricks. Microsoft Entra ID managed service principals are managed in Microsoft Entra ID, which requires additional permissions. Databricks recommends that you use Azure Databricks managed service principals for most use cases. However, Databricks recommends that you use Microsoft Entra ID managed service principals in cases where you must authenticate with Azure Databricks and other Azure resources at the same time.
To create a Azure Databricks managed service principal instead of a Microsoft Entra ID managed service principal, seeService principals.
Databricks does not recommend that you create Microsoft Entra ID tokens for Microsoft Entra ID service principals manually. This is because each Microsoft Entra ID token is short-lived, typically expiring within one hour. After this time, you must manually generate a replacement Microsoft Entra ID token. Instead, use one of the participating tools or SDKs that implement theDatabricks client unified authenticationstandard. These tools and SDKs automatically generate and replace expired Microsoft Entra ID tokens for you, leveraging the following Databricks authentication types:
Azure managed identities authentication
MS Entra service principal authentication
Azure CLI authentication
If you do not have a service principal, you can provision one by following one of these sets of instructions:
Provision a service principal in Azure portal
Provision a service principal with the Azure CLI
This article describes how a service principal defined in Microsoft Entra ID can also act as a principal on which authentication and authorization policies can be enforced in Azure Databricks. Service principals in an Azure Databricks workspace can have different fine-grained access control than regular users (user principals).
Aservice principalacts as aclient roleand uses theOAuth 2.0 client credentials flowto authorize access to Azure Databricks resources.
You can manage service principals in Databricks or by using the following procedure from the Azure portal.
You can also use the Microsoft Authentication Library (MSAL) to programmatically get a Microsoft Entra ID access token for a user instead of a service principal. SeeGet Microsoft Entra ID tokens for users by using MSAL.
Provision a service principal in Azure portal
Sign in to theAzure portal.NoteThe portal to use is different depending on whether your Microsoft Entra ID application runs in the Azure public cloud or in a national or sovereign cloud. For more information, seeNational clouds.
Sign in to theAzure portal.
Note
The portal to use is different depending on whether your Microsoft Entra ID application runs in the Azure public cloud or in a national or sovereign cloud. For more information, seeNational clouds.
If you have access to multiple tenants, subscriptions, or directories, click theDirectories + subscriptions(directory with filter) icon in the top menu to switch to the directory in which you want to provision the service principal.
If you have access to multiple tenants, subscriptions, or directories, click theDirectories + subscriptions(directory with filter) icon in the top menu to switch to the directory in which you want to provision the service principal.
InSearch resources, services, and docs, search for and selectMicrosoft Entra ID.
InSearch resources, services, and docs, search for and selectMicrosoft Entra ID.
Click+ Addand selectApp registration.
Click+ Addand selectApp registration.
ForName, enter a name for the application.
ForName, enter a name for the application.
In theSupported account typessection, selectAccounts in this organizational directory only (Single tenant).
In theSupported account typessection, selectAccounts in this organizational directory only (Single tenant).
ClickRegister.
ClickRegister.
On the application pageâsOverviewpage, in theEssentialssection, copy the following values:Application (client) IDDirectory (tenant) ID
On the application pageâsOverviewpage, in theEssentialssection, copy the following values:
Application (client) ID
Directory (tenant) ID
To generate a client secret, withinManage, clickCertificates & secrets.NoteYou use this client secret to generate Microsoft Entra ID tokens for authenticating Microsoft Entra ID service principals with Azure Databricks. To determine whether an Azure Databricks tool or SDK can use Microsoft Entra ID tokens, see the toolâs or SDKâs documentation.
To generate a client secret, withinManage, clickCertificates & secrets.
Note
You use this client secret to generate Microsoft Entra ID tokens for authenticating Microsoft Entra ID service principals with Azure Databricks. To determine whether an Azure Databricks tool or SDK can use Microsoft Entra ID tokens, see the toolâs or SDKâs documentation.
On theClient secretstab, clickNew client secret.
On theClient secretstab, clickNew client secret.

In theAdd a client secretpane, forDescription, enter a description for the client secret.
In theAdd a client secretpane, forDescription, enter a description for the client secret.
ForExpires, select an expiry time period for the client secret, and then clickAdd.
ForExpires, select an expiry time period for the client secret, and then clickAdd.
Copy and store the client secretâsValuein a secure place, as this client secret is the password for your application.
Copy and store the client secretâsValuein a secure place, as this client secret is the password for your application.
Provision a service principal with the Azure CLI
SeeCreate a Microsoft Entra ID (formerly Azure Active Directory) service principal with the Azure CLI.
Get a Microsoft Entra ID access token with the Microsoft identity platform REST API
Important
This section describes how to manually get a Microsoft Entra ID token for a service principal by using the Microsoft identity platform REST API.
Databricks does not recommend that you create Microsoft Entra ID tokens for Microsoft Entra ID service principals manually. This is because each Microsoft Entra ID token is short-lived, typically expiring within one hour. After this time, you must manually generate a replacement Microsoft Entra ID token. Instead, use one of the participating tools or SDKs that implement theDatabricks client unified authenticationstandard. These tools and SDKs automatically generate and replace expired Microsoft Entra ID tokens for you, leveraging the following Databricks authentication types:
Azure managed identities authentication
MS Entra service principal authentication
Azure CLI authentication
To access the Databricks REST API with the service principal, you get and then use a Microsoft Entra ID access token for the service principal. For more information, seeFirst case: Access token request with a shared secret.
Tip
You can also use the Azure CLI to get the Microsoft Entra ID access token. SeeGet a Microsoft Entra ID access token with the Azure CLI.
Gather the following information:ParameterDescriptionTenant IDTheDirectory (tenant) IDfor the related application registered in Microsoft Entra ID.Client IDTheApplication (client) IDfor the related application registered in Microsoft Entra ID.Client secretTheValueof the client secret for the related application registered in Microsoft Entra ID.
Gather the following information:
Tenant ID
Directory (tenant) ID
Client ID
Application (client) ID
Client secret
Value
Use the preceding information along withcurlto get the Microsoft Entra ID access token.curl -X POST -H 'Content-Type: application/x-www-form-urlencoded' \
https://login.microsoftonline.com/<tenant-id>/oauth2/v2.0/token \
-d 'client_id=<client-id>' \
-d 'grant_type=client_credentials' \
-d 'scope=2ff814a6-3304-4ab8-85cb-cd0e6f879c1d%2F.default' \
-d 'client_secret=<client-secret>'Replace:<tenant-id>with the registered applicationâs tenant ID.<client-id>with the registered applicationâs client ID.<client-secret>with the registered applicationâs client secret value.Do not change the value of thescopeparameter. It represents the programmatic ID for Azure Databricks (2ff814a6-3304-4ab8-85cb-cd0e6f879c1d) along with the default scope (/.default, URL-encoded as%2f.default).For example:curl -X POST -H 'Content-Type: application/x-www-form-urlencoded' \
https://login.microsoftonline.com/a1bc2d34-5e67-8f89-01ab-c2345d6c78de/oauth2/v2.0/token \
-d 'client_id=12a34b56-789c-0d12-e3fa-b456789c0123' \
-d 'grant_type=client_credentials' \
-d 'scope=2ff814a6-3304-4ab8-85cb-cd0e6f879c1d%2F.default' \
-d 'client_secret=abc1D~Ef...2ghIJKlM3'The Microsoft Entra ID access token is in theaccess_tokenvalue within the output of the call.
Use the preceding information along withcurlto get the Microsoft Entra ID access token.
curl -X POST -H 'Content-Type: application/x-www-form-urlencoded' \
https://login.microsoftonline.com/<tenant-id>/oauth2/v2.0/token \
-d 'client_id=<client-id>' \
-d 'grant_type=client_credentials' \
-d 'scope=2ff814a6-3304-4ab8-85cb-cd0e6f879c1d%2F.default' \
-d 'client_secret=<client-secret>'
curl -X POST -H 'Content-Type: application/x-www-form-urlencoded' \
https://login.microsoftonline.com/<tenant-id>/oauth2/v2.0/token \
-d 'client_id=<client-id>' \
-d 'grant_type=client_credentials' \
-d 'scope=2ff814a6-3304-4ab8-85cb-cd0e6f879c1d%2F.default' \
-d 'client_secret=<client-secret>'
Replace:
<tenant-id>with the registered applicationâs tenant ID.
<tenant-id>
<client-id>with the registered applicationâs client ID.
<client-id>
<client-secret>with the registered applicationâs client secret value.
<client-secret>
Do not change the value of thescopeparameter. It represents the programmatic ID for Azure Databricks (2ff814a6-3304-4ab8-85cb-cd0e6f879c1d) along with the default scope (/.default, URL-encoded as%2f.default).
scope
2ff814a6-3304-4ab8-85cb-cd0e6f879c1d
/.default
%2f.default
For example:
curl -X POST -H 'Content-Type: application/x-www-form-urlencoded' \
https://login.microsoftonline.com/a1bc2d34-5e67-8f89-01ab-c2345d6c78de/oauth2/v2.0/token \
-d 'client_id=12a34b56-789c-0d12-e3fa-b456789c0123' \
-d 'grant_type=client_credentials' \
-d 'scope=2ff814a6-3304-4ab8-85cb-cd0e6f879c1d%2F.default' \
-d 'client_secret=abc1D~Ef...2ghIJKlM3'
curl -X POST -H 'Content-Type: application/x-www-form-urlencoded' \
https://login.microsoftonline.com/a1bc2d34-5e67-8f89-01ab-c2345d6c78de/oauth2/v2.0/token \
-d 'client_id=12a34b56-789c-0d12-e3fa-b456789c0123' \
-d 'grant_type=client_credentials' \
-d 'scope=2ff814a6-3304-4ab8-85cb-cd0e6f879c1d%2F.default' \
-d 'client_secret=abc1D~Ef...2ghIJKlM3'
The Microsoft Entra ID access token is in theaccess_tokenvalue within the output of the call.
access_token
Get a Microsoft Entra ID access token with the Azure CLI
Important
This section describes how to manually get a Microsoft Entra ID token for a service principal by using the Azure CLI.
Databricks does not recommend that you create Microsoft Entra ID tokens for Microsoft Entra ID service principals manually. This is because each Microsoft Entra ID token is short-lived, typically expiring within one hour. After this time, you must manually generate a replacement Microsoft Entra ID token. Instead, use one of the participating tools or SDKs that implement theDatabricks client unified authenticationstandard. These tools and SDKs automatically generate and replace expired Microsoft Entra ID tokens for you, leveraging the following Databricks authentication types:
Azure managed identities authentication
MS Entra service principal authentication
Azure CLI authentication
To access the Databricks REST API with the service principal, you get and then use a Microsoft Entra ID access token for the service principal.
Gather the following information:ParameterDescriptionTenant IDTheDirectory (tenant) IDfor the related application registered in Microsoft Entra ID.Client IDTheApplication (client) IDfor the related application registered in Microsoft Entra ID.Client secretTheValueof the client secret for the related application registered in Microsoft Entra ID.
Gather the following information:
Tenant ID
Directory (tenant) ID
Client ID
Application (client) ID
Client secret
Value
Get the correct Azure subscription ID for the Microsoft Entra ID service principal, if you do not already know this ID, by doing one of the following:In your Azure Databricks workspaceâs top navigation bar, click your username and then clickAzure Portal. On the Azure Databricks workspace resource page that appears, clickOverviewin the sidebar. Then look for theSubscription IDfield, which contains the subscription ID.Use theAzure CLIto run theaz databricks workspace listcommand, using the--queryand-oor--outputoptions to narrow down the results. Replaceadb-0000000000000000.0.azuredatabricks.netwith the name of your workspace instance, not including thehttps://. In this example, the00000000-0000-0000-0000-000000000000after/subscriptions/in the output is the subscription ID.az databricks workspace list --query "[?workspaceUrl==\`adb-0000000000000000.0.azuredatabricks.net\`].{id:id}" -o tsv

# /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/my-rg/providers/Microsoft.Databricks/workspaces/my-wsIf the following message appears, you are signed in to the wrong tenant:The subscription of '<subscription-id>' doesn't exist in cloud 'AzureCloud'.To sign in to the correct tenant, you must run theaz logincommand again, using the-tor--tenantoption to specify the correct tenant ID.You can get the tenant ID for an Azure Databricks workspace by running the commandcurl -v <per-workspace-URL>/aad/authand looking in the output< location: https://login.microsoftonline.com/00000000-0000-0000-0000-000000000000, where00000000-0000-0000-0000-000000000000is the tenant ID. See alsoGet subscription and tenant IDs in the Azure portal.az login -t <tenant-id>
Get the correct Azure subscription ID for the Microsoft Entra ID service principal, if you do not already know this ID, by doing one of the following:
In your Azure Databricks workspaceâs top navigation bar, click your username and then clickAzure Portal. On the Azure Databricks workspace resource page that appears, clickOverviewin the sidebar. Then look for theSubscription IDfield, which contains the subscription ID.
In your Azure Databricks workspaceâs top navigation bar, click your username and then clickAzure Portal. On the Azure Databricks workspace resource page that appears, clickOverviewin the sidebar. Then look for theSubscription IDfield, which contains the subscription ID.
Use theAzure CLIto run theaz databricks workspace listcommand, using the--queryand-oor--outputoptions to narrow down the results. Replaceadb-0000000000000000.0.azuredatabricks.netwith the name of your workspace instance, not including thehttps://. In this example, the00000000-0000-0000-0000-000000000000after/subscriptions/in the output is the subscription ID.az databricks workspace list --query "[?workspaceUrl==\`adb-0000000000000000.0.azuredatabricks.net\`].{id:id}" -o tsv

# /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/my-rg/providers/Microsoft.Databricks/workspaces/my-wsIf the following message appears, you are signed in to the wrong tenant:The subscription of '<subscription-id>' doesn't exist in cloud 'AzureCloud'.To sign in to the correct tenant, you must run theaz logincommand again, using the-tor--tenantoption to specify the correct tenant ID.You can get the tenant ID for an Azure Databricks workspace by running the commandcurl -v <per-workspace-URL>/aad/authand looking in the output< location: https://login.microsoftonline.com/00000000-0000-0000-0000-000000000000, where00000000-0000-0000-0000-000000000000is the tenant ID. See alsoGet subscription and tenant IDs in the Azure portal.az login -t <tenant-id>
Use theAzure CLIto run theaz databricks workspace listcommand, using the--queryand-oor--outputoptions to narrow down the results. Replaceadb-0000000000000000.0.azuredatabricks.netwith the name of your workspace instance, not including thehttps://. In this example, the00000000-0000-0000-0000-000000000000after/subscriptions/in the output is the subscription ID.
--query
-o
--output
adb-0000000000000000.0.azuredatabricks.net
https://
00000000-0000-0000-0000-000000000000
/subscriptions/
az databricks workspace list --query "[?workspaceUrl==\`adb-0000000000000000.0.azuredatabricks.net\`].{id:id}" -o tsv

# /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/my-rg/providers/Microsoft.Databricks/workspaces/my-ws
az databricks workspace list --query "[?workspaceUrl==\`adb-0000000000000000.0.azuredatabricks.net\`].{id:id}" -o tsv

# /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/my-rg/providers/Microsoft.Databricks/workspaces/my-ws
If the following message appears, you are signed in to the wrong tenant:The subscription of '<subscription-id>' doesn't exist in cloud 'AzureCloud'.To sign in to the correct tenant, you must run theaz logincommand again, using the-tor--tenantoption to specify the correct tenant ID.
The subscription of '<subscription-id>' doesn't exist in cloud 'AzureCloud'.
az login
-t
--tenant
You can get the tenant ID for an Azure Databricks workspace by running the commandcurl -v <per-workspace-URL>/aad/authand looking in the output< location: https://login.microsoftonline.com/00000000-0000-0000-0000-000000000000, where00000000-0000-0000-0000-000000000000is the tenant ID. See alsoGet subscription and tenant IDs in the Azure portal.
curl -v <per-workspace-URL>/aad/auth
< location: https://login.microsoftonline.com/00000000-0000-0000-0000-000000000000
00000000-0000-0000-0000-000000000000
az login -t <tenant-id>
az login -t <tenant-id>
After you have the correct Azure tenant ID, client ID, client secret, and subscription ID for your Microsoft Entra ID service principal, sign in to Azure by using theAzure CLIto run theaz logincommand. Use the--service-principaloption along with specifying the values for the parameters ofTenant ID(Directory (tenant) ID),Client ID(Application (client) ID), andClient secret(Value) for the related application registered in Microsoft Entra ID.az login \
--service-principal \
-t <Tenant-ID> \
-u <Client-ID> \
-p <Client-secret>
After you have the correct Azure tenant ID, client ID, client secret, and subscription ID for your Microsoft Entra ID service principal, sign in to Azure by using theAzure CLIto run theaz logincommand. Use the--service-principaloption along with specifying the values for the parameters ofTenant ID(Directory (tenant) ID),Client ID(Application (client) ID), andClient secret(Value) for the related application registered in Microsoft Entra ID.
--service-principal
Tenant ID
Directory (tenant) ID
Client ID
Application (client) ID
Client secret
Value
az login \
--service-principal \
-t <Tenant-ID> \
-u <Client-ID> \
-p <Client-secret>
az login \
--service-principal \
-t <Tenant-ID> \
-u <Client-ID> \
-p <Client-secret>
Confirm that you are signed in to the correct subscription for your signed-in Microsoft Entra ID service principal. To do this, run theaz account setcommand, using the-sor--subscriptionoption to specify the correct subscription ID.az account set -s <subscription-id>
Confirm that you are signed in to the correct subscription for your signed-in Microsoft Entra ID service principal. To do this, run theaz account setcommand, using the-sor--subscriptionoption to specify the correct subscription ID.
-s
--subscription
az account set -s <subscription-id>
az account set -s <subscription-id>
Generate the Microsoft Entra ID access token for the signed-in Microsoft Entra ID service principal by running theaz account get-access-tokencommand. Use the--resourceoption to specify the unique resource ID for the Azure Databricks service, which is2ff814a6-3304-4ab8-85cb-cd0e6f879c1d. You can display just the Microsoft Entra ID tokenâs value in the output of the command by using the--queryand-oor--outputoptions.az account get-access-token \
--resource 2ff814a6-3304-4ab8-85cb-cd0e6f879c1d \
--query "accessToken" \
-o tsv
Generate the Microsoft Entra ID access token for the signed-in Microsoft Entra ID service principal by running theaz account get-access-tokencommand. Use the--resourceoption to specify the unique resource ID for the Azure Databricks service, which is2ff814a6-3304-4ab8-85cb-cd0e6f879c1d. You can display just the Microsoft Entra ID tokenâs value in the output of the command by using the--queryand-oor--outputoptions.
--resource
2ff814a6-3304-4ab8-85cb-cd0e6f879c1d
--query
-o
--output
az account get-access-token \
--resource 2ff814a6-3304-4ab8-85cb-cd0e6f879c1d \
--query "accessToken" \
-o tsv
az account get-access-token \
--resource 2ff814a6-3304-4ab8-85cb-cd0e6f879c1d \
--query "accessToken" \
-o tsv
Use the service principalâs Microsoft Entra ID access token to access the Databricks REST API
Important
This section describes how to usecurland a service principalâs Microsoft Entra ID access token to access the Databricks REST API.
curl
Instead ofcurl, you might use one of the participating tools or SDKs that implement theDatabricks client unified authenticationstandard. These tools and SDKs also automatically generate and replace expired Microsoft Entra ID tokens for you, leveraging the following Databricks authentication types:
curl
Azure managed identities authentication
MS Entra service principal authentication
Azure CLI authentication
A service principal that is a Databricks user can authenticate to the Databricks REST API with Microsoft Entra ID tokens.
A service principal can also add itself as a workspace admin to a workspace if it has the Contributor or Owner role on the target workspace resource in Azure. If the service principal is a Contributor or Owner on the target workspace and you want to add it to a workspace using its Microsoft Entra ID token, go toWorkspace-level API access for service principals that are not Azure Databricks users.
Otherwise, continue toAPI access for service principals that are Azure Databricks users and admins.
API access for service principals that are Azure Databricks users and admins
To complete this procedure, you must first add the service principal to the Azure Databricks account or workspace. You can add your service principal directly to your account, without granting it workspace access, by using theSCIM (Account) API.
You can add your service principal to a workspace by using theService Principals APIendpoint. This will also add the service principal to your Azure Databricks account. For example:
By using Databricks CLI version 0.205 or above (recommended):
Add the service principal:
databricks service-principals create --application-id 12a34b56-789c-0d12-e3fa-b456789c0123 --display-name "My Service Principal" -p <profile-name-that-references-calling-users-access-token>
databricks service-principals create --application-id 12a34b56-789c-0d12-e3fa-b456789c0123 --display-name "My Service Principal" -p <profile-name-that-references-calling-users-access-token>
Update the service principalâs workspace entitlements:
databricks service-principals patch 1234567890123456 --json @update-service-principal.json -p <profile-name-that-references-access-token>
databricks service-principals patch 1234567890123456 --json @update-service-principal.json -p <profile-name-that-references-access-token>
update-service-principal.json:
update-service-principal.json
{
  "Operations": [
    {
      "op": "add",
      "path": "entitlements",
      "value": {
        "value": "workspace-acccess",
        "value": "allow-cluster-create",
        "value": "databricks-sql-access"
      }
    }
  ],
  "schema": ["urn:ietf:params:scim:api:messages:2.0:PatchOp"]
}
{
  "Operations": [
    {
      "op": "add",
      "path": "entitlements",
      "value": {
        "value": "workspace-acccess",
        "value": "allow-cluster-create",
        "value": "databricks-sql-access"
      }
    }
  ],
  "schema": ["urn:ietf:params:scim:api:messages:2.0:PatchOp"]
}
SeeAuthentication for the Databricks CLI.
By usingcurl:
curl
curl -X POST \
-H 'Authorization: Bearer <access-token>' \
https://adb-1234567890123456.7.azuredatabricks.net/api/2.0/preview/scim/v2/ServicePrincipals \
-H 'Content-type: application/scim+json' \
-d @create-service-principal.json
curl -X POST \
-H 'Authorization: Bearer <access-token>' \
https://adb-1234567890123456.7.azuredatabricks.net/api/2.0/preview/scim/v2/ServicePrincipals \
-H 'Content-type: application/scim+json' \
-d @create-service-principal.json
create-service-principal.json:
create-service-principal.json
{
  "displayName": "My Service Principal",
  "applicationId": "12a34b56-789c-0d12-e3fa-b456789c0123",
  "entitlements": [
    {
      "value": "allow-cluster-create"
    }
  ],
  "schemas": ["urn:ietf:params:scim:schemas:core:2.0:ServicePrincipal"],
  "active": true
}
{
  "displayName": "My Service Principal",
  "applicationId": "12a34b56-789c-0d12-e3fa-b456789c0123",
  "entitlements": [
    {
      "value": "allow-cluster-create"
    }
  ],
  "schemas": ["urn:ietf:params:scim:schemas:core:2.0:ServicePrincipal"],
  "active": true
}
Skip ahead toWorkspace-level API access for service principals that are not Azure Databricks usersif either of the following are true:
The Azure Databricks REST API that you want to call requires workspace admin access and the service principal is a member of the workspace, but does not currently have admin access to the workspace.
The service principal has not already been added to the target Azure Databricks workspace.
Gather the following information.ParameterDescriptionMicrosoft Entra ID access tokenThe Microsoft Entra ID access token returned from the request inGet a Microsoft Entra ID access token with the Microsoft identity platform REST APIorGet a Microsoft Entra ID access token with the Azure CLI.
Gather the following information.
Use the Microsoft Entra ID access token along withcurlto call the Databricks REST API. For example:By using Databricks CLI version 0.205 or above (recommended):databricks clusters list -p <profile-name-that-references-azure-ad-access-token>SeeAuthentication for the Databricks CLI.By usingcurl:curl -X GET \
-H 'Authorization: Bearer <access-token>' \
https://<databricks-instance>/api/2.0/clusters/listReplace:<access-token>with the Microsoft Entra ID access token.<databricks-instance>with theper-workspace URLof your Azure Databricks deployment.GETand/api/2.0/clusters/listwith the appropriate HTTP operation and endpoint for the target Databricks REST API.For example:curl -X GET \
-H 'Authorization: Bearer <access-token>' \
https://adb-1234567890123456.7.azuredatabricks.net/api/2.0/clusters/list
Use the Microsoft Entra ID access token along withcurlto call the Databricks REST API. For example:
curl
By using Databricks CLI version 0.205 or above (recommended):
databricks clusters list -p <profile-name-that-references-azure-ad-access-token>
databricks clusters list -p <profile-name-that-references-azure-ad-access-token>
SeeAuthentication for the Databricks CLI.
By usingcurl:
curl
curl -X GET \
-H 'Authorization: Bearer <access-token>' \
https://<databricks-instance>/api/2.0/clusters/list
curl -X GET \
-H 'Authorization: Bearer <access-token>' \
https://<databricks-instance>/api/2.0/clusters/list
Replace:
<access-token>with the Microsoft Entra ID access token.
<access-token>
<databricks-instance>with theper-workspace URLof your Azure Databricks deployment.
<databricks-instance>
GETand/api/2.0/clusters/listwith the appropriate HTTP operation and endpoint for the target Databricks REST API.
GET
/api/2.0/clusters/list
For example:
curl -X GET \
-H 'Authorization: Bearer <access-token>' \
https://adb-1234567890123456.7.azuredatabricks.net/api/2.0/clusters/list
curl -X GET \
-H 'Authorization: Bearer <access-token>' \
https://adb-1234567890123456.7.azuredatabricks.net/api/2.0/clusters/list
Workspace-level API access for service principals that are not Azure Databricks users
Follow this procedure if any of the following are true:
The Azure Databricks REST API that you want to call requires workspace admin access and the service principal is a member of the workspace, but does not currently have admin access to the workspace.
The service principal has not already been added to the target Azure Databricks workspace.
Requirements:
The service principal requires the Contributor or Owner role on the target workspace resource in Azure.
Gather the following information:ParameterDescriptionTenant IDTheDirectory (tenant) IDfor the related application registered in Microsoft Entra ID inProvision a service principal in Azure portal.Client IDTheApplication (client) IDfor the related application registered in Microsoft Entra ID.Client secretTheValueof the client secret for the related application registered in Microsoft Entra ID, which you created inProvision a service principal in Azure portal.Microsoft Entra ID access tokenThe Microsoft Entra ID access token returned from the request inGet a Microsoft Entra ID access token with the Microsoft identity platform REST APIorGet a Microsoft Entra ID access token with the Azure CLI.Subscription IDThe ID (not the name) of the Azure subscription that is associated with the target Azure Databricks workspace. To get to this and the following information, seeOpen resources. To open the target resource, you can search on theAzure Databricksservice type and any other information in Azure that you know about the target Azure Databricks workspace.Resource group nameThe name of the Azure resource group that is associated with the target Azure Databricks workspace.Workspace nameThe name in Azure of the target Azure Databricks workspace.
Gather the following information:
Use some of the preceding information along withcurlto get a Microsoft Entra ID management endpoint access token.curl -X POST -H 'Content-Type: application/x-www-form-urlencoded' \
https://login.microsoftonline.com/<tenant-id>/oauth2/token \
-d 'client_id=<client-id>' \
-d 'grant_type=client_credentials' \
-d 'resource=https%3A%2F%2Fmanagement.core.windows.net%2F' \
-d 'client_secret=<client-secret>'Replace:<tenant-id>with the registered applicationâs tenant ID.<client-id>with the registered applicationâs client ID.<client-secret>with the registered applicationâs client secret value.Do not change the value of theresourceparameter. It represents the Microsoft Entra ID management endpoint (https://management.core.windows.net/, URL-encoded ashttps%3A%2F%2Fmanagement.core.windows.net%2F).For example:curl -X POST -H 'Content-Type: application/x-www-form-urlencoded' \
https://login.microsoftonline.com/a1bc2d34-5e67-8f89-01ab-c2345d6c78de/oauth2/token \
-d 'client_id=12a34b56-789c-0d12-e3fa-b456789c0123' \
-d 'grant_type=client_credentials' \
-d 'resource=https%3A%2F%2Fmanagement.core.windows.net%2F' \
-d 'client_secret=abc1D~Ef...2ghIJKlM3'The Microsoft Entra ID management endpoint access token is in theaccess_tokenvalue within the output of the call.
Use some of the preceding information along withcurlto get a Microsoft Entra ID management endpoint access token.
curl
curl -X POST -H 'Content-Type: application/x-www-form-urlencoded' \
https://login.microsoftonline.com/<tenant-id>/oauth2/token \
-d 'client_id=<client-id>' \
-d 'grant_type=client_credentials' \
-d 'resource=https%3A%2F%2Fmanagement.core.windows.net%2F' \
-d 'client_secret=<client-secret>'
curl -X POST -H 'Content-Type: application/x-www-form-urlencoded' \
https://login.microsoftonline.com/<tenant-id>/oauth2/token \
-d 'client_id=<client-id>' \
-d 'grant_type=client_credentials' \
-d 'resource=https%3A%2F%2Fmanagement.core.windows.net%2F' \
-d 'client_secret=<client-secret>'
Replace:
<tenant-id>with the registered applicationâs tenant ID.
<tenant-id>
<client-id>with the registered applicationâs client ID.
<client-id>
<client-secret>with the registered applicationâs client secret value.
<client-secret>
Do not change the value of theresourceparameter. It represents the Microsoft Entra ID management endpoint (https://management.core.windows.net/, URL-encoded ashttps%3A%2F%2Fmanagement.core.windows.net%2F).
resource
https://management.core.windows.net/
https%3A%2F%2Fmanagement.core.windows.net%2F
For example:
curl -X POST -H 'Content-Type: application/x-www-form-urlencoded' \
https://login.microsoftonline.com/a1bc2d34-5e67-8f89-01ab-c2345d6c78de/oauth2/token \
-d 'client_id=12a34b56-789c-0d12-e3fa-b456789c0123' \
-d 'grant_type=client_credentials' \
-d 'resource=https%3A%2F%2Fmanagement.core.windows.net%2F' \
-d 'client_secret=abc1D~Ef...2ghIJKlM3'
curl -X POST -H 'Content-Type: application/x-www-form-urlencoded' \
https://login.microsoftonline.com/a1bc2d34-5e67-8f89-01ab-c2345d6c78de/oauth2/token \
-d 'client_id=12a34b56-789c-0d12-e3fa-b456789c0123' \
-d 'grant_type=client_credentials' \
-d 'resource=https%3A%2F%2Fmanagement.core.windows.net%2F' \
-d 'client_secret=abc1D~Ef...2ghIJKlM3'
The Microsoft Entra ID management endpoint access token is in theaccess_tokenvalue within the output of the call.
access_token
Use the Microsoft Entra ID management endpoint access token along with the rest of the preceding information andcurlto call the Databricks REST API, for example:curl -X GET \
 -H 'Authorization: Bearer <access-token>' \
 -H 'X-Databricks-Azure-SP-Management-Token: <management-access-token>' \
 -H 'X-Databricks-Azure-Workspace-Resource-Id: /subscriptions/<subscription-id>/resourceGroups/<resource-group-name>/providers/Microsoft.Databricks/workspaces/<workspace-name>' \
 https://<databricks-instance>/api/2.0/clusters/listReplace:<access-token>with the Microsoft Entra ID access token.<management-access-token>with the Microsoft Entra ID management endpoint access token.<subscription-id>with the ID of the subscription that is associated with the target Azure Databricks workspace.<resource-group-name>with the name of the resource group that is associated with the target Azure Databricks workspace.<workspace-name>with the name of the target Azure Databricks workspace.<databricks-instance>with theper-workspace URLof your Azure Databricks deployment.GETand/api/2.0/clusters/listwith the appropriate HTTP operation and endpoint for the target Databricks REST API.For example:curl -X GET \
-H 'Authorization:Bearer <access-token>' \
-H 'X-Databricks-Azure-SP-Management-Token: abC1dE...ghIj23kl' \
-H 'X-Databricks-Azure-Workspace-Resource-Id: /subscriptions/12a345...bcd6789e/resourceGroups/my-resource-group/providers/Microsoft.Databricks/workspaces/my-workspace' \
https://adb-1234567890123456.7.azuredatabricks.net/api/2.0/clusters/listUpon authenticating to the workspace, the service principal becomes an Azure Databricks workspace admin and no longer needs the Contributor or Owner role to access the workspace.
Use the Microsoft Entra ID management endpoint access token along with the rest of the preceding information andcurlto call the Databricks REST API, for example:
curl
curl -X GET \
 -H 'Authorization: Bearer <access-token>' \
 -H 'X-Databricks-Azure-SP-Management-Token: <management-access-token>' \
 -H 'X-Databricks-Azure-Workspace-Resource-Id: /subscriptions/<subscription-id>/resourceGroups/<resource-group-name>/providers/Microsoft.Databricks/workspaces/<workspace-name>' \
 https://<databricks-instance>/api/2.0/clusters/list
curl -X GET \
 -H 'Authorization: Bearer <access-token>' \
 -H 'X-Databricks-Azure-SP-Management-Token: <management-access-token>' \
 -H 'X-Databricks-Azure-Workspace-Resource-Id: /subscriptions/<subscription-id>/resourceGroups/<resource-group-name>/providers/Microsoft.Databricks/workspaces/<workspace-name>' \
 https://<databricks-instance>/api/2.0/clusters/list
Replace:
<access-token>with the Microsoft Entra ID access token.<management-access-token>with the Microsoft Entra ID management endpoint access token.<subscription-id>with the ID of the subscription that is associated with the target Azure Databricks workspace.<resource-group-name>with the name of the resource group that is associated with the target Azure Databricks workspace.<workspace-name>with the name of the target Azure Databricks workspace.<databricks-instance>with theper-workspace URLof your Azure Databricks deployment.GETand/api/2.0/clusters/listwith the appropriate HTTP operation and endpoint for the target Databricks REST API.For example:curl -X GET \
-H 'Authorization:Bearer <access-token>' \
-H 'X-Databricks-Azure-SP-Management-Token: abC1dE...ghIj23kl' \
-H 'X-Databricks-Azure-Workspace-Resource-Id: /subscriptions/12a345...bcd6789e/resourceGroups/my-resource-group/providers/Microsoft.Databricks/workspaces/my-workspace' \
https://adb-1234567890123456.7.azuredatabricks.net/api/2.0/clusters/list
<access-token>with the Microsoft Entra ID access token.
<access-token>
<management-access-token>with the Microsoft Entra ID management endpoint access token.
<management-access-token>
<subscription-id>with the ID of the subscription that is associated with the target Azure Databricks workspace.
<subscription-id>
<resource-group-name>with the name of the resource group that is associated with the target Azure Databricks workspace.
<resource-group-name>
<workspace-name>with the name of the target Azure Databricks workspace.
<workspace-name>
<databricks-instance>with theper-workspace URLof your Azure Databricks deployment.
<databricks-instance>
GETand/api/2.0/clusters/listwith the appropriate HTTP operation and endpoint for the target Databricks REST API.
GET
/api/2.0/clusters/list
For example:
curl -X GET \
-H 'Authorization:Bearer <access-token>' \
-H 'X-Databricks-Azure-SP-Management-Token: abC1dE...ghIj23kl' \
-H 'X-Databricks-Azure-Workspace-Resource-Id: /subscriptions/12a345...bcd6789e/resourceGroups/my-resource-group/providers/Microsoft.Databricks/workspaces/my-workspace' \
https://adb-1234567890123456.7.azuredatabricks.net/api/2.0/clusters/list
curl -X GET \
-H 'Authorization:Bearer <access-token>' \
-H 'X-Databricks-Azure-SP-Management-Token: abC1dE...ghIj23kl' \
-H 'X-Databricks-Azure-Workspace-Resource-Id: /subscriptions/12a345...bcd6789e/resourceGroups/my-resource-group/providers/Microsoft.Databricks/workspaces/my-workspace' \
https://adb-1234567890123456.7.azuredatabricks.net/api/2.0/clusters/list
Upon authenticating to the workspace, the service principal becomes an Azure Databricks workspace admin and no longer needs the Contributor or Owner role to access the workspace.
Feedback
Was this page helpful?
Additional resources