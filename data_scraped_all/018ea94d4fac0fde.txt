Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
host.json reference for Azure Functions 2.x and later
Article
2024-05-16
41 contributors
In this article
Version 1
Version 2+
The host.json metadata file contains configuration options that affect all functions in a function app instance. This article lists the settings that are available starting with version 2.x of the Azure Functions runtime.
Note
This article is for Azure Functions 2.x and later versions.  For a reference of host.json in Functions 1.x, seehost.json reference for Azure Functions 1.x.
Other function app configuration options are managed depending on where the function app runs:
Deployed to Azure: in yourapplication settings
On your local computer: in thelocal.settings.jsonfile.
Configurations in host.json related to bindings are applied equally to each function in the function app.
You can alsooverride or apply settings per environmentusing application settings.
Sample host.json file
The following samplehost.jsonfile for version 2.x+ has all possible options specified (excluding any that are for internal use only).
{
    "version": "2.0",
    "aggregator": {
        "batchSize": 1000,
        "flushTimeout": "00:00:30"
    },
    "concurrency": { 
            "dynamicConcurrencyEnabled": true, 
            "snapshotPersistenceEnabled": true 
        },
    "extensions": {
        "blobs": {},
        "cosmosDb": {},
        "durableTask": {},
        "eventHubs": {},
        "http": {},
        "queues": {},
        "sendGrid": {},
        "serviceBus": {}
    },
    "extensionBundle": {
        "id": "Microsoft.Azure.Functions.ExtensionBundle",
        "version": "[4.0.0, 5.0.0)"
    },
    "functions": [ "QueueProcessor", "GitHubWebHook" ],
    "functionTimeout": "00:05:00",
    "healthMonitor": {
        "enabled": true,
        "healthCheckInterval": "00:00:10",
        "healthCheckWindow": "00:02:00",
        "healthCheckThreshold": 6,
        "counterThreshold": 0.80
    },
    "logging": {
        "fileLoggingMode": "debugOnly",
        "logLevel": {
          "Function.MyFunction": "Information",
          "default": "None"
        },
        "applicationInsights": {
            "samplingSettings": {
              "isEnabled": true,
              "maxTelemetryItemsPerSecond" : 20,
              "evaluationInterval": "01:00:00",
              "initialSamplingPercentage": 100.0, 
              "samplingPercentageIncreaseTimeout" : "00:00:01",
              "samplingPercentageDecreaseTimeout" : "00:00:01",
              "minSamplingPercentage": 0.1,
              "maxSamplingPercentage": 100.0,
              "movingAverageRatio": 1.0,
              "excludedTypes" : "Dependency;Event",
              "includedTypes" : "PageView;Trace"
            },
            "dependencyTrackingOptions": {
                "enableSqlCommandTextInstrumentation": true
            },
            "enableLiveMetrics": true,
            "enableDependencyTracking": true,
            "enablePerformanceCountersCollection": true,            
            "httpAutoCollectionOptions": {
                "enableHttpTriggerExtendedInfoCollection": true,
                "enableW3CDistributedTracing": true,
                "enableResponseHeaderInjection": true
            },
            "snapshotConfiguration": {
                "agentEndpoint": null,
                "captureSnapshotMemoryWeight": 0.5,
                "failedRequestLimit": 3,
                "handleUntrackedExceptions": true,
                "isEnabled": true,
                "isEnabledInDeveloperMode": false,
                "isEnabledWhenProfiling": true,
                "isExceptionSnappointsEnabled": false,
                "isLowPrioritySnapshotUploader": true,
                "maximumCollectionPlanSize": 50,
                "maximumSnapshotsRequired": 3,
                "problemCounterResetInterval": "24:00:00",
                "provideAnonymousTelemetry": true,
                "reconnectInterval": "00:15:00",
                "shadowCopyFolder": null,
                "shareUploaderProcess": true,
                "snapshotInLowPriorityThread": true,
                "snapshotsPerDayLimit": 30,
                "snapshotsPerTenMinutesLimit": 1,
                "tempFolder": null,
                "thresholdForSnapshotting": 1,
                "uploaderProxy": null
            }
        }
    },
    "managedDependency": {
        "enabled": true
    },
    "singleton": {
      "lockPeriod": "00:00:15",
      "listenerLockPeriod": "00:01:00",
      "listenerLockRecoveryPollingInterval": "00:01:00",
      "lockAcquisitionTimeout": "00:01:00",
      "lockAcquisitionPollingInterval": "00:00:03"
    },
    "telemetryMode": "OpenTelemetry",
    "watchDirectories": [ "Shared", "Test" ],
    "watchFiles": [ "myFile.txt" ]
}
{
    "version": "2.0",
    "aggregator": {
        "batchSize": 1000,
        "flushTimeout": "00:00:30"
    },
    "concurrency": { 
            "dynamicConcurrencyEnabled": true, 
            "snapshotPersistenceEnabled": true 
        },
    "extensions": {
        "blobs": {},
        "cosmosDb": {},
        "durableTask": {},
        "eventHubs": {},
        "http": {},
        "queues": {},
        "sendGrid": {},
        "serviceBus": {}
    },
    "extensionBundle": {
        "id": "Microsoft.Azure.Functions.ExtensionBundle",
        "version": "[4.0.0, 5.0.0)"
    },
    "functions": [ "QueueProcessor", "GitHubWebHook" ],
    "functionTimeout": "00:05:00",
    "healthMonitor": {
        "enabled": true,
        "healthCheckInterval": "00:00:10",
        "healthCheckWindow": "00:02:00",
        "healthCheckThreshold": 6,
        "counterThreshold": 0.80
    },
    "logging": {
        "fileLoggingMode": "debugOnly",
        "logLevel": {
          "Function.MyFunction": "Information",
          "default": "None"
        },
        "applicationInsights": {
            "samplingSettings": {
              "isEnabled": true,
              "maxTelemetryItemsPerSecond" : 20,
              "evaluationInterval": "01:00:00",
              "initialSamplingPercentage": 100.0, 
              "samplingPercentageIncreaseTimeout" : "00:00:01",
              "samplingPercentageDecreaseTimeout" : "00:00:01",
              "minSamplingPercentage": 0.1,
              "maxSamplingPercentage": 100.0,
              "movingAverageRatio": 1.0,
              "excludedTypes" : "Dependency;Event",
              "includedTypes" : "PageView;Trace"
            },
            "dependencyTrackingOptions": {
                "enableSqlCommandTextInstrumentation": true
            },
            "enableLiveMetrics": true,
            "enableDependencyTracking": true,
            "enablePerformanceCountersCollection": true,            
            "httpAutoCollectionOptions": {
                "enableHttpTriggerExtendedInfoCollection": true,
                "enableW3CDistributedTracing": true,
                "enableResponseHeaderInjection": true
            },
            "snapshotConfiguration": {
                "agentEndpoint": null,
                "captureSnapshotMemoryWeight": 0.5,
                "failedRequestLimit": 3,
                "handleUntrackedExceptions": true,
                "isEnabled": true,
                "isEnabledInDeveloperMode": false,
                "isEnabledWhenProfiling": true,
                "isExceptionSnappointsEnabled": false,
                "isLowPrioritySnapshotUploader": true,
                "maximumCollectionPlanSize": 50,
                "maximumSnapshotsRequired": 3,
                "problemCounterResetInterval": "24:00:00",
                "provideAnonymousTelemetry": true,
                "reconnectInterval": "00:15:00",
                "shadowCopyFolder": null,
                "shareUploaderProcess": true,
                "snapshotInLowPriorityThread": true,
                "snapshotsPerDayLimit": 30,
                "snapshotsPerTenMinutesLimit": 1,
                "tempFolder": null,
                "thresholdForSnapshotting": 1,
                "uploaderProxy": null
            }
        }
    },
    "managedDependency": {
        "enabled": true
    },
    "singleton": {
      "lockPeriod": "00:00:15",
      "listenerLockPeriod": "00:01:00",
      "listenerLockRecoveryPollingInterval": "00:01:00",
      "lockAcquisitionTimeout": "00:01:00",
      "lockAcquisitionPollingInterval": "00:00:03"
    },
    "telemetryMode": "OpenTelemetry",
    "watchDirectories": [ "Shared", "Test" ],
    "watchFiles": [ "myFile.txt" ]
}
The following sections of this article explain each top-level property. All are optional unless otherwise indicated.
aggregator
Specifies how many function invocations are aggregated whencalculating metrics for Application Insights.
{
    "aggregator": {
        "batchSize": 1000,
        "flushTimeout": "00:00:30"
    }
}
{
    "aggregator": {
        "batchSize": 1000,
        "flushTimeout": "00:00:30"
    }
}
Function invocations are aggregated when the first of the two limits are reached.
applicationInsights
This setting is a child oflogging.
Controls options for Application Insights, includingsampling options.
For the complete JSON structure, see the earlierexample host.json file.
Note
Log sampling may cause some executions to not show up in the Application Insights monitor blade. To avoid log sampling, addexcludedTypes: "Request"to thesamplingSettingsvalue.
excludedTypes: "Request"
samplingSettings
applicationInsights.samplingSettings
For more information about these settings, seeSampling in Application Insights.
Dependency
Event
Exception
PageView
Request
Trace
excludedTypes
Dependency
Event
Exception
PageView
Request
Trace
applicationInsights.httpAutoCollectionOptions
enableHttpTriggerExtendedInfoCollection
enableHttpTriggerExtendedInfoCollection
enableHttpTriggerExtendedInfoCollection
enableHttpTriggerExtendedInfoCollection
applicationInsights.dependencyTrackingOptions
applicationInsights.snapshotConfiguration
For more information on snapshots, seeDebug snapshots on exceptions in .NET appsandTroubleshoot problems enabling Application Insights Snapshot Debugger or viewing snapshots.
problemCounterResetInterval
thresholdForSnapshotting
maximumSnapshotsRequired
System.Net.WebRequest.DefaultWebProxy
blobs
Configuration settings can be found inStorage blob triggers and bindings.
console
This setting is a child oflogging. It controls the console logging when not in debugging mode.
{
    "logging": {
    ...
        "console": {
          "isEnabled": false,
          "DisableColors": true
        },
    ...
    }
}
{
    "logging": {
    ...
        "console": {
          "isEnabled": false,
          "DisableColors": true
        },
    ...
    }
}
Azure Cosmos DB
Configuration settings can be found inAzure Cosmos DB triggers and bindings.
customHandler
Configuration settings for a custom handler. For more information, seeAzure Functions custom handlers.
"customHandler": {
  "description": {
    "defaultExecutablePath": "server",
    "workingDirectory": "handler",
    "arguments": [ "--port", "%FUNCTIONS_CUSTOMHANDLER_PORT%" ]
  },
  "enableForwardingHttpRequest": false
}
"customHandler": {
  "description": {
    "defaultExecutablePath": "server",
    "workingDirectory": "handler",
    "arguments": [ "--port", "%FUNCTIONS_CUSTOMHANDLER_PORT%" ]
  },
  "enableForwardingHttpRequest": false
}
durableTask
Configuration setting can be found inbindings for Durable Functions.
concurrency
Enables dynamic concurrency for specific bindings in your function app. For more information, seeDynamic concurrency.
{ 
        "concurrency": { 
            "dynamicConcurrencyEnabled": true, 
            "snapshotPersistenceEnabled": true 
        } 
    }
{ 
        "concurrency": { 
            "dynamicConcurrencyEnabled": true, 
            "snapshotPersistenceEnabled": true 
        } 
    }
eventHub
Configuration settings can be found inEvent Hub triggers and bindings.
extensions
Property that returns an object that contains all of the binding-specific settings, such ashttpandeventHub.
extensionBundle
Extension bundles let you add a compatible set of Functions binding extensions to your function app. To learn more, seeExtension bundles for local development.
{
    "version": "2.0",
    "extensionBundle": {
        "id": "Microsoft.Azure.Functions.ExtensionBundle",
        "version": "[4.0.0, 5.0.0)"
    }
}
{
    "version": "2.0",
    "extensionBundle": {
        "id": "Microsoft.Azure.Functions.ExtensionBundle",
        "version": "[4.0.0, 5.0.0)"
    }
}
The following properties are available inextensionBundle:
extensionBundle
id
version
version
[4.0.0, 5.0.0)
functions
A list of functions that the job host runs. An empty array means run all functions. Intended for use only whenrunning locally. In function apps in Azure, you should instead follow the steps inHow to disable functions in Azure Functionsto disable specific functions rather than using this setting.
{
    "functions": [ "QueueProcessor", "GitHubWebHook" ]
}
{
    "functions": [ "QueueProcessor", "GitHubWebHook" ]
}
functionTimeout
Indicates the timeout duration for all function executions. It follows the timespan string format. A value of-1indicates unbounded execution, but keeping a fixed upper bound is recommended.
-1
{
    "functionTimeout": "00:05:00"
}
{
    "functionTimeout": "00:05:00"
}
For more information on the default and maximum values for specific plans, seeFunction app timeout duration.
healthMonitor
Configuration settings forHost health monitor.
{
    "healthMonitor": {
        "enabled": true,
        "healthCheckInterval": "00:00:10",
        "healthCheckWindow": "00:02:00",
        "healthCheckThreshold": 6,
        "counterThreshold": 0.80
    }
}
{
    "healthMonitor": {
        "enabled": true,
        "healthCheckInterval": "00:00:10",
        "healthCheckWindow": "00:02:00",
        "healthCheckThreshold": 6,
        "counterThreshold": 0.80
    }
}
healthCheckThreshold
http
Configuration settings can be found inhttp triggers and bindings.
logging
Controls the logging behaviors of the function app, including Application Insights.
"logging": {
    "fileLoggingMode": "debugOnly",
    "logLevel": {
      "Function.MyFunction": "Information",
      "default": "None"
    },
    "console": {
        ...
    },
    "applicationInsights": {
        ...
    }
}
"logging": {
    "fileLoggingMode": "debugOnly",
    "logLevel": {
      "Function.MyFunction": "Information",
      "default": "None"
    },
    "console": {
        ...
    },
    "applicationInsights": {
        ...
    }
}
never
always
debugOnly
always
debugOnly
managedDependency
Managed dependency is a feature that is currently only supported with PowerShell based functions. It enables dependencies to be automatically managed by the service. When theenabledproperty is set totrue, therequirements.psd1file is processed. Dependencies are updated when any minor versions are released. For more information, seeManaged dependencyin the PowerShell article.
enabled
true
requirements.psd1
{
    "managedDependency": {
        "enabled": true
    }
}
{
    "managedDependency": {
        "enabled": true
    }
}
queues
Configuration settings can be found inStorage queue triggers and bindings.
sendGrid
Configuration setting can be found inSendGrid triggers and bindings.
serviceBus
Configuration setting can be found inService Bus triggers and bindings.
singleton
Configuration settings for Singleton lock behavior. For more information, seeGitHub issue about singleton support.
{
    "singleton": {
      "lockPeriod": "00:00:15",
      "listenerLockPeriod": "00:01:00",
      "listenerLockRecoveryPollingInterval": "00:01:00",
      "lockAcquisitionTimeout": "00:01:00",
      "lockAcquisitionPollingInterval": "00:00:03"
    }
}
{
    "singleton": {
      "lockPeriod": "00:00:15",
      "listenerLockPeriod": "00:01:00",
      "listenerLockRecoveryPollingInterval": "00:01:00",
      "lockAcquisitionTimeout": "00:01:00",
      "lockAcquisitionPollingInterval": "00:00:03"
    }
}
telemetryMode
This feature is currently in preview.
Used to enable output of logs and traces in an OpenTelemetry output format to one or more endpoints that support OpenTelemetry. When this setting is set toOpenTelemetry, OpenTelemetry output is used. By default without this setting, all logs, traces, and events are sent to Application Insights using the standard outputs. For more information, seeUse OpenTelemetry with Azure Functions.
OpenTelemetry
version
This value indicates the schema version of host.json. The version string"version": "2.0"is required for a function app that targets the v2 runtime, or a later version. There are no host.json schema changes between v2 and v3.
"version": "2.0"
watchDirectories
A set ofshared code directoriesthat should be monitored for changes.  Ensures that when code in these directories is changed, the changes are picked up by your functions.
{
    "watchDirectories": [ "Shared" ]
}
{
    "watchDirectories": [ "Shared" ]
}
watchFiles
An array of one or more names of files that are monitored for changes that require your app to restart.  This guarantees that when code in these files is changed, the updates are picked up by your functions.
{
    "watchFiles": [ "myFile.txt" ]
}
{
    "watchFiles": [ "myFile.txt" ]
}
Override host.json values
There may be instances where you wish to configure or modify specific settings in a host.json file for a specific environment, without changing the host.json file itself. You can override specific host.json values by creating an equivalent value as an application setting. When the runtime finds an application setting in the formatAzureFunctionsJobHost__path__to__setting, it overrides the equivalent host.json setting located atpath.to.settingin the JSON. When expressed as an application setting, the dot (.) used to indicate JSON hierarchy is replaced by a double underscore (__).
AzureFunctionsJobHost__path__to__setting
path.to.setting
.
__
For example, say that you wanted to disable Application Insight sampling when running locally. If you changed the local host.json file to disable Application Insights, this change might get pushed to your production app during deployment. The safer way to do this is to instead create an application setting as"AzureFunctionsJobHost__logging__applicationInsights__samplingSettings__isEnabled":"false"in thelocal.settings.jsonfile. You can see this in the followinglocal.settings.jsonfile, which doesn't get published:
"AzureFunctionsJobHost__logging__applicationInsights__samplingSettings__isEnabled":"false"
local.settings.json
local.settings.json
{
    "IsEncrypted": false,
    "Values": {
        "AzureWebJobsStorage": "{storage-account-connection-string}",
        "FUNCTIONS_WORKER_RUNTIME": "{language-runtime}",
        "AzureFunctionsJobHost__logging__applicationInsights__samplingSettings__isEnabled":"false"
    }
}
{
    "IsEncrypted": false,
    "Values": {
        "AzureWebJobsStorage": "{storage-account-connection-string}",
        "FUNCTIONS_WORKER_RUNTIME": "{language-runtime}",
        "AzureFunctionsJobHost__logging__applicationInsights__samplingSettings__isEnabled":"false"
    }
}
Overriding host.json settings using environment variables follows the ASP.NET Core naming conventions. When the element structure includes an array, the numeric array index should be treated as an additional element name in this path. For more information, seeNaming of environment variables.
Next steps
Learn how to update the host.json file
See global settings in environment variables
Feedback
Was this page helpful?
Additional resources