Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Azure Pipelines task reference
Article
2025-03-24
2 contributors
In this article
A task performs an action in a pipeline. For example, a task can build an app, interact with Azure resources, install a tool, or run a test. Tasks are the building blocks for defining automation in a pipeline.
The articles in this section describe the built-in tasks for Azure Pipelines and specify the semantics for attributes
that hold special meaning for each task.
Please refer to theYAML Reference forsteps.taskfor details on
the general attributes supported by tasks.
For how-tos and tutorials about authoring pipelines using tasks, including creating custom tasks, custom extensions, and finding tasks on the Visual Studio Marketplace, seeTasks conceptsandAzure Pipelines documentation.
Important

To view the task reference for tasks available for your platform, make sure that you select the correct Azure DevOps version from the version selector which is located above the table of contents. Feature support differs depending on whether you are working from Azure DevOps Services or an on-premises version of Azure DevOps Server.To learn which on-premises version you are using, seeLook up your Azure DevOps platform and version.
Build tasks
Deploy tasks
Package tasks
conda
Test tasks
Tool tasks
Utility tasks
Build tasks
Deploy tasks
Package tasks
conda
Test tasks
Tool tasks
Utility tasks
Build tasks
Deploy tasks
Package tasks
conda
Test tasks
Tool tasks
Utility tasks
Build tasks
Deploy tasks
Package tasks
conda
Test tasks
Tool tasks
Utility tasks
Build tasks
Deploy tasks
Package tasks
conda
Test tasks
Tool tasks
Utility tasks
Open source
These tasks are open sourceon GitHub. Feedback and contributions are welcome. SeePipeline task changelogfor a list of task changes, including a historical record of task updates.
FAQ
What are task input aliases?
Inputs to a task are identified by alabel,name, and may include one or more optionalaliases. The following example is an excerpt from thesource codefor theKnown Hosts Entryinput of theInstallSSHKey@0task.
label
name
aliases
{
    "name": "hostName",
    "aliases": [
        "knownHostsEntry"
    ],
    "label": "Known Hosts Entry"
    ...
}
{
    "name": "hostName",
    "aliases": [
        "knownHostsEntry"
    ],
    "label": "Known Hosts Entry"
    ...
}
Before YAML pipelines were introduced in 2019, pipelines were created and edited using a UI based pipeline editor, and only thelabelwas used by pipeline authors to reference a task input.
label

When YAML pipelines were introduced in 2019, pipeline authors using YAML started using the task inputnameto refer to a task input. In some cases, the task input names weren't descriptive, soaliaseswere added to provide additional descriptive names for task inputs.
name
aliases
For example, theInstallSSHKey@0task has aKnown Hosts Entryinput namedhostNamethat expects an entry from aknown_hostsfile. TheKnown Hosts Entrylabel in the classic pipeline designer makes this clear, but it isn't as clear when using thehostNamename in a YAML pipeline. Task input aliases were introduced to allow task authors to provide decriptive names for their previously authored tasks, and for theInstallSSHKey@0task, aknownHostsEntryalias was added, while keeping the originalhostNamename for compatibility with existing pipelines using that name.
InstallSSHKey@0
hostName
hostName
InstallSSHKey@0
knownHostsEntry
hostName
Any items in a task input'saliasesare interchangeable with thenamein a YAML pipeline. The following two YAML snippets are functionally identical, with the first example using theknownHostsEntryalias and the second example usinghostName.
aliases
name
knownHostsEntry
hostName
- task: InstallSSHKey@0
  inputs:
    # Using knownHostsEntry alias
    knownHostsEntry: 'sample known hosts entry line'
    # Remainder of task inputs omitted

- task: InstallSSHKey@0
  inputs:
    # Using hostName name
    hostName: 'sample known hosts entry line'
    # Remainder of task inputs omitted
- task: InstallSSHKey@0
  inputs:
    # Using knownHostsEntry alias
    knownHostsEntry: 'sample known hosts entry line'
    # Remainder of task inputs omitted

- task: InstallSSHKey@0
  inputs:
    # Using hostName name
    hostName: 'sample known hosts entry line'
    # Remainder of task inputs omitted
Starting with Azure DevOps Server 2019.1, theYAML pipeline editor was introduced, which provides an intellisense type functionality.
The YAML pipeline editor uses theYamlschema - GetREST API to retrieve the schema used for validation in the editor. If a task input has an alias, the schema promotes the alias to the primary YAML name for the task input, and the alias is suggested by the intellisense.

The following example is theKnown Hosts Entrytask input for theInstallSSHKey@0task from the YAML schema, withknownHostsEntrylisted in the name position andhostNamein thealiasescollection.
InstallSSHKey@0
knownHostsEntry
hostName
aliases
"properties": {
    "knownHostsEntry": {
      "type": "string",
      "description": "Known Hosts Entry",
      "ignoreCase": "key",
      "aliases": [
        "hostName"
      ]
    },
"properties": {
    "knownHostsEntry": {
      "type": "string",
      "description": "Known Hosts Entry",
      "ignoreCase": "key",
      "aliases": [
        "hostName"
      ]
    },
Because the intellisense in the YAML pipeline editor displaysknownHostsEntry, and the YAML generated by thetask assistantusesknownHostsEntryin the generated YAML, the task reference displays thealiasfrom the task source code as the YAML name for a task input. If a task has more than one alias (there are a few that have two aliases), the first alias is used as the name.
knownHostsEntry
knownHostsEntry
alias
Why did the task reference change?
The Azure Pipelines tasks reference documentation moved to its current location to support the following improvements.
Task articles are generated using the task source code from theAzure Pipelines tasks open source repository.
Task input names and aliases are generated from the task source so they are always up to date.
YAML syntax blocks are generated from the task source so they are up to date.
Supports community contributions with integrated user content such as enhanced task input descriptions, remarks and examples.
Provides task coverage for all supported Azure DevOps versions.
Updated every sprint to cover the latest updates.
To contribute, seeContributing to the tasks content.
Where can I learn step-by-step how to build my app?
Build your app
Can I add my own build tasks?
Yes:Add a build task
What are installer tasks?
To learn more about tool installer tasks, seeTool installers.
Feedback
Was this page helpful?
Additional resources