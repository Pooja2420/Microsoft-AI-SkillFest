Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Analyze APIs in your API center - Microsoft managed
Article
2025-04-07
2 contributors
In this article
Your organization'sAPI centerincludes built-in, Microsoft-managed linting capabilities (preview) to analyze API definitions for adherence to organizational style rules, generating both individual and summary reports. API analysis identifies and helps you correct common errors and inconsistencies in your API definitions.
With API analysis:
Azure API Center automatically analyzes your API definitions whenever you add or update an API definition. API definitions are linted by default with aspectral:oas ruleset(API style guide).
API analysis reports are generated in the Azure portal, showing how your API definitions conform to the style guide.
Use analysis profiles to specify the ruleset and filter conditions for the APIs that are analyzed. Customize a profile's ruleset using the Azure API Center extension for Visual Studio Code.
Important
If you prefer, you can enableself-managedlinting and analysis using a custom Azure function, overriding the built-in capabilities.Disable any function used for self-managed linting before using managed API analysis.
Limitations
Currently, only OpenAPI and AsyncAPI specification documents in JSON or YAML format are analyzed.
There arelimitsfor the number of analysis profiles and the maximum number of API definitions analyzed. Analysis can take a few minutes to up to 24 hours to complete.
Prerequisites
An API center in your Azure subscription. If you haven't created one already, seeQuickstart: Create your API center.
For customizing the ruleset,Visual Studio Codeand the following Visual Studio Code extensions:Azure API Center extension for Visual Studio CodeSpectral extension for Visual Studio Code
Azure API Center extension for Visual Studio Code
Spectral extension for Visual Studio Code
View API analysis reports
View an analysis summary and the analysis reports for your API definitions in the Azure portal. After API definitions are analyzed, the reports list errors, warnings, and information based on the configured API style guide.
In the API analysis report, also review the ruleset that was used for the analysis and the history of linting passes.
To view an analysis summary in your API center:
In the portal, navigate to your API center.
In the portal, navigate to your API center.
In the left-hand menu, underGovernance, selectAPI Analysis. The summary appears.
In the left-hand menu, underGovernance, selectAPI Analysis. The summary appears.

Optionally select the API Analysis Report icon for an API definition. The definition's API analysis report appears, as shown in the following screenshot.TipYou can also view the API analysis report by selectingAnalysisfrom the API definition's menu bar.
Optionally select the API Analysis Report icon for an API definition. The definition's API analysis report appears, as shown in the following screenshot.

Tip
You can also view the API analysis report by selectingAnalysisfrom the API definition's menu bar.
Manage analysis profiles
Azure API Center usesanalysis profilesfor linting and analyzing APIs. An analysis profile specifies a ruleset and optionally filter conditions for APIs that are analyzed. The default analysis profile applies thespectral:oasruleset to all OpenAPI and AsyncAPI definitions.
spectral:oas
You can customize the ruleset and define filter conditions in the default profile, or you can create a new profile. For example, you might want to use one profile for APIs that are in development and a different one for APIs that are in production.
Note
In the Standard plan of API Center, you can create up to 3 analysis profiles. Only a single profile is supported in the Free plan.
To create an analysis profile:
In the Azure portal, navigate to your API center.
In the left-hand menu, underGovernance, selectAPI Analysis>Manage analysis profiles>+ Create analysis profile.
In theCreate new analysis profilepane, enter aNameandDescriptionfor the profile.
InRuleset, the analyzer type (linting engine) for the ruleset appears. Currently only Spectral is supported.
UnderDefine filter conditions, add one or more filter conditions for API definitions that the profile is applied to.
SelectCreate.

The profile is created and a ruleset scaffold is created. To view the current ruleset, select the profile, and in the context (...) menu, selectView the ruleset.
Continue to the following sections to customize the ruleset.
Customize the profile's ruleset
Use the Visual Studio Code extension for Azure API Center to customize a profile's ruleset. After customizing the ruleset and testing it locally, you can deploy it back to your API center.
In Visual Studio Code, select the Azure API Center icon from the Activity Bar.
In the API Center pane, expand the API center resource you are working with, and expandProfiles.
Expand the profile you want to modify, and selectruleset.yaml.
ruleset.yaml
Modify or replace the content as needed.
Save your changes toruleset.yaml.
ruleset.yaml
Test ruleset locally
Before deploying the custom ruleset to your API center, validate it locally. The Azure API Center extension for Visual Studio Code provides integrated support for API specification linting with Spectral.
In Visual Studio Code, use theCtrl+Shift+Pkeyboard shortcut to open the Command Palette.
In Visual Studio Code, use theCtrl+Shift+Pkeyboard shortcut to open the Command Palette.
TypeAzure API Center: Set active API Style Guideand hitEnter.
TypeAzure API Center: Set active API Style Guideand hitEnter.
ChooseSelect Local Fileand specify theruleset.yamlfile that you customized. HitEnter.This step makes the custom ruleset the active API style guide for local linting.
ChooseSelect Local Fileand specify theruleset.yamlfile that you customized. HitEnter.
ruleset.yaml
This step makes the custom ruleset the active API style guide for local linting.
Now, when you open an OpenAPI-based API definition file, a local linting operation is automatically triggered in Visual Studio Code. Results are displayed inline in the editor and in theProblemswindow (View > ProblemsorCtrl+Shift+M).
Tip
API developers in your organization can also use this local linting capability to help improve their API definitions before registering APIs in your API center.

Review the linting results. Make any necessary adjustments to the ruleset and continue to test it locally until it performs the way you want.
Deploy ruleset to your API center
To deploy the custom ruleset to your API center:
In Visual Studio Code, select the Azure API Center icon from the Activity Bar.
In the API Center pane, expand the API center resource in which you customized the ruleset.
ExpandProfiles.
Right-click the profile in which you customized the ruleset, and selectDeploy Rules to API Center.
A message notifies you after the rules are successfully deployed to your API center. The linting engine uses the updated ruleset to analyze API definitions in the profile.
To see the results of linting with the updated ruleset, view the API analysis reports in the portal.
Related content
To learn more about the default built-in ruleset, see theSpectral GitHub repo.
Enable API analysis in your API center - self-managed
Feedback
Was this page helpful?
Additional resources