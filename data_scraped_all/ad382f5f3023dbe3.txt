Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Schedule and run recurring workflows with the Recurrence trigger in Azure Logic Apps
Article
2025-01-27
10 contributors
In this article
Applies to:Azure Logic Apps (Consumption + Standard)
To start and run your workflow on a schedule, you can use the genericRecurrencetrigger as the first step. You can set a date, time, and time zone for starting the workflow and a recurrence for repeating that workflow. The following list includes some patterns that this trigger supports along with more advanced recurrences and complex schedules:
Run at a specific date and time, then repeat everynnumber of seconds, minutes, hours, days, weeks, or months.
Run at a specific date and time, then repeat everynnumber of seconds, minutes, hours, days, weeks, or months.
Run immediately and repeat everynnumber of seconds, minutes, hours, days, weeks, or months.
Run immediately and repeat everynnumber of seconds, minutes, hours, days, weeks, or months.
Run immediately and repeat daily at one or more specific times, such as 8:00 AM and 5:00 PM.
Run immediately and repeat daily at one or more specific times, such as 8:00 AM and 5:00 PM.
Run immediately and repeat weekly on specific days, such as Saturday and Sunday.
Run immediately and repeat weekly on specific days, such as Saturday and Sunday.
Run immediately and repeat weekly on specific days and times, such as Monday through Friday at 8:00 AM and 5:00 PM.
Run immediately and repeat weekly on specific days and times, such as Monday through Friday at 8:00 AM and 5:00 PM.
Note
Advanced scheduling options, such asAt these hoursandAt these days, are available and
work only with built-in polling triggers, such as theRecurrenceandSliding Windowtriggers,
which directly run with the Azure Logic Apps runtime. For connectors that are Microsoft-managed,
hosted, and run in Azure, polling triggers calculate the next recurrence by using only theIntervalandFrequencyvalues, not the advanced scheduling options.
TheRecurrencetrigger isn't associated with any specific service, so you can use the trigger with almost any workflow, such asConsumption logic app workflows and Standard logic appstatefulworkflows. This trigger is currently unavailable forStandard logic appstatelessworkflows.
TheRecurrencetrigger is part of the built-in Schedule connector and runs natively on the Azure Logic Apps runtime. For more information about the built-in Schedule triggers and actions, seeSchedule and run recurring automated, tasks, and workflows with Azure Logic Apps.
Prerequisites
An Azure account and subscription. If you don't have a subscription,sign up for a free Azure account.
An Azure account and subscription. If you don't have a subscription,sign up for a free Azure account.
AConsumption or Standard logic app resourcewith a blank workflow.NoteIf you created a Standard logic app workflow, make sure to create astatefulworkflow.
TheRecurrencetrigger is currently unavailable for stateless workflows.
AConsumption or Standard logic app resourcewith a blank workflow.
Note
If you created a Standard logic app workflow, make sure to create astatefulworkflow.
TheRecurrencetrigger is currently unavailable for stateless workflows.

Add the Recurrence trigger
Based on whether your workflow isConsumption or Standard, follow the corresponding steps:
Consumption
Standard
In theAzure portal, open your logic app resource and blank workflow.
In theAzure portal, open your logic app resource and blank workflow.
Follow these general steps to add theSchedulebuilt-in trigger namedRecurrence.
Follow these general steps to add theSchedulebuilt-in trigger namedRecurrence.
Set the interval and frequency for the recurrence. In this example, set these properties to run your workflow every week, for example:PropertyJSON nameRequiredTypeDescriptionIntervalintervalYesIntegerA positive integer that describes how often the workflow runs based on the frequency. Here are the minimum and maximum intervals:- Month: 1-16 months- Week: 1-71 weeks- Day: 1-500 days- Hour: 1-12,000 hours- Minute: 1-72,000 minutes- Second: 1-9,999,999 secondsFor example, if the interval is 6, and the frequency is "Month", then the recurrence is every 6 months.FrequencyfrequencyYesStringThe unit of time for the recurrence:Second,Minute,Hour,Day,Week, orMonthImportant: If you select theDay,Week, orMonthfrequency, and you specify a future start date and time, make sure that you set up the recurrence in advance. Otherwise, the workflow might skip the first recurrence.-Day: Set up the daily recurrence at least 24 hours in advance.-Week: Set up the weekly recurrence at least 7 days in advance.-Month: Set up the monthly recurrence at least one month in advance.Time ZonetimeZoneNoStringApplies only when you specify a start time because this trigger doesn't accept aUTC offset. Select the time zone that you want to apply. For more information, seeDefault Time Zones.Start TimestartTimeNoStringProvide a start date and time, which has a maximum of 49 years in the future and must follow theISO 8601 date time specificationinUTC date time format, but without aUTC offset:YYYY-MM-DDThh:mm:ss if you select a time zone-or-YYYY-MM-DDThh:mm:ssZ if you don't select a time zoneSo for example, if you want September 18, 2024 at 2:00 PM, then specify "2024-09-18T8:00:00" and select a time zone such as Pacific Standard Time. Or, specify "2024-09-18T8:00:00Z" without a time zone.Important:If you don't select a time zone, you must add the letter "Z" at the end without any spaces. This "Z" signifies a UTC time format with aUTC offset. If you select a time zone value, you don't need to add a "Z" to the end of yourStart timevalue. If you do, Azure Logic Apps ignores the time zone value because the "Z" signifies a UTC time format.For simple schedules, the start time is the first occurrence, while for complex schedules, the trigger doesn't fire any sooner than the start time.What are the ways that I can use the start date and time?The following properties are available, based on whether you selectWeekorDay:PropertyJSON nameRequiredTypeDescriptionOn These DaysweekDaysNoString or string arrayIf you selectWeek, you can select one or more days when you want to run the workflow:Monday,Tuesday,Wednesday,Thursday,Friday,Saturday, andSundayAt These HourshoursNoInteger or integer arrayIf you selectDayorWeek, you can select one or more integers from 0 to 23 as the hours of the day for when you want to run the workflow. For example, if you specify10,12, and14, you get 10 AM, 12 PM, and 2 PM for the hours of the day.Note: By default, the minutes of the day are calculated based on when the recurrence starts. To set specific minutes of the day, for example, 10:00 AM, 12:00 PM, and 2:00 PM, specify those values by using the property namedAt these minutes.At These MinutesminutesNoInteger or integer arrayIf you selectDayorWeek, you can select one or more integers from 0 to 59 as the minutes of the hour when you want to run the workflow.For example, you can specify30as the minute mark and using the previous example for hours of the day, you get 10:30 AM, 12:30 PM, and 2:30 PM.Note: Sometimes, the timestamp for the triggered run might vary up to 1 minute from the scheduled time. If you need to pass the timestamp exactly as scheduled to subsequent actions, you can use template expressions to change the timestamp accordingly. For more information, seeDate and time functions for expressions.
Set the interval and frequency for the recurrence. In this example, set these properties to run your workflow every week, for example:

interval
frequency
timeZone
startTime
The following properties are available, based on whether you selectWeekorDay:
weekDays
hours
minutes
Review the following considerations when you use theRecurrencetrigger:If you don't specify a specificstart date and time, the first recurrence runs immediately when you save the workflow or deploy the logic app resource, despite your trigger's recurrence setup. To avoid this behavior, provide a start date and time for when you want the first recurrence to run.If you don't specify any other advanced scheduling options, such as specific times to run future recurrences, those recurrences are based on the last run time. As a result, the start times for those recurrences might drift due to factors such as latency during storage calls.To make sure that your workflow doesn't miss a recurrence, especially when the frequency is in days or longer, try the following options:Provide a start date and time for the recurrence and the specific times to run subsequent recurrences. You can use the properties namedAt these hoursandAt these minutes, which are available only for theDayandWeekfrequencies.For Consumption logic app workflows, use theSliding Window trigger, rather than theRecurrencetrigger.If you deploy a disabled Consumption workflow that has aRecurrencetrigger using an ARM template, the trigger instantly fires when you enable the workflow unless you set theStart timeparameter before deployment.For example, suppose that today is Wednesday, September 4, 2024. The followingRecurrencetrigger doesn't fireany soonerthan the specified start date and time, which is Wednesday, September 18, 2024 at 8:00 AM Pacific Time. However, the recurrence schedule is set for 10:30 AM, 12:30 PM, and 2:30 PM on Mondays only. The first time that the trigger fires and creates a workflow instance is on Monday at 10:30 AM. To learn more about how start times work, see thesestart time examples.Future runs happen at 12:30 PM and 2:30 PM on the same day. Each recurrence creates their own workflow instance. After that, the entire schedule repeats all over again next Monday.What are some other example occurrences?NoteThe trigger shows a preview for your specified recurrence only when you selectDayorWeekas the frequency.
Review the following considerations when you use theRecurrencetrigger:
If you don't specify a specificstart date and time, the first recurrence runs immediately when you save the workflow or deploy the logic app resource, despite your trigger's recurrence setup. To avoid this behavior, provide a start date and time for when you want the first recurrence to run.
If you don't specify a specificstart date and time, the first recurrence runs immediately when you save the workflow or deploy the logic app resource, despite your trigger's recurrence setup. To avoid this behavior, provide a start date and time for when you want the first recurrence to run.
If you don't specify any other advanced scheduling options, such as specific times to run future recurrences, those recurrences are based on the last run time. As a result, the start times for those recurrences might drift due to factors such as latency during storage calls.
If you don't specify any other advanced scheduling options, such as specific times to run future recurrences, those recurrences are based on the last run time. As a result, the start times for those recurrences might drift due to factors such as latency during storage calls.
To make sure that your workflow doesn't miss a recurrence, especially when the frequency is in days or longer, try the following options:Provide a start date and time for the recurrence and the specific times to run subsequent recurrences. You can use the properties namedAt these hoursandAt these minutes, which are available only for theDayandWeekfrequencies.For Consumption logic app workflows, use theSliding Window trigger, rather than theRecurrencetrigger.
To make sure that your workflow doesn't miss a recurrence, especially when the frequency is in days or longer, try the following options:
Provide a start date and time for the recurrence and the specific times to run subsequent recurrences. You can use the properties namedAt these hoursandAt these minutes, which are available only for theDayandWeekfrequencies.
Provide a start date and time for the recurrence and the specific times to run subsequent recurrences. You can use the properties namedAt these hoursandAt these minutes, which are available only for theDayandWeekfrequencies.
For Consumption logic app workflows, use theSliding Window trigger, rather than theRecurrencetrigger.
For Consumption logic app workflows, use theSliding Window trigger, rather than theRecurrencetrigger.
If you deploy a disabled Consumption workflow that has aRecurrencetrigger using an ARM template, the trigger instantly fires when you enable the workflow unless you set theStart timeparameter before deployment.
If you deploy a disabled Consumption workflow that has aRecurrencetrigger using an ARM template, the trigger instantly fires when you enable the workflow unless you set theStart timeparameter before deployment.
For example, suppose that today is Wednesday, September 4, 2024. The followingRecurrencetrigger doesn't fireany soonerthan the specified start date and time, which is Wednesday, September 18, 2024 at 8:00 AM Pacific Time. However, the recurrence schedule is set for 10:30 AM, 12:30 PM, and 2:30 PM on Mondays only. The first time that the trigger fires and creates a workflow instance is on Monday at 10:30 AM. To learn more about how start times work, see thesestart time examples.
Future runs happen at 12:30 PM and 2:30 PM on the same day. Each recurrence creates their own workflow instance. After that, the entire schedule repeats all over again next Monday.What are some other example occurrences?

Note
The trigger shows a preview for your specified recurrence only when you selectDayorWeekas the frequency.
Now continue building your workflow with other actions.
Now continue building your workflow with other actions.
In theAzure portal, open your logic app resource and blank workflow.
In theAzure portal, open your logic app resource and blank workflow.
Follow these general steps to add theSchedulebuilt-in trigger namedRecurrence.
Follow these general steps to add theSchedulebuilt-in trigger namedRecurrence.
Set the interval and frequency for the recurrence. In this example, set these properties to run your workflow every week, for example:PropertyJSON nameRequiredTypeDescriptionIntervalintervalYesIntegerA positive integer that describes how often the workflow runs based on the frequency. Here are the minimum and maximum intervals:- Month: 1-16 months- Week: 1-71 weeks- Day: 1-500 days- Hour: 1-12,000 hours- Minute: 1-72,000 minutes- Second: 1-9,999,999 secondsFor example, if the interval is 6, and the frequency is "Month", then the recurrence is every 6 months.FrequencyfrequencyYesStringThe unit of time for the recurrence:Second,Minute,Hour,Day,Week, orMonthImportant: If you select theDay,Week, orMonthfrequency, and you specify a future start date and time, make sure that you set up the recurrence in advance. Otherwise, the workflow might skip the first recurrence.-Day: Set up the daily recurrence at least 24 hours in advance.-Week: Set up the weekly recurrence at least 7 days in advance.-Month: Set up the monthly recurrence at least one month in advance.Time ZonetimeZoneNoStringApplies only when you specify a start time because this trigger doesn't accept aUTC offset. Select the time zone that you want to apply.Start TimestartTimeNoStringProvide a start date and time, which has a maximum of 49 years in the future and must follow theISO 8601 date time specificationinUTC date time format, but without aUTC offset:YYYY-MM-DDThh:mm:ss if you select a time zone-or-YYYY-MM-DDThh:mm:ssZ if you don't select a time zoneSo for example, if you want September 18, 2024 at 2:00 PM, then specify "2024-09-18T8:00:00" and select a time zone such as Pacific Standard Time. Or, specify "2024-09-18T8:00:00Z" without a time zone.Important:If you don't select a time zone, you must add the letter "Z" at the end without any spaces. This "Z" signifies a UTC time format with aUTC offset. If you select a time zone value, you don't need to add a "Z" to the end of yourStart timevalue. If you do, Azure Logic Apps ignores the time zone value because the "Z" signifies a UTC time format.For simple schedules, the start time is the first occurrence, while for complex schedules, the trigger doesn't fire any sooner than the start time.What are the ways that I can use the start date and time?The following properties are available, based on whether you selectWeekorDay:PropertyJSON nameRequiredTypeDescriptionOn These DaysweekDaysNoString or string arrayIf you selectWeek, you can select one or more days when you want to run the workflow:Monday,Tuesday,Wednesday,Thursday,Friday,Saturday, andSundayAt These HourshoursNoInteger or integer arrayIf you select "Day" or "Week", you can select one or more integers from 0 to 23 as the hours of the day for when you want to run the workflow.For example, if you specify "10", "12" and "14", you get 10 AM, 12 PM, and 2 PM for the hours of the day, but the minutes of the day are calculated based on when the recurrence starts. To set specific minutes of the day, for example, 10:00 AM, 12:00 PM, and 2:00 PM, specify those values by using the property namedAt these minutes.At These MinutesminutesNoInteger or integer arrayIf you select "Day" or "Week", you can select one or more integers from 0 to 59 as the minutes of the hour when you want to run the workflow.For example, you can specify "30" as the minute mark and using the previous example for hours of the day, you get 10:30 AM, 12:30 PM, and 2:30 PM.Note: Sometimes, the timestamp for the triggered run might vary up to 1 minute from the scheduled time. If you need to pass the timestamp exactly as scheduled to subsequent actions, you can use template expressions to change the timestamp accordingly. For more information, seeDate and time functions for expressions.
Set the interval and frequency for the recurrence. In this example, set these properties to run your workflow every week, for example:

interval
frequency
timeZone
startTime
The following properties are available, based on whether you selectWeekorDay:
weekDays
hours
minutes
Review the following considerations when you use theRecurrencetrigger:If you don't specify a specificstart date and time, the first recurrence runs immediately when you save the workflow or deploy the logic app resource, despite your trigger's recurrence setup. To avoid this behavior, provide a start date and time for when you want the first recurrence to run.If you don't specify any other advanced scheduling options, such as specific times to run future recurrences, those recurrences are based on the last run time. As a result, the start times for those recurrences might drift due to factors such as latency during storage calls.To make sure that your workflow doesn't miss a recurrence, especially when the frequency is in days or longer, try providing a start date and time for the recurrence and the specific times to run subsequent recurrences. You can use the properties namedAt These hoursandAt These minutes, which are available only for theDayandWeekfrequencies.For example, suppose that today is Wednesday, September 4, 2024. The followingRecurrencetrigger doesn't fireany soonerthan the specified start date and time, which is Wednesday, September 18, 2024 at 8:00 AM Pacific Time. However, the recurrence schedule is set for 10:30 AM, 12:30 PM, and 2:30 PM on Mondays only. The first time that the trigger fires and creates a workflow instance is on Monday at 10:30 AM. To learn more about how start times work, see thesestart time examples.Future runs happen at 12:30 PM and 2:30 PM on the same day. Each recurrence creates their own workflow instance. After that, the entire schedule repeats all over again next Monday.What are some other example occurrences?NoteThe trigger shows a preview for your specified recurrence only when you selectDayorWeekas the frequency.
Review the following considerations when you use theRecurrencetrigger:
If you don't specify a specificstart date and time, the first recurrence runs immediately when you save the workflow or deploy the logic app resource, despite your trigger's recurrence setup. To avoid this behavior, provide a start date and time for when you want the first recurrence to run.
If you don't specify a specificstart date and time, the first recurrence runs immediately when you save the workflow or deploy the logic app resource, despite your trigger's recurrence setup. To avoid this behavior, provide a start date and time for when you want the first recurrence to run.
If you don't specify any other advanced scheduling options, such as specific times to run future recurrences, those recurrences are based on the last run time. As a result, the start times for those recurrences might drift due to factors such as latency during storage calls.
If you don't specify any other advanced scheduling options, such as specific times to run future recurrences, those recurrences are based on the last run time. As a result, the start times for those recurrences might drift due to factors such as latency during storage calls.
To make sure that your workflow doesn't miss a recurrence, especially when the frequency is in days or longer, try providing a start date and time for the recurrence and the specific times to run subsequent recurrences. You can use the properties namedAt These hoursandAt These minutes, which are available only for theDayandWeekfrequencies.
To make sure that your workflow doesn't miss a recurrence, especially when the frequency is in days or longer, try providing a start date and time for the recurrence and the specific times to run subsequent recurrences. You can use the properties namedAt These hoursandAt These minutes, which are available only for theDayandWeekfrequencies.
For example, suppose that today is Wednesday, September 4, 2024. The followingRecurrencetrigger doesn't fireany soonerthan the specified start date and time, which is Wednesday, September 18, 2024 at 8:00 AM Pacific Time. However, the recurrence schedule is set for 10:30 AM, 12:30 PM, and 2:30 PM on Mondays only. The first time that the trigger fires and creates a workflow instance is on Monday at 10:30 AM. To learn more about how start times work, see thesestart time examples.
Future runs happen at 12:30 PM and 2:30 PM on the same day. Each recurrence creates their own workflow instance. After that, the entire schedule repeats all over again next Monday.What are some other example occurrences?

Note
The trigger shows a preview for your specified recurrence only when you selectDayorWeekas the frequency.
Now continue building your workflow with other actions.
Now continue building your workflow with other actions.
Workflow definition - Recurrence
You can view how theRecurrence trigger definitionappears with your chosen options by reviewing the underlying JSON definition for your workflow in Consumption logic apps and Standard logic apps (stateful only).
Based on whether your logic app is Consumption or Standard, choose one of the following options:
Consumption: On the designer toolbar, selectCode view. To return to the designer, on the code view editor toolbar, selectDesigner.
Consumption: On the designer toolbar, selectCode view. To return to the designer, on the code view editor toolbar, selectDesigner.
Standard: On the workflow menu, selectCode view. To return to the designer, on the workflow menu, selectDesigner.
Standard: On the workflow menu, selectCode view. To return to the designer, on the workflow menu, selectDesigner.
The following example shows how aRecurrencetrigger definition might appear in the workflow's underlying JSON definition:
"triggers": {
   "Recurrence": {
      "type": "Recurrence",
      "recurrence": {
         "frequency": "Week",
         "interval": 1,
         "schedule": {
            "hours": [
               10,
               12,
               14
            ],
            "minutes": [
               30
            ],
            "weekDays": [
               "Monday"
            ]
         },
         "startTime": "2024-09-18T8:00:00Z",
         "timeZone": "Pacific Standard Time"
      }
   }
}
"triggers": {
   "Recurrence": {
      "type": "Recurrence",
      "recurrence": {
         "frequency": "Week",
         "interval": 1,
         "schedule": {
            "hours": [
               10,
               12,
               14
            ],
            "minutes": [
               30
            ],
            "weekDays": [
               "Monday"
            ]
         },
         "startTime": "2024-09-18T8:00:00Z",
         "timeZone": "Pacific Standard Time"
      }
   }
}
Note
In theRecurrencetrigger definition, theevaluatedRecurrenceproperty appears along with therecurrenceproperty
when any expression or parameter reference appears in the recurrence criteria. ThisevaluatedRecurrenceproperty
represents the evaluated values from the expression or parameter reference. If the recurrence criteria doesn't
specify any expressions or parameter references, theevaluatedRecurrenceandrecurrenceproperties are the same.
evaluatedRecurrence
recurrence
evaluatedRecurrence
evaluatedRecurrence
recurrence
The following example shows how to update the trigger definition so that the trigger runs only once on the last day of each month:
"triggers": {
    "Recurrence": {
        "recurrence": {
            "frequency": "Month",
            "interval": 1,
            "schedule": {
                "monthDays": [-1]
            }
        },
        "type": "Recurrence"
    }
}
"triggers": {
    "Recurrence": {
        "recurrence": {
            "frequency": "Month",
            "interval": 1,
            "schedule": {
                "monthDays": [-1]
            }
        },
        "type": "Recurrence"
    }
}

Run one time on last day of the month
For this task, you have to edit theRecurrencetrigger in the workflow's underlying JSON definition using code view, not the designer, by using the following example:
"triggers": {
    "Recurrence": {
        "recurrence": {
            "frequency": "Month",
            "interval": 1,
            "schedule": {
                "monthDays": [-1]
            }
        },
        "type": "Recurrence"
    }
}
"triggers": {
    "Recurrence": {
        "recurrence": {
            "frequency": "Month",
            "interval": 1,
            "schedule": {
                "monthDays": [-1]
            }
        },
        "type": "Recurrence"
    }
}

Trigger recurrence shift and drift (daylight saving time)
To schedule jobs, Azure Logic Apps puts the message for processing into the queue and specifies when that message becomes available, based on the UTC time when the last job ran and the UTC time when the next job is scheduled to run. If you specify a start time with your recurrence,make sure that you select a time zoneso that your logic app workflow runs at the specified start time. That way, the UTC time for your logic app also shifts to counter the seasonal time change. Recurring triggers honor the schedule that you set, including any time zone that you specify.
Otherwise, if you don't select a time zone, daylight saving time (DST) events might affect when triggers run. For example, the start time shifts one hour forward when DST starts and one hour backward when DST ends. However, some time windows might cause problems when the time shifts. For more information and examples, seeRecurrence for daylight saving time and standard time.
Next steps
Pause workflows with delay actions
Managed connectors for Azure Logic Apps
Built-in connectors for Azure Logic Apps
Feedback
Was this page helpful?
Additional resources