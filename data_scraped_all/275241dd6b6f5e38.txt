Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Microsoft.Chaos experiments
Article
2025-02-11
2 contributors
In this article
Latest
2025-01-01
2024-11-01-preview
2024-03-22-preview
2024-01-01
2023-11-01
2023-10-27-preview
2023-09-01-preview
2023-04-15-preview
2023-04-01-preview
2022-10-01-preview
2022-07-01-preview
2021-09-15-preview
Bicep resource definition
The experiments resource type can be deployed with operations that target:
Resource groups- Seeresource group deployment commands
For a list of changed properties in each API version, seechange log.
Resource format
To create a Microsoft.Chaos/experiments resource, add the following Bicep to your template.
resource symbolicname 'Microsoft.Chaos/experiments@2025-01-01' = {
  identity: {
    type: 'string'
    userAssignedIdentities: {
      {customized property}: {}
    }
  }
  location: 'string'
  name: 'string'
  properties: {
    selectors: [
      {
        filter: {
          type: 'string'
          // For remaining properties, see ChaosTargetFilter objects
        }
        id: 'string'
        type: 'string'
        // For remaining properties, see ChaosTargetSelector objects
      }
    ]
    steps: [
      {
        branches: [
          {
            actions: [
              {
                name: 'string'
                type: 'string'
                // For remaining properties, see ChaosExperimentAction objects
              }
            ]
            name: 'string'
          }
        ]
        name: 'string'
      }
    ]
  }
  tags: {
    {customized property}: 'string'
  }
}
resource symbolicname 'Microsoft.Chaos/experiments@2025-01-01' = {
  identity: {
    type: 'string'
    userAssignedIdentities: {
      {customized property}: {}
    }
  }
  location: 'string'
  name: 'string'
  properties: {
    selectors: [
      {
        filter: {
          type: 'string'
          // For remaining properties, see ChaosTargetFilter objects
        }
        id: 'string'
        type: 'string'
        // For remaining properties, see ChaosTargetSelector objects
      }
    ]
    steps: [
      {
        branches: [
          {
            actions: [
              {
                name: 'string'
                type: 'string'
                // For remaining properties, see ChaosExperimentAction objects
              }
            ]
            name: 'string'
          }
        ]
        name: 'string'
      }
    ]
  }
  tags: {
    {customized property}: 'string'
  }
}
ChaosExperimentAction objects
Set thetypeproperty to specify the type of object.
Forcontinuous, use:
{
  duration: 'string'
  parameters: [
    {
      key: 'string'
      value: 'string'
    }
  ]
  selectorId: 'string'
  type: 'continuous'
}
{
  duration: 'string'
  parameters: [
    {
      key: 'string'
      value: 'string'
    }
  ]
  selectorId: 'string'
  type: 'continuous'
}
Fordelay, use:
{
  duration: 'string'
  type: 'delay'
}
{
  duration: 'string'
  type: 'delay'
}
Fordiscrete, use:
{
  parameters: [
    {
      key: 'string'
      value: 'string'
    }
  ]
  selectorId: 'string'
  type: 'discrete'
}
{
  parameters: [
    {
      key: 'string'
      value: 'string'
    }
  ]
  selectorId: 'string'
  type: 'discrete'
}
ChaosTargetSelector objects
Set thetypeproperty to specify the type of object.
ForList, use:
{
  targets: [
    {
      id: 'string'
      type: 'string'
    }
  ]
  type: 'List'
}
{
  targets: [
    {
      id: 'string'
      type: 'string'
    }
  ]
  type: 'List'
}
ForQuery, use:
{
  queryString: 'string'
  subscriptionIds: [
    'string'
  ]
  type: 'Query'
}
{
  queryString: 'string'
  subscriptionIds: [
    'string'
  ]
  type: 'Query'
}
ChaosTargetFilter objects
Set thetypeproperty to specify the type of object.
ForSimple, use:
{
  parameters: {
    zones: [
      'string'
    ]
  }
  type: 'Simple'
}
{
  parameters: {
    zones: [
      'string'
    ]
  }
  type: 'Simple'
}
Property Values
ChaosExperimentAction
ChaosExperimentBranch
ChaosExperimentStep
ChaosTargetFilter
ChaosTargetListSelector
ChaosTargetQuerySelector
ChaosTargetSelector
ChaosTargetSimpleFilter
ChaosTargetSimpleFilterParameters
ContinuousAction
DelayAction
DiscreteAction
ExperimentProperties
KeyValuePair
ManagedServiceIdentity
Microsoft.Chaos/experiments
^[^<>%&:?#/\\]+$
TargetReference
TrackedResourceTags
UserAssignedIdentities
UserAssignedIdentity
ARM template resource definition
The experiments resource type can be deployed with operations that target:
Resource groups- Seeresource group deployment commands
For a list of changed properties in each API version, seechange log.
Resource format
To create a Microsoft.Chaos/experiments resource, add the following JSON to your template.
{
  "type": "Microsoft.Chaos/experiments",
  "apiVersion": "2025-01-01",
  "name": "string",
  "identity": {
    "type": "string",
    "userAssignedIdentities": {
      "{customized property}": {
      }
    }
  },
  "location": "string",
  "properties": {
    "selectors": [ {
      "filter": {
        "type": "string"
        // For remaining properties, see ChaosTargetFilter objects
      },
      "id": "string",
      "type": "string"
      // For remaining properties, see ChaosTargetSelector objects
    } ],
    "steps": [
      {
        "branches": [
          {
            "actions": [ {
              "name": "string",
              "type": "string"
              // For remaining properties, see ChaosExperimentAction objects
            } ],
            "name": "string"
          }
        ],
        "name": "string"
      }
    ]
  },
  "tags": {
    "{customized property}": "string"
  }
}
{
  "type": "Microsoft.Chaos/experiments",
  "apiVersion": "2025-01-01",
  "name": "string",
  "identity": {
    "type": "string",
    "userAssignedIdentities": {
      "{customized property}": {
      }
    }
  },
  "location": "string",
  "properties": {
    "selectors": [ {
      "filter": {
        "type": "string"
        // For remaining properties, see ChaosTargetFilter objects
      },
      "id": "string",
      "type": "string"
      // For remaining properties, see ChaosTargetSelector objects
    } ],
    "steps": [
      {
        "branches": [
          {
            "actions": [ {
              "name": "string",
              "type": "string"
              // For remaining properties, see ChaosExperimentAction objects
            } ],
            "name": "string"
          }
        ],
        "name": "string"
      }
    ]
  },
  "tags": {
    "{customized property}": "string"
  }
}
ChaosExperimentAction objects
Set thetypeproperty to specify the type of object.
Forcontinuous, use:
{
  "duration": "string",
  "parameters": [
    {
      "key": "string",
      "value": "string"
    }
  ],
  "selectorId": "string",
  "type": "continuous"
}
{
  "duration": "string",
  "parameters": [
    {
      "key": "string",
      "value": "string"
    }
  ],
  "selectorId": "string",
  "type": "continuous"
}
Fordelay, use:
{
  "duration": "string",
  "type": "delay"
}
{
  "duration": "string",
  "type": "delay"
}
Fordiscrete, use:
{
  "parameters": [
    {
      "key": "string",
      "value": "string"
    }
  ],
  "selectorId": "string",
  "type": "discrete"
}
{
  "parameters": [
    {
      "key": "string",
      "value": "string"
    }
  ],
  "selectorId": "string",
  "type": "discrete"
}
ChaosTargetSelector objects
Set thetypeproperty to specify the type of object.
ForList, use:
{
  "targets": [
    {
      "id": "string",
      "type": "string"
    }
  ],
  "type": "List"
}
{
  "targets": [
    {
      "id": "string",
      "type": "string"
    }
  ],
  "type": "List"
}
ForQuery, use:
{
  "queryString": "string",
  "subscriptionIds": [ "string" ],
  "type": "Query"
}
{
  "queryString": "string",
  "subscriptionIds": [ "string" ],
  "type": "Query"
}
ChaosTargetFilter objects
Set thetypeproperty to specify the type of object.
ForSimple, use:
{
  "parameters": {
    "zones": [ "string" ]
  },
  "type": "Simple"
}
{
  "parameters": {
    "zones": [ "string" ]
  },
  "type": "Simple"
}
Property Values
ChaosExperimentAction
ChaosExperimentBranch
ChaosExperimentStep
ChaosTargetFilter
ChaosTargetListSelector
ChaosTargetQuerySelector
ChaosTargetSelector
ChaosTargetSimpleFilter
ChaosTargetSimpleFilterParameters
ContinuousAction
DelayAction
DiscreteAction
ExperimentProperties
KeyValuePair
ManagedServiceIdentity
Microsoft.Chaos/experiments
^[^<>%&:?#/\\]+$
TargetReference
TrackedResourceTags
UserAssignedIdentities
UserAssignedIdentity
Usage Examples
Terraform (AzAPI provider) resource definition
The experiments resource type can be deployed with operations that target:
Resource groups
For a list of changed properties in each API version, seechange log.
Resource format
To create a Microsoft.Chaos/experiments resource, add the following Terraform to your template.
resource "azapi_resource" "symbolicname" {
  type = "Microsoft.Chaos/experiments@2025-01-01"
  name = "string"
  identity = {
    type = "string"
    userAssignedIdentities = {
      {customized property} = {
      }
    }
  }
  location = "string"
  tags = {
    {customized property} = "string"
  }
  body = {
    properties = {
      selectors = [
        {
          filter = {
            type = "string"
            // For remaining properties, see ChaosTargetFilter objects
          }
          id = "string"
          type = "string"
          // For remaining properties, see ChaosTargetSelector objects
        }
      ]
      steps = [
        {
          branches = [
            {
              actions = [
                {
                  name = "string"
                  type = "string"
                  // For remaining properties, see ChaosExperimentAction objects
                }
              ]
              name = "string"
            }
          ]
          name = "string"
        }
      ]
    }
  }
}
resource "azapi_resource" "symbolicname" {
  type = "Microsoft.Chaos/experiments@2025-01-01"
  name = "string"
  identity = {
    type = "string"
    userAssignedIdentities = {
      {customized property} = {
      }
    }
  }
  location = "string"
  tags = {
    {customized property} = "string"
  }
  body = {
    properties = {
      selectors = [
        {
          filter = {
            type = "string"
            // For remaining properties, see ChaosTargetFilter objects
          }
          id = "string"
          type = "string"
          // For remaining properties, see ChaosTargetSelector objects
        }
      ]
      steps = [
        {
          branches = [
            {
              actions = [
                {
                  name = "string"
                  type = "string"
                  // For remaining properties, see ChaosExperimentAction objects
                }
              ]
              name = "string"
            }
          ]
          name = "string"
        }
      ]
    }
  }
}
ChaosExperimentAction objects
Set thetypeproperty to specify the type of object.
Forcontinuous, use:
{
  duration = "string"
  parameters = [
    {
      key = "string"
      value = "string"
    }
  ]
  selectorId = "string"
  type = "continuous"
}
{
  duration = "string"
  parameters = [
    {
      key = "string"
      value = "string"
    }
  ]
  selectorId = "string"
  type = "continuous"
}
Fordelay, use:
{
  duration = "string"
  type = "delay"
}
{
  duration = "string"
  type = "delay"
}
Fordiscrete, use:
{
  parameters = [
    {
      key = "string"
      value = "string"
    }
  ]
  selectorId = "string"
  type = "discrete"
}
{
  parameters = [
    {
      key = "string"
      value = "string"
    }
  ]
  selectorId = "string"
  type = "discrete"
}
ChaosTargetSelector objects
Set thetypeproperty to specify the type of object.
ForList, use:
{
  targets = [
    {
      id = "string"
      type = "string"
    }
  ]
  type = "List"
}
{
  targets = [
    {
      id = "string"
      type = "string"
    }
  ]
  type = "List"
}
ForQuery, use:
{
  queryString = "string"
  subscriptionIds = [
    "string"
  ]
  type = "Query"
}
{
  queryString = "string"
  subscriptionIds = [
    "string"
  ]
  type = "Query"
}
ChaosTargetFilter objects
Set thetypeproperty to specify the type of object.
ForSimple, use:
{
  parameters = {
    zones = [
      "string"
    ]
  }
  type = "Simple"
}
{
  parameters = {
    zones = [
      "string"
    ]
  }
  type = "Simple"
}
Property Values
ChaosExperimentAction
ChaosExperimentBranch
ChaosExperimentStep
ChaosTargetFilter
ChaosTargetListSelector
ChaosTargetQuerySelector
ChaosTargetSelector
ChaosTargetSimpleFilter
ChaosTargetSimpleFilterParameters
ContinuousAction
DelayAction
DiscreteAction
ExperimentProperties
KeyValuePair
ManagedServiceIdentity
Microsoft.Chaos/experiments
^[^<>%&:?#/\\]+$
TargetReference
TrackedResourceTags
UserAssignedIdentities
UserAssignedIdentity
Feedback
Was this page helpful?
Additional resources