Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Create an incremental snapshot for managed disks
Article
2024-12-09
9 contributors
In this article
Applies to:âï¸ Linux VMs âï¸ Windows VMs âï¸ Flexible scale sets âï¸ Uniform scale sets
Incremental snapshots are point-in-time backups for managed disks that, when taken, consist only of the changes since the last snapshot. The first incremental snapshot is a full copy of the disk. The subsequent incremental snapshots occupy only delta changes to disks since the last snapshot. When you restore a disk from an incremental snapshot, the system reconstructs the full disk that represents the point in time backup of the disk when the incremental snapshot was taken. This capability for managed disk snapshots potentially allows them to be more cost-effective, since, unless you choose to, you don't have to store the entire disk with each individual snapshot. Just like full snapshots, incremental snapshots can be used to either create a full managed disk or a full snapshot. Both full snapshots and incremental snapshots can be used immediately after being taken. In other words, once you take either snapshot, you can immediately read the underlying data and use it to restore disks.
There are a few differences between an incremental snapshot and a full snapshot. Incremental snapshots will always use standard HDD storage, irrespective of the storage type of the disk, whereas full snapshots can use premium SSDs. If you're using full snapshots on Premium Storage to scale up VM deployments, we recommend you use custom images on standard storage in theAzure Compute Gallery. It will help you achieve a more massive scale with lower cost. Additionally, incremental snapshots potentially offer better reliability withzone-redundant storage(ZRS). If ZRS is available in the selected region, an incremental snapshot will use ZRS automatically. If ZRS isn't available in the region, then the snapshot will default tolocally redundant storage(LRS). You can override this behavior and select one manually but, we don't recommend that.
Incremental snapshots are billed for the used size only. You can find the used size of your snapshots by looking at theAzure usage report. For example, if the used data size of a snapshot is 10 GiB, thedailyusage report will show 10 GiB/(31 days) = 0.3226 as the consumed quantity.
Restrictions
Incremental snapshots currently can't be moved between subscriptions.
You can currently only generate SAS URIs of up to five snapshots of a particular snapshot family at any given time.
You can't create an incremental snapshot for a particular disk outside of that disk's subscription.
Incremental snapshots can't be moved to another resource group. But, they can be copied to another resource group or region.
Up to seven incremental snapshots per disk can be created every five minutes.
A total of 500 incremental snapshots can be created for a single disk. The 500 quota limit isn't over the lifetime of a disk, but at any given point in time. You can always delete older snapshots of a disk to make room for newer snapshots.
You can't get the changes between snapshots taken before and after you changed the size of the parent disk across 4-TB boundary. For example, You took an incremental snapshotsnapshot-awhen the size of a disk was 2 TB. Now you increased the size of the disk to 6 TB and then took another incremental snapshotsnapshot-b. You can't get the changes betweensnapshot-aandsnapshot-b. You have to download the full copy ofsnapshot-bcreated after the resize. Subsequently, you can get the changes betweensnapshot-band snapshots created aftersnapshot-b.
snapshot-a
snapshot-b
snapshot-a
snapshot-b
snapshot-b
snapshot-b
snapshot-b
When you create a managed disk from a snapshot, it starts a background copy process. You can attach a disk to a VM while this process is running but you'll experienceperformance impact. You can use CompletionPercent property tocheck the status of the background copyonly for Ultra Disks and Premium SSD v2 disks.
Incremental snapshots of Premium SSD v2 and Ultra Disks
Incremental snapshots of Premium SSD v2 and Ultra Disks have the following extra restrictions:
Snapshots with a 512 logical sector size are stored as VHD, and can be used to create any disk type. Snapshots with a 4096 logical sector size are stored as VHDX and can only be used to create Ultra Disks and Premium SSD v2 disks, they can't be used to create other disk types. To determine which sector size your snapshot is, seecheck sector size.
Up to five disks may be simultaneously created from a snapshot of a Premium SSD v2 or an Ultra Disk.
When an incremental snapshot of either a Premium SSD v2 or an Ultra Disk is created, a background copy process for that disk is started. While a background copy is ongoing, you can have up to three total snapshots pending. The process must complete before any more snapshots of that disk can be created.
Incremental snapshots of a Premium SSD v2 or an Ultra disk can't be used immediately after they're created. The background copy must complete before you can create a disk from the snapshot. SeeCheck snapshot statusfor details.
When you increase the size of a Premium SSD v2 or an Ultra disk, any incremental snapshots that are under background copy will fail.
When you attach a Premium SSD v2 or Ultra disk created from snapshot to a running Virtual Machine while CompletionPercent property hasn't reached 100, the disk suffers performance impact. Specifically, if the disk has a 4k sector size, it may experience slower read. If the disk has a 512e sector size, it may experience slower read and write. To track the progress of this background copy process, see the check disk status section of either the AzurePowerShell sampleor theAzure CLI.
You can have up to 50 currently active background copies per subscription. The following activities count against the total number of active background copies:Creating Premium SSD v2 and Ultra disks with snapshotsCreating Premium SSD v2 and Ultra Disks with restore pointsUploading VHDX files into Premium SSD v2 and Ultra DisksConverting existing Premium SSD disks to Premium SSD v2 disks.
Creating Premium SSD v2 and Ultra disks with snapshots
Creating Premium SSD v2 and Ultra Disks with restore points
Uploading VHDX files into Premium SSD v2 and Ultra Disks
Converting existing Premium SSD disks to Premium SSD v2 disks.
Note
Normally, when you take an incremental snapshot, and there aren't any changes, the size of that snapshot is 0 MiB. Currently, empty snapshots of disks with a 4096 logical sector size instead have a size of 6 MiB, when they'd normally be 0 MiB.
Create incremental snapshots
Azure CLI
Azure PowerShell
Portal
Resource Manager Template
You can use the Azure CLI to create an incremental snapshot. You need the latest version of the Azure CLI. See the following articles to learn how to eitherinstallorupdatethe Azure CLI.
The following script creates an incremental snapshot of a particular disk:
# Declare variables
diskName="yourDiskNameHere"
resourceGroupName="yourResourceGroupNameHere"
snapshotName="desiredSnapshotNameHere"

# Get the disk you need to backup
yourDiskID=$(az disk show -n $diskName -g $resourceGroupName --query "id" --output tsv)

# Create the snapshot
az snapshot create -g $resourceGroupName -n $snapshotName --source $yourDiskID --incremental true
# Declare variables
diskName="yourDiskNameHere"
resourceGroupName="yourResourceGroupNameHere"
snapshotName="desiredSnapshotNameHere"

# Get the disk you need to backup
yourDiskID=$(az disk show -n $diskName -g $resourceGroupName --query "id" --output tsv)

# Create the snapshot
az snapshot create -g $resourceGroupName -n $snapshotName --source $yourDiskID --incremental true
You can identify incremental snapshots from the same disk with theSourceResourceIdproperty of snapshots.SourceResourceIdis the Azure Resource Manager resource ID of the parent disk.
SourceResourceId
SourceResourceId
You can useSourceResourceIdto create a list of all snapshots associated with a particular disk. ReplaceyourResourceGroupNameHerewith your value and then you can use the following example to list your existing incremental snapshots:
SourceResourceId
yourResourceGroupNameHere
# Declare variables and create snapshot list
subscriptionId="yourSubscriptionId"
resourceGroupName="yourResourceGroupNameHere"
diskName="yourDiskNameHere"

az account set --subscription $subscriptionId

diskId=$(az disk show -n $diskName -g $resourceGroupName --query [id] -o tsv)

az snapshot list --query "[?creationData.sourceResourceId=='$diskId' && incremental]" -g $resourceGroupName --output table
# Declare variables and create snapshot list
subscriptionId="yourSubscriptionId"
resourceGroupName="yourResourceGroupNameHere"
diskName="yourDiskNameHere"

az account set --subscription $subscriptionId

diskId=$(az disk show -n $diskName -g $resourceGroupName --query [id] -o tsv)

az snapshot list --query "[?creationData.sourceResourceId=='$diskId' && incremental]" -g $resourceGroupName --output table
You can use the Azure PowerShell module to create an incremental snapshot. You need the latest version of the Azure PowerShell module. The following command will either install it or update your existing installation to latest:
Install-Module -Name Az -AllowClobber -Scope CurrentUser
Install-Module -Name Az -AllowClobber -Scope CurrentUser
Once that is installed, sign in to your PowerShell session withConnect-AzAccount.
Connect-AzAccount
To create an incremental snapshot with Azure PowerShell, set the configuration withNew-AzSnapShotConfigwith the-Incrementalparameter and then pass that as a variable toNew-AzSnapshotthrough the-Snapshotparameter.
-Incremental
-Snapshot
$diskName = "yourDiskNameHere"
$resourceGroupName = "yourResourceGroupNameHere"
$snapshotName = "yourDesiredSnapshotNameHere"

# Get the disk that you need to backup by creating an incremental snapshot
$yourDisk = Get-AzDisk -DiskName $diskName -ResourceGroupName $resourceGroupName

# Create an incremental snapshot by setting the SourceUri property with the value of the Id property of the disk
$snapshotConfig=New-AzSnapshotConfig -SourceUri $yourDisk.Id -Location $yourDisk.Location -CreateOption Copy -Incremental 
New-AzSnapshot -ResourceGroupName $resourceGroupName -SnapshotName $snapshotName -Snapshot $snapshotConfig
$diskName = "yourDiskNameHere"
$resourceGroupName = "yourResourceGroupNameHere"
$snapshotName = "yourDesiredSnapshotNameHere"

# Get the disk that you need to backup by creating an incremental snapshot
$yourDisk = Get-AzDisk -DiskName $diskName -ResourceGroupName $resourceGroupName

# Create an incremental snapshot by setting the SourceUri property with the value of the Id property of the disk
$snapshotConfig=New-AzSnapshotConfig -SourceUri $yourDisk.Id -Location $yourDisk.Location -CreateOption Copy -Incremental 
New-AzSnapshot -ResourceGroupName $resourceGroupName -SnapshotName $snapshotName -Snapshot $snapshotConfig
You can identify incremental snapshots from the same disk with theSourceResourceIdand theSourceUniqueIdproperties of snapshots.SourceResourceIdis the Azure Resource Manager resource ID of the parent disk.SourceUniqueIdis the value inherited from theUniqueIdproperty of the disk. If you delete a disk and then create a new disk with the same name, the value of theUniqueIdproperty changes.
SourceResourceId
SourceUniqueId
SourceResourceId
SourceUniqueId
UniqueId
UniqueId
You can useSourceResourceIdandSourceUniqueIdto create a list of all snapshots associated with a particular disk. ReplaceyourResourceGroupNameHerewith your value and then you can use the following example to list your existing incremental snapshots:
SourceResourceId
SourceUniqueId
yourResourceGroupNameHere
$resourceGroupName = "yourResourceGroupNameHere"
$snapshots = Get-AzSnapshot -ResourceGroupName $resourceGroupName

$incrementalSnapshots = New-Object System.Collections.ArrayList
foreach ($snapshot in $snapshots)
{
    
    if($snapshot.Incremental -and $snapshot.CreationData.SourceResourceId -eq $yourDisk.Id -and $snapshot.CreationData.SourceUniqueId -eq $yourDisk.UniqueId){

        $incrementalSnapshots.Add($snapshot)
    }
}

$incrementalSnapshots
$resourceGroupName = "yourResourceGroupNameHere"
$snapshots = Get-AzSnapshot -ResourceGroupName $resourceGroupName

$incrementalSnapshots = New-Object System.Collections.ArrayList
foreach ($snapshot in $snapshots)
{
    
    if($snapshot.Incremental -and $snapshot.CreationData.SourceResourceId -eq $yourDisk.Id -and $snapshot.CreationData.SourceUniqueId -eq $yourDisk.UniqueId){

        $incrementalSnapshots.Add($snapshot)
    }
}

$incrementalSnapshots
Sign in to theAzure portaland navigate to the disk you'd like to snapshot.
Sign in to theAzure portaland navigate to the disk you'd like to snapshot.
On your disk, selectCreate a Snapshot
On your disk, selectCreate a Snapshot

Select the resource group you'd like to use and enter a name.
Select the resource group you'd like to use and enter a name.
SelectIncrementaland selectReview + Create
SelectIncrementaland selectReview + Create

SelectCreate
SelectCreate

You can also use Azure Resource Manager templates to create an incremental snapshot. You'll need to make sure the apiVersion is set to2022-03-22and that the incremental property is also set to true. The following snippet is an example of how to create an incremental snapshot with Resource Manager templates:
{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "diskName": {
      "type": "string",
      "defaultValue": "contosodisk1"
    },
  "diskResourceId": {
    "defaultValue": "<your_managed_disk_resource_ID>",
    "type": "String"
  }
  }, 
  "resources": [
  {
    "type": "Microsoft.Compute/snapshots",
    "name": "[concat( parameters('diskName'),'_snapshot1')]",
    "location": "[resourceGroup().location]",
    "apiVersion": "2022-03-22",
    "properties": {
      "creationData": {
        "createOption": "Copy",
        "sourceResourceId": "[parameters('diskResourceId')]"
      },
      "incremental": true
    }
  }
  ]
}
{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "diskName": {
      "type": "string",
      "defaultValue": "contosodisk1"
    },
  "diskResourceId": {
    "defaultValue": "<your_managed_disk_resource_ID>",
    "type": "String"
  }
  }, 
  "resources": [
  {
    "type": "Microsoft.Compute/snapshots",
    "name": "[concat( parameters('diskName'),'_snapshot1')]",
    "location": "[resourceGroup().location]",
    "apiVersion": "2022-03-22",
    "properties": {
      "creationData": {
        "createOption": "Copy",
        "sourceResourceId": "[parameters('diskResourceId')]"
      },
      "incremental": true
    }
  }
  ]
}
Check snapshot status
Incremental snapshots of Premium SSD v2 or Ultra Disks can't be used to create new disks until the background process copying the data into the snapshot has completed.
You can use either theCLIorPowerShellsections to check the status of the background copy from a disk to a snapshot.
Important
You can't use the following sections to get the status of the background copy process for disk types other than Ultra Disk or Premium SSD v2. Snapshots of other disk types always report 100%.
CLI
You have two options for getting the status of snapshots. You can either get alist of all incremental snapshots associated with a specific disk, and their respective status, or you can get thestatus of an individual snapshot.
The following script returns a list of all snapshots associated with a particular disk. The value of theCompletionPercentproperty of any snapshot must be 100 before it can be used. ReplaceyourResourceGroupNameHere,yourSubscriptionId, andyourDiskNameHerewith your values then run the script:
CompletionPercent
yourResourceGroupNameHere
yourSubscriptionId
yourDiskNameHere
# Declare variables and create snapshot list
subscriptionId="yourSubscriptionId"
resourceGroupName="yourResourceGroupNameHere"
diskName="yourDiskNameHere"
az account set --subscription $subscriptionId
diskId=$(az disk show -n $diskName -g $resourceGroupName --query [id] -o tsv)
az snapshot list --query "[?creationData.sourceResourceId=='$diskId' && incremental]" -g $resourceGroupName --output table
# Declare variables and create snapshot list
subscriptionId="yourSubscriptionId"
resourceGroupName="yourResourceGroupNameHere"
diskName="yourDiskNameHere"
az account set --subscription $subscriptionId
diskId=$(az disk show -n $diskName -g $resourceGroupName --query [id] -o tsv)
az snapshot list --query "[?creationData.sourceResourceId=='$diskId' && incremental]" -g $resourceGroupName --output table
You can also check the status of an individual snapshot by checking theCompletionPercentproperty. Replace$sourceSnapshotNamewith the name of your snapshot then run the following command. The value of the property must be 100 before you can use the snapshot for restoring disk or generate a SAS URI for downloading the underlying data.
CompletionPercent
$sourceSnapshotName
az snapshot show -n $sourceSnapshotName -g $resourceGroupName --query [completionPercent] -o tsv
az snapshot show -n $sourceSnapshotName -g $resourceGroupName --query [completionPercent] -o tsv
PowerShell
You have two options for getting the status of snapshots. You can either get alist of all incremental snapshots associated with a particular diskand their respective status, or you can get thestatus of an individual snapshot.
The following script returns a list of all incremental snapshots associated with a particular disk that haven't completed their background copy. ReplaceyourResourceGroupNameHereandyourDiskNameHere, then run the script.
yourResourceGroupNameHere
yourDiskNameHere
$resourceGroupName = "yourResourceGroupNameHere"
$snapshots = Get-AzSnapshot -ResourceGroupName $resourceGroupName
$diskName = "yourDiskNameHere"
$yourDisk = Get-AzDisk -DiskName $diskName -ResourceGroupName $resourceGroupName
$incrementalSnapshots = New-Object System.Collections.ArrayList
foreach ($snapshot in $snapshots)
{
    if($snapshot.Incremental -and $snapshot.CreationData.SourceResourceId -eq $yourDisk.Id -and $snapshot.CreationData.SourceUniqueId -eq $yourDisk.UniqueId)
    {
    $targetSnapshot=Get-AzSnapshot -ResourceGroupName $resourceGroupName -SnapshotName $snapshotName
        {
        if($targetSnapshot.CompletionPercent -lt 100)
            {
            $incrementalSnapshots.Add($targetSnapshot)
            }
        }
    }
}
$incrementalSnapshots
$resourceGroupName = "yourResourceGroupNameHere"
$snapshots = Get-AzSnapshot -ResourceGroupName $resourceGroupName
$diskName = "yourDiskNameHere"
$yourDisk = Get-AzDisk -DiskName $diskName -ResourceGroupName $resourceGroupName
$incrementalSnapshots = New-Object System.Collections.ArrayList
foreach ($snapshot in $snapshots)
{
    if($snapshot.Incremental -and $snapshot.CreationData.SourceResourceId -eq $yourDisk.Id -and $snapshot.CreationData.SourceUniqueId -eq $yourDisk.UniqueId)
    {
    $targetSnapshot=Get-AzSnapshot -ResourceGroupName $resourceGroupName -SnapshotName $snapshotName
        {
        if($targetSnapshot.CompletionPercent -lt 100)
            {
            $incrementalSnapshots.Add($targetSnapshot)
            }
        }
    }
}
$incrementalSnapshots
You can check theCompletionPercentproperty of an individual snapshot to get its status. ReplaceyourResourceGroupNameHereandyourSnapshotNamethen run the script. The value of the property must be 100 before you can use the snapshot for restoring disk or generate a SAS URI for downloading the underlying data.
CompletionPercent
yourResourceGroupNameHere
yourSnapshotName
$resourceGroupName = "yourResourceGroupNameHere"
$snapshotName = "yourSnapshotName"
$targetSnapshot=Get-AzSnapshot -ResourceGroupName $resourceGroupName -SnapshotName $snapshotName
$targetSnapshot.CompletionPercent
$resourceGroupName = "yourResourceGroupNameHere"
$snapshotName = "yourSnapshotName"
$targetSnapshot=Get-AzSnapshot -ResourceGroupName $resourceGroupName -SnapshotName $snapshotName
$targetSnapshot.CompletionPercent
Check sector size
Snapshots with a 4096 logical sector size can only be used to create Premium SSD v2 or Ultra Disks. They can't be used to create other disk types. Snapshots of disks with 4096 logical sector size are stored as VHDX, whereas snapshots of disks with 512 logical sector size are stored as VHD. Snapshots inherit the logical sector size from the parent disk.
To determine whether or your Premium SSD v2 or Ultra Disk snapshot is a VHDX or a VHD, get theLogicalSectorSizeproperty of the snapshot.
LogicalSectorSize
The following command displays the logical sector size of a snapshot:
az snapshot show -g resourcegroupname -n snapshotname --query [creationData.logicalSectorSize] -o tsv
az snapshot show -g resourcegroupname -n snapshotname --query [creationData.logicalSectorSize] -o tsv
Next steps
See the following articles to create disks from your snapshots using theAzure CLIorAzure PowerShell module.
SeeCopy an incremental snapshot to a new regionto learn how to copy an incremental snapshot across regions.
If you have more questions on snapshots, see thesnapshotssection of the FAQ.
If you'd like to see sample code demonstrating the differential capability of incremental snapshots, using .NET, seeCopy Azure Managed Disks backups to another region with differential capability of incremental snapshots.
Feedback
Was this page helpful?
Additional resources