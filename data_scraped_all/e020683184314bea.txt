Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
MavenAuthenticate@0 - Maven Authenticate v0 task
Article
2025-03-24
4 contributors
In this article
Use this task to provide credentials for Azure Artifacts feeds and external Maven repositories.
Syntax
# Maven Authenticate v0
# Provides credentials for Azure Artifacts feeds and external maven repositories.
- task: MavenAuthenticate@0
  inputs:
    #artifactsFeeds: # string. Feeds. 
    #mavenServiceConnections: # string. Credentials for repositories outside this organization/collection.
# Maven Authenticate v0
# Provides credentials for Azure Artifacts feeds and external maven repositories.
- task: MavenAuthenticate@0
  inputs:
    #artifactsFeeds: # string. Feeds. 
    #mavenServiceConnections: # string. Credentials for repositories outside this organization/collection.
Inputs
artifactsFeeds-Feedsstring.
artifactsFeeds
string
Specifies a comma-separated list of Azure Artifacts feed names to authenticate with Maven. If you only need authentication for external Maven repositories, leave this field blank.
mavenServiceConnections-Credentials for repositories outside this organization/collectionstring.
mavenServiceConnections
string
Specifies a comma-separated list ofMaven service connectionnames from external organizations to authenticate with Maven. If you only need authentication for Azure Artifacts feeds, leave this field blank.
Task control options
All tasks have control options in addition to their task inputs. For more information, seeControl options and common task properties.
Output variables
None.
Remarks
Specifies the credentials for Azure Artifacts feeds and external Maven repositories in the current user'ssettings.xmlfile.
settings.xml
Where is thesettings.xmlfile containing the authenticated repositories located?
settings.xml
We use themvn -sswitch to specify our ownsettings.xmlfile. How do we authenticate Azure Artifacts feeds there?
mvn -s
settings.xml
My Pipeline needs to access a feed in a different project
Where is thesettings.xmlfile containing the authenticated repositories located?
settings.xml
The Maven Authenticate task searches for thesettings.xmlfile in the current user's home directory. For Linux and Mac, the path is$HOME/.m2/settings.xml. For Windows, the path is%USERPROFILE%\.m2\settings.xml. If thesettings.xmlfile doesn't exist, a new one will be created at that path.
settings.xml
$HOME/.m2/settings.xml
%USERPROFILE%\.m2\settings.xml
settings.xml
We use themvn -sswitch to specify our ownsettings.xmlfile. How do we authenticate Azure Artifacts feeds there?
mvn -s
settings.xml
The Maven Authenticate task doesn't have access to the customsettings.xmlfile that's specified by using an-sswitch. To add Azure Artifacts authentication to your customsettings.xml, add a server element inside yoursettings.xmlfile:
settings.xml
-s
settings.xml
settings.xml
<server>
  <id>feedName</id> <!-- Set this to the id of the <repository> element inside your pom.xml file. -->
  <username>AzureDevOps</username>
  <password>${env.SYSTEM_ACCESSTOKEN}</password>
</server>
<server>
  <id>feedName</id> <!-- Set this to the id of the <repository> element inside your pom.xml file. -->
  <username>AzureDevOps</username>
  <password>${env.SYSTEM_ACCESSTOKEN}</password>
</server>
The access token variable can be set in your pipelines using theseinstructions.
My Pipeline needs to access a feed in a different project
If the pipeline is running in a different project than the project hosting the feed, you must set up the other project to grant read/write access to the build service. SeePackage permissions in Azure Pipelinesfor more details.
Examples
Authenticate Maven feeds inside your organization
Authenticate Maven feeds outside your organization
Authenticate Maven feeds inside your organization
In this example, we authenticate two Azure Artifacts feeds within our organization.
- task: MavenAuthenticate@0
  displayName: 'Maven Authenticate'
  inputs:
    artifactsFeeds: MyFeedInOrg1,MyFeedInOrg2
- task: MavenAuthenticate@0
  displayName: 'Maven Authenticate'
  inputs:
    artifactsFeeds: MyFeedInOrg1,MyFeedInOrg2
TheMavenAuthenticatetask updates thesettings.xmlfile present in the agent user's .m2 directory located at{user.home}/.m2/settings.xmlto add two entries inside the<servers>element.
MavenAuthenticate
settings.xml
{user.home}/.m2/settings.xml
<servers>
<servers>
  <server>
    <id>MyFeedInOrg1</id>
    <username>AzureDevOps</username>
    <password>****</password>
  </server>
  <server>
    <id>MyFeedInOrg2</id>
    <username>AzureDevOps</username>
    <password>****</password>
  </server>
</servers>
<servers>
  <server>
    <id>MyFeedInOrg1</id>
    <username>AzureDevOps</username>
    <password>****</password>
  </server>
  <server>
    <id>MyFeedInOrg2</id>
    <username>AzureDevOps</username>
    <password>****</password>
  </server>
</servers>
To correctly authenticate the task, set the repositories in your project'spom.xmlto the same<id>as the name specified in the task for Maven.
pom.xml
<id>
Project scoped feed
<repository>
   <id>MyFeedInOrg1</id>
   <url>https://pkgs.dev.azure.com/OrganizationName/ProjectName/_packaging/MyProjectScopedFeed1/Maven/v1</url>
   <releases>
     <enabled>true</enabled>
   </releases>
   <snapshots>
     <enabled>true</enabled>
   </snapshots>
 </repository>
<repository>
   <id>MyFeedInOrg1</id>
   <url>https://pkgs.dev.azure.com/OrganizationName/ProjectName/_packaging/MyProjectScopedFeed1/Maven/v1</url>
   <releases>
     <enabled>true</enabled>
   </releases>
   <snapshots>
     <enabled>true</enabled>
   </snapshots>
 </repository>
Organization scoped feed
<repository>
   <id>MyFeedInOrg1</id>
   <url>https://pkgs.dev.azure.com/OrganizationName/_packaging/MyOrgScopedFeed1/Maven/v1</url>
   <releases>
     <enabled>true</enabled>
   </releases>
   <snapshots>
     <enabled>true</enabled>
   </snapshots>
 </repository>
<repository>
   <id>MyFeedInOrg1</id>
   <url>https://pkgs.dev.azure.com/OrganizationName/_packaging/MyOrgScopedFeed1/Maven/v1</url>
   <releases>
     <enabled>true</enabled>
   </releases>
   <snapshots>
     <enabled>true</enabled>
   </snapshots>
 </repository>
The Artifacts feed URL may or may not contain the project. A URL for a project-scoped feed must contain the project, and a URL for an organization-scoped feed must not contain the project. Learn more aboutproject-scoped feeds.
Authenticate Maven feeds outside your organization
In this example, we authenticate two external Maven repositories.
- task: MavenAuthenticate@0
  displayName: 'Maven Authenticate'
  inputs:
    MavenServiceConnections: central,MavenOrg
- task: MavenAuthenticate@0
  displayName: 'Maven Authenticate'
  inputs:
    MavenServiceConnections: central,MavenOrg
TheMavenAuthenticatetask updates thesettings.xmlfile present in the agent users' .m2 directory located at{user.home}/.m2/settings.xmlto add two entries inside the<servers>element.
MavenAuthenticate
settings.xml
{user.home}/.m2/settings.xml
<servers>
<servers>
  <server>
    <id>central</id>
    <username>centralUsername</username>
    <password>****</password>
  </server>
  <server>
    <id>MavenOrg</id>
    <username>mavenOrgUsername</username>
    <password>****</password>
  </server>
</servers>
<servers>
  <server>
    <id>central</id>
    <username>centralUsername</username>
    <password>****</password>
  </server>
  <server>
    <id>MavenOrg</id>
    <username>mavenOrgUsername</username>
    <password>****</password>
  </server>
</servers>
To correctly authenticate the task, set the repositories in your project'spom.xmlto the same<id>as the name specified in the task for Maven.
pom.xml
<id>
<repository>
  <id>central</id>
  <url>https://repo1.maven.org/maven2/</url>
  <releases>
    <enabled>true</enabled>
  </releases>
  <snapshots>
    <enabled>true</enabled>
  </snapshots>
</repository>
<repository>
  <id>central</id>
  <url>https://repo1.maven.org/maven2/</url>
  <releases>
    <enabled>true</enabled>
  </releases>
  <snapshots>
    <enabled>true</enabled>
  </snapshots>
</repository>
Requirements
Feedback
Was this page helpful?
Additional resources