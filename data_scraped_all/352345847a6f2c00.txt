Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Optimize the cluster utilization of DLT pipelines with Autoscaling
Article
2025-03-27
2 contributors
In this article
This article discusses how to use enhanced autoscaling to optimize your DLT pipelines on Azure Databricks.
Enhanced autoscaling is enabled by default for all new pipelines. Serverless pipelines also use vertical autoscaling. SeeWhat is vertical autoscaling?.
For serverless pipelines, enhanced autoscaling is always on and cannot be disabled. SeeConfigure a serverless DLT pipeline.
What is enhanced autoscaling?
Databricks enhanced autoscaling optimizes cluster utilization by automatically allocating cluster resources based on workload volume, with minimal impact on the data processing latency of your pipelines.
Enhanced autoscaling improves on the Azure Databrickscluster autoscaling functionalitywith the following features:
Enhanced autoscaling implements optimization of streaming workloads and adds enhancements to improve the performance of batch workloads. Enhanced autoscaling optimizes costs by adding or removing machines as the workload changes.
Enhanced autoscaling proactively shuts down under-utilized nodes while guaranteeing there are no failed tasks during shutdown. The existing cluster autoscaling feature scales down nodes only if the node is idle.
Enhanced autoscaling is the default autoscaling mode when you create a new pipeline in the DLT UI. You can enable enhanced autoscaling for existing pipelines by editing the pipeline settings in the UI. You can also enable enhanced autoscaling when you create or edit pipelines with the DLTAPI.
Which metrics does enhanced autoscaling use to make a scale-up or scale-down decision?
Enhanced autoscaling uses two metrics to decide on scaling up or scaling down:
Task slot utilization: This is the average ratio of thenumber of busy task slotsto thetotal task slots available in the cluster.
Task queue size: This is the number of tasks waiting to be executed in task slots.
Enable enhanced autoscaling for a DLT pipeline
Enhanced autoscaling is the default autoscaling mode when you create a new pipeline in the DLT UI. You can enable enhanced autoscaling for existing pipelines by editing the pipeline settings in the UI. You can also enable enhanced autoscaling when you create or edit a pipeline with the DLT API.
To use enhanced autoscaling, do one of the following:
SetCluster modetoEnhanced autoscalingwhen creating or editing a pipeline in the DLT UI.
Add theautoscalesetting to the pipeline cluster configuration and set themodefield toENHANCED. SeeConfigure compute for a DLT pipeline.
autoscale
mode
ENHANCED
Use the following guidelines when configuring enhanced autoscaling for production pipelines:
Leave theMin workerssetting at the default.
Min workers
Set theMax workerssetting to a value based on budget and pipeline priority.
Max workers
The following example configures an enhanced autoscaling cluster with a minimum of 5 workers and a maximum of 10 workers.max_workersmust be greater than or equal tomin_workers.
max_workers
min_workers
Note
Enhanced autoscaling is available forupdatesclusters only. Legacy autoscaling is used formaintenanceclusters.
updates
maintenance
Theautoscaleconfiguration has two modes:LEGACY: Usecluster autoscaling.ENHANCED: Use enhanced autoscaling.
autoscale
LEGACY: Usecluster autoscaling.
LEGACY
ENHANCED: Use enhanced autoscaling.
ENHANCED
{
  "clusters": [
    {
      "autoscale": {
        "min_workers": 5,
        "max_workers": 10,
        "mode": "ENHANCED"
      }
    }
  ]
}
{
  "clusters": [
    {
      "autoscale": {
        "min_workers": 5,
        "max_workers": 10,
        "mode": "ENHANCED"
      }
    }
  ]
}
If the pipeline is configured for continuous execution, it is automatically restarted after the autoscaling configuration changes. After restart, expect a short period of increased latency. Following this brief period of increased latency, the cluster size should be updated based on yourautoscaleconfiguration, and the pipeline latency should return to its previous latency characteristics.
autoscale
Limit costs for pipelines that use enhanced autoscaling
Note
You cannot configure workers for serverless pipelines.
Setting theMax workersparameter in the pipelinesComputepane sets an upper bound for autoscaling. Reducing the number of available workers might increase latency for some workloads but prevents compute resource costs from bursting during compute-intensive operations.
Databricks recommends tuning theMax workerssettings to balance the cost-latency trade-off for your particular needs.

Monitor enhanced autoscaling enabled classic pipelines
You can use the event log in the DLT user interface to monitor enhanced autoscaling metrics for classic pipelines. Enhanced autoscaling events have theautoscaleevent type. The following are example events:
autoscale
Scaling [up or down] to <y> executors from current cluster size of <x>
Achieved cluster size <x> for cluster <cluster-id> with status SUCCEEDED
Achieved cluster size <x> for cluster <cluster-id> with status PARTIALLY_SUCCEEDED
Achieved cluster size <x> for cluster <cluster-id> with status FAILED
You can also view enhanced autoscaling events by directly querying theevent log:
To query the event log for backlog metrics, seeMonitor data backlog by querying the event log.
To monitor cluster resizing requests and responses during enhanced autoscaling operations, seeMonitor enhanced autoscaling events from the event log for pipelines without serverless enabled.
What is vertical autoscaling?
serverless DLT pipelines adds to the horizontal autoscaling provided by Databricks enhanced autoscaling by automatically allocating the most cost-efficient instance types that can run your DLT pipeline without failing because of out-of-memory errors. Vertical autoscaling scales up when larger instance types are required to run a pipeline update and also scales down when it determines that the update can be run with smaller instance types. Vertical autoscaling determines whether driver nodes, worker nodes, or both driver and worker nodes should be scaled up or down.
Vertical autoscaling is used for all serverless DLT pipelines, including pipelines used by Databricks SQL materialized views and streaming tables.
Vertical autoscaling works by detecting pipeline updates that have failed because of out-of-memory errors. Vertical autoscaling allocates larger instance types when these failures are detected based on the out-of-memory data collected from the failed update. In production mode, a new update that uses the new compute resources is started automatically. In development mode, the new compute resources are used when you manually start a new update.
If vertical autoscaling detects that the memory of the allocated instances is consistently underutilized, it will scale down the instance types to use in the next pipeline update.
Feedback
Was this page helpful?
Additional resources