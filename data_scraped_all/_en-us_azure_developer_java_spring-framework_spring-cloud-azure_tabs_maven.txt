Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Spring Cloud Azure developer guide
Article
2025-03-26
10 contributors
Applies to: â Version 4.20.0, â Version 5.22.0
In this article
Spring is an open-source application framework developed by VMware that provides a simplified, modular approach for creating Java applications. Spring Cloud Azure is an open-source project that provides seamless Spring integration with Azure.
For more information about supported versions, seeSpring Versions Mapping.
Get help
If you have any questions about this documentation, create a GitHub issue in one of the following GitHub repositories. Pull requests are also welcome.
What's new in 4.0 since 3.10.x
This documentation covers changes made in 4.0 since 3.10. This major release brings better security, leaner dependencies, support for production readiness, and more.
Tip
For more information on migrating to 4.0, seeMigration guide for 4.0.
The following list summarizes some of the changes that Spring Cloud Azure 4.0 provides:
A unified development experience, with unified project name, artifact ID, and properties.
Simplified dependency management using a singlespring-cloud-azure-dependenciesBOM.
spring-cloud-azure-dependencies
Expanded Azure support onSpring Initializrto cover Kafka, Event Hubs, Azure Cache for Redis, and Azure App Configuration.
Rearchitected Spring module dependencies to remove excess layers and entanglement.
Managed Identity support for Azure App Configuration, Event Hubs, Service Bus, Azure Cosmos DB, Key Vault, Storage Blob, and Storage Queue.
Continued support for authentication methods in the underlying Azure SDK from our Spring libraries, such as SAS token and token credential authentication with Service Bus and Event Hubs.
Credential chain is now enabled by default, enabling applications to obtain credentials from application properties, environment variables, managed identity, IDEs, and so on. For more information, see theDefaultAzureCredentialsection ofAzure Identity client library for Java.
Granular access control at the resource level (such as Service Bus queue) to enable better security governance and adherence to IT policies.
More options exposed in a Spring-idiomatic way through improved auto-configuration coverage of Azure SDK clients for both synchronous and asynchronous scenarios.
Added health indicators for Azure App Configuration, Event Hubs, Azure Cosmos DB, Key Vault, Storage Blob, Storage Queue, and Storage File.
Spring Cloud Sleuth support for all HTTP-based Azure SDKs.
Migration guide for 4.0
For more information on migrating to 4.0, seeMigration guide for 4.0.
Getting started
Setting up dependencies
If you use Maven, add the BOM to yourpom.xmlfile in thedependencyManagementsection, as shown in the following example. When you use the BOM, you don't have to specify versions for any of the Maven dependencies because versioning is delegated to the BOM.
dependencyManagement
<dependencyManagement>
  <dependencies>
    <dependency>
      <groupId>com.azure.spring</groupId>
      <artifactId>spring-cloud-azure-dependencies</artifactId>
      <version>5.22.0</version>
      <type>pom</type>
      <scope>import</scope>
    </dependency>
  </dependencies>
</dependencyManagement>
<dependencyManagement>
  <dependencies>
    <dependency>
      <groupId>com.azure.spring</groupId>
      <artifactId>spring-cloud-azure-dependencies</artifactId>
      <version>5.22.0</version>
      <type>pom</type>
      <scope>import</scope>
    </dependency>
  </dependencies>
</dependencyManagement>
With Gradle, you can import thespring-cloud-azure-dependenciesBOM in the following ways:
spring-cloud-azure-dependencies
Use Gradleâs native BOM support by adding dependencies as shown in the following example:import org.springframework.boot.gradle.plugin.SpringBootPlugin

plugins {
  id("java")
  id("org.springframework.boot") version "3.2.O"
}

dependencies {
    implementation(platform(SpringBootPlugin.BOM_COORDINATES))
    implementation(platform("com.azure.spring:spring-cloud-azure-dependencies:{version}"))
}
Use Gradleâs native BOM support by adding dependencies as shown in the following example:
import org.springframework.boot.gradle.plugin.SpringBootPlugin

plugins {
  id("java")
  id("org.springframework.boot") version "3.2.O"
}

dependencies {
    implementation(platform(SpringBootPlugin.BOM_COORDINATES))
    implementation(platform("com.azure.spring:spring-cloud-azure-dependencies:{version}"))
}
import org.springframework.boot.gradle.plugin.SpringBootPlugin

plugins {
  id("java")
  id("org.springframework.boot") version "3.2.O"
}

dependencies {
    implementation(platform(SpringBootPlugin.BOM_COORDINATES))
    implementation(platform("com.azure.spring:spring-cloud-azure-dependencies:{version}"))
}
Use theio.spring.dependency-managementplugin and import the BOM independencyManagement, as shown in the following example:plugins {
    id("io.spring.dependency-management") version "1.1.0"
}

dependencyManagement {
    imports {
        mavenBom("com.azure.spring:spring-cloud-azure-dependencies:{version}")
    }
}
Use theio.spring.dependency-managementplugin and import the BOM independencyManagement, as shown in the following example:
io.spring.dependency-management
dependencyManagement
plugins {
    id("io.spring.dependency-management") version "1.1.0"
}

dependencyManagement {
    imports {
        mavenBom("com.azure.spring:spring-cloud-azure-dependencies:{version}")
    }
}
plugins {
    id("io.spring.dependency-management") version "1.1.0"
}

dependencyManagement {
    imports {
        mavenBom("com.azure.spring:spring-cloud-azure-dependencies:{version}")
    }
}
For more information, seeSpring Boot Gradle Plugin Reference Guide.
Note
If you're using Spring Boot 2.x, be sure to set thespring-cloud-azure-dependenciesversion to4.20.0.
This Bill of Material (BOM) should be configured in the<dependencyManagement>section of yourpom.xmlfile. This ensures that all Spring Cloud Azure dependencies are using the same version.
For more information about the version used for this BOM, seeWhich Version of Spring Cloud Azure Should I Use.
spring-cloud-azure-dependencies
4.20.0
<dependencyManagement>
Spring Cloud Azure Starters are a set of convenient dependency descriptors to include in your application. Each starter contains all the dependencies and transitive dependencies needed to begin using their corresponding Spring Cloud Azure module. These starters boost your Spring Boot application development with Azure services.
For example, if you want to get started using Spring and Azure Cosmos DB for data persistence, include thespring-cloud-azure-starter-cosmosdependency in your project.
spring-cloud-azure-starter-cosmos
The following table lists application starters provided by Spring Cloud Azure under thecom.azure.springgroup:
com.azure.spring
The following table lists starters for Spring Data support:
The following table lists starters for Spring Integration support:
The following table lists starters for Spring Cloud Stream support:
The following table lists starters for MySQL support:
The following table lists starters for PostgreSQL support:
Learning Spring Cloud Azure
For a full list of samples that show usage, seeSpring Cloud Azure Samples.
Feedback
Was this page helpful?
Additional resources