Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
fscommand group
fs
Article
2025-01-01
4 contributors
In this article
Note
This information applies to Databricks CLI versions 0.205 and above. The Databricks CLI is inPublic Preview.
Databricks CLI use is subject to theDatabricks LicenseandDatabricks Privacy Notice, including any Usage Data provisions.
Thefscommand group within theDatabricks CLIallows you to automatevolumesin Unity Catalog and to automateDatabricks File System (DBFS)objects.
fs
You runfscommands by appending them todatabricks fs. To display help for thefscommand, rundatabricks fs -h.
fs
databricks fs
fs
databricks fs -h
fscommands require volume paths to begin withdbfs:/Volumesand require directory and file paths in DBFS to begin withdbfs:/.
fs
dbfs:/Volumes
dbfs:/
Important
Using the Databricks CLI or REST APIs with firewall-enabled storage containers is not supported. Databricks recommends you useDatabricks Connectoraz storage.
List the contents of a directory
To list the contents of a directory in a volume or in DBFS, use thelscommand. Specify the path to the directory. The following examples list the names of the objects found in the specified volumeâs root or in the DBFS root:
ls
databricks fs ls dbfs:/Volumes/main/default/my-volume
databricks fs ls dbfs:/
databricks fs ls dbfs:/Volumes/main/default/my-volume
databricks fs ls dbfs:/
To display full information including object types, sizes, modification times since Epoch in milliseconds, as well as the objectsâ names, use the--longor-loption. The following examples list the full information of the objects found in the specified volumeâs root or in atmpdirectory within the DBFS root:
--long
-l
tmp
databricks fs ls dbfs:/Volumes/main/default/my-volume -l
databricks fs ls dbfs:/tmp -l
databricks fs ls dbfs:/Volumes/main/default/my-volume -l
databricks fs ls dbfs:/tmp -l
To display full object paths, use the--absoluteoption. The following examples list the full information of the objects, and the objectsâ full paths, found in the specified volumeâs root or in atmpdirectory within the DBFS root:
--absolute
tmp
databricks fs ls dbfs:/Volumes/main/default/my-volume -l --absolute
databricks fs ls dbfs:/tmp -l --absolute
databricks fs ls dbfs:/Volumes/main/default/my-volume -l --absolute
databricks fs ls dbfs:/tmp -l --absolute
Output the contents of a file
To output the contents of a file, use thecatcommand. Specify the path to the file in DBFS. The following examples output the contents of the file namedbabynames.csvfound in the specified volumeâs root or in atmpdirectory within the DBFS root:
cat
babynames.csv
tmp
databricks fs cat dbfs:/Volumes/main/default/my-volume/babynames.csv
databricks fs cat dbfs:/tmp/babynames.csv
databricks fs cat dbfs:/Volumes/main/default/my-volume/babynames.csv
databricks fs cat dbfs:/tmp/babynames.csv
The following examples return errors, as they try to output the contents of a directory instead of a file:
databricks fs cat dbfs:/Volumes/main/default/my-volume
databricks fs cat dbfs:/tmp
databricks fs cat dbfs:/Volumes/main/default/my-volume
databricks fs cat dbfs:/tmp
Create a directory
To create a directory, use themkdircommand. Specify the path to the directory to be created in a volume or in DBFS. If the directory already exists, nothing happens. The following examples create a directory namedsquirrel-datawithin the specified volumeâs root or in a directory namedtmpwithin the DBFS root:
mkdir
squirrel-data
tmp
databricks fs mkdir dbfs:/Volumes/main/default/my-volume/squirrel-data
databricks fs mkdir dbfs:/tmp/squirrel-data
databricks fs mkdir dbfs:/Volumes/main/default/my-volume/squirrel-data
databricks fs mkdir dbfs:/tmp/squirrel-data
Copy a directory or a file
To copy a directory or a file, use thecpcommand. Specify the paths to the source directory or file to copy and its destination. You can copy directories and files between the local filesystem and DBFS, and you can copy directories and files between DBFS paths. To overwrite existing files, use the--overwriteoption. To recursively copy files within a directory, use the--recursiveor-roption.
cp
--overwrite
--recursive
-r
Thecpcommand assumesfile:/, iffile:/is omitted.
cp
file:/
file:/
The following examples copy a directory namedsquirrel-dataand its contents, from a local filesystem path to asquirrelsdirectory within the specified volumeâs root or the DBFS root.
squirrel-data
squirrels
databricks fs cp /Users/<username>/squirrel-data dbfs:/Volumes/main/default/my-volume/squirrels -r
databricks fs cp /Users/<username>/squirrel-data dbfs:/squirrels -r
databricks fs cp /Users/<username>/squirrel-data dbfs:/Volumes/main/default/my-volume/squirrels -r
databricks fs cp /Users/<username>/squirrel-data dbfs:/squirrels -r
The following example copies a file namedsquirrels.csvfrom a local filesystem path to a directory namedsquirrel-datawithin the specified volumeâs root or the DBFS root. If the file already exists in the destination, it is overwritten.
squirrels.csv
squirrel-data
databricks fs cp /Users/<username>/squirrels.csv dbfs:/Volumes/main/default/my-volume/squirrel-data --overwrite
databricks fs cp /Users/<username>/squirrels.csv dbfs:/squirrel-data --overwrite
databricks fs cp /Users/<username>/squirrels.csv dbfs:/Volumes/main/default/my-volume/squirrel-data --overwrite
databricks fs cp /Users/<username>/squirrels.csv dbfs:/squirrel-data --overwrite
Remove a directory
To remove a directory, use thermcommand. Specify the path to the existing directory in DBFS. The following examples remove a directory namedsquirrel-datafrom the specified volumeâs root or from atmpdirectory in the DBFS root:
rm
squirrel-data
tmp
databricks fs rm dbfs:/Volumes/main/default/my-volume/squirrel-data
databricks fs rm dbfs:/tmp/squirrel-data
databricks fs rm dbfs:/Volumes/main/default/my-volume/squirrel-data
databricks fs rm dbfs:/tmp/squirrel-data
If the directory does not exist, nothing happens, and no error is returned.
If the directory exists but is not empty, an error is returned. To remove a non-empty directory and all of its contents, use the--recursiveor-roption. The following examples remove a non-empty directory namedsquirrel-datafrom the specified volumeâs root or from atmpdirectory in the DBFS root:
--recursive
-r
squirrel-data
tmp
databricks fs rm dbfs:/Volumes/main/default/my-volume/squirrel-data -r
databricks fs rm dbfs:/tmp/squirrel-data -r
databricks fs rm dbfs:/Volumes/main/default/my-volume/squirrel-data -r
databricks fs rm dbfs:/tmp/squirrel-data -r
Feedback
Was this page helpful?
Additional resources