Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Configure an expiration policy for shared access signatures
Article
2024-07-30
8 contributors
In this article
You can use a shared access signature (SAS) to delegate access to resources in your Azure Storage account. A SAS token includes the targeted resource, the permissions granted, and the interval over which access is permitted. Best practices recommend that you limit the interval for a SAS in case it's compromised. By setting a SAS expiration policy for your storage accounts, you can provide a recommended upper expiration limit when a user creates a user delegation SAS, a service SAS, or an account SAS.
For more information about shared access signatures, seeGrant limited access to Azure Storage resources using shared access signatures (SAS).
Important
For scenarios where shared access signatures are used, Microsoft recommends using a user delegation SAS. A user delegation SAS is secured with Microsoft Entra credentials instead of the account key, which provides superior security.
About SAS expiration policies
You can configure a SAS expiration policy on the storage account. The SAS expiration policy specifies the recommended upper limit for the signed expiry field on a user delegation SAS, a service SAS, or an account SAS. The recommended upper limit is specified as a date/time value that is a combined number of days, hours, minutes, and seconds.
The validity interval for the SAS is calculated by subtracting the date/time value of the signed start field from the date/time value of the signed expiry field. If the resulting value is less than or equal to the recommended upper limit, then the SAS is in compliance with the SAS expiration policy.
After you configure the SAS expiration policy, any user who creates a SAS with an interval that exceeds the recommended upper limit will see a warning.
A SAS expiration policy doesn't prevent a user from creating a SAS with an expiration that exceeds the limit recommended by the policy. When a user creates a SAS that violates the policy, they see a warning, along with the recommended maximum interval. If you've configured a diagnostic setting for logging with Azure Monitor, then Azure Storage writes a message to theSasExpiryStatusproperty in the logs whenever a userusesa SAS that expires after the recommended interval. The message indicates that the validity interval of the SAS exceeds the recommended interval.
When a SAS expiration policy is in effect for the storage account, the signed start field is required for every SAS. If the signed start field isn't included on the SAS, and you've configured a diagnostic setting for logging with Azure Monitor, then Azure Storage writes a message to theSasExpiryStatusproperty in the logs whenever a userusesa SAS without a value for the signed start field.
Configure a SAS expiration policy
When you configure a SAS expiration policy on a storage account, the policy applies to each type of SAS: user delegation SAS, service SAS, and account SAS. Service SAS and account SAS types are signed with the account key, while user delegation SAS is signed with Microsoft Entra credentials.
Note
A user delegation SAS is signed with a user delegation key, which is obtained using Microsoft Entra credentials. The user delegation key has its own expiry interval which isn't subject to the SAS expiration policy. The SAS expiration policy applies only to the user delegation SAS, not the user delegation key it's signed with.
A user delegation SAS has a maximum expiry interval of 7 days, regardless of the SAS expiration policy. If the SAS expiration policy is set to a value greater than 7 days, then the policy has no effect for a user delegation SAS. If the user delegation key expires, then any user delegation SAS signed with that key is invalid and any attempt to use the SAS returns an error.
Do I need to rotate the account access keys first?
This section applies to service SAS and account SAS types, which are signed with the account key. Before you can configure a SAS expiration policy, you might need to rotate each of your account access keys at least once. If thekeyCreationTimeproperty of the storage account has a null value for either of the account access keys (key1 and key2), you'll need to rotate them. To determine whether thekeyCreationTimeproperty is null, seeGet the creation time of the account access keys for a storage account. If you attempt to configure a SAS expiration policy and the keys need to be rotated first, the operation fails.
How to configure a SAS expiration policy
You can configure a SAS expiration policy using the Azure portal, PowerShell, or Azure CLI.
Azure portal
PowerShell
Azure CLI
To configure a SAS expiration policy in the Azure portal, follow these steps:
Navigate to your storage account in the Azure portal.
Navigate to your storage account in the Azure portal.
UnderSettings, selectConfiguration.
UnderSettings, selectConfiguration.
Locate the setting forAllow recommended upper limit for shared access signature (SAS) expiry interval, and set it toEnabled.NoteIf the setting is grayed out and you see the message shown in the image below, thenyou will need to rotate both account access keysbefore you can set theRecommended upper limit for SAS expiry intervalvalues:
Locate the setting forAllow recommended upper limit for shared access signature (SAS) expiry interval, and set it toEnabled.
Note
If the setting is grayed out and you see the message shown in the image below, thenyou will need to rotate both account access keysbefore you can set theRecommended upper limit for SAS expiry intervalvalues:

Specify the time values underRecommended upper limit for SAS expiry intervalfor the recommended interval for any new shared access signatures that are created on resources in this storage account.
Specify the time values underRecommended upper limit for SAS expiry intervalfor the recommended interval for any new shared access signatures that are created on resources in this storage account.

SelectSaveto save your changes.
SelectSaveto save your changes.
To configure a SAS expiration policy, use theSet-AzStorageAccountcommand, and then set the-SasExpirationPeriodparameter to the number of days, hours, minutes, and seconds that a SAS token can be active from the time that a SAS is signed. The string that you provide the-SasExpirationPeriodparameter uses the following format:<days>.<hours>:<minutes>:<seconds>. For example, if you wanted the SAS to expire 1 day, 12 hours, 5 minutes, and 6 seconds after it's signed, then you would use the string1.12:05:06.
-SasExpirationPeriod
-SasExpirationPeriod
<days>.<hours>:<minutes>:<seconds>
1.12:05:06
$account = Set-AzStorageAccount -ResourceGroupName <resource-group> `
    -Name <storage-account-name> `
    -SasExpirationPeriod <days>.<hours>:<minutes>:<seconds>
$account = Set-AzStorageAccount -ResourceGroupName <resource-group> `
    -Name <storage-account-name> `
    -SasExpirationPeriod <days>.<hours>:<minutes>:<seconds>
Tip
You can also set the SAS expiration policy as you create a storage account by setting the-SasExpirationPeriodparameter of theNew-AzStorageAccountcommand.
-SasExpirationPeriod
Note
If you get an error message indicating that the creation time for a key has not been set,rotate the account access keysand try again.
To verify that the policy has been applied, check the storage account's SasPolicy property.
$account.SasPolicy
$account.SasPolicy
The SAS expiration period appears in the console output.

To configure a SAS expiration policy, use theaz storage account updatecommand, and then set the--key-exp-daysparameter to the number of days, hours, minutes, and seconds that a SAS token can be active from the time that a SAS is signed. The string that you provide the--key-exp-daysparameter uses the following format:<days>.<hours>:<minutes>:<seconds>. For example, if you wanted the SAS to expire 1 day, 12 hours, 5 minutes, and 6 seconds after it's signed, then you would use the string1.12:05:06.
--key-exp-days
--key-exp-days
<days>.<hours>:<minutes>:<seconds>
1.12:05:06
az storage account update \
  --name <storage-account> \
  --resource-group <resource-group> \
  --sas-exp <days>.<hours>:<minutes>:<seconds>
az storage account update \
  --name <storage-account> \
  --resource-group <resource-group> \
  --sas-exp <days>.<hours>:<minutes>:<seconds>
Tip
You can also set the SAS expiration policy as you create a storage account by setting the--key-exp-daysparameter of theaz storage account createcommand.
--key-exp-days
Note
If you get an error message indicating that the creation time for a key has not been set,rotate the account access keysand try again.
To verify that the policy has been applied, call theaz storage account showcommand, and use the string{SasPolicy:sasPolicy}for the-queryparameter.
{SasPolicy:sasPolicy}
-query
az storage account show \
  --name <storage-account> \
  --resource-group <resource-group> \
  --query "{SasPolicy:sasPolicy}"
az storage account show \
  --name <storage-account> \
  --resource-group <resource-group> \
  --query "{SasPolicy:sasPolicy}"
The SAS expiration period appears in the console output.
{
  "SasPolicy": {
    "expirationAction": "Log",
    "sasExpirationPeriod": "1.12:05:06"
  }
}
{
  "SasPolicy": {
    "expirationAction": "Log",
    "sasExpirationPeriod": "1.12:05:06"
  }
}
Query logs for policy violations
To log the use of a SAS that is valid over a longer interval than the SAS expiration policy recommends, first create a diagnostic setting that sends logs to an Azure Log Analytics workspace. For more information, seeSend logs to Azure Log Analytics.
Next, use an Azure Monitor log query to monitor whether policy has been violated. Create a new query in your Log Analytics workspace, add the following query text, and pressRun.
StorageBlobLogs 
| where SasExpiryStatus startswith "Policy violated"
| summarize count() by AccountName, SasExpiryStatus
StorageBlobLogs 
| where SasExpiryStatus startswith "Policy violated"
| summarize count() by AccountName, SasExpiryStatus
Use a built-in policy to monitor compliance
You can monitor your storage accounts with Azure Policy to ensure that storage accounts in your subscription have configured SAS expiration policies. Azure Storage provides a built-in policy for ensuring that accounts have this setting configured. For more information about the built-in policy, seeStorage accounts should have shared access signature (SAS) policies configuredinList of built-in policy definitions.
Assign the built-in policy for a resource scope
Follow these steps to assign the built-in policy to the appropriate scope in the Azure portal:
In the Azure portal, search forPolicyto display the Azure Policy dashboard.
In the Azure portal, search forPolicyto display the Azure Policy dashboard.
In theAuthoringsection, selectAssignments.
In theAuthoringsection, selectAssignments.
ChooseAssign policy.
ChooseAssign policy.
On theBasicstab of theAssign policypage, in theScopesection, specify the scope for the policy assignment. Select theMorebutton to choose the subscription and optional resource group.
On theBasicstab of theAssign policypage, in theScopesection, specify the scope for the policy assignment. Select theMorebutton to choose the subscription and optional resource group.
For thePolicy definitionfield, select theMorebutton, and enterstorage account keysin theSearchfield. Select the policy definition namedStorage account keys should not be expired.
For thePolicy definitionfield, select theMorebutton, and enterstorage account keysin theSearchfield. Select the policy definition namedStorage account keys should not be expired.

SelectReview + createto assign the policy definition to the specified scope.
SelectReview + createto assign the policy definition to the specified scope.

Monitor compliance with the key expiration policy
To monitor your storage accounts for compliance with the key expiration policy, follow these steps:
On the Azure Policy dashboard, locate the built-in policy definition for the scope that you specified in the policy assignment. You can search forStorage accounts should have shared access signature (SAS) policies configuredin theSearchbox to filter for the built-in policy.
On the Azure Policy dashboard, locate the built-in policy definition for the scope that you specified in the policy assignment. You can search forStorage accounts should have shared access signature (SAS) policies configuredin theSearchbox to filter for the built-in policy.
Storage accounts should have shared access signature (SAS) policies configured
Select the policy name with the desired scope.
Select the policy name with the desired scope.
On thePolicy assignmentpage for the built-in policy, selectView compliance. Any storage accounts in the specified subscription and resource group that don't meet the policy requirements appear in the compliance report.
On thePolicy assignmentpage for the built-in policy, selectView compliance. Any storage accounts in the specified subscription and resource group that don't meet the policy requirements appear in the compliance report.

To bring a storage account into compliance, configure a SAS expiration policy for that account, as described inConfigure a SAS expiration policy.
See also
Grant limited access to Azure Storage resources using shared access signatures (SAS)
Create a service SAS
Create an account SAS
Feedback
Was this page helpful?
Additional resources