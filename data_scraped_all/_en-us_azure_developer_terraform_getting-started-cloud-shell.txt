Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Configure Terraform in Azure Cloud Shell with Bash
Article
2024-06-20
2 contributors
In this article
Terraformenables the definition, preview, and deployment of cloud infrastructure. Using Terraform, you create configuration files usingHCL syntax. The HCL syntax allows you to specify the cloud provider - such as Azure - and the elements that make up your cloud infrastructure. After you create your configuration files, you create anexecution planthat allows you to preview your infrastructure changes before they're deployed. Once you verify the changes, you apply the execution plan to deploy the infrastructure.
This article presents you with the options to authenticate to Azure for use with Terraform.
In this article, you learn how to:
Configure Cloud Shell
Display current Azure account
Understand common Terraform and Azure authentication scenarios
Authenticate via a Microsoft account from Cloud Shell (using Bash or PowerShell)
Authenticate via a Microsoft account from Windows (using Bash or PowerShell)
Create a service principal using the Azure CLI
Create a service principal using Azure PowerShell
Specify service principal credentials in environment variables
Specify service principal credentials in a Terraform provider block
1. Configure your environment
Azure subscription: If you don't have an Azure subscription, create afree accountbefore you begin.
2. Open Cloud Shell
If you already have a Cloud Shell session open, you can skip to the next section.
If you already have a Cloud Shell session open, you can skip to the next section.
Browse to theAzure portal
Browse to theAzure portal
If necessary, log in to your Azure subscription and change the Azure directory.
If necessary, log in to your Azure subscription and change the Azure directory.
Open Cloud Shell.
Open Cloud Shell.

If you haven't previously used Cloud Shell, configure the environment and storage settings.
If you haven't previously used Cloud Shell, configure the environment and storage settings.
Select the command-line environment.
Select the command-line environment.

3. Install latest version of Terraform in Azure Cloud Shell
Cloud Shell automatically updates to the latest version of Terraform. However, the updates come within a couple of weeks of release. This article shows you how to download and install the current version of Terraform.
Determine the version of Terraform being used in Cloud Shell.terraform version
Determine the version of Terraform being used in Cloud Shell.
terraform version
terraform version
If the Terraform version installed in Cloud Shell isn't the latest version, you see a message indicating that the version of Terraform is out of date.
If the Terraform version installed in Cloud Shell isn't the latest version, you see a message indicating that the version of Terraform is out of date.
If you're fine working with the indicated version, skip to the next section. Otherwise, continue with the following steps.
If you're fine working with the indicated version, skip to the next section. Otherwise, continue with the following steps.
Browse to theTerraform downloads page.
Browse to theTerraform downloads page.
Scroll down to theLinuxdownload links.
Scroll down to theLinuxdownload links.
Move your mouse over the64-bitlink. This link is for the latest 64-bit Linux AMD version, which is appropriate for Cloud Shell.
Move your mouse over the64-bitlink. This link is for the latest 64-bit Linux AMD version, which is appropriate for Cloud Shell.
Copy the URL.
Copy the URL.
Runcurl, replacing the placeholder with the URL from the previous step.curl -O <terraform_download_url>
Runcurl, replacing the placeholder with the URL from the previous step.
curl
curl -O <terraform_download_url>
curl -O <terraform_download_url>
Unzip the file.unzip <zip_file_downloaded_in_previous_step>
Unzip the file.
unzip <zip_file_downloaded_in_previous_step>
unzip <zip_file_downloaded_in_previous_step>
If the directory doesn't exist, create a directory namedbin.mkdir bin
If the directory doesn't exist, create a directory namedbin.
bin
mkdir bin
mkdir bin
Move theterraformfile into thebindirectory.mv terraform bin/
Move theterraformfile into thebindirectory.
terraform
bin
mv terraform bin/
mv terraform bin/
Close and restart Cloud Shell.
Close and restart Cloud Shell.
Verify that the downloaded version of Terraform is first in the path.terraform version
Verify that the downloaded version of Terraform is first in the path.
terraform version
terraform version
4. Verify the default Azure subscription
When you log in to the Azure portal with a Microsoft account, the default Azure subscription for that account is used.
Terraform automatically authenticates using information from the default Azure subscription.
Runaz account showto verify the current Microsoft account and Azure subscription.
az account show
az account show
Any changes you make via Terraform are on the displayed Azure subscription. If that's what you want, skip the rest of this article.
Troubleshoot Terraform on Azure
Troubleshoot common problems when using Terraform on Azure
Next steps
Authenticate Terraform to Azure
Feedback
Was this page helpful?
Additional resources