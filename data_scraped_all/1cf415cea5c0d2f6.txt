Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
steps.checkout definition
Article
2025-03-25
4 contributors
In this article
Usecheckoutto configure how the pipeline checks out source code.
checkout
steps:
- checkout: string # Required as first property. Configures checkout for the specified repository.
  clean: true | false # If true, run git clean -ffdx followed by git reset --hard HEAD before fetching.
  fetchDepth: string # Depth of Git graph to fetch.
  fetchFilter: string # Filter Git history.
  fetchTags: string # Set to 'true' to sync tags when fetching the repo, or 'false' to not sync tags. See remarks for the default behavior.
  lfs: string # Set to 'true' to download Git-LFS files. Default is not to download them.
  persistCredentials: string # Set to 'true' to leave the OAuth token in the Git config after the initial fetch. The default is not to leave it.
  submodules: string # Set to 'true' for a single level of submodules or 'recursive' to get submodules of submodules. Default is not to fetch submodules.
  path: string # Where to put the repository. The root directory is $(Pipeline.Workspace).
  sparseCheckoutDirectories: string # Directories for sparse checkout in cone mode and prioritized over sparseCheckoutPatterns if both properties are provided.
  sparseCheckoutPatterns: string # Patterns for sparse checkout in non-cone mode that are ignored if sparseCheckoutDirectories is provided.
  workspaceRepo: true | false # When true, use the repository root directory as the default working directory for the pipeline. The default is false.
  condition: string # Evaluate this condition expression to determine whether to run this task.
  continueOnError: boolean # Continue running even on failure?
  displayName: string # Human-readable name for the task.
  target: string | target # Environment in which to run this task.
  enabled: boolean # Run this task when the job runs?
  env: # Variables to map into the process's environment.
    string: string # Name/value pairs
  name: string # ID of the step.
  timeoutInMinutes: string # Time to wait for this task to complete before the server kills it.
  retryCountOnTaskFailure: string # Number of retries if the task fails.
steps:
- checkout: string # Required as first property. Configures checkout for the specified repository.
  clean: true | false # If true, run git clean -ffdx followed by git reset --hard HEAD before fetching.
  fetchDepth: string # Depth of Git graph to fetch.
  fetchFilter: string # Filter Git history.
  fetchTags: string # Set to 'true' to sync tags when fetching the repo, or 'false' to not sync tags. See remarks for the default behavior.
  lfs: string # Set to 'true' to download Git-LFS files. Default is not to download them.
  persistCredentials: string # Set to 'true' to leave the OAuth token in the Git config after the initial fetch. The default is not to leave it.
  submodules: string # Set to 'true' for a single level of submodules or 'recursive' to get submodules of submodules. Default is not to fetch submodules.
  path: string # Where to put the repository. The root directory is $(Pipeline.Workspace).
  sparseCheckoutDirectories: string # Directories for sparse checkout in cone mode and prioritized over sparseCheckoutPatterns if both properties are provided.
  sparseCheckoutPatterns: string # Patterns for sparse checkout in non-cone mode that are ignored if sparseCheckoutDirectories is provided.
  workspaceRepo: true | false # When true, use the repository root directory as the default working directory for the pipeline. The default is false.
  condition: string # Evaluate this condition expression to determine whether to run this task.
  continueOnError: boolean # Continue running even on failure?
  displayName: string # Human-readable name for the task.
  target: string | target # Environment in which to run this task.
  enabled: boolean # Run this task when the job runs?
  env: # Variables to map into the process's environment.
    string: string # Name/value pairs
  name: string # ID of the step.
  timeoutInMinutes: string # Time to wait for this task to complete before the server kills it.
  retryCountOnTaskFailure: string # Number of retries if the task fails.
steps:
- checkout: string # Required as first property. Configures checkout for the specified repository.
  clean: true | false # If true, run git clean -ffdx followed by git reset --hard HEAD before fetching.
  fetchDepth: string # Depth of Git graph to fetch.
  fetchTags: string # Set to 'true' to sync tags when fetching the repo, or 'false' to not sync tags. See remarks for the default behavior.
  lfs: string # Set to 'true' to download Git-LFS files. Default is not to download them.
  persistCredentials: string # Set to 'true' to leave the OAuth token in the Git config after the initial fetch. The default is not to leave it.
  submodules: string # Set to 'true' for a single level of submodules or 'recursive' to get submodules of submodules. Default is not to fetch submodules.
  path: string # Where to put the repository. The root directory is $(Pipeline.Workspace).
  condition: string # Evaluate this condition expression to determine whether to run this task.
  continueOnError: boolean # Continue running even on failure?
  displayName: string # Human-readable name for the task.
  target: string | target # Environment in which to run this task.
  enabled: boolean # Run this task when the job runs?
  env: # Variables to map into the process's environment.
    string: string # Name/value pairs
  name: string # ID of the step.
  timeoutInMinutes: string # Time to wait for this task to complete before the server kills it.
  retryCountOnTaskFailure: string # Number of retries if the task fails.
steps:
- checkout: string # Required as first property. Configures checkout for the specified repository.
  clean: true | false # If true, run git clean -ffdx followed by git reset --hard HEAD before fetching.
  fetchDepth: string # Depth of Git graph to fetch.
  fetchTags: string # Set to 'true' to sync tags when fetching the repo, or 'false' to not sync tags. See remarks for the default behavior.
  lfs: string # Set to 'true' to download Git-LFS files. Default is not to download them.
  persistCredentials: string # Set to 'true' to leave the OAuth token in the Git config after the initial fetch. The default is not to leave it.
  submodules: string # Set to 'true' for a single level of submodules or 'recursive' to get submodules of submodules. Default is not to fetch submodules.
  path: string # Where to put the repository. The root directory is $(Pipeline.Workspace).
  condition: string # Evaluate this condition expression to determine whether to run this task.
  continueOnError: boolean # Continue running even on failure?
  displayName: string # Human-readable name for the task.
  target: string | target # Environment in which to run this task.
  enabled: boolean # Run this task when the job runs?
  env: # Variables to map into the process's environment.
    string: string # Name/value pairs
  name: string # ID of the step.
  timeoutInMinutes: string # Time to wait for this task to complete before the server kills it.
  retryCountOnTaskFailure: string # Number of retries if the task fails.
steps:
- checkout: string # Required as first property. Configures checkout for the specified repository.
  clean: true | false # If true, run git clean -ffdx followed by git reset --hard HEAD before fetching.
  fetchDepth: string # Depth of Git graph to fetch.
  lfs: string # Set to 'true' to download Git-LFS files. Default is not to download them.
  persistCredentials: string # Set to 'true' to leave the OAuth token in the Git config after the initial fetch. The default is not to leave it.
  submodules: string # Set to 'true' for a single level of submodules or 'recursive' to get submodules of submodules. Default is not to fetch submodules.
  path: string # Where to put the repository. The root directory is $(Pipeline.Workspace).
  condition: string # Evaluate this condition expression to determine whether to run this task.
  continueOnError: boolean # Continue running even on failure?
  displayName: string # Human-readable name for the task.
  target: string | target # Environment in which to run this task.
  enabled: boolean # Run this task when the job runs?
  env: # Variables to map into the process's environment.
    string: string # Name/value pairs
  name: string # ID of the step.
  timeoutInMinutes: string # Time to wait for this task to complete before the server kills it.
  retryCountOnTaskFailure: string # Number of retries if the task fails.
steps:
- checkout: string # Required as first property. Configures checkout for the specified repository.
  clean: true | false # If true, run git clean -ffdx followed by git reset --hard HEAD before fetching.
  fetchDepth: string # Depth of Git graph to fetch.
  lfs: string # Set to 'true' to download Git-LFS files. Default is not to download them.
  persistCredentials: string # Set to 'true' to leave the OAuth token in the Git config after the initial fetch. The default is not to leave it.
  submodules: string # Set to 'true' for a single level of submodules or 'recursive' to get submodules of submodules. Default is not to fetch submodules.
  path: string # Where to put the repository. The root directory is $(Pipeline.Workspace).
  condition: string # Evaluate this condition expression to determine whether to run this task.
  continueOnError: boolean # Continue running even on failure?
  displayName: string # Human-readable name for the task.
  target: string | target # Environment in which to run this task.
  enabled: boolean # Run this task when the job runs?
  env: # Variables to map into the process's environment.
    string: string # Name/value pairs
  name: string # ID of the step.
  timeoutInMinutes: string # Time to wait for this task to complete before the server kills it.
  retryCountOnTaskFailure: string # Number of retries if the task fails.
steps:
- checkout: string # Required as first property. Configures checkout for the specified repository.
  clean: true | false # If true, run git clean -ffdx followed by git reset --hard HEAD before fetching.
  fetchDepth: string # Depth of Git graph to fetch.
  lfs: string # Set to 'true' to download Git-LFS files. Default is not to download them.
  persistCredentials: string # Set to 'true' to leave the OAuth token in the Git config after the initial fetch. The default is not to leave it.
  submodules: string # Set to 'true' for a single level of submodules or 'recursive' to get submodules of submodules. Default is not to fetch submodules.
  path: string # Where to put the repository. The root directory is $(Pipeline.Workspace).
  condition: string # Evaluate this condition expression to determine whether to run this task.
  continueOnError: boolean # Continue running even on failure?
  displayName: string # Human-readable name for the task.
  target: string | target # Environment in which to run this task.
  enabled: boolean # Run this task when the job runs?
  env: # Variables to map into the process's environment.
    string: string # Name/value pairs
  name: string # ID of the step.
  timeoutInMinutes: string # Time to wait for this task to complete before the server kills it.
steps:
- checkout: string # Required as first property. Configures checkout for the specified repository.
  clean: true | false # If true, run git clean -ffdx followed by git reset --hard HEAD before fetching.
  fetchDepth: string # Depth of Git graph to fetch.
  lfs: string # Set to 'true' to download Git-LFS files. Default is not to download them.
  persistCredentials: string # Set to 'true' to leave the OAuth token in the Git config after the initial fetch. The default is not to leave it.
  submodules: string # Set to 'true' for a single level of submodules or 'recursive' to get submodules of submodules. Default is not to fetch submodules.
  path: string # Where to put the repository. The root directory is $(Pipeline.Workspace).
  condition: string # Evaluate this condition expression to determine whether to run this task.
  continueOnError: boolean # Continue running even on failure?
  displayName: string # Human-readable name for the task.
  target: string | target # Environment in which to run this task.
  enabled: boolean # Run this task when the job runs?
  env: # Variables to map into the process's environment.
    string: string # Name/value pairs
  name: string # ID of the step.
  timeoutInMinutes: string # Time to wait for this task to complete before the server kills it.
Definitions that reference this definition:steps
Properties
checkoutstring. Required as first property.Configures checkout for the specified repository. Specifyself,none,repository name, orrepository resource. For more information, seeCheck out multiple repositories in your pipeline.
checkout
self
none
Note
If nocheckoutstep is present, it defaults toselfforjobs.job.step.checkoutandnoneforjobs.deployment.steps.checkout.
checkout
self
jobs.job.step.checkout
none
jobs.deployment.steps.checkout
cleanstring.If true, run git clean -ffdx followed by git reset --hard HEAD before fetching. true | false.
clean
fetchDepthstring.Depth of Git graph to fetch.
fetchDepth
fetchFilterstring.UsefetchFilterto filter Git history for partial cloning. ThefetchFiltersetting supports treeless and blobless fetches. For a treeless fetch, specifyfetchFilter: tree:0and to specify a blobless fetch, specifyfetchFilter: blob:none. The default is no filtering.
fetchFilter
fetchFilter
fetchFilter
fetchFilter: tree:0
fetchFilter: blob:none
fetchTagsstring.Set to 'true' to sync tags when fetching the repo, or 'false' to not sync tags. See remarks for the default behavior.
fetchTags
lfsstring.Set to 'true' to download Git-LFS files. Default is not to download them.
lfs
persistCredentialsstring.Set to 'true' to leave the OAuth token in the Git config after the initial fetch. The default is not to leave it.
persistCredentials
submodulesstring.Set to 'true' for a single level of submodules or 'recursive' to get submodules of submodules. Default is not to fetch submodules.
submodules
pathstring.Where to put the repository. The root directory is $(Pipeline.Workspace). By default this folder must be under the agent working directory structure. To set a path outside of the agent working directory, set a pipeline variable namedAZP_AGENT_ALLOW_WORK_DIRECTORY_REPOSITORIESto true, and use the prefix../at the start of your checkout path. Supported on agent version 3.230.0 and higher.
path
AZP_AGENT_ALLOW_WORK_DIRECTORY_REPOSITORIES
../
sparseCheckoutDirectoriesstring.Specify a directory to enable sparse checkout in cone mode using directory matching. Separate multiple directories using a space. Supported on agent version 3.253.0/4.253.0 and higher with Git 2.25 or higher.
sparseCheckoutDirectories
- checkout: repo
  sparseCheckoutDirectories: src
- checkout: repo
  sparseCheckoutDirectories: src
If bothsparseCheckoutDirectoriesandsparseCheckoutPatternsare set,sparseCheckoutDirectoriesis used and the setting forsparseCheckoutPatternsis disregarded.
sparseCheckoutDirectories
sparseCheckoutPatterns
sparseCheckoutDirectories
sparseCheckoutPatterns
For more information on sparse checkout, seeBring your monorepo down to size with sparse-checkout.
sparseCheckoutPatternsstring.Specify a pattern to enable sparse checkout in non-cone mode using pattern matching. Separate multiple patterns using a space. Supported on agent version 3.253.0/4.253.0 and higher with Git 2.25 or higher.
sparseCheckoutPatterns
- checkout: repo
  sparseCheckoutPatterns: /* !/img
- checkout: repo
  sparseCheckoutPatterns: /* !/img
If bothsparseCheckoutDirectoriesandsparseCheckoutPatternsare set,sparseCheckoutDirectoriesis used and the setting forsparseCheckoutPatternsis disregarded.
sparseCheckoutDirectories
sparseCheckoutPatterns
sparseCheckoutDirectories
sparseCheckoutPatterns
For more information on sparse checkout, seeBring your monorepo down to size with sparse-checkout.
workspaceRepostring.When true, use the repository root directory as the default working directory for the pipeline. The default is false.
workspaceRepo
conditionstring.Evaluate this condition expression to determine whether to run this task.
condition
continueOnErrorboolean.Continue running even on failure?
continueOnError
displayNamestring.Human-readable name for the task.
displayName
targettarget.Environment in which to run this task.
target
enabledboolean.Run this task when the job runs?
enabled
envstring dictionary.Variables to map into the process's environment.
env
namestring.ID of the step. Acceptable values: [-_A-Za-z0-9]*.
name
timeoutInMinutesstring.Time to wait for this task to complete before the server kills it.
timeoutInMinutes
Note
Pipelines may be configured with a job level timeout. If the job level timeout interval elapses before your step completes, the running job (including your step) is terminated, even if the step is configured with a longertimeoutInMinutesinterval. For more information, seeTimeouts.
timeoutInMinutes
retryCountOnTaskFailurestring.Number of retries if the task fails.
retryCountOnTaskFailure
Remarks
Shallow fetch
Clean property
Sync tags
Shallow fetch
Clean property
Shallow fetch
Note
In some organizations, new pipelines created after theSeptember 2022 Azure DevOps sprint 209 updatehaveShallow fetchenabled by default and configured with a depth of 1. Previously the default was not to shallow fetch.
To check your pipeline, view theShallow fetchsetting in thepipeline settings UI.
To disable shallow fetch, you can perform one of the following two options.
Disable theShallow fetchoption in thepipeline settings UI.
Explicitly setfetchDepth: 0in yourcheckoutstep.
fetchDepth: 0
checkout
To configure the fetch depth for a pipeline, you can either set thefetchDepthproperty in thecheckoutstep, or configure theShallow fetchsetting in thepipeline settings UI.
fetchDepth
checkout
Note
If you explicitly setfetchDepthin yourcheckoutstep, that setting takes priority over the setting configured in the pipeline settings UI. SettingfetchDepth: 0fetches all history and overrides theShallow fetchsetting.
fetchDepth
checkout
fetchDepth: 0
Clean property
If thecleanproperty is unset, then its default value is configured by thecleansetting in the UI settings for YAML pipelines, which is set to true by default. In addition to the cleaning option available usingcheckout, you can also configure cleaning in a workspace. For more information about workspaces and clean options, see theworkspacetopic inJobs.
clean
checkout
Sync tags
The checkout step uses the--tagsoption when fetching the contents of a Git repository. This causes the server to fetch all tags as well as all objects that are pointed to by those tags. This increases the time to run the task in a pipeline, particularly if you have a large repository with a number of tags. Furthermore, the checkout step syncs tags even when you enable the shallow fetch option, thereby possibly defeating its purpose. To reduce the amount of data fetched or pulled from a Git repository, Microsoft has added a new option to checkout to control the behavior of syncing tags. This option is available both in classic and YAML pipelines.
--tags
Whether to synchronize tags when checking out a repository can be configured in YAML by setting thefetchTagsproperty, and in the UI by configuring theSync tagssetting.
fetchTags
To configure the setting in YAML, set thefetchTagsproperty.
fetchTags
steps:
- checkout: self
  fetchTags: true
steps:
- checkout: self
  fetchTags: true
To configure the setting in the pipeline UI, edit your YAML pipeline, and chooseMore actions,Triggers,YAML,Get sources, and check or uncheck theSync tagscheckbox. For more information, seeSync tags.
For existing pipelines created before the release ofAzure DevOps sprint 209, released in September 2022, the default for syncing tags remains the same as the existing behavior before theSync tagsoptions was added, which istrue.
true
For new pipelines created after Azure DevOps sprint release 209, the default for syncing tags isfalse.
false
Important
ASync tagssetting of true in the UI takes precedence over afetchTags: falsestatement in the YAML. IfSync tagsis set to true in the UI, tags are synced even iffetchTagsis set to false in the YAML.
fetchTags: false
fetchTags
Examples
There are three options forcheckout. By default, Azure DevOps checks out the current repository withselffor jobs. When you setnone, no repository is checked out. If you specify another repository, that repository is checked out. To check out a different repository, set it up as arepository resource first.
checkout
self
none
# Checkout the current repository
steps:
- checkout: self

# Prevent checking out any source code
steps:
- checkout: none

# Checkout a different repository
steps:
- checkout: my-other-repo
# Checkout the current repository
steps:
- checkout: self

# Prevent checking out any source code
steps:
- checkout: none

# Checkout a different repository
steps:
- checkout: my-other-repo
To avoid syncing sources at all:
steps:
- checkout: none
steps:
- checkout: none
Note
If you're running the agent in the Local Service account and want to modify the current repository by using git operations or loading git submodules, give the proper permissions to the Project Collection Build Service Accounts user.
- checkout: self
  submodules: true
  persistCredentials: true
- checkout: self
  submodules: true
  persistCredentials: true
To check out multiple repositories in your pipeline, use multiplecheckoutsteps:
checkout
- checkout: self
- checkout: git://MyProject/MyRepo
- checkout: MyGitHubRepo # Repo declared in a repository resource
- checkout: self
- checkout: git://MyProject/MyRepo
- checkout: MyGitHubRepo # Repo declared in a repository resource
For more information, seeCheck out multiple repositories in your pipeline.
See also
Supported source repositories
Feedback
Was this page helpful?
Additional resources