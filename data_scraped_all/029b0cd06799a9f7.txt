Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Access repositories, artifacts, and other resources
Article
2024-03-25
9 contributors
In this article
Azure DevOps Services | Azure DevOps Server 2022 - Azure DevOps Server 2019
At run-time, each job in a pipeline may access other resources in Azure DevOps. For example, a job may:
Check out source code from a Git repository
Add a tag to the repository
Access a feed in Azure Artifacts
Upload logs from the agent to the service
Upload test results and other artifacts from the agent to the service
Update a work item
Azure Pipelines uses job access tokens to perform these tasks. Ajob access tokenis a security token that is dynamically generated by Azure Pipelines for each job at run time. The agent on which the job is running uses the job access token in order to access these resources in Azure DevOps. You can control which resources your pipeline has access to by controlling how permissions are granted to job access tokens.
The token's permissions are derived from (a) job authorization scope and (b) the permissions you set on project or collection build service account.
Job authorization scope
You can set the job authorization scope to becollectionorproject. By setting the scope tocollection, you choose to let pipelines access all repositories in the collection or organization. By setting the scope toproject, you choose to restrict access to only those repositories that are in the same project as the pipeline.
YAML
Classic
Job authorization scope can be set for the entire Azure DevOps organization or for a specific project.
Note
In Azure DevOps Server 2020,Limit job authorization scope to current projectapplies only to YAML pipelines and classic build pipelines. It does not apply to classic release pipelines. Classic release pipelines always run with project collection scope.
To set job authorization scope for the organization:
Navigate to your organization settings page in the Azure DevOps user interface.
SelectSettingsunderPipelines.
EnableLimit job authorization scope to current projectto limit the scope to project. This is the recommended setting, as it enhances security for your pipelines.
To set job authorization scope for a specific project:
Navigate to your project settings page in the Azure DevOps user interface.
SelectSettingsunderPipelines.
EnableLimit job authorization scope to current projectto limit the scope to project. This is the recommended setting, as it enhances security for your pipelines.
To set job authorization scope at the organization level for all projects, chooseOrganization settings>Pipelines>Settings.
To set job authorization scope for a specific project, chooseProject settings>Pipelines>Settings.
Enable one or more of the following settings. Enabling these settings are recommended, as it enhances security for your pipelines.
Limit job authorization scope to current project for non-release pipelines- This setting applies to YAML pipelines and classic build pipelines, and does not apply toclassic release pipelines.
Limit job authorization scope to current project for release pipelines- This setting applies toclassic release pipelinesonly.
Note
If the scope is set toprojectat the organization level, you cannot change the scope in each project.
Important
If the scope is not restricted at either the organization level or project level, then every job in your YAML pipeline gets a collection scoped job access token. In other words, your pipeline has access to any repository in any project of your organization. If an adversary is able to gain access to a single pipeline in a single project, they will be able to gain access to any repository in your organization. This is why, it is recommended that you restrict the scope at the highest level (organization settings) in order to contain the attack to a single project.
Job authorization scope can be set for the entire Azure DevOps organization, for a specific project, or for a specific pipeline.
Note
In Azure DevOps Server 2020,Limit job authorization scope to current projectapplies only to YAML pipelines and classic build pipelines. It does not apply to classic release pipelines. Classic release pipelines always run with project collection scope.
To set job authorization scope for the organization:
Navigate to your organization settings page in the Azure DevOps user interface.
SelectSettingsunderPipelines.
EnableLimit job authorization scope to current projectto limit the scope to project. This is the recommended setting, as it enhances security for your pipelines.
To set job authorization scope for a specific project:
Navigate to your project settings page in the Azure DevOps user interface.
SelectSettingsunderPipelines.
EnableLimit job authorization scope to current projectto limit the scope to project. This is the recommended setting, as it enhances security for your pipelines.
To set job authorization scope at the organization level for all projects, chooseOrganization settings>Pipelines>Settings.
To set job authorization scope for a specific project, chooseProject settings>Pipelines>Settings.
Enable one or more of the following settings. Enabling these settings are recommended, as it enhances security for your pipelines.
Limit job authorization scope to current project for non-release pipelines- This setting applies to YAML pipelines and classic build pipelines, and does not apply toclassic release pipelines.
Limit job authorization scope to current project for release pipelines- This setting applies toclassic release pipelinesonly.
Note
If the scope is set toprojectat the organization level, you cannot change the scope in each project.
To set job authorization scope for a specific pipeline:
Navigate to the pipeline in thePipelinespage.
SelectEditto edit the pipeline.
In theOptionstab, selectProject collectionorCurrent projectforBuild job authorization scope.
Save the build pipeline.
Important
If the scopes are not restricted at either the organization level or project level, then you are allowing the pipeline authors to determine the access they need to repositories. If an adversary is able to create or edit a pipeline in one project, they will be able to gain access to any repository in your organization. This is why, it is recommended that you restrict the scope at the highest level (organization settings) in order to contain the attack to a single project.
Note
If your pipeline is in apublic project, then the job authorization scope is automatically restricted toprojectno matter what you configure in any setting. Jobs in a public project can access resources such as build artifacts or test results only within the project and not from other projects of the organization.
Limit job authorization scope to referenced Azure DevOps repositories
In addition to the job authorization scope settings described in the previous section, Azure Pipelines provides aLimit job authorization scope to referenced Azure DevOps repositoriessetting.
Pipelines can access any Azure DevOps repositories in authorized projects unlessLimit job authorization scope to referenced Azure DevOps repositoriesis enabled. With this option enabled, you can reduce the scope of access for all pipelines to only Azure DevOps repositories explicitly referenced by acheckoutstep or ausesstatement in the pipeline job that uses that repository.
checkout
uses
For more information, seeAzure Repos Git repositories - Limit job authorization scope to referenced Azure DevOps repositories.
Protect access to repositories in YAML pipelines
In addition to the job authorization scope settings described in the previous section, Azure Pipelines provides aProtect access to repositories in YAML pipelinessetting.
Pipelines can access any Azure DevOps repositories in authorized projects unlessProtect access to repositories in YAML pipelinesis enabled. With this option enabled, you can reduce the scope of access for all pipelines to only Azure DevOps repositories explicitly referenced by acheckoutstep or ausesstatement in the pipeline job that uses that repository.
checkout
uses
For more information, seeAzure Repos Git repositories - Protect access to repositories in YAML pipelines.
Important
Protect access to repositories in YAML pipelinesis enabled by default for new organizations and projects created after May 2020.
Scoped build identities
Azure DevOps uses two built-in identities to execute pipelines.
Acollection-scoped identity, which has access to all projects in the collection (or organization for Azure DevOps Services)
Aproject-scoped identity, which has access to a single project
These identities are allocated permissions necessary to perform build/release execution time activities when calling back to the Azure DevOps system. There are built-in default permissions, and you may also manage your own permissions as needed.
Thecollection-scoped identityname has the following format:
Project Collection Build Service ({OrgName})
Project Collection Build Service ({OrgName})
For example, if the organization name isfabrikam-tailspin, this account has the nameProject Collection Build Service (fabrikam-tailspin).
fabrikam-tailspin
Project Collection Build Service (fabrikam-tailspin)
Theproject-scoped identityname has the following format:
{Project Name} Build Service ({Org Name})
{Project Name} Build Service ({Org Name})
For example, if the organization name isfabrikam-tailspinand the project name isSpaceGameWeb, this account has the nameSpaceGameWeb Build Service (fabrikam-tailspin).
fabrikam-tailspin
SpaceGameWeb
SpaceGameWeb Build Service (fabrikam-tailspin)
By default, the collection-scoped identity is used, unless configured otherwise as described in the previousJob authorization scopesection.
Manage build service account permissions
One result of setting project-scoped access may be that the project-scoped identity may not have permissions to a resource that the collection-scoped one did have.
You may want to change the permissions of job access token in scenarios such as the following:
You want your pipeline to access a feed that is in a different project.
You want your pipeline to be restricted from changing code in the repository.
You want your pipeline to be restricted from creating work items.
To update the permissions of the job access token:
First, determine the job authorization scope for your pipeline. See the section above to understand job authorization scope. If the job authorization scope iscollection, then the corresponding build service account to manage permissions on isProject Collection Build Service (your-collection-name). If the job authorization scope isproject, then the build service account to manage permissions on isYour-project-name Build Service (your-collection-name).
First, determine the job authorization scope for your pipeline. See the section above to understand job authorization scope. If the job authorization scope iscollection, then the corresponding build service account to manage permissions on isProject Collection Build Service (your-collection-name). If the job authorization scope isproject, then the build service account to manage permissions on isYour-project-name Build Service (your-collection-name).
To restrict or grant additional access toProject Collection Build Service (your-collection-name):SelectManage securityin the overflow menu onPipelinespage.UnderUsers, selectProject Collection Build Service (your-collection-name).Make any changes to the pipelines-related permissions for this account.Navigate to organization settings for your Azure DevOps organization (or collection settings for your project collection).SelectPermissionsunderSecurity.Under theUserstab, look forProject Collection Build Service (your-collection-name).Make any changes to the non-pipelines-related permissions for this account.SinceProject Collection Build Service (your-collection-name)is a user in your organization or collection, you can add this account explicitly to any resource - for e.g., to a feed in Azure Artifacts.
To restrict or grant additional access toProject Collection Build Service (your-collection-name):
SelectManage securityin the overflow menu onPipelinespage.
UnderUsers, selectProject Collection Build Service (your-collection-name).
Make any changes to the pipelines-related permissions for this account.
Navigate to organization settings for your Azure DevOps organization (or collection settings for your project collection).
SelectPermissionsunderSecurity.
Under theUserstab, look forProject Collection Build Service (your-collection-name).
Make any changes to the non-pipelines-related permissions for this account.
SinceProject Collection Build Service (your-collection-name)is a user in your organization or collection, you can add this account explicitly to any resource - for e.g., to a feed in Azure Artifacts.
To restrict or grant additional access toYour-project-name Build Service (your-collection-name):The build service account on which you can manage permissions will only be created after you run the pipeline once. Make sure that you already ran the pipeline once.SelectManage securityin the overflow menu onPipelinespage.UnderUsers, selectYour-project-name Build Service (your-collection-name).Make any changes to the pipelines-related permissions for this account.Navigate to organization settings for your Azure DevOps organization (or collection settings for your project collection).SelectPermissionsunderSecurity.Under theUserstab, look forYour-project-name build service (your-collection-name).Make any changes to the non-pipelines-related permissions for this account.SinceYour-project-name Build Service (your-collection-name)is a user in your organization or collection, you can add this account explicitly to any resource - for e.g., to a feed in Azure Artifacts.
To restrict or grant additional access toYour-project-name Build Service (your-collection-name):
The build service account on which you can manage permissions will only be created after you run the pipeline once. Make sure that you already ran the pipeline once.
SelectManage securityin the overflow menu onPipelinespage.
UnderUsers, selectYour-project-name Build Service (your-collection-name).
Make any changes to the pipelines-related permissions for this account.
Navigate to organization settings for your Azure DevOps organization (or collection settings for your project collection).
SelectPermissionsunderSecurity.
Under theUserstab, look forYour-project-name build service (your-collection-name).
Make any changes to the non-pipelines-related permissions for this account.
SinceYour-project-name Build Service (your-collection-name)is a user in your organization or collection, you can add this account explicitly to any resource - for e.g., to a feed in Azure Artifacts.

Configure permissions for a project to access another project in the same project collection
In this example, thefabrikam-tailspin/SpaceGameWebproject-scoped build identity is granted permissions to access thefabrikam-tailspin/FabrikamFiberproject.
fabrikam-tailspin/SpaceGameWeb
fabrikam-tailspin/FabrikamFiber
In theFabrikamFiberproject, navigate toProject settings,Permissions.
In theFabrikamFiberproject, navigate toProject settings,Permissions.

Create a new Group namedExternal Projectsand add theSpaceGameWeb Build Serviceaccount.
Create a new Group namedExternal Projectsand add theSpaceGameWeb Build Serviceaccount.
ChooseUsers, start to type in the nameSpaceGameWeb, and select theSpaceGameWeb Build Serviceaccount. If you don't see any search results initially, selectExpand search.
ChooseUsers, start to type in the nameSpaceGameWeb, and select theSpaceGameWeb Build Serviceaccount. If you don't see any search results initially, selectExpand search.

Grant theView project-level informationpermission for that user.
Grant theView project-level informationpermission for that user.


Example - Configure permissions to access another repo in the same project collection
In this example, thefabrikam-tailspin/SpaceGameWebproject-scoped build identity is granted permission to access theFabrikamFiberrepository in thefabrikam-tailspin/FabrikamFiberproject.
fabrikam-tailspin/SpaceGameWeb
FabrikamFiber
fabrikam-tailspin/FabrikamFiber
Follow the steps togrant theSpaceGameWebproject-scoped build identity permission to access theFabrikamFiberproject.
Follow the steps togrant theSpaceGameWebproject-scoped build identity permission to access theFabrikamFiberproject.
SpaceGameWeb
FabrikamFiber
In theFabrikamFiberproject, navigate toProject settings,Repositories,FabrikamFiber.
In theFabrikamFiberproject, navigate toProject settings,Repositories,FabrikamFiber.

Choose the+icon, start to type in the nameSpaceGameWeb, and select theSpaceGameWeb Build Serviceaccount.
Choose the+icon, start to type in the nameSpaceGameWeb, and select theSpaceGameWeb Build Serviceaccount.

Start to type in the nameSpaceGameWeb, and select theSpaceGameWeb Build Serviceaccount.
Start to type in the nameSpaceGameWeb, and select theSpaceGameWeb Build Serviceaccount.

GrantReadpermissions for that user.
GrantReadpermissions for that user.

Example - Configure permissions to access other resources in the same project collection
In this example, thefabrikam-tailspin/SpaceGameWebproject-scoped build identity is granted permissions to access other resources in thefabrikam-tailspin/FabrikamFiberproject.
fabrikam-tailspin/SpaceGameWeb
fabrikam-tailspin/FabrikamFiber
Follow the steps togrant theSpaceGameWebproject-scoped build identity permission to access theFabrikamFiberproject.
Follow the steps togrant theSpaceGameWebproject-scoped build identity permission to access theFabrikamFiberproject.
SpaceGameWeb
FabrikamFiber
Configure the desired permissions for that user.
Configure the desired permissions for that user.


FAQ
How do I determine the job authorization scope of my YAML pipeline?
If your project is a public project, the job authorization scope is alwaysprojectregardless of any other settings.
Check the Pipeline settings under your Azure DevOpsOrganization settings:IfLimit job authorization scope to current projectis enabled, then the scope isproject.IfLimit job authorization scope to current projectis not enabled, then check the Pipeline settings under yourProject settingsin Azure DevOps:IfLimit job authorization scope to current projectis enabled, then the scope isproject.Otherwise, the scope iscollection.
IfLimit job authorization scope to current projectis enabled, then the scope isproject.
IfLimit job authorization scope to current projectis not enabled, then check the Pipeline settings under yourProject settingsin Azure DevOps:IfLimit job authorization scope to current projectis enabled, then the scope isproject.Otherwise, the scope iscollection.
IfLimit job authorization scope to current projectis enabled, then the scope isproject.
Otherwise, the scope iscollection.
If the pipeline is in a private project, check the Pipeline settings under your Azure DevOpsOrganization settings:IfLimit job authorization scope to current project for non-release pipelinesis enabled, then the scope isproject.IfLimit job authorization scope to current project for non-release pipelinesis not enabled, then check the Pipeline settings under yourProject settingsin Azure DevOps:IfLimit job authorization scope to current project for non-release pipelinesis enabled, then the scope isproject.Otherwise, the scope iscollection.
IfLimit job authorization scope to current project for non-release pipelinesis enabled, then the scope isproject.
IfLimit job authorization scope to current project for non-release pipelinesis not enabled, then check the Pipeline settings under yourProject settingsin Azure DevOps:IfLimit job authorization scope to current project for non-release pipelinesis enabled, then the scope isproject.Otherwise, the scope iscollection.
IfLimit job authorization scope to current project for non-release pipelinesis enabled, then the scope isproject.
Otherwise, the scope iscollection.
How do I determine the job authorization scope of my classic build pipeline?
If the pipeline is in a public project, then the job authorization scope isprojectregardless of any other settings.
Check the Pipeline settings under your Azure DevOpsOrganization settings:IfLimit job authorization scope to current projectis enabled, then the scope isproject.IfLimit job authorization scope to current projectis not enabled, then check the Pipeline settings under yourProject settingsin Azure DevOps:IfLimit job authorization scope to current projectis enabled, then the scope isproject.IfLimit job authorization scope to current projectis not enabled, open the editor for the pipeline, and navigate to theOptionstab.If theBuild job authorization scopeisCurrent project, then scope isproject.Otherwise, scope iscollection.
IfLimit job authorization scope to current projectis enabled, then the scope isproject.
IfLimit job authorization scope to current projectis not enabled, then check the Pipeline settings under yourProject settingsin Azure DevOps:IfLimit job authorization scope to current projectis enabled, then the scope isproject.IfLimit job authorization scope to current projectis not enabled, open the editor for the pipeline, and navigate to theOptionstab.If theBuild job authorization scopeisCurrent project, then scope isproject.Otherwise, scope iscollection.
IfLimit job authorization scope to current projectis enabled, then the scope isproject.
IfLimit job authorization scope to current projectis not enabled, open the editor for the pipeline, and navigate to theOptionstab.If theBuild job authorization scopeisCurrent project, then scope isproject.Otherwise, scope iscollection.
If theBuild job authorization scopeisCurrent project, then scope isproject.
Otherwise, scope iscollection.
If the pipeline is in a private project, check the Pipeline settings under your Azure DevOpsOrganization settings:IfLimit job authorization scope to current project for non-release pipelinesis enabled, then the scope isproject.IfLimit job authorization scope to current project for non-release pipelinesis not enabled, then check the Pipeline settings under yourProject settingsin Azure DevOps:IfLimit job authorization scope to current project for non-release pipelinesis enabled, then the scope isproject.IfLimit job authorization scope to current project for non-release pipelinesis not enabled, open the editor for the pipeline, and navigate to theOptionstab.If theBuild job authorization scopeisCurrent project, then scope isproject.Or else, scope iscollection.
IfLimit job authorization scope to current project for non-release pipelinesis enabled, then the scope isproject.
IfLimit job authorization scope to current project for non-release pipelinesis not enabled, then check the Pipeline settings under yourProject settingsin Azure DevOps:IfLimit job authorization scope to current project for non-release pipelinesis enabled, then the scope isproject.IfLimit job authorization scope to current project for non-release pipelinesis not enabled, open the editor for the pipeline, and navigate to theOptionstab.If theBuild job authorization scopeisCurrent project, then scope isproject.Or else, scope iscollection.
IfLimit job authorization scope to current project for non-release pipelinesis enabled, then the scope isproject.
IfLimit job authorization scope to current project for non-release pipelinesis not enabled, open the editor for the pipeline, and navigate to theOptionstab.If theBuild job authorization scopeisCurrent project, then scope isproject.Or else, scope iscollection.
If theBuild job authorization scopeisCurrent project, then scope isproject.
Or else, scope iscollection.
When creating a new classic pipeline, thejob authorization scopeis set tocurrent projectand thebuild job authorization scopeis set toprojectby default.
How do I determine the job authorization scope of my classic release pipeline?
Classic release pipelines in Azure DevOps Server 2020 and below run withcollectionscope.
If the pipeline is in a public project, then the job authorization scope isprojectregardless of any other settings.
If the pipeline is in a private project, check the Pipeline settings under your Azure DevOpsOrganization settings:IfLimit job authorization scope to current project for release pipelinesis enabled, then the scope isproject.IfLimit job authorization scope to current project for release pipelinesis not enabled, then check the Pipeline settings under yourProject settingsin Azure DevOps:IfLimit job authorization scope to current project for release pipelinesis enabled, then the scope isproject.Otherwise, the scope iscollection.
IfLimit job authorization scope to current project for release pipelinesis enabled, then the scope isproject.
IfLimit job authorization scope to current project for release pipelinesis not enabled, then check the Pipeline settings under yourProject settingsin Azure DevOps:IfLimit job authorization scope to current project for release pipelinesis enabled, then the scope isproject.Otherwise, the scope iscollection.
IfLimit job authorization scope to current project for release pipelinesis enabled, then the scope isproject.
Otherwise, the scope iscollection.
Feedback
Was this page helpful?
Additional resources