Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Quickstart: Deploy a JBoss EAP cluster on Azure Virtual Machines (VMs)
Article
2024-09-05
4 contributors
In this article
This article shows you how to quickly deploy a JBoss Enterprise Application Platform (EAP) cluster on Azure Virtual Machines (VMs) using the Azure portal.
This article uses the Azure Marketplace offer for JBoss EAP Cluster to accelerate your journey to Azure VMs. The offer automatically provisions a number of resources including Azure Red Hat Enterprise Linux (RHEL) VMs, JBoss EAP instances on each VM, Red Hat build of OpenJDK on each VM, a JBoss EAP management console, and optionally an Azure App Gateway instance. To see the offer, visit the solutionJBoss EAP Cluster on RHEL VMsusing the Azure portal.
If you prefer manual step-by-step guidance for installing Red Hat JBoss EAP Cluster on Azure VMs that doesn't use the automation enabled by the Azure Marketplace offer, seeTutorial: Install Red Hat JBoss EAP on Azure Virtual Machines manually.
If you're interested in providing feedback or working closely on your migration scenarios with the engineering team developing JBoss EAP on Azure solutions, fill out this shortsurvey on JBoss EAP migrationand include your contact information. The team of program managers, architects, and engineers will promptly get in touch with you to initiate close collaboration.
Prerequisites
An Azure subscription. If you don't have anAzure subscription, create anAzure free accountbefore you begin.
Ensure the Azure identity you use to sign in has either theContributorrole or theOwnerrole in the current subscription. For an overview of Azure roles, seeWhat is Azure role-based access control (Azure RBAC)?
A Java Development Kit (JDK), version 17. In this guide, we recommend theRed Hat Build of OpenJDK. Ensure that yourJAVA_HOMEenvironment variable is set correctly in the shells in which you run the commands.
JAVA_HOME
Git. Usegit --versionto test whethergitworks. This tutorial was tested with version 2.34.1.
git --version
git
Maven. Usemvn -versionto test whethermvnworks. This tutorial was tested with version 3.8.6.
mvn -version
mvn
Note
The Azure Marketplace offer you're going to use in this article includes support for Red Hat Satellite for license management. Using Red Hat Satellite is beyond the scope of this quickstart. For an overview on Red Hat Satellite, seeRed Hat Satellite. To learn more about moving your Red Hat JBoss EAP and Red Hat Enterprise Linux subscriptions to Azure, seeRed Hat Cloud Access program.
Set up an Azure Database for PostgreSQL flexible server
The steps in this section direct you to deploy an Azure Database for PostgreSQL flexible server, which you use for configuring the database connection while setting up a JBoss EAP cluster in the next section.
First, use the following command to set up some environment variables.
export RG_NAME=<db-resource-group-name>
export SERVER_NAME=<database-server-name>
export ADMIN_PASSWORD=<postgresql-admin-password>
export RG_NAME=<db-resource-group-name>
export SERVER_NAME=<database-server-name>
export ADMIN_PASSWORD=<postgresql-admin-password>
Replace the placeholders with the following values, which are used throughout the the article:
<db-resource-group-name>: The name of the resource group to use for the PostgreSQL flexible server - for example,ejb040323postgresrg.
<db-resource-group-name>
ejb040323postgresrg
<database-server-name>: The name of your PostgreSQL server, which should be unique across Azure - for example,ejb040323postgresqlserver.
<database-server-name>
ejb040323postgresqlserver
<postgresql-admin-password>: The password of your PostgreSQL server. That password must be at least eight characters and at most 128 characters. The characters should be from three of the following categories: English uppercase letters, English lowercase letters, numbers (0-9), and nonalphanumeric characters (!, $, #, %, and so on).
<postgresql-admin-password>
Note
Microsoft recommends using the most secure authentication flow available. The authentication flow described in this procedure, such as for databases, caches, messaging, or AI services, requires a very high degree of trust in the application and carries risks not present in other flows. Use this flow only when more secure options, like managed identities for passwordless or keyless connections, are not viable. For local machine operations, prefer user identities for passwordless or keyless connections.
Next, use the following steps to create an Azure Database for PostgreSQL flexible server:
Use the following command to create an Azure Database for PostgreSQL flexible server:az postgres flexible-server create \
    --resource-group ${RG_NAME} \
    --name ${SERVER_NAME} \
    --database-name testdb \
    --public-access 0.0.0.0  \
    --admin-user testuser \
    --admin-password ${ADMIN_PASSWORD} \
    --yes
Use the following command to create an Azure Database for PostgreSQL flexible server:
az postgres flexible-server create \
    --resource-group ${RG_NAME} \
    --name ${SERVER_NAME} \
    --database-name testdb \
    --public-access 0.0.0.0  \
    --admin-user testuser \
    --admin-password ${ADMIN_PASSWORD} \
    --yes
az postgres flexible-server create \
    --resource-group ${RG_NAME} \
    --name ${SERVER_NAME} \
    --database-name testdb \
    --public-access 0.0.0.0  \
    --admin-user testuser \
    --admin-password ${ADMIN_PASSWORD} \
    --yes
Use the following command to get the host of the PostgreSQL server:export DB_HOST=$(az postgres flexible-server show \
    --resource-group ${RG_NAME} \
    --name ${SERVER_NAME} \
    --query "fullyQualifiedDomainName" \
    --output tsv)
Use the following command to get the host of the PostgreSQL server:
export DB_HOST=$(az postgres flexible-server show \
    --resource-group ${RG_NAME} \
    --name ${SERVER_NAME} \
    --query "fullyQualifiedDomainName" \
    --output tsv)
export DB_HOST=$(az postgres flexible-server show \
    --resource-group ${RG_NAME} \
    --name ${SERVER_NAME} \
    --query "fullyQualifiedDomainName" \
    --output tsv)
Use the following command to get the Java Database Connectivity (JDBC) connection URL of the PostgreSQL server:echo jdbc:postgresql://${DB_HOST}:5432/testdbNote down the output, which you use as the data source connection string of the PostgreSQL server later in this article.
Use the following command to get the Java Database Connectivity (JDBC) connection URL of the PostgreSQL server:
echo jdbc:postgresql://${DB_HOST}:5432/testdb
echo jdbc:postgresql://${DB_HOST}:5432/testdb
Note down the output, which you use as the data source connection string of the PostgreSQL server later in this article.
Deploy a JBoss EAP cluster on Azure VMs
The steps in this section direct you to deploy a JBoss EAP cluster on Azure VMs.
Use the following steps to find the JBoss EAP Cluster on Azure VMs offer:
Sign in to the Azure portal by visitinghttps://aka.ms/publicportal.
Sign in to the Azure portal by visitinghttps://aka.ms/publicportal.
In the search bar at the top of the Azure portal, enterJBoss EAP. In the search results, in theMarketplacesection, selectJBoss EAP Cluster on VMs.
In the search bar at the top of the Azure portal, enterJBoss EAP. In the search results, in theMarketplacesection, selectJBoss EAP Cluster on VMs.

In the drop-down menu, ensurePAYGis selected.
In the drop-down menu, ensurePAYGis selected.
Alternatively, you can also go directly to theJBoss EAP Cluster on Azure VMsoffer. In this case, the correct plan is already selected for you.
In either case, this offer deploys a JBoss EAP cluster on Azure VMs by providing your Red Hat subscription at deployment time. The offer runs the cluster on Red Hat Enterprise Linux using a pay-as-you-go payment configuration for the base VMs.
The following steps show you how to fill out theBasicspane shown in the following screenshot.

On the offer page, selectCreate.
On theBasicspane, ensure that the value shown in theSubscriptionfield is the same one that has the roles listed in the prerequisites section.
In theResource groupfield, selectCreate newand fill in a value for the resource group. Because resource groups must be unique within a subscription, pick a unique name. An easy way to have unique names is to use a combination of your initials, today's date, and some identifier. For example,ejb040323jbosseapcluster.
UnderInstance details, select the region for the deployment.
Leave the default VM size forVirtual machine size.
Leave the default optionOpenJDK 17forJDK version.
Leave the default valuejbossuserforUsername.
Leave the default optionPasswordforAuthentication type.
Provide a password forPassword. Use the same value forConfirm password.
Use3forNumber of virtual machines to create.
UnderOptional Basic Configuration, leave the default optionYesforAccept defaults for optional configuration.
Scroll to the bottom of theBasicspane and notice the helpful links forReport issues, get help, and share feedback.
SelectNext: JBoss EAP Settings.
The following steps show you how to fill out theJBoss EAP Settingspane shown in the following screenshot.

Leave the default optionManaged domainforUse managed domain or standalone hosts to form a cluster.
Leave the default valuejbossadminforJBoss EAP Admin username.
Provide a JBoss EAP password forJBoss EAP password. Use the same value forConfirm password. Save aside the value for later use.
Leave the default optionNoforConnect to an existing Red Hat Satellite Server?.
SelectNext: Azure Application Gateway.
The following steps show you how to fill out theAzure Application Gatewaypane shown in the following screenshot.

SelectYesforConnect to Azure Application Gateway?.
SelectYesforConnect to Azure Application Gateway?.
SelectNext: Networking.This pane enables you to customize the virtual network and subnet into which the JBoss EAP cluster deploys. For information about virtual networks, seeCreate, change, or delete a virtual network. Accept the defaults on this pane.
SelectNext: Networking.
This pane enables you to customize the virtual network and subnet into which the JBoss EAP cluster deploys. For information about virtual networks, seeCreate, change, or delete a virtual network. Accept the defaults on this pane.
SelectNext: Database.
SelectNext: Database.
The following steps show you how to fill out theDatabasepane shown in the following screenshot, and start the deployment.

SelectYesforConnect to database?.
SelectPostgreSQLforChoose database type.
Fill injava:jboss/datasources/JavaEECafeDBforJNDI name.
Provide the JDBC connection URL of the PostgreSQL server, which you saved before, forData source connection string (jdbc:postgresql://<host>:<port>/<database>).
Fill intestuserforDatabase username.
Provide the value for the placeholder<postgresql-admin-password>, which you specified before, forDatabase password. Use the same value forConfirm password.
<postgresql-admin-password>
SelectReview + create. Ensure that the greenValidation Passedmessage appears at the top. If the message doesn't appear, fix any validation problems, then selectReview + createagain.
SelectCreate.
Track the progress of the deployment on theDeployment is in progresspage.
Depending on network conditions and other activity in your selected region, the deployment may take up to 35 minutes to complete. After that, you should see the textYour deployment is completedisplayed on the deployment page.
Verify the functionality of the deployment
Use the following steps to verify the functionality of the deployment for a JBoss EAP cluster on Azure VMs from theRed Hat JBoss Enterprise Application Platformmanagement console:
On the deployment page, selectOutputs.
On the deployment page, selectOutputs.
Select the copy icon next toadminConsole.
Select the copy icon next toadminConsole.

Paste the URL into an internet-connected web browser and pressEnter. You should see the familiarRed Hat JBoss Enterprise Application Platformmanagement console sign-in screen, as shown in the following screenshot.
Paste the URL into an internet-connected web browser and pressEnter. You should see the familiarRed Hat JBoss Enterprise Application Platformmanagement console sign-in screen, as shown in the following screenshot.

Fill injbossadminforJBoss EAP Admin usernameProvide the value forJBoss EAP passwordthat you specified before forPassword, then selectSign in.
Fill injbossadminforJBoss EAP Admin usernameProvide the value forJBoss EAP passwordthat you specified before forPassword, then selectSign in.
You should see the familiarRed Hat JBoss Enterprise Application Platformmanagement console welcome page as shown in the following screenshot.
You should see the familiarRed Hat JBoss Enterprise Application Platformmanagement console welcome page as shown in the following screenshot.

Select theRuntimetab. In the navigation pane, selectTopology. You should see that the cluster contains one domain controllermasterand two worker nodes, as shown in the following screenshot:
Select theRuntimetab. In the navigation pane, selectTopology. You should see that the cluster contains one domain controllermasterand two worker nodes, as shown in the following screenshot:

Select theConfigurationtab. In the navigation pane, selectProfiles>ha>Datasources & Drivers>Datasources. You should see that the datasourcedataSource-postgresqlis listed, as shown in the following screenshot:
Select theConfigurationtab. In the navigation pane, selectProfiles>ha>Datasources & Drivers>Datasources. You should see that the datasourcedataSource-postgresqlis listed, as shown in the following screenshot:

Leave the management console open. You use it to deploy a sample app to the JBoss EAP cluster in the next section.
Deploy the app to the JBoss EAP cluster
Use the following steps to deploy the Java EE Cafe sample application to the Red Hat JBoss EAP cluster:
Use the following steps to build the Java EE Cafe sample. These steps assume that you have a local environment with Git and Maven installed:Use the following command to clone the source code from GitHub and check out the tag corresponding to this version of the article:git clone https://github.com/Azure/rhel-jboss-templates.git --branch 20240904 --single-branchIf you see an error message with the textYou are in 'detached HEAD' state, you can safely ignore it.Use the following command to build the source code:mvn clean install --file rhel-jboss-templates/eap-coffee-app/pom.xmlThis command creates the filerhel-jboss-templates/eap-coffee-app/target/javaee-cafe.war. You'll upload this file in the next step.
Use the following steps to build the Java EE Cafe sample. These steps assume that you have a local environment with Git and Maven installed:
Use the following command to clone the source code from GitHub and check out the tag corresponding to this version of the article:git clone https://github.com/Azure/rhel-jboss-templates.git --branch 20240904 --single-branchIf you see an error message with the textYou are in 'detached HEAD' state, you can safely ignore it.
Use the following command to clone the source code from GitHub and check out the tag corresponding to this version of the article:
git clone https://github.com/Azure/rhel-jboss-templates.git --branch 20240904 --single-branch
git clone https://github.com/Azure/rhel-jboss-templates.git --branch 20240904 --single-branch
If you see an error message with the textYou are in 'detached HEAD' state, you can safely ignore it.
You are in 'detached HEAD' state
Use the following command to build the source code:mvn clean install --file rhel-jboss-templates/eap-coffee-app/pom.xmlThis command creates the filerhel-jboss-templates/eap-coffee-app/target/javaee-cafe.war. You'll upload this file in the next step.
Use the following command to build the source code:
mvn clean install --file rhel-jboss-templates/eap-coffee-app/pom.xml
mvn clean install --file rhel-jboss-templates/eap-coffee-app/pom.xml
This command creates the filerhel-jboss-templates/eap-coffee-app/target/javaee-cafe.war. You'll upload this file in the next step.
Use the following steps in theRed Hat JBoss Enterprise Application Platformmanagement console to upload thejavaee-cafe.warto theContent Repository.From theDeploymentstab of the Red Hat JBoss EAP management console, selectContent Repositoryin the navigation panel.SelectAddand then selectUpload Content.Use the browser file chooser to select thejavaee-cafe.warfile.SelectNext.Accept the defaults on the next screen and then selectFinish.SelectView content.
Use the following steps in theRed Hat JBoss Enterprise Application Platformmanagement console to upload thejavaee-cafe.warto theContent Repository.
From theDeploymentstab of the Red Hat JBoss EAP management console, selectContent Repositoryin the navigation panel.
From theDeploymentstab of the Red Hat JBoss EAP management console, selectContent Repositoryin the navigation panel.
SelectAddand then selectUpload Content.
SelectAddand then selectUpload Content.

Use the browser file chooser to select thejavaee-cafe.warfile.
Use the browser file chooser to select thejavaee-cafe.warfile.
SelectNext.
SelectNext.
Accept the defaults on the next screen and then selectFinish.
Accept the defaults on the next screen and then selectFinish.
SelectView content.
SelectView content.
Use the following steps to deploy an application to themain-server-group:FromContent Repository, selectjavaee-cafe.war.Open the drop-down menu and selectDeploy.Selectmain-server-groupas the server group for deployingjavaee-cafe.war.SelectDeployto start the deployment. You should see a notice similar to the following screenshot:
Use the following steps to deploy an application to themain-server-group:
main-server-group
FromContent Repository, selectjavaee-cafe.war.
FromContent Repository, selectjavaee-cafe.war.
Open the drop-down menu and selectDeploy.
Open the drop-down menu and selectDeploy.
Selectmain-server-groupas the server group for deployingjavaee-cafe.war.
Selectmain-server-groupas the server group for deployingjavaee-cafe.war.
SelectDeployto start the deployment. You should see a notice similar to the following screenshot:
SelectDeployto start the deployment. You should see a notice similar to the following screenshot:

You're now finished deploying the Java EE application. Use the following steps to access the application and validate all the settings:
Use the following command to get the public IP address of the Azure Application Gateway. Replace the placeholder<resource-group-name>with the name of the resource group where the JBoss EAP cluster is deployed.az network public-ip show \
    --resource-group <resource-group-name> \
    --name gwip \
    --query '[ipAddress]' \
    --output tsv
Use the following command to get the public IP address of the Azure Application Gateway. Replace the placeholder<resource-group-name>with the name of the resource group where the JBoss EAP cluster is deployed.
<resource-group-name>
az network public-ip show \
    --resource-group <resource-group-name> \
    --name gwip \
    --query '[ipAddress]' \
    --output tsv
az network public-ip show \
    --resource-group <resource-group-name> \
    --name gwip \
    --query '[ipAddress]' \
    --output tsv
Copy the output, which is the public IP address of the Azure Application Gateway deployed.
Copy the output, which is the public IP address of the Azure Application Gateway deployed.
Open an internet-connected web browser.
Open an internet-connected web browser.
Navigate to the application with the URLhttp://<gateway-public-ip-address>/javaee-cafe. Replace the placeholder<gateway-public-ip-address>with the public IP address of the Azure Application Gateway you copied previously.
Navigate to the application with the URLhttp://<gateway-public-ip-address>/javaee-cafe. Replace the placeholder<gateway-public-ip-address>with the public IP address of the Azure Application Gateway you copied previously.
http://<gateway-public-ip-address>/javaee-cafe
<gateway-public-ip-address>
Try to add and remove coffees.
Try to add and remove coffees.
Clean up resources
To avoid Azure charges, you should clean up unnecessary resources. When you no longer need the JBoss EAP cluster deployed on Azure VMs, unregister the JBoss EAP servers and remove the Azure resources.
Run the following command to unregister the JBoss EAP servers and VMs from Red Hat subscription management. Replace the placeholder<resource-group-name>with the name of the resource group where the JBoss EAP cluster is deployed.
<resource-group-name>
# Unregister domain controller
az vm run-command invoke \
    --resource-group <resource-group-name> \
    --name jbosseapVm-adminVM \
    --command-id RunShellScript \
    --scripts "sudo subscription-manager unregister"

# Unregister host controllers
az vm run-command invoke \
    --resource-group <resource-group-name> \
    --name jbosseapVm1 \
    --command-id RunShellScript \
    --scripts "sudo subscription-manager unregister"
az vm run-command invoke \
    --resource-group <resource-group-name> \
    --name jbosseapVm1 \
    --command-id RunShellScript \
    --scripts "sudo subscription-manager unregister"
# Unregister domain controller
az vm run-command invoke \
    --resource-group <resource-group-name> \
    --name jbosseapVm-adminVM \
    --command-id RunShellScript \
    --scripts "sudo subscription-manager unregister"

# Unregister host controllers
az vm run-command invoke \
    --resource-group <resource-group-name> \
    --name jbosseapVm1 \
    --command-id RunShellScript \
    --scripts "sudo subscription-manager unregister"
az vm run-command invoke \
    --resource-group <resource-group-name> \
    --name jbosseapVm1 \
    --command-id RunShellScript \
    --scripts "sudo subscription-manager unregister"
Run the following commands to remove the two resource groups where the JBoss EAP cluster and the Azure Database for PostgreSQL flexible server are deployed. Replace the placeholder<resource-group-name>with the name of the resource group where the JBoss EAP cluster is deployed. Ensure the environment variable$RG_NAMEis set with the name of the resource group where the PostgreSQL flexible server is deployed.
<resource-group-name>
$RG_NAME
az group delete --name <resource-group-name> --yes --no-wait
az group delete --name $RG_NAME --yes --no-wait
az group delete --name <resource-group-name> --yes --no-wait
az group delete --name $RG_NAME --yes --no-wait
Next steps
Learn more about your options for deploying JBoss EAP on Azure:
Explore JBoss EAP on Azure
Feedback
Was this page helpful?
Additional resources