Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Gradle@3 - Gradle v3 task
Article
2025-03-28
5 contributors
In this article
Use this task to build using a Gradle wrapper script.
Syntax
# Gradle v3
# Build using a Gradle wrapper script.
- task: Gradle@3
  inputs:
    gradleWrapperFile: 'gradlew' # string. Alias: wrapperScript. Required. Gradle wrapper. Default: gradlew.
    #workingDirectory: # string. Alias: cwd. Working directory. 
    #options: # string. Options. 
    tasks: 'build' # string. Required. Tasks. Default: build.
  # JUnit Test Results
    #publishJUnitResults: true # boolean. Publish to Azure Pipelines. Default: true.
    testResultsFiles: '**/TEST-*.xml' # string. Required when publishJUnitResults = true. Test results files. Default: **/TEST-*.xml.
    #testRunTitle: # string. Optional. Use when publishJUnitResults = true. Test run title. 
  # Code Coverage
    #codeCoverageToolOption: 'None' # 'None' | 'Cobertura' | 'JaCoCo'. Alias: codeCoverageTool. Code coverage tool. Default: None.
    codeCoverageClassFilesDirectories: 'build/classes/main/' # string. Alias: classFilesDirectories. Required when codeCoverageTool != None. Class files directories. Default: build/classes/main/.
    #codeCoverageClassFilter: # string. Alias: classFilter. Optional. Use when codeCoverageTool != None. Class inclusion/exclusion filters. 
    #codeCoverageFailIfEmpty: false # boolean. Alias: failIfCoverageEmpty. Optional. Use when codeCoverageTool != None. Fail when code coverage results are missing. Default: false.
    #codeCoverageGradle5xOrHigher: true # boolean. Alias: gradle5xOrHigher. Optional. Use when codeCoverageTool = JaCoCo. Gradle version >= 5.x. Default: true.
  # Advanced
    javaHomeOption: 'JDKVersion' # 'JDKVersion' | 'Path'. Alias: javaHomeSelection. Required. Set JAVA_HOME by. Default: JDKVersion.
    #jdkVersionOption: 'default' # 'default' | '1.17' | '1.11' | '1.10' | '1.9' | '1.8' | '1.7' | '1.6'. Alias: jdkVersion. Optional. Use when javaHomeSelection = JDKVersion. JDK version. Default: default.
    #jdkDirectory: # string. Alias: jdkUserInputPath. Required when javaHomeSelection = Path. JDK path. 
    #jdkArchitectureOption: 'x64' # 'x86' | 'x64'. Alias: jdkArchitecture. Optional. Use when jdkVersion != default. JDK architecture. Default: x64.
    #gradleOptions: '-Xmx1024m' # string. Alias: gradleOpts. Set GRADLE_OPTS. Default: -Xmx1024m.
  # Code Analysis
    #sonarQubeRunAnalysis: false # boolean. Alias: sqAnalysisEnabled. Run SonarQube or SonarCloud Analysis. Default: false.
    #sqGradlePluginVersionChoice: 'specify' # 'specify' | 'build'. Required when sqAnalysisEnabled = true. SonarQube scanner for Gradle version. Default: specify.
    #sonarQubeGradlePluginVersion: '2.6.1' # string. Alias: sqGradlePluginVersion. Required when sqAnalysisEnabled = true && sqGradlePluginVersionChoice = specify. SonarQube scanner for Gradle plugin version. Default: 2.6.1.
    #checkStyleRunAnalysis: false # boolean. Alias: checkstyleAnalysisEnabled. Run Checkstyle. Default: false.
    #findBugsRunAnalysis: false # boolean. Alias: findbugsAnalysisEnabled. Run FindBugs. Default: false.
    #pmdRunAnalysis: false # boolean. Alias: pmdAnalysisEnabled. Run PMD. Default: false.
    #spotBugsAnalysis: false # boolean. Alias: spotBugsAnalysisEnabled. Run SpotBugs. Default: false.
    #spotBugsGradlePluginVersionChoice: 'specify' # 'specify' | 'build'. Required when spotBugsAnalysisEnabled = true. Spotbugs plugin version. Default: specify.
    #spotbugsGradlePluginVersion: '4.7.0' # string. Required when spotBugsAnalysisEnabled = true && spotBugsGradlePluginVersionChoice = specify. Version number. Default: 4.7.0.
# Gradle v3
# Build using a Gradle wrapper script.
- task: Gradle@3
  inputs:
    gradleWrapperFile: 'gradlew' # string. Alias: wrapperScript. Required. Gradle wrapper. Default: gradlew.
    #workingDirectory: # string. Alias: cwd. Working directory. 
    #options: # string. Options. 
    tasks: 'build' # string. Required. Tasks. Default: build.
  # JUnit Test Results
    #publishJUnitResults: true # boolean. Publish to Azure Pipelines. Default: true.
    testResultsFiles: '**/TEST-*.xml' # string. Required when publishJUnitResults = true. Test results files. Default: **/TEST-*.xml.
    #testRunTitle: # string. Optional. Use when publishJUnitResults = true. Test run title. 
  # Code Coverage
    #codeCoverageToolOption: 'None' # 'None' | 'Cobertura' | 'JaCoCo'. Alias: codeCoverageTool. Code coverage tool. Default: None.
    codeCoverageClassFilesDirectories: 'build/classes/main/' # string. Alias: classFilesDirectories. Required when codeCoverageTool != None. Class files directories. Default: build/classes/main/.
    #codeCoverageClassFilter: # string. Alias: classFilter. Optional. Use when codeCoverageTool != None. Class inclusion/exclusion filters. 
    #codeCoverageFailIfEmpty: false # boolean. Alias: failIfCoverageEmpty. Optional. Use when codeCoverageTool != None. Fail when code coverage results are missing. Default: false.
    #codeCoverageGradle5xOrHigher: true # boolean. Alias: gradle5xOrHigher. Optional. Use when codeCoverageTool = JaCoCo. Gradle version >= 5.x. Default: true.
  # Advanced
    javaHomeOption: 'JDKVersion' # 'JDKVersion' | 'Path'. Alias: javaHomeSelection. Required. Set JAVA_HOME by. Default: JDKVersion.
    #jdkVersionOption: 'default' # 'default' | '1.17' | '1.11' | '1.10' | '1.9' | '1.8' | '1.7' | '1.6'. Alias: jdkVersion. Optional. Use when javaHomeSelection = JDKVersion. JDK version. Default: default.
    #jdkDirectory: # string. Alias: jdkUserInputPath. Required when javaHomeSelection = Path. JDK path. 
    #jdkArchitectureOption: 'x64' # 'x86' | 'x64'. Alias: jdkArchitecture. Optional. Use when jdkVersion != default. JDK architecture. Default: x64.
    #gradleOptions: '-Xmx1024m' # string. Alias: gradleOpts. Set GRADLE_OPTS. Default: -Xmx1024m.
  # Code Analysis
    #sonarQubeRunAnalysis: false # boolean. Alias: sqAnalysisEnabled. Run SonarQube or SonarCloud Analysis. Default: false.
    #sqGradlePluginVersionChoice: 'specify' # 'specify' | 'build'. Required when sqAnalysisEnabled = true. SonarQube scanner for Gradle version. Default: specify.
    #sonarQubeGradlePluginVersion: '2.6.1' # string. Alias: sqGradlePluginVersion. Required when sqAnalysisEnabled = true && sqGradlePluginVersionChoice = specify. SonarQube scanner for Gradle plugin version. Default: 2.6.1.
    #checkStyleRunAnalysis: false # boolean. Alias: checkstyleAnalysisEnabled. Run Checkstyle. Default: false.
    #findBugsRunAnalysis: false # boolean. Alias: findbugsAnalysisEnabled. Run FindBugs. Default: false.
    #pmdRunAnalysis: false # boolean. Alias: pmdAnalysisEnabled. Run PMD. Default: false.
    #spotBugsAnalysis: false # boolean. Alias: spotBugsAnalysisEnabled. Run SpotBugs. Default: false.
    #spotBugsGradlePluginVersionChoice: 'specify' # 'specify' | 'build'. Required when spotBugsAnalysisEnabled = true. Spotbugs plugin version. Default: specify.
    #spotbugsGradlePluginVersion: '4.7.0' # string. Required when spotBugsAnalysisEnabled = true && spotBugsGradlePluginVersionChoice = specify. Version number. Default: 4.7.0.
# Gradle v3
# Build using a Gradle wrapper script.
- task: Gradle@3
  inputs:
    gradleWrapperFile: 'gradlew' # string. Alias: wrapperScript. Required. Gradle wrapper. Default: gradlew.
    #workingDirectory: # string. Alias: cwd. Working directory. 
    #options: # string. Options. 
    tasks: 'build' # string. Required. Tasks. Default: build.
  # JUnit Test Results
    #publishJUnitResults: true # boolean. Publish to Azure Pipelines. Default: true.
    testResultsFiles: '**/TEST-*.xml' # string. Required when publishJUnitResults = true. Test results files. Default: **/TEST-*.xml.
    #testRunTitle: # string. Optional. Use when publishJUnitResults = true. Test run title. 
  # Code Coverage
    #codeCoverageToolOption: 'None' # 'None' | 'Cobertura' | 'JaCoCo'. Alias: codeCoverageTool. Code coverage tool. Default: None.
    codeCoverageClassFilesDirectories: 'build/classes/main/' # string. Alias: classFilesDirectories. Required when codeCoverageTool != None. Class files directories. Default: build/classes/main/.
    #codeCoverageClassFilter: # string. Alias: classFilter. Optional. Use when codeCoverageTool != None. Class inclusion/exclusion filters. 
    #codeCoverageFailIfEmpty: false # boolean. Alias: failIfCoverageEmpty. Optional. Use when codeCoverageTool != None. Fail when code coverage results are missing. Default: false.
    #codeCoverageGradle5xOrHigher: true # boolean. Alias: gradle5xOrHigher. Optional. Use when codeCoverageTool = JaCoCo. Gradle version >= 5.x. Default: true.
  # Advanced
    javaHomeOption: 'JDKVersion' # 'JDKVersion' | 'Path'. Alias: javaHomeSelection. Required. Set JAVA_HOME by. Default: JDKVersion.
    #jdkVersionOption: 'default' # 'default' | '1.11' | '1.10' | '1.9' | '1.8' | '1.7' | '1.6'. Alias: jdkVersion. Optional. Use when javaHomeSelection = JDKVersion. JDK version. Default: default.
    #jdkDirectory: # string. Alias: jdkUserInputPath. Required when javaHomeSelection = Path. JDK path. 
    #jdkArchitectureOption: 'x64' # 'x86' | 'x64'. Alias: jdkArchitecture. Optional. Use when jdkVersion != default. JDK architecture. Default: x64.
    #gradleOptions: '-Xmx1024m' # string. Alias: gradleOpts. Set GRADLE_OPTS. Default: -Xmx1024m.
  # Code Analysis
    #sonarQubeRunAnalysis: false # boolean. Alias: sqAnalysisEnabled. Run SonarQube or SonarCloud Analysis. Default: false.
    #sqGradlePluginVersionChoice: 'specify' # 'specify' | 'build'. Required when sqAnalysisEnabled = true. SonarQube scanner for Gradle version. Default: specify.
    #sonarQubeGradlePluginVersion: '2.6.1' # string. Alias: sqGradlePluginVersion. Required when sqAnalysisEnabled = true && sqGradlePluginVersionChoice = specify. SonarQube scanner for Gradle plugin version. Default: 2.6.1.
    #checkStyleRunAnalysis: false # boolean. Alias: checkstyleAnalysisEnabled. Run Checkstyle. Default: false.
    #findBugsRunAnalysis: false # boolean. Alias: findbugsAnalysisEnabled. Run FindBugs. Default: false.
    #pmdRunAnalysis: false # boolean. Alias: pmdAnalysisEnabled. Run PMD. Default: false.
    #spotBugsAnalysis: false # boolean. Alias: spotBugsAnalysisEnabled. Run SpotBugs. Default: false.
    #spotBugsGradlePluginVersionChoice: 'specify' # 'specify' | 'build'. Required when spotBugsAnalysisEnabled = true. Spotbugs plugin version. Default: specify.
    #spotbugsGradlePluginVersion: '4.7.0' # string. Required when spotBugsAnalysisEnabled = true && spotBugsGradlePluginVersionChoice = specify. Version number. Default: 4.7.0.
# Gradle v3
# Build using a Gradle wrapper script.
- task: Gradle@3
  inputs:
    gradleWrapperFile: 'gradlew' # string. Alias: wrapperScript. Required. Gradle wrapper. Default: gradlew.
    #workingDirectory: # string. Alias: cwd. Working directory. 
    #options: # string. Options. 
    tasks: 'build' # string. Required. Tasks. Default: build.
  # JUnit Test Results
    #publishJUnitResults: true # boolean. Publish to Azure Pipelines. Default: true.
    testResultsFiles: '**/TEST-*.xml' # string. Required when publishJUnitResults = true. Test results files. Default: **/TEST-*.xml.
    #testRunTitle: # string. Optional. Use when publishJUnitResults = true. Test run title. 
  # Code Coverage
    #codeCoverageToolOption: 'None' # 'None' | 'Cobertura' | 'JaCoCo'. Alias: codeCoverageTool. Code coverage tool. Default: None.
    codeCoverageClassFilesDirectories: 'build/classes/main/' # string. Alias: classFilesDirectories. Required when codeCoverageTool != None. Class files directories. Default: build/classes/main/.
    #codeCoverageClassFilter: # string. Alias: classFilter. Optional. Use when codeCoverageTool != None. Class inclusion/exclusion filters. 
    #codeCoverageFailIfEmpty: false # boolean. Alias: failIfCoverageEmpty. Optional. Use when codeCoverageTool != None. Fail when code coverage results are missing. Default: false.
    #codeCoverageGradle5xOrHigher: true # boolean. Alias: gradle5xOrHigher. Optional. Use when codeCoverageTool = JaCoCo. Gradle version >= 5.x. Default: true.
  # Advanced
    javaHomeOption: 'JDKVersion' # 'JDKVersion' | 'Path'. Alias: javaHomeSelection. Required. Set JAVA_HOME by. Default: JDKVersion.
    #jdkVersionOption: 'default' # 'default' | '1.11' | '1.10' | '1.9' | '1.8' | '1.7' | '1.6'. Alias: jdkVersion. Optional. Use when javaHomeSelection = JDKVersion. JDK version. Default: default.
    #jdkDirectory: # string. Alias: jdkUserInputPath. Required when javaHomeSelection = Path. JDK path. 
    #jdkArchitectureOption: 'x64' # 'x86' | 'x64'. Alias: jdkArchitecture. Optional. Use when jdkVersion != default. JDK architecture. Default: x64.
    #gradleOptions: '-Xmx1024m' # string. Alias: gradleOpts. Set GRADLE_OPTS. Default: -Xmx1024m.
  # Code Analysis
    #sonarQubeRunAnalysis: false # boolean. Alias: sqAnalysisEnabled. Run SonarQube or SonarCloud Analysis. Default: false.
    #sqGradlePluginVersionChoice: 'specify' # 'specify' | 'build'. Required when sqAnalysisEnabled = true. SonarQube scanner for Gradle version. Default: specify.
    #sonarQubeGradlePluginVersion: '2.6.1' # string. Alias: sqGradlePluginVersion. Required when sqAnalysisEnabled = true && sqGradlePluginVersionChoice = specify. SonarQube scanner for Gradle plugin version. Default: 2.6.1.
    #checkStyleRunAnalysis: false # boolean. Alias: checkstyleAnalysisEnabled. Run Checkstyle. Default: false.
    #findBugsRunAnalysis: false # boolean. Alias: findbugsAnalysisEnabled. Run FindBugs. Default: false.
    #pmdRunAnalysis: false # boolean. Alias: pmdAnalysisEnabled. Run PMD. Default: false.
    #spotBugsAnalysis: false # boolean. Alias: spotBugsAnalysisEnabled. Run SpotBugs. Default: false.
    #spotBugsGradlePluginVersionChoice: 'specify' # 'specify' | 'build'. Required when spotBugsAnalysisEnabled = true. Spotbugs plugin version. Default: specify.
    #spotbugsGradlePluginVersion: '4.7.0' # string. Required when spotBugsAnalysisEnabled = true && spotBugsGradlePluginVersionChoice = specify. Version number. Default: 4.7.0.
Inputs
gradleWrapperFile-Gradle wrapperInput alias:wrapperScript.string. Required. Default value:gradlew.
gradleWrapperFile
wrapperScript
string
gradlew
Specifies thegradlewwrapper's location within the repository that will be used for the build. Agents on Windows (including Microsoft-hosted agents) must use thegradlew.batwrapper. Agents on Linux or macOS can use thegradlewshell script. Learn more about theGradle Wrapper. If the Gradle wrapper isn't in the root directory, specify the path to the wrapper script. For example,subdir/gradlew.
gradlew
gradlew.bat
gradlew
subdir/gradlew
workingDirectory-Working directoryInput alias:cwd.string.
workingDirectory
cwd
string
Specifies the working directory to run the Gradle build. The task uses the repository root directory if the working directory is not specified.
options-Optionsstring.
options
string
Specifies the command line options that will be passed to the Gradle wrapper. SeeGradle Command Linefor more information.
tasks-Tasksstring. Required. Default value:build.
tasks
string
build
The task(s) for Gradle to execute. A list of task names should be separated by spaces and can be taken fromgradlew tasksissued from a command prompt.
gradlew tasks
SeeGradle Build Script Basicsfor more information.
publishJUnitResults-Publish to Azure Pipelinesboolean. Default value:true.
publishJUnitResults
boolean
true
Publishes JUnit test results produced by the Gradle build to Azure Pipelines. The task publishes each test results file matchingTest Results Filesas a test run in Azure Pipelines.
Test Results Files
testResultsFiles-Test results filesstring. Required whenpublishJUnitResults = true. Default value:**/TEST-*.xml.
testResultsFiles
string
publishJUnitResults = true
**/TEST-*.xml
The file path for test results.Wildcardscan be used. For example,**/TEST-*.xmlfor all XML files whose name starts withTEST-.
**/TEST-*.xml
TEST-
testRunTitle-Test run titlestring. Optional. Use whenpublishJUnitResults = true.
testRunTitle
string
publishJUnitResults = true
Provides a name for the JUnit test case results for this build.
codeCoverageToolOption-Code coverage toolInput alias:codeCoverageTool.string. Allowed values:None,Cobertura,JaCoCo. Default value:None.
codeCoverageToolOption
codeCoverageTool
string
None
Cobertura
JaCoCo
None
Specifies a code coverage tool to determine the code that is covered by the test cases for the build.
codeCoverageClassFilesDirectories-Class files directoriesInput alias:classFilesDirectories.string. Required whencodeCoverageTool != None. Default value:build/classes/main/.
codeCoverageClassFilesDirectories
classFilesDirectories
string
codeCoverageTool != None
build/classes/main/
The comma-separated list of directories containing class files and archive files (.jar, .war, and more). Code coverage is reported for class files in these directories. Normally, the task searches classes underbuild/classes/java/main(for Gradle 4+), which is the default class directory for Gradle builds.
build/classes/java/main
codeCoverageClassFilter-Class inclusion/exclusion filtersInput alias:classFilter.string. Optional. Use whencodeCoverageTool != None.
codeCoverageClassFilter
classFilter
string
codeCoverageTool != None
The comma-separated list of filters to include or exclude classes from collecting code coverage. For example:+:com.*,+:org.*,-:my.app*.*.
+:com.*
+:org.*
-:my.app*.*
codeCoverageFailIfEmpty-Fail when code coverage results are missingInput alias:failIfCoverageEmpty.boolean. Optional. Use whencodeCoverageTool != None. Default value:false.
codeCoverageFailIfEmpty
failIfCoverageEmpty
boolean
codeCoverageTool != None
false
Fails the build if code coverage did not produce any results to publish.
codeCoverageGradle5xOrHigher-Gradle version >= 5.xInput alias:gradle5xOrHigher.boolean. Optional. Use whencodeCoverageTool = JaCoCo. Default value:true.
codeCoverageGradle5xOrHigher
gradle5xOrHigher
boolean
codeCoverageTool = JaCoCo
true
Set this to 'true' if gradle version is >= 5.x.
javaHomeOption-Set JAVA_HOME byInput alias:javaHomeSelection.string. Required. Allowed values:JDKVersion(JDK Version),Path. Default value:JDKVersion.
javaHomeOption
javaHomeSelection
string
JDKVersion
Path
JDKVersion
Sets JAVA_HOME by selecting a JDK version that the task discovers during builds or by manually entering a JDK path.
jdkVersionOption-JDK versionInput alias:jdkVersion.string. Optional. Use whenjavaHomeSelection = JDKVersion. Allowed values:default,1.17(JDK 17),1.11(JDK 11),1.10(JDK 10 (out of support)),1.9(JDK 9 (out of support)),1.8(JDK 8),1.7(JDK 7),1.6(JDK 6 (out of support)). Default value:default.
jdkVersionOption
jdkVersion
string
javaHomeSelection = JDKVersion
default
1.17
1.11
1.10
1.9
1.8
1.7
1.6
default
Attempts to discover the path to the selected JDK version and set JAVA_HOME accordingly.
jdkVersionOption-JDK versionInput alias:jdkVersion.string. Optional. Use whenjavaHomeSelection = JDKVersion. Allowed values:default,1.11(JDK 11),1.10(JDK 10 (out of support)),1.9(JDK 9 (out of support)),1.8(JDK 8),1.7(JDK 7),1.6(JDK 6 (out of support)). Default value:default.
jdkVersionOption
jdkVersion
string
javaHomeSelection = JDKVersion
default
1.11
1.10
1.9
1.8
1.7
1.6
default
Attempts to discover the path to the selected JDK version and set JAVA_HOME accordingly.
jdkDirectory-JDK pathInput alias:jdkUserInputPath.string. Required whenjavaHomeSelection = Path.
jdkDirectory
jdkUserInputPath
string
javaHomeSelection = Path
Sets JAVA_HOME to the given path.
jdkArchitectureOption-JDK architectureInput alias:jdkArchitecture.string. Optional. Use whenjdkVersion != default. Allowed values:x86,x64. Default value:x64.
jdkArchitectureOption
jdkArchitecture
string
jdkVersion != default
x86
x64
x64
Supplies the JDK architecture (x86 or x64).
gradleOptions-Set GRADLE_OPTSInput alias:gradleOpts.string. Default value:-Xmx1024m.
gradleOptions
gradleOpts
string
-Xmx1024m
Sets the GRADLE_OPTS environment variable, which is used to send command-line arguments to start the JVM. Thexmxflag specifies the maximum memory available to the JVM.
xmx
sonarQubeRunAnalysis-Run SonarQube or SonarCloud AnalysisInput alias:sqAnalysisEnabled.boolean. Default value:false.
sonarQubeRunAnalysis
sqAnalysisEnabled
boolean
false
This option has changed from version 1 of theGradletask to use theSonarQubeandSonarCloudmarketplace extensions. Enable this option to runSonarQube or SonarCloud analysisafter executing tasks in theTasksfield. You must also add aPrepare Analysis Configurationtask from one of the extensions to the build pipeline before this Gradle task.
sqGradlePluginVersionChoice-SonarQube scanner for Gradle versionstring. Required whensqAnalysisEnabled = true. Allowed values:specify(Specify version number),build(Use plugin applied in your build.gradle). Default value:specify.
sqGradlePluginVersionChoice
string
sqAnalysisEnabled = true
specify
build
specify
Specifies the SonarQube Gradle plugin version to use. Declare the version in the Gradle configuration file, or specify a version with this string.
sonarQubeGradlePluginVersion-SonarQube scanner for Gradle plugin versionInput alias:sqGradlePluginVersion.string. Required whensqAnalysisEnabled = true && sqGradlePluginVersionChoice = specify. Default value:2.6.1.
sonarQubeGradlePluginVersion
sqGradlePluginVersion
string
sqAnalysisEnabled = true && sqGradlePluginVersionChoice = specify
2.6.1
Contains the version number of theSonarQube Gradle plugin.
checkStyleRunAnalysis-Run CheckstyleInput alias:checkstyleAnalysisEnabled.boolean. Default value:false.
checkStyleRunAnalysis
checkstyleAnalysisEnabled
boolean
false
Runs the Checkstyle tool with the default Sun checks. Results are uploaded as build artifacts.
findBugsRunAnalysis-Run FindBugsInput alias:findbugsAnalysisEnabled.boolean. Default value:false.
findBugsRunAnalysis
findbugsAnalysisEnabled
boolean
false
Uses the FindBugs static analysis tool to look for bugs in the code. Results are uploaded as build artifacts. In Gradle 6.0,this plugin was removed. Use the SpotBugs plugin instead.
pmdRunAnalysis-Run PMDInput alias:pmdAnalysisEnabled.boolean. Default value:false.
pmdRunAnalysis
pmdAnalysisEnabled
boolean
false
Uses the PMD Java static analysis tool to look for bugs in the code. The results are uploaded as build artifacts.
spotBugsAnalysis-Run SpotBugsInput alias:spotBugsAnalysisEnabled.boolean. Default value:false.
spotBugsAnalysis
spotBugsAnalysisEnabled
boolean
false
RunsspotBugswhentrue. This plugin works with Gradle v5.6 or later. Learn more aboutusing the SpotBugs Gradle plugin. The plugin may work in an unexpected way or may not work at all with an earlier Gradle version.
spotBugs
true
spotBugsGradlePluginVersionChoice-Spotbugs plugin versionstring. Required whenspotBugsAnalysisEnabled = true. Allowed values:specify(Specify version number),build(Use plugin applied in your build.gradle). Default value:specify.
spotBugsGradlePluginVersionChoice
string
spotBugsAnalysisEnabled = true
specify
build
specify
Specifies the SpotBugs Gradle plugin version to use. The version can be declared in the Gradle configuration file, or the version can be specified in this string.
spotbugsGradlePluginVersion-Version numberstring. Required whenspotBugsAnalysisEnabled = true && spotBugsGradlePluginVersionChoice = specify. Default value:4.7.0.
spotbugsGradlePluginVersion
string
spotBugsAnalysisEnabled = true && spotBugsGradlePluginVersionChoice = specify
4.7.0
Contains the version number of theSpotBugs Gradle plugin.
Task control options
All tasks have control options in addition to their task inputs. For more information, seeControl options and common task properties.
Output variables
None.
Remarks
Configuration of the SonarQube analysis was moved to theSonarQubeorSonarCloudextensions in the taskPrepare Analysis Configuration.
Prepare Analysis Configuration
Use this task to build using a Gradle wrapper script.
How do I generate a wrapper from my Gradle project?
The Gradle wrapper allows the build agent to download and configure the exact Gradle environment that is checked into the repository without having any software configuration on the build agent itself other than the JVM.
Create the Gradle wrapper by issuing the following command from the root project directory where your build.gradle resides:jamal@fabrikam> gradle wrapper
Create the Gradle wrapper by issuing the following command from the root project directory where your build.gradle resides:
jamal@fabrikam> gradle wrapper
jamal@fabrikam> gradle wrapper
Upload your Gradle wrapper to your remote repository.There is a binary artifact that is generated by the gradle wrapper (located atgradle/wrapper/gradle-wrapper.jar).
This binary file is small and doesn't require updating. If you need to change the Gradle configuration run on the build agent, you update thegradle-wrapper.properties.The repository should look something like this:
Upload your Gradle wrapper to your remote repository.
There is a binary artifact that is generated by the gradle wrapper (located atgradle/wrapper/gradle-wrapper.jar).
This binary file is small and doesn't require updating. If you need to change the Gradle configuration run on the build agent, you update thegradle-wrapper.properties.
gradle/wrapper/gradle-wrapper.jar
gradle-wrapper.properties
The repository should look something like this:
|-- gradle/
    `-- wrapper/
        `-- gradle-wrapper.jar
        `-- gradle-wrapper.properties
|-- src/
|-- .gitignore
|-- build.gradle
|-- gradlew
|-- gradlew.bat
|-- gradle/
    `-- wrapper/
        `-- gradle-wrapper.jar
        `-- gradle-wrapper.properties
|-- src/
|-- .gitignore
|-- build.gradle
|-- gradlew
|-- gradlew.bat
How do I fix timeouts when downloading dependencies?
To fix errors such asRead timed outwhen downloading dependencies, users of Gradle 4.3+ can change the timeout by adding-Dhttp.socketTimeout=60000 -Dhttp.connectionTimeout=60000toOptions. This increases the timeout from 10 seconds to 1 minute.
Read timed out
-Dhttp.socketTimeout=60000 -Dhttp.connectionTimeout=60000
Options
Examples
Build your Java app with Gradle
Requirements
Feedback
Was this page helpful?
Additional resources