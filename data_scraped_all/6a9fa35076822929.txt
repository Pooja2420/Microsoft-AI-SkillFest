Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Azure Service Bus bindings for Azure Functions
Article
2023-11-01
50 contributors
In this article
Azure Functions integrates withAzure Service Busviatriggers and bindings. Integrating with Service Bus allows you to build functions that react to and send queue or topic messages.
Install extension
The extension NuGet package you install depends on the C# mode you're using in your function app:
Isolated worker model
In-process model
Functions execute in an isolated C# worker process. To learn more, seeGuide for running C# Azure Functions in an isolated worker process.
Add the extension to your project installing thisNuGet package.
Important
Support will end for the in-process model on November 10, 2026. We highly recommend that youmigrate your apps to the isolated worker modelfor full support.
This section describes using aclass library. ForC# scripting, you would need to insteadinstall the extension bundle, version 2.x or later.
Functions execute in the same process as the Functions host. To learn more, seeDevelop C# class library functions using Azure Functions.
Add the extension to your project installing thisNuGet package.
The functionality of the extension varies depending on the extension version:
Extension 5.x+
Functions 2.x+
Functions 1.x
Extension 5.x+
Functions 2.x+
Functions 1.x
This version introduces the ability toconnect using an identity instead of a secret. For a tutorial on configuring your function apps with managed identities, see thecreating a function app with identity-based connections tutorial.
This version allows you to bind to types fromAzure.Messaging.ServiceBus.
This extension version is available by installing theNuGet package, version 5.x or later.
Working with the trigger and bindings requires that you reference the appropriate NuGet package. Install NuGet package, versions < 5.x.
Important
Support will end for version 1.x of the Azure Functions runtime on September 14, 2026. We highly recommend that youmigrate your apps to version 4.xfor full support.
Functions 1.x apps automatically have a reference theMicrosoft.Azure.WebJobsNuGet package, version 2.x.
This version introduces the ability toconnect using an identity instead of a secret. For a tutorial on configuring your function apps with managed identities, see thecreating a function app with identity-based connections tutorial.
This version allows you to bind to types fromAzure.Messaging.ServiceBus.
This version supports configuration of triggers and bindings through.NET Aspire integration.
Add the extension to your project by installing theNuGet package, version 5.x.
Add the extension to your project by installing theNuGet package, version 4.x.
Functions version 1.x doesn't support the isolated worker process.
Install bundle
The Service Bus binding is part of anextension bundle, which is specified in your host.json project file. You may need to modify this bundle to change the version of the binding, or if bundles aren't already installed. To learn more, seeextension bundle.
Bundle v3.x
Bundle v2.x
Functions 1.x
This version introduces the ability toconnect using an identity instead of a secret. For a tutorial on configuring your function apps with managed identities, see thecreating a function app with identity-based connections tutorial.
You can add this version of the extension from the extension bundle v3 by adding or replacing the following code in yourhost.jsonfile:
host.json
{
    "version": "2.0",
    "extensionBundle": {
        "id": "Microsoft.Azure.Functions.ExtensionBundle",
        "version": "[3.3.0, 4.0.0)"
    }
}
{
    "version": "2.0",
    "extensionBundle": {
        "id": "Microsoft.Azure.Functions.ExtensionBundle",
        "version": "[3.3.0, 4.0.0)"
    }
}
To learn more, seeUpdate your extensions.
You can install this version of the extension in your function app by registering theextension bundle, version 2.x.
Functions 1.x apps automatically have a reference to the extension.
Binding types
The binding types supported for .NET depend on both the extension version and C# execution mode, which can be one of the following:
Isolated worker model
In-process class library
An isolated worker process class library compiled C# function runs in a process isolated from the runtime.
An in-process class library is a compiled C# function runs in the same process as the Functions runtime.
Choose a version to see binding type details for the mode and version.
Extension 5.x+
Functions 2.x+
Functions 1.x
Extension 5.x+
Functions 2.x+
Functions 1.x
The Service Bus extension supports parameter types according to the table below.
string
byte[]
ServiceBusReceivedMessage[]
string[]
string
byte[]
ICollector<T>
IAsyncCollector<T>
T
1Messages containing JSON data can be deserialized into known plain-old CLR object (POCO) types.
2Advanced scenarios include message settlement, sessions, and transactions. These types are available as separate parameters in addition to the normal trigger parameter.
Earlier versions of the extension exposed types from the now deprecatedMicrosoft.Azure.ServiceBusnamespace. Newer types fromAzure.Messaging.ServiceBusare exclusive toExtension 5.x+.
On 30 September 2026, we'll retire the Azure Service Bus SDK libraries WindowsAzure.ServiceBus, Microsoft.Azure.ServiceBus, and com.microsoft.azure.servicebus, which don't conform to Azure SDK guidelines. We'll also end support of the SBMP protocol, so you'll no longer be able to use this protocol after 30 September 2026. Migrate to the latest Azure SDK libraries, which offer critical security updates and improved capabilities, before that date.
Although the older libraries can still be used beyond 30 September 2026, they'll no longer receive official support and updates from Microsoft. For more information, see thesupport retirement announcement.
This version of the extension supports parameter types according to the table below.
The Service Bus extension supports parameter types according to the table below.
string
byte[]
ServiceBusReceivedMessage[]
string[]
string
byte[]
ICollector<T>
IAsyncCollector<T>
T
1Messages containing JSON data can be deserialized into known plain-old CLR object (POCO) types.
2Advanced scenarios include message settlement, sessions, and transactions. These types are available as separate parameters in addition to the normal trigger parameter.
Functions 1.x exposed types from the deprecatedMicrosoft.ServiceBus.Messagingnamespace. Newer types fromAzure.Messaging.ServiceBusare exclusive toExtension 5.x+. To use these, you will need toupgrade your application to Functions 4.x.
On 30 September 2026, we'll retire the Azure Service Bus SDK libraries WindowsAzure.ServiceBus, Microsoft.Azure.ServiceBus, and com.microsoft.azure.servicebus, which don't conform to Azure SDK guidelines. We'll also end support of the SBMP protocol, so you'll no longer be able to use this protocol after 30 September 2026. Migrate to the latest Azure SDK libraries, which offer critical security updates and improved capabilities, before that date.
Although the older libraries can still be used beyond 30 September 2026, they'll no longer receive official support and updates from Microsoft. For more information, see thesupport retirement announcement.
The isolated worker process supports parameter types according to the tables below.
Service Bus trigger
When you want the function to process a single message, the Service Bus trigger can bind to the following types:
string
byte[]
ServiceBusReceivedMessage
When you want the function to process a batch of messages, the Service Bus trigger can bind to the following types:
T[]
T
ServiceBusReceivedMessage[]
1To use these types, you need to referenceMicrosoft.Azure.Functions.Worker.Extensions.ServiceBus 5.14.1 or laterand thecommon dependencies for SDK type bindings.
2When usingServiceBusMessageActions, set theAutoCompleteMessagesproperty of the trigger attributetofalse. This prevents the runtime from attempting to complete messages after a successful function invocation.
ServiceBusMessageActions
AutoCompleteMessages
false
Service Bus output binding
When you want the function to write a single message, the Service Bus output binding can bind to the following types:
string
byte[]
When you want the function to write multiple messages, the Service Bus output binding can bind to the following types:
T[]
T
For other output scenarios, create and use aServiceBusClientwith other types fromAzure.Messaging.ServiceBusdirectly. SeeRegister Azure clientsfor an example of using dependency injection to create a client type from the Azure SDK.
Earlier versions of extensions in the isolated worker process only support binding tostring,byte[], and JSON serializable types. Additional options are available toExtension 5.x+.
string
byte[]
Functions version 1.x doesn't support isolated worker process. To use the isolated worker model,upgrade your application to Functions 4.x.

host.json settings
This section describes the configuration settings available for this binding, which depends on the runtime and extension version.
Extension 5.x+
Functions 2.x+
Functions 1.x
{
    "version": "2.0",
    "extensions": {
        "serviceBus": {
            "clientRetryOptions":{
                "mode": "exponential",
                "tryTimeout": "00:01:00",
                "delay": "00:00:00.80",
                "maxDelay": "00:01:00",
                "maxRetries": 3
            },
            "prefetchCount": 0,
            "transportType": "amqpWebSockets",
            "webProxy": "https://proxyserver:8080",
            "autoCompleteMessages": true,
            "maxAutoLockRenewalDuration": "00:05:00",
            "maxConcurrentCalls": 16,
            "maxConcurrentSessions": 8,
            "maxMessageBatchSize": 1000,
            "minMessageBatchSize": 1,
            "maxBatchWaitTime": "00:00:30",
            "sessionIdleTimeout": "00:01:00",
            "enableCrossEntityTransactions": false
        }
    }
}
{
    "version": "2.0",
    "extensions": {
        "serviceBus": {
            "clientRetryOptions":{
                "mode": "exponential",
                "tryTimeout": "00:01:00",
                "delay": "00:00:00.80",
                "maxDelay": "00:01:00",
                "maxRetries": 3
            },
            "prefetchCount": 0,
            "transportType": "amqpWebSockets",
            "webProxy": "https://proxyserver:8080",
            "autoCompleteMessages": true,
            "maxAutoLockRenewalDuration": "00:05:00",
            "maxConcurrentCalls": 16,
            "maxConcurrentSessions": 8,
            "maxMessageBatchSize": 1000,
            "minMessageBatchSize": 1,
            "maxBatchWaitTime": "00:00:30",
            "sessionIdleTimeout": "00:01:00",
            "enableCrossEntityTransactions": false
        }
    }
}
TheclientRetryOptionssettings only apply to interactions with the Service Bus service. They don't affect retries of function executions. For more information, seeRetries.
clientRetryOptions
Exponential
Fixed
00:01:00
00:00:00.80
00:01:00
3
0
amqpTcp
amqpWebSockets
amqpTcp
true
00:05:00
16
isSessionsEnabled
false
8
isSessionsEnabled
true
1000
1
maxMessageBatchSize
maxBatchWaitTime
00:00:30
minMessageBatchSize
minMessageBatchSize
false
1UsingminMessageBatchSizeandmaxBatchWaitTimerequiresv5.10.0of theMicrosoft.Azure.WebJobs.Extensions.ServiceBuspackage, or a later version.
minMessageBatchSize
maxBatchWaitTime
Microsoft.Azure.WebJobs.Extensions.ServiceBus
{
    "version": "2.0",
    "extensions": {
        "serviceBus": {
            "prefetchCount": 100,
            "messageHandlerOptions": {
                "autoComplete": true,
                "maxConcurrentCalls": 32,
                "maxAutoRenewDuration": "00:05:00"
            },
            "sessionHandlerOptions": {
                "autoComplete": false,
                "messageWaitTimeout": "00:00:30",
                "maxAutoRenewDuration": "00:55:00",
                "maxConcurrentSessions": 16
            },
            "batchOptions": {
                "maxMessageCount": 1000,
                "operationTimeout": "00:01:00",
                "autoComplete": true
            }
        }
    }
}
{
    "version": "2.0",
    "extensions": {
        "serviceBus": {
            "prefetchCount": 100,
            "messageHandlerOptions": {
                "autoComplete": true,
                "maxConcurrentCalls": 32,
                "maxAutoRenewDuration": "00:05:00"
            },
            "sessionHandlerOptions": {
                "autoComplete": false,
                "messageWaitTimeout": "00:00:30",
                "maxAutoRenewDuration": "00:55:00",
                "maxConcurrentSessions": 16
            },
            "batchOptions": {
                "maxMessageCount": 1000,
                "operationTimeout": "00:01:00",
                "autoComplete": true
            }
        }
    }
}
When you set theisSessionsEnabledproperty or attribute onthe triggertotrue, thesessionHandlerOptionsis honored.  When you set theisSessionsEnabledproperty or attribute onthe triggertofalse, themessageHandlerOptionsis honored.
isSessionsEnabled
true
sessionHandlerOptions
isSessionsEnabled
false
messageHandlerOptions
0
00:05:00
true
false
true
false
ServiceBusReceiver
DeliveryCount
abandonAsync
completeAsync
16
2000
1000
00:01:00
hh:mm:ss
For a reference of host.json in Functions 1.x, seehost.json reference for Azure Functions 1.x.
Next steps
Run a function when a Service Bus queue or topic message is created (Trigger)
Send Azure Service Bus messages from Azure Functions (Output binding)
Feedback
Was this page helpful?
Additional resources