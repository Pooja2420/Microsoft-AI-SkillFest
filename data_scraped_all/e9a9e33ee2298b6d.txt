Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Troubleshoot Azure RBAC limits
Article
2024-06-27
6 contributors
In this article
This article describes some common solutions when you exceed the limits in Azure role-based access control (Azure RBAC).
Prerequisites
Readerrole to run Azure Resource Graph queries.
Role Based Access Control Administratorrole to add or remove role assignments.
User Access Administratorrole to add role assignments, remove role assignments, or delete custom roles.
Groups AdministratororUser Administratorrole to create groups.
Note
The queries used in this article only return role assignments or custom roles that you have permissions to read. For example, if you only have permissions to read role assignments at resource group scope, role assignments at subscription scope aren't returned.
Symptom - No more role assignments can be created
When you try to assign a role, you get the following error message:
No more role assignments can be created (code: RoleAssignmentLimitExceeded)
No more role assignments can be created (code: RoleAssignmentLimitExceeded)
Cause
Azure supports up to4000role assignments per subscription. This limit includes role assignments at the subscription, resource group, and resource scopes, but not at the management group scope.Eligible role assignmentsand role assignments scheduled in the future do not count towards this limit. You should try to reduce the number of role assignments in the subscription.
Note
The4000role assignments limit per subscription is fixed and cannot be increased.
To get the number of role assignments, you can view thechart on the Access control (IAM) pagein the Azure portal. You can also use the following Azure PowerShell commands:
$scope = "/subscriptions/<subscriptionId>"
$ras = Get-AzRoleAssignment -Scope $scope | Where-Object {$_.scope.StartsWith($scope)}
$ras.Count
$scope = "/subscriptions/<subscriptionId>"
$ras = Get-AzRoleAssignment -Scope $scope | Where-Object {$_.scope.StartsWith($scope)}
$ras.Count
Solution 1 - Replace principal-based role assignments with group-based role assignments
To reduce the number of role assignments in the subscription, add principals (users, service principals, and managed identities) to groups and assign roles to the groups instead. Follow these steps to identify where multiple role assignments for principals can be replaced with a single role assignment for a group.
Sign in to theAzure portaland open the Azure Resource Graph Explorer.
Sign in to theAzure portaland open the Azure Resource Graph Explorer.
SelectScopeand set the scope for the query.You typically set scope toDirectoryto query your entire tenant, but you can narrow the scope to particular subscriptions.
SelectScopeand set the scope for the query.
You typically set scope toDirectoryto query your entire tenant, but you can narrow the scope to particular subscriptions.

SelectSet authorization scopeand set the authorization scope toAt, above and belowto query all resources at the specified scope.
SelectSet authorization scopeand set the authorization scope toAt, above and belowto query all resources at the specified scope.

Run the following query to get the role assignments with the same role and at the same scope, but for different principals.This query checks active role assignments and doesn't consider eligible role assignments inMicrosoft Entra Privileged Identity Management. To list eligible role assignments, you can use the Microsoft Entra admin center, PowerShell, or REST API. For more information, seeGet-AzRoleEligibilityScheduleInstanceorRole Eligibility Schedule Instances - List For Scope.If you are usingrole assignment conditionsordelegating role assignment management with conditions, you should use the Conditions query. Otherwise, use the Default query.DefaultConditionsauthorizationresources
| where type =~ "microsoft.authorization/roleassignments"
| where id startswith "/subscriptions"
| extend RoleId = tolower(tostring(properties.roleDefinitionId))
| join kind = leftouter (
  authorizationresources
  | where type =~ "microsoft.authorization/roledefinitions"
  | extend RoleDefinitionName = tostring(properties.roleName)
  | extend RoleId = tolower(id)
  | project RoleDefinitionName, RoleId
) on $left.RoleId == $right.RoleId
| extend principalId = tostring(properties.principalId)
| extend principal_to_ra = pack(principalId, id)
| summarize count_ = count(), AllPrincipals = make_set(principal_to_ra) by RoleDefinitionId = RoleId, Scope = tolower(properties.scope), RoleDefinitionName
| where count_ > 1
| order by count_ descauthorizationresources
| where type =~ "microsoft.authorization/roleassignments"
| where id startswith "/subscriptions"
| extend RoleId = tolower(tostring(properties.roleDefinitionId))
| extend condition = tostring(properties.condition)
| join kind = leftouter (
  authorizationresources
  | where type =~ "microsoft.authorization/roledefinitions"
  | extend RoleDefinitionName = tostring(properties.roleName)
  | extend RoleId = tolower(id)
  | project RoleDefinitionName, RoleId
) on $left.RoleId == $right.RoleId
| extend principalId = tostring(properties.principalId)
| extend principal_to_ra = pack(principalId, id)
| summarize count_ = count(), AllPrincipals = make_set(principal_to_ra) by RoleDefinitionId = RoleId, Scope = tolower(properties.scope), RoleDefinitionName, condition
| where count_ > 1
| order by count_ descThe following shows an example of the results. Thecount_column is the number of principals assigned the same role and at the same scope. The count is sorted in descending order.
Run the following query to get the role assignments with the same role and at the same scope, but for different principals.
This query checks active role assignments and doesn't consider eligible role assignments inMicrosoft Entra Privileged Identity Management. To list eligible role assignments, you can use the Microsoft Entra admin center, PowerShell, or REST API. For more information, seeGet-AzRoleEligibilityScheduleInstanceorRole Eligibility Schedule Instances - List For Scope.
If you are usingrole assignment conditionsordelegating role assignment management with conditions, you should use the Conditions query. Otherwise, use the Default query.
Default
Conditions
authorizationresources
| where type =~ "microsoft.authorization/roleassignments"
| where id startswith "/subscriptions"
| extend RoleId = tolower(tostring(properties.roleDefinitionId))
| join kind = leftouter (
  authorizationresources
  | where type =~ "microsoft.authorization/roledefinitions"
  | extend RoleDefinitionName = tostring(properties.roleName)
  | extend RoleId = tolower(id)
  | project RoleDefinitionName, RoleId
) on $left.RoleId == $right.RoleId
| extend principalId = tostring(properties.principalId)
| extend principal_to_ra = pack(principalId, id)
| summarize count_ = count(), AllPrincipals = make_set(principal_to_ra) by RoleDefinitionId = RoleId, Scope = tolower(properties.scope), RoleDefinitionName
| where count_ > 1
| order by count_ desc
authorizationresources
| where type =~ "microsoft.authorization/roleassignments"
| where id startswith "/subscriptions"
| extend RoleId = tolower(tostring(properties.roleDefinitionId))
| join kind = leftouter (
  authorizationresources
  | where type =~ "microsoft.authorization/roledefinitions"
  | extend RoleDefinitionName = tostring(properties.roleName)
  | extend RoleId = tolower(id)
  | project RoleDefinitionName, RoleId
) on $left.RoleId == $right.RoleId
| extend principalId = tostring(properties.principalId)
| extend principal_to_ra = pack(principalId, id)
| summarize count_ = count(), AllPrincipals = make_set(principal_to_ra) by RoleDefinitionId = RoleId, Scope = tolower(properties.scope), RoleDefinitionName
| where count_ > 1
| order by count_ desc
authorizationresources
| where type =~ "microsoft.authorization/roleassignments"
| where id startswith "/subscriptions"
| extend RoleId = tolower(tostring(properties.roleDefinitionId))
| extend condition = tostring(properties.condition)
| join kind = leftouter (
  authorizationresources
  | where type =~ "microsoft.authorization/roledefinitions"
  | extend RoleDefinitionName = tostring(properties.roleName)
  | extend RoleId = tolower(id)
  | project RoleDefinitionName, RoleId
) on $left.RoleId == $right.RoleId
| extend principalId = tostring(properties.principalId)
| extend principal_to_ra = pack(principalId, id)
| summarize count_ = count(), AllPrincipals = make_set(principal_to_ra) by RoleDefinitionId = RoleId, Scope = tolower(properties.scope), RoleDefinitionName, condition
| where count_ > 1
| order by count_ desc
authorizationresources
| where type =~ "microsoft.authorization/roleassignments"
| where id startswith "/subscriptions"
| extend RoleId = tolower(tostring(properties.roleDefinitionId))
| extend condition = tostring(properties.condition)
| join kind = leftouter (
  authorizationresources
  | where type =~ "microsoft.authorization/roledefinitions"
  | extend RoleDefinitionName = tostring(properties.roleName)
  | extend RoleId = tolower(id)
  | project RoleDefinitionName, RoleId
) on $left.RoleId == $right.RoleId
| extend principalId = tostring(properties.principalId)
| extend principal_to_ra = pack(principalId, id)
| summarize count_ = count(), AllPrincipals = make_set(principal_to_ra) by RoleDefinitionId = RoleId, Scope = tolower(properties.scope), RoleDefinitionName, condition
| where count_ > 1
| order by count_ desc
The following shows an example of the results. Thecount_column is the number of principals assigned the same role and at the same scope. The count is sorted in descending order.

Identify a row where you want to replace the multiple role assignments with a single role assignment for a group.
Identify a row where you want to replace the multiple role assignments with a single role assignment for a group.
In the row, selectSee detailsto open theDetailspane.ColumnDescriptionRoleDefinitionIdIDof the currently assigned role.ScopeScope for the role assignment, which will be a subscription, resource group, or resource.RoleDefinitionNameNameof the currently assigned role.count_Number of principals assigned the same role and at the same scope.AllPrincipalsList of principal IDs assigned the same role and at the same scope.
In the row, selectSee detailsto open theDetailspane.

UseRoleDefinitionId,RoleDefinitionName, andScopeto get the role and scope.
UseRoleDefinitionId,RoleDefinitionName, andScopeto get the role and scope.
UseAllPrincipalsto get the list of the principal IDs with the same role assignment.
UseAllPrincipalsto get the list of the principal IDs with the same role assignment.
Create a Microsoft Entra group. For more information, seeManage Microsoft Entra groups and group membership.
Create a Microsoft Entra group. For more information, seeManage Microsoft Entra groups and group membership.
Add the principals fromAllPrincipalsto the group.For information about how to add principals in bulk, seeBulk add group members in Microsoft Entra ID.
Add the principals fromAllPrincipalsto the group.
For information about how to add principals in bulk, seeBulk add group members in Microsoft Entra ID.
Assign the role to the group you created at the same scope. For more information, seeAssign Azure roles using the Azure portal.Now you can find and remove the principal-based role assignments.
Assign the role to the group you created at the same scope. For more information, seeAssign Azure roles using the Azure portal.
Now you can find and remove the principal-based role assignments.
Get the principal names from the principal IDs.To use Azure portal, seeAdd or update a user's profile information and settings.To use PowerShell, seeGet-MgUser.To use Azure, CLI, seeaz ad user show.
Get the principal names from the principal IDs.
To use Azure portal, seeAdd or update a user's profile information and settings.
To use PowerShell, seeGet-MgUser.
To use Azure, CLI, seeaz ad user show.
Open theAccess control (IAM)page at the same scope as the role assignments.
Open theAccess control (IAM)page at the same scope as the role assignments.
Select theRole assignmentstab.
Select theRole assignmentstab.
To filter the role assignments, select theRolefilter and then select the role name.
To filter the role assignments, select theRolefilter and then select the role name.
Find the principal-based role assignments.You should also see your group-based role assignment.
Find the principal-based role assignments.
You should also see your group-based role assignment.

Select and remove the principal-based role assignments. For more information, seeRemove Azure role assignments.
Select and remove the principal-based role assignments. For more information, seeRemove Azure role assignments.
Solution 2 - Remove redundant role assignments
To reduce the number of role assignments in the subscription, remove redundant role assignments. Follow these steps to identify where redundant role assignments at a lower scope can potentially be removed since a role assignment at a higher scope already grants access.
Sign in to theAzure portaland open the Azure Resource Graph Explorer.
Sign in to theAzure portaland open the Azure Resource Graph Explorer.
SelectScopeand set the scope for the query.You typically set scope toDirectoryto query your entire tenant, but you can narrow the scope to particular subscriptions.
SelectScopeand set the scope for the query.
You typically set scope toDirectoryto query your entire tenant, but you can narrow the scope to particular subscriptions.

SelectSet authorization scopeand set the authorization scope toAt, above and belowto query all resources at the specified scope.
SelectSet authorization scopeand set the authorization scope toAt, above and belowto query all resources at the specified scope.

Run the following query to get the role assignments with the same role and same principal, but at different scopes.This query checks active role assignments and doesn't consider eligible role assignments inMicrosoft Entra Privileged Identity Management. To list eligible role assignments, you can use the Microsoft Entra admin center, PowerShell, or REST API. For more information, seeGet-AzRoleEligibilityScheduleInstanceorRole Eligibility Schedule Instances - List For Scope.If you are usingrole assignment conditionsordelegating role assignment management with conditions, you should use the Conditions query. Otherwise, use the Default query.DefaultConditionsauthorizationresources
| where type =~ "microsoft.authorization/roleassignments"
| where id startswith "/subscriptions"
| extend RoleDefinitionId = tolower(tostring(properties.roleDefinitionId))
| extend PrincipalId = tolower(properties.principalId)
| extend RoleDefinitionId_PrincipalId = strcat(RoleDefinitionId, "_", PrincipalId)
| join kind = leftouter (
  authorizationresources
  | where type =~ "microsoft.authorization/roledefinitions"
  | extend RoleDefinitionName = tostring(properties.roleName)
  | extend rdId = tolower(id)
  | project RoleDefinitionName, rdId
) on $left.RoleDefinitionId == $right.rdId
| summarize count_ = count(), Scopes = make_set(tolower(properties.scope)) by RoleDefinitionId_PrincipalId,RoleDefinitionName
| project RoleDefinitionId = split(RoleDefinitionId_PrincipalId, "_", 0)[0], RoleDefinitionName, PrincipalId = split(RoleDefinitionId_PrincipalId, "_", 1)[0], count_, Scopes
| where count_ > 1
| order by count_ descauthorizationresources
| where type =~ "microsoft.authorization/roleassignments"
| where id startswith "/subscriptions"
| extend RoleDefinitionId = tolower(tostring(properties.roleDefinitionId))
| extend PrincipalId = tolower(properties.principalId)
| extend RoleDefinitionId_PrincipalId = strcat(RoleDefinitionId, "_", PrincipalId)
| extend condition = tostring(properties.condition)
| join kind = leftouter (
  authorizationresources
  | where type =~ "microsoft.authorization/roledefinitions"
  | extend RoleDefinitionName = tostring(properties.roleName)
  | extend rdId = tolower(id)
  | project RoleDefinitionName, rdId
) on $left.RoleDefinitionId == $right.rdId
| summarize count_ = count(), Scopes = make_set(tolower(properties.scope)) by RoleDefinitionId_PrincipalId,RoleDefinitionName
| project RoleDefinitionId = split(RoleDefinitionId_PrincipalId, "_", 0)[0], RoleDefinitionName, PrincipalId = split(RoleDefinitionId_PrincipalId, "_", 1)[0], count_, Scopes, condition
| where count_ > 1
| order by count_ descThe following shows an example of the results. Thecount_column is the number of different scopes for role assignments with the same role and same principal. The count is sorted in descending order.ColumnDescriptionRoleDefinitionIdIDof the currently assigned role.RoleDefinitionNameNameof the currently assigned role.PrincipalIdID of the principal assigned the role.count_Number of different scopes for role assignments with the same role and same principal.ScopesScopes for role assignments with the same role and same principal.
Run the following query to get the role assignments with the same role and same principal, but at different scopes.
This query checks active role assignments and doesn't consider eligible role assignments inMicrosoft Entra Privileged Identity Management. To list eligible role assignments, you can use the Microsoft Entra admin center, PowerShell, or REST API. For more information, seeGet-AzRoleEligibilityScheduleInstanceorRole Eligibility Schedule Instances - List For Scope.
If you are usingrole assignment conditionsordelegating role assignment management with conditions, you should use the Conditions query. Otherwise, use the Default query.
Default
Conditions
authorizationresources
| where type =~ "microsoft.authorization/roleassignments"
| where id startswith "/subscriptions"
| extend RoleDefinitionId = tolower(tostring(properties.roleDefinitionId))
| extend PrincipalId = tolower(properties.principalId)
| extend RoleDefinitionId_PrincipalId = strcat(RoleDefinitionId, "_", PrincipalId)
| join kind = leftouter (
  authorizationresources
  | where type =~ "microsoft.authorization/roledefinitions"
  | extend RoleDefinitionName = tostring(properties.roleName)
  | extend rdId = tolower(id)
  | project RoleDefinitionName, rdId
) on $left.RoleDefinitionId == $right.rdId
| summarize count_ = count(), Scopes = make_set(tolower(properties.scope)) by RoleDefinitionId_PrincipalId,RoleDefinitionName
| project RoleDefinitionId = split(RoleDefinitionId_PrincipalId, "_", 0)[0], RoleDefinitionName, PrincipalId = split(RoleDefinitionId_PrincipalId, "_", 1)[0], count_, Scopes
| where count_ > 1
| order by count_ desc
authorizationresources
| where type =~ "microsoft.authorization/roleassignments"
| where id startswith "/subscriptions"
| extend RoleDefinitionId = tolower(tostring(properties.roleDefinitionId))
| extend PrincipalId = tolower(properties.principalId)
| extend RoleDefinitionId_PrincipalId = strcat(RoleDefinitionId, "_", PrincipalId)
| join kind = leftouter (
  authorizationresources
  | where type =~ "microsoft.authorization/roledefinitions"
  | extend RoleDefinitionName = tostring(properties.roleName)
  | extend rdId = tolower(id)
  | project RoleDefinitionName, rdId
) on $left.RoleDefinitionId == $right.rdId
| summarize count_ = count(), Scopes = make_set(tolower(properties.scope)) by RoleDefinitionId_PrincipalId,RoleDefinitionName
| project RoleDefinitionId = split(RoleDefinitionId_PrincipalId, "_", 0)[0], RoleDefinitionName, PrincipalId = split(RoleDefinitionId_PrincipalId, "_", 1)[0], count_, Scopes
| where count_ > 1
| order by count_ desc
authorizationresources
| where type =~ "microsoft.authorization/roleassignments"
| where id startswith "/subscriptions"
| extend RoleDefinitionId = tolower(tostring(properties.roleDefinitionId))
| extend PrincipalId = tolower(properties.principalId)
| extend RoleDefinitionId_PrincipalId = strcat(RoleDefinitionId, "_", PrincipalId)
| extend condition = tostring(properties.condition)
| join kind = leftouter (
  authorizationresources
  | where type =~ "microsoft.authorization/roledefinitions"
  | extend RoleDefinitionName = tostring(properties.roleName)
  | extend rdId = tolower(id)
  | project RoleDefinitionName, rdId
) on $left.RoleDefinitionId == $right.rdId
| summarize count_ = count(), Scopes = make_set(tolower(properties.scope)) by RoleDefinitionId_PrincipalId,RoleDefinitionName
| project RoleDefinitionId = split(RoleDefinitionId_PrincipalId, "_", 0)[0], RoleDefinitionName, PrincipalId = split(RoleDefinitionId_PrincipalId, "_", 1)[0], count_, Scopes, condition
| where count_ > 1
| order by count_ desc
authorizationresources
| where type =~ "microsoft.authorization/roleassignments"
| where id startswith "/subscriptions"
| extend RoleDefinitionId = tolower(tostring(properties.roleDefinitionId))
| extend PrincipalId = tolower(properties.principalId)
| extend RoleDefinitionId_PrincipalId = strcat(RoleDefinitionId, "_", PrincipalId)
| extend condition = tostring(properties.condition)
| join kind = leftouter (
  authorizationresources
  | where type =~ "microsoft.authorization/roledefinitions"
  | extend RoleDefinitionName = tostring(properties.roleName)
  | extend rdId = tolower(id)
  | project RoleDefinitionName, rdId
) on $left.RoleDefinitionId == $right.rdId
| summarize count_ = count(), Scopes = make_set(tolower(properties.scope)) by RoleDefinitionId_PrincipalId,RoleDefinitionName
| project RoleDefinitionId = split(RoleDefinitionId_PrincipalId, "_", 0)[0], RoleDefinitionName, PrincipalId = split(RoleDefinitionId_PrincipalId, "_", 1)[0], count_, Scopes, condition
| where count_ > 1
| order by count_ desc
The following shows an example of the results. Thecount_column is the number of different scopes for role assignments with the same role and same principal. The count is sorted in descending order.

Identify a row where you want to remove redundant role assignments.
Identify a row where you want to remove redundant role assignments.
In a row, selectSee detailsto open theDetailspane.
In a row, selectSee detailsto open theDetailspane.

UseRoleDefinitionId,RoleDefinitionName, andPrincipalIdto get the role and principal ID.
UseRoleDefinitionId,RoleDefinitionName, andPrincipalIdto get the role and principal ID.
UseScopesto get the list of the scopes for the same role and same principal.
UseScopesto get the list of the scopes for the same role and same principal.
Determine which scope is required for the role assignment. The other role assignments can be removed.You should followbest practices of least privilegewhen determining which role assignments can be removed. The role assignment at the higher scope might be granting more access to the principal than what is needed. In that case, you should remove the role assignment with the higher scope. For example, a user might not need a Virtual Machine Contributor role assignment at subscription scope when a Virtual Machine Contributor role assignment at a lower resource group scope grants the required access.
Determine which scope is required for the role assignment. The other role assignments can be removed.
You should followbest practices of least privilegewhen determining which role assignments can be removed. The role assignment at the higher scope might be granting more access to the principal than what is needed. In that case, you should remove the role assignment with the higher scope. For example, a user might not need a Virtual Machine Contributor role assignment at subscription scope when a Virtual Machine Contributor role assignment at a lower resource group scope grants the required access.
Get the principal name from the principal ID.To use Azure portal, seeAdd or update a user's profile information and settings.To use PowerShell, seeGet-MgUser.To use Azure, CLI, seeaz ad user show.
Get the principal name from the principal ID.
To use Azure portal, seeAdd or update a user's profile information and settings.
To use PowerShell, seeGet-MgUser.
To use Azure, CLI, seeaz ad user show.
Open theAccess control (IAM)page at the scope for a role assignment you want to remove.
Open theAccess control (IAM)page at the scope for a role assignment you want to remove.
Select theRole assignmentstab.
Select theRole assignmentstab.
To filter the role assignments, select theRolefilter and then select the role name.
To filter the role assignments, select theRolefilter and then select the role name.
Find the principal.
Find the principal.
Select and remove the role assignment. For more information, seeRemove Azure role assignments.
Select and remove the role assignment. For more information, seeRemove Azure role assignments.
Solution 3 - Replace multiple built-in role assignments with a custom role assignment
To reduce the number of role assignments in the subscription, replace multiple built-in role assignments with a single custom role assignment. Follow these steps to identify where multiple built-in role assignments can potentially be replaced.
Sign in to theAzure portaland open the Azure Resource Graph Explorer.
Sign in to theAzure portaland open the Azure Resource Graph Explorer.
SelectScopeand set the scope for the query.You typically set scope toDirectoryto query your entire tenant, but you can narrow the scope to particular subscriptions.
SelectScopeand set the scope for the query.
You typically set scope toDirectoryto query your entire tenant, but you can narrow the scope to particular subscriptions.

Run the following query to get role assignments with the same principal and same scope, but with different built-in roles.This query checks active role assignments and doesn't consider eligible role assignments inMicrosoft Entra Privileged Identity Management. To list eligible role assignments, you can use the Microsoft Entra admin center, PowerShell, or REST API. For more information, seeGet-AzRoleEligibilityScheduleInstanceorRole Eligibility Schedule Instances - List For Scope.If you are usingrole assignment conditionsordelegating role assignment management with conditions, you should use the Conditions query. Otherwise, use the Default query.DefaultConditionAuthorizationResources
| where type =~ "microsoft.authorization/roleassignments"
| where id startswith "/subscriptions"
| extend PrincipalId = tostring(properties.principalId) 
| extend Scope = tolower(properties.scope)
| extend RoleDefinitionId = tolower(tostring(properties.roleDefinitionId))
| join kind = leftouter (
  AuthorizationResources
  | where type =~ "microsoft.authorization/roledefinitions"
  | extend RoleName = tostring(properties.roleName)
  | extend RoleId = tolower(id)
  | extend RoleType = tostring(properties.type) 
  | where RoleType == "BuiltInRole"
  | extend RoleId_RoleName = pack(RoleId, RoleName)
) on $left.RoleDefinitionId == $right.RoleId
| summarize count_ = count(), AllRD = make_set(RoleId_RoleName) by PrincipalId, Scope
| where count_ > 1
| order by count_ descAuthorizationResources
| where type =~ "microsoft.authorization/roleassignments"
| where id startswith "/subscriptions"
| extend PrincipalId = tostring(properties.principalId) 
| extend Scope = tolower(properties.scope)
| extend RoleDefinitionId = tolower(tostring(properties.roleDefinitionId))
| extend condition = tostring(properties.condition)
| join kind = leftouter (
  AuthorizationResources
  | where type =~ "microsoft.authorization/roledefinitions"
  | extend RoleName = tostring(properties.roleName)
  | extend RoleId = tolower(id)
  | extend RoleType = tostring(properties.type) 
  | where RoleType == "BuiltInRole"
  | extend RoleId_RoleName = pack(RoleId, RoleName)
) on $left.RoleDefinitionId == $right.RoleId
| summarize count_ = count(), AllRD = make_set(RoleId_RoleName) by PrincipalId, Scope, condition
| where count_ > 1
| order by count_ descThe following shows an example of the results. Thecount_column is the number of different built-in role assignments with the same principal and same scope. The count is sorted in descending order.ColumnDescriptionPrincipalIdID of the principal assigned the built-in roles.ScopeScope for built-in role assignments.count_Number of built-in role assignments with the same principal and same scope.AllRDID and name of built-in roles.
Run the following query to get role assignments with the same principal and same scope, but with different built-in roles.
This query checks active role assignments and doesn't consider eligible role assignments inMicrosoft Entra Privileged Identity Management. To list eligible role assignments, you can use the Microsoft Entra admin center, PowerShell, or REST API. For more information, seeGet-AzRoleEligibilityScheduleInstanceorRole Eligibility Schedule Instances - List For Scope.
If you are usingrole assignment conditionsordelegating role assignment management with conditions, you should use the Conditions query. Otherwise, use the Default query.
Default
Condition
AuthorizationResources
| where type =~ "microsoft.authorization/roleassignments"
| where id startswith "/subscriptions"
| extend PrincipalId = tostring(properties.principalId) 
| extend Scope = tolower(properties.scope)
| extend RoleDefinitionId = tolower(tostring(properties.roleDefinitionId))
| join kind = leftouter (
  AuthorizationResources
  | where type =~ "microsoft.authorization/roledefinitions"
  | extend RoleName = tostring(properties.roleName)
  | extend RoleId = tolower(id)
  | extend RoleType = tostring(properties.type) 
  | where RoleType == "BuiltInRole"
  | extend RoleId_RoleName = pack(RoleId, RoleName)
) on $left.RoleDefinitionId == $right.RoleId
| summarize count_ = count(), AllRD = make_set(RoleId_RoleName) by PrincipalId, Scope
| where count_ > 1
| order by count_ desc
AuthorizationResources
| where type =~ "microsoft.authorization/roleassignments"
| where id startswith "/subscriptions"
| extend PrincipalId = tostring(properties.principalId) 
| extend Scope = tolower(properties.scope)
| extend RoleDefinitionId = tolower(tostring(properties.roleDefinitionId))
| join kind = leftouter (
  AuthorizationResources
  | where type =~ "microsoft.authorization/roledefinitions"
  | extend RoleName = tostring(properties.roleName)
  | extend RoleId = tolower(id)
  | extend RoleType = tostring(properties.type) 
  | where RoleType == "BuiltInRole"
  | extend RoleId_RoleName = pack(RoleId, RoleName)
) on $left.RoleDefinitionId == $right.RoleId
| summarize count_ = count(), AllRD = make_set(RoleId_RoleName) by PrincipalId, Scope
| where count_ > 1
| order by count_ desc
AuthorizationResources
| where type =~ "microsoft.authorization/roleassignments"
| where id startswith "/subscriptions"
| extend PrincipalId = tostring(properties.principalId) 
| extend Scope = tolower(properties.scope)
| extend RoleDefinitionId = tolower(tostring(properties.roleDefinitionId))
| extend condition = tostring(properties.condition)
| join kind = leftouter (
  AuthorizationResources
  | where type =~ "microsoft.authorization/roledefinitions"
  | extend RoleName = tostring(properties.roleName)
  | extend RoleId = tolower(id)
  | extend RoleType = tostring(properties.type) 
  | where RoleType == "BuiltInRole"
  | extend RoleId_RoleName = pack(RoleId, RoleName)
) on $left.RoleDefinitionId == $right.RoleId
| summarize count_ = count(), AllRD = make_set(RoleId_RoleName) by PrincipalId, Scope, condition
| where count_ > 1
| order by count_ desc
AuthorizationResources
| where type =~ "microsoft.authorization/roleassignments"
| where id startswith "/subscriptions"
| extend PrincipalId = tostring(properties.principalId) 
| extend Scope = tolower(properties.scope)
| extend RoleDefinitionId = tolower(tostring(properties.roleDefinitionId))
| extend condition = tostring(properties.condition)
| join kind = leftouter (
  AuthorizationResources
  | where type =~ "microsoft.authorization/roledefinitions"
  | extend RoleName = tostring(properties.roleName)
  | extend RoleId = tolower(id)
  | extend RoleType = tostring(properties.type) 
  | where RoleType == "BuiltInRole"
  | extend RoleId_RoleName = pack(RoleId, RoleName)
) on $left.RoleDefinitionId == $right.RoleId
| summarize count_ = count(), AllRD = make_set(RoleId_RoleName) by PrincipalId, Scope, condition
| where count_ > 1
| order by count_ desc
The following shows an example of the results. Thecount_column is the number of different built-in role assignments with the same principal and same scope. The count is sorted in descending order.

In a row, selectSee detailsto open theDetailspane.
In a row, selectSee detailsto open theDetailspane.

UseAllRDto see the built-in roles that can potentially be combined into a custom role.
UseAllRDto see the built-in roles that can potentially be combined into a custom role.
List the actions and data actions for the built-in roles. For more information, seeList Azure role definitionsorAzure built-in roles
List the actions and data actions for the built-in roles. For more information, seeList Azure role definitionsorAzure built-in roles
Create a custom role that includes all the actions and data actions as the built-in roles. To make it easier to create the custom role, you can start by cloning one of the built-in roles. For more information, seeCreate or update Azure custom roles using the Azure portal.
Create a custom role that includes all the actions and data actions as the built-in roles. To make it easier to create the custom role, you can start by cloning one of the built-in roles. For more information, seeCreate or update Azure custom roles using the Azure portal.
Get the principal name from the principal ID.To use Azure portal, seeAdd or update a user's profile information and settings.To use PowerShell, seeGet-MgUser.To use Azure, CLI, seeaz ad user show.
Get the principal name from the principal ID.
To use Azure portal, seeAdd or update a user's profile information and settings.
To use PowerShell, seeGet-MgUser.
To use Azure, CLI, seeaz ad user show.
Open theAccess control (IAM)page at the same scope as the role assignments.
Open theAccess control (IAM)page at the same scope as the role assignments.
Assign the new custom role to the principal. For more information, seeAssign Azure roles using the Azure portal.Now you can remove the built-in role assignments.
Assign the new custom role to the principal. For more information, seeAssign Azure roles using the Azure portal.
Now you can remove the built-in role assignments.
On theAccess control (IAM)page at the same scope, select theRole assignmentstab.
On theAccess control (IAM)page at the same scope, select theRole assignmentstab.
Find the principal and built-in role assignments.
Find the principal and built-in role assignments.
Remove the built-in role assignments from the principal. For more information, seeRemove Azure role assignments.
Remove the built-in role assignments from the principal. For more information, seeRemove Azure role assignments.
Solution 4 - Make role assignments eligible
To reduce the number of role assignments in the subscription and you have Microsoft Entra ID P2, make role assignments eligible inMicrosoft Entra Privileged Identity Managementinstead of permanently assigned.
Solution 5 - Add an additional subscription
Add an additional subscription.
Symptom - No more role assignments can be created at management group scope
You're unable to assign a role at management group scope.
Cause
Azure supports up to500role assignments per management group. This limit is different than the role assignments limit per subscription.
Note
The500role assignments limit per management group is fixed and cannot be increased.
Solution
Try to reduce the number of role assignments in the management group. For possible options, seeSymptom - No more role assignments can be created. For the queries to retrieve resources at the management group level, you'll need to make the following change to the queries:
Replace
| where id startswith "/subscriptions"
| where id startswith "/subscriptions"
With
| where id startswith "/providers/Microsoft.Management/managementGroups"
| where id startswith "/providers/Microsoft.Management/managementGroups"
Symptom - No more role definitions can be created
When you try to create a new custom role, you get the following message:
Role definition limit exceeded. No more role definitions can be created (code: RoleDefinitionLimitExceeded)
Role definition limit exceeded. No more role definitions can be created (code: RoleDefinitionLimitExceeded)
Cause
Azure supports up to5000custom roles in a directory. (For Microsoft Azure operated by 21Vianet, the limit is 2000 custom roles.)
Solution
Follow these steps to find and delete unused Azure custom roles.
Sign in to theAzure portaland open the Azure Resource Graph Explorer.
Sign in to theAzure portaland open the Azure Resource Graph Explorer.
SelectScopeand set the scope toDirectoryfor the query.
SelectScopeand set the scope toDirectoryfor the query.

Run the following query to get all custom roles that don't have any role assignments:This query checks active role assignments and doesn't consider eligible custom role assignments inMicrosoft Entra Privileged Identity Management. To list eligible custom role assignments, you can use the Microsoft Entra admin center, PowerShell, or REST API. For more information, seeGet-AzRoleEligibilityScheduleInstanceorRole Eligibility Schedule Instances - List For Scope.AuthorizationResources
| where type =~ "microsoft.authorization/roledefinitions"
| where tolower(properties.type) == "customrole"
| extend rdId = tolower(id)
| extend Scope = tolower(properties.assignableScopes)
| join kind = leftouter (
AuthorizationResources
  | where type =~ "microsoft.authorization/roleassignments"
  | extend RoleId = tolower(tostring(properties.roleDefinitionId))
  | summarize RoleAssignmentCount = count() by RoleId
) on $left.rdId == $right.RoleId
| where isempty(RoleAssignmentCount)
| project RoleDefinitionId = rdId, RoleDefinitionName = tostring(properties.roleName), ScopeThe following shows an example of the results:ColumnDescriptionRoleDefinitionIdID of the unused custom role.RoleDefinitionNameName of the unused custom role.ScopeAssignable scopesfor the unused custom role.
Run the following query to get all custom roles that don't have any role assignments:
This query checks active role assignments and doesn't consider eligible custom role assignments inMicrosoft Entra Privileged Identity Management. To list eligible custom role assignments, you can use the Microsoft Entra admin center, PowerShell, or REST API. For more information, seeGet-AzRoleEligibilityScheduleInstanceorRole Eligibility Schedule Instances - List For Scope.
AuthorizationResources
| where type =~ "microsoft.authorization/roledefinitions"
| where tolower(properties.type) == "customrole"
| extend rdId = tolower(id)
| extend Scope = tolower(properties.assignableScopes)
| join kind = leftouter (
AuthorizationResources
  | where type =~ "microsoft.authorization/roleassignments"
  | extend RoleId = tolower(tostring(properties.roleDefinitionId))
  | summarize RoleAssignmentCount = count() by RoleId
) on $left.rdId == $right.RoleId
| where isempty(RoleAssignmentCount)
| project RoleDefinitionId = rdId, RoleDefinitionName = tostring(properties.roleName), Scope
AuthorizationResources
| where type =~ "microsoft.authorization/roledefinitions"
| where tolower(properties.type) == "customrole"
| extend rdId = tolower(id)
| extend Scope = tolower(properties.assignableScopes)
| join kind = leftouter (
AuthorizationResources
  | where type =~ "microsoft.authorization/roleassignments"
  | extend RoleId = tolower(tostring(properties.roleDefinitionId))
  | summarize RoleAssignmentCount = count() by RoleId
) on $left.rdId == $right.RoleId
| where isempty(RoleAssignmentCount)
| project RoleDefinitionId = rdId, RoleDefinitionName = tostring(properties.roleName), Scope
The following shows an example of the results:

Open the scope (typically subscription) and then open theAccess control (IAM)page.
Open the scope (typically subscription) and then open theAccess control (IAM)page.
Select theRolestab to see a list of all the built-in and custom roles.
Select theRolestab to see a list of all the built-in and custom roles.
In theTypefilter, selectCustomRoleto just see your custom roles.
In theTypefilter, selectCustomRoleto just see your custom roles.
Select  the ellipsis (...) for the custom role you want to delete and then selectDelete.
Select  the ellipsis (...) for the custom role you want to delete and then selectDelete.

Next steps
Remove Azure role assignments
Create or update Azure custom roles using the Azure portal
Feedback
Was this page helpful?
Additional resources