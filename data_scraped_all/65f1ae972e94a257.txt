Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Run Git commands in a script
Article
2024-03-25
17 contributors
In this article
Azure DevOps Services | Azure DevOps Server 2022 - Azure DevOps Server 2019
For some workflows, you need your build pipeline to run Git commands. For example, after a CI build on a feature branch is done, the team might want to merge the branch to main.
Git is available onMicrosoft-hosted agentsand onon-premises agents.

Enable scripts to run Git commands
Note
Before you begin, be sure your account's default identity is set with the following code.
This must be done as the very first step after checking out your code.
git config --global user.email "you@example.com"
git config --global user.name "Your Name"
git config --global user.email "you@example.com"
git config --global user.name "Your Name"

Grant version control permissions to the build service
Go to the project settings page for your organization atOrganization Settings>General>Projects.
Go to the project settings page for your organization atOrganization Settings>General>Projects.

Select the project you want to edit.
Select the project you want to edit.

WithinProject Settings, selectRepositories. Select the repository you want to run Git commands on.
WithinProject Settings, selectRepositories. Select the repository you want to run Git commands on.
SelectSecurityto edit your repository security.
SelectSecurityto edit your repository security.

Search forProject Collection Build Service. Choose the identity{{your project name}} Build Service ({your organization})(not the groupProject Collection Build Service Accounts ({your organization})). By default, this identity can read from the repo but canât push any changes back to it. Grant permissions needed for the Git commands you want to run. Typically you'll want to grant:Create branch:AllowContribute:AllowRead:AllowCreate tag:Allow
Search forProject Collection Build Service. Choose the identity{{your project name}} Build Service ({your organization})(not the groupProject Collection Build Service Accounts ({your organization})). By default, this identity can read from the repo but canât push any changes back to it. Grant permissions needed for the Git commands you want to run. Typically you'll want to grant:
Create branch:Allow
Contribute:Allow
Read:Allow
Create tag:Allow
Allow scripts to access the system token
YAML
Classic
Add acheckoutsection withpersistCredentialsset totrue.
checkout
persistCredentials
true
steps:
- checkout: self
  persistCredentials: true
steps:
- checkout: self
  persistCredentials: true
Learn more aboutcheckout.
checkout
On theoptions tab, selectAllow scripts to access OAuth token.
Make sure to clean up the local repo
Certain kinds of changes to the local repository aren't automatically cleaned up by the build pipeline. So make sure to:
Delete local branches you create.
Undo git config changes.
If you run into problems using an on-premises agent, make sure the repo is clean:
YAML
Classic
Make surecheckouthascleanset totrue.
checkout
clean
true
steps:
- checkout: self
  clean: true
steps:
- checkout: self
  clean: true
On therepository tabsetCleanto true.
On therepository tab, setCleanto true.
On therepository tab, setCleanto true.
On thevariables tab, create or modify theBuild.Cleanvariable and set it tosource
On thevariables tab, create or modify theBuild.Cleanvariable and set it tosource
Build.Clean
source
Examples
List the files in your repo
On thebuild tab, add this task:
git
ls-files
Merge a feature branch to main
You want a CI build to merge to main if the build succeeds.
On theTriggers tab, selectContinuous integration (CI)and include the branches you want to build.
Createmerge.batat the root of your repo:
merge.bat
@echo off
ECHO SOURCE BRANCH IS %BUILD_SOURCEBRANCH%
IF %BUILD_SOURCEBRANCH% == refs/heads/main (
   ECHO Building main branch so no merge is needed.
   EXIT
)
SET sourceBranch=origin/%BUILD_SOURCEBRANCH:refs/heads/=%
ECHO GIT CHECKOUT MAIN
git checkout main
ECHO GIT STATUS
git status
ECHO GIT MERGE
git merge %sourceBranch% -m "Merge to main"
ECHO GIT STATUS
git status
ECHO GIT PUSH
git push origin
ECHO GIT STATUS
git status
@echo off
ECHO SOURCE BRANCH IS %BUILD_SOURCEBRANCH%
IF %BUILD_SOURCEBRANCH% == refs/heads/main (
   ECHO Building main branch so no merge is needed.
   EXIT
)
SET sourceBranch=origin/%BUILD_SOURCEBRANCH:refs/heads/=%
ECHO GIT CHECKOUT MAIN
git checkout main
ECHO GIT STATUS
git status
ECHO GIT MERGE
git merge %sourceBranch% -m "Merge to main"
ECHO GIT STATUS
git status
ECHO GIT PUSH
git push origin
ECHO GIT STATUS
git status
On thebuild tabadd this as the last task:
merge.bat
FAQ
Can I run Git commands if my remote repo is in GitHub or another Git service such as Bitbucket Cloud?
Yes
Which tasks can I use to run Git commands?
Batch Script
Command Line
PowerShell
Shell Script
How do I avoid triggering a CI build when the script pushes?
Add[skip ci]to your commit message or description. Here are examples:
[skip ci]
git commit -m "This is a commit message [skip ci]"
git commit -m "This is a commit message [skip ci]"
git merge origin/features/hello-world -m "Merge to main [skip ci]"
git merge origin/features/hello-world -m "Merge to main [skip ci]"
You can also use any of these variations for commits to Azure Repos Git, Bitbucket Cloud, GitHub, and GitHub Enterprise Server.
[skip ci]or[ci skip]
[skip ci]
[ci skip]
skip-checks: trueorskip-checks:true
skip-checks: true
skip-checks:true
[skip azurepipelines]or[azurepipelines skip]
[skip azurepipelines]
[azurepipelines skip]
[skip azpipelines]or[azpipelines skip]
[skip azpipelines]
[azpipelines skip]
[skip azp]or[azp skip]
[skip azp]
[azp skip]
***NO_CI***
***NO_CI***
Do I need an agent?
You need at least oneagentto run your build or release.
I'm having problems. How can I troubleshoot them?
SeeTroubleshoot Build and Release.
I can't select a default agent pool and I can't queue my build or release. How do I fix this?
SeeAgent pools.
My NuGet push task is failing with the following error: "Error: unable to get local issuer certificate". How can I fix this?
This can be fixed by adding a trusted root certificate. You can either add theNODE_EXTRA_CA_CERTS=fileenvironment variable to your build agent, or you can add theNODE.EXTRA.CA.CERTS=filetask variable in your pipeline. SeeNode.js documentationfor more details about this variable. SeeSet variables in a pipelinefor instructions on setting a variable in your pipeline.
NODE_EXTRA_CA_CERTS=file
NODE.EXTRA.CA.CERTS=file
I use TFS on-premises and I don't see some of these features. Why not?
Some of these features are available only onAzure Pipelinesand not yet available on-premises. Some features are available on-premises if you haveupgraded to the latest version of TFS.
Feedback
Was this page helpful?
Additional resources