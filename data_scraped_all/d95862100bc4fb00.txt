Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
System message design
Article
2025-03-26
3 contributors
In this article
This guide will walk you through some techniques in system message design.
What is a system message?
A system message is a feature-specific set of instructions or contextual frameworks given to a generative AI model (e.g. GPT-4o, GPT-3.5 Turbo, etc.) to direct and improve the quality and safety of a modelâs output. This is particularly helpful in situations that need certain degrees of formality, technical language, or industry-specific terms.
There is no prescribed length. A system message can be one short sentence:
You are a helpful AI assistant.
You are a helpful AI assistant.
A system message can also bemanylines long, containing detailed rules, detailed context, formatting and output guidelines, and responsible AI (RAI) mitigations.
System message examples
The system message is included at the beginning of the prompt and is used to prime the model with context, instructions, or other information relevant to your use case. You can use the system message to describe the assistantâs personality, define what the model should and shouldnât answer, and define the format of model responses.
The example below, shows a sample system message and the resulting model response:
Some other examples of system messages are:
âAssistant is a large language model trained by OpenAI.â
âAssistant is an intelligent chatbot designed to help users answer technical questions about Azure OpenAI Service. Only answer questions using the context below and if you're not sure of an answer, you can say "I don't know".
âAssistant is an intelligent chatbot designed to help users answer their tax related questions.â
âYou're an assistant designed to extract entities from text. Users will paste in a string of text and you'll respond with entities you've extracted from the text as a JSON object. Here's an example of your output format:
{  
   "name": "",
   "company": "",
   "phone_number": ""
}
{  
   "name": "",
   "company": "",
   "phone_number": ""
}
An important detail to understand is that even if you instruct a model in the system message to answerI don't knowwhen unsure of an answer this doesn't guarantee that the request will be honored. A well designed system message can increase the likelihood of a certain outcome, but it's still possible that an incorrect response could be generated that contradicts the intent of the instruction in the system message.
Feedback
Was this page helpful?
Additional resources