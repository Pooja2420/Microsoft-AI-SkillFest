Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Publish a Git repo to a wiki
Article
2025-01-28
13 contributors
In this article
Azure DevOps Services | Azure DevOps Server 2022 - Azure DevOps Server 2019
You can publish content that you already maintain in a Git repo to a wiki. For example, this content could be software development kit (SDK) support, product documentation, or a README file. You can also publish multiple wikis within a single team project.
When you publish your Markdown files to a wiki, you gain the following benefits:
Organize the content into a hierarchical page structure
Browse and filter the table of contents
Publish new versions of the content
Manage content in the same way you manage your code base
Search the wiki easily using the wiki search feature
For more information, seeProvisioned vs. published code as wiki.
Tip
You can add and edit content that you published to a wiki using the steps in this article. You can also work offline and update wiki content in the same way that you collaborate on code through a Git repo. For more information, seeUpdate wiki pages offline.

Prerequisites
Open wiki
Sign in to your project (https://dev.azure.com/{Your_Organization}/{Your_Project}) and selectOverview>Wiki.
Sign in to your project (https://dev.azure.com/{Your_Organization}/{Your_Project}) and selectOverview>Wiki.
https://dev.azure.com/{Your_Organization}/{Your_Project}

If you need to switch projects, selectAzure DevOpstobrowse all projects.
Publish a Git repository to a wiki
Browser
Azure DevOps CLI
Do the following steps when you maintain Markdown files in an existing Git repo and you want to publish them to a wiki.
SelectPublish code as wiki.NoteThePublish code as wikioption doesn't appear if your project doesn't have a Git repo defined.Create a new Git repo, and then return and refresh this page.
SelectPublish code as wiki.

Note
ThePublish code as wikioption doesn't appear if your project doesn't have a Git repo defined.Create a new Git repo, and then return and refresh this page.
If you already provisioned a team project wiki, selectPublish code wiki.
If you already provisioned a team project wiki, selectPublish code wiki.

Choose the repo, branch, and folder that contain the Markdown files and enter a name for the wiki repo. The Git repo must be within the team project.Specify the root of the repo when you want to publish all Markdown files in the repo to your wiki.
Choose the repo, branch, and folder that contain the Markdown files and enter a name for the wiki repo. The Git repo must be within the team project.

Specify the root of the repo when you want to publish all Markdown files in the repo to your wiki.
SelectPublish. The wiki repo populates with the Markdown files and folders included within the repo you selected.For example, the following image shows the published repo for the files that are contained in the azure-docs-sdk-node repo that you selected in Step 2.The wiki table of contents (TOC) contains the following files:Each Markdown file (file type=.md) defined in the repo/branch/folder is listed in alphabetical order. The TOC title is derived from the Markdown file name.A parent page for each subfolder defined within the published folder, even if it doesn't contain any Markdown files.The following image shows the contents of the azure-docs-sdk-node repo.
SelectPublish. The wiki repo populates with the Markdown files and folders included within the repo you selected.
For example, the following image shows the published repo for the files that are contained in the azure-docs-sdk-node repo that you selected in Step 2.

The wiki table of contents (TOC) contains the following files:
Each Markdown file (file type=.md) defined in the repo/branch/folder is listed in alphabetical order. The TOC title is derived from the Markdown file name.
Each Markdown file (file type=.md) defined in the repo/branch/folder is listed in alphabetical order. The TOC title is derived from the Markdown file name.
.md
A parent page for each subfolder defined within the published folder, even if it doesn't contain any Markdown files.The following image shows the contents of the azure-docs-sdk-node repo.
A parent page for each subfolder defined within the published folder, even if it doesn't contain any Markdown files.
The following image shows the contents of the azure-docs-sdk-node repo.

The head of the Git repo branch is mapped to the wiki. Any changes made within the branch and selected folders are automatically reflected in the wiki. There are no other workflows involved.
Note
You can publish up to 10 branches per published code wiki.
For the provisioned wiki with the extra Markdown files, you can add or edit pages in the same way that you maintain code in your Git repo.
You can publish a Git repo to a wiki with theaz devops wiki createcommand. To get started, seeGet started with Azure DevOps CLI. Run this command when you maintain Markdown files in an existing Git repo and you want to publish them to a wiki.
Note
You can't publish code as wiki if your project doesn't have a Git repo already defined. If necessary,create a new Git repo, and then return to this page.
az devops wiki create [--mapped-path]
                      [--name]
                      [--org]
                      [--project]
                      [--repository]
                      [--type {codewiki, projectwiki}]
                      [--version]
az devops wiki create [--mapped-path]
                      [--name]
                      [--org]
                      [--project]
                      [--repository]
                      [--type {codewiki, projectwiki}]
                      [--version]
mapped-path: Required for thecodewikitype. Mapped path of the new wiki. For example, you can specify '/' to publish from the root of the repo.
mapped-path
codewiki
name: Name of the new wiki.
name
org: Azure DevOps organization URL. You can configure the default organization using theaz devops configure -d organization=ORG_URLcommand. Required if not configured as default or picked up using thegit configcommand. For example,--org https://dev.azure.com/MyOrganizationName/.
org
az devops configure -d organization=ORG_URL
git config
--org https://dev.azure.com/MyOrganizationName/
project: Name or ID of the project. You can configure the default project using theaz devops configure -d project=NAME_OR_IDcommand. Required if not configured as default or picked up using thegit configcommand.
project
az devops configure -d project=NAME_OR_ID
git config
repository: Required for thecodewikitype. Name or ID of the repo from which to publish the wiki.
repository
codewiki
type: Type of wiki to create. The accepted values areprojectwiki(default) andcodewiki.
type
projectwiki
codewiki
version: Required for thecodewikitype. Repo branch name from which to publish the code wiki.
version
codewiki
The following command creates acodewikinamed "My New Wiki" published from theMyReporepo. The wiki is published in thewikisfolder in themainbranch and the result is shown in table format.
codewiki
MyRepo
wikis
main
az devops wiki create --name "My New Wiki" --type codewiki --repository MyRepo --mapped-path /wikis --version main --output table

ID                                    Name         Type
------------------------------------  -----------  --------
77abd847-31ec-45e9-8622-a190df8e5917  My New Wiki  codewiki
az devops wiki create --name "My New Wiki" --type codewiki --repository MyRepo --mapped-path /wikis --version main --output table

ID                                    Name         Type
------------------------------------  -----------  --------
77abd847-31ec-45e9-8622-a190df8e5917  My New Wiki  codewiki
Azure DevOps CLI commands aren't supported for Azure DevOps Server.
Edit, rename, or delete pages
Do the following steps to edit, rename, or delete a wiki page.
In your project, openRepos>FilesorCode > Files.
In your project, openRepos>FilesorCode > Files.
Choose the page you want, selectActions, and then choose the operation.
Choose the page you want, selectActions, and then choose the operation.

Note
Manage your wiki repo in the same way you manage any other Git repo by defining branch policies on the branch that you selected to publish to a wiki. But, without any policies defined, you can make changes and push them directly to the branch from your web portal or from a client.
Edit a page
Use the links available in edit mode to preview your changes or highlight changes made from the previous version. To discard your changes, selectCancel. For more information about supported Markdown features, seeSyntax guidance for Markdown usage.
When you're done, add a comment about your updates, and then selectCommit.The system automatically presents you with a link to create a pull request. You can ignore this message when you're directly editing the wiki branch.
When you're done, add a comment about your updates, and then selectCommit.

The system automatically presents you with a link to create a pull request. You can ignore this message when you're directly editing the wiki branch.

Tip
When you change the name or case of a file, update the.orderfile to reflect the change. For more information, seeChange the page sequence, add or update an .order file.
.order
Rename a page
All pages that you want to appear in the TOC must be the file type.md.
.md
SelectRenameto rename the file accordingly.
For example, in the following image, we renamenew-home-page.mdtoNew-Home-Page.md. This page appears in the TOC with the label, "New Home Page."

Page titles are case-sensitive and must be unique within the folder, and 235 characters or less. For more information about other title restrictions, seePage title naming restrictions.
Delete a page
You can delete any Markdown files that you don't want to appear in the wiki from the published folder. If you included the file in an.orderfile, then delete its entry from the.orderfile. For more information, seeChange the page sequence, add, or update an .order file.
.order
.order

Add a page or pages
You can add the following pages to your published wiki:
Add a file to a root folder or subfolder from the web portal
Upload files to a root folder or subfolder
Add or update an.orderfile to specify the page sequence in the wiki TOC
.order
Each update requires you to commit your changes to the repo. You can then refresh your wiki for your published repo to review the changes.
Add a page from the web portal
FromRepos>FilesorCode>Filesfor the published repo, selectActions, and then chooseFile.
FromRepos>FilesorCode>Filesfor the published repo, selectActions, and then chooseFile.

Enter a name for the page, make sure to specify the.mdfile type. The file name should correspond to the page title that you want to appear in the TOC, with dashes in place of spaces. Specify a unique title of 235 characters or less. Page titles are case-sensitive. For more information about other title restrictions, seePage title naming restrictions.For example, to add a page that appears in the TOC asPage 4, add a file namedPage-4.md.
Enter a name for the page, make sure to specify the.mdfile type. The file name should correspond to the page title that you want to appear in the TOC, with dashes in place of spaces. Specify a unique title of 235 characters or less. Page titles are case-sensitive. For more information about other title restrictions, seePage title naming restrictions.
.md
For example, to add a page that appears in the TOC asPage 4, add a file namedPage-4.md.
Page-4.md

Enter the contents of the page. For more information, seeSyntax guidance for Markdown files, widgets, wikis, and pull request comments.
Enter the contents of the page. For more information, seeSyntax guidance for Markdown files, widgets, wikis, and pull request comments.
When you're done, selectCommit.
When you're done, selectCommit.
Upload files to a folder
If you have existing content already defined, you can upload it to a folder. SelectActions, and then chooseUpload file(s).
If you have existing content already defined, you can upload it to a folder. SelectActions, and then chooseUpload file(s).

Complete theCommitdialog form, selecting the folder and files you want to upload.
Complete theCommitdialog form, selecting the folder and files you want to upload.

Add a parent page and subpages
To add a parent page, first add a Markdown file at the root folder level and then add a folder with the same label.
To add a folder, selectFolder, and then complete theNew Folderdialog form. Specify at least one file to correspond to a subpage in the folder.
To add a folder, selectFolder, and then complete theNew Folderdialog form. Specify at least one file to correspond to a subpage in the folder.

Add all the files you want as subpages to the folder.
Add all the files you want as subpages to the folder.
Add or update a .order file
The last step when you're adding files or folders to the wiki repo is to add or update the.orderfile of the updated folders. This action reflects the sequence of pages you want to show in the TOC. For details, seeChange the page sequence, add, or update a .order file. Any files that aren't listed in the.orderfile get added to the end of the alphabetical list, as their order is set toint.MaxValue.
.order
.order
int.MaxValue

Change the page sequence, add, or update a .order file
Each.orderfile defines the sequence of pages contained within a folder. The root.orderfile specifies the sequence of pages defined at the root level. For each folder, an.orderfile defines the sequence of subpages added to a parent page.
.order
.order
.order
You can add an.orderfile in the same way that you add any file from theCode > Filespage. Name the file.order.
You can add an.orderfile in the same way that you add any file from theCode > Filespage. Name the file.order.
.order
.order
Edit the contents of the file to reflect the sequence of Markdown files contained within the folder. Each entry should mirror the file name but without the.mdfile type. Titles are case-sensitive, so the entry should match the case used in the file name.
Edit the contents of the file to reflect the sequence of Markdown files contained within the folder. Each entry should mirror the file name but without the.mdfile type. Titles are case-sensitive, so the entry should match the case used in the file name.
.md
For example:
README
page-2
page-3
Page-4
Misc content
README
page-2
page-3
Page-4
Misc content
Set a home page
By default, the first file that appears at the root within alphabetical order is set as the wiki home page. When you selectWikiin the web portal, the home page opens.
Change the home page by setting the page sequence within the root.orderfile.
.order
For example, enter the page name into the first line.
New home page name here
page-2
page-3
Page-4
README
Misc content
New home page name here
page-2
page-3
Page-4
README
Misc content
Promote folder to page
For a folder to also be a page, you need a Markdown file with the same name as the folder, set as a sibling to the folder. So, both the folder and the.mdfile of the same name should lie next to each other.
.md
As displayed in the following example, Test has both a folder and an.mdfile, which creates a hierarchy within the wiki tree.
.md

Select a wiki version
To select a wiki version, choose the version from the branch options from the wiki page.


Unpublish a code wiki
If you no longer want a repository to be published as a wiki, you can choose to unpublish it.
Warning
Unpublishing a wiki unpublishes the entire code wiki, which includes all versions of the repository that you published previously.
Select the wiki you want to unpublish, open the context menu, and selectUnpublish wiki.
Select the wiki you want to unpublish, open the context menu, and selectUnpublish wiki.

Confirm that you want to unpublish the wiki by choosingUnpublish.
Confirm that you want to unpublish the wiki by choosingUnpublish.

Related articles
Follow a wiki page and get notifications
Provisioned vs. published wiki
Update wiki offline
Wiki Markdown guidance
Feedback
Was this page helpful?
Additional resources