Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Microsoft.ApiManagement service/backends
Article
2024-12-09
2 contributors
In this article
Latest
2024-06-01-preview
2024-05-01
2023-09-01-preview
2023-05-01-preview
2023-03-01-preview
2022-09-01-preview
2022-08-01
2022-04-01-preview
2021-12-01-preview
2021-08-01
2021-04-01-preview
2021-01-01-preview
2020-12-01
2020-06-01-preview
2019-12-01
2019-12-01-preview
2019-01-01
2018-06-01-preview
2018-01-01
2017-03-01
2016-10-10
2016-07-07
Bicep resource definition
The service/backends resource type can be deployed with operations that target:
Resource groups- Seeresource group deployment commands
For a list of changed properties in each API version, seechange log.
Resource format
To create a Microsoft.ApiManagement/service/backends resource, add the following Bicep to your template.
resource symbolicname 'Microsoft.ApiManagement/service/backends@2024-06-01-preview' = {
  parent: resourceSymbolicName
  name: 'string'
  properties: {
    circuitBreaker: {
      rules: [
        {
          acceptRetryAfter: bool
          failureCondition: {
            count: int
            errorReasons: [
              'string'
            ]
            interval: 'string'
            percentage: int
            statusCodeRanges: [
              {
                max: int
                min: int
              }
            ]
          }
          name: 'string'
          tripDuration: 'string'
        }
      ]
    }
    credentials: {
      authorization: {
        parameter: 'string'
        scheme: 'string'
      }
      certificate: [
        'string'
      ]
      certificateIds: [
        'string'
      ]
      header: {
        {customized property}: [
          'string'
        ]
      }
      query: {
        {customized property}: [
          'string'
        ]
      }
    }
    description: 'string'
    pool: {
      services: [
        {
          id: 'string'
          priority: int
          weight: int
        }
      ]
    }
    properties: {
      serviceFabricCluster: {
        clientCertificateId: 'string'
        clientCertificatethumbprint: 'string'
        managementEndpoints: [
          'string'
        ]
        maxPartitionResolutionRetries: int
        serverCertificateThumbprints: [
          'string'
        ]
        serverX509Names: [
          {
            issuerCertificateThumbprint: 'string'
            name: 'string'
          }
        ]
      }
    }
    protocol: 'string'
    proxy: {
      password: 'string'
      url: 'string'
      username: 'string'
    }
    resourceId: 'string'
    title: 'string'
    tls: {
      validateCertificateChain: bool
      validateCertificateName: bool
    }
    type: 'string'
    url: 'string'
  }
}
resource symbolicname 'Microsoft.ApiManagement/service/backends@2024-06-01-preview' = {
  parent: resourceSymbolicName
  name: 'string'
  properties: {
    circuitBreaker: {
      rules: [
        {
          acceptRetryAfter: bool
          failureCondition: {
            count: int
            errorReasons: [
              'string'
            ]
            interval: 'string'
            percentage: int
            statusCodeRanges: [
              {
                max: int
                min: int
              }
            ]
          }
          name: 'string'
          tripDuration: 'string'
        }
      ]
    }
    credentials: {
      authorization: {
        parameter: 'string'
        scheme: 'string'
      }
      certificate: [
        'string'
      ]
      certificateIds: [
        'string'
      ]
      header: {
        {customized property}: [
          'string'
        ]
      }
      query: {
        {customized property}: [
          'string'
        ]
      }
    }
    description: 'string'
    pool: {
      services: [
        {
          id: 'string'
          priority: int
          weight: int
        }
      ]
    }
    properties: {
      serviceFabricCluster: {
        clientCertificateId: 'string'
        clientCertificatethumbprint: 'string'
        managementEndpoints: [
          'string'
        ]
        maxPartitionResolutionRetries: int
        serverCertificateThumbprints: [
          'string'
        ]
        serverX509Names: [
          {
            issuerCertificateThumbprint: 'string'
            name: 'string'
          }
        ]
      }
    }
    protocol: 'string'
    proxy: {
      password: 'string'
      url: 'string'
      username: 'string'
    }
    resourceId: 'string'
    title: 'string'
    tls: {
      validateCertificateChain: bool
      validateCertificateName: bool
    }
    type: 'string'
    url: 'string'
  }
}
Property Values
BackendAuthorizationHeaderCredentials
BackendBaseParametersPool
BackendCircuitBreaker
BackendContractProperties
BackendCredentialsContract
BackendCredentialsContractHeader
BackendCredentialsContractQuery
BackendPoolItem
BackendProperties
BackendProxyContract
BackendServiceFabricClusterProperties
BackendTlsProperties
CircuitBreakerFailureCondition
CircuitBreakerRule
FailureStatusCodeRange
Microsoft.ApiManagement/service/backends
X509CertificateName
ARM template resource definition
The service/backends resource type can be deployed with operations that target:
Resource groups- Seeresource group deployment commands
For a list of changed properties in each API version, seechange log.
Resource format
To create a Microsoft.ApiManagement/service/backends resource, add the following JSON to your template.
{
  "type": "Microsoft.ApiManagement/service/backends",
  "apiVersion": "2024-06-01-preview",
  "name": "string",
  "properties": {
    "circuitBreaker": {
      "rules": [
        {
          "acceptRetryAfter": "bool",
          "failureCondition": {
            "count": "int",
            "errorReasons": [ "string" ],
            "interval": "string",
            "percentage": "int",
            "statusCodeRanges": [
              {
                "max": "int",
                "min": "int"
              }
            ]
          },
          "name": "string",
          "tripDuration": "string"
        }
      ]
    },
    "credentials": {
      "authorization": {
        "parameter": "string",
        "scheme": "string"
      },
      "certificate": [ "string" ],
      "certificateIds": [ "string" ],
      "header": {
        "{customized property}": [ "string" ]
      },
      "query": {
        "{customized property}": [ "string" ]
      }
    },
    "description": "string",
    "pool": {
      "services": [
        {
          "id": "string",
          "priority": "int",
          "weight": "int"
        }
      ]
    },
    "properties": {
      "serviceFabricCluster": {
        "clientCertificateId": "string",
        "clientCertificatethumbprint": "string",
        "managementEndpoints": [ "string" ],
        "maxPartitionResolutionRetries": "int",
        "serverCertificateThumbprints": [ "string" ],
        "serverX509Names": [
          {
            "issuerCertificateThumbprint": "string",
            "name": "string"
          }
        ]
      }
    },
    "protocol": "string",
    "proxy": {
      "password": "string",
      "url": "string",
      "username": "string"
    },
    "resourceId": "string",
    "title": "string",
    "tls": {
      "validateCertificateChain": "bool",
      "validateCertificateName": "bool"
    },
    "type": "string",
    "url": "string"
  }
}
{
  "type": "Microsoft.ApiManagement/service/backends",
  "apiVersion": "2024-06-01-preview",
  "name": "string",
  "properties": {
    "circuitBreaker": {
      "rules": [
        {
          "acceptRetryAfter": "bool",
          "failureCondition": {
            "count": "int",
            "errorReasons": [ "string" ],
            "interval": "string",
            "percentage": "int",
            "statusCodeRanges": [
              {
                "max": "int",
                "min": "int"
              }
            ]
          },
          "name": "string",
          "tripDuration": "string"
        }
      ]
    },
    "credentials": {
      "authorization": {
        "parameter": "string",
        "scheme": "string"
      },
      "certificate": [ "string" ],
      "certificateIds": [ "string" ],
      "header": {
        "{customized property}": [ "string" ]
      },
      "query": {
        "{customized property}": [ "string" ]
      }
    },
    "description": "string",
    "pool": {
      "services": [
        {
          "id": "string",
          "priority": "int",
          "weight": "int"
        }
      ]
    },
    "properties": {
      "serviceFabricCluster": {
        "clientCertificateId": "string",
        "clientCertificatethumbprint": "string",
        "managementEndpoints": [ "string" ],
        "maxPartitionResolutionRetries": "int",
        "serverCertificateThumbprints": [ "string" ],
        "serverX509Names": [
          {
            "issuerCertificateThumbprint": "string",
            "name": "string"
          }
        ]
      }
    },
    "protocol": "string",
    "proxy": {
      "password": "string",
      "url": "string",
      "username": "string"
    },
    "resourceId": "string",
    "title": "string",
    "tls": {
      "validateCertificateChain": "bool",
      "validateCertificateName": "bool"
    },
    "type": "string",
    "url": "string"
  }
}
Property Values
BackendAuthorizationHeaderCredentials
BackendBaseParametersPool
BackendCircuitBreaker
BackendContractProperties
BackendCredentialsContract
BackendCredentialsContractHeader
BackendCredentialsContractQuery
BackendPoolItem
BackendProperties
BackendProxyContract
BackendServiceFabricClusterProperties
BackendTlsProperties
CircuitBreakerFailureCondition
CircuitBreakerRule
FailureStatusCodeRange
Microsoft.ApiManagement/service/backends
X509CertificateName
Usage Examples
Terraform (AzAPI provider) resource definition
The service/backends resource type can be deployed with operations that target:
Resource groups
For a list of changed properties in each API version, seechange log.
Resource format
To create a Microsoft.ApiManagement/service/backends resource, add the following Terraform to your template.
resource "azapi_resource" "symbolicname" {
  type = "Microsoft.ApiManagement/service/backends@2024-06-01-preview"
  name = "string"
  body = {
    properties = {
      circuitBreaker = {
        rules = [
          {
            acceptRetryAfter = bool
            failureCondition = {
              count = int
              errorReasons = [
                "string"
              ]
              interval = "string"
              percentage = int
              statusCodeRanges = [
                {
                  max = int
                  min = int
                }
              ]
            }
            name = "string"
            tripDuration = "string"
          }
        ]
      }
      credentials = {
        authorization = {
          parameter = "string"
          scheme = "string"
        }
        certificate = [
          "string"
        ]
        certificateIds = [
          "string"
        ]
        header = {
          {customized property} = [
            "string"
          ]
        }
        query = {
          {customized property} = [
            "string"
          ]
        }
      }
      description = "string"
      pool = {
        services = [
          {
            id = "string"
            priority = int
            weight = int
          }
        ]
      }
      properties = {
        serviceFabricCluster = {
          clientCertificateId = "string"
          clientCertificatethumbprint = "string"
          managementEndpoints = [
            "string"
          ]
          maxPartitionResolutionRetries = int
          serverCertificateThumbprints = [
            "string"
          ]
          serverX509Names = [
            {
              issuerCertificateThumbprint = "string"
              name = "string"
            }
          ]
        }
      }
      protocol = "string"
      proxy = {
        password = "string"
        url = "string"
        username = "string"
      }
      resourceId = "string"
      title = "string"
      tls = {
        validateCertificateChain = bool
        validateCertificateName = bool
      }
      type = "string"
      url = "string"
    }
  }
}
resource "azapi_resource" "symbolicname" {
  type = "Microsoft.ApiManagement/service/backends@2024-06-01-preview"
  name = "string"
  body = {
    properties = {
      circuitBreaker = {
        rules = [
          {
            acceptRetryAfter = bool
            failureCondition = {
              count = int
              errorReasons = [
                "string"
              ]
              interval = "string"
              percentage = int
              statusCodeRanges = [
                {
                  max = int
                  min = int
                }
              ]
            }
            name = "string"
            tripDuration = "string"
          }
        ]
      }
      credentials = {
        authorization = {
          parameter = "string"
          scheme = "string"
        }
        certificate = [
          "string"
        ]
        certificateIds = [
          "string"
        ]
        header = {
          {customized property} = [
            "string"
          ]
        }
        query = {
          {customized property} = [
            "string"
          ]
        }
      }
      description = "string"
      pool = {
        services = [
          {
            id = "string"
            priority = int
            weight = int
          }
        ]
      }
      properties = {
        serviceFabricCluster = {
          clientCertificateId = "string"
          clientCertificatethumbprint = "string"
          managementEndpoints = [
            "string"
          ]
          maxPartitionResolutionRetries = int
          serverCertificateThumbprints = [
            "string"
          ]
          serverX509Names = [
            {
              issuerCertificateThumbprint = "string"
              name = "string"
            }
          ]
        }
      }
      protocol = "string"
      proxy = {
        password = "string"
        url = "string"
        username = "string"
      }
      resourceId = "string"
      title = "string"
      tls = {
        validateCertificateChain = bool
        validateCertificateName = bool
      }
      type = "string"
      url = "string"
    }
  }
}
Property Values
BackendAuthorizationHeaderCredentials
BackendBaseParametersPool
BackendCircuitBreaker
BackendContractProperties
BackendCredentialsContract
BackendCredentialsContractHeader
BackendCredentialsContractQuery
BackendPoolItem
BackendProperties
BackendProxyContract
BackendServiceFabricClusterProperties
BackendTlsProperties
CircuitBreakerFailureCondition
CircuitBreakerRule
FailureStatusCodeRange
Microsoft.ApiManagement/service/backends
X509CertificateName
Feedback
Was this page helpful?
Additional resources