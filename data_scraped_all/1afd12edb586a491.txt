Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Control access to IoT Hub by using Microsoft Entra ID
Article
2025-03-28
5 contributors
In this article
You can use Microsoft Entra ID to authenticate requests to Azure IoT Hub service APIs, likecreate device identityandinvoke direct method. You can also use Azure role-based access control (Azure RBAC) to authorize those same service APIs. By using these technologies together, you can grant permissions to access IoT Hub service APIs to a Microsoft Entra security principal. This security principal could be a user, group, or application service principal.
Authenticating access by using Microsoft Entra ID and controlling permissions by using Azure RBAC provides improved security and ease of use over security tokens. To minimize potential security issues inherent in security tokens, we recommend that youenforce Microsoft Entra authenticationwhenever possible.
Note
Authentication with Microsoft Entra ID isn't supported for the IoT Hubdevice APIs(like device-to-cloud messages and update reported properties). Usesymmetric keysorX.509to authenticate devices to IoT Hub.
Authentication and authorization
Authenticationis the process of proving that you're who you say you are. Authentication verifies the identity of a user or device to IoT Hub. Authentication is sometimes shortened toAuthN.
Authorizationis the process of confirming permissions for an authenticated user or device on IoT Hub. Authorization specifies what resources and commands you're allowed to access, and what you can do with those resources and commands. Authorization is sometimes shortened toAuthZ.
When a Microsoft Entra security principal requests access to an IoT Hub service API, the principal's identity is firstauthenticated. For authentication, the request needs to contain an OAuth 2.0 access token at runtime. The resource name for requesting the token ishttps://iothubs.azure.net. If the application runs in an Azure resource like an Azure VM, Azure Functions app, or Azure App Service app, it can be represented as amanaged identity.
https://iothubs.azure.net
After the Microsoft Entra principal is authenticated, the next step isauthorization. In this step, IoT Hub uses the Microsoft Entra role assignment service to determine what permissions the principal has. If the principal's permissions match the requested resource or API, IoT Hub authorizes the request. So this step requires one or more Azure roles to be assigned to the security principal. IoT Hub provides some built-in roles that have common groups of permissions.
Manage access to IoT Hub by using Azure RBAC role assignment
With Microsoft Entra ID and RBAC, IoT Hub requires that the principal requesting the API have the appropriate level of permission for authorization. To give the principal the permission, give it a role assignment.
If the principal is a user, group, or application service principal, follow the guidance inAssign Azure roles using the Azure portal.
If the principal is a managed identity, follow the guidance inAssign a managed identity access to an Azure resource or another resource.
To ensure least privilege, always assign the appropriate role at the lowest possibleresource scope, which is probably the IoT Hub scope.
IoT Hub provides the following Azure built-in roles for authorizing access to IoT Hub service APIs by using Microsoft Entra ID and RBAC:
You can also define custom roles to use with IoT Hub by combining thepermissionsthat you need. For more information, seeAzure custom roles.
Resource scope
Before you assign an Azure RBAC role to a security principal, determine the scope of access that the security principal should have. It's always best to grant only the narrowest possible scope. Azure RBAC roles defined at a broader scope are inherited by the resources beneath them.
This list describes the levels at which you can scope access to IoT Hub, starting with the narrowest scope:
The IoT hub.At this scope, a role assignment applies to the IoT hub. There's no scope smaller than an individual IoT hub. Role assignment at smaller scopes, like individual device identity, isn't supported.
The resource group.At this scope, a role assignment applies to all IoT hubs in the resource group.
The subscription.At this scope, a role assignment applies to all IoT hubs in all resource groups in the subscription.
A management group.At this scope, a role assignment applies to all IoT hubs in all resource groups in all subscriptions in the management group.
Permissions for IoT Hub service APIs
The following table describes the permissions available for IoT Hub service API operations. To enable a client to call a particular operation, ensure that the client's assigned RBAC role offers sufficient permissions for the operation.
Microsoft.Devices/IotHubs/devices/read
Microsoft.Devices/IotHubs/devices/write
Microsoft.Devices/IotHubs/devices/delete
Microsoft.Devices/IotHubs/twins/read
Microsoft.Devices/IotHubs/twins/write
Microsoft.Devices/IotHubs/jobs/read
Microsoft.Devices/IotHubs/jobs/write
Microsoft.Devices/IotHubs/jobs/delete
Microsoft.Devices/IotHubs/cloudToDeviceMessages/send/action
Microsoft.Devices/IotHubs/cloudToDeviceMessages/feedback/action
Microsoft.Devices/IotHubs/cloudToDeviceMessages/queue/purge/action
Microsoft.Devices/IotHubs/directMethods/invoke/action
Microsoft.Devices/IotHubs/fileUpload/notifications/action
Microsoft.Devices/IotHubs/statistics/read
Microsoft.Devices/IotHubs/configurations/read
Microsoft.Devices/IotHubs/configurations/write
Microsoft.Devices/IotHubs/configurations/delete
Microsoft.Devices/IotHubs/configurations/applyToEdgeDevice/action
Microsoft.Devices/IotHubs/configurations/testQueries/action
Tip
TheUpdate Registryoperation requires bothMicrosoft.Devices/IotHubs/devices/writeandMicrosoft.Devices/IotHubs/devices/delete.
Microsoft.Devices/IotHubs/devices/write
Microsoft.Devices/IotHubs/devices/delete
TheGet Twinsoperation requiresMicrosoft.Devices/IotHubs/twins/read.
Microsoft.Devices/IotHubs/twins/read
Get Digital TwinrequiresMicrosoft.Devices/IotHubs/twins/read.Update Digital TwinrequiresMicrosoft.Devices/IotHubs/twins/write.
Microsoft.Devices/IotHubs/twins/read
Microsoft.Devices/IotHubs/twins/write
BothInvoke Component CommandandInvoke Root Level CommandrequireMicrosoft.Devices/IotHubs/directMethods/invoke/action.
Microsoft.Devices/IotHubs/directMethods/invoke/action
Note
To get data from IoT Hub by using Microsoft Entra ID,set up routing to a custom Event Hubs endpoint. To access thethe built-in Event Hubs compatible endpoint, use the connection string (shared access key) method as before.

Enforce Microsoft Entra authentication
By default, IoT Hub supports service API access through both Microsoft Entra ID andshared access policies and security tokens. To minimize potential security vulnerabilities inherent in security tokens, you can disable access with shared access policies.
Warning
By denying connections using shared access policies, all users and services that connect using this method lose access immediately. Notably, since Device Provisioning Service (DPS) only supports linking IoT hubs using shared access policies, all device provisioning flows fail with "unauthorized" error. Proceed carefully and plan to replace access with Microsoft Entra role based access.
Do not proceed if you use Device Provisioning Service.
Ensure that your service clients and users havesufficient accessto your IoT hub. Follow theprinciple of least privilege.
Ensure that your service clients and users havesufficient accessto your IoT hub. Follow theprinciple of least privilege.
Sign in to theAzure portaland navigate to your IoT hub.
Sign in to theAzure portaland navigate to your IoT hub.
SelectShared access policiesfrom theSecurity settingssection of the navigation menu.
SelectShared access policiesfrom theSecurity settingssection of the navigation menu.
UnderConnect using shared access policies, selectDeny, and review the warning.
UnderConnect using shared access policies, selectDeny, and review the warning.

SelectSave.
SelectSave.
Your IoT Hub service APIs can now be accessed only through Microsoft Entra ID and RBAC.

Microsoft Entra ID access from the Azure portal
You can provide access to IoT Hub from the Azure portal with either shared access policies or Microsoft Entra permissions.
When you try to access IoT Hub from the Azure portal, the Azure portal first checks whether you're assigned an Azure role withMicrosoft.Devices/iotHubs/listkeys/action. If you have, the Azure portal uses the keys from shared access policies to access IoT Hub. If not, the Azure portal tries to access data by using your Microsoft Entra account.
Microsoft.Devices/iotHubs/listkeys/action
To access IoT Hub from the Azure portal by using your Microsoft Entra account, you need permissions to access IoT Hub data resources (like devices and twins). You also need permissions to go to the IoT Hub resource in the Azure portal. The built-in roles provided by IoT Hub grant access to resources like devices and twin but they don't grant access to the IoT Hub resource. So access to the portal also requires the assignment of an Azure Resource Manager role likeReader. The reader role is a good choice because it's the most restricted role that lets you navigate the portal. It doesn't include theMicrosoft.Devices/iotHubs/listkeys/actionpermission (which provides access to all IoT Hub data resources via shared access policies).
Microsoft.Devices/iotHubs/listkeys/action
To ensure an account doesn't have access outside of the assigned permissions, don't include theMicrosoft.Devices/iotHubs/listkeys/actionpermission when you create a custom role. For example, to create a custom role that can read device identities but can't create or delete devices, create a custom role that:
Microsoft.Devices/iotHubs/listkeys/action
Has theMicrosoft.Devices/IotHubs/devices/readdata action.
Microsoft.Devices/IotHubs/devices/read
Doesn't have theMicrosoft.Devices/IotHubs/devices/writedata action.
Microsoft.Devices/IotHubs/devices/write
Doesn't have theMicrosoft.Devices/IotHubs/devices/deletedata action.
Microsoft.Devices/IotHubs/devices/delete
Doesn't have theMicrosoft.Devices/iotHubs/listkeys/actionaction.
Microsoft.Devices/iotHubs/listkeys/action
Then, make sure the account doesn't have any other roles that have theMicrosoft.Devices/iotHubs/listkeys/actionpermission, likeOwnerorContributor. To allow the account to have resource access and navigate the portal, assignReader.
Microsoft.Devices/iotHubs/listkeys/action

Microsoft Entra ID access from Azure CLI
Most commands against IoT Hub support Microsoft Entra authentication. You can control the type of authentication used to run commands by using the--auth-typeparameter, which acceptskeyorloginvalues. Thekeyvalue is the default.
--auth-type
key
login
key
When--auth-typehas thekeyvalue, as before, the CLI automatically discovers a suitable policy when it interacts with IoT Hub.
When--auth-typehas thekeyvalue, as before, the CLI automatically discovers a suitable policy when it interacts with IoT Hub.
--auth-type
key
When--auth-typehas theloginvalue, an access token from the Azure CLI logged in the principal is used for the operation.
When--auth-typehas theloginvalue, an access token from the Azure CLI logged in the principal is used for the operation.
--auth-type
login
For more information, see theAzure IoT extension for Azure CLI release page.
SDK samples
.NET SDK sample
Java SDK sample
Next steps
For more information on the advantages of using Microsoft Entra ID in your application, seeIntegrating with the Microsoft identity platform.
To learn how access tokens, refresh tokens, and ID tokens are used in authorization and authentication, seeTokens and claims overview.
Feedback
Was this page helpful?
Additional resources