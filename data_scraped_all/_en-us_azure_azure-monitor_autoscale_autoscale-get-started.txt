Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Get started with autoscale in Azure
Article
2024-11-01
12 contributors
In this article
Autoscale allows you to automatically scale your applications or resources based on demand. Use Autoscale to provision enough resources to support the demand on your application without over provisioning and incurring unnecessary costs.
This article describes how to configure the autoscale settings for your resources in the Azure portal.
Azure autoscale supports many resource types. For more information about supported resources, seeautoscale supported resources.
Discover the autoscale settings in your subscription
To discover the resources that you can autoscale, follow these steps.
Open theAzure portal.
Open theAzure portal.
Search for and selectAzure Monitorusing the search bar at the top of the page.
Search for and selectAzure Monitorusing the search bar at the top of the page.
SelectAutoscaleto view all the resources for which autoscale is applicable, along with their current autoscale status.
SelectAutoscaleto view all the resources for which autoscale is applicable, along with their current autoscale status.
Use the filter pane at the top to select resources a specific resource group, resource types, or a specific resource.The page shows the instance count and the autoscale status for each resource. Autoscale statuses are:Not configured: Autoscale isn't set up yet for this resource.Enabled: Autoscale is enabled for this resource.Disabled: Autoscale is disabled for this resource.You can also reach the scaling page by selectingScalingfrom theSettingsmenu for each resource.
Use the filter pane at the top to select resources a specific resource group, resource types, or a specific resource.

The page shows the instance count and the autoscale status for each resource. Autoscale statuses are:
Not configured: Autoscale isn't set up yet for this resource.
Enabled: Autoscale is enabled for this resource.
Disabled: Autoscale is disabled for this resource.
You can also reach the scaling page by selectingScalingfrom theSettingsmenu for each resource.

Create your first autoscale setting
Note
In addition to the Autoscale instructions in this article, there's new, automatic scaling in Azure App Service. You'll find more on this capability in theautomatic scalingarticle.
Follow the steps below to create your first autoscale setting.
Open theAutoscalepane in Azure Monitor and select a resource that you want to scale. The following steps use an App Service plan associated with a web app. You cancreate your first ASP.NET web app in Azure in 5 minutes.
Open theAutoscalepane in Azure Monitor and select a resource that you want to scale. The following steps use an App Service plan associated with a web app. You cancreate your first ASP.NET web app in Azure in 5 minutes.
The current instance count is 1. SelectCustom autoscale.
The current instance count is 1. SelectCustom autoscale.
Enter aNameandResource groupor use the default.
Enter aNameandResource groupor use the default.
SelectScale based on a metric.
SelectScale based on a metric.
SelectAdd a rule. to open a context pane on the right side.
SelectAdd a rule. to open a context pane on the right side.

The default rule scales your resource by one instance if thePercentage CPUmetric is greater than 70 percent.Keep the default values and selectAdd.
The default rule scales your resource by one instance if thePercentage CPUmetric is greater than 70 percent.
Percentage CPU
Keep the default values and selectAdd.
You've created your first scale-out rule. Best practice is to have at least one scale-in rule. To add another rule, selectAdd a rule.
You've created your first scale-out rule. Best practice is to have at least one scale-in rule. To add another rule, selectAdd a rule.
SetOperatortoLess than.
SetOperatortoLess than.
SetMetric threshold to trigger scale actionto20.
SetMetric threshold to trigger scale actionto20.
SetOperationtoDecrease count by.
SetOperationtoDecrease count by.
SelectAdd.You have configured a scale setting that scales out and scales in based on CPU usage, but you're still limited to a maximum of one instance. Change the instance limits to allow for more instances.
SelectAdd.

You have configured a scale setting that scales out and scales in based on CPU usage, but you're still limited to a maximum of one instance. Change the instance limits to allow for more instances.
UnderInstance limitssetMaximumto3
UnderInstance limitssetMaximumto3
SelectSave.
SelectSave.

You have successfully created your first scale setting to autoscale your web app based on CPU usage. When CPU usage is greater than 70%, an additional instance is added, up to a maximum of 3 instances. When CPU usage is below 20%, an instance is removed up to a minimum of 1 instance. By default there will be 1 instance.
Scheduled scale conditions
The default scale condition defines the scale rules that are active when no other scale condition is in effect. You can add scale conditions that are active on a given date and time, or that recur on a weekly basis.
Scale based on a repeating schedule
Set your resource to scale to a single instance on a Sunday.
SelectAdd a scale condition.
SelectAdd a scale condition.
Enter a description for the scale condition.
Enter a description for the scale condition.
SelectScale to a specific instance count. You can also scale based on metrics and thresholds that are specific to this scale condition.
SelectScale to a specific instance count. You can also scale based on metrics and thresholds that are specific to this scale condition.
Enter1in theInstance countfield.
Enter1in theInstance countfield.
SelectRepeat specific days.
SelectRepeat specific days.
SelectSunday
SelectSunday
Set theStart timeandEnd timefor when the scale condition should be applied. Outside of this time range, the default scale condition applies.
Set theStart timeandEnd timefor when the scale condition should be applied. Outside of this time range, the default scale condition applies.
SelectSave
SelectSave

You have now defined a scale condition that reduces the number of instances of your resource to 1 every Sunday.
Scale differently on specific dates
Set Autoscale to scale differently for specific dates, when you know that there will be an unusual level of demand for the service.
SelectAdd a scale condition.
SelectAdd a scale condition.
SelectScale based on a metric.
SelectScale based on a metric.
SelectAdd a ruleto define your scale-out and scale-in rules. Set the rules to be same as the default condition.
SelectAdd a ruleto define your scale-out and scale-in rules. Set the rules to be same as the default condition.
Set theMaximuminstance limit to10
Set theMaximuminstance limit to10
Set theDefaultinstance limit to3
Set theDefaultinstance limit to3
SelectSpecify start/end dates
SelectSpecify start/end dates
Enter theStart dateandEnd datefor when the scale condition should be applied.
Enter theStart dateandEnd datefor when the scale condition should be applied.
SelectSave
SelectSave

You have now defined a scale condition for a specific day. When CPU usage is greater than 70%, an additional instance is added, up to a maximum of 10  instances to handle anticipated load. When CPU usage is below 20%, an instance is removed up to a minimum of 1 instance. By default, autoscale scales to 3 instances when this scale condition becomes active.
Additional settings
View the history of your resource's scale events
Whenever your resource has any scaling event, it's logged in the activity log. You can view the history of the scale events in theRun historytab.

View the scale settings for your resource
Autoscale is an Azure Resource Manager resource. Like other resources, you can see the resource definition in JSON format. To view the autoscale settings in JSON, select theJSONtab.

You can make changes in JSON directly, if necessary. These changes will be reflected after you save them.
Predictive autoscale
Predictive autoscale uses machine learning to help manage and scale Azure Virtual Machine Scale Sets with cyclical workload patterns. It forecasts the overall CPU load to your virtual machine scale set, based on your historical CPU usage patterns. It predicts the overall CPU load by observing and learning from historical usage. This process ensures that scale-out occurs in time to meet the demand. For more information, seePredictive autoscale.
Scale-in policy
When scaling a Virtual machine Scale Set, the scale-in policy determines which virtual machines are selected for removal when a scale-in event occurs. The scale-in policy can be set to eitherDefault,NewestVM, orOldestVM. For more information, seeUse custom scale-in policies with Azure Virtual Machine Scale Sets.

Notify
You can configure notifications to be sent when a scale event occurs. Notifications can be sent to an email address or to a webhook. For more information, seeAutoscale notifications.
Cool-down period effects
Autoscale uses a cool-down period. This period is the amount of time to wait after a scale operation before scaling again. The cool-down period allows the metrics to stabilize and avoids scaling more than once for the same condition. Cool-down applies to both scale-in and scale-out events.  For example, if the cooldown is set to 10 minutes and Autoscale has just scaled-in, Autoscale won't attempt to scale again for another 10 minutes in either direction.  For more information, seeAutoscale evaluation steps.
Flapping
Flapping refers to a loop condition that causes a series of opposing scale events. Flapping happens when one scale event triggers an opposite scale event. For example, scaling in reduces the number of instances causing the CPU to rise in the remaining instances. This in turn triggers a scale-out event, which causes CPU usage to drop, repeating the process. For more information, seeFlapping in AutoscaleandTroubleshooting autoscale
Move autoscale to a different region
This section describes how to move Azure autoscale to another region under the same subscription and resource group. You can use REST API to move autoscale settings.
Prerequisites
Ensure that the subscription and resource group are available and the details in both the source and destination regions are identical.
Ensure that Azure autoscale is available in theAzure region you want to move to.
Move
UseREST APIto create an autoscale setting in the new environment. The autoscale setting created in the destination region is a copy of the autoscale setting in the source region.
Diagnostic settingsthat were created in association with the autoscale setting in the source region can't be moved. You'll need to re-create diagnostic settings in the destination region, after the creation of autoscale settings is completed.
Learn more about moving resources across Azure regions
To learn more about moving resources between regions and disaster recovery in Azure, seeMove resources to a new resource group or subscription.
Next steps
Create an activity log alert to monitor all autoscale engine operations on your subscription
Create an activity log alert to monitor all failed autoscale scale-in/scale-out operations on your subscription
Use autoscale actions to send email and webhook alert notifications in Azure Monitor
Feedback
Was this page helpful?
Additional resources