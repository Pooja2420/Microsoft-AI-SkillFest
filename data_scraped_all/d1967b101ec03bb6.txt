Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
AzureFileCopy@4 - Azure file copy v4 task
Article
2025-03-28
3 contributors
In this article
Copy files to Azure Blob Storage or virtual machines.
Note
This task does not supportAzure Resource Manager authentication with workflow identity federation.
Syntax
# Azure file copy v4
# Copy files to Azure Blob Storage or virtual machines.
- task: AzureFileCopy@4
  inputs:
    SourcePath: # string. Required. Source. 
    azureSubscription: # string. Alias: ConnectedServiceNameARM. Required. Azure Subscription. 
    Destination: # 'AzureBlob' | 'AzureVMs'. Required. Destination Type. 
    storage: # string. Alias: StorageAccountRM. Required. RM Storage Account. 
    #ContainerName: # string. Required when Destination = AzureBlob. Container Name. 
    #BlobPrefix: # string. Optional. Use when Destination = AzureBlob. Blob Prefix. 
    #resourceGroup: # string. Alias: EnvironmentNameRM. Required when Destination = AzureVMs. Resource Group. 
    #ResourceFilteringMethod: 'machineNames' # 'machineNames' | 'tags'. Optional. Use when Destination = AzureVMs. Select Machines By. Default: machineNames.
    #MachineNames: # string. Optional. Use when Destination = AzureVMs. Filter Criteria. 
    #vmsAdminUserName: # string. Required when Destination = AzureVMs. Admin Login. 
    #vmsAdminPassword: # string. Required when Destination = AzureVMs. Password. 
    #TargetPath: # string. Required when Destination = AzureVMs. Destination Folder. 
    #AdditionalArgumentsForBlobCopy: # string. Optional Arguments (for uploading files to blob). 
    #AdditionalArgumentsForVMCopy: # string. Optional. Use when Destination = AzureVMs. Optional Arguments (for downloading files to VM). 
    #sasTokenTimeOutInMinutes: '240' # string. Optional. Use when Destination = AzureBlob. SAS Token Expiration Period In Minutes. Default: 240.
    #enableCopyPrerequisites: false # boolean. Optional. Use when Destination = AzureVMs. Enable Copy Prerequisites. Default: false.
    #CopyFilesInParallel: true # boolean. Optional. Use when Destination = AzureVMs. Copy in Parallel. Default: true.
    #CleanTargetBeforeCopy: false # boolean. Optional. Use when Destination = AzureVMs. Clean Target. Default: false.
    #skipCACheck: true # boolean. Optional. Use when Destination = AzureVMs. Test Certificate. Default: true.
# Azure file copy v4
# Copy files to Azure Blob Storage or virtual machines.
- task: AzureFileCopy@4
  inputs:
    SourcePath: # string. Required. Source. 
    azureSubscription: # string. Alias: ConnectedServiceNameARM. Required. Azure Subscription. 
    Destination: # 'AzureBlob' | 'AzureVMs'. Required. Destination Type. 
    storage: # string. Alias: StorageAccountRM. Required. RM Storage Account. 
    #ContainerName: # string. Required when Destination = AzureBlob. Container Name. 
    #BlobPrefix: # string. Optional. Use when Destination = AzureBlob. Blob Prefix. 
    #resourceGroup: # string. Alias: EnvironmentNameRM. Required when Destination = AzureVMs. Resource Group. 
    #ResourceFilteringMethod: 'machineNames' # 'machineNames' | 'tags'. Optional. Use when Destination = AzureVMs. Select Machines By. Default: machineNames.
    #MachineNames: # string. Optional. Use when Destination = AzureVMs. Filter Criteria. 
    #vmsAdminUserName: # string. Required when Destination = AzureVMs. Admin Login. 
    #vmsAdminPassword: # string. Required when Destination = AzureVMs. Password. 
    #TargetPath: # string. Required when Destination = AzureVMs. Destination Folder. 
    #AdditionalArgumentsForBlobCopy: # string. Optional Arguments (for uploading files to blob). 
    #AdditionalArgumentsForVMCopy: # string. Optional. Use when Destination = AzureVMs. Optional Arguments (for downloading files to VM). 
    #sasTokenTimeOutInMinutes: '240' # string. Optional. Use when Destination = AzureBlob. SAS Token Expiration Period In Minutes. Default: 240.
    #enableCopyPrerequisites: false # boolean. Optional. Use when Destination = AzureVMs. Enable Copy Prerequisites. Default: false.
    #CopyFilesInParallel: true # boolean. Optional. Use when Destination = AzureVMs. Copy in Parallel. Default: true.
    #CleanTargetBeforeCopy: false # boolean. Optional. Use when Destination = AzureVMs. Clean Target. Default: false.
    #skipCACheck: true # boolean. Optional. Use when Destination = AzureVMs. Test Certificate. Default: true.
Inputs
SourcePath-Sourcestring. Required.
SourcePath
string
The location of source files. Supported values include YAML Pipelines and Classic Release supportpredefined system variableslikeBuild.Repository.LocalPath.
Release variablesare supported only in classic releases. The wild card symbol (*) is supported anywhere in the file path or file name.
azureSubscription-Azure SubscriptionInput alias:ConnectedServiceNameARM.string. Required.
azureSubscription
ConnectedServiceNameARM
string
Specify the name of anAzure Resource Manager service connectionconfigured for the subscription where the target Azure service, virtual machine, or storage account is located. SeeAzure Resource Manager overviewfor more details.
Destination-Destination Typestring. Required. Allowed values:AzureBlob(Azure Blob),AzureVMs(Azure VMs).
Destination
string
AzureBlob
AzureVMs
Specify the destination type.
storage-RM Storage AccountInput alias:StorageAccountRM.string. Required.
storage
StorageAccountRM
string
Specify a pre-existing ARM storage account. This is the storage account used as an intermediary for copying files to Azure VMs.
ContainerName-Container Namestring. Required whenDestination = AzureBlob.
ContainerName
string
Destination = AzureBlob
The name of the container into which files are copied. If the specified container does not exist in the storage account, it will be created.
To create a virtual directory inside the container, use the blob prefix input. For example, for the target locationhttps://myaccount.blob.core.windows.net/mycontainer/vd1/vd2/, specify container namemycontainerand blob prefix:vd1/vd2.
https://myaccount.blob.core.windows.net/mycontainer/vd1/vd2/
mycontainer
vd1/vd2
BlobPrefix-Blob Prefixstring. Optional. Use whenDestination = AzureBlob.
BlobPrefix
string
Destination = AzureBlob
Specify a prefix that can be used to filter files.
Example: You can append a build number to filter the files from all blobs with the same build number.
Example: If you specify a blob prefixmyvd1, a virtual directory is created inside the container. Files are copied from the source tohttps://myaccount.blob.core.windows.net/mycontainer/myvd1/.
myvd1
https://myaccount.blob.core.windows.net/mycontainer/myvd1/
resourceGroup-Resource GroupInput alias:EnvironmentNameRM.string. Required whenDestination = AzureVMs.
resourceGroup
EnvironmentNameRM
string
Destination = AzureVMs
Specify the name of the target Resource Group into which the files will be copied.
ResourceFilteringMethod-Select Machines Bystring. Optional. Use whenDestination = AzureVMs. Allowed values:machineNames(Machine Names),tags. Default value:machineNames.
ResourceFilteringMethod
string
Destination = AzureVMs
machineNames
tags
machineNames
Specify a VM host name or tag that identifies a subset of VMs in a resource group.Tagsare supported for resources created via the Azure Resource Manager only.
MachineNames-Filter Criteriastring. Optional. Use whenDestination = AzureVMs.
MachineNames
string
Destination = AzureVMs
Provide a list of VM names or tag names that identify the VMs the task will target. Valid filter criteria includes:
The name of anAzure Resource Group.
An output variable from a previous task.
A comma-delimited list of tag names or VM names.
Format VM names using a comma-separated list of FQDNs or IP addresses.
Format tag names for a filter as{TagName}:{Value}Example:Role:DB;OS:Win8.1
{TagName}:{Value}
Role:DB;OS:Win8.1
vmsAdminUserName-Admin Loginstring. Required whenDestination = AzureVMs.
vmsAdminUserName
string
Destination = AzureVMs
Provide the user name of an account with administrative permissions on all of the target VMs.
Supported formats include:username,domain\username,machine-name\username, and.\username.
username
domain\username
machine-name\username
.\username
UPN formats includingusername@domain.comand built-in system accounts such asNT Authority\Systemare not supported.
username@domain.com
NT Authority\System
vmsAdminPassword-Passwordstring. Required whenDestination = AzureVMs.
vmsAdminPassword
string
Destination = AzureVMs
Provide the password for theAdmin Loginparameter.
Admin Login
To find the variable, locate theAdmin Loginparameter. Select the padlock icon for a variable defined in theVariablestab to protect the value and insert the variable name here.
Admin Login
Variables
TargetPath-Destination Folderstring. Required whenDestination = AzureVMs.
TargetPath
string
Destination = AzureVMs
Specify the path to the folder in the Azure VMs into which files will be copied.
Environment variables such as$env:windirand$env:systemrootare supported. Examples:$env:windir\FabrikamFiber\Webandc:\FabrikamFiber
$env:windir
$env:systemroot
$env:windir\FabrikamFiber\Web
c:\FabrikamFiber
AdditionalArgumentsForBlobCopy-Optional Arguments (for uploading files to blob)string.
AdditionalArgumentsForBlobCopy
string
Provide additional arguments toAzCopy.exefor use when uploading to the Blob and downloading to the VMs. SeeTransfer data with the AzCopy Command-Line Utilityfor details.
AzCopy.exe
For Premium storage accounts that support only Azure page Blobs use--blob-type=PageBlobas an additional argument.
--blob-type=PageBlob
Default arguments include--log-level=INFO(default) and--recursive(if the container name is not$root).
--log-level=INFO
--recursive
$root
AdditionalArgumentsForVMCopy-Optional Arguments (for downloading files to VM)string. Optional. Use whenDestination = AzureVMs.
AdditionalArgumentsForVMCopy
string
Destination = AzureVMs
Provide additional arguments toAzCopy.exethat will be applied when downloading to VMs such as,--check-length=true.
AzCopy.exe
--check-length=true
If no optional arguments are specified, the following are added by default:
--log-level=INFO
--log-level=INFO
--log-level=DEBUG(If the pipeline is running in debug mode set)
--log-level=DEBUG
--recursive
--recursive
sasTokenTimeOutInMinutes-SAS Token Expiration Period In Minutesstring. Optional. Use whenDestination = AzureBlob. Default value:240.
sasTokenTimeOutInMinutes
string
Destination = AzureBlob
240
Specify the time in minutes after which the SAS token for the container will expire. By default, this token expires after 4 hours.
enableCopyPrerequisites-Enable Copy Prerequisitesboolean. Optional. Use whenDestination = AzureVMs. Default value:false.
enableCopyPrerequisites
boolean
Destination = AzureVMs
false
When enabled, this option uses a self-signed certificate to configure the Windows Remote Management (WinRM) listener over the HTTPS protocol on port 5986. This configuration is required for performing copy operations on Azure VMs.
If the target VMs are accessed through a load balancer, configure an inbound NAT rule to allow access on port 5986.
If the target VMs are associated with a Network Security Group (NSG), configure an inbound security rule to allow access on port 5986.
CopyFilesInParallel-Copy in Parallelboolean. Optional. Use whenDestination = AzureVMs. Default value:true.
CopyFilesInParallel
boolean
Destination = AzureVMs
true
Specifytrueto copy files in parallel to the target VMs.
true
CleanTargetBeforeCopy-Clean Targetboolean. Optional. Use whenDestination = AzureVMs. Default value:false.
CleanTargetBeforeCopy
boolean
Destination = AzureVMs
false
Specifytrueto clean-up the destination folder before copying files.
true
skipCACheck-Test Certificateboolean. Optional. Use whenDestination = AzureVMs. Default value:true.
skipCACheck
boolean
Destination = AzureVMs
true
WinRM requires a certificate for the HTTPS transfer when copying files from the intermediate storage Blob into the Azure VMs.
If you use a self-signed certificate, specifytrueto prevent the process from validating the certificate with a trusted CA.
true
Task control options
All tasks have control options in addition to their task inputs. For more information, seeControl options and common task properties.
Output variables
This task defines the followingoutput variables, which you can consume in downstream steps, jobs, and stages.
StorageContainerUriURI of the container to which the files were copied. Valid only when the selected destination is an Azure Blob.
StorageContainerUri
StorageContainerSasTokenSasToken for the container to which the files were copied. Valid only when the selected destination is an Azure Blob.
StorageContainerSasToken
Remarks
AzureFileCopy@4 supports AzCopy.exe version 10.8.0.
Note
This task is written in PowerShell and worksonlywhen run on Windows agents. If your pipelines require Linux agents and need to copy files to an Azure Storage Account, consider runningaz storage blobcommands in theAzure CLI taskas an alternative.
az storage blob
The task is used to copy application files and other artifacts that are required in order to install the app; such as PowerShell scripts, PowerShell-DSC modules, and more.
When the target is Azure VMs, the files are first copied to an automatically generated Azure blob container and then downloaded into the VMs. The container is deleted after the files are successfully copied to the VMs.
The task usesAzCopy, the command-line utility built for fast copying data from and to Azure storage accounts. Version 4 of the Azure File Copy task usesAzCopy V10.
Azure File Copy version 3 and lower would retrieve the Azure Storage key to provide access. Azure File Copy version 4 and higherrequire Azure Storage to be authorized via Microsoft Entra ID or SAS token. Authentication using a service principal and managed identity are available. For managed identities, only system-wide managed identity is supported. The level of authorization required is shown inOption 1: Use Microsoft Entra ID.
To dynamically deploy Azure Resource Groups that contain virtual machines, use theAzure Resource Group Deploymenttask. This task
has a sample template that can perform the required operations to set up the WinRM HTTPS
protocol on the VMs, open port 5986 in the firewall, and install the test certificate.
Note
If you are deploying to Azure Static Websites as a container in Blob storage,
useVersion 2or higher of the task in order to preserve the$webcontainer name.
The task supports authentication based on Azure Active Directory. Authentication using a service principal and managed identity are available. For managed identities, only system-wide managed identity is supported.
What are the Azure PowerShell prerequisites for using this task?
The task requires that Azure PowerShell is installed on the machine running the automation agent. The recommended version is 1.0.2, but the task will work with version 0.9.8 and higher. You can use theAzure PowerShell Installer v1.0.2to obtain this.
What are the WinRM prerequisites for this task?
The task uses Windows Remote Management (WinRM) HTTPS protocol to copy the files from the storage Blob container to the Azure VMs. This requires that the WinRM HTTPS service is configured on the VMs, and a suitable certificate is installed.
Configure WinRM after virtual machine creation
If the VMs were created without opening the WinRM HTTPS ports, perform the following:
Configure an inbound access rule to allow HTTPS on port 5986 of each VM.
DisableUAC remote restrictions.
Specify the credentials for the task to access the VMs using an administrator-level login in the simple formusernamewithout any domain part.
Install a certificate on the machine that runs the automation agent.
If you are using a self-signed certificate, set theTest Certificateparameter of the task.
What type of service connection should I choose?
For Azure Resource Manager storage accounts and Azure Resource Manager VMs, use anAzure Resource Managerservice connection type. SeeAutomating Azure Resource Group deployment using a Service Principal.
For Azure Resource Manager storage accounts and Azure Resource Manager VMs, use anAzure Resource Managerservice connection type. SeeAutomating Azure Resource Group deployment using a Service Principal.
While using anAzure Resource Managerservice connection type, the task  automatically filters appropriate newer Azure Resource Manager storage accounts, and other fields. For example, the Resource Group or cloud service, and the VMs.
While using anAzure Resource Managerservice connection type, the task  automatically filters appropriate newer Azure Resource Manager storage accounts, and other fields. For example, the Resource Group or cloud service, and the VMs.
How do I create a school or work account for use with this task?
A suitable account can be created for use in a service connection:
Use the Azure portal to create a new user account in Azure Active Directory.
Add the Azure Active Directory user account to the co-administrators group in your Azure subscription.
Sign into the Azure portal with this user account and change the password.
Use the credentials of this account in the service connection. Deployments are then processed using this account.
If the task fails, will the copy resume?
Since AzCopy V10 does not support journal files, the task cannot resume the copy. You must run the task again to copy all the files.
Are the log files and plan files cleaned after the copy?
The log and plan files are not deleted by the task. To explicitly clean-up the files, add a CLI step in the workflow usingazcopy jobs clean.
How do I use the Azure file copy task to copy a file to an Azure virtual machine that doesn't have a public IP address?
Make sure that you're using version 4 of the Azure file copy task. If the task fails, you can add a build step to run the commandazcopy cp "source-file-path" "destination-file-path"to substitute the source and destination values.
azcopy cp "source-file-path" "destination-file-path"
Forbidden error: 'AzCopy.exe exited with non-zero exit code while uploading files to blob storage' while using Azure File Copy task
The hosted agents are assigned randomly every time a build is triggered, theagent IP addresseswill be different on every run. If these IP addresses are not in your allowed list of IPs, the communication between Azure DevOps and the storage account fails. In such scenarios, follow the steps outlined:
Add a build step using Azure CLI to identify the IP address of the Microsoft Hosted Build agent at runtime. It will add the IP address to the Network rule on the Azure Storage Account.
Run the build step for your Azure Storage Account.
Add another build step using Azure CLI to remove the IP address of the build agent from the Azure Storage Account network rule.
Examples
- task: AzureFileCopy@4
  inputs:
    SourcePath: 'Readme.md'
    azureSubscription: 'Azure'
    Destination: 'AzureBlob'
    storage: 'storageAccount'
    ContainerName: 'containerName'
    BlobPrefix: ''
  name: AzureFileCopy
  
- script: | 
    echo $(AzureFileCopy.StorageContainerUri)
    echo $(AzureFileCopy.StorageContainerSasToken)
- task: AzureFileCopy@4
  inputs:
    SourcePath: 'Readme.md'
    azureSubscription: 'Azure'
    Destination: 'AzureBlob'
    storage: 'storageAccount'
    ContainerName: 'containerName'
    BlobPrefix: ''
  name: AzureFileCopy
  
- script: | 
    echo $(AzureFileCopy.StorageContainerUri)
    echo $(AzureFileCopy.StorageContainerSasToken)
Requirements
Feedback
Was this page helpful?
Additional resources