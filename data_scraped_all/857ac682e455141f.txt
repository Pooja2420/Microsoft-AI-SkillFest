Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
UsePythonVersion@0 - Use Python version v0 task
Article
2025-02-24
4 contributors
In this article
Use this task to download or select a version of Python to run on an agent, and optionally add it to PATH.
Syntax
# Use Python version v0
# Use the specified version of Python from the tool cache, optionally adding it to the PATH.
- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.x' # string. Required. Version spec. Default: 3.x.
    #disableDownloadFromRegistry: false # boolean. Disable downloading releases from the GitHub registry. Default: false.
    #allowUnstable: false # boolean. Optional. Use when disableDownloadFromRegistry = false. Allow downloading unstable releases. Default: false.
    #githubToken: # string. Optional. Use when disableDownloadFromRegistry = false. GitHub token for GitHub Actions python registry. 
    #addToPath: true # boolean. Add to PATH. Default: true.
  # Advanced
    architecture: 'x64' # 'x86' | 'x64'. Required. Architecture. Default: x64.
# Use Python version v0
# Use the specified version of Python from the tool cache, optionally adding it to the PATH.
- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.x' # string. Required. Version spec. Default: 3.x.
    #disableDownloadFromRegistry: false # boolean. Disable downloading releases from the GitHub registry. Default: false.
    #allowUnstable: false # boolean. Optional. Use when disableDownloadFromRegistry = false. Allow downloading unstable releases. Default: false.
    #githubToken: # string. Optional. Use when disableDownloadFromRegistry = false. GitHub token for GitHub Actions python registry. 
    #addToPath: true # boolean. Add to PATH. Default: true.
  # Advanced
    architecture: 'x64' # 'x86' | 'x64'. Required. Architecture. Default: x64.
# Use Python version v0
# Use the specified version of Python from the tool cache, optionally adding it to the PATH.
- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.x' # string. Required. Version spec. Default: 3.x.
    #addToPath: true # boolean. Add to PATH. Default: true.
  # Advanced
    architecture: 'x64' # 'x86' | 'x64'. Required. Architecture. Default: x64.
# Use Python version v0
# Use the specified version of Python from the tool cache, optionally adding it to the PATH.
- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.x' # string. Required. Version spec. Default: 3.x.
    #addToPath: true # boolean. Add to PATH. Default: true.
  # Advanced
    architecture: 'x64' # 'x86' | 'x64'. Required. Architecture. Default: x64.
Inputs
versionSpec-Version specstring. Required. Default value:3.x.
versionSpec
string
3.x
Specifies the version range or exact version of a Python version to use, using SemVer's version range syntax. Learn more aboutSemVer.
disableDownloadFromRegistry-Disable downloading releases from the GitHub registryboolean. Default value:false.
disableDownloadFromRegistry
boolean
false
Disables downloading missing Python versions from theGithub Actions registry. This boolean should only betrueif using a local installation of Python.
true
allowUnstable-Allow downloading unstable releasesboolean. Optional. Use whendisableDownloadFromRegistry = false. Default value:false.
allowUnstable
boolean
disableDownloadFromRegistry = false
false
Downloads unstable Python versions from theGithub Actions Python versions registryif set totrue.
true
githubToken-GitHub token for GitHub Actions python registrystring. Optional. Use whendisableDownloadFromRegistry = false.
githubToken
string
disableDownloadFromRegistry = false
Specifies the GitHub token that enforces the anonymous requests limit in theGithub Actions python versions registry. Leaving this empty may cause download failures. Not needed if using a local installation of Python.
addToPath-Add to PATHboolean. Default value:true.
addToPath
boolean
true
Prepends the retrieved Python version to the PATH environment variable to make it available in subsequent tasks or scripts without using the output variable.
architecture-Architecturestring. Required. Allowed values:x86,x64. Default value:x64.
architecture
string
x86
x64
x64
Specifies the target architecture (x86orx64) of the Python interpreter.
x86
x64
Task control options
All tasks have control options in addition to their task inputs. For more information, seeControl options and common task properties.
Output variables
This task defines the followingoutput variables, which you can consume in downstream steps, jobs, and stages.
pythonLocationThe directory of the installed Python distribution. Use this in subsequent tasks to access this installation of Python.
pythonLocation
Remarks
Use this task to download or select a version of Python to run on an agent, and optionally add it to PATH.
Prerequisites
AMicrosoft-hosted agentwith side-by-side versions of Python installed, or a self-hosted agent withAgent.ToolsDirectoryconfigured (seeFAQ).
Agent.ToolsDirectory
Downloading python versions is not supported on self-hosted agents.
This task will fail if no Python versions are found inAgent.ToolsDirectory. Available Python versions on Microsoft-hosted agents can be foundhere.
Agent.ToolsDirectory
Note
x86 and x64 versions of Python are available on Microsoft-hosted Windows agents, but not on Linux or macOS agents.
As of version 0.150 of the task, version spec will also acceptpypy2orpypy3.
pypy2
pypy3
As of version 0.213.1 of the task, version spec will also acceptpypy2.xorpypy3.x.
pypy2.x
pypy3.x
If the task completes successfully, the task's output variable will contain the directory of the Python installation:

After running this task with "Add to PATH," thepythoncommand in subsequent scripts will be for the highest available version of the interpreter matching the version spec and architecture.
python
The versions of Python installed on the Microsoft-hosted Ubuntu and macOS images follow the symlinking structure for Unix-like systems that are defined inPEP 394.
For example,python3.11is the actual interpreter for Python 3.11.
python3.11
python3is symlinked to that interpreter, andpythonis a symlink to that symlink.
python3
python
On the Microsoft-hosted Windows images, the interpreter is justpython.
python
For Microsoft-hosted agents, x86 is supported only on Windows. This is because Windows can run executables compiled for the x86 architecture with the WoW64 subsystem.Hosted Ubuntu and Hosted macOS run 64-bit operating systems and run only 64-bit Python.
How can I configure a self-hosted agent to use this task?
Important
Downloading python versions is not supported on self-hosted agents. You may only use pre-installed versions.
The desired Python version needs to be added to the tool cache on the self-hosted agent so the task can use it. Normally, the tool cache is located under the_work/_tooldirectory of the agent; alternatively, the path can be overridden by the environment variableAGENT_TOOLSDIRECTORY. Under that directory, create the following directory structure based off of your Python version:
_work/_tool
AGENT_TOOLSDIRECTORY
$AGENT_TOOLSDIRECTORY/
    Python/
        {version number}/
            {platform}/
                {tool files}
            {platform}.complete
$AGENT_TOOLSDIRECTORY/
    Python/
        {version number}/
            {platform}/
                {tool files}
            {platform}.complete
Theversion numbershould follow the format of1.2.3.
Theplatformshould either bex86orx64.
Thetool filesshould be the unzipped Python version files.
The{platform}.completeshould be a 0 byte file that looks likex86.completeorx64.completeand just signifies the tool has been installed in the cache properly.
version number
1.2.3
platform
x86
x64
tool files
{platform}.complete
x86.complete
x64.complete
As a complete and concrete example, here is how a completed download of Python 3.11.4 for x64 would look in the tool cache:
$AGENT_TOOLSDIRECTORY/
    Python/
        3.11.4/
            x64/
                {tool files}
            x64.complete
$AGENT_TOOLSDIRECTORY/
    Python/
        3.11.4/
            x64/
                {tool files}
            x64.complete
Learn more about thetool cache.
To make your scripts work as they would on Microsoft-hosted agents, use the symlinking structure fromPEP 394on Unix-like systems.
Also note that the embeddable ZIP release of Python requiresextra configuration for installed modules, includingpip. If possible, we recommend using thefull installerto get apip-compatible Python installation.
pip
pip
Requirements
Feedback
Was this page helpful?
Additional resources