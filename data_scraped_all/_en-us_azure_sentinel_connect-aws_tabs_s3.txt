Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Connect Microsoft Sentinel to Amazon Web Services to ingest AWS service log data
Article
2024-03-06
12 contributors
In this article
Use the Amazon Web Services (AWS) connectors to pull AWS service logs into Microsoft Sentinel. These connectors work by granting Microsoft Sentinel access to your AWS resource logs. Setting up the connector establishes a trust relationship between Amazon Web Services and Microsoft Sentinel. This is accomplished on AWS by creating a role that gives permission to Microsoft Sentinel to access your AWS logs.
This connector is available in two versions: the legacy connector for CloudTrail management and data logs, and the new version that can ingest logs from the following AWS services by pulling them from an S3 bucket (links are to AWS documentation):
Amazon Virtual Private Cloud (VPC)-VPC Flow Logs
Amazon GuardDuty-Findings
AWS CloudTrail-Managementanddataevents
AWS CloudWatch-CloudWatch logs
S3 connector (new)
CloudTrail connector (legacy)
This tab explains how to configure the AWS S3 connector. The process of setting it up has two parts: the AWS side and the Microsoft Sentinel side. Each side's process produces information used by the other side. This two-way authentication creates secure communication.
Prerequisites
Make sure that the logs from your selected AWS service use the format accepted by Microsoft Sentinel:Amazon VPC: .csv file in GZIP format with headers; delimiter: space.Amazon GuardDuty: json-line and GZIP formats.AWS CloudTrail: .json file in a GZIP format.CloudWatch: .csv file in a GZIP format without a header. If you need to convert your logs to this format, you can use thisCloudWatch lambda function.
Make sure that the logs from your selected AWS service use the format accepted by Microsoft Sentinel:
Amazon VPC: .csv file in GZIP format with headers; delimiter: space.
Amazon GuardDuty: json-line and GZIP formats.
AWS CloudTrail: .json file in a GZIP format.
CloudWatch: .csv file in a GZIP format without a header. If you need to convert your logs to this format, you can use thisCloudWatch lambda function.
You must have write permission on the Microsoft Sentinel workspace.
You must have write permission on the Microsoft Sentinel workspace.
Install the Amazon Web Services solution from theContent Hubin Microsoft Sentinel. For more information, seeDiscover and manage Microsoft Sentinel out-of-the-box content.
Install the Amazon Web Services solution from theContent Hubin Microsoft Sentinel. For more information, seeDiscover and manage Microsoft Sentinel out-of-the-box content.
Architecture overview
This graphic and the following text show how the parts of this connector solution interact.

AWS services are configured to send their logs to S3 (Simple Storage Service) storage buckets.
AWS services are configured to send their logs to S3 (Simple Storage Service) storage buckets.
The S3 bucket sends notification messages to the SQS (Simple Queue Service) message queue whenever it receives new logs.
The S3 bucket sends notification messages to the SQS (Simple Queue Service) message queue whenever it receives new logs.
The Microsoft Sentinel AWS S3 connector polls the SQS queue at regular, frequent intervals. If there is a message in the queue, it will contain the path to the log files.
The Microsoft Sentinel AWS S3 connector polls the SQS queue at regular, frequent intervals. If there is a message in the queue, it will contain the path to the log files.
The connector reads the message with the path, then fetches the files from the S3 bucket.
The connector reads the message with the path, then fetches the files from the S3 bucket.
To connect to the SQS queue and the S3 bucket, Microsoft Sentinel uses a federated web identity provider (Microsoft Entra ID) for authenticating with AWS through OpenID Connect (OIDC), and assuming an AWS IAM role. The role is configured with a permissions policy giving it access to those resources.
To connect to the SQS queue and the S3 bucket, Microsoft Sentinel uses a federated web identity provider (Microsoft Entra ID) for authenticating with AWS through OpenID Connect (OIDC), and assuming an AWS IAM role. The role is configured with a permissions policy giving it access to those resources.
Connect the S3 connector
In your AWS environment:Configure your AWS service(s) to send logs to anS3 bucket.Create aSimple Queue Service (SQS) queueto provide notification.Create aweb identity providerto authenticate users to AWS through OpenID Connect (OIDC).Create anassumed roleto grant permissions to users authenticated by the OIDC web identity provider to access your AWS resources.Attach the appropriateIAM permissions policiesto grant the assumed role access to the appropriate resources (S3 bucket, SQS).We have made available, in our GitHub repository, a script thatautomates the AWS side of this process. See the instructions forautomatic setuplater in this document.
In your AWS environment:
Configure your AWS service(s) to send logs to anS3 bucket.
Configure your AWS service(s) to send logs to anS3 bucket.
Create aSimple Queue Service (SQS) queueto provide notification.
Create aSimple Queue Service (SQS) queueto provide notification.
Create aweb identity providerto authenticate users to AWS through OpenID Connect (OIDC).
Create aweb identity providerto authenticate users to AWS through OpenID Connect (OIDC).
Create anassumed roleto grant permissions to users authenticated by the OIDC web identity provider to access your AWS resources.
Create anassumed roleto grant permissions to users authenticated by the OIDC web identity provider to access your AWS resources.
Attach the appropriateIAM permissions policiesto grant the assumed role access to the appropriate resources (S3 bucket, SQS).
Attach the appropriateIAM permissions policiesto grant the assumed role access to the appropriate resources (S3 bucket, SQS).
We have made available, in our GitHub repository, a script thatautomates the AWS side of this process. See the instructions forautomatic setuplater in this document.
In Microsoft Sentinel:Enable and configure theAWS S3 Connectorin the Microsoft Sentinel portal.See the instructions below.
In Microsoft Sentinel:
Enable and configure theAWS S3 Connectorin the Microsoft Sentinel portal.See the instructions below.
Automatic setup
To simplify the onboarding process, Microsoft Sentinel has provided aPowerShell script to automate the setupof the AWS side of the connector - the required AWS resources, credentials, and permissions.
The script takes the following actions:
Creates an OIDC web identity provider, to authenticate Microsoft Entra ID users to AWS.
Creates an OIDC web identity provider, to authenticate Microsoft Entra ID users to AWS.
Creates anIAM assumed rolewith the minimal necessary permissions, to grant OIDC-authenticated users access to your logs in a given S3 bucket and SQS queue.
Creates anIAM assumed rolewith the minimal necessary permissions, to grant OIDC-authenticated users access to your logs in a given S3 bucket and SQS queue.
Enables specified AWS services to send logs to that S3 bucket, and notification messages to that SQS queue.
Enables specified AWS services to send logs to that S3 bucket, and notification messages to that SQS queue.
If necessary, creates that S3 bucket and that SQS queue for this purpose.
If necessary, creates that S3 bucket and that SQS queue for this purpose.
Configures any necessary IAM permissions policies and applies them to the IAM role created above.
Configures any necessary IAM permissions policies and applies them to the IAM role created above.
For Azure Government clouds, a specialized script creates a different OIDC web identity provider, to which it assigns the IAM assumed role.
Prerequisites for automatic setup
You must have PowerShell and the AWS CLI on your machine.Installation instructions for PowerShellInstallation instructions for the AWS CLI(from AWS documentation)
Installation instructions for PowerShell
Installation instructions for the AWS CLI(from AWS documentation)
Instructions
To run the script to set up the connector, use the following steps:
From the Microsoft Sentinel navigation menu, selectData connectors.
From the Microsoft Sentinel navigation menu, selectData connectors.
SelectAmazon Web Services S3from the data connectors gallery.If you don't see the connector, install the Amazon Web Services solution from theContent Hubin Microsoft Sentinel.
SelectAmazon Web Services S3from the data connectors gallery.
If you don't see the connector, install the Amazon Web Services solution from theContent Hubin Microsoft Sentinel.
In the details pane for the connector, selectOpen connector page.
In the details pane for the connector, selectOpen connector page.
In theConfigurationsection, under1. Set up your AWS environment, expandSetup with PowerShell script (recommended).
In theConfigurationsection, under1. Set up your AWS environment, expandSetup with PowerShell script (recommended).
Follow the on-screen instructions to download and extract theAWS S3 Setup Script(link downloads a zip file containing the main setup script and helper scripts) from the connector page.NoteFor ingesting AWS logs into anAzure Government cloud, download and extractthis specialized AWS S3 Gov Setup Scriptinstead.
Follow the on-screen instructions to download and extract theAWS S3 Setup Script(link downloads a zip file containing the main setup script and helper scripts) from the connector page.
Note
For ingesting AWS logs into anAzure Government cloud, download and extractthis specialized AWS S3 Gov Setup Scriptinstead.
Before running the script, run theaws configurecommand from your PowerShell command line, and enter the relevant information as prompted. SeeAWS Command Line Interface | Configuration basics(from AWS documentation) for details.
Before running the script, run theaws configurecommand from your PowerShell command line, and enter the relevant information as prompted. SeeAWS Command Line Interface | Configuration basics(from AWS documentation) for details.
aws configure
Now run the script. Copy the command from the connector page (under "Run script to set up the environment") and paste it in your command line.
Now run the script. Copy the command from the connector page (under "Run script to set up the environment") and paste it in your command line.
The script will prompt you to enter your Workspace ID. This ID appears on the connector page. Copy it and paste it at the prompt of the script.
The script will prompt you to enter your Workspace ID. This ID appears on the connector page. Copy it and paste it at the prompt of the script.

When the script finishes running, copy theRole ARNand theSQS URLfrom the script's output (see example in first screenshot below) and paste them in their respective fields in the connector page under2. Add connection(see second screenshot below).
When the script finishes running, copy theRole ARNand theSQS URLfrom the script's output (see example in first screenshot below) and paste them in their respective fields in the connector page under2. Add connection(see second screenshot below).


Select a data type from theDestination tabledrop-down list. This tells the connector which AWS service's logs this connection is being established to collect, and into which Log Analytics table it will store the ingested data. Then selectAdd connection.
Select a data type from theDestination tabledrop-down list. This tells the connector which AWS service's logs this connection is being established to collect, and into which Log Analytics table it will store the ingested data. Then selectAdd connection.
Note
The script may take up to 30 minutes to finish running.
Manual setup
Microsoft recommends using the automatic setup script to deploy this connector. If for whatever reason you do not want to take advantage of this convenience, follow the steps below to set up the connector manually.
Prepare your AWS resources
Create an AWS assumed role and grant access to the AWS Sentinel account
Add the AWS role and queue information to the S3 data connector
Configure an AWS service to export logs to an S3 bucket
Prepare your AWS resources
Create anS3 bucketto which you will ship the logs from your AWS services - VPC, GuardDuty, CloudTrail, or CloudWatch.See theinstructions to create an S3 storage bucketin the AWS documentation.
Create anS3 bucketto which you will ship the logs from your AWS services - VPC, GuardDuty, CloudTrail, or CloudWatch.
See theinstructions to create an S3 storage bucketin the AWS documentation.
Create a standardSimple Queue Service (SQS) message queueto which the S3 bucket will publish notifications.See theinstructions to create a standard Simple Queue Service (SQS) queuein the AWS documentation.
Create a standardSimple Queue Service (SQS) message queueto which the S3 bucket will publish notifications.
See theinstructions to create a standard Simple Queue Service (SQS) queuein the AWS documentation.
Configure your S3 bucket to send notification messages to your SQS queue.See theinstructions to publish notifications to your SQS queuein the AWS documentation.
Configure your S3 bucket to send notification messages to your SQS queue.
See theinstructions to publish notifications to your SQS queuein the AWS documentation.
Install AWS data connector and prepare environment
In Microsoft Sentinel, selectData connectorsfrom the navigation menu.
In Microsoft Sentinel, selectData connectorsfrom the navigation menu.
SelectAmazon Web Services S3from the data connectors gallery.If you don't see the connector, install the Amazon Web Services solution from theContent Hubin Microsoft Sentinel. For more information, seeDiscover and manage Microsoft Sentinel out-of-the-box content.
SelectAmazon Web Services S3from the data connectors gallery.
If you don't see the connector, install the Amazon Web Services solution from theContent Hubin Microsoft Sentinel. For more information, seeDiscover and manage Microsoft Sentinel out-of-the-box content.
In the details pane for the connector, selectOpen connector page.
In the details pane for the connector, selectOpen connector page.
UnderConfiguration, expandSetup with PowerShell script (recommended), then copy theExternal ID (Workspace ID)to your clipboard.
UnderConfiguration, expandSetup with PowerShell script (recommended), then copy theExternal ID (Workspace ID)to your clipboard.
Create an Open ID Connect (OIDC) web identity provider and an AWS assumed role
In a different browser window or tab, open the AWS console.
In a different browser window or tab, open the AWS console.
Create aweb identity provider. Follow these instructions in the AWS documentation:Creating OpenID Connect (OIDC) identity providers.ParameterSelection/ValueCommentsClient ID-Ignore this, you already have it. SeeAudienceline below.Provider typeOpenID ConnectInstead of defaultSAML.Provider URLCommercial:sts.windows.net/33e01921-4d64-4f8c-a055-5bdaffd5e33d/Government:sts.windows.net/cab8a31a-1906-4287-a0d8-4eef66b95f6e/Thumbprint626d44e704d1ceabe3bf0d53397464ac8080142cIf created in the IAM console, selectingGet thumbprintshould give you this result.AudienceCommercial:api://1462b192-27f7-4cb9-8523-0f4ecb54b47eGovernment:api://d4230588-5f84-4281-a9c7-2c15194b28f7
Create aweb identity provider. Follow these instructions in the AWS documentation:Creating OpenID Connect (OIDC) identity providers.
sts.windows.net/33e01921-4d64-4f8c-a055-5bdaffd5e33d/
sts.windows.net/cab8a31a-1906-4287-a0d8-4eef66b95f6e/
626d44e704d1ceabe3bf0d53397464ac8080142c
api://1462b192-27f7-4cb9-8523-0f4ecb54b47e
api://d4230588-5f84-4281-a9c7-2c15194b28f7
Create anIAM assumed role. Follow these instructions in the AWS documentation:Creating a role for web identity or OpenID Connect Federation.ParameterSelection/ValueCommentsTrusted entity typeWeb identityInstead of defaultAWS service.Identity providerCommercial:sts.windows.net/33e01921-4d64-4f8c-a055-5bdaffd5e33d/Government:sts.windows.net/cab8a31a-1906-4287-a0d8-4eef66b95f6e/The provider you created in the previous step.AudienceCommercial:api://1462b192-27f7-4cb9-8523-0f4ecb54b47eGovernment:api://d4230588-5f84-4281-a9c7-2c15194b28f7The audience you defined for the identity provider in the previous step.Permissions to assignAmazonSQSReadOnlyAccessAWSLambdaSQSQueueExecutionRoleAmazonS3ReadOnlyAccessROSAKMSProviderPolicyAdditional policies for ingesting the different types of AWS service logsFor information on these policies, see the relevant AWS S3 connector permissions policies page, in the Microsoft Sentinel GitHub repository.AWS Commercial S3 connector permissions policies pageAWS Government S3 connector permissions policies pageName"OIDC_MicrosoftSentinelRole"Choose a meaningful name that includes a reference to Microsoft Sentinel.The name must include the exact prefixOIDC_, otherwise the connector will not function properly.
Create anIAM assumed role. Follow these instructions in the AWS documentation:Creating a role for web identity or OpenID Connect Federation.
sts.windows.net/33e01921-4d64-4f8c-a055-5bdaffd5e33d/
sts.windows.net/cab8a31a-1906-4287-a0d8-4eef66b95f6e/
api://1462b192-27f7-4cb9-8523-0f4ecb54b47e
api://d4230588-5f84-4281-a9c7-2c15194b28f7
AmazonSQSReadOnlyAccess
AmazonSQSReadOnlyAccess
AWSLambdaSQSQueueExecutionRole
AWSLambdaSQSQueueExecutionRole
AmazonS3ReadOnlyAccess
AmazonS3ReadOnlyAccess
ROSAKMSProviderPolicy
ROSAKMSProviderPolicy
Additional policies for ingesting the different types of AWS service logs
AWS Commercial S3 connector permissions policies page
AWS Government S3 connector permissions policies page
OIDC_
Edit the new role's trust policy and add another condition:"sts:RoleSessionName": "MicrosoftSentinel_{WORKSPACE_ID)"ImportantThe value of thests:RoleSessionNameparameter must have the exact prefixMicrosoftSentinel_, otherwise the connector will not function properly.The finished trust policy should look like this:{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Effect": "Allow",
      "Principal": {
        "Federated": "arn:aws:iam::XXXXXXXXXXXX:oidc-provider/sts.windows.net/cab8a31a-1906-4287-a0d8-4eef66b95f6e/"
      },
      "Action": "sts:AssumeRoleWithWebIdentity",
      "Condition": {
        "StringEquals": {
          "sts.windows.net/cab8a31a-1906-4287-a0d8-4eef66b95f6e/:aud": "api://d4230588-5f84-4281-a9c7-2c15194b28f7",
          "sts:RoleSessionName": "MicrosoftSentinel_XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX"
        }
      }
    }
  ]
}XXXXXXXXXXXXis your AWS Account ID.XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXXis your Microsoft Sentinel workspace ID.Update (save) the policy when you're done editing.
Edit the new role's trust policy and add another condition:"sts:RoleSessionName": "MicrosoftSentinel_{WORKSPACE_ID)"
"sts:RoleSessionName": "MicrosoftSentinel_{WORKSPACE_ID)"
Important
The value of thests:RoleSessionNameparameter must have the exact prefixMicrosoftSentinel_, otherwise the connector will not function properly.
sts:RoleSessionName
MicrosoftSentinel_
The finished trust policy should look like this:
{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Effect": "Allow",
      "Principal": {
        "Federated": "arn:aws:iam::XXXXXXXXXXXX:oidc-provider/sts.windows.net/cab8a31a-1906-4287-a0d8-4eef66b95f6e/"
      },
      "Action": "sts:AssumeRoleWithWebIdentity",
      "Condition": {
        "StringEquals": {
          "sts.windows.net/cab8a31a-1906-4287-a0d8-4eef66b95f6e/:aud": "api://d4230588-5f84-4281-a9c7-2c15194b28f7",
          "sts:RoleSessionName": "MicrosoftSentinel_XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX"
        }
      }
    }
  ]
}
{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Effect": "Allow",
      "Principal": {
        "Federated": "arn:aws:iam::XXXXXXXXXXXX:oidc-provider/sts.windows.net/cab8a31a-1906-4287-a0d8-4eef66b95f6e/"
      },
      "Action": "sts:AssumeRoleWithWebIdentity",
      "Condition": {
        "StringEquals": {
          "sts.windows.net/cab8a31a-1906-4287-a0d8-4eef66b95f6e/:aud": "api://d4230588-5f84-4281-a9c7-2c15194b28f7",
          "sts:RoleSessionName": "MicrosoftSentinel_XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX"
        }
      }
    }
  ]
}
XXXXXXXXXXXXis your AWS Account ID.
XXXXXXXXXXXX
XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXXis your Microsoft Sentinel workspace ID.
XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX
Update (save) the policy when you're done editing.
Add the AWS role and queue information to the S3 data connector
In the browser tab open to the AWS console, enter theIdentity and Access Management (IAM)service and navigate to the list ofRoles. Select the role you created above.
In the browser tab open to the AWS console, enter theIdentity and Access Management (IAM)service and navigate to the list ofRoles. Select the role you created above.
Copy theARNto your clipboard.
Copy theARNto your clipboard.
Enter theSimple Queue Service, select the SQS queue you created, and copy theURLof the queue to your clipboard.
Enter theSimple Queue Service, select the SQS queue you created, and copy theURLof the queue to your clipboard.
Return to your Microsoft Sentinel browser tab, which should be open to theAmazon Web Services S3 (Preview)data connector page. Under2. Add connection:Paste the IAM role ARN you copied two steps ago into theRole to addfield.Paste the URL of the SQS queue you copied in the last step into theSQS URLfield.Select a data type from theDestination tabledrop-down list. This tells the connector which AWS service's logs this connection is being established to collect, and into which Log Analytics table it will store the ingested data.SelectAdd connection.
Return to your Microsoft Sentinel browser tab, which should be open to theAmazon Web Services S3 (Preview)data connector page. Under2. Add connection:
Paste the IAM role ARN you copied two steps ago into theRole to addfield.
Paste the URL of the SQS queue you copied in the last step into theSQS URLfield.
Select a data type from theDestination tabledrop-down list. This tells the connector which AWS service's logs this connection is being established to collect, and into which Log Analytics table it will store the ingested data.
SelectAdd connection.

Configure an AWS service to export logs to an S3 bucket
See Amazon Web Services documentation (linked below) for the instructions for sending each type of log to your S3 bucket:
Publish a VPC flow log to an S3 bucket.NoteIf you choose to customize the log's format, you must include thestartattribute, as it maps to theTimeGeneratedfield in the Log Analytics workspace. Otherwise, theTimeGeneratedfield will be populated with the event'singested time, which doesn't accurately describe the log event.
Publish a VPC flow log to an S3 bucket.
Note
If you choose to customize the log's format, you must include thestartattribute, as it maps to theTimeGeneratedfield in the Log Analytics workspace. Otherwise, theTimeGeneratedfield will be populated with the event'singested time, which doesn't accurately describe the log event.
Export your GuardDuty findings to an S3 bucket.NoteIn AWS, findings are exported by default every 6 hours. Adjust the export frequency for updated Active findings based on your environment requirements. To expedite the process, you can modify the default setting to export findings every 15 minutes. SeeSetting the frequency for exporting updated active findings.TheTimeGeneratedfield is populated with the finding'sUpdate atvalue.
Export your GuardDuty findings to an S3 bucket.
Note
In AWS, findings are exported by default every 6 hours. Adjust the export frequency for updated Active findings based on your environment requirements. To expedite the process, you can modify the default setting to export findings every 15 minutes. SeeSetting the frequency for exporting updated active findings.
In AWS, findings are exported by default every 6 hours. Adjust the export frequency for updated Active findings based on your environment requirements. To expedite the process, you can modify the default setting to export findings every 15 minutes. SeeSetting the frequency for exporting updated active findings.
TheTimeGeneratedfield is populated with the finding'sUpdate atvalue.
TheTimeGeneratedfield is populated with the finding'sUpdate atvalue.
AWS CloudTrail trails are stored in S3 buckets by default.Create a trail for a single account.Create a trail spanning multiple accounts across an organization.
AWS CloudTrail trails are stored in S3 buckets by default.
Create a trail for a single account.
Create a trail spanning multiple accounts across an organization.
Export your CloudWatch log data to an S3 bucket.
Export your CloudWatch log data to an S3 bucket.
Known issues and troubleshooting
Known issues
Different types of logs can be stored in the same S3 bucket, but should not be stored in the same path.
Different types of logs can be stored in the same S3 bucket, but should not be stored in the same path.
Each SQS queue should point to one type of message, so if you want to ingest GuardDuty findingsandVPC flow logs, you should set up separate queues for each type.
Each SQS queue should point to one type of message, so if you want to ingest GuardDuty findingsandVPC flow logs, you should set up separate queues for each type.
Similarly, a single SQS queue can serve only one path in an S3 bucket, so if for any reason you are storing logs in multiple paths, each path requires its own dedicated SQS queue.
Similarly, a single SQS queue can serve only one path in an S3 bucket, so if for any reason you are storing logs in multiple paths, each path requires its own dedicated SQS queue.
Troubleshooting
Learn how totroubleshoot Amazon Web Services S3 connector issues.
This tab explains how to configure the AWS CloudTrail connector. The process of setting it up has two parts: the AWS side and the Microsoft Sentinel side. Each side's process produces information used by the other side. This two-way authentication creates secure communication.
Note
AWS CloudTrail hasbuilt-in limitationsin its LookupEvents API. It allows no more than two transactions per second (TPS) per account, and each query can return a maximum of 50 records. Consequently, if a single tenant constantly generates more than 100 records per second in one region, backlogs and delays in data ingestion will result.
Currently, you can only connect your AWS Commercial CloudTrail to Microsoft Sentinel and not AWS GovCloud CloudTrail.
Prerequisites
You must have write permission on the Microsoft Sentinel workspace.
Install the Amazon Web Services solution from theContent Hubin Microsoft Sentinel. For more information, seeDiscover and manage Microsoft Sentinel out-of-the-box content.
Note
Microsoft Sentinel collects CloudTrail management events from all regions. It is recommended that you do not stream events from one region to another.
Connect AWS CloudTrail
Setting up this connector has two steps:
Create an AWS assumed role and grant access to the AWS Sentinel account
Add the AWS role information to the AWS CloudTrail data connector
In Microsoft Sentinel, selectData connectorsfrom the navigation menu.
In Microsoft Sentinel, selectData connectorsfrom the navigation menu.
SelectAmazon Web Servicesfrom the data connectors gallery.If you don't see the connector, install the Amazon Web Services solution from theContent Hubin Microsoft Sentinel. For more information, seeDiscover and manage Microsoft Sentinel out-of-the-box content.
SelectAmazon Web Servicesfrom the data connectors gallery.
If you don't see the connector, install the Amazon Web Services solution from theContent Hubin Microsoft Sentinel. For more information, seeDiscover and manage Microsoft Sentinel out-of-the-box content.
In the details pane for the connector, selectOpen connector page.
In the details pane for the connector, selectOpen connector page.
UnderConfiguration, copy theMicrosoft account IDand theExternal ID (Workspace ID)to your clipboard.
UnderConfiguration, copy theMicrosoft account IDand theExternal ID (Workspace ID)to your clipboard.
In a different browser window or tab, open the AWS console. Follow theinstructions in the AWS documentation for creating a role for an AWS account.For the account type, instead ofThis account, chooseAnother AWS account.In theAccount IDfield, enter the number197857026523(or paste itâthe Microsoft account ID you copied in the previous stepâfrom your clipboard). This number isMicrosoft Sentinel's service account ID for AWS. It tells AWS that the account using this role is a Microsoft Sentinel user.In the options, selectRequire external ID(do notselectRequire MFA). In theExternal IDfield, paste your Microsoft SentinelWorkspace IDthat you copied in the previous step. This identifiesyour specific Microsoft Sentinel accountto AWS.Assign theAWSCloudTrailReadOnlyAccesspermissions policy. Add a tag if you want.Name the role with a meaningful name that includes a reference to Microsoft Sentinel. Example: "MicrosoftSentinelRole".
In a different browser window or tab, open the AWS console. Follow theinstructions in the AWS documentation for creating a role for an AWS account.
For the account type, instead ofThis account, chooseAnother AWS account.
For the account type, instead ofThis account, chooseAnother AWS account.
In theAccount IDfield, enter the number197857026523(or paste itâthe Microsoft account ID you copied in the previous stepâfrom your clipboard). This number isMicrosoft Sentinel's service account ID for AWS. It tells AWS that the account using this role is a Microsoft Sentinel user.
In theAccount IDfield, enter the number197857026523(or paste itâthe Microsoft account ID you copied in the previous stepâfrom your clipboard). This number isMicrosoft Sentinel's service account ID for AWS. It tells AWS that the account using this role is a Microsoft Sentinel user.
In the options, selectRequire external ID(do notselectRequire MFA). In theExternal IDfield, paste your Microsoft SentinelWorkspace IDthat you copied in the previous step. This identifiesyour specific Microsoft Sentinel accountto AWS.
In the options, selectRequire external ID(do notselectRequire MFA). In theExternal IDfield, paste your Microsoft SentinelWorkspace IDthat you copied in the previous step. This identifiesyour specific Microsoft Sentinel accountto AWS.
Assign theAWSCloudTrailReadOnlyAccesspermissions policy. Add a tag if you want.
Assign theAWSCloudTrailReadOnlyAccesspermissions policy. Add a tag if you want.
AWSCloudTrailReadOnlyAccess
Name the role with a meaningful name that includes a reference to Microsoft Sentinel. Example: "MicrosoftSentinelRole".
Name the role with a meaningful name that includes a reference to Microsoft Sentinel. Example: "MicrosoftSentinelRole".
In the browser tab open to the AWS console, enter theIdentity and Access Management (IAM)service and navigate to the list ofRoles. Select the role you created above.
In the browser tab open to the AWS console, enter theIdentity and Access Management (IAM)service and navigate to the list ofRoles. Select the role you created above.
Copy theARNto your clipboard.
Copy theARNto your clipboard.
Return to your Microsoft Sentinel browser tab, which should be open to theAmazon Web Servicesdata connector page. In theConfigurationsection, paste theRole ARNinto theRole to addfield and selectAdd.
Return to your Microsoft Sentinel browser tab, which should be open to theAmazon Web Servicesdata connector page. In theConfigurationsection, paste theRole ARNinto theRole to addfield and selectAdd.

To use the relevant schema in Log Analytics for AWS events, search forAWSCloudTrail.ImportantAs of December 1, 2020, theAwsRequestIdfield has been replaced by theAwsRequestId_field (note the added underscore). The data in the oldAwsRequestIdfield will be preserved through the end of the customer's specified data retention period.
To use the relevant schema in Log Analytics for AWS events, search forAWSCloudTrail.
Important
As of December 1, 2020, theAwsRequestIdfield has been replaced by theAwsRequestId_field (note the added underscore). The data in the oldAwsRequestIdfield will be preserved through the end of the customer's specified data retention period.
Next steps
In this document, you learned how to connect to AWS resources to ingest their logs into Microsoft Sentinel. To learn more about Microsoft Sentinel, see the following articles:
Learn how toget visibility into your data, and potential threats.
Get starteddetecting threats with Microsoft Sentinel.
Use workbooksto monitor your data.
Feedback
Was this page helpful?
Additional resources