Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Monitor Azure Cosmos DB data using Azure Monitor Log Analytics diagnostic settings
Article
2024-08-14
8 contributors
In this article
APPLIES TO:NoSQLMongoDBCassandraGremlinTable
Diagnostic settings in Azure are used to collect resource logs. Resources emit Azure resource Logs and provide rich, frequent data about the operation of that resource. These logs are captured per request and they're also referred to asdata plane logs. Some examples of the data plane operations include delete, insert, and readFeed. The content of these logs varies by resource type.
To learn more about diagnostic settings, seeDiagnostic settings in Azure Monitor.
Note
We recommend creating the diagnostic setting in resource-specific mode (for all APIs except API for Table) following the instructions in theREST APItab. This option provides additional cost-optimizations with an improved view for handling data.
Prerequisites
An existing Azure Cosmos DB account.If you have an Azure subscription,create a new account.If you don't have an Azure subscription, create afree accountbefore you begin.Alternatively, you cantry Azure Cosmos DB freebefore you commit.
If you have an Azure subscription,create a new account.
If you don't have an Azure subscription, create afree accountbefore you begin.
Alternatively, you cantry Azure Cosmos DB freebefore you commit.
An existing Azure Monitor Log Analytics workspace.
Warning
If you need to delete a resource, rename, or move a resource, or migrate it across resource groups or subscriptions, first delete its diagnostic settings. Otherwise, if you recreate this resource, the diagnostic settings for the deleted resource could be included with the new resource, depending on the resource configuration for each resource. If the diagnostics settings are included with the new resource, this resumes the collection of resource logs as defined in the diagnostic setting and sends the applicable metric and log data to the previously configured destination.
Also, it's a good practice to delete the diagnostic settings for a resource you're going to delete and don't plan on using again to keep your environment clean.
Create diagnostic settings
Here, we walk through the process of creating diagnostic settings for your account.
Note
The metric to logs export as a category is not currently supported.
Azure portal
Azure CLI
REST API
Bicep
ARM Template
Sign in to theAzure portal.
Sign in to theAzure portal.
Navigate to your existing Azure Cosmos DB account.
Navigate to your existing Azure Cosmos DB account.
In theMonitoringsection of the resource menu, selectDiagnostic settings. Then, select theAdd diagnostic settingoption.ImportantYou might see a prompt to "enable full-text query [...] for more detailed logging" if thefull-text queryfeature is not enabled in your account. You can safely ignore this warning if you do not wish to enable this feature. For more information, seeenable full-text query.
In theMonitoringsection of the resource menu, selectDiagnostic settings. Then, select theAdd diagnostic settingoption.

Important
You might see a prompt to "enable full-text query [...] for more detailed logging" if thefull-text queryfeature is not enabled in your account. You can safely ignore this warning if you do not wish to enable this feature. For more information, seeenable full-text query.
In theDiagnostic settingspane, name the settingexample-settingand then select theQueryRuntimeStatisticscategory. EnableSend to Log Analytics Workspacecheckbox, selecting your existing workspace. Finally, selectResource specificas the destination option.
In theDiagnostic settingspane, name the settingexample-settingand then select theQueryRuntimeStatisticscategory. EnableSend to Log Analytics Workspacecheckbox, selecting your existing workspace. Finally, selectResource specificas the destination option.

Use theaz monitor diagnostic-settings createcommand to create a diagnostic setting with the Azure CLI. See the documentation for this command for descriptions of its parameters.
az monitor diagnostic-settings create
Ensure you logged in to the Azure CLI. For more information, seesign in with Azure CLI.
Ensure you logged in to the Azure CLI. For more information, seesign in with Azure CLI.
Useaz monitor diagnostic-settings createto create the setting.az monitor diagnostic-settings create \
  --resource $(az cosmosdb show \
    --resource-group "<resource-group-name>" \
    --name "<account-name>" \
    --query "id" \
    --output "tsv" \
  ) \
  --workspace $(az monitor log-analytics workspace show \
    --resource-group "<resource-group-name>" \
    --name "<account-name>" \
    --query "id" \
    --output "tsv" \
  ) \
  --name "example-setting" \
  --export-to-resource-specific true \
  --logs '[
    {
      "category": "QueryRuntimeStatistics",
      "enabled": true
    }
  ]'ImportantThis sample uses the--export-to-resource-specificargument to enable resource-specific tables.
Useaz monitor diagnostic-settings createto create the setting.
az monitor diagnostic-settings create
az monitor diagnostic-settings create \
  --resource $(az cosmosdb show \
    --resource-group "<resource-group-name>" \
    --name "<account-name>" \
    --query "id" \
    --output "tsv" \
  ) \
  --workspace $(az monitor log-analytics workspace show \
    --resource-group "<resource-group-name>" \
    --name "<account-name>" \
    --query "id" \
    --output "tsv" \
  ) \
  --name "example-setting" \
  --export-to-resource-specific true \
  --logs '[
    {
      "category": "QueryRuntimeStatistics",
      "enabled": true
    }
  ]'
az monitor diagnostic-settings create \
  --resource $(az cosmosdb show \
    --resource-group "<resource-group-name>" \
    --name "<account-name>" \
    --query "id" \
    --output "tsv" \
  ) \
  --workspace $(az monitor log-analytics workspace show \
    --resource-group "<resource-group-name>" \
    --name "<account-name>" \
    --query "id" \
    --output "tsv" \
  ) \
  --name "example-setting" \
  --export-to-resource-specific true \
  --logs '[
    {
      "category": "QueryRuntimeStatistics",
      "enabled": true
    }
  ]'
Important
This sample uses the--export-to-resource-specificargument to enable resource-specific tables.
--export-to-resource-specific
Review the results of creating your new setting usingaz monitor diagnostics-settings show.az monitor diagnostic-settings show \
  --name "example-setting" \
  --resource $(az cosmosdb show \
    --resource-group "<resource-group-name>" \
    --name "<account-name>" \
    --query "id" \
    --output "tsv" \
  )
Review the results of creating your new setting usingaz monitor diagnostics-settings show.
az monitor diagnostics-settings show
az monitor diagnostic-settings show \
  --name "example-setting" \
  --resource $(az cosmosdb show \
    --resource-group "<resource-group-name>" \
    --name "<account-name>" \
    --query "id" \
    --output "tsv" \
  )
az monitor diagnostic-settings show \
  --name "example-setting" \
  --resource $(az cosmosdb show \
    --resource-group "<resource-group-name>" \
    --name "<account-name>" \
    --query "id" \
    --output "tsv" \
  )
Use theAzure Monitor REST APIfor creating a diagnostic setting via the interactive console.
Ensure you logged in to the Azure CLI. For more information, seesign in with Azure CLI.
Ensure you logged in to the Azure CLI. For more information, seesign in with Azure CLI.
Create the diagnostic setting for your Azure Cosmos DB resource using an HTTPPUTrequest andaz rest.diagnosticSettingName="example-setting"

resourceId=$(az cosmosdb show \
  --resource-group "<resource-group-name>" \
  --name "<account-name>" \
  --query "id" \
  --output "tsv" \
)

workspaceId=$(az monitor log-analytics workspace show \
  --resource-group "<resource-group-name>" \
  --name "<account-name>" \
  --query "id" \
  --output "tsv" \
)

az rest \
  --method "PUT" \
  --url "$resourceId/providers/Microsoft.Insights/diagnosticSettings/$diagnosticSettingName" \
  --url-parameters "api-version=2021-05-01-preview" \
  --body '{
    "properties": {
      "workspaceId": "'"$workspaceId"'",
      "logs": [
        {
          "category": "QueryRuntimeStatistics",
          "enabled": true
        }
      ],
      "logAnalyticsDestinationType": "Dedicated"
    }
  }'ImportantThis sample sets thelogAnalyticsDestinationTypeproperty toDedicatedto enable resource-specific tables.
Create the diagnostic setting for your Azure Cosmos DB resource using an HTTPPUTrequest andaz rest.
PUT
az rest
diagnosticSettingName="example-setting"

resourceId=$(az cosmosdb show \
  --resource-group "<resource-group-name>" \
  --name "<account-name>" \
  --query "id" \
  --output "tsv" \
)

workspaceId=$(az monitor log-analytics workspace show \
  --resource-group "<resource-group-name>" \
  --name "<account-name>" \
  --query "id" \
  --output "tsv" \
)

az rest \
  --method "PUT" \
  --url "$resourceId/providers/Microsoft.Insights/diagnosticSettings/$diagnosticSettingName" \
  --url-parameters "api-version=2021-05-01-preview" \
  --body '{
    "properties": {
      "workspaceId": "'"$workspaceId"'",
      "logs": [
        {
          "category": "QueryRuntimeStatistics",
          "enabled": true
        }
      ],
      "logAnalyticsDestinationType": "Dedicated"
    }
  }'
diagnosticSettingName="example-setting"

resourceId=$(az cosmosdb show \
  --resource-group "<resource-group-name>" \
  --name "<account-name>" \
  --query "id" \
  --output "tsv" \
)

workspaceId=$(az monitor log-analytics workspace show \
  --resource-group "<resource-group-name>" \
  --name "<account-name>" \
  --query "id" \
  --output "tsv" \
)

az rest \
  --method "PUT" \
  --url "$resourceId/providers/Microsoft.Insights/diagnosticSettings/$diagnosticSettingName" \
  --url-parameters "api-version=2021-05-01-preview" \
  --body '{
    "properties": {
      "workspaceId": "'"$workspaceId"'",
      "logs": [
        {
          "category": "QueryRuntimeStatistics",
          "enabled": true
        }
      ],
      "logAnalyticsDestinationType": "Dedicated"
    }
  }'
Important
This sample sets thelogAnalyticsDestinationTypeproperty toDedicatedto enable resource-specific tables.
logAnalyticsDestinationType
Dedicated
Useaz restagain with an HTTPGETverb to get the properties of the diagnostic setting.diagnosticSettingName="example-setting"

resourceId=$(az cosmosdb show \
  --resource-group "<resource-group-name>" \
  --name "<account-name>" \
  --query "id" \
  --output "tsv" \
)

az rest \
  --method "GET" \
  --url "$resourceId/providers/Microsoft.Insights/diagnosticSettings/$diagnosticSettingName" \
  --url-parameters "api-version=2021-05-01-preview"
Useaz restagain with an HTTPGETverb to get the properties of the diagnostic setting.
az rest
GET
diagnosticSettingName="example-setting"

resourceId=$(az cosmosdb show \
  --resource-group "<resource-group-name>" \
  --name "<account-name>" \
  --query "id" \
  --output "tsv" \
)

az rest \
  --method "GET" \
  --url "$resourceId/providers/Microsoft.Insights/diagnosticSettings/$diagnosticSettingName" \
  --url-parameters "api-version=2021-05-01-preview"
diagnosticSettingName="example-setting"

resourceId=$(az cosmosdb show \
  --resource-group "<resource-group-name>" \
  --name "<account-name>" \
  --query "id" \
  --output "tsv" \
)

az rest \
  --method "GET" \
  --url "$resourceId/providers/Microsoft.Insights/diagnosticSettings/$diagnosticSettingName" \
  --url-parameters "api-version=2021-05-01-preview"
Use anBicep templateto create the diagnostic setting.
Ensure you logged in to the Azure CLI. For more information, seesign in with Azure CLI.
Ensure you logged in to the Azure CLI. For more information, seesign in with Azure CLI.
Create a new file nameddiagnosticSetting.bicep.
Create a new file nameddiagnosticSetting.bicep.
diagnosticSetting.bicep
Enter the following Bicep template content that deploys the diagnostic setting for your Azure Cosmos DB resource.@description('The name of the diagnostic setting to create.')
param diagnosticSettingName string = 'example-setting'

@description('The name of the Azure Cosmos DB account to monitor.')
param azureCosmosDbAccountName string

@description('The name of the Azure Monitor Log Analytics workspace to use.')
param logAnalyticsWorkspaceName string

resource azureCosmosDbAccount 'Microsoft.DocumentDB/databaseAccounts@2021-06-15' existing = {
  name: azureCosmosDbAccountName
}

resource logAnalyticsWorkspace 'Microsoft.OperationalInsights/workspaces@2023-09-01' existing = {
  name: logAnalyticsWorkspaceName
}

resource diagnosticSetting 'Microsoft.Insights/diagnosticSettings@2021-05-01-preview' = {
  name: diagnosticSettingName
  scope: azureCosmosDbAccount
  properties: {
    workspaceId: logAnalyticsWorkspace.id
    logAnalyticsDestinationType: 'Dedicated'
    logs: [
      {
        category: 'QueryRuntimeStatistics'
        enabled: true
      }
    ]
  }
}ImportantThis sample sets thelogAnalyticsDestinationTypeproperty toDedicatedto enable resource-specific tables.
Enter the following Bicep template content that deploys the diagnostic setting for your Azure Cosmos DB resource.
@description('The name of the diagnostic setting to create.')
param diagnosticSettingName string = 'example-setting'

@description('The name of the Azure Cosmos DB account to monitor.')
param azureCosmosDbAccountName string

@description('The name of the Azure Monitor Log Analytics workspace to use.')
param logAnalyticsWorkspaceName string

resource azureCosmosDbAccount 'Microsoft.DocumentDB/databaseAccounts@2021-06-15' existing = {
  name: azureCosmosDbAccountName
}

resource logAnalyticsWorkspace 'Microsoft.OperationalInsights/workspaces@2023-09-01' existing = {
  name: logAnalyticsWorkspaceName
}

resource diagnosticSetting 'Microsoft.Insights/diagnosticSettings@2021-05-01-preview' = {
  name: diagnosticSettingName
  scope: azureCosmosDbAccount
  properties: {
    workspaceId: logAnalyticsWorkspace.id
    logAnalyticsDestinationType: 'Dedicated'
    logs: [
      {
        category: 'QueryRuntimeStatistics'
        enabled: true
      }
    ]
  }
}
@description('The name of the diagnostic setting to create.')
param diagnosticSettingName string = 'example-setting'

@description('The name of the Azure Cosmos DB account to monitor.')
param azureCosmosDbAccountName string

@description('The name of the Azure Monitor Log Analytics workspace to use.')
param logAnalyticsWorkspaceName string

resource azureCosmosDbAccount 'Microsoft.DocumentDB/databaseAccounts@2021-06-15' existing = {
  name: azureCosmosDbAccountName
}

resource logAnalyticsWorkspace 'Microsoft.OperationalInsights/workspaces@2023-09-01' existing = {
  name: logAnalyticsWorkspaceName
}

resource diagnosticSetting 'Microsoft.Insights/diagnosticSettings@2021-05-01-preview' = {
  name: diagnosticSettingName
  scope: azureCosmosDbAccount
  properties: {
    workspaceId: logAnalyticsWorkspace.id
    logAnalyticsDestinationType: 'Dedicated'
    logs: [
      {
        category: 'QueryRuntimeStatistics'
        enabled: true
      }
    ]
  }
}
Important
This sample sets thelogAnalyticsDestinationTypeproperty toDedicatedto enable resource-specific tables.
logAnalyticsDestinationType
Dedicated
Deploy the template usingaz deployment group create.az deployment group create \
    --resource-group "<resource-group-name>" \
    --template-file diagnosticSetting.bicep \
    --parameters \
      azureCosmosDbAccountName="<azure-cosmos-db-account-name>" \
      logAnalyticsWorkspaceName="<log-analytics-workspace-name>"TipUse theaz bicep buildcommand to convert the Bicep template to an Azure Resource Manager template.
Deploy the template usingaz deployment group create.
az deployment group create
az deployment group create \
    --resource-group "<resource-group-name>" \
    --template-file diagnosticSetting.bicep \
    --parameters \
      azureCosmosDbAccountName="<azure-cosmos-db-account-name>" \
      logAnalyticsWorkspaceName="<log-analytics-workspace-name>"
az deployment group create \
    --resource-group "<resource-group-name>" \
    --template-file diagnosticSetting.bicep \
    --parameters \
      azureCosmosDbAccountName="<azure-cosmos-db-account-name>" \
      logAnalyticsWorkspaceName="<log-analytics-workspace-name>"
Tip
Use theaz bicep buildcommand to convert the Bicep template to an Azure Resource Manager template.
az bicep build
Use anAzure Resource Manager templateto create the diagnostic setting.
Ensure you logged in to the Azure CLI. For more information, seesign in with Azure CLI.
Ensure you logged in to the Azure CLI. For more information, seesign in with Azure CLI.
Create a new file nameddiagnosticSetting.bicep.
Create a new file nameddiagnosticSetting.bicep.
diagnosticSetting.bicep
Enter the following Azure Resource Manager template content that deploys the diagnostic setting for your Azure Cosmos DB resource.{
  "$schema": "<https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#>",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "diagnosticSettingName": {
      "type": "string",
      "defaultValue": "example-setting",
      "metadata": {
        "description": "The name of the diagnostic setting to create."
      }
    },
    "azureCosmosDbAccountName": {
      "type": "string",
      "metadata": {
        "description": "The name of the Azure Cosmos DB account to monitor."
      }
    },
    "logAnalyticsWorkspaceName": {
      "type": "string",
      "metadata": {
        "description": "The name of the Azure Monitor Log Analytics workspace to use."
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.Insights/diagnosticSettings",
      "apiVersion": "2021-05-01-preview",
      "scope": "[format('Microsoft.DocumentDB/databaseAccounts/{0}', parameters('azureCosmosDbAccountName'))]",
      "name": "[parameters('diagnosticSettingName')]",
      "properties": {
        "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]",
        "logAnalyticsDestinationType": "Dedicated",
        "logs": [
          {
            "category": "QueryRuntimeStatistics",
            "enabled": true
          }
        ]
      }
    }
  ]
}ImportantThis sample sets thelogAnalyticsDestinationTypeproperty toDedicatedto enable resource-specific tables.
Enter the following Azure Resource Manager template content that deploys the diagnostic setting for your Azure Cosmos DB resource.
{
  "$schema": "<https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#>",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "diagnosticSettingName": {
      "type": "string",
      "defaultValue": "example-setting",
      "metadata": {
        "description": "The name of the diagnostic setting to create."
      }
    },
    "azureCosmosDbAccountName": {
      "type": "string",
      "metadata": {
        "description": "The name of the Azure Cosmos DB account to monitor."
      }
    },
    "logAnalyticsWorkspaceName": {
      "type": "string",
      "metadata": {
        "description": "The name of the Azure Monitor Log Analytics workspace to use."
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.Insights/diagnosticSettings",
      "apiVersion": "2021-05-01-preview",
      "scope": "[format('Microsoft.DocumentDB/databaseAccounts/{0}', parameters('azureCosmosDbAccountName'))]",
      "name": "[parameters('diagnosticSettingName')]",
      "properties": {
        "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]",
        "logAnalyticsDestinationType": "Dedicated",
        "logs": [
          {
            "category": "QueryRuntimeStatistics",
            "enabled": true
          }
        ]
      }
    }
  ]
}
{
  "$schema": "<https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#>",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "diagnosticSettingName": {
      "type": "string",
      "defaultValue": "example-setting",
      "metadata": {
        "description": "The name of the diagnostic setting to create."
      }
    },
    "azureCosmosDbAccountName": {
      "type": "string",
      "metadata": {
        "description": "The name of the Azure Cosmos DB account to monitor."
      }
    },
    "logAnalyticsWorkspaceName": {
      "type": "string",
      "metadata": {
        "description": "The name of the Azure Monitor Log Analytics workspace to use."
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.Insights/diagnosticSettings",
      "apiVersion": "2021-05-01-preview",
      "scope": "[format('Microsoft.DocumentDB/databaseAccounts/{0}', parameters('azureCosmosDbAccountName'))]",
      "name": "[parameters('diagnosticSettingName')]",
      "properties": {
        "workspaceId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]",
        "logAnalyticsDestinationType": "Dedicated",
        "logs": [
          {
            "category": "QueryRuntimeStatistics",
            "enabled": true
          }
        ]
      }
    }
  ]
}
Important
This sample sets thelogAnalyticsDestinationTypeproperty toDedicatedto enable resource-specific tables.
logAnalyticsDestinationType
Dedicated
Deploy the template usingaz deployment group create.az deployment group create \
    --resource-group "<resource-group-name>" \
    --template-file azuredeploy.json \
    --parameters \
      azureCosmosDbAccountName="<azure-cosmos-db-account-name>" \
      logAnalyticsWorkspaceName="<log-analytics-workspace-name>"TipUse theaz bicep decompilecommand to convert the Azure Resource Manager template to a Bicep template.
Deploy the template usingaz deployment group create.
az deployment group create
az deployment group create \
    --resource-group "<resource-group-name>" \
    --template-file azuredeploy.json \
    --parameters \
      azureCosmosDbAccountName="<azure-cosmos-db-account-name>" \
      logAnalyticsWorkspaceName="<log-analytics-workspace-name>"
az deployment group create \
    --resource-group "<resource-group-name>" \
    --template-file azuredeploy.json \
    --parameters \
      azureCosmosDbAccountName="<azure-cosmos-db-account-name>" \
      logAnalyticsWorkspaceName="<log-analytics-workspace-name>"
Tip
Use theaz bicep decompilecommand to convert the Azure Resource Manager template to a Bicep template.
az bicep decompile
Enable full-text query for logging query text
Azure Cosmos DB provides advanced logging for detailed troubleshooting. By enabling full-text query, you're able to view the deobfuscated query for all requests within your Azure Cosmos DB account. You also give permission for Azure Cosmos DB to access and surface this data in your logs.
Warning
Enabling this feature may result in additional logging costs, for pricing details visitAzure Monitor pricing. It is recommended to disable this feature after troubleshooting.
Azure portal
Azure CLI / REST API / Bicep / ARM Template
On the existing Azure Cosmos DB account page, select theFeaturesoption within theSettingssection of the resource menu. Then, select theDiagnostics full-text queryfeature.
On the existing Azure Cosmos DB account page, select theFeaturesoption within theSettingssection of the resource menu. Then, select theDiagnostics full-text queryfeature.

In the dialog, selectEnable. This setting is applied within a few minutes. All newly ingested logs now have the full-text or PIICommand text for each request.
In the dialog, selectEnable. This setting is applied within a few minutes. All newly ingested logs now have the full-text or PIICommand text for each request.
Enable

Use the Azure CLI to enable full-text query for your Azure Cosmos DB account.
Enable full-text query usingaz restagain with an HTTPPATCHverb and a JSON payload.az rest \
  --method "PATCH" \
  --url $(az cosmosdb show \
    --resource-group "<resource-group-name>" \
    --name "<account-name>" \
    --query "id" \
    --output "tsv" \
  ) \
  --url-parameters "api-version=2021-05-01-preview" \
  --body '{
    "properties": {
      "diagnosticLogSettings": {
        "enableFullTextQuery": "True"
      }
    }
  }'
Enable full-text query usingaz restagain with an HTTPPATCHverb and a JSON payload.
az rest
PATCH
az rest \
  --method "PATCH" \
  --url $(az cosmosdb show \
    --resource-group "<resource-group-name>" \
    --name "<account-name>" \
    --query "id" \
    --output "tsv" \
  ) \
  --url-parameters "api-version=2021-05-01-preview" \
  --body '{
    "properties": {
      "diagnosticLogSettings": {
        "enableFullTextQuery": "True"
      }
    }
  }'
az rest \
  --method "PATCH" \
  --url $(az cosmosdb show \
    --resource-group "<resource-group-name>" \
    --name "<account-name>" \
    --query "id" \
    --output "tsv" \
  ) \
  --url-parameters "api-version=2021-05-01-preview" \
  --body '{
    "properties": {
      "diagnosticLogSettings": {
        "enableFullTextQuery": "True"
      }
    }
  }'
Wait a few minutes for the operation to complete. Check the status of full-text query by usingaz restagain with HTTPGET.az rest \
  --method "GET" \
  --url $(az cosmosdb show \
    --resource-group "<resource-group-name>" \
    --name "<account-name>" \
    --query "id" \
    --output "tsv" \
  ) \
  --url-parameters "api-version=2021-05-01-preview" \
  --query "{accountName:name,fullTextQueryEnabled:properties.diagnosticLogSettings.enableFullTextQuery}"The output should be similar to this example.{
  "accountName": "<account-name>",
  "fullTextQueryEnabled": "True"
}
Wait a few minutes for the operation to complete. Check the status of full-text query by usingaz restagain with HTTPGET.
az rest
GET
az rest \
  --method "GET" \
  --url $(az cosmosdb show \
    --resource-group "<resource-group-name>" \
    --name "<account-name>" \
    --query "id" \
    --output "tsv" \
  ) \
  --url-parameters "api-version=2021-05-01-preview" \
  --query "{accountName:name,fullTextQueryEnabled:properties.diagnosticLogSettings.enableFullTextQuery}"
az rest \
  --method "GET" \
  --url $(az cosmosdb show \
    --resource-group "<resource-group-name>" \
    --name "<account-name>" \
    --query "id" \
    --output "tsv" \
  ) \
  --url-parameters "api-version=2021-05-01-preview" \
  --query "{accountName:name,fullTextQueryEnabled:properties.diagnosticLogSettings.enableFullTextQuery}"
The output should be similar to this example.
{
  "accountName": "<account-name>",
  "fullTextQueryEnabled": "True"
}
{
  "accountName": "<account-name>",
  "fullTextQueryEnabled": "True"
}
Related content
Diagnostic queries in API for NoSQL
Diagnostic queries in API for MongoDB
Diagnostic queries in API for Apache Cassandra
Feedback
Was this page helpful?
Additional resources