Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Integrate Azure Automation State Configuration with Azure Monitor Logs
Article
2024-10-22
15 contributors
In this article
Note
Azure Automation State Configuration will be retired on September 30, 2027, please transition toAzure Machine Configurationby that date. For more information, see theblog postannouncement. The Azure Machine Configuration service combines features of DSC Extension, Azure
Automation State Configuration, and the most commonly requested features from customer feedback.
Azure Machine Configuration also includes hybrid machine support throughArc-enabled servers.
Important
TheAdd,Compose configuration, andGallerynavigation links will be removed from the
portal on March 31, 2025.
Caution
Azure Automation DSC for Linux has retired on 30 September 2023. For more information, see theannouncement.
Azure Automation State Configuration retains node status data for 30 days. You can send node status
data toAzure Monitor Logsif you prefer to retain this data for a longer period. Compliance
status is visible in the Azure portal or with PowerShell, for nodes and for individual DSC resources
in node configurations.
Azure Monitor Logs provides greater operational visibility to your Automation State Configuration
data and can help address incidents more quickly. With Azure Monitor Logs you can:
Get compliance information for managed nodes and individual resources.
Trigger an email or alert based on compliance status.
Write advanced queries across your managed nodes.
Correlate compliance status across Automation accounts.
Use custom views and search queries to visualize your runbook results, runbook job status, and
other related key indicators or metrics.
Note
This article was recently updated to use the term Azure Monitor logs instead of Log Analytics. Log data is still stored in a Log Analytics workspace and is still collected and analyzed by the same Log Analytics service. We are updating the terminology to better reflect the role oflogs in Azure Monitor. SeeAzure Monitor terminology changesfor details.
Prerequisites
To start sending your Automation State Configuration reports to Azure Monitor Logs, you need:
TheAz PowerShell module Module. Ensure you have the latest version. If necessary, runUpdate-Module -Name Az.
Update-Module -Name Az
An Azure Automation account. For more information, seeAn introduction to Azure Automation.
A Log Analytics workspace. For more information, seeAzure Monitor Logs overview.
At least one Azure Automation State Configuration node. For more information, seeOnboarding machines for management by Azure Automation State Configuration.
ThexDscDiagnosticsmodule, version 2.7.0.0 or greater. For installation steps, seeTroubleshoot Azure Automation Desired State Configuration.
Set up integration with Azure Monitor Logs
To begin importing data from Azure Automation State Configuration into Azure Monitor Logs, complete
the following steps. For steps using the Portal, seeForward Azure Automation job data to Azure Monitor Logs.
From your machine, sign in to your Azure subscription with the PowerShellConnect-AzAccountcmdlet and follow the on-screen directions.# Sign in to your Azure subscription
$sub = Get-AzSubscription -ErrorAction SilentlyContinue
if (-not($sub)) {
    Connect-AzAccount
}
# If you have multiple subscriptions, set the one to use
# Select-AzSubscription -SubscriptionId "<SUBSCRIPTIONID>"
From your machine, sign in to your Azure subscription with the PowerShellConnect-AzAccountcmdlet and follow the on-screen directions.
# Sign in to your Azure subscription
$sub = Get-AzSubscription -ErrorAction SilentlyContinue
if (-not($sub)) {
    Connect-AzAccount
}
# If you have multiple subscriptions, set the one to use
# Select-AzSubscription -SubscriptionId "<SUBSCRIPTIONID>"
# Sign in to your Azure subscription
$sub = Get-AzSubscription -ErrorAction SilentlyContinue
if (-not($sub)) {
    Connect-AzAccount
}
# If you have multiple subscriptions, set the one to use
# Select-AzSubscription -SubscriptionId "<SUBSCRIPTIONID>"
Provide an appropriate value for the variablesautomationAccountwith the actual name of your
Automation account, andworkspaceNamewith the actual name of your Log Analytics workspace.
Then execute the script.$automationAccount = "automationAccount"
$law = "workspaceName"
Provide an appropriate value for the variablesautomationAccountwith the actual name of your
Automation account, andworkspaceNamewith the actual name of your Log Analytics workspace.
Then execute the script.
automationAccount
workspaceName
$automationAccount = "automationAccount"
$law = "workspaceName"
$automationAccount = "automationAccount"
$law = "workspaceName"
Get the resource ID of your Automation account by running the following PowerShell commands.# Find the ResourceId for the Automation account
$AutomationResourceId = (Get-AzResource -ResourceType 'Microsoft.Automation/automationAccounts' |
   Where-Object {$_.Name -eq $automationAccount}).ResourceId
Get the resource ID of your Automation account by running the following PowerShell commands.
# Find the ResourceId for the Automation account
$AutomationResourceId = (Get-AzResource -ResourceType 'Microsoft.Automation/automationAccounts' |
   Where-Object {$_.Name -eq $automationAccount}).ResourceId
# Find the ResourceId for the Automation account
$AutomationResourceId = (Get-AzResource -ResourceType 'Microsoft.Automation/automationAccounts' |
   Where-Object {$_.Name -eq $automationAccount}).ResourceId
Get the resource ID of your Log Analytics workspace by running the following PowerShell commands.# Find the ResourceId for the Log Analytics workspace
 $WorkspaceResourceId = (Get-AzResource `
     -ResourceType 'Microsoft.OperationalInsights/workspaces' |
     WHERE {$_.Name -eq $law}).ResourceId
Get the resource ID of your Log Analytics workspace by running the following PowerShell commands.
# Find the ResourceId for the Log Analytics workspace
 $WorkspaceResourceId = (Get-AzResource `
     -ResourceType 'Microsoft.OperationalInsights/workspaces' |
     WHERE {$_.Name -eq $law}).ResourceId
# Find the ResourceId for the Log Analytics workspace
 $WorkspaceResourceId = (Get-AzResource `
     -ResourceType 'Microsoft.OperationalInsights/workspaces' |
     WHERE {$_.Name -eq $law}).ResourceId
To configure diagnostic settings on the Automation account to forward DSC node status log data to
Azure Monitor Logs, the following PowerShell cmdlet creates a diagnostic setting using that
destination.$setAzDiagnosticSettingSplat = @{
    ResourceId = $AutomationResourceId
    WorkspaceId = $WorkspaceResourceId
    Enabled = $true
    Category = 'DscNodeStatus'
}
Set-AzDiagnosticSetting @setAzDiagnosticSettingSplatWhen you want to stop forwarding log data from Automation State Configuration to Azure Monitor
Logs, run the following PowerShell cmdlet.$setAzDiagnosticSettingSplat = @{
    ResourceId = $AutomationResourceId
    WorkspaceId = $WorkspaceResourceId
    Enabled = $false
    Category = 'DscNodeStatus'
}
Set-AzDiagnosticSetting @setAzDiagnosticSettingSplat
To configure diagnostic settings on the Automation account to forward DSC node status log data to
Azure Monitor Logs, the following PowerShell cmdlet creates a diagnostic setting using that
destination.
$setAzDiagnosticSettingSplat = @{
    ResourceId = $AutomationResourceId
    WorkspaceId = $WorkspaceResourceId
    Enabled = $true
    Category = 'DscNodeStatus'
}
Set-AzDiagnosticSetting @setAzDiagnosticSettingSplat
$setAzDiagnosticSettingSplat = @{
    ResourceId = $AutomationResourceId
    WorkspaceId = $WorkspaceResourceId
    Enabled = $true
    Category = 'DscNodeStatus'
}
Set-AzDiagnosticSetting @setAzDiagnosticSettingSplat
When you want to stop forwarding log data from Automation State Configuration to Azure Monitor
Logs, run the following PowerShell cmdlet.
$setAzDiagnosticSettingSplat = @{
    ResourceId = $AutomationResourceId
    WorkspaceId = $WorkspaceResourceId
    Enabled = $false
    Category = 'DscNodeStatus'
}
Set-AzDiagnosticSetting @setAzDiagnosticSettingSplat
$setAzDiagnosticSettingSplat = @{
    ResourceId = $AutomationResourceId
    WorkspaceId = $WorkspaceResourceId
    Enabled = $false
    Category = 'DscNodeStatus'
}
Set-AzDiagnosticSetting @setAzDiagnosticSettingSplat
View the State Configuration logs
You can search the State Configuration logs for DSC operations by searching in Azure Monitor Logs.
After you set up integration with Azure Monitor Logs for your Automation State Configuration data,
navigate to your Automation account in theAzure portal. Then underMonitoring, selectLogs.

Close theQueriesdialog box. The Log Search pane opens with a query region scoped to your
Automation account resource. The records for DSC operations are stored in theAzureDiagnosticstable. To find nodes that aren't compliant, type the following query.
AzureDiagnostics
AzureDiagnostics
| where Category == "DscNodeStatus"
| where OperationName contains "DSCNodeStatusData"
| where ResultType != "Compliant"
AzureDiagnostics
| where Category == "DscNodeStatus"
| where OperationName contains "DSCNodeStatusData"
| where ResultType != "Compliant"
Filtering details:
Filter onDscNodeStatusDatato return operations for each State Configuration node.
DscNodeStatusData
Filter onDscResourceStatusDatato return operations for each DSC resource called in the node
configuration applied to that resource.
DscResourceStatusData
Filter onDscResourceStatusDatato return error information for any DSC resources that fail.
DscResourceStatusData
To learn more about constructing log queries to find data, seeOverview of log queries in Azure Monitor.
Send an email when a State Configuration compliance check fails
Return to your query created earlier.
Return to your query created earlier.
Click the+ New Alert Rulebutton to start the alert creation flow.
Click the+ New Alert Rulebutton to start the alert creation flow.
In the following query, replaceNODENAMEwith the actual name of the managed node, and then
paste the revised query into theSearch querytext box:AzureDiagnostics
| where Category == "DscNodeStatus"
| where NodeName_s == "NODENAME"
| where OperationName == "DscNodeStatusData"
| where ResultType == "Failed"If you configure logs for more than one Automation account or subscription, you can group your
alerts by subscription and Automation account. Derive the Automation account name from theResourceproperty in the log search results of theDscNodeStatusData.
In the following query, replaceNODENAMEwith the actual name of the managed node, and then
paste the revised query into theSearch querytext box:
NODENAME
AzureDiagnostics
| where Category == "DscNodeStatus"
| where NodeName_s == "NODENAME"
| where OperationName == "DscNodeStatusData"
| where ResultType == "Failed"
AzureDiagnostics
| where Category == "DscNodeStatus"
| where NodeName_s == "NODENAME"
| where OperationName == "DscNodeStatusData"
| where ResultType == "Failed"
If you configure logs for more than one Automation account or subscription, you can group your
alerts by subscription and Automation account. Derive the Automation account name from theResourceproperty in the log search results of theDscNodeStatusData.
Resource
DscNodeStatusData
ReviewCreate, view, and manage metric alerts using Azure Monitorto complete the remaining
steps.
ReviewCreate, view, and manage metric alerts using Azure Monitorto complete the remaining
steps.
Find failed DSC resources across all nodes
One advantage of using Azure Monitor Logs is that you can search for failed checks across nodes. To
find all instances of failures, use the following query:
AzureDiagnostics
| where Category == "DscNodeStatus"
| where OperationName == "DscResourceStatusData"
| where ResultType == "Failed"
AzureDiagnostics
| where Category == "DscNodeStatus"
| where OperationName == "DscResourceStatusData"
| where ResultType == "Failed"
View historical DSC node status
To visualize your DSC node status history over time, you can use this query:
AzureDiagnostics
| where ResourceProvider == "MICROSOFT.AUTOMATION"
| where Category == "DscNodeStatus"
| where ResultType != "started"
| summarize count() by ResultType
AzureDiagnostics
| where ResourceProvider == "MICROSOFT.AUTOMATION"
| where Category == "DscNodeStatus"
| where ResultType != "started"
| summarize count() by ResultType
This query displays a chart of the node status over time.
Azure Monitor Logs records
Azure Automation diagnostics create two categories of records in Azure Monitor Logs:
Node status data (DscNodeStatusData)
DscNodeStatusData
Resource status data (DscResourceStatusData)
DscResourceStatusData
DscNodeStatusData
DscNodeStatusData
ApplyOnly: DSC applies the configuration and does nothing further. After initial application of a new configuration, DSC doesn't check for drift from a previously configured state. DSC attempts to apply the configuration until it's successful before theApplyOnlyvalue takes effect.
ApplyOnly
ApplyOnly
ApplyAndMonitor: This is the default value. The LCM applies any new configurations. After initial application of a new configuration, if the target node drifts from the desired state, DSC reports the discrepancy in logs. DSC attempts to apply the configuration until it's successful before theApplyAndMonitorvalue takes effect.
ApplyAndMonitor
ApplyAndMonitor
ApplyAndAutoCorrect: DSC applies any new configurations. After initial application of a new configuration, if the target node drifts from the desired state, DSC reports the discrepancy in logs, and then reapplies the current configuration.
ApplyAndAutoCorrect
DscNodeStatus
Azure
DscResourceStatusData
DscResourceStatusData
Azure
Next steps
For an overview, seeAzure Automation State Configuration overview.
To get started, seeGet started with Azure Automation State Configuration.
To learn about compiling DSC configurations so that you can assign them to target nodes, seeCompile DSC configurations in Azure Automation State Configuration.
For a PowerShell cmdlet reference, seeAz.Automation.
For pricing information, seeAzure Automation State Configuration pricing.
To see an example of using Azure Automation State Configuration in a continuous deployment
pipeline, seeSetup continuous deployment with Chocolatey.
To learn more about how to construct different search queries and review the Automation State
Configuration logs with Azure Monitor Logs, seeLog searches in Azure Monitor Logs.
To learn more about Azure Monitor Logs and data collection sources, seeCollecting Azure storage data in Azure Monitor Logs overview.
Feedback
Was this page helpful?
Additional resources