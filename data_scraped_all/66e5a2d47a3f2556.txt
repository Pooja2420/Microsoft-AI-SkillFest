Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
About resources for Azure Pipelines
Article
2024-02-01
10 contributors
In this article
Azure DevOps Services | Azure DevOps Server 2022 - Azure DevOps Server 2019
Aresourceis anything used by a pipeline that lives outside the pipeline.
Resources offer the following benefits:
Ways tosharesomething such as a secure file or password across pipelines.Examples of using resources for sharing are variable groups, secure files, and service connections. In all cases, you're using a resource as a way for a pipeline to access and consume something.
Examples of using resources for sharing are variable groups, secure files, and service connections. In all cases, you're using a resource as a way for a pipeline to access and consume something.
A tool for enhancingsecuritythrough access checks and other restrictions.For example, you can limit a service connection to only run on one pipeline. You could also make sure that a repository can only be accessed from a pipeline after a manual approval check.
For example, you can limit a service connection to only run on one pipeline. You could also make sure that a repository can only be accessed from a pipeline after a manual approval check.
Ways to improvetraceabilityfor your pipeline and make it easier to troubleshootenvironments.For example, you can see the number of the last run that was deployed to anenvironment.
For example, you can see the number of the last run that was deployed to anenvironment.
Share resources across pipelines
Share resources across pipelines by configuring them within the pipelines UI. Then, reference those resources in a task. You can also access some shared resources with theresourcesYAML pipeline syntax.
resources
Examples of sharing resources with the pipelines UI includesecure files,variable groups, andservice connections. With theresourcessyntax, examples include accessing pipelines themselves, repositories, and packages.
resources
How a resource gets used in a pipeline depends on the type of pipeline and type of resource.
YAML
Classic
For YAML pipelines:
Service connections and secure files are directly used as inputs to tasks and don't need to be predeclared.
Variable groups use thegroupsyntax.
group
Pipelines and repositories use theresourcessyntax.
resources
For example, to use variable groups in a pipeline, add your variables atPipelines>Library. Then, you can reference the variable group in your YAML pipeline with thevariablessyntax.
variables
variables:
- group: my-variable-group
variables:
- group: my-variable-group
To call a second pipeline from your pipeline with theresourcessyntax, referencepipelines.
resources
pipelines
resources:
  pipelines:
  - pipeline: SmartHotel-resource # identifier for the resource (used in pipeline resource variables)
    source: SmartHotel-CI # name of the pipeline that produces an artifact
resources:
  pipelines:
  - pipeline: SmartHotel-resource # identifier for the resource (used in pipeline resource variables)
    source: SmartHotel-CI # name of the pipeline that produces an artifact
You can reference service connections, variable groups, and secure files with the classic editor. For example, theDeploy Azure App Servicetask here uses theMyAzureAppservice connection as an input.
Deploy Azure App Service
MyAzureApp

Similarly, to share a variable between pipelines with the classic editor, you canlink a variable group.
Use resources to enhance security
You can enhance your pipeline's security with resources by identifying how the resource gets consumed, and how to prevent unauthorized access.
For YAML pipelines only, set resources asprotected or open. When a resource is protected, you can apply approvals and checks to limit access to specific users and YAML pipelines. Protected resources include service connections, agent pools, environments, repositories, variable groups, and secure files.
Use resources for traceability
YAML
Classic
Environments support the following resource types:
Kubernetes
Virtual machines
For Classic release pipelines,deployment groupsoffer traceability tools.
Next steps
Add resources to a pipeline
Related articles
Define variables
Add and use variable groups
Use secure files
Library for Azure Pipelines
Feedback
Was this page helpful?
Additional resources