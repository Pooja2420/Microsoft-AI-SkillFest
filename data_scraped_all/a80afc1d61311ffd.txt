Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Configure continuous deployment to Azure App Service
Article
2025-01-17
14 contributors
In this article

Note
Starting June 1, 2024, newly created App Service apps can generate a unique default host name that uses the naming convention<app-name>-<random-hash>.<region>.azurewebsites.net. For example:myapp-ds27dh7271aah175.westus-01.azurewebsites.net. Existing app names remain unchanged.
<app-name>-<random-hash>.<region>.azurewebsites.net
myapp-ds27dh7271aah175.westus-01.azurewebsites.net
For more information, see theblog post about creating a web app with a unique default host name.
You can configure continuous deployment fromGitHub,Bitbucket, andAzurerepositories by usingAzure App Service, which pulls in the latest updates. This guide provides you with everything you need to get started.
Prepare your repository
To get automated builds from the App Service build server, make sure that your repository root has the correct files in your project.
*.sln
*.csproj
default.aspx
*.sln
*.csproj
index.php
Gemfile
server.js
app.js
package.json
*.py
requirements.txt
runtime.txt
default.htm
default.html
default.asp
index.htm
index.html
iisstart.htm
<job_name>/run.<extension>
App_Data/jobs/continuous
App_Data/jobs/triggered
To customize your deployment, include a.deploymentfile in the repository root. For more information, seeCustomize deploymentsandCustom deployment script.
.deployment
Tip
Visual Studiocan create a repository for you. With this method, your project is immediately ready for deployment via Git.
Configure the deployment source
In theAzure portal, go to the management pane for your App Service app.
In theAzure portal, go to the management pane for your App Service app.
On the left menu, selectDeployment Center. Then selectSettings.
On the left menu, selectDeployment Center. Then selectSettings.
In theSourcebox, select one of theContinuous Deployment (CI/CD)options:
In theSourcebox, select one of theContinuous Deployment (CI/CD)options:

To continue, select the tab that corresponds to your build provider.
GitHub
Bitbucket
Local Git
Azure Repos
Other repositories
GitHub Actionsis the default build provider. To change the provider, selectChange provider>App Service Build Service>OK.
GitHub Actionsis the default build provider. To change the provider, selectChange provider>App Service Build Service>OK.
If you're deploying from GitHub for the first time, selectAuthorizeand follow the authorization prompts. To deploy from another user's repository, selectChange Account.
If you're deploying from GitHub for the first time, selectAuthorizeand follow the authorization prompts. To deploy from another user's repository, selectChange Account.
After you authorize your Azure account with GitHub, select the appropriateOrganization,Repository, andBranch.If you can't find an organization or repository, you might need to enable more permissions on GitHub. For more information, seeManaging access to your organization's repositories.
After you authorize your Azure account with GitHub, select the appropriateOrganization,Repository, andBranch.
If you can't find an organization or repository, you might need to enable more permissions on GitHub. For more information, seeManaging access to your organization's repositories.
UnderAuthentication type, selectUser-assigned identityfor better security. For more information, seeFrequently asked questions.NoteIf your Azure account has therequired permissionsfor theUser-assigned identityoption, Azure creates auser-assigned managed identityfor you. If you don't have the required permissions, work with your Azure administrator to create anidentity with the required role on your app, and then select it in the dropdown.
UnderAuthentication type, selectUser-assigned identityfor better security. For more information, seeFrequently asked questions.
Note
If your Azure account has therequired permissionsfor theUser-assigned identityoption, Azure creates auser-assigned managed identityfor you. If you don't have the required permissions, work with your Azure administrator to create anidentity with the required role on your app, and then select it in the dropdown.
(Optional) To see the file before saving your changes, selectPreview file. App Service selects a workflow template based on your app'slanguage stack settingand commits it into your selected GitHub repository.
(Optional) To see the file before saving your changes, selectPreview file. App Service selects a workflow template based on your app'slanguage stack settingand commits it into your selected GitHub repository.
SelectSave.New commits in the selected repository and branch now deploy continuously into your App Service app. You can track the commits and deployments on theLogstab.
SelectSave.
New commits in the selected repository and branch now deploy continuously into your App Service app. You can track the commits and deployments on theLogstab.
The Bitbucket integration uses the App Service build service for build automation.
If you're deploying from Bitbucket for the first time, selectAuthorizeand follow the authorization prompts. If you want to deploy from another user's repository, selectChange Account.
If you're deploying from Bitbucket for the first time, selectAuthorizeand follow the authorization prompts. If you want to deploy from another user's repository, selectChange Account.
Select the BitbucketTeam,Repository, andBranchthat you want to deploy continuously.
Select the BitbucketTeam,Repository, andBranchthat you want to deploy continuously.
SelectSave.New commits in the selected repository and branch now deploy continuously into your App Service app. You can track the commits and deployments on theLogstab.
SelectSave.
New commits in the selected repository and branch now deploy continuously into your App Service app. You can track the commits and deployments on theLogstab.
SeeLocal Git deployment to Azure App Service.
The build service in App Service is the default build provider.NoteTo use Azure Pipelines as the build provider for your App Service app, configure it directly from Azure Pipelines. Don't configure it in App Service. TheAzure Pipelinesoption just points you in the right direction.
The build service in App Service is the default build provider.
Note
To use Azure Pipelines as the build provider for your App Service app, configure it directly from Azure Pipelines. Don't configure it in App Service. TheAzure Pipelinesoption just points you in the right direction.
Select theAzure DevOps Organization,Project,Repository, andBranchyou want to deploy continuously.If your DevOps organization isn't listed, it's not linked to your Azure subscription. For more information, seeCreate an Azure service connection.
Select theAzure DevOps Organization,Project,Repository, andBranchyou want to deploy continuously.
If your DevOps organization isn't listed, it's not linked to your Azure subscription. For more information, seeCreate an Azure service connection.
For Windows apps, you can manually configure continuous deployment from a cloud Git or Mercurial repository that the portal doesn't directly support, likeGitLab. You do that by selectingExternal Gitin theSourcedropdown list. For more information, seeSet up continuous deployment using manual steps.
Disable continuous deployment
In theAzure portal, go to the management page for your App Service app.
In theAzure portal, go to the management page for your App Service app.
On the left menu, selectDeployment Center. Then selectSettings>Disconnect.
On the left menu, selectDeployment Center. Then selectSettings>Disconnect.

The GitHub Actions workflow file is preserved in your repository by default, but it continues to trigger deployment to your app. To delete the file from your repository, selectDelete workflow file.
The GitHub Actions workflow file is preserved in your repository by default, but it continues to trigger deployment to your app. To delete the file from your repository, selectDelete workflow file.
SelectOK.
SelectOK.
What are the build providers?
Depending on your deployment source inDeployment Center, you might see a few build provider options. Build providers help you build a continuous integration and continuous delivery (CI/CD) solution with Azure App Service by automating build, test, and deployment.
You're not limited to the build provider options found inDeployment Center, but by using App Service, you can set them up quickly and get some integrated deployment logging experience.
GitHub Actions
App Service build service
Azure Pipelines
The GitHub Actions build provider is available only forGitHub deployment. When configured from the app's deployment center, the build provider sets up CI/CD by depositing a GitHub Actions workflow file into your GitHub repository that handles build and deploy tasks to App Service.
For basic authentication, it adds the publish profile for your app as a GitHub secret. The workflow file uses this secret to authenticate with App Service. For user-assigned identity, seeWhat does the user-assigned identity option do for GitHub Actions?
It captures information from theworkflow run logsand displays it on theLogstab inDeployment Center.
You can customize the GitHub Actions build provider in the following ways:
You can customize the workflow file after it generates in your GitHub repository. For more information, seeWorkflow syntax for GitHub Actions. Just make sure that the workflow deploys to App Service with theazure/webapps-deployaction.
azure/webapps-deploy
If the selected branch is protected, you can still preview the workflow file without saving the configuration, and then manually add it to your repository. This method doesn't give you log integration with the Azure portal.
Instead of using basic authentication or a user-assigned identity, you can also deploy by using aservice principalin Microsoft Entra ID. This method can't be configured in the portal.
Note
The App Service build service requiresSCM basic authentication to be enabledfor the webhook to work. For more information, seeDeploy without basic authentication.
The App Service build service is the deployment and build engine native to App Service. When this option is selected, App Service adds a webhook into the repository you authorized. Any code push to the repository triggers the webhook, and App Service pulls the changes into its repository and performs any deployment tasks. For more information, seeDeploying from GitHub (Kudu).
Resources:
Investigate common problems with continuous deployment
Project Kudu
Azure Pipelines is part of Azure DevOps. You can configure a pipeline to build, test, and deploy your app to App Service fromany supported source repository.
To use Azure Pipelines as the build provider, don't configure it in App Service. Go toAzure DevOps directly. InDeployment Center, theAzure Pipelinesoption just points you in the right direction.
For more information, seeDeploy to App Service using Azure Pipelines.
What happens to my app during deployment?
When you use officially supported deployment methods, changes are made to the files in your app's/home/site/wwwrootfolder. These files are used to run your app. The deployment can fail because of locked files. The app might also behave unpredictably during deployment because the files aren't all updated at the same time. This behavior is undesirable for a customer-facing app.
/home/site/wwwroot
There are a few ways to avoid these problems:
Run your app directly from the ZIP package, without unpacking it.
Stop your app or enable offline mode during deployment. For more information, seeDeal with locked files during deployment.
Deploy to astaging slotwithauto swapturned on.
Frequently asked questions
Does the GitHub Actions build provider work with basic authentication if basic authentication is disabled?
What does the user-assigned identity option do for GitHub Actions?
Why do I see the error "This identity does not have write permissions on this app. Please select a different identity, or work with your admin to grant the Website Contributor role to your identity on this app"?
Why do I see the error "This identity does not have write permissions on this app. Please select a different identity, or work with your admin to grant the Website Contributor role to your identity on this app"?
Does the GitHub Actions build provider work with basic authentication if basic authentication is disabled?
No. Try using GitHub Actions with theuser-assigned identityoption.
For more information, seeDeploy without basic authentication.
What does the user-assigned identity option do for GitHub Actions?
When you selectuser-assigned identityunder theGitHub Actionssource, App Service configures all the necessary resources in Azure and GitHub. App Service enables the recommended Microsoft OpenID Connect authentication with GitHub Actions.
Specifically, App Service does the following operations:
Creates a federated credentialbetween a user-assigned managed identity in Azure and your selected repository and branch in GitHub.
Creates the secretsAZURE_CLIENT_ID,AZURE_TENANT_ID, andAZURE_SUBSCRIPTION_IDfrom the federated credential in your selected GitHub repository.
AZURE_CLIENT_ID
AZURE_TENANT_ID
AZURE_SUBSCRIPTION_ID
Assigns the identity to your app.
In a GitHub Actions workflow in your GitHub repository, you can then use theAzure/loginaction to authenticate with your app by using OpenID Connect. For examples, seeAdd the workflow file to your GitHub repository.
Azure/login
If your Azure account has therequired permissions, App Service creates a user-assigned managed identity and configures it for you. This identity isn't shown in theIdentitiespage of your app. If your Azure account doesn't have the required permissions, you must select anexisting identity with the required role.
Why do I see the error "You do not have sufficient permissions on this app to assign role-based access to a managed identity and configure federated credentials"?
The message indicates that your Azure account doesn't have the required permissions to create a user-assigned managed identity for GitHub Actions. The required permissions (scoped to your app) are:
Microsoft.Authorization/roleAssignments/write
Microsoft.Authorization/roleAssignments/write
Microsoft.ManagedIdentity/userAssignedIdentities/write
Microsoft.ManagedIdentity/userAssignedIdentities/write
By default, theUser Access AdministratorandOwnerroles already have these permissions, but theContributorrole doesn't. If you don't have the required permissions, work with your Azure administrator to create a user-assigned managed identity with theWebsites Contributor role. InDeployment Center, you can then select the identity in theGitHub>Identitydropdown.
For more information on using alternative steps, seeDeploy to App Service using GitHub Actions.
Why do I see the error "This identity does not have write permissions on this app. Please select a different identity, or work with your admin to grant the Website Contributor role to your identity on this app"?
The message indicates that the selected user-assigned managed identity doesn't have the required roleto enable OpenID Connectbetween the GitHub repository and the App Service app. The identity must have one of the following roles on the app:Owner,Contributor, orWebsites Contributor. The least privileged role that the identity needs isWebsites Contributor.
Related content
Use Azure PowerShell
Feedback
Was this page helpful?
Additional resources