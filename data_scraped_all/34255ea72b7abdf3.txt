Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Quickstart: Create an Azure Database for PostgreSQL flexible server
Article
2025-03-11
2 contributors
In this article
APPLIES TO:Azure Database for PostgreSQL - Flexible Server
Azure Database for PostgreSQL flexible server is a managed service that allows you to run, manage, and scale highly available PostgreSQL databases in the cloud.
This article shows you how to create an Azure Database for PostgreSQL flexible server using different mechanisms.
Create an Azure Database for PostgreSQL flexible server
If you don't have an Azure subscription, create afree Azure accountbefore you begin.
An Azure Database for PostgreSQL flexible server is created with a configured set ofcompute and storage resources. The server is created within anAzure resource group.
Select any of the following tabs, depending on the method you want to use to deploy your instance:
Portal
CLI
ARM template
Using theAzure portal:
Sign in with your credentials, if you're asked to do so.
Sign in with your credentials, if you're asked to do so.
SelectCreate a resourcein the upper-left corner of the portal.
SelectCreate a resourcein the upper-left corner of the portal.

UnderCategories, selectDatabases.
UnderCategories, selectDatabases.

From the filtered list of resource types, find the one calledAzure Database for PostgreSQL Flexible Server.
From the filtered list of resource types, find the one calledAzure Database for PostgreSQL Flexible Server.

SelectCreate.
SelectCreate.

TheNew Azure Database for PostgreSQL flexible serverwizard launches.
TheNew Azure Database for PostgreSQL flexible serverwizard launches.

Provide all information required, starting from theBasicstab.
Provide all information required, starting from theBasicstab.

Use the following table to understand the meaning of the different fields available in theBasicspage, and as guidance to fill the page:SectionSettingSuggested valueDescriptionCan be changed after instance creationProject detailsSubscriptionSelect the name of thesubscriptionin which you want to create the resource.A subscription is an agreement with Microsoft to use one or more Microsoft cloud platforms or services, for which charges accrue based on either a per-user license fee or on cloud-based resource consumption. If you have multiple subscriptions, choose the subscription in which you'd like to be billed for the resource.An existing Azure Database for PostgreSQL flexible server instance can be moved to a different subscription from the one it was originally created. For more information, see MoveAzure resources to a new resource group or subscription.Resource groupTheresource groupin the selected subscription, in which you want to create the resource. It can be an existing resource group, or you can selectCreate new, and provide a name in that subscription which is unique among the existing resource group names.A resource group is a container that holds related resources for an Azure solution. The resource group can include all the resources for the solution, or only those resources that you want to manage as a group. You decide how you want to allocate resources to resource groups based on what makes the most sense for your organization. Generally, add resources that share the same lifecycle to the same resource group so you can easily deploy, update, and delete them as a groupAn existing Azure Database for PostgreSQL flexible server instance can be moved to a different subscription from the one it was originally created. For more information, see MoveAzure resources to a new resource group or subscription.Server detailsServer nameThe name that you want to assign to the server.A unique name that identifies your Azure Database for PostgreSQL flexible server instance. The domain namepostgres.database.azure.comis appended to the server name you provide, to conform the fully qualified host name by which you can use a Domain Naming System server to resolve the IP address of your instance.Although the server name can't be changed after server creation, you can use thepoint in time recoveryfeature, to restore the server under a different name. An alternative approach to continue using the existing server, but being able to refer to it using a different server name, would use thevirtual endpointsto create a writer endpoint with the new desired name. With this approach, you could refer to the instance by its original name, or that assigned to the write virtual endpoint.RegionThe name of one of theregions in which the service is supported, and is more adequate for you to deploy your instance.Compliance, data residency, pricing, proximity to your users, or availability of other services in the same region, are some of the requirements you should use when choosing the region.The service doesn't offer a feature to automatically and transparently relocate an instance to a different region.PostgreSQL versionThe version selected by default.You can select among the list of major versions of PostgreSQL currently supported by the service. Currently those versions are:17 (preview), 16, 15, 14, 13, 12, 11Workload typeDefault SKU selection.You can choose fromDevelopment(Burstable SKU),Production(General Purpose, by default, or Memory Optimized SKUs). You can further customize the SKU and storage by selectingConfigure server.The service provides a built-in feature which can upgrade the current major version of your instance to any other higher version supported by the feature. For more information, seemajor version upgrades.Availability zoneYour preferredavailability zone.You can choose in which availability zone you want your server to be deployed. Being able to choose the availability zone in which your instance is deployed, is useful to colocate it with your application. If you chooseNo preference, a default availability zone is automatically assigned to your instance during its creation.Although the availability zone in which an instance is deployed can't be changed after its creation, you can use thepoint in time recoveryfeature to restore the server under a different name on a different availability zone.High availabilityHigh availabilityEnable it forSame zoneorZone redundant.If you select either of these two options, a standby server with the same configuration as your primary is automatically provisioned. The standby server is provisioned in the same availability zone or in a different availability zone within the same region, depending on the option selected. Notice that high availability can be enabled or disabled after the server is created.High availability can be enabled or disabled after server creation. However, if it's enabled, it can't be changed directly fromSame zonetoZone redundantor vice versa. In order to implement such change, you first need to disable high availability, and then re-enable it choosing the newly desired mode.AuthenticationAuthentication methodAlthough the recommended authentication method isMicrosoft Entra authentication, for the sake of simplicity, in this quickstart let's selectPostgreSQL authentication only.By selectingPostgreSQL authentication only, you're required to provide a PostgreSQL native user name and a password. If you chooseMicrosoft Entra authentication, you need to provide the object identifier of the Microsoft Entra user or group which you want to assign as the administrator of the instance. If you choose,PostgreSQL and Microsoft Entra authentication, you need to satisfy both previous requirements.Can be changed to any of the three supported values after server creation.Administrator loginThe name of the PostgreSQL native user that you want to assign as the administrator of your instance. For this example, let's set it toadminuser.The admin username must contain between 1 and 63 characters, must only consist of numbers and letters, canât start withpg_and can't beazure_superuser,azure_pg_admin,admin,administrator,root,guest, orpublic.The name of this user can't be changed after the instance is created. Also, it can't be replaced with some other PostgreSQL native user that you could create in the instance.PasswordThe password that you want to assign to the PostgreSQL native user which is designated as an administrator.Specify a password for the server admin account. Make sure that your password is complex enough.Can be changed as many times as needed after the server is created.Confirm passwordThe password that you want to assign to the PostgreSQL native user which is designated as an administrator.Must match the value assign toPassword.Can be changed as many times as needed after the server is created.
Use the following table to understand the meaning of the different fields available in theBasicspage, and as guidance to fill the page:
postgres.database.azure.com
Development
Production
adminuser
To configure the compute and storage further, underServer details, in theCompute + storagesection, selectConfigure server. TheCompute + storagepage opens, where you can configure several settings specific to the type of compute and storage you want to use. Once you configure your compute and storage according to your needs, selectSaveto return to theBasicspage and continue configuring your instance.
To configure the compute and storage further, underServer details, in theCompute + storagesection, selectConfigure server. TheCompute + storagepage opens, where you can configure several settings specific to the type of compute and storage you want to use. Once you configure your compute and storage according to your needs, selectSaveto return to theBasicspage and continue configuring your instance.

Use the following table to understand the meaning of the different fields available in theCompute + storagepage, and as guidance to fill the page:SectionSettingSuggested valueDescriptionCan be changed after instance creationClusterCluster optionsSelectServer.Possible values areServer(for workloads that can fit on one node) andElastic cluster(for capacity larger than a single node, elastic cluster provides schema- and row-based sharding on a database distributed across a cluster).Can't be changed on existing servers.Node countSet it to4.This option is only available whenCluster optionsis set toElastic cluster. Allowed range of values span from 1 to 10.Can be changed on existing servers.ComputeCompute tierSelectGeneral Purpose.Possible values areBurstable(typically used for development environments in which workloads don't need the full capacity of the CPU continuously) andGeneral Purpose(typically used for production environments with most common workloads), andMemory Optimized(typically used for production environments running workloads that require a high memory to CPU ratio). For more information, seeCompute options in Azure Database for PostgreSQL flexible server.Can be changed after the server is created. However, if you're using some functionality which is only supported on certain tiers, and change the current tier to one in which the feature isn't supported, the feature stops being available or gets disabled.Compute processorLeave the default setting.Notice that this option might not be visible for some regions. If the region selected in theBasicstab supports processors from more than one manufacturer, then the option is visible. In the regions supporting processors from different manufacturers, possible values areAMDandIntel. For more information, seeCompute options in Azure Database for PostgreSQL flexible server.Can be changed for existing instances, as long as the region in which the instance is deployed offers processors from more than one manufacturer.Compute sizeLeave the default setting.Notice that the list of supported values might vary across regions, depending on the hardware available on each region. For more information, seeCompute options in Azure Database for PostgreSQL flexible server.Can be changed after instance is created.StorageStorage typeSelectPremium SSD.Notice that the list of allowed values might vary depending on which other features you selected. For more information, seeStorage options in Azure Database for PostgreSQL flexible server.Can't be changed after the instance is created.Storage sizeLeave the default setting.Notice that the list of supported values might vary across regions, depending on the hardware available on each region. For more information, seeCompute options in Azure Database for PostgreSQL flexible server.Can be changed after the instance is created. It can only be increased. Manual or automatic shrinking of storage isn't supported. Acceptable values depend on the type of storage assigned to the instance.Performance tierLeave the default setting.Performance of Premium solid-state drives (SSD) is set when you create the disk, in the form of their performance tier. When setting the provisioned size of the disk, a performance tier is automatically selected. This performance tier determines the IOPS and throughput of your managed disk. For Premium SSD disks, this tier can be changed at deployment or afterwards, without changing the size of the disk, and without downtime. Changing the tier allows you to prepare for and meet higher demand without using your disk's bursting capability. It can be more cost-effective to change your performance tier rather than rely on bursting, depending on how long the extra performance is necessary. This is ideal for events that temporarily require a consistently higher level of performance, like holiday shopping, performance testing, or running a training environment. To handle these events, you can switch a disk to a higher performance tier without downtime, for as long as you need the extra performance. You can then return to the original tier without downtime when the extra performance is no longer necessary.Can be changed after the instance is created.Storage autogrowSelect this option to enable the autogrow feature.Notice that this option might not be supported for some storage types, and it might not be honored for certain storage sizes. For more information, seeConfigure storage autogrow in an Azure Database for PostgreSQL flexible server.Can be changed after the instance is created, as long as the storage type supports this feature.High availabilityHigh availabilityLeave the value that is selected by default.Supported values areDisabled(99.9% SLA),Same zone(99.95% SLA), andZone redundant(99.99% SLA). Notice that supported high availability options might vary depending on the region in which you're trying to deploy your instance. For more information, seeHigh availability in Azure Database for PostgreSQL flexible server.High availability can be enabled or disabled after server creation. However, if it's enabled, it can't be changed directly fromSame zonetoZone redundantor viceversa. In order to implement such change, you first need to disable high availability, and then re-enable it choosing the newly desired mode.BackupsBackup retention period (in days)Leave the value that is selected by default.The default backup retention period is 7 days, but you can extend the period to a maximum of 35 days. Notice that supported high availability options might vary depending on the region in which you're trying to deploy your instance. For more information, seeHigh availability in Azure Database for PostgreSQL flexible server.Can be changed after instance is created.Backup redundancyAutomatically selected for you, based on whether or not the selected region supports multiple availability zones, and the configuration of the geographical redundancy of backups.Possible values areLocally redundant(provides at least 99.999999999% durability of backup objects over a year),Zone redundant(provides at least 99.9999999999% durability of backup objects over a year), andGeo-Redundant(provides at least 99.99999999999999% durability of backup objects over a year). WhenGeo-redundancyis enabled for the backup, then the backup redundancy option is set toGeo-Redundant. Otherwise, if the region doesn't support multiple availability zones, then backup redundancy is set toLocally redundant. And if the region supports multiple availability zones, then backup redundancy is set toZone redundant. For more information, seeBackup redundancy options in Azure Database for PostgreSQL flexible server.Can't be changed after instance is created.Geo-redundancyLeave this option disabled.Geo-redundancy in backups is only supported on instances deployed in any of theAzure paired regions. For more information, seeGeo-redundant backup and restore in Azure Database for PostgreSQL flexible serverCan't be changed after instance is created.
Use the following table to understand the meaning of the different fields available in theCompute + storagepage, and as guidance to fill the page:
After providing all required information in theBasicstab, selectNext: Networkingto move forward to theNetworktab, from where you can configure the networking settings of your Azure Database for PostgreSQL flexible server instance:
After providing all required information in theBasicstab, selectNext: Networkingto move forward to theNetworktab, from where you can configure the networking settings of your Azure Database for PostgreSQL flexible server instance:


Use the following table to understand the meaning of the different fields available in theNetworkingpage, and as guidance to fill the page:SectionSettingSuggested valueDescriptionCan be changed after instance creationNetwork connectivityConnectivity methodSelectPublic access (allowed IP addresses) and Private endpoint, for the sake of simplicity.Possible values arePublic access (allowed IP addresses) and Private endpointandPrivate access (VNET Integration). For more information, seeNetwork with public access and private endpoints for Azure Database for PostgreSQL flexible server with public accessandNetwork with virtual network integration for Azure Database for PostgreSQL flexible server.Can't be changed after instance is created.Public accessAllow public access to this resource through the internet using a public IP addressEnable the checkbox.By enabling this checkbox, you can configure firewall rules to control the IP address ranges from where clients can connect to your instance through the public endpoint. For more information, seeNetwork with virtual network integration for Azure Database for PostgreSQL flexible serverCan be changed after instance is created.Firewall rulesAllow public access from any Azure service within Azure to this serverLeave the default setting.By enabling this checkbox, you configure a special firewall rule to allow connections from IP addresses allocated to any Azure service or asset, including connections from the subscriptions of other customers. For more information, seeNetwork with virtual network integration for Azure Database for PostgreSQL flexible serverCan be changed after instance is created.+ Add current client IP address ( ###.###.###.### )Select the link with that text.That configures a firewall rule to allow connections from  the IP address indicated in parenthesis. That IP address corresponds to the public IP address that's used by the computer from which you're accessing Azure portal. For more information, seeNetwork with virtual network integration for Azure Database for PostgreSQL flexible serverCan be changed after instance is created.
Use the following table to understand the meaning of the different fields available in theNetworkingpage, and as guidance to fill the page:
After providing all required information in theNetworkingtab, selectNext: Securityto move forward to theSecuritytab, from where you can configure the data security settings of your Azure Database for PostgreSQL flexible server instance:
After providing all required information in theNetworkingtab, selectNext: Securityto move forward to theSecuritytab, from where you can configure the data security settings of your Azure Database for PostgreSQL flexible server instance:


Use the following table to understand the meaning of the different fields available in theSecuritypage, and as guidance to fill the page:SectionSettingSuggested valueDescriptionCan be changed after instance creationData encryptionData encryption keyLeave the default setting.Possible values areService-managed keyandCustomer-managed key. For more information, seeData encryption in Azure Database for PostgreSQL flexible server.Can't be changed after instance is created.
Use the following table to understand the meaning of the different fields available in theSecuritypage, and as guidance to fill the page:
After providing all required information in theSecuritytab, selectNext: Tagsto move forward to theTagstab, from where you can attach sometagsto your Azure Database for PostgreSQL flexible server instance:
After providing all required information in theSecuritytab, selectNext: Tagsto move forward to theTagstab, from where you can attach sometagsto your Azure Database for PostgreSQL flexible server instance:


Use the following table to understand the meaning of the different fields available in theTagspage, and as guidance to fill the page:SectionSettingSuggested valueDescriptionCan be changed after instance creationNameSet it toEnvironment.For more information about, seetags.Can be changed after instance is created.ValueSet it toPostgreSQL Quickstart.For more information about, seetags.Can be changed after instance is created.
Use the following table to understand the meaning of the different fields available in theTagspage, and as guidance to fill the page:
Environment
PostgreSQL Quickstart
After providing all required information in theTagstab, selectNext: Review + createto move forward to theReview + createtab, from where you can review all settings configured for your new Azure Database for PostgreSQL flexible server instance, before you trigger its creation:
After providing all required information in theTagstab, selectNext: Review + createto move forward to theReview + createtab, from where you can review all settings configured for your new Azure Database for PostgreSQL flexible server instance, before you trigger its creation:


After reviewing that the values of all settings match your requirements, selectCreateto initiate the deployment of your new Azure Database for PostgreSQL flexible server instance:
After reviewing that the values of all settings match your requirements, selectCreateto initiate the deployment of your new Azure Database for PostgreSQL flexible server instance:

A new deployment is launched to create your Azure Database for PostgreSQL flexible server instance:
A new deployment is launched to create your Azure Database for PostgreSQL flexible server instance:

When the deployment completes, you can selectGo to resource, to get you to theOverviewpage of your new Azure Database for PostgreSQL flexible server instance, and start using it:
When the deployment completes, you can selectGo to resource, to get you to theOverviewpage of your new Azure Database for PostgreSQL flexible server instance, and start using it:


TheAzure Cloud Shellis a free interactive shell that you can use to run the steps in this article. It has common Azure tools preinstalled and configured to use with your account.
To open the Cloud Shell, just selectOpen Cloud Shellfrom the upper right corner of a code block. You can also open Cloud Shell in a separate browser tab, by going tohttps://shell.azure.com/bash. SelectCopyto copy the blocks of code, paste them into the Cloud Shell, and selectEnterto run them.
If you prefer to install and use Azure CLI locally, this quickstart requires version 2.67.0 or later. Runaz --versionto find the version currently installed. If you need to install or upgrade Azure CLI, seeInstall Azure CLI.
az --version
You need to log in to your account using theaz logincommand. Note theidproperty in the output, which refers to theSubscription IDfor your Azure account.az login
You need to log in to your account using theaz logincommand. Note theidproperty in the output, which refers to theSubscription IDfor your Azure account.
id
az login
az login
Create an Azure Database for PostgreSQL flexible server instance, using theaz postgres flexible-server createcommand.az postgres flexible-server create \
  --subscription <subscription> \
  --resource-group <resource-group> \
  --name <name> \
  --location <region> \
  --version <version> \
  --zone <zone> \
  --password-auth <password-auth> \
  --admin-user <admin-user> \
  --admin-password <admin-password> \
  --tier <tier> \
  --sku-name <sku-name> \
  --storage-type <storage-type> \
  --storage-size <storage-size> \
  --performance-tier <performance-tier> \
  --storage-auto-grow <storage-auto-grow> \
  --high-availability <high-availability> \
  --standby-zone <standby-zone> \
  --backup-retention <backup-retention> \
  --geo-redundant-backup <geo-redundant-backup> \
  --public-access <public-access> \
  --tags <tags>
Create an Azure Database for PostgreSQL flexible server instance, using theaz postgres flexible-server createcommand.
az postgres flexible-server create \
  --subscription <subscription> \
  --resource-group <resource-group> \
  --name <name> \
  --location <region> \
  --version <version> \
  --zone <zone> \
  --password-auth <password-auth> \
  --admin-user <admin-user> \
  --admin-password <admin-password> \
  --tier <tier> \
  --sku-name <sku-name> \
  --storage-type <storage-type> \
  --storage-size <storage-size> \
  --performance-tier <performance-tier> \
  --storage-auto-grow <storage-auto-grow> \
  --high-availability <high-availability> \
  --standby-zone <standby-zone> \
  --backup-retention <backup-retention> \
  --geo-redundant-backup <geo-redundant-backup> \
  --public-access <public-access> \
  --tags <tags>
az postgres flexible-server create \
  --subscription <subscription> \
  --resource-group <resource-group> \
  --name <name> \
  --location <region> \
  --version <version> \
  --zone <zone> \
  --password-auth <password-auth> \
  --admin-user <admin-user> \
  --admin-password <admin-password> \
  --tier <tier> \
  --sku-name <sku-name> \
  --storage-type <storage-type> \
  --storage-size <storage-size> \
  --performance-tier <performance-tier> \
  --storage-auto-grow <storage-auto-grow> \
  --high-availability <high-availability> \
  --standby-zone <standby-zone> \
  --backup-retention <backup-retention> \
  --geo-redundant-backup <geo-redundant-backup> \
  --public-access <public-access> \
  --tags <tags>
Use the following table to understand the meaning of each different parameter, and as guidance to provide values for each of them:ParameterSuggested valueDescriptionCan be changed after instance creationsubscriptionEnter the name or identifier of thesubscriptionin which you want to create the resource.A subscription is an agreement with Microsoft to use one or more Microsoft cloud platforms or services, for which charges accrue based on either a per-user license fee or on cloud-based resource consumption. If you have multiple subscriptions, choose the subscription in which you'd like to be billed for the resource.An existing Azure Database for PostgreSQL flexible server instance can be moved to a different subscription from the one it was originally created. For more information, see MoveAzure resources to a new resource group or subscription.resource-groupTheresource groupin the selected subscription, in which you want to create the resource. It can be an existing resource group or, if it doesn't exist, it's created.A resource group is a container that holds related resources for an Azure solution. The resource group can include all the resources for the solution, or only those resources that you want to manage as a group. You decide how you want to allocate resources to resource groups based on what makes the most sense for your organization. Generally, add resources that share the same lifecycle to the same resource group so you can easily deploy, update, and delete them as a groupAn existing Azure Database for PostgreSQL flexible server instance can be moved to a different subscription from the one it was originally created. For more information, see MoveAzure resources to a new resource group or subscription.nameThe name that you want to assign to the server.A unique name that identifies your Azure Database for PostgreSQL flexible server instance. The domain namepostgres.database.azure.comis appended to the server name you provide, to conform the fully qualified host name by which you can use a Domain Naming System server to resolve the IP address of your instance.Although the server name can't be changed after server creation, you can use thepoint in time recoveryfeature, to restore the server under a different name. An alternative approach to continue using the existing server but being able to refer to it using a different server name, would use thevirtual endpointsto create a writer endpoint with the new desired name. With this approach, you could refer to the instance by its original name, or that assigned to the write virtual endpoint.regionThe name of one of theregions in which the service is supported, and is more adequate for you to deploy your instance.Compliance, data residency, pricing, proximity to your users, or availability of other services in the same region, are some of the requirements you should use when choosing the region.The service doesn't offer a feature to automatically and transparently relocate an instance to a different region.versionThe version selected by default.You can select among the list of major versions of PostgreSQL currently supported by the service. Currently those versions are:17 (preview), 16, 15, 14, 13, 12, 11zoneSet it to1. This number represents your preferred logicalavailability zone.You can choose in which availability zone you want your server to be deployed. Being able to choose the availability zone in which your instance is deployed, is useful to colocate it with your application. If you don't specify this parameter, a default availability zone is automatically assigned to your instance during its creation.Although the availability zone in which an instance is deployed can't be changed after its creation, you can use thepoint in time recoveryfeature to restore the server under a different name on a different availability zone.password-authSet it toenabled.Although the recommended authentication method isMicrosoft Entra authentication, which you can configure using the--active-directory-authparameter, for the sake of simplicity, in this quickstart let's select use PostgreSQL authentication. By selecting setting this parameter toenabled, you're required to also provide values for the--admin-userand--admin-passwordparameters. If you set--active-directory-authtoenabled, you can use theaz postgres flexible-server ad-admincommands to create or remove Microsoft Entra users or groups as PostgreSQL administrators.Can be enabled or disabled after server creation.admin-userThe name of the PostgreSQL native user that you want to assign as the administrator of your instance. For this example, let's set it toadminuser.The admin username must contain between 1 and 63 characters, must only consist of numbers and letters, canât start withpg_and can't beazure_superuser,azure_pg_admin,admin,administrator,root,guest, orpublic.The name of this user can't be changed after the instance is created. Also, it can't be replaced with some other PostgreSQL native user that you could create in the instance.admin-passwordThe password that you want to assign to the PostgreSQL native user which is designated as an administrator.Specify a password for the server admin account. Make sure that your password is complex enough.Can be changed as many times as needed after the server is created.tierSet it togeneralpurpose.Possible values areburstable(typically used for development environments in which workloads don't need the full capacity of the CPU continuously),generalpurpose(typically used for production environments with most common workloads), andmemoryoptimized(typically used for production environments running workloads that require a high memory to CPU ratio). For more information, seeCompute options in Azure Database for PostgreSQL flexible server.Can be changed after the server is created. However, if you're using some functionality which is only supported on certain tiers, and change the current tier to one in which the feature isn't supported, the feature stops being available or gets disabled.sku-nameSet it tostandard_d4ds_v5.Notice that the list of supported values might vary across regions, depending on the hardware available on each region. For more information, seeCompute options in Azure Database for PostgreSQL flexible server.Can be changed after instance is created.storage-typeSet it topremium_lrs.Notice that the list of allowed values might vary depending on which other features you selected. For more information, seeStorage options in Azure Database for PostgreSQL flexible server.Can't be changed after the instance is created.storage-sizeSet it to128.Notice that the list of supported values might vary across regions, depending on the hardware available on each region. For more information, seeCompute options in Azure Database for PostgreSQL flexible server.Can be changed after the instance is created. It can only be increased. Manual or automatic shrinking of storage isn't supported. Acceptable values depend on the type of storage assigned to the instance.performance-tierSet it top10.Performance of Premium solid-state drives (SSD) is set when you create the disk, in the form of their performance tier. When setting the provisioned size of the disk, a performance tier is automatically selected. This performance tier determines the IOPS and throughput of your managed disk. For Premium SSD disks, this tier can be changed at deployment or afterwards, without changing the size of the disk, and without downtime. Changing the tier allows you to prepare for and meet higher demand without using your disk's bursting capability. It can be more cost-effective to change your performance tier rather than rely on bursting, depending on how long the extra performance is necessary. This is ideal for events that temporarily require a consistently higher level of performance, like holiday shopping, performance testing, or running a training environment. To handle these events, you can switch a disk to a higher performance tier without downtime, for as long as you need the extra performance. You can then return to the original tier without downtime when the extra performance is no longer necessary.Can be changed after the instance is created.storage-auto-growSet it toenabled.Notice that this option might not be supported for some storage types, and it might not be honored for certain storage sizes. For more information, seeConfigure storage autogrow in an Azure Database for PostgreSQL flexible server.Can be changed after the instance is created, as long as the storage type supports this feature.high-availabilitySet it tozoneredundant.Supported values aredisabled(99.9% SLA),samezone(99.95% SLA), andzoneredundant(99.99% SLA). Notice that supported high availability options might vary depending on the region in which you're trying to deploy your instance. For more information, seeHigh availability in Azure Database for PostgreSQL flexible server.High availability can be enabled or disabled after server creation. However, if it's enabled, it can't be changed directly fromsamezonetozoneredundantor viceversa. In order to implement such change, you first need to disable high availability, and then re-enable it choosing the newly desired mode.standby-zoneSet it to2. This number represents your preferred logicalavailability zonefor the hot standby replica.You can choose in which availability zone you want your server to be deployed. Being able to choose the availability zone in which your instance is deployed, is useful to colocate it with your application. If you chooseNo preference, a default availability zone is automatically assigned to your instance during its creation.Although the availability zone in which an instance is deployed can't be changed after its creation, you can use thepoint in time recoveryfeature to restore the server under a different name on a different availability zone.backup-retentionSet it to7.The default backup retention period is 7 days, but you can extend the period to a maximum of 35 days. Notice that supported high availability options might vary depending on the region in which you're trying to deploy your instance. For more information, seeHigh availability in Azure Database for PostgreSQL flexible server.Can be changed after instance is created.geo-redundant-backupSet it todisabled.Geo-redundancy in backups is only supported on instances deployed in any of theAzure paired regions. For more information, seeGeo-redundant backup and restore in Azure Database for PostgreSQL flexible serverCan't be changed after instance is created.public-accessSet it to$(curl ipinfo.io/ip)to create a firewall rule that allowlists the public IP address of the computer from which you're running the Azure CLI commands. That allows you to connect to your new instance from that computer.Possible values areall,none,<startIpAddress>, or<startIpAddress>-<endIpAddress>. For more information, seeNetwork with public access and private endpoints for Azure Database for PostgreSQL flexible server with public accessandNetwork with virtual network integration for Azure Database for PostgreSQL flexible server.Can't be changed after instance is created.tagsSet it to"Environment=PostgreSQL Quickstart".For more information about, seetags.Can be changed after instance is created.
Use the following table to understand the meaning of each different parameter, and as guidance to provide values for each of them:
postgres.database.azure.com
1
enabled
--active-directory-auth
enabled
--admin-user
--admin-password
--active-directory-auth
enabled
adminuser
generalpurpose
burstable
generalpurpose
memoryoptimized
standard_d4ds_v5
premium_lrs
128
p10
enabled
zoneredundant
2
7
disabled
$(curl ipinfo.io/ip)
all
none
<startIpAddress>
<startIpAddress>-<endIpAddress>
"Environment=PostgreSQL Quickstart"
If the deployment completes successfully, you should receive an output from the CLI command like the following:{
"connectionString": "postgresql://<admin-user>:<admin-password>@<name>.postgres.database.azure.com/None?sslmode=require",
"databaseName": null,
"firewallName": "FirewallIPAddress_<timestamp>",
"host": "<name>.postgres.database.azure.com",
"id": "/subscriptions/<subscription-id>/resourceGroups/<resource-group>/providers/Microsoft.DBforPostgreSQL/flexibleServers/<name>",
"location": "<region>",
"password": "<admin-password>",
"resourceGroup": "<reource-group>",
"skuname": "<sku-name>",
"username": "<admin-user>",
"version": "<version>"
}
If the deployment completes successfully, you should receive an output from the CLI command like the following:
{
"connectionString": "postgresql://<admin-user>:<admin-password>@<name>.postgres.database.azure.com/None?sslmode=require",
"databaseName": null,
"firewallName": "FirewallIPAddress_<timestamp>",
"host": "<name>.postgres.database.azure.com",
"id": "/subscriptions/<subscription-id>/resourceGroups/<resource-group>/providers/Microsoft.DBforPostgreSQL/flexibleServers/<name>",
"location": "<region>",
"password": "<admin-password>",
"resourceGroup": "<reource-group>",
"skuname": "<sku-name>",
"username": "<admin-user>",
"version": "<version>"
}
{
"connectionString": "postgresql://<admin-user>:<admin-password>@<name>.postgres.database.azure.com/None?sslmode=require",
"databaseName": null,
"firewallName": "FirewallIPAddress_<timestamp>",
"host": "<name>.postgres.database.azure.com",
"id": "/subscriptions/<subscription-id>/resourceGroups/<resource-group>/providers/Microsoft.DBforPostgreSQL/flexibleServers/<name>",
"location": "<region>",
"password": "<admin-password>",
"resourceGroup": "<reource-group>",
"skuname": "<sku-name>",
"username": "<admin-user>",
"version": "<version>"
}
AnAzure Resource Manager templateis a JavaScript Object Notation (JSON) file that defines the infrastructure and configuration for your project. The template uses declarative syntax. You describe your intended deployment without writing the sequence of programming commands to create the deployment.
Azure Resource Manager is the deployment and management service for Azure. It provides a management layer that enables you to create, update, and delete resources in your Azure account. You use management features, like access control, locks, and tags, to secure and organize your resources after deployment. To learn about Azure Resource Manager templates, seeTemplate deployment overview.
An Azure Database for PostgreSQL flexible server instance is the parent resource for one or more databases within a region. It provides the scope for management policies that apply to its databases: login, firewall, users, roles, and configurations.
Create a file calledpostgres-flexible-server-template.json, and copy the following JSON definition into it.{
"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
"contentVersion": "1.0.0.0",
"parameters": {
    "serverName": {
    "type": "string"
    },
    "location": {
    "type": "string",
    "defaultValue": "[resourceGroup().location]"
    },
    "version": {
    "type": "string",
    "defaultValue": "16"
    },
    "availabilityZone": {
    "type": "string",
    "defaultValue": "1"
    },
    "activeDirectoryAuth": {
    "type": "string",
    "defaultValue": "Disabled"
    },
    "passwordAuth": {
    "type": "string",
    "defaultValue": "Enabled"
    },
    "administratorLogin": {
    "type": "string",
    "defaultValue": "adminuser"
    },
    "administratorLoginPassword": {
    "type": "secureString"
    },
    "skuTier": {
    "type": "string",
    "defaultValue": "GeneralPurpose"
    },
    "skuName": {
    "type": "string",
    "defaultValue": "Standard_D4ds_v5"
    },
    "storageType": {
    "type": "string",
    "defaultValue": "Premium_LRS"
    },
    "storageSizeGB": {
    "type": "int",
    "defaultValue": 128
    },
    "storageTier": {
    "type": "string",
    "defaultValue": "P10"
    },
    "storageAutoGrow": {
    "type": "string",
    "defaultValue": "Enabled"
    },
    "highAvailabilityMode": {
    "type": "string",
    "defaultValue": "ZoneRedundant"
    },
    "standbyAvailabilityZone": {
    "type": "string",
    "defaultValue": "2"
    },
    "backupRetentionDays": {
    "type": "int",
    "defaultValue": 7
    },
    "geoRedundantBackup": {
    "type": "string",
    "defaultValue": "Disabled"
    },
    "publicNetworkAccess": {
    "type": "string",
    "defaultValue": "Enabled"
    },
    "tags": {
    "type": "object",
    "defaultValue": {
        "Environment": "PostgreSQL Quickstart"
    }
    },
    "firewallRules": {
    "type": "array"
    }
},
"resources": [
    {
    "type": "Microsoft.DBforPostgreSQL/flexibleServers",
    "apiVersion": "2024-08-01",
    "name": "[parameters('serverName')]",
    "location": "[parameters('location')]",
    "sku": {
        "tier": "[parameters('skuTier')]",
        "name": "[parameters('skuName')]"
    },
    "properties": {
        "version": "[parameters('version')]",
        "administratorLogin": "[parameters('administratorLogin')]",
        "administratorLoginPassword": "[parameters('administratorLoginPassword')]",
        "authConfig": {
        "activeDirectoryAuth": "[parameters('activeDirectoryAuth')]",
        "passwordAuth": "[parameters('passwordAuth')]"
        },
        "network": {
        "publicNetworkAccess": "[parameters('publicNetworkAccess')]"
        },
        "highAvailability": {
        "mode": "[parameters('highAvailabilityMode')]",
        "standbyAvailabilityZone": "[parameters('standbyAvailabilityZone')]"
        },
        "storage": {
        "autoGrow": "[parameters('storageAutoGrow')]",
        "storageSizeGB": "[parameters('storageSizeGB')]",
        "tier": "[parameters('storageTier')]",
        "type": "[parameters('storageType')]"
        },
        "backup": {
        "backupRetentionDays": "[parameters('backupRetentionDays')]",
        "geoRedundantBackup": "[parameters('geoRedundantBackup')]"
        },
        "availabilityZone": "[parameters('availabilityZone')]",
        "tags": "[parameters('tags')]"
    }
    },
    {
    "copy": {
        "name": "createFirewallRules",
        "count": "[length(range(0, if(greater(length(parameters('firewallRules')), 0), length(parameters('firewallRules')), 1)))]",
        "mode": "serial",
        "batchSize": 1
    },
    "type": "Microsoft.Resources/deployments",
    "apiVersion": "2020-10-01",
    "name": "[format('firewallRules-{0}', range(0, if(greater(length(parameters('firewallRules')), 0), length(parameters('firewallRules')), 1))[copyIndex()])]",
    "properties": {
        "expressionEvaluationOptions": {
        "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
        "ip": {
            "value": "[parameters('firewallRules')[range(0, if(greater(length(parameters('firewallRules')), 0), length(parameters('firewallRules')), 1))[copyIndex()]]]"
        },
        "serverName": {
            "value": "[parameters('serverName')]"
        }
        },
        "template": {
        "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
        "contentVersion": "1.0.0.0",
        "parameters": {
            "serverName": {
            "type": "string"
            },
            "ip": {
            "type": "object"
            }
        },
        "resources": [
            {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/firewallRules",
            "apiVersion": "2024-08-01",
            "name": "[format('{0}/{1}', parameters('serverName'), parameters('ip').name)]",
            "properties": {
                "startIpAddress": "[parameters('ip').startIPAddress]",
                "endIpAddress": "[parameters('ip').endIPAddress]"
            }
            }
        ]
        }
    },
    "dependsOn": [
        "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('serverName'))]"
    ]
    }
]
}
Create a file calledpostgres-flexible-server-template.json, and copy the following JSON definition into it.
postgres-flexible-server-template.json
{
"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
"contentVersion": "1.0.0.0",
"parameters": {
    "serverName": {
    "type": "string"
    },
    "location": {
    "type": "string",
    "defaultValue": "[resourceGroup().location]"
    },
    "version": {
    "type": "string",
    "defaultValue": "16"
    },
    "availabilityZone": {
    "type": "string",
    "defaultValue": "1"
    },
    "activeDirectoryAuth": {
    "type": "string",
    "defaultValue": "Disabled"
    },
    "passwordAuth": {
    "type": "string",
    "defaultValue": "Enabled"
    },
    "administratorLogin": {
    "type": "string",
    "defaultValue": "adminuser"
    },
    "administratorLoginPassword": {
    "type": "secureString"
    },
    "skuTier": {
    "type": "string",
    "defaultValue": "GeneralPurpose"
    },
    "skuName": {
    "type": "string",
    "defaultValue": "Standard_D4ds_v5"
    },
    "storageType": {
    "type": "string",
    "defaultValue": "Premium_LRS"
    },
    "storageSizeGB": {
    "type": "int",
    "defaultValue": 128
    },
    "storageTier": {
    "type": "string",
    "defaultValue": "P10"
    },
    "storageAutoGrow": {
    "type": "string",
    "defaultValue": "Enabled"
    },
    "highAvailabilityMode": {
    "type": "string",
    "defaultValue": "ZoneRedundant"
    },
    "standbyAvailabilityZone": {
    "type": "string",
    "defaultValue": "2"
    },
    "backupRetentionDays": {
    "type": "int",
    "defaultValue": 7
    },
    "geoRedundantBackup": {
    "type": "string",
    "defaultValue": "Disabled"
    },
    "publicNetworkAccess": {
    "type": "string",
    "defaultValue": "Enabled"
    },
    "tags": {
    "type": "object",
    "defaultValue": {
        "Environment": "PostgreSQL Quickstart"
    }
    },
    "firewallRules": {
    "type": "array"
    }
},
"resources": [
    {
    "type": "Microsoft.DBforPostgreSQL/flexibleServers",
    "apiVersion": "2024-08-01",
    "name": "[parameters('serverName')]",
    "location": "[parameters('location')]",
    "sku": {
        "tier": "[parameters('skuTier')]",
        "name": "[parameters('skuName')]"
    },
    "properties": {
        "version": "[parameters('version')]",
        "administratorLogin": "[parameters('administratorLogin')]",
        "administratorLoginPassword": "[parameters('administratorLoginPassword')]",
        "authConfig": {
        "activeDirectoryAuth": "[parameters('activeDirectoryAuth')]",
        "passwordAuth": "[parameters('passwordAuth')]"
        },
        "network": {
        "publicNetworkAccess": "[parameters('publicNetworkAccess')]"
        },
        "highAvailability": {
        "mode": "[parameters('highAvailabilityMode')]",
        "standbyAvailabilityZone": "[parameters('standbyAvailabilityZone')]"
        },
        "storage": {
        "autoGrow": "[parameters('storageAutoGrow')]",
        "storageSizeGB": "[parameters('storageSizeGB')]",
        "tier": "[parameters('storageTier')]",
        "type": "[parameters('storageType')]"
        },
        "backup": {
        "backupRetentionDays": "[parameters('backupRetentionDays')]",
        "geoRedundantBackup": "[parameters('geoRedundantBackup')]"
        },
        "availabilityZone": "[parameters('availabilityZone')]",
        "tags": "[parameters('tags')]"
    }
    },
    {
    "copy": {
        "name": "createFirewallRules",
        "count": "[length(range(0, if(greater(length(parameters('firewallRules')), 0), length(parameters('firewallRules')), 1)))]",
        "mode": "serial",
        "batchSize": 1
    },
    "type": "Microsoft.Resources/deployments",
    "apiVersion": "2020-10-01",
    "name": "[format('firewallRules-{0}', range(0, if(greater(length(parameters('firewallRules')), 0), length(parameters('firewallRules')), 1))[copyIndex()])]",
    "properties": {
        "expressionEvaluationOptions": {
        "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
        "ip": {
            "value": "[parameters('firewallRules')[range(0, if(greater(length(parameters('firewallRules')), 0), length(parameters('firewallRules')), 1))[copyIndex()]]]"
        },
        "serverName": {
            "value": "[parameters('serverName')]"
        }
        },
        "template": {
        "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
        "contentVersion": "1.0.0.0",
        "parameters": {
            "serverName": {
            "type": "string"
            },
            "ip": {
            "type": "object"
            }
        },
        "resources": [
            {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/firewallRules",
            "apiVersion": "2024-08-01",
            "name": "[format('{0}/{1}', parameters('serverName'), parameters('ip').name)]",
            "properties": {
                "startIpAddress": "[parameters('ip').startIPAddress]",
                "endIpAddress": "[parameters('ip').endIPAddress]"
            }
            }
        ]
        }
    },
    "dependsOn": [
        "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('serverName'))]"
    ]
    }
]
}
{
"$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
"contentVersion": "1.0.0.0",
"parameters": {
    "serverName": {
    "type": "string"
    },
    "location": {
    "type": "string",
    "defaultValue": "[resourceGroup().location]"
    },
    "version": {
    "type": "string",
    "defaultValue": "16"
    },
    "availabilityZone": {
    "type": "string",
    "defaultValue": "1"
    },
    "activeDirectoryAuth": {
    "type": "string",
    "defaultValue": "Disabled"
    },
    "passwordAuth": {
    "type": "string",
    "defaultValue": "Enabled"
    },
    "administratorLogin": {
    "type": "string",
    "defaultValue": "adminuser"
    },
    "administratorLoginPassword": {
    "type": "secureString"
    },
    "skuTier": {
    "type": "string",
    "defaultValue": "GeneralPurpose"
    },
    "skuName": {
    "type": "string",
    "defaultValue": "Standard_D4ds_v5"
    },
    "storageType": {
    "type": "string",
    "defaultValue": "Premium_LRS"
    },
    "storageSizeGB": {
    "type": "int",
    "defaultValue": 128
    },
    "storageTier": {
    "type": "string",
    "defaultValue": "P10"
    },
    "storageAutoGrow": {
    "type": "string",
    "defaultValue": "Enabled"
    },
    "highAvailabilityMode": {
    "type": "string",
    "defaultValue": "ZoneRedundant"
    },
    "standbyAvailabilityZone": {
    "type": "string",
    "defaultValue": "2"
    },
    "backupRetentionDays": {
    "type": "int",
    "defaultValue": 7
    },
    "geoRedundantBackup": {
    "type": "string",
    "defaultValue": "Disabled"
    },
    "publicNetworkAccess": {
    "type": "string",
    "defaultValue": "Enabled"
    },
    "tags": {
    "type": "object",
    "defaultValue": {
        "Environment": "PostgreSQL Quickstart"
    }
    },
    "firewallRules": {
    "type": "array"
    }
},
"resources": [
    {
    "type": "Microsoft.DBforPostgreSQL/flexibleServers",
    "apiVersion": "2024-08-01",
    "name": "[parameters('serverName')]",
    "location": "[parameters('location')]",
    "sku": {
        "tier": "[parameters('skuTier')]",
        "name": "[parameters('skuName')]"
    },
    "properties": {
        "version": "[parameters('version')]",
        "administratorLogin": "[parameters('administratorLogin')]",
        "administratorLoginPassword": "[parameters('administratorLoginPassword')]",
        "authConfig": {
        "activeDirectoryAuth": "[parameters('activeDirectoryAuth')]",
        "passwordAuth": "[parameters('passwordAuth')]"
        },
        "network": {
        "publicNetworkAccess": "[parameters('publicNetworkAccess')]"
        },
        "highAvailability": {
        "mode": "[parameters('highAvailabilityMode')]",
        "standbyAvailabilityZone": "[parameters('standbyAvailabilityZone')]"
        },
        "storage": {
        "autoGrow": "[parameters('storageAutoGrow')]",
        "storageSizeGB": "[parameters('storageSizeGB')]",
        "tier": "[parameters('storageTier')]",
        "type": "[parameters('storageType')]"
        },
        "backup": {
        "backupRetentionDays": "[parameters('backupRetentionDays')]",
        "geoRedundantBackup": "[parameters('geoRedundantBackup')]"
        },
        "availabilityZone": "[parameters('availabilityZone')]",
        "tags": "[parameters('tags')]"
    }
    },
    {
    "copy": {
        "name": "createFirewallRules",
        "count": "[length(range(0, if(greater(length(parameters('firewallRules')), 0), length(parameters('firewallRules')), 1)))]",
        "mode": "serial",
        "batchSize": 1
    },
    "type": "Microsoft.Resources/deployments",
    "apiVersion": "2020-10-01",
    "name": "[format('firewallRules-{0}', range(0, if(greater(length(parameters('firewallRules')), 0), length(parameters('firewallRules')), 1))[copyIndex()])]",
    "properties": {
        "expressionEvaluationOptions": {
        "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
        "ip": {
            "value": "[parameters('firewallRules')[range(0, if(greater(length(parameters('firewallRules')), 0), length(parameters('firewallRules')), 1))[copyIndex()]]]"
        },
        "serverName": {
            "value": "[parameters('serverName')]"
        }
        },
        "template": {
        "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
        "contentVersion": "1.0.0.0",
        "parameters": {
            "serverName": {
            "type": "string"
            },
            "ip": {
            "type": "object"
            }
        },
        "resources": [
            {
            "type": "Microsoft.DBforPostgreSQL/flexibleServers/firewallRules",
            "apiVersion": "2024-08-01",
            "name": "[format('{0}/{1}', parameters('serverName'), parameters('ip').name)]",
            "properties": {
                "startIpAddress": "[parameters('ip').startIPAddress]",
                "endIpAddress": "[parameters('ip').endIPAddress]"
            }
            }
        ]
        }
    },
    "dependsOn": [
        "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', parameters('serverName'))]"
    ]
    }
]
}
These resources are defined in theMicrosoft.DBforPostgreSQL/flexibleServersandMicrosoft.DBforPostgreSQL/flexibleServers/firewallRulestemplates.
SelectOpen Cloud Shellfrom the following code block, to open Azure Cloud Shell. Copy and paste the code, replace the argument placeholders with your own values, and selectEnter.az group create --name <resource-group> --location <region>
az deployment group create --name QuickstartAzureDatabaseForPostgreSQLFlexibleServer --resource-group <resource-group> --template-file <path-to-template-file> --parameters serverName=<server> administratorLoginPassword=<admin-password> firewallRules="[{'name':'ClientIPAddress','startIPAddress':'$(curl ipinfo.io/ip)','endIPAddress':'$(curl ipinfo.io/ip)'}]"
SelectOpen Cloud Shellfrom the following code block, to open Azure Cloud Shell. Copy and paste the code, replace the argument placeholders with your own values, and selectEnter.
az group create --name <resource-group> --location <region>
az deployment group create --name QuickstartAzureDatabaseForPostgreSQLFlexibleServer --resource-group <resource-group> --template-file <path-to-template-file> --parameters serverName=<server> administratorLoginPassword=<admin-password> firewallRules="[{'name':'ClientIPAddress','startIPAddress':'$(curl ipinfo.io/ip)','endIPAddress':'$(curl ipinfo.io/ip)'}]"
az group create --name <resource-group> --location <region>
az deployment group create --name QuickstartAzureDatabaseForPostgreSQLFlexibleServer --resource-group <resource-group> --template-file <path-to-template-file> --parameters serverName=<server> administratorLoginPassword=<admin-password> firewallRules="[{'name':'ClientIPAddress','startIPAddress':'$(curl ipinfo.io/ip)','endIPAddress':'$(curl ipinfo.io/ip)'}]"
Databases available in an Azure Database for PostgreSQL flexible server instance
By default, a database calledpostgresis created in your instance. Thepostgresdatabase is a default database that's meant for use by users, utilities, and third-party applications.
A second database that is created on every instance isazure_maintenance. Although you can connect to this database, you have minimum permissions granted so you can barely do anything in it.
Finally, there's databaseazure_sys, which is used to host some objects used by features likequery storeandindex tuning.
Note
Connections to your Azure Database for PostgreSQL flexible server instance typically communicate over port 5432. An exception to this is when you're connecting via a connection pooler like the built-inPgBouncer, which is integrated with Azure Database for PostgreSQL flexible server. Built-in PgBouncer listens on port 6432.
When you try to connect from within a corporate network, outbound traffic over port 5432 (or 6432 if you're connecting through PgBouncer) might be blocked by your network's firewall. If that's the case, you won't be able to connect to your instance, unless your IT department allows you to route traffic from your computer to the target instance, via the necessary port (5432 or 6432).
Get the connection information
To connect to your instance, you need to have its fully qualified name and the credentials of the user with which you want to connect. You should have noted those values from when you deployed the instance, earlier in this article. If you didn't, you can retrieve everything but the password of the administrator user. If you forgot the password assigned to your instance, you can always reset it. To learn how to do it, seereset admin password.
Portal
CLI
Using theAzure portal:
Open theOverviewpage of your new instance.
Open theOverviewpage of your new instance.

Copy the value ofEndpoint, and save it somewhere to use it later. Hover your cursor over each field, and the copy symbol appears to the right of the text. Select the copy symbol as needed to copy the values.
Copy the value ofEndpoint, and save it somewhere to use it later. Hover your cursor over each field, and the copy symbol appears to the right of the text. Select the copy symbol as needed to copy the values.

Copy the value ofAdministrator login, and save it somewhere to use it later. Hover your cursor over each field, and the copy symbol appears to the right of the text. Select the copy symbol as needed to copy the values.
Copy the value ofAdministrator login, and save it somewhere to use it later. Hover your cursor over each field, and the copy symbol appears to the right of the text. Select the copy symbol as needed to copy the values.

TheAzure Cloud Shellis a free interactive shell that you can use to run the steps in this article. It has common Azure tools preinstalled and configured to use with your account.
To open the Cloud Shell, just selectOpen Cloud Shellfrom the upper right corner of a code block. You can also open Cloud Shell in a separate browser tab, by going tohttps://shell.azure.com/bash. SelectCopyto copy the blocks of code, paste them into the Cloud Shell, and selectEnterto run them.
If you prefer to install and use Azure CLI locally, this quickstart requires version 2.67.0 or later. Runaz --versionto find the version currently installed. If you need to install or upgrade Azure CLI, seeInstall Azure CLI.
az --version
Run the following command to retrieve the fully qualified name of the instance and the name of the administrator user:az postgres flexible-server show \
  --resource-group <resource-group> \
  --name <server> \
  --query "{serverName:fullyQualifiedDomainName, adminUser:administratorLogin}" \
  --output table
Run the following command to retrieve the fully qualified name of the instance and the name of the administrator user:
az postgres flexible-server show \
  --resource-group <resource-group> \
  --name <server> \
  --query "{serverName:fullyQualifiedDomainName, adminUser:administratorLogin}" \
  --output table
az postgres flexible-server show \
  --resource-group <resource-group> \
  --name <server> \
  --query "{serverName:fullyQualifiedDomainName, adminUser:administratorLogin}" \
  --output table
Connect using psql
There are many applications you can use to connect to your Azure Database for PostgreSQL flexible server instance. If your client computer has PostgreSQL installed, you can use a local instance ofpsqlto connect to an Azure Database for PostgreSQL flexible server instance. If it isn't installed on your machine,download the ready-to-use packagethat targets your platform and install it.
Once installed, you can use the psql command-line utility to connect to the Azure Database for PostgreSQL flexible server instance.
Run the following psql command to connect to an Azure Database for PostgreSQL flexible server instance.psql "host=<server> port=<port> user=<admin-user> dbname=postgres sslmode=require"For example, the following command connects to the default database calledpostgreson your Azure Database for PostgreSQL flexible server instanceproduction-flexible-server.postgres.database.azure.comusing a user name calledadminuser. When prompted, type the password corresponding to that user.psql "host=production-flexible-server.postgres.database.azure.com port=5432 user=adminuser dbname=postgres sslmode=require"After you connect, the psql utility displays a postgres prompt where you type sql commands. In the initial connection output, a warning might appear because the psql you're using might be a different version than that of the Azure Database for PostgreSQL flexible server instance version.Example psql output:psql (14.13, server 16.4)
 WARNING: psql major version 14, server major version 16.
         Some psql features might not work.
 SSL connection (protocol: TLSv1.3, cipher: TLS_AES_256_GCM_SHA384, bits: 256, compression: off)
 Type "help" for help.

 postgres=>If there's no firewall rule on the instance for the public IP address from which you're trying to connect, you receive an error like:psql: error: connection to server at "<server>.postgres.database.azure.com" (###.###.###.###), port 5432 failed: Connection timed out
        Is the server running on that host and accepting TCP/IP connections?
Run the following psql command to connect to an Azure Database for PostgreSQL flexible server instance.
psql "host=<server> port=<port> user=<admin-user> dbname=postgres sslmode=require"
psql "host=<server> port=<port> user=<admin-user> dbname=postgres sslmode=require"
For example, the following command connects to the default database calledpostgreson your Azure Database for PostgreSQL flexible server instanceproduction-flexible-server.postgres.database.azure.comusing a user name calledadminuser. When prompted, type the password corresponding to that user.
postgres
production-flexible-server.postgres.database.azure.com
adminuser
psql "host=production-flexible-server.postgres.database.azure.com port=5432 user=adminuser dbname=postgres sslmode=require"
psql "host=production-flexible-server.postgres.database.azure.com port=5432 user=adminuser dbname=postgres sslmode=require"
After you connect, the psql utility displays a postgres prompt where you type sql commands. In the initial connection output, a warning might appear because the psql you're using might be a different version than that of the Azure Database for PostgreSQL flexible server instance version.
Example psql output:
psql (14.13, server 16.4)
 WARNING: psql major version 14, server major version 16.
         Some psql features might not work.
 SSL connection (protocol: TLSv1.3, cipher: TLS_AES_256_GCM_SHA384, bits: 256, compression: off)
 Type "help" for help.

 postgres=>
psql (14.13, server 16.4)
 WARNING: psql major version 14, server major version 16.
         Some psql features might not work.
 SSL connection (protocol: TLSv1.3, cipher: TLS_AES_256_GCM_SHA384, bits: 256, compression: off)
 Type "help" for help.

 postgres=>
If there's no firewall rule on the instance for the public IP address from which you're trying to connect, you receive an error like:
psql: error: connection to server at "<server>.postgres.database.azure.com" (###.###.###.###), port 5432 failed: Connection timed out
        Is the server running on that host and accepting TCP/IP connections?
psql: error: connection to server at "<server>.postgres.database.azure.com" (###.###.###.###), port 5432 failed: Connection timed out
        Is the server running on that host and accepting TCP/IP connections?
Create a blank database calleduser_databaseat the prompt by typing the following command:CREATE DATABASE user_database;
Create a blank database calleduser_databaseat the prompt by typing the following command:
user_database
CREATE DATABASE user_database;
CREATE DATABASE user_database;
At the prompt, execute the following command to switch connections to the newly created databaseuser_database:\c user_database
At the prompt, execute the following command to switch connections to the newly created databaseuser_database:
user_database
\c user_database
\c user_database
Type\q, and then selectEnterto quit psql.
Type\q, and then selectEnterto quit psql.
\q
You connected to the Azure Database for PostgreSQL flexible server instance via psql, and you created a blank user database.
Clean up resources
You can clean up the resources that you created in this quickstart in one of two ways. You can delete the Azure resource group, which includes all the resources in the resource group. If you want to keep other resources deployed in the same resource group intact, you can delete only the Azure Database for PostgreSQL flexible server instance.
Portal
CLI
Using theAzure portal:
To delete the entire resource group, including the newly created server.
SelectResource groups.
SelectResource groups.

Search for the resource group that you want to delete, and select its name.
Search for the resource group that you want to delete, and select its name.

In theOverviewpage of the resource group chosen, selectDelete resource group.
In theOverviewpage of the resource group chosen, selectDelete resource group.

Enter the name of the resource group in theEnter resource group name to confirm deletiontext box.
Enter the name of the resource group in theEnter resource group name to confirm deletiontext box.

SelectDelete.
SelectDelete.

To delete only the newly created server.
Locate your server in the portal, if you don't have it open. One way to do it is by typing the name of the server in the search bar. When the resource with the matching name is shown, select that resource.
Locate your server in the portal, if you don't have it open. One way to do it is by typing the name of the server in the search bar. When the resource with the matching name is shown, select that resource.
In theOverviewpage, selectDelete.
In theOverviewpage, selectDelete.

SelectI have read and understand that this server, as well as any databases it contains, will be deleted..
SelectI have read and understand that this server, as well as any databases it contains, will be deleted..

SelectDelete.
SelectDelete.

To delete the entire resource group, including the newly created server, execute the following command:
az group delete --name <resource-group>
az group delete --name <resource-group>
To delete only the newly created server, execute the following command:
az postgres flexible-server delete \
  --resource-group <resource-group> \
  --name <name>
az postgres flexible-server delete \
  --resource-group <resource-group> \
  --name <name>
Feedback
Was this page helpful?
Additional resources