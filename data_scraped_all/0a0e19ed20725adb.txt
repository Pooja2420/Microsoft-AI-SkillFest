Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Enable or disable role-based access control in Azure AI Search
Article
2025-01-28
3 contributors
In this article
Azure AI Search supports both keyless andkey-based authenticationfor all data plane operations. You can use Microsoft Entra ID authentication and role-based authorization to enable access to operations and content.
Important
When you create a search service, key-based authentication is the default, but it's not the most secure option. We recommend that you replace it with role-based access as described in this article.
Before you can assign roles for authorized data plane access to Azure AI Search, you must enable role-based access control on your search service. Roles for service administration (control plane) are built in and can't be enabled or disabled.
Data planerefers to operations against the search service endpoint, such as indexing or queries, or any other operation specified in theSearch Service REST APIsor equivalent Azure SDK client libraries.
Control planerefers to Azure resource management, such as creating or configuring a search service, or any other operation specified in theSearch Management REST APIs.
You can only enable or disable role-based access control for data plane operations. Control plane operations always use Owner, Contributor, or Reader roles. If you observe key-related activity, such as Get Admin Keys, in theActivity Logon a roles-only search service, those actions are initiated on the control plane and don't affect your content or content-related operations.
Prerequisites
A search service in any region, on any tier, including free.
A search service in any region, on any tier, including free.
Owner, User Access Administrator, or a custom role withMicrosoft.Authorization/roleAssignments/writepermissions.
Owner, User Access Administrator, or a custom role withMicrosoft.Authorization/roleAssignments/writepermissions.
Enable role-based access for data plane operations
Configure your search service to recognize anauthorizationheader on data requests that provide an OAuth2 access token.
When you enable roles for the data plane, the change is effective immediately, but wait a few seconds before assigning roles.
The default failure mode for unauthorized requests ishttp401WithBearerChallenge. Alternatively, you can set the failure mode tohttp403.
http401WithBearerChallenge
http403
Azure portal
Azure CLI
Azure PowerShell
REST API
Sign in to theAzure portaland navigate to your search service.
Sign in to theAzure portaland navigate to your search service.
SelectSettingsand then selectKeysin the left pane.
SelectSettingsand then selectKeysin the left pane.

ChooseRole-based control. Only chooseBothif you're currently using keys and need time to transition clients to role-based access control.OptionDescriptionAPI Key (default)RequiresAPI keyson the request header for authorization.Role-based access control (recommended)Requires membership in a role assignment to complete the task. It also requires an authorization header on the request.BothRequests are valid using either an API key or role-based access control, but if you provide both in the same request, the API key is used.
ChooseRole-based control. Only chooseBothif you're currently using keys and need time to transition clients to role-based access control.
As an administrator, if you choose a roles-only approach,assign data plane rolesto your user account to restore full administrative access over data plane operations in the Azure portal. Roles include Search Service Contributor, Search Index Data Contributor, and Search Index Data Reader. You need the first two roles if you want equivalent access.Sometimes it can take five to ten minutes for role assignments to take effect. Until that happens, the following message appears in the Azure portal pages used for data plane operations.
As an administrator, if you choose a roles-only approach,assign data plane rolesto your user account to restore full administrative access over data plane operations in the Azure portal. Roles include Search Service Contributor, Search Index Data Contributor, and Search Index Data Reader. You need the first two roles if you want equivalent access.
Sometimes it can take five to ten minutes for role assignments to take effect. Until that happens, the following message appears in the Azure portal pages used for data plane operations.

Run this script to support roles only:
az search service update `
  --name YOUR-SEARCH-SERVICE-NAME `
  --resource-group YOUR-RESOURCE-GROUP-NAME `
  --disable-local-auth
az search service update `
  --name YOUR-SEARCH-SERVICE-NAME `
  --resource-group YOUR-RESOURCE-GROUP-NAME `
  --disable-local-auth
Or, run this script to support both keys and roles:
az search service update `
  --name YOUR-SEARCH-SERVICE-NAME `
  --resource-group YOUR-RESOURCE-GROUP-NAME `
  --aad-auth-failure-mode http401WithBearerChallenge `
  --auth-options aadOrApiKey
az search service update `
  --name YOUR-SEARCH-SERVICE-NAME `
  --resource-group YOUR-RESOURCE-GROUP-NAME `
  --aad-auth-failure-mode http401WithBearerChallenge `
  --auth-options aadOrApiKey
For more information, seeManage your Azure AI Search service with the Azure CLI.
Run this command to set the authentication type to roles only:
Set-AzSearchService `
  -Name YOUR-SEARCH-SERVICE-NAME `
  -ResourceGroupName YOUR-RESOURCE-GROUP-NAME `
  -DisableLocalAuth 1
Set-AzSearchService `
  -Name YOUR-SEARCH-SERVICE-NAME `
  -ResourceGroupName YOUR-RESOURCE-GROUP-NAME `
  -DisableLocalAuth 1
Or, run this command to support both keys and roles:
Set-AzSearchService `
  -Name YOUR-SEARCH-SERVICE-NAME `
  -ResourceGroupName YOUR-RESOURCE-GROUP-NAME `
  -AuthOption AadOrApiKey
Set-AzSearchService `
  -Name YOUR-SEARCH-SERVICE-NAME `
  -ResourceGroupName YOUR-RESOURCE-GROUP-NAME `
  -AuthOption AadOrApiKey
For more information, seeManage your Azure AI Search service with PowerShell.
Use the Management REST APICreate or Update Serviceto configure your service for role-based access control.
All calls to the Management REST API are authenticated through Microsoft Entra ID. For help with setting up authenticated requests, seeManage Azure AI Search using REST.
Get service settings so that you can review the current configuration.GET https://management.azure.com/subscriptions/{{subscriptionId}}/providers/Microsoft.Search/searchServices?api-version=2023-11-01
Get service settings so that you can review the current configuration.
GET https://management.azure.com/subscriptions/{{subscriptionId}}/providers/Microsoft.Search/searchServices?api-version=2023-11-01
GET https://management.azure.com/subscriptions/{{subscriptionId}}/providers/Microsoft.Search/searchServices?api-version=2023-11-01
Use PATCH to update service configuration. The following modifications enable both keys and role-based access. If you want a roles-only configuration, seeDisable API keys.Under "properties", set"authOptions"to "aadOrApiKey". The "disableLocalAuth" property must be false to set "authOptions".Optionally, set"aadAuthFailureMode"to specify whether 401 is returned instead of 403 when authentication fails. Valid values are "http401WithBearerChallenge" or "http403".PATCH https://management.azure.com/subscriptions/{{subscriptionId}}/resourcegroups/{{resource-group}}/providers/Microsoft.Search/searchServices/{{search-service-name}}?api-version=2023-11-01
{
    "properties": {
        "disableLocalAuth": false,
        "authOptions": {
            "aadOrApiKey": {
                "aadAuthFailureMode": "http401WithBearerChallenge"
            }
        }
    }
}
Use PATCH to update service configuration. The following modifications enable both keys and role-based access. If you want a roles-only configuration, seeDisable API keys.
Under "properties", set"authOptions"to "aadOrApiKey". The "disableLocalAuth" property must be false to set "authOptions".
Optionally, set"aadAuthFailureMode"to specify whether 401 is returned instead of 403 when authentication fails. Valid values are "http401WithBearerChallenge" or "http403".
PATCH https://management.azure.com/subscriptions/{{subscriptionId}}/resourcegroups/{{resource-group}}/providers/Microsoft.Search/searchServices/{{search-service-name}}?api-version=2023-11-01
{
    "properties": {
        "disableLocalAuth": false,
        "authOptions": {
            "aadOrApiKey": {
                "aadAuthFailureMode": "http401WithBearerChallenge"
            }
        }
    }
}
PATCH https://management.azure.com/subscriptions/{{subscriptionId}}/resourcegroups/{{resource-group}}/providers/Microsoft.Search/searchServices/{{search-service-name}}?api-version=2023-11-01
{
    "properties": {
        "disableLocalAuth": false,
        "authOptions": {
            "aadOrApiKey": {
                "aadAuthFailureMode": "http401WithBearerChallenge"
            }
        }
    }
}
Disable role-based access control
It's possible to disable role-based access control for data plane operations and use key-based authentication instead. You might do this as part of a test workflow, for example to rule out permission issues.
To disable role-based access control in the Azure portal:
Sign in to theAzure portaland open the search service page.
Sign in to theAzure portaland open the search service page.
SelectSettingsand then selectKeysin the left pane.
SelectSettingsand then selectKeysin the left pane.
SelectAPI Keys.
SelectAPI Keys.
Disable API key authentication
Key access, or local authentication, can be disabled on your service if you're exclusively using the built-in roles and Microsoft Entra authentication. Disabling API keys causes the search service to refuse all data-related requests that pass an API key in the header.
Admin API keys can be disabled, but not deleted. Query API keys can be deleted.
Owner or Contributor permissions are required to disable security features.
Azure portal
Azure CLI
Azure PowerShell
REST API
In the Azure portal, navigate to your search service.
In the Azure portal, navigate to your search service.
In the left-navigation pane, selectKeys.
In the left-navigation pane, selectKeys.
SelectRole-based access control.
SelectRole-based access control.
The change is effective immediately, but wait a few seconds before testing. Assuming you have permission to assign roles as a member of Owner, service administrator, or coadministrator, you can use portal features to test role-based access.
To disable key-based authentication, set -disableLocalAuth to true. This is the same syntax as the "enable roles only" script presented in the previous section.
az search service update `
  --name YOUR-SEARCH-SERVICE-NAME `
  --resource-group YOUR-RESOURCE-GROUP-NAME `
  --disable-local-auth
az search service update `
  --name YOUR-SEARCH-SERVICE-NAME `
  --resource-group YOUR-RESOURCE-GROUP-NAME `
  --disable-local-auth
To re-enable key authentication, set -disableLocalAuth to false. The search service resumes acceptance of API keys on the request automatically (assuming they're specified).
For more information, seeManage your Azure AI Search service with the Azure CLI.
To disable key-based authentication, set DisableLocalAuth to true. This is the same syntax as the "enable roles only" script presented in the previous section.
Set-AzSearchService `
  -Name YOUR-SEARCH-SERVICE-NAME `
  -ResourceGroupName YOUR-RESOURCE-GROUP-NAME `
  -DisableLocalAuth 1
Set-AzSearchService `
  -Name YOUR-SEARCH-SERVICE-NAME `
  -ResourceGroupName YOUR-RESOURCE-GROUP-NAME `
  -DisableLocalAuth 1
To re-enable key authentication, set DisableLocalAuth to false. The search service resumes acceptance of API keys on the request automatically (assuming they're specified).
For more information, seeManage your Azure AI Search service with PowerShell.
To disable key-based authentication, set "disableLocalAuth" to true.
Get service settings so that you can review the current configuration.GET https://management.azure.com/subscriptions/{{subscriptionId}}/providers/Microsoft.Search/searchServices?api-version=2023-11-01
Get service settings so that you can review the current configuration.
GET https://management.azure.com/subscriptions/{{subscriptionId}}/providers/Microsoft.Search/searchServices?api-version=2023-11-01
GET https://management.azure.com/subscriptions/{{subscriptionId}}/providers/Microsoft.Search/searchServices?api-version=2023-11-01
Use PATCH to update service configuration. The following modification sets "authOptions" to null.PATCH https://management.azure.com/subscriptions/{{subscriptionId}}/resourcegroups/{{resource-group}}/providers/Microsoft.Search/searchServices/{{search-service-name}}?api-version=2023-11-01
{
    "properties": {
        "disableLocalAuth": true
    }
}
Use PATCH to update service configuration. The following modification sets "authOptions" to null.
PATCH https://management.azure.com/subscriptions/{{subscriptionId}}/resourcegroups/{{resource-group}}/providers/Microsoft.Search/searchServices/{{search-service-name}}?api-version=2023-11-01
{
    "properties": {
        "disableLocalAuth": true
    }
}
PATCH https://management.azure.com/subscriptions/{{subscriptionId}}/resourcegroups/{{resource-group}}/providers/Microsoft.Search/searchServices/{{search-service-name}}?api-version=2023-11-01
{
    "properties": {
        "disableLocalAuth": true
    }
}
To re-enable key authentication, set "disableLocalAuth" to false. The search service resumes acceptance of API keys on the request automatically (assuming they're specified).
Next steps
Set up roles for access to a search service
Feedback
Was this page helpful?
Additional resources