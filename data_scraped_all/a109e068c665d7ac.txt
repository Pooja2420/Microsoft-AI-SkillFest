Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Serverless event-based architectures with Azure Cosmos DB and Azure Functions
Article
2024-08-14
3 contributors
In this article
APPLIES TO:NoSQL
Azure Functions provides the simplest way to connect to thechange feed. You can create small reactive Azure Functions that will be automatically triggered on each new event in your Azure Cosmos DB container's change feed.

With theAzure Functions trigger for Azure Cosmos DB, you can leverage theChange Feed Processor's scaling and reliable event detection functionality without the need to maintain anyworker infrastructure. Just focus on your Azure Function's logic without worrying about the rest of the event-sourcing pipeline. You can even mix the Trigger with any otherAzure Functions bindings.
Note
The Azure Functions trigger useslatest version change feed mode.Currently, the Azure Functions trigger for Azure Cosmos DB is supported for use with the API for NoSQL only.
Requirements
To implement a serverless event-based flow, you need:
The monitored container: The monitored container is the Azure Cosmos DB container being monitored, and it stores the data from which the change feed is generated. Any inserts, updates to the monitored container are reflected in the change feed of the container.
The lease container: The lease container maintains state across multiple and dynamic serverless Azure Function instances and enables dynamic scaling. You can create the lease container automatically with the Azure Functions trigger for Azure Cosmos DB. You can also create the lease container manually. To automatically create the lease container, set theCreateLeaseContainerIfNotExistsflag in theconfiguration. Partitioned lease containers are required to have a/idpartition key definition.
/id
Create your Azure Functions trigger for Azure Cosmos DB
Creating your Azure Function with an Azure Functions trigger for Azure Cosmos DB is now supported across all Azure Functions IDE and CLI integrations:
Visual Studio Extensionfor Visual Studio users.
Visual Studio Code Extensionfor Visual Studio Code users.
And finallyCore CLI toolingfor a cross-platform IDE agnostic experience.
Run your trigger locally
You can run yourAzure Function locallywith theAzure Cosmos DB Emulatorto create and develop your serverless event-based flows without an Azure Subscription or incurring any costs.
If you want to test live scenarios in the cloud, you canTry Azure Cosmos DB for freewithout any credit card or Azure subscription required.
Next steps
You can now continue to learn more about change feed in the following articles:
Overview of change feed
Ways to read change feed
Using change feed processor library
How to work with change feed processor library
Serverless database computing using Azure Cosmos DB and Azure Functions
Feedback
Was this page helpful?
Additional resources