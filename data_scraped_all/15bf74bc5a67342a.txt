Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Choose the right authentication mechanism
Article
2025-01-07
15 contributors
In this article
Azure DevOps Services | Azure DevOps Server 2022 - Azure DevOps Server 2019
For applications that interface with Azure DevOps Services, you must authenticate to gain access to resources like REST APIs. This article provides guidance to help you choose the right authentication mechanism for your application.
The following table outlines suggested authentication concepts to consider for different application scenarios. Refer to the accompanying descriptions, examples, and code samples to help get you started.
Tip
Entra-based authenticationis our recommendation for developers looking to integrate with Azure DevOps Services, if you are interacting with Microsoft Entra accounts. The OAuth sample apps in this table are usingMicrosoft Entra's identity platform for app development.For authentication with Microsoft accounts (MSA) or Azure DevOps Server users, look into ourclient librariesorPATs.Read up more inour blogon how we're reducing PAT usage across our platform.
Frequently asked questions (FAQs)
Q: Why can't my service account access the Azure DevOps REST API?
A: Your service account might not have "materialized." Service accounts without interactive sign-in permissions can't sign in. For more information, seethis work-aroundfor a solution.
Q: Should I useAzure DevOps Services Client LibrariesorAzure DevOps Services REST APIsfor my interactive client-side application?
A: We recommend using Azure DevOps Services Client Libraries over REST APIs for accessing Azure DevOps Services resources. They're simpler and easier to maintain when REST endpoint versions change. If the client libraries lack certain functionality, useMSALfor authentication with our REST APIs.
Q: Is this guidance only for Azure DevOps Services or is it also relevant for on-premises Azure DevOps Server users?
A: This guidance is primarily for Azure DevOps Services users. For Azure Devops Server users, we recommend using theClient Libraries, Windows Authentication, orPersonal Access Tokens (PATs)for authentication.
Q: What if I want my application to authenticate with both Azure DevOps Server and Azure DevOps Services?
A: The best practice is to have separate authentication paths for Azure DevOps Server and Azure DevOps Services. You can use therequestContextto determine which service you're accessing and then apply the appropriate authentication mechanism. If you prefer a unified solution,PATswork for both.
requestContext
Related resources
About security and identity.
Azure DevOps data protection overview
Sample applications
Feedback
Was this page helpful?
Additional resources