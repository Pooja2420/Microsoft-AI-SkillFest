Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Azure Container Apps overview
Article
2024-11-19
6 contributors
In this article
Azure Container Apps is a serverless platform that allows you to maintain less infrastructure and save costs while running containerized applications. Instead of worrying about server configuration, container orchestration, and deployment details, Container Apps provides all the up-to-date server resources required to keep your applications stable and secure.
Common uses of Azure Container Apps include:
Deploying API endpoints
Hosting background processing jobs
Handling event-driven processing
Running microservices
Additionally, applications built on Azure Container Apps can dynamically scale based on the following characteristics:
HTTP traffic
Event-driven processing
CPU or memory load
AnyKEDA-supported scaler

To begin working with Container Apps, select the description that best describes your situation.
Features
With Azure Container Apps, you can:
Use the Azure CLI extension, Azure portal or ARM templatesto manage your applications.
Use the Azure CLI extension, Azure portal or ARM templatesto manage your applications.
Enable HTTPS or TCP ingresswithout having to manage other Azure infrastructure.
Enable HTTPS or TCP ingresswithout having to manage other Azure infrastructure.
Build microservices with Daprandaccess its rich set of APIs.
Build microservices with Daprandaccess its rich set of APIs.
Run jobson-demand, on a schedule, or based on events.
Run jobson-demand, on a schedule, or based on events.
AddAzure FunctionsandAzure Spring Appsto your Azure Container Apps environment.
AddAzure FunctionsandAzure Spring Appsto your Azure Container Apps environment.
Use specialized hardwarefor access to increased compute resources.
Use specialized hardwarefor access to increased compute resources.
Run multiple container revisionsand manage the container app's application lifecycle.
Run multiple container revisionsand manage the container app's application lifecycle.
Autoscaleyour apps based on any KEDA-supported scale trigger. Most applications can scale to zero1.
Autoscaleyour apps based on any KEDA-supported scale trigger. Most applications can scale to zero1.
Split trafficacross multiple versions of an application for Blue/Green deployments and A/B testing scenarios.
Split trafficacross multiple versions of an application for Blue/Green deployments and A/B testing scenarios.
Use internal ingress and service discoveryfor secure internal-only endpoints with built-in DNS-based service discovery.
Use internal ingress and service discoveryfor secure internal-only endpoints with built-in DNS-based service discovery.
Run containers from any registry, public or private, including Docker Hub and Azure Container Registry (ACR).
Run containers from any registry, public or private, including Docker Hub and Azure Container Registry (ACR).
Provide an existing virtual networkwhen creating an environment for your container apps.
Provide an existing virtual networkwhen creating an environment for your container apps.
Securely manage secretsdirectly in your application.
Securely manage secretsdirectly in your application.
Monitor logsusing Azure Log Analytics.
Monitor logsusing Azure Log Analytics.
Generous quotas, which can be overridden to increase limits on a per-account basis.
Generous quotas, which can be overridden to increase limits on a per-account basis.
1Applications thatscale on CPU or memory loadcan't scale to zero.
Introductory video
Next steps
Deploy your first container app
Feedback
Was this page helpful?
Additional resources