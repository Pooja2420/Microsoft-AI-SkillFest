Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Tutorial: Upgrade Azure Linux Container Host nodes
Article
2024-09-19
4 contributors
In this article
The Azure Linux Container Host ships updates through two mechanisms: updated Azure Linux node images and automatic package updates.
As part of the application and cluster lifecycle, we recommend keeping your clusters up to date and secured by enabling upgrades for your cluster. You can enable automatic node-image upgrades to ensure your clusters use the latest Azure Linux Container Host image when it scales up. You can also manually upgrade the node-image on a cluster.
In this tutorial, part five of five, you learn how to:
Manually upgrade the node-image on a cluster.
Automatically upgrade an Azure Linux Container Host cluster.
Deploy Kured in an Azure Linux Container Host cluster.
Note
Any upgrade operation, whether performed manually or automatically, upgrades the node image version if not already on the latest. The latest version is contingent on a full AKS release, and can be determined by visiting theAKS release tracker.
Prerequisites
In previous tutorials, you created and deployed an Azure Linux Container Host cluster. To complete this tutorial, you need an existing cluster. If you haven't done this step and would like to follow along, start withTutorial 1: Create a cluster with the Azure Linux Container Host for AKS.
You need the latest version of Azure CLI. Find the version using theaz --versioncommand. If you need to install or upgrade, seeInstall Azure CLI.
az --version
Manually upgrade your cluster
To manually upgrade the node-image on a cluster, you can runaz aks nodepool upgrade:
az aks nodepool upgrade
az aks nodepool upgrade \
    --resource-group testAzureLinuxResourceGroup \
    --cluster-name testAzureLinuxCluster \
    --name myAzureLinuxNodepool \
    --node-image-only
az aks nodepool upgrade \
    --resource-group testAzureLinuxResourceGroup \
    --cluster-name testAzureLinuxCluster \
    --name myAzureLinuxNodepool \
    --node-image-only
Automatically upgrade your cluster
Auto-upgrade provides a set once and forget mechanism that yields tangible time and operational cost benefits. By enabling auto-upgrade, you can ensure your clusters are up to date and don't miss the latest Azure Linux Container Host features or patches from AKS and upstream Kubernetes.
Automatically completed upgrades are functionally the same as manual upgrades. The selected channel determines the timing of upgrades. When making changes to auto-upgrade, allow 24 hours for the changes to take effect.
To set the auto-upgrade channel on existing cluster, update the--auto-upgrade-channelparameter, similar to the following example, which automatically upgrades the cluster to the latest supported patch release of a previous minor version.
--auto-upgrade-channel
az aks update --resource-group testAzureLinuxResourceGroup --name testAzureLinuxCluster --auto-upgrade-channel stable
az aks update --resource-group testAzureLinuxResourceGroup --name testAzureLinuxCluster --auto-upgrade-channel stable
For more information on upgrade channels, seeUsing cluster auto-upgrade.
Enable automatic package upgrades
Similar to setting your clusters to auto-upgrade, you can use the same set once and forget mechanism for package upgrades by enabling the node-os upgrade channel. If automatic package upgrades are enabled, thednf-automaticsystemd service runs daily and installs any updated packages that have been published.
dnf-automatic
To set the node-os upgrade channel on existing cluster, update the--node-os-upgrade-channelparameter, similar to the following example, which automatically enables package upgrades.
--node-os-upgrade-channel
az aks update --resource-group testAzureLinuxResourceGroup --name testAzureLinuxCluster --node-os-upgrade-channel Unmanaged
az aks update --resource-group testAzureLinuxResourceGroup --name testAzureLinuxCluster --node-os-upgrade-channel Unmanaged
Enable an automatic reboot daemon
To protect your clusters, security updates are automatically applied to Azure Linux nodes. These updates include OS security fixes, kernel updates, and package upgrades. Some of these updates require a node reboot to complete the process. AKS doesn't automatically reboot these nodes to complete the update process.
We recommend enabling an automatic reboot daemon, such asKured, so that your cluster can reboot nodes that have taken kernel updates. To deploy the Kured DaemonSet in an Azure Linux Container Host cluster, seeDeploy Kured in an AKS cluster.
Clean up resources
As this tutorial is the last part of the series, you may want to delete your Azure Linux Container Host cluster. The Kubernetes nodes run on Azure virtual machines and continue incurring charges even if you don't use the cluster. Use theaz group deletecommand to remove the resource group and all related resources.
az group delete
az group delete --name testAzureLinuxCluster --yes --no-wait
az group delete --name testAzureLinuxCluster --yes --no-wait
Next steps
In this tutorial, you upgraded your Azure Linux Container Host cluster. You learned how to:
Manually upgrade the node-image on a cluster.
Automatically upgrade an Azure Linux Container Host cluster.
Deploy kured in an Azure Linux Container Host cluster.
For more information on the Azure Linux Container Host, see theAzure Linux Container Host overview.
Feedback
Was this page helpful?
Additional resources