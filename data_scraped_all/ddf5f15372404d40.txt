Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Microsoft.CognitiveServices accounts
Article
2025-04-14
2 contributors
In this article
Latest
2025-04-01-preview
2024-10-01
2024-06-01-preview
2024-04-01-preview
2023-10-01-preview
2023-05-01
2022-12-01
2022-10-01
2022-03-01
2021-10-01
2021-04-30
2017-04-18
2016-02-01-preview
Bicep resource definition
The accounts resource type can be deployed with operations that target:
Resource groups- Seeresource group deployment commands
For a list of changed properties in each API version, seechange log.
Resource format
To create a Microsoft.CognitiveServices/accounts resource, add the following Bicep to your template.
resource symbolicname 'Microsoft.CognitiveServices/accounts@2025-04-01-preview' = {
  identity: {
    type: 'string'
    userAssignedIdentities: {
      {customized property}: {}
    }
  }
  kind: 'string'
  location: 'string'
  name: 'string'
  properties: {
    allowedFqdnList: [
      'string'
    ]
    allowProjectManagement: bool
    amlWorkspace: {
      identityClientId: 'string'
      resourceId: 'string'
    }
    apiProperties: {
      aadClientId: 'string'
      aadTenantId: 'string'
      eventHubConnectionString: 'string'
      qnaAzureSearchEndpointId: 'string'
      qnaAzureSearchEndpointKey: 'string'
      qnaRuntimeEndpoint: 'string'
      statisticsEnabled: bool
      storageAccountConnectionString: 'string'
      superUser: 'string'
      websiteName: 'string'
    }
    associatedProjects: [
      'string'
    ]
    customSubDomainName: 'string'
    defaultProject: 'string'
    disableLocalAuth: bool
    dynamicThrottlingEnabled: bool
    encryption: {
      keySource: 'string'
      keyVaultProperties: {
        identityClientId: 'string'
        keyName: 'string'
        keyVaultUri: 'string'
        keyVersion: 'string'
      }
    }
    locations: {
      regions: [
        {
          customsubdomain: 'string'
          name: 'string'
          value: int
        }
      ]
      routingMethod: 'string'
    }
    migrationToken: 'string'
    networkAcls: {
      bypass: 'string'
      defaultAction: 'string'
      ipRules: [
        {
          value: 'string'
        }
      ]
      virtualNetworkRules: [
        {
          id: 'string'
          ignoreMissingVnetServiceEndpoint: bool
          state: 'string'
        }
      ]
    }
    networkInjections: {
      scenario: 'string'
      subnetArmId: 'string'
      useMicrosoftManagedNetwork: bool
    }
    publicNetworkAccess: 'string'
    raiMonitorConfig: {
      adxStorageResourceId: 'string'
      identityClientId: 'string'
    }
    restore: bool
    restrictOutboundNetworkAccess: bool
    userOwnedStorage: [
      {
        identityClientId: 'string'
        resourceId: 'string'
      }
    ]
  }
  sku: {
    capacity: int
    family: 'string'
    name: 'string'
    size: 'string'
    tier: 'string'
  }
  tags: {
    {customized property}: 'string'
  }
}
resource symbolicname 'Microsoft.CognitiveServices/accounts@2025-04-01-preview' = {
  identity: {
    type: 'string'
    userAssignedIdentities: {
      {customized property}: {}
    }
  }
  kind: 'string'
  location: 'string'
  name: 'string'
  properties: {
    allowedFqdnList: [
      'string'
    ]
    allowProjectManagement: bool
    amlWorkspace: {
      identityClientId: 'string'
      resourceId: 'string'
    }
    apiProperties: {
      aadClientId: 'string'
      aadTenantId: 'string'
      eventHubConnectionString: 'string'
      qnaAzureSearchEndpointId: 'string'
      qnaAzureSearchEndpointKey: 'string'
      qnaRuntimeEndpoint: 'string'
      statisticsEnabled: bool
      storageAccountConnectionString: 'string'
      superUser: 'string'
      websiteName: 'string'
    }
    associatedProjects: [
      'string'
    ]
    customSubDomainName: 'string'
    defaultProject: 'string'
    disableLocalAuth: bool
    dynamicThrottlingEnabled: bool
    encryption: {
      keySource: 'string'
      keyVaultProperties: {
        identityClientId: 'string'
        keyName: 'string'
        keyVaultUri: 'string'
        keyVersion: 'string'
      }
    }
    locations: {
      regions: [
        {
          customsubdomain: 'string'
          name: 'string'
          value: int
        }
      ]
      routingMethod: 'string'
    }
    migrationToken: 'string'
    networkAcls: {
      bypass: 'string'
      defaultAction: 'string'
      ipRules: [
        {
          value: 'string'
        }
      ]
      virtualNetworkRules: [
        {
          id: 'string'
          ignoreMissingVnetServiceEndpoint: bool
          state: 'string'
        }
      ]
    }
    networkInjections: {
      scenario: 'string'
      subnetArmId: 'string'
      useMicrosoftManagedNetwork: bool
    }
    publicNetworkAccess: 'string'
    raiMonitorConfig: {
      adxStorageResourceId: 'string'
      identityClientId: 'string'
    }
    restore: bool
    restrictOutboundNetworkAccess: bool
    userOwnedStorage: [
      {
        identityClientId: 'string'
        resourceId: 'string'
      }
    ]
  }
  sku: {
    capacity: int
    family: 'string'
    name: 'string'
    size: 'string'
    tier: 'string'
  }
  tags: {
    {customized property}: 'string'
  }
}
Property Values
AccountProperties
AccountTags
ApiProperties
^( *)Endpoint=sb://(.*);( *)SharedAccessKeyName=(.*);( *)SharedAccessKey=(.*)$
^(( *)DefaultEndpointsProtocol=(http|https)( *);( *))?AccountName=(.*)AccountKey=(.*)EndpointSuffix=(.*)$
Encryption
Identity
IdentityUserAssignedIdentities
IpRule
KeyVaultProperties
Microsoft.CognitiveServices/accounts
^[a-zA-Z0-9][a-zA-Z0-9_.-]*$
MultiRegionSettings
NetworkInjections
NetworkRuleSet
RaiMonitorConfig
RegionSetting
Sku
UserAssignedIdentity
UserOwnedAmlWorkspace
UserOwnedStorage
VirtualNetworkRule
Usage Examples
Azure Verified Modules
The followingAzure Verified Modulescan be used to deploy this resource type.
Azure Quickstart Samples
The followingAzure Quickstart templatescontain Bicep samples for deploying this resource type.
ARM template resource definition
The accounts resource type can be deployed with operations that target:
Resource groups- Seeresource group deployment commands
For a list of changed properties in each API version, seechange log.
Resource format
To create a Microsoft.CognitiveServices/accounts resource, add the following JSON to your template.
{
  "type": "Microsoft.CognitiveServices/accounts",
  "apiVersion": "2025-04-01-preview",
  "name": "string",
  "identity": {
    "type": "string",
    "userAssignedIdentities": {
      "{customized property}": {
      }
    }
  },
  "kind": "string",
  "location": "string",
  "properties": {
    "allowedFqdnList": [ "string" ],
    "allowProjectManagement": "bool",
    "amlWorkspace": {
      "identityClientId": "string",
      "resourceId": "string"
    },
    "apiProperties": {
      "aadClientId": "string",
      "aadTenantId": "string",
      "eventHubConnectionString": "string",
      "qnaAzureSearchEndpointId": "string",
      "qnaAzureSearchEndpointKey": "string",
      "qnaRuntimeEndpoint": "string",
      "statisticsEnabled": "bool",
      "storageAccountConnectionString": "string",
      "superUser": "string",
      "websiteName": "string"
    },
    "associatedProjects": [ "string" ],
    "customSubDomainName": "string",
    "defaultProject": "string",
    "disableLocalAuth": "bool",
    "dynamicThrottlingEnabled": "bool",
    "encryption": {
      "keySource": "string",
      "keyVaultProperties": {
        "identityClientId": "string",
        "keyName": "string",
        "keyVaultUri": "string",
        "keyVersion": "string"
      }
    },
    "locations": {
      "regions": [
        {
          "customsubdomain": "string",
          "name": "string",
          "value": "int"
        }
      ],
      "routingMethod": "string"
    },
    "migrationToken": "string",
    "networkAcls": {
      "bypass": "string",
      "defaultAction": "string",
      "ipRules": [
        {
          "value": "string"
        }
      ],
      "virtualNetworkRules": [
        {
          "id": "string",
          "ignoreMissingVnetServiceEndpoint": "bool",
          "state": "string"
        }
      ]
    },
    "networkInjections": {
      "scenario": "string",
      "subnetArmId": "string",
      "useMicrosoftManagedNetwork": "bool"
    },
    "publicNetworkAccess": "string",
    "raiMonitorConfig": {
      "adxStorageResourceId": "string",
      "identityClientId": "string"
    },
    "restore": "bool",
    "restrictOutboundNetworkAccess": "bool",
    "userOwnedStorage": [
      {
        "identityClientId": "string",
        "resourceId": "string"
      }
    ]
  },
  "sku": {
    "capacity": "int",
    "family": "string",
    "name": "string",
    "size": "string",
    "tier": "string"
  },
  "tags": {
    "{customized property}": "string"
  }
}
{
  "type": "Microsoft.CognitiveServices/accounts",
  "apiVersion": "2025-04-01-preview",
  "name": "string",
  "identity": {
    "type": "string",
    "userAssignedIdentities": {
      "{customized property}": {
      }
    }
  },
  "kind": "string",
  "location": "string",
  "properties": {
    "allowedFqdnList": [ "string" ],
    "allowProjectManagement": "bool",
    "amlWorkspace": {
      "identityClientId": "string",
      "resourceId": "string"
    },
    "apiProperties": {
      "aadClientId": "string",
      "aadTenantId": "string",
      "eventHubConnectionString": "string",
      "qnaAzureSearchEndpointId": "string",
      "qnaAzureSearchEndpointKey": "string",
      "qnaRuntimeEndpoint": "string",
      "statisticsEnabled": "bool",
      "storageAccountConnectionString": "string",
      "superUser": "string",
      "websiteName": "string"
    },
    "associatedProjects": [ "string" ],
    "customSubDomainName": "string",
    "defaultProject": "string",
    "disableLocalAuth": "bool",
    "dynamicThrottlingEnabled": "bool",
    "encryption": {
      "keySource": "string",
      "keyVaultProperties": {
        "identityClientId": "string",
        "keyName": "string",
        "keyVaultUri": "string",
        "keyVersion": "string"
      }
    },
    "locations": {
      "regions": [
        {
          "customsubdomain": "string",
          "name": "string",
          "value": "int"
        }
      ],
      "routingMethod": "string"
    },
    "migrationToken": "string",
    "networkAcls": {
      "bypass": "string",
      "defaultAction": "string",
      "ipRules": [
        {
          "value": "string"
        }
      ],
      "virtualNetworkRules": [
        {
          "id": "string",
          "ignoreMissingVnetServiceEndpoint": "bool",
          "state": "string"
        }
      ]
    },
    "networkInjections": {
      "scenario": "string",
      "subnetArmId": "string",
      "useMicrosoftManagedNetwork": "bool"
    },
    "publicNetworkAccess": "string",
    "raiMonitorConfig": {
      "adxStorageResourceId": "string",
      "identityClientId": "string"
    },
    "restore": "bool",
    "restrictOutboundNetworkAccess": "bool",
    "userOwnedStorage": [
      {
        "identityClientId": "string",
        "resourceId": "string"
      }
    ]
  },
  "sku": {
    "capacity": "int",
    "family": "string",
    "name": "string",
    "size": "string",
    "tier": "string"
  },
  "tags": {
    "{customized property}": "string"
  }
}
Property Values
AccountProperties
AccountTags
ApiProperties
^( *)Endpoint=sb://(.*);( *)SharedAccessKeyName=(.*);( *)SharedAccessKey=(.*)$
^(( *)DefaultEndpointsProtocol=(http|https)( *);( *))?AccountName=(.*)AccountKey=(.*)EndpointSuffix=(.*)$
Encryption
Identity
IdentityUserAssignedIdentities
IpRule
KeyVaultProperties
Microsoft.CognitiveServices/accounts
^[a-zA-Z0-9][a-zA-Z0-9_.-]*$
MultiRegionSettings
NetworkInjections
NetworkRuleSet
RaiMonitorConfig
RegionSetting
Sku
UserAssignedIdentity
UserOwnedAmlWorkspace
UserOwnedStorage
VirtualNetworkRule
Usage Examples
Azure Quickstart Templates
The followingAzure Quickstart templatesdeploy this resource type.
Terraform (AzAPI provider) resource definition
The accounts resource type can be deployed with operations that target:
Resource groups
For a list of changed properties in each API version, seechange log.
Resource format
To create a Microsoft.CognitiveServices/accounts resource, add the following Terraform to your template.
resource "azapi_resource" "symbolicname" {
  type = "Microsoft.CognitiveServices/accounts@2025-04-01-preview"
  name = "string"
  identity = {
    type = "string"
    userAssignedIdentities = {
      {customized property} = {
      }
    }
  }
  location = "string"
  tags = {
    {customized property} = "string"
  }
  body = {
    kind = "string"
    properties = {
      allowedFqdnList = [
        "string"
      ]
      allowProjectManagement = bool
      amlWorkspace = {
        identityClientId = "string"
        resourceId = "string"
      }
      apiProperties = {
        aadClientId = "string"
        aadTenantId = "string"
        eventHubConnectionString = "string"
        qnaAzureSearchEndpointId = "string"
        qnaAzureSearchEndpointKey = "string"
        qnaRuntimeEndpoint = "string"
        statisticsEnabled = bool
        storageAccountConnectionString = "string"
        superUser = "string"
        websiteName = "string"
      }
      associatedProjects = [
        "string"
      ]
      customSubDomainName = "string"
      defaultProject = "string"
      disableLocalAuth = bool
      dynamicThrottlingEnabled = bool
      encryption = {
        keySource = "string"
        keyVaultProperties = {
          identityClientId = "string"
          keyName = "string"
          keyVaultUri = "string"
          keyVersion = "string"
        }
      }
      locations = {
        regions = [
          {
            customsubdomain = "string"
            name = "string"
            value = int
          }
        ]
        routingMethod = "string"
      }
      migrationToken = "string"
      networkAcls = {
        bypass = "string"
        defaultAction = "string"
        ipRules = [
          {
            value = "string"
          }
        ]
        virtualNetworkRules = [
          {
            id = "string"
            ignoreMissingVnetServiceEndpoint = bool
            state = "string"
          }
        ]
      }
      networkInjections = {
        scenario = "string"
        subnetArmId = "string"
        useMicrosoftManagedNetwork = bool
      }
      publicNetworkAccess = "string"
      raiMonitorConfig = {
        adxStorageResourceId = "string"
        identityClientId = "string"
      }
      restore = bool
      restrictOutboundNetworkAccess = bool
      userOwnedStorage = [
        {
          identityClientId = "string"
          resourceId = "string"
        }
      ]
    }
    sku = {
      capacity = int
      family = "string"
      name = "string"
      size = "string"
      tier = "string"
    }
  }
}
resource "azapi_resource" "symbolicname" {
  type = "Microsoft.CognitiveServices/accounts@2025-04-01-preview"
  name = "string"
  identity = {
    type = "string"
    userAssignedIdentities = {
      {customized property} = {
      }
    }
  }
  location = "string"
  tags = {
    {customized property} = "string"
  }
  body = {
    kind = "string"
    properties = {
      allowedFqdnList = [
        "string"
      ]
      allowProjectManagement = bool
      amlWorkspace = {
        identityClientId = "string"
        resourceId = "string"
      }
      apiProperties = {
        aadClientId = "string"
        aadTenantId = "string"
        eventHubConnectionString = "string"
        qnaAzureSearchEndpointId = "string"
        qnaAzureSearchEndpointKey = "string"
        qnaRuntimeEndpoint = "string"
        statisticsEnabled = bool
        storageAccountConnectionString = "string"
        superUser = "string"
        websiteName = "string"
      }
      associatedProjects = [
        "string"
      ]
      customSubDomainName = "string"
      defaultProject = "string"
      disableLocalAuth = bool
      dynamicThrottlingEnabled = bool
      encryption = {
        keySource = "string"
        keyVaultProperties = {
          identityClientId = "string"
          keyName = "string"
          keyVaultUri = "string"
          keyVersion = "string"
        }
      }
      locations = {
        regions = [
          {
            customsubdomain = "string"
            name = "string"
            value = int
          }
        ]
        routingMethod = "string"
      }
      migrationToken = "string"
      networkAcls = {
        bypass = "string"
        defaultAction = "string"
        ipRules = [
          {
            value = "string"
          }
        ]
        virtualNetworkRules = [
          {
            id = "string"
            ignoreMissingVnetServiceEndpoint = bool
            state = "string"
          }
        ]
      }
      networkInjections = {
        scenario = "string"
        subnetArmId = "string"
        useMicrosoftManagedNetwork = bool
      }
      publicNetworkAccess = "string"
      raiMonitorConfig = {
        adxStorageResourceId = "string"
        identityClientId = "string"
      }
      restore = bool
      restrictOutboundNetworkAccess = bool
      userOwnedStorage = [
        {
          identityClientId = "string"
          resourceId = "string"
        }
      ]
    }
    sku = {
      capacity = int
      family = "string"
      name = "string"
      size = "string"
      tier = "string"
    }
  }
}
Property Values
AccountProperties
AccountTags
ApiProperties
^( *)Endpoint=sb://(.*);( *)SharedAccessKeyName=(.*);( *)SharedAccessKey=(.*)$
^(( *)DefaultEndpointsProtocol=(http|https)( *);( *))?AccountName=(.*)AccountKey=(.*)EndpointSuffix=(.*)$
Encryption
Identity
IdentityUserAssignedIdentities
IpRule
KeyVaultProperties
Microsoft.CognitiveServices/accounts
^[a-zA-Z0-9][a-zA-Z0-9_.-]*$
MultiRegionSettings
NetworkInjections
NetworkRuleSet
RaiMonitorConfig
RegionSetting
Sku
UserAssignedIdentity
UserOwnedAmlWorkspace
UserOwnedStorage
VirtualNetworkRule
Usage Examples
Azure Verified Modules
The followingAzure Verified Modulescan be used to deploy this resource type.
Feedback
Was this page helpful?
Additional resources