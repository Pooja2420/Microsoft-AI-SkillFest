Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Microsoft.IoTOperations instances/brokers
Article
2024-12-09
1 contributor
In this article
Latest
2025-04-01
2024-11-01
2024-09-15-preview
2024-08-15-preview
2024-07-01-preview
Bicep resource definition
The instances/brokers resource type can be deployed with operations that target:
Resource groups- Seeresource group deployment commands
For a list of changed properties in each API version, seechange log.
Resource format
To create a Microsoft.IoTOperations/instances/brokers resource, add the following Bicep to your template.
resource symbolicname 'Microsoft.IoTOperations/instances/brokers@2025-04-01' = {
  parent: resourceSymbolicName
  extendedLocation: {
    name: 'string'
    type: 'string'
  }
  name: 'string'
  properties: {
    advanced: {
      clients: {
        maxKeepAliveSeconds: int
        maxMessageExpirySeconds: int
        maxPacketSizeBytes: int
        maxReceiveMaximum: int
        maxSessionExpirySeconds: int
        subscriberQueueLimit: {
          length: int
          strategy: 'string'
        }
      }
      encryptInternalTraffic: 'string'
      internalCerts: {
        duration: 'string'
        privateKey: {
          algorithm: 'string'
          rotationPolicy: 'string'
        }
        renewBefore: 'string'
      }
    }
    cardinality: {
      backendChain: {
        partitions: int
        redundancyFactor: int
        workers: int
      }
      frontend: {
        replicas: int
        workers: int
      }
    }
    diagnostics: {
      logs: {
        level: 'string'
      }
      metrics: {
        prometheusPort: int
      }
      selfCheck: {
        intervalSeconds: int
        mode: 'string'
        timeoutSeconds: int
      }
      traces: {
        cacheSizeMegabytes: int
        mode: 'string'
        selfTracing: {
          intervalSeconds: int
          mode: 'string'
        }
        spanChannelCapacity: int
      }
    }
    diskBackedMessageBuffer: {
      ephemeralVolumeClaimSpec: {
        accessModes: [
          'string'
        ]
        dataSource: {
          apiGroup: 'string'
          kind: 'string'
          name: 'string'
        }
        dataSourceRef: {
          apiGroup: 'string'
          kind: 'string'
          name: 'string'
          namespace: 'string'
        }
        resources: {
          limits: {
            {customized property}: 'string'
          }
          requests: {
            {customized property}: 'string'
          }
        }
        selector: {
          matchExpressions: [
            {
              key: 'string'
              operator: 'string'
              values: [
                'string'
              ]
            }
          ]
          matchLabels: {
            {customized property}: 'string'
          }
        }
        storageClassName: 'string'
        volumeMode: 'string'
        volumeName: 'string'
      }
      maxSize: 'string'
      persistentVolumeClaimSpec: {
        accessModes: [
          'string'
        ]
        dataSource: {
          apiGroup: 'string'
          kind: 'string'
          name: 'string'
        }
        dataSourceRef: {
          apiGroup: 'string'
          kind: 'string'
          name: 'string'
          namespace: 'string'
        }
        resources: {
          limits: {
            {customized property}: 'string'
          }
          requests: {
            {customized property}: 'string'
          }
        }
        selector: {
          matchExpressions: [
            {
              key: 'string'
              operator: 'string'
              values: [
                'string'
              ]
            }
          ]
          matchLabels: {
            {customized property}: 'string'
          }
        }
        storageClassName: 'string'
        volumeMode: 'string'
        volumeName: 'string'
      }
    }
    generateResourceLimits: {
      cpu: 'string'
    }
    memoryProfile: 'string'
  }
}
resource symbolicname 'Microsoft.IoTOperations/instances/brokers@2025-04-01' = {
  parent: resourceSymbolicName
  extendedLocation: {
    name: 'string'
    type: 'string'
  }
  name: 'string'
  properties: {
    advanced: {
      clients: {
        maxKeepAliveSeconds: int
        maxMessageExpirySeconds: int
        maxPacketSizeBytes: int
        maxReceiveMaximum: int
        maxSessionExpirySeconds: int
        subscriberQueueLimit: {
          length: int
          strategy: 'string'
        }
      }
      encryptInternalTraffic: 'string'
      internalCerts: {
        duration: 'string'
        privateKey: {
          algorithm: 'string'
          rotationPolicy: 'string'
        }
        renewBefore: 'string'
      }
    }
    cardinality: {
      backendChain: {
        partitions: int
        redundancyFactor: int
        workers: int
      }
      frontend: {
        replicas: int
        workers: int
      }
    }
    diagnostics: {
      logs: {
        level: 'string'
      }
      metrics: {
        prometheusPort: int
      }
      selfCheck: {
        intervalSeconds: int
        mode: 'string'
        timeoutSeconds: int
      }
      traces: {
        cacheSizeMegabytes: int
        mode: 'string'
        selfTracing: {
          intervalSeconds: int
          mode: 'string'
        }
        spanChannelCapacity: int
      }
    }
    diskBackedMessageBuffer: {
      ephemeralVolumeClaimSpec: {
        accessModes: [
          'string'
        ]
        dataSource: {
          apiGroup: 'string'
          kind: 'string'
          name: 'string'
        }
        dataSourceRef: {
          apiGroup: 'string'
          kind: 'string'
          name: 'string'
          namespace: 'string'
        }
        resources: {
          limits: {
            {customized property}: 'string'
          }
          requests: {
            {customized property}: 'string'
          }
        }
        selector: {
          matchExpressions: [
            {
              key: 'string'
              operator: 'string'
              values: [
                'string'
              ]
            }
          ]
          matchLabels: {
            {customized property}: 'string'
          }
        }
        storageClassName: 'string'
        volumeMode: 'string'
        volumeName: 'string'
      }
      maxSize: 'string'
      persistentVolumeClaimSpec: {
        accessModes: [
          'string'
        ]
        dataSource: {
          apiGroup: 'string'
          kind: 'string'
          name: 'string'
        }
        dataSourceRef: {
          apiGroup: 'string'
          kind: 'string'
          name: 'string'
          namespace: 'string'
        }
        resources: {
          limits: {
            {customized property}: 'string'
          }
          requests: {
            {customized property}: 'string'
          }
        }
        selector: {
          matchExpressions: [
            {
              key: 'string'
              operator: 'string'
              values: [
                'string'
              ]
            }
          ]
          matchLabels: {
            {customized property}: 'string'
          }
        }
        storageClassName: 'string'
        volumeMode: 'string'
        volumeName: 'string'
      }
    }
    generateResourceLimits: {
      cpu: 'string'
    }
    memoryProfile: 'string'
  }
}
Property Values
AdvancedSettings
BackendChain
BrokerDiagnostics
BrokerProperties
Cardinality
CertManagerCertOptions
CertManagerPrivateKey
ClientConfig
DiagnosticsLogs
DiskBackedMessageBuffer
^[0-9]+[KMGTPE]$
ExtendedLocation
Frontend
GenerateResourceLimits
KubernetesReference
LocalKubernetesReference
Metrics
Microsoft.IoTOperations/instances/brokers
^[a-z0-9][a-z0-9-]*[a-z0-9]$
SelfCheck
SelfTracing
SubscriberQueueLimit
Traces
VolumeClaimResourceRequirements
VolumeClaimResourceRequirementsLimits
VolumeClaimResourceRequirementsRequests
VolumeClaimSpec
VolumeClaimSpecSelector
VolumeClaimSpecSelectorMatchExpressions
VolumeClaimSpecSelectorMatchLabels
ARM template resource definition
The instances/brokers resource type can be deployed with operations that target:
Resource groups- Seeresource group deployment commands
For a list of changed properties in each API version, seechange log.
Resource format
To create a Microsoft.IoTOperations/instances/brokers resource, add the following JSON to your template.
{
  "type": "Microsoft.IoTOperations/instances/brokers",
  "apiVersion": "2025-04-01",
  "name": "string",
  "extendedLocation": {
    "name": "string",
    "type": "string"
  },
  "properties": {
    "advanced": {
      "clients": {
        "maxKeepAliveSeconds": "int",
        "maxMessageExpirySeconds": "int",
        "maxPacketSizeBytes": "int",
        "maxReceiveMaximum": "int",
        "maxSessionExpirySeconds": "int",
        "subscriberQueueLimit": {
          "length": "int",
          "strategy": "string"
        }
      },
      "encryptInternalTraffic": "string",
      "internalCerts": {
        "duration": "string",
        "privateKey": {
          "algorithm": "string",
          "rotationPolicy": "string"
        },
        "renewBefore": "string"
      }
    },
    "cardinality": {
      "backendChain": {
        "partitions": "int",
        "redundancyFactor": "int",
        "workers": "int"
      },
      "frontend": {
        "replicas": "int",
        "workers": "int"
      }
    },
    "diagnostics": {
      "logs": {
        "level": "string"
      },
      "metrics": {
        "prometheusPort": "int"
      },
      "selfCheck": {
        "intervalSeconds": "int",
        "mode": "string",
        "timeoutSeconds": "int"
      },
      "traces": {
        "cacheSizeMegabytes": "int",
        "mode": "string",
        "selfTracing": {
          "intervalSeconds": "int",
          "mode": "string"
        },
        "spanChannelCapacity": "int"
      }
    },
    "diskBackedMessageBuffer": {
      "ephemeralVolumeClaimSpec": {
        "accessModes": [ "string" ],
        "dataSource": {
          "apiGroup": "string",
          "kind": "string",
          "name": "string"
        },
        "dataSourceRef": {
          "apiGroup": "string",
          "kind": "string",
          "name": "string",
          "namespace": "string"
        },
        "resources": {
          "limits": {
            "{customized property}": "string"
          },
          "requests": {
            "{customized property}": "string"
          }
        },
        "selector": {
          "matchExpressions": [
            {
              "key": "string",
              "operator": "string",
              "values": [ "string" ]
            }
          ],
          "matchLabels": {
            "{customized property}": "string"
          }
        },
        "storageClassName": "string",
        "volumeMode": "string",
        "volumeName": "string"
      },
      "maxSize": "string",
      "persistentVolumeClaimSpec": {
        "accessModes": [ "string" ],
        "dataSource": {
          "apiGroup": "string",
          "kind": "string",
          "name": "string"
        },
        "dataSourceRef": {
          "apiGroup": "string",
          "kind": "string",
          "name": "string",
          "namespace": "string"
        },
        "resources": {
          "limits": {
            "{customized property}": "string"
          },
          "requests": {
            "{customized property}": "string"
          }
        },
        "selector": {
          "matchExpressions": [
            {
              "key": "string",
              "operator": "string",
              "values": [ "string" ]
            }
          ],
          "matchLabels": {
            "{customized property}": "string"
          }
        },
        "storageClassName": "string",
        "volumeMode": "string",
        "volumeName": "string"
      }
    },
    "generateResourceLimits": {
      "cpu": "string"
    },
    "memoryProfile": "string"
  }
}
{
  "type": "Microsoft.IoTOperations/instances/brokers",
  "apiVersion": "2025-04-01",
  "name": "string",
  "extendedLocation": {
    "name": "string",
    "type": "string"
  },
  "properties": {
    "advanced": {
      "clients": {
        "maxKeepAliveSeconds": "int",
        "maxMessageExpirySeconds": "int",
        "maxPacketSizeBytes": "int",
        "maxReceiveMaximum": "int",
        "maxSessionExpirySeconds": "int",
        "subscriberQueueLimit": {
          "length": "int",
          "strategy": "string"
        }
      },
      "encryptInternalTraffic": "string",
      "internalCerts": {
        "duration": "string",
        "privateKey": {
          "algorithm": "string",
          "rotationPolicy": "string"
        },
        "renewBefore": "string"
      }
    },
    "cardinality": {
      "backendChain": {
        "partitions": "int",
        "redundancyFactor": "int",
        "workers": "int"
      },
      "frontend": {
        "replicas": "int",
        "workers": "int"
      }
    },
    "diagnostics": {
      "logs": {
        "level": "string"
      },
      "metrics": {
        "prometheusPort": "int"
      },
      "selfCheck": {
        "intervalSeconds": "int",
        "mode": "string",
        "timeoutSeconds": "int"
      },
      "traces": {
        "cacheSizeMegabytes": "int",
        "mode": "string",
        "selfTracing": {
          "intervalSeconds": "int",
          "mode": "string"
        },
        "spanChannelCapacity": "int"
      }
    },
    "diskBackedMessageBuffer": {
      "ephemeralVolumeClaimSpec": {
        "accessModes": [ "string" ],
        "dataSource": {
          "apiGroup": "string",
          "kind": "string",
          "name": "string"
        },
        "dataSourceRef": {
          "apiGroup": "string",
          "kind": "string",
          "name": "string",
          "namespace": "string"
        },
        "resources": {
          "limits": {
            "{customized property}": "string"
          },
          "requests": {
            "{customized property}": "string"
          }
        },
        "selector": {
          "matchExpressions": [
            {
              "key": "string",
              "operator": "string",
              "values": [ "string" ]
            }
          ],
          "matchLabels": {
            "{customized property}": "string"
          }
        },
        "storageClassName": "string",
        "volumeMode": "string",
        "volumeName": "string"
      },
      "maxSize": "string",
      "persistentVolumeClaimSpec": {
        "accessModes": [ "string" ],
        "dataSource": {
          "apiGroup": "string",
          "kind": "string",
          "name": "string"
        },
        "dataSourceRef": {
          "apiGroup": "string",
          "kind": "string",
          "name": "string",
          "namespace": "string"
        },
        "resources": {
          "limits": {
            "{customized property}": "string"
          },
          "requests": {
            "{customized property}": "string"
          }
        },
        "selector": {
          "matchExpressions": [
            {
              "key": "string",
              "operator": "string",
              "values": [ "string" ]
            }
          ],
          "matchLabels": {
            "{customized property}": "string"
          }
        },
        "storageClassName": "string",
        "volumeMode": "string",
        "volumeName": "string"
      }
    },
    "generateResourceLimits": {
      "cpu": "string"
    },
    "memoryProfile": "string"
  }
}
Property Values
AdvancedSettings
BackendChain
BrokerDiagnostics
BrokerProperties
Cardinality
CertManagerCertOptions
CertManagerPrivateKey
ClientConfig
DiagnosticsLogs
DiskBackedMessageBuffer
^[0-9]+[KMGTPE]$
ExtendedLocation
Frontend
GenerateResourceLimits
KubernetesReference
LocalKubernetesReference
Metrics
Microsoft.IoTOperations/instances/brokers
^[a-z0-9][a-z0-9-]*[a-z0-9]$
SelfCheck
SelfTracing
SubscriberQueueLimit
Traces
VolumeClaimResourceRequirements
VolumeClaimResourceRequirementsLimits
VolumeClaimResourceRequirementsRequests
VolumeClaimSpec
VolumeClaimSpecSelector
VolumeClaimSpecSelectorMatchExpressions
VolumeClaimSpecSelectorMatchLabels
Usage Examples
Terraform (AzAPI provider) resource definition
The instances/brokers resource type can be deployed with operations that target:
Resource groups
For a list of changed properties in each API version, seechange log.
Resource format
To create a Microsoft.IoTOperations/instances/brokers resource, add the following Terraform to your template.
resource "azapi_resource" "symbolicname" {
  type = "Microsoft.IoTOperations/instances/brokers@2025-04-01"
  name = "string"
  body = {
    extendedLocation = {
      name = "string"
      type = "string"
    }
    properties = {
      advanced = {
        clients = {
          maxKeepAliveSeconds = int
          maxMessageExpirySeconds = int
          maxPacketSizeBytes = int
          maxReceiveMaximum = int
          maxSessionExpirySeconds = int
          subscriberQueueLimit = {
            length = int
            strategy = "string"
          }
        }
        encryptInternalTraffic = "string"
        internalCerts = {
          duration = "string"
          privateKey = {
            algorithm = "string"
            rotationPolicy = "string"
          }
          renewBefore = "string"
        }
      }
      cardinality = {
        backendChain = {
          partitions = int
          redundancyFactor = int
          workers = int
        }
        frontend = {
          replicas = int
          workers = int
        }
      }
      diagnostics = {
        logs = {
          level = "string"
        }
        metrics = {
          prometheusPort = int
        }
        selfCheck = {
          intervalSeconds = int
          mode = "string"
          timeoutSeconds = int
        }
        traces = {
          cacheSizeMegabytes = int
          mode = "string"
          selfTracing = {
            intervalSeconds = int
            mode = "string"
          }
          spanChannelCapacity = int
        }
      }
      diskBackedMessageBuffer = {
        ephemeralVolumeClaimSpec = {
          accessModes = [
            "string"
          ]
          dataSource = {
            apiGroup = "string"
            kind = "string"
            name = "string"
          }
          dataSourceRef = {
            apiGroup = "string"
            kind = "string"
            name = "string"
            namespace = "string"
          }
          resources = {
            limits = {
              {customized property} = "string"
            }
            requests = {
              {customized property} = "string"
            }
          }
          selector = {
            matchExpressions = [
              {
                key = "string"
                operator = "string"
                values = [
                  "string"
                ]
              }
            ]
            matchLabels = {
              {customized property} = "string"
            }
          }
          storageClassName = "string"
          volumeMode = "string"
          volumeName = "string"
        }
        maxSize = "string"
        persistentVolumeClaimSpec = {
          accessModes = [
            "string"
          ]
          dataSource = {
            apiGroup = "string"
            kind = "string"
            name = "string"
          }
          dataSourceRef = {
            apiGroup = "string"
            kind = "string"
            name = "string"
            namespace = "string"
          }
          resources = {
            limits = {
              {customized property} = "string"
            }
            requests = {
              {customized property} = "string"
            }
          }
          selector = {
            matchExpressions = [
              {
                key = "string"
                operator = "string"
                values = [
                  "string"
                ]
              }
            ]
            matchLabels = {
              {customized property} = "string"
            }
          }
          storageClassName = "string"
          volumeMode = "string"
          volumeName = "string"
        }
      }
      generateResourceLimits = {
        cpu = "string"
      }
      memoryProfile = "string"
    }
  }
}
resource "azapi_resource" "symbolicname" {
  type = "Microsoft.IoTOperations/instances/brokers@2025-04-01"
  name = "string"
  body = {
    extendedLocation = {
      name = "string"
      type = "string"
    }
    properties = {
      advanced = {
        clients = {
          maxKeepAliveSeconds = int
          maxMessageExpirySeconds = int
          maxPacketSizeBytes = int
          maxReceiveMaximum = int
          maxSessionExpirySeconds = int
          subscriberQueueLimit = {
            length = int
            strategy = "string"
          }
        }
        encryptInternalTraffic = "string"
        internalCerts = {
          duration = "string"
          privateKey = {
            algorithm = "string"
            rotationPolicy = "string"
          }
          renewBefore = "string"
        }
      }
      cardinality = {
        backendChain = {
          partitions = int
          redundancyFactor = int
          workers = int
        }
        frontend = {
          replicas = int
          workers = int
        }
      }
      diagnostics = {
        logs = {
          level = "string"
        }
        metrics = {
          prometheusPort = int
        }
        selfCheck = {
          intervalSeconds = int
          mode = "string"
          timeoutSeconds = int
        }
        traces = {
          cacheSizeMegabytes = int
          mode = "string"
          selfTracing = {
            intervalSeconds = int
            mode = "string"
          }
          spanChannelCapacity = int
        }
      }
      diskBackedMessageBuffer = {
        ephemeralVolumeClaimSpec = {
          accessModes = [
            "string"
          ]
          dataSource = {
            apiGroup = "string"
            kind = "string"
            name = "string"
          }
          dataSourceRef = {
            apiGroup = "string"
            kind = "string"
            name = "string"
            namespace = "string"
          }
          resources = {
            limits = {
              {customized property} = "string"
            }
            requests = {
              {customized property} = "string"
            }
          }
          selector = {
            matchExpressions = [
              {
                key = "string"
                operator = "string"
                values = [
                  "string"
                ]
              }
            ]
            matchLabels = {
              {customized property} = "string"
            }
          }
          storageClassName = "string"
          volumeMode = "string"
          volumeName = "string"
        }
        maxSize = "string"
        persistentVolumeClaimSpec = {
          accessModes = [
            "string"
          ]
          dataSource = {
            apiGroup = "string"
            kind = "string"
            name = "string"
          }
          dataSourceRef = {
            apiGroup = "string"
            kind = "string"
            name = "string"
            namespace = "string"
          }
          resources = {
            limits = {
              {customized property} = "string"
            }
            requests = {
              {customized property} = "string"
            }
          }
          selector = {
            matchExpressions = [
              {
                key = "string"
                operator = "string"
                values = [
                  "string"
                ]
              }
            ]
            matchLabels = {
              {customized property} = "string"
            }
          }
          storageClassName = "string"
          volumeMode = "string"
          volumeName = "string"
        }
      }
      generateResourceLimits = {
        cpu = "string"
      }
      memoryProfile = "string"
    }
  }
}
Property Values
AdvancedSettings
BackendChain
BrokerDiagnostics
BrokerProperties
Cardinality
CertManagerCertOptions
CertManagerPrivateKey
ClientConfig
DiagnosticsLogs
DiskBackedMessageBuffer
^[0-9]+[KMGTPE]$
ExtendedLocation
Frontend
GenerateResourceLimits
KubernetesReference
LocalKubernetesReference
Metrics
Microsoft.IoTOperations/instances/brokers
^[a-z0-9][a-z0-9-]*[a-z0-9]$
SelfCheck
SelfTracing
SubscriberQueueLimit
Traces
VolumeClaimResourceRequirements
VolumeClaimResourceRequirementsLimits
VolumeClaimResourceRequirementsRequests
VolumeClaimSpec
VolumeClaimSpecSelector
VolumeClaimSpecSelectorMatchExpressions
VolumeClaimSpecSelectorMatchLabels
Feedback
Was this page helpful?
Additional resources