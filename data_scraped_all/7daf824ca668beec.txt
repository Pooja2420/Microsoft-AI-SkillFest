Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Quickstart: Build your first static web app
Article
2024-09-18
7 contributors
In this article
Azure Static Web Apps publishes a website to a production environment by building apps from an Azure DevOps or GitHub repository. In this quickstart, you deploy a web application to Azure Static Web apps using the Azure portal.
Prerequisites
If you don't have an Azure subscription,create a free trial account.
GitHubaccount
If you don't have an Azure subscription,create a free trial account.
Azure DevOpsorganization
Create a repository
This article uses a GitHub template repository to make it easy for you to get started. The template features a starter app to deploy to Azure Static Web Apps.
No Framework
Angular
Blazor
React
Vue
Navigate to the following location to create a new repository:https://github.com/staticwebdev/vanilla-basic/generate
https://github.com/staticwebdev/vanilla-basic/generate
Name your repositorymy-first-static-web-app
Note
Azure Static Web Apps requires at least one HTML file to create a web app. The repository you create in this step includes a singleindex.htmlfile.
Navigate to the following location to create a new repository:https://github.com/staticwebdev/angular-basic/generate
https://github.com/staticwebdev/angular-basic/generate
Name your repositorymy-first-static-web-app
Navigate to the following location to create a new repository:https://github.com/staticwebdev/blazor-basic/generate
https://github.com/staticwebdev/blazor-basic/generate
Name your repositorymy-first-static-web-app
Navigate to the following location to create a new repository:https://github.com/staticwebdev/react-basic/generate
https://github.com/staticwebdev/react-basic/generate
Name your repositorymy-first-static-web-app
Navigate to the following location to create a new repository:https://github.com/staticwebdev/vue-basic/generate
https://github.com/staticwebdev/vue-basic/generate
Name your repositorymy-first-static-web-app
SelectCreate repository.

Create a repository
This article uses an Azure DevOps repository to make it easy for you to get started. The repository features a starter app used to deploy using Azure Static Web Apps.
Sign in to Azure DevOps.
Sign in to Azure DevOps.
SelectNew repository.
SelectNew repository.
In theCreate new projectwindow, expandAdvancedmenu and make the following selections:SettingValueProjectEntermy-first-web-static-app.VisibilitySelectPrivate.Version controlSelectGit.Work item processSelect the option that best suits your development methods.
In theCreate new projectwindow, expandAdvancedmenu and make the following selections:
SelectCreate.
SelectCreate.
Select theReposmenu item.
Select theReposmenu item.
Select theFilesmenu item.
Select theFilesmenu item.
Under theImport repositorycard, selectImport.
Under theImport repositorycard, selectImport.
Copy a repository URL for the framework of your choice, and paste it into theClone URLbox.No FrameworkAngularBlazorReactVuehttps://github.com/staticwebdev/vanilla-basic.githttps://github.com/staticwebdev/angular-basic.githttps://github.com/staticwebdev/blazor-basic.githttps://github.com/staticwebdev/react-basic.githttps://github.com/staticwebdev/vue-basic.git
Copy a repository URL for the framework of your choice, and paste it into theClone URLbox.
No Framework
Angular
Blazor
React
Vue
https://github.com/staticwebdev/vanilla-basic.git
https://github.com/staticwebdev/angular-basic.git
https://github.com/staticwebdev/blazor-basic.git
https://github.com/staticwebdev/react-basic.git
https://github.com/staticwebdev/vue-basic.git
SelectImportand wait for the import process to complete.
SelectImportand wait for the import process to complete.
Create a static web app
Now that the repository is created, you can create a static web app from the Azure portal.
Go to theAzure portal.
SelectCreate a Resource.
Search forStatic Web Apps.
SelectStatic Web Apps.
SelectCreate.
In theBasicssection, begin by configuring your new app and linking it to a GitHub repository.
If necessary sign in with GitHub, and enter the following repository information.

Note
If you don't see a list of repositories:
You may need to authorize Azure Static Web Apps in GitHub. Browse to your GitHub profile and go toSettings > Applications > Authorized OAuth Apps, selectAzure Static Web Apps, and then selectGrant.
You may need to authorize Azure Static Web Apps in GitHub. Browse to your GitHub profile and go toSettings > Applications > Authorized OAuth Apps, selectAzure Static Web Apps, and then selectGrant.
You may need to authorize Azure Static Web Apps in your Azure DevOps organization. You must be an owner of the organization to grant the permissions. Request third-party application access via OAuth. For more information, seeAuthorize access to REST APIs with OAuth 2.0.
You may need to authorize Azure Static Web Apps in your Azure DevOps organization. You must be an owner of the organization to grant the permissions. Request third-party application access via OAuth. For more information, seeAuthorize access to REST APIs with OAuth 2.0.
In theBasicssection, begin by configuring your new app and linking it to an Azure DevOps repository.
Note
Make sure the branch you are using is not protected, and that you have sufficient permissions to issue apushcommand. To verify, browse to your DevOps repository and go toRepos->Branchesand selectMore options. Next, select your branch, and thenBranch policiesto ensure required policies aren't enabled.
push
In theBuild Detailssection, add configuration details specific to your preferred front-end framework.
No Framework
Angular
Blazor
React
Vue
From theBuild Presetsdropdown, selectCustom.
In theApp locationbox, enter./src.
Leave theApi locationbox empty.
In theOutput locationbox, enter./src.
From theBuild Presetsdropdown, selectAngular.
Keep the default value in theApp locationbox.
Leave theApi locationbox empty.
In theOutput locationbox, enterdist/angular-basic.
FromBuild Presetsdropdown, selectBlazor.
Keep the default value ofClientin theApp locationbox.
Leave theApi locationbox empty.
Keep the default value ofwwwrootin theOutput locationbox.
From theBuild Presetsdropdown, selectReact.
Keep the default value in theApp locationbox.
Leave theApi locationbox empty.
In theOutput locationbox, enterbuild.
From theBuild Presetsdropdown, selectVue.js.
Keep the default value in theApp locationbox.
Leave theApi locationbox empty.
Keep the default value in theApp artifact locationbox.
SelectReview + create.
SelectCreate.

Note
You can edit theworkflow fileto change these values after you create the app.
SelectCreate.

SelectGo to resource.

View the website
There are two aspects to deploying a static app. The first creates the underlying Azure resources that make up your app. The second is a workflow that builds and publishes your application.
Before you can go to your new static site, the deployment build must first finish running.
The Static Web AppsOverviewwindow displays a series of links that help you interact with your web app.

Selecting on the banner that says,Select here to check the status of your GitHub Actions runstakes you to the GitHub Actions running against your repository. Once you verify the deployment job is complete, then you can go to your website via the generated URL.
Selecting on the banner that says,Select here to check the status of your GitHub Actions runstakes you to the GitHub Actions running against your repository. Once you verify the deployment job is complete, then you can go to your website via the generated URL.
Once GitHub Actions workflow is complete, you can select theURLlink to open the website in new tab.
Once GitHub Actions workflow is complete, you can select theURLlink to open the website in new tab.
Once the  workflow is complete, you can select theURLlink to open the website in new tab.
Clean up resources
If you're not going to continue to use this application, you can delete the Azure Static Web Apps instance through the following steps:
Open theAzure portal.
Search formy-first-web-static-appfrom the top search bar.
Select the app name.
SelectDelete.
SelectYesto confirm the delete action (this action may take a few moments to complete).
Related content
Video series: Deploy websites to the cloud with Azure Static Web Apps
Next steps
Add an API
Feedback
Was this page helpful?
Additional resources