Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Configure customer-managed keys for Azure NetApp Files volume encryption
Article
2025-04-25
7 contributors
In this article
Customer-managed keys for Azure NetApp Files volume encryption enable you to use your own keys rather than a platform-managed key when creating a new volume. With customer-managed keys, you can fully manage the relationship between a key's life cycle, key usage permissions, and auditing operations on keys.
The following diagram demonstrates how customer-managed keys work with Azure NetApp Files:

Azure NetApp Files grants permissions to encryption keys to a managed identity. The managed identity is either a user-assigned managed identity that you create and manage or a system-assigned managed identity associated with the NetApp account.
Azure NetApp Files grants permissions to encryption keys to a managed identity. The managed identity is either a user-assigned managed identity that you create and manage or a system-assigned managed identity associated with the NetApp account.
You configure encryption with a customer-managed key for the NetApp account.
You configure encryption with a customer-managed key for the NetApp account.
You use the managed identity to which the Azure Key Vault admin granted permissions in step 1 to authenticate access to Azure Key Vault via Microsoft Entra ID.
You use the managed identity to which the Azure Key Vault admin granted permissions in step 1 to authenticate access to Azure Key Vault via Microsoft Entra ID.
Azure NetApp Files wraps the account encryption key with the customer-managed key in Azure Key Vault.Customer-managed keys don't affect performance of Azure NetApp Files. Its only difference from platform-managed keys is how the key is managed.
Azure NetApp Files wraps the account encryption key with the customer-managed key in Azure Key Vault.
Customer-managed keys don't affect performance of Azure NetApp Files. Its only difference from platform-managed keys is how the key is managed.
For read/write operations, Azure NetApp Files sends requests to Azure Key Vault to unwrap the account encryption key to perform encryption and decryption operations.
For read/write operations, Azure NetApp Files sends requests to Azure Key Vault to unwrap the account encryption key to perform encryption and decryption operations.
Cross-tenant customer-managed keys is available in all Azure NetApp Files supported regions.
Considerations
To create a volume using customer-managed keys, you must select theStandardnetwork features. You can't use customer-managed key volumes with volume configured using Basic network features. Follow instructions in toSet the Network Features optionin the volume creation page.
For increased security, you can select theDisable public accessoption within the network settings of your key vault. When selecting this option, you must also selectAllow trusted Microsoft services to bypass this firewallto permit the Azure NetApp Files service to access your encryption key.
Customer-managed keys support automatic Managed System Identity (MSI) certificate renewal. If your certificate is valid, you don't need to manually update it.
If Azure NetApp Files fails to create a customer-managed key volume, error messages are displayed. For more information, seeError messages and troubleshooting.
Do not make any changes to the underlying Azure Key Vault or Azure Private Endpoint after creating a customer-managed keys volume. Making changes can make the volumes inaccessible. If you must make changes, seeUpdate the private endpoint IP for customer-managed keys.
Azure NetApp Files supports the ability totransition existing volumes from platform-managed keys (PMK) to customer-managed keys (CMK) without data migration. This provides flexibility with the encryption key lifecycle (renewals, rotations) and extra security for regulated industry requirements.
If Azure Key Vault becomes inaccessible, Azure NetApp Files loses its access to the encryption keys and the ability to read or write data to volumes enabled with customer-managed keys. In this situation, create a support ticket to have access manually restored for the affected volumes.
Azure NetApp Files supports customer-managed keys on source and data replication volumes with cross-region replication or cross-zone replication relationships.
Applying Azure network security groups (NSG) on the private link subnet to Azure Key Vault is supported for Azure NetApp Files customer-managed keys. NSGs donât affect connectivity to private links unless a private endpoint network policy is enabled on the subnet.
Wrap/unwrap is not supported. Customer-managed keys uses encrypt/decrypt. For more information, seeRSA algorithms.
Requirements
Before creating your first customer-managed key volume, you must set up:
AnAzure Key Vault, containing at least one key.The key vault must have soft delete and purge protection enabled.The key must be of type RSA.
The key vault must have soft delete and purge protection enabled.
The key must be of type RSA.
The key vault must have anAzure Private Endpoint.The private endpoint must reside in a different subnet than the one delegated to Azure NetApp Files. The subnet must be in the same virtual network as the one delegated to Azure NetApp.
The private endpoint must reside in a different subnet than the one delegated to Azure NetApp Files. The subnet must be in the same virtual network as the one delegated to Azure NetApp.
For more information about Azure Key Vault and Azure Private Endpoint, see:
Quickstart: Create a key vault
Create or import a key into the vault
Create a private endpoint
More about keys and supported key types
Network security groups
Manage network policies for private endpoints
Configure a NetApp account to use customer-managed keys
Portal
Azure CLI
Azure PowerShell
In the Azure portal and under Azure NetApp Files, selectEncryption.TheEncryptionpage enables you to manage encryption settings for your NetApp account. It includes an option to let you set your NetApp account to use your own encryption key, which is stored inAzure Key Vault. This setting provides a system-assigned identity to the NetApp account, and it adds an access policy for the identity with the required key permissions.
In the Azure portal and under Azure NetApp Files, selectEncryption.
TheEncryptionpage enables you to manage encryption settings for your NetApp account. It includes an option to let you set your NetApp account to use your own encryption key, which is stored inAzure Key Vault. This setting provides a system-assigned identity to the NetApp account, and it adds an access policy for the identity with the required key permissions.

When you set your NetApp account to use customer-managed key, you have two ways to specify the Key URI:TheSelect from key vaultoption allows you to select a key vault and a key.TheEnter key URIoption allows you to enter manually the key URI.
When you set your NetApp account to use customer-managed key, you have two ways to specify the Key URI:
TheSelect from key vaultoption allows you to select a key vault and a key.
TheSelect from key vaultoption allows you to select a key vault and a key.
TheEnter key URIoption allows you to enter manually the key URI.
TheEnter key URIoption allows you to enter manually the key URI.
Select the identity type that you want to use for authentication to the Azure Key Vault. If your Azure Key Vault is configured to use Vault access policy as its permission model, both options are available. Otherwise, only the user-assigned option is available.If you chooseSystem-assigned, select theSavebutton. The Azure portal configures the NetApp account automatically by adding a system-assigned identity to your NetApp account. An access policy is also created on your Azure Key Vault with key permissions Get, Encrypt, Decrypt.If you chooseUser-assigned, you must select an identity. ChooseSelect an identityto open a context pane where you select a user-assigned managed identity.If you've configured your Azure Key Vault to use Vault access policy, the Azure portal configures the NetApp account automatically with the following process: The user-assigned identity you select is added to your NetApp account. An access policy is created on your Azure Key Vault with the key permissions Get, Encrypt, Decrypt.If you've configure your Azure Key Vault to use Azure role-based access control, then you need to make sure the selected user-assigned identity has a role assignment on the key vault with permissions for actions:Microsoft.KeyVault/vaults/keys/readMicrosoft.KeyVault/vaults/keys/encrypt/actionMicrosoft.KeyVault/vaults/keys/decrypt/actionThe user-assigned identity you select is added to your NetApp account. Due to the customizable nature of role-based access control, the Azure portal doesn't configure access to the key vault. SeeProvide access to Key Vault keys, certificates, and secrets with an Azure role-based access controlfor details on configuring Azure Key Vault.
Select the identity type that you want to use for authentication to the Azure Key Vault. If your Azure Key Vault is configured to use Vault access policy as its permission model, both options are available. Otherwise, only the user-assigned option is available.
If you chooseSystem-assigned, select theSavebutton. The Azure portal configures the NetApp account automatically by adding a system-assigned identity to your NetApp account. An access policy is also created on your Azure Key Vault with key permissions Get, Encrypt, Decrypt.

If you chooseUser-assigned, you must select an identity. ChooseSelect an identityto open a context pane where you select a user-assigned managed identity.

If you've configured your Azure Key Vault to use Vault access policy, the Azure portal configures the NetApp account automatically with the following process: The user-assigned identity you select is added to your NetApp account. An access policy is created on your Azure Key Vault with the key permissions Get, Encrypt, Decrypt.
If you've configure your Azure Key Vault to use Azure role-based access control, then you need to make sure the selected user-assigned identity has a role assignment on the key vault with permissions for actions:
Microsoft.KeyVault/vaults/keys/read
Microsoft.KeyVault/vaults/keys/read
Microsoft.KeyVault/vaults/keys/encrypt/action
Microsoft.KeyVault/vaults/keys/encrypt/action
Microsoft.KeyVault/vaults/keys/decrypt/actionThe user-assigned identity you select is added to your NetApp account. Due to the customizable nature of role-based access control, the Azure portal doesn't configure access to the key vault. SeeProvide access to Key Vault keys, certificates, and secrets with an Azure role-based access controlfor details on configuring Azure Key Vault.
Microsoft.KeyVault/vaults/keys/decrypt/action
SelectSavethen observe the notification communicating the status of the operation. If the operation isn't successful, an error message displays. For assistance in resolving the error, seeerror messages and troubleshooting.
SelectSavethen observe the notification communicating the status of the operation. If the operation isn't successful, an error message displays. For assistance in resolving the error, seeerror messages and troubleshooting.
How you configure a NetApp account with customer-managed keys with the Azure CLI depends on whether you're using asystem-assigned identityor anuser-assigned identity.
Update your NetApp account to use a system-assigned identity.az netappfiles account update \
    --name <account_name> \
    --resource-group <resource_group> \
    --identity-type SystemAssigned
Update your NetApp account to use a system-assigned identity.
az netappfiles account update \
    --name <account_name> \
    --resource-group <resource_group> \
    --identity-type SystemAssigned
az netappfiles account update \
    --name <account_name> \
    --resource-group <resource_group> \
    --identity-type SystemAssigned
To use an access policy, create a variable that includes the principal ID of the account identity, then runaz keyvault set-policyand assign permissions of "Get," "Encrypt," and "Decrypt."netapp_account_principal=$(az netappfiles account show \
    --name <account_name> \
    --resource-group <resource_group> \
    --query identity.principalId \
    --output tsv)

az keyvault set-policy \
    --name <key_vault_name> \
    --resource-group <resource-group> \
    --object-id $netapp_account_principal \
    --key-permissions get encrypt decrypt
To use an access policy, create a variable that includes the principal ID of the account identity, then runaz keyvault set-policyand assign permissions of "Get," "Encrypt," and "Decrypt."
az keyvault set-policy
netapp_account_principal=$(az netappfiles account show \
    --name <account_name> \
    --resource-group <resource_group> \
    --query identity.principalId \
    --output tsv)

az keyvault set-policy \
    --name <key_vault_name> \
    --resource-group <resource-group> \
    --object-id $netapp_account_principal \
    --key-permissions get encrypt decrypt
netapp_account_principal=$(az netappfiles account show \
    --name <account_name> \
    --resource-group <resource_group> \
    --query identity.principalId \
    --output tsv)

az keyvault set-policy \
    --name <key_vault_name> \
    --resource-group <resource-group> \
    --object-id $netapp_account_principal \
    --key-permissions get encrypt decrypt
Update the NetApp account with your key vault.key_vault_uri=$(az keyvault show \
    --name <key-vault> \
    --resource-group <resource_group> \
    --query properties.vaultUri \
    --output tsv)
az netappfiles account update --name <account_name> \  
    --resource-group <resource_group> \
    --key-source Microsoft.Keyvault \
    --key-vault-uri $key_vault_uri \
    --key-name <key>
Update the NetApp account with your key vault.
key_vault_uri=$(az keyvault show \
    --name <key-vault> \
    --resource-group <resource_group> \
    --query properties.vaultUri \
    --output tsv)
az netappfiles account update --name <account_name> \  
    --resource-group <resource_group> \
    --key-source Microsoft.Keyvault \
    --key-vault-uri $key_vault_uri \
    --key-name <key>
key_vault_uri=$(az keyvault show \
    --name <key-vault> \
    --resource-group <resource_group> \
    --query properties.vaultUri \
    --output tsv)
az netappfiles account update --name <account_name> \  
    --resource-group <resource_group> \
    --key-source Microsoft.Keyvault \
    --key-vault-uri $key_vault_uri \
    --key-name <key>
Create a new user-assigned identity.az identity create \
    --name <identity_name> \
    --resource-group <resource_group>
Create a new user-assigned identity.
az identity create \
    --name <identity_name> \
    --resource-group <resource_group>
az identity create \
    --name <identity_name> \
    --resource-group <resource_group>
Set an access policy for the key vault.user_assigned_identity_principal=$(az identity show \
    --name <identity_name> \
    --resource-group <resource_group> \
    --query properties.principalId \
    --output tsv)
az keyvault set-policy \
    --name <key_vault_name> \
    --resource-group <resource-group> \
    --object-id $user_assigned_identity_principal \
    --key-permissions get encrypt decryptNoteYou can alternatelyuse role-based access control to grant access to the key vault.
Set an access policy for the key vault.
user_assigned_identity_principal=$(az identity show \
    --name <identity_name> \
    --resource-group <resource_group> \
    --query properties.principalId \
    --output tsv)
az keyvault set-policy \
    --name <key_vault_name> \
    --resource-group <resource-group> \
    --object-id $user_assigned_identity_principal \
    --key-permissions get encrypt decrypt
user_assigned_identity_principal=$(az identity show \
    --name <identity_name> \
    --resource-group <resource_group> \
    --query properties.principalId \
    --output tsv)
az keyvault set-policy \
    --name <key_vault_name> \
    --resource-group <resource-group> \
    --object-id $user_assigned_identity_principal \
    --key-permissions get encrypt decrypt
Note
You can alternatelyuse role-based access control to grant access to the key vault.
Assign the user-assigned identity to the NetApp account and update the key vault encryption.key_vault_uri=$(az keyvault show \
    --name <key-vault> \
    --resource-group <resource_group> \
    --query properties.vaultUri \
    --output tsv)
user_assigned_identity=$(az identity show \
    --name <identity_name> \
    --resource-group <resource_group> \
    --query id \
    --output tsv)
az netappfiles account update --name <account_name> \  
    --resource-group <resource_group> \
    --identity-type UserAssigned \
    --key-source Microsoft.Keyvault \
    --key-vault-uri $key_vault_uri \
    --key-name <key> \
    --keyvault-resource-id <key-vault> \   
    --user-assigned-identity $user_assigned_identity
Assign the user-assigned identity to the NetApp account and update the key vault encryption.
key_vault_uri=$(az keyvault show \
    --name <key-vault> \
    --resource-group <resource_group> \
    --query properties.vaultUri \
    --output tsv)
user_assigned_identity=$(az identity show \
    --name <identity_name> \
    --resource-group <resource_group> \
    --query id \
    --output tsv)
az netappfiles account update --name <account_name> \  
    --resource-group <resource_group> \
    --identity-type UserAssigned \
    --key-source Microsoft.Keyvault \
    --key-vault-uri $key_vault_uri \
    --key-name <key> \
    --keyvault-resource-id <key-vault> \   
    --user-assigned-identity $user_assigned_identity
key_vault_uri=$(az keyvault show \
    --name <key-vault> \
    --resource-group <resource_group> \
    --query properties.vaultUri \
    --output tsv)
user_assigned_identity=$(az identity show \
    --name <identity_name> \
    --resource-group <resource_group> \
    --query id \
    --output tsv)
az netappfiles account update --name <account_name> \  
    --resource-group <resource_group> \
    --identity-type UserAssigned \
    --key-source Microsoft.Keyvault \
    --key-vault-uri $key_vault_uri \
    --key-name <key> \
    --keyvault-resource-id <key-vault> \   
    --user-assigned-identity $user_assigned_identity
The process to configure a NetApp account with customer-managed keys in the Azure CLI depends on whether you're using asystem-assigned identityor anuser-assigned identity.
Update your NetApp account to use system-assigned identity.$netappAccount = Update-AzNetAppFilesAccount -ResourceGroupName <resource_group> -Name <account_name> -AssignIdentity
Update your NetApp account to use system-assigned identity.
$netappAccount = Update-AzNetAppFilesAccount -ResourceGroupName <resource_group> -Name <account_name> -AssignIdentity
$netappAccount = Update-AzNetAppFilesAccount -ResourceGroupName <resource_group> -Name <account_name> -AssignIdentity
To use an access policy, runSet-AzKeyVaultAccessPolicywith the key vault name, the principal ID of the account identity, and the permissions "Get," "Encrypt," and "Decrypt."Set-AzKeyVaultAccessPolicy -VaultName <key_vault_name> -ResourceGroupname <resource_group> -ObjectId $netappAccount.Identity.PrincipalId -PermissionsToKeys get,encrypt,decrypt
To use an access policy, runSet-AzKeyVaultAccessPolicywith the key vault name, the principal ID of the account identity, and the permissions "Get," "Encrypt," and "Decrypt."
Set-AzKeyVaultAccessPolicy
Set-AzKeyVaultAccessPolicy -VaultName <key_vault_name> -ResourceGroupname <resource_group> -ObjectId $netappAccount.Identity.PrincipalId -PermissionsToKeys get,encrypt,decrypt
Set-AzKeyVaultAccessPolicy -VaultName <key_vault_name> -ResourceGroupname <resource_group> -ObjectId $netappAccount.Identity.PrincipalId -PermissionsToKeys get,encrypt,decrypt
Update your NetApp account with the key vault information.Update-AzNetAppFilesAccount -ResourceGroupName $netappAccount.ResourceGroupName -AccountName $netappAccount.Name -KeyVaultEncryption -KeyVaultUri <keyVaultUri> -KeyName <keyName>
Update your NetApp account with the key vault information.
Update-AzNetAppFilesAccount -ResourceGroupName $netappAccount.ResourceGroupName -AccountName $netappAccount.Name -KeyVaultEncryption -KeyVaultUri <keyVaultUri> -KeyName <keyName>
Update-AzNetAppFilesAccount -ResourceGroupName $netappAccount.ResourceGroupName -AccountName $netappAccount.Name -KeyVaultEncryption -KeyVaultUri <keyVaultUri> -KeyName <keyName>
Create a new user-assigned identity.$userId = New-AzUserAssignedIdentity -ResourceGroupName <resourceGroupName> -Name $userIdName
Create a new user-assigned identity.
$userId = New-AzUserAssignedIdentity -ResourceGroupName <resourceGroupName> -Name $userIdName
$userId = New-AzUserAssignedIdentity -ResourceGroupName <resourceGroupName> -Name $userIdName
Assign the access policy to the key vault.Set-AzKeyVaultAccessPolicy -VaultName <key_vault_name> `
    -ResourceGroupname <resource_group> `
    -ObjectId $userId.PrincipalId `
    -PermissionsToKeys get,encrypt,decrypt `
    -BypassObjectIdValidationNoteYou can alternatelyuse role-based access control to grant access to the key vault.
Assign the access policy to the key vault.
Set-AzKeyVaultAccessPolicy -VaultName <key_vault_name> `
    -ResourceGroupname <resource_group> `
    -ObjectId $userId.PrincipalId `
    -PermissionsToKeys get,encrypt,decrypt `
    -BypassObjectIdValidation
Set-AzKeyVaultAccessPolicy -VaultName <key_vault_name> `
    -ResourceGroupname <resource_group> `
    -ObjectId $userId.PrincipalId `
    -PermissionsToKeys get,encrypt,decrypt `
    -BypassObjectIdValidation
Note
You can alternatelyuse role-based access control to grant access to the key vault.
Assign the user-assigned identity to the NetApp account and update the key vault encryption.$netappAccount = Update-AzNetAppFilesAccount -ResourceGroupName <resource_group> `
    -Name <account_name> `
    -IdentityType UserAssigned `
    -UserAssignedIdentityId $userId.Id `
    -KeyVaultEncryption `
    -KeyVaultUri <keyVaultUri> `
    -KeyName <keyName> `
    -EncryptionUserAssignedIdentity $userId.Id
Assign the user-assigned identity to the NetApp account and update the key vault encryption.
$netappAccount = Update-AzNetAppFilesAccount -ResourceGroupName <resource_group> `
    -Name <account_name> `
    -IdentityType UserAssigned `
    -UserAssignedIdentityId $userId.Id `
    -KeyVaultEncryption `
    -KeyVaultUri <keyVaultUri> `
    -KeyName <keyName> `
    -EncryptionUserAssignedIdentity $userId.Id
$netappAccount = Update-AzNetAppFilesAccount -ResourceGroupName <resource_group> `
    -Name <account_name> `
    -IdentityType UserAssigned `
    -UserAssignedIdentityId $userId.Id `
    -KeyVaultEncryption `
    -KeyVaultUri <keyVaultUri> `
    -KeyName <keyName> `
    -EncryptionUserAssignedIdentity $userId.Id
Use role-based access control
You can use an Azure Key Vault that is configured to use Azure role-based access control. To configure customer-managed keys through Azure portal, you need to provide a user-assigned identity.
In your Azure account, navigate toKey vaultsthenAccess policies.
In your Azure account, navigate toKey vaultsthenAccess policies.
To create an access policy, underPermission model, selectAzure role-based access-control.
To create an access policy, underPermission model, selectAzure role-based access-control.
When creating the user-assigned role, there are three permissions required for customer-managed keys:Microsoft.KeyVault/vaults/keys/readMicrosoft.KeyVault/vaults/keys/encrypt/actionMicrosoft.KeyVault/vaults/keys/decrypt/actionAlthough there are predefined roles that include these permissions, those roles grant more privileges than are required. It's recommended that you create a custom role with only the minimum required permissions. For more information, seeAzure custom roles.{
    "id": "/subscriptions/<subscription>/Microsoft.Authorization/roleDefinitions/<roleDefinitionsID>",
    "properties": {
        "roleName": "NetApp account",
        "description": "Has the necessary permissions for customer-managed key encryption: get key, encrypt and decrypt",
        "assignableScopes": [
            "/subscriptions/<subscriptionID>/resourceGroups/<resourceGroup>"
        ],
        "permissions": [
          {
            "actions": [],
            "notActions": [],
            "dataActions": [
                "Microsoft.KeyVault/vaults/keys/read",
                "Microsoft.KeyVault/vaults/keys/encrypt/action",
                "Microsoft.KeyVault/vaults/keys/decrypt/action"
            ],
            "notDataActions": []
            }
        ]
      }
}
When creating the user-assigned role, there are three permissions required for customer-managed keys:
Microsoft.KeyVault/vaults/keys/read
Microsoft.KeyVault/vaults/keys/read
Microsoft.KeyVault/vaults/keys/encrypt/action
Microsoft.KeyVault/vaults/keys/encrypt/action
Microsoft.KeyVault/vaults/keys/decrypt/action
Microsoft.KeyVault/vaults/keys/decrypt/action
Although there are predefined roles that include these permissions, those roles grant more privileges than are required. It's recommended that you create a custom role with only the minimum required permissions. For more information, seeAzure custom roles.
{
    "id": "/subscriptions/<subscription>/Microsoft.Authorization/roleDefinitions/<roleDefinitionsID>",
    "properties": {
        "roleName": "NetApp account",
        "description": "Has the necessary permissions for customer-managed key encryption: get key, encrypt and decrypt",
        "assignableScopes": [
            "/subscriptions/<subscriptionID>/resourceGroups/<resourceGroup>"
        ],
        "permissions": [
          {
            "actions": [],
            "notActions": [],
            "dataActions": [
                "Microsoft.KeyVault/vaults/keys/read",
                "Microsoft.KeyVault/vaults/keys/encrypt/action",
                "Microsoft.KeyVault/vaults/keys/decrypt/action"
            ],
            "notDataActions": []
            }
        ]
      }
}
{
    "id": "/subscriptions/<subscription>/Microsoft.Authorization/roleDefinitions/<roleDefinitionsID>",
    "properties": {
        "roleName": "NetApp account",
        "description": "Has the necessary permissions for customer-managed key encryption: get key, encrypt and decrypt",
        "assignableScopes": [
            "/subscriptions/<subscriptionID>/resourceGroups/<resourceGroup>"
        ],
        "permissions": [
          {
            "actions": [],
            "notActions": [],
            "dataActions": [
                "Microsoft.KeyVault/vaults/keys/read",
                "Microsoft.KeyVault/vaults/keys/encrypt/action",
                "Microsoft.KeyVault/vaults/keys/decrypt/action"
            ],
            "notDataActions": []
            }
        ]
      }
}
Once the custom role is created and available to use with the key vault, you apply it to the user-assigned identity.
Once the custom role is created and available to use with the key vault, you apply it to the user-assigned identity.

Create an Azure NetApp Files volume using customer-managed keys
From Azure NetApp Files, selectVolumesand then+ Add volume.
From Azure NetApp Files, selectVolumesand then+ Add volume.
Follow the instructions inConfigure network features for an Azure NetApp Files volume:Set the Network Features option in volume creation page.The network security group for the volumeâs delegated subnet must allow incoming traffic from NetApp's storage VM.
Follow the instructions inConfigure network features for an Azure NetApp Files volume:
Set the Network Features option in volume creation page.
The network security group for the volumeâs delegated subnet must allow incoming traffic from NetApp's storage VM.
For a NetApp account configured to use a customer-managed key, the Create Volume page includes an option Encryption Key Source.To encrypt the volume with your key, selectCustomer-Managed Keyin theEncryption Key Sourcedropdown menu.When you create a volume using a customer-managed key, you must also selectStandardfor theNetwork featuresoption. Basic network features are not supported.You must select a key vault private endpoint as well. The dropdown menu displays private endpoints in the selected virtual network. If there's no private endpoint for your key vault in the selected virtual network, then the dropdown is empty, and you won't be able to proceed. If you encounter this scenario, seeAzure Private Endpoint.
For a NetApp account configured to use a customer-managed key, the Create Volume page includes an option Encryption Key Source.
To encrypt the volume with your key, selectCustomer-Managed Keyin theEncryption Key Sourcedropdown menu.
When you create a volume using a customer-managed key, you must also selectStandardfor theNetwork featuresoption. Basic network features are not supported.
You must select a key vault private endpoint as well. The dropdown menu displays private endpoints in the selected virtual network. If there's no private endpoint for your key vault in the selected virtual network, then the dropdown is empty, and you won't be able to proceed. If you encounter this scenario, seeAzure Private Endpoint.

Continue to complete the volume creation process. Refer to:Create an NFS volumeCreate an SMB volumeCreate a dual-protocol volume
Continue to complete the volume creation process. Refer to:
Create an NFS volume
Create an SMB volume
Create a dual-protocol volume
Transition an Azure NetApp Files volume to customer-managed keys (preview)
Azure NetApp Files supports the ability to move existing volumes using platform-managed keys to customer-managed keys. Once you complete the migration, you can't revert to platform-managed keys.
Register the feature
Encryption key transition for Azure NetApp Files is currently in preview. Before using this feature for the first time, you need to register it.
Register the feature:Register-AzProviderFeature -ProviderNamespace Microsoft.NetApp -FeatureName ANFMigratePmkToCmk
Register the feature:
Register-AzProviderFeature -ProviderNamespace Microsoft.NetApp -FeatureName ANFMigratePmkToCmk
Register-AzProviderFeature -ProviderNamespace Microsoft.NetApp -FeatureName ANFMigratePmkToCmk
Check the status of the feature registration:Get-AzProviderFeature -ProviderNamespace Microsoft.NetApp -FeatureName ANFMigratePmkToCmkNoteTheRegistrationStatecan remain in theRegisteringstate for up to 60 minutes before changing toRegistered. Wait until the status isRegisteredbefore continuing.
Check the status of the feature registration:
Get-AzProviderFeature -ProviderNamespace Microsoft.NetApp -FeatureName ANFMigratePmkToCmk
Get-AzProviderFeature -ProviderNamespace Microsoft.NetApp -FeatureName ANFMigratePmkToCmk
Note
TheRegistrationStatecan remain in theRegisteringstate for up to 60 minutes before changing toRegistered. Wait until the status isRegisteredbefore continuing.
Registering
Registered
You can also useAzure CLI commandsaz feature registerandaz feature showto register the feature and display the registration status.
az feature register
az feature show
Transition volumes
Note
When you transition volumes to use customer-managed keys, you must perform the transition for every virtual network where your Azure NetApp Files account has volumes.
Ensure youconfigured your Azure NetApp Files account to use customer-managed keys.
In the Azure portal, navigate toEncryption.
Select theCMK Migrationtab.
From the drop-down menu, select the virtual network and key vault private endpoint you want to use.
Azure generates a list of volumes to be encrypted by your customer-managed key.
SelectConfirmto initiate the migration.
Rekey all volumes under a NetApp account
If you have already configured your NetApp account for customer-managed keys and have one or more volumes encrypted with customer-managed keys, you can change the key that is used to encrypt all volumes under the NetApp account. You can select any key that is in the same key vault. Changing key vaults isn't supported.
Under your NetApp account, navigate to theEncryptionmenu. Under theCurrent keyinput field, select theRekeylink.
Under your NetApp account, navigate to theEncryptionmenu. Under theCurrent keyinput field, select theRekeylink.
In theRekeymenu, select one of the available keys from the dropdown menu. The chosen key must be different from the current key.
In theRekeymenu, select one of the available keys from the dropdown menu. The chosen key must be different from the current key.
SelectOKto save. The rekey operation can take several minutes.
SelectOKto save. The rekey operation can take several minutes.
Switch from system-assigned to user-assigned identity
To switch from system-assigned to user-assigned identity, you must grant the target identity access to the key vault being used with read/get, encrypt, and decrypt permissions.
Update the NetApp account by sending a PATCH request using theaz restcommand:az rest -m PATCH -u <netapp-account-resource-id>?api-versions=2022-09-01 -b @path/to/payload.jsonThe payload should use the following structure:{
  "identity": {
    "type": "UserAssigned",
    "userAssignedIdentities": {
     "<identity-resource-id>": {}
    }
  },
  "properties": {
    "encryption": {
      "identity": {
        "userAssignedIdentity": "<identity-resource-id>"
      }
    }
  }
}
Update the NetApp account by sending a PATCH request using theaz restcommand:
az rest
az rest -m PATCH -u <netapp-account-resource-id>?api-versions=2022-09-01 -b @path/to/payload.json
az rest -m PATCH -u <netapp-account-resource-id>?api-versions=2022-09-01 -b @path/to/payload.json
The payload should use the following structure:
{
  "identity": {
    "type": "UserAssigned",
    "userAssignedIdentities": {
     "<identity-resource-id>": {}
    }
  },
  "properties": {
    "encryption": {
      "identity": {
        "userAssignedIdentity": "<identity-resource-id>"
      }
    }
  }
}
{
  "identity": {
    "type": "UserAssigned",
    "userAssignedIdentities": {
     "<identity-resource-id>": {}
    }
  },
  "properties": {
    "encryption": {
      "identity": {
        "userAssignedIdentity": "<identity-resource-id>"
      }
    }
  }
}
Confirm the operation completed successfully with theaz netappfiles account showcommand. The output includes the following fields:"id": "/subscriptions/<subscription-id>/resourceGroups/<resource-group>/providers/Microsoft.NetApp/netAppAccounts/account",
    "identity": {
        "principalId": null,
        "tenantId": null,
        "type": "UserAssigned",
        "userAssignedIdentities": {
            "/subscriptions/<subscription-id>/resourceGroups/<resource-group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/<identity>": {
                "clientId": "<client-id>",
                "principalId": "<principalId>",
                "tenantId": <tenantId>"
            }
        }
    },Ensure that:encryption.identity.principalIdmatches the value inidentity.userAssignedIdentities.principalIdencryption.identity.userAssignedIdentitymatches the value inidentity.userAssignedIdentities[]"encryption": {
    "identity": {
        "principalId": "<principal-id>",
        "userAssignedIdentity": "/subscriptions/<subscriptionId>/resourceGroups/<resource-group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/<identity>"
    },
    "KeySource": "Microsoft.KeyVault",
},
Confirm the operation completed successfully with theaz netappfiles account showcommand. The output includes the following fields:
az netappfiles account show
"id": "/subscriptions/<subscription-id>/resourceGroups/<resource-group>/providers/Microsoft.NetApp/netAppAccounts/account",
    "identity": {
        "principalId": null,
        "tenantId": null,
        "type": "UserAssigned",
        "userAssignedIdentities": {
            "/subscriptions/<subscription-id>/resourceGroups/<resource-group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/<identity>": {
                "clientId": "<client-id>",
                "principalId": "<principalId>",
                "tenantId": <tenantId>"
            }
        }
    },
"id": "/subscriptions/<subscription-id>/resourceGroups/<resource-group>/providers/Microsoft.NetApp/netAppAccounts/account",
    "identity": {
        "principalId": null,
        "tenantId": null,
        "type": "UserAssigned",
        "userAssignedIdentities": {
            "/subscriptions/<subscription-id>/resourceGroups/<resource-group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/<identity>": {
                "clientId": "<client-id>",
                "principalId": "<principalId>",
                "tenantId": <tenantId>"
            }
        }
    },
Ensure that:
encryption.identity.principalIdmatches the value inidentity.userAssignedIdentities.principalId
encryption.identity.principalId
identity.userAssignedIdentities.principalId
encryption.identity.userAssignedIdentitymatches the value inidentity.userAssignedIdentities[]
encryption.identity.userAssignedIdentity
identity.userAssignedIdentities[]
"encryption": {
    "identity": {
        "principalId": "<principal-id>",
        "userAssignedIdentity": "/subscriptions/<subscriptionId>/resourceGroups/<resource-group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/<identity>"
    },
    "KeySource": "Microsoft.KeyVault",
},
"encryption": {
    "identity": {
        "principalId": "<principal-id>",
        "userAssignedIdentity": "/subscriptions/<subscriptionId>/resourceGroups/<resource-group>/providers/Microsoft.ManagedIdentity/userAssignedIdentities/<identity>"
    },
    "KeySource": "Microsoft.KeyVault",
},
Update the private endpoint
Making changes to the Azure Private Endpoint after creating a customer-managed key volume can make the volume inaccessible. If you need to make changes, you must create a new endpoint and update the volume to point to the new endpoint.
Create a new endpoint between the virtual network and Azure Key Vault.
Update all volumes using the old endpoint to use the new endpoint.az netappfiles volume update --g $resource-group-name --account-name $netapp-account-name --pool-name $pool-name --name $volume-name --key-vault-private-endpoint-resource-id $newendpoint
az netappfiles volume update --g $resource-group-name --account-name $netapp-account-name --pool-name $pool-name --name $volume-name --key-vault-private-endpoint-resource-id $newendpoint
az netappfiles volume update --g $resource-group-name --account-name $netapp-account-name --pool-name $pool-name --name $volume-name --key-vault-private-endpoint-resource-id $newendpoint
Delete the old private endpoint.
Next steps
Troubleshoot customer-managed keys
Azure NetApp Files API
Configure customer-managed keys with managed Hardware Security Module
Configure cross-tenant customer-managed keys
Understand data encryption in Azure NetApp Files
Feedback
Was this page helpful?
Additional resources