Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Azure SQL Database and Azure SQL Managed Instance connect and query articles
Article
2025-01-15
19 contributors
In this article
Applies to:Azure SQL DatabaseAzure SQL Managed Instance
The following document includes links to Azure examples showing how to connect and query Azure SQL Database and Azure SQL Managed Instance. For some related recommendations for Transport Level Security, seeTLS considerations for database connectivity.
Watch this video in theAzure SQL Database essentials seriesfor a brief connect and query overview:

Quickstarts
TutorialDB
Get server connection information
Get the connection information you need to connect to the database in Azure SQL Database. You need the fully qualified server name or host name, database name, and login information for the upcoming procedures.
Sign in to theAzure portal.
Sign in to theAzure portal.
Navigate to theSQL DatabasesorSQL Managed Instancespage.
Navigate to theSQL DatabasesorSQL Managed Instancespage.
On theOverviewpage, review the fully qualified server name next toServer namefor the database in Azure SQL Database or the fully qualified server name (or IP address) next toHostfor an Azure SQL Managed Instance or SQL Server on Azure VM. To copy the server name or host name, hover over it and select theCopyicon.
On theOverviewpage, review the fully qualified server name next toServer namefor the database in Azure SQL Database or the fully qualified server name (or IP address) next toHostfor an Azure SQL Managed Instance or SQL Server on Azure VM. To copy the server name or host name, hover over it and select theCopyicon.
Note
For connection information for SQL Server on Azure VM, seeConnect to a SQL Server instance.
Get ADO.NET connection information (optional - SQL Database only)
Navigate to the database pane in the Azure portal and, underSettings, selectConnection strings.
Navigate to the database pane in the Azure portal and, underSettings, selectConnection strings.
Review the completeADO.NETconnection string.
Review the completeADO.NETconnection string.

Copy theADO.NETconnection string if you intend to use it.
Copy theADO.NETconnection string if you intend to use it.
TLS considerations for database connectivity
Transport Layer Security (TLS) is used by all drivers that Microsoft supplies or supports for connecting to databases in Azure SQL Database or Azure SQL Managed Instance. No special configuration is necessary. For all connections to a SQL Server instance, a database in Azure SQL Database, or an instance of Azure SQL Managed Instance, we recommend that all applications set
the following configurations, or their equivalents:
Encrypt = On
Encrypt = On
TrustServerCertificate = Off
TrustServerCertificate = Off
Some systems use different yet equivalent keywords for those configuration keywords. These configurations ensure that the client driver
verifies the identity of the TLS certificate received from the server.
We also recommend that you disable TLS 1.1 and 1.0 on the client if you need to comply with Payment Card Industry - Data Security
Standard (PCI-DSS).
Non-Microsoft drivers might not use TLS by default. This can be a factor when connecting to Azure SQL Database or Azure SQL Managed Instance. Applications with embedded drivers might not allow you to control these connection settings. We recommend that you examine the security of such drivers and applications before using them on systems that interact with sensitive data.
Libraries
You can use various libraries and frameworks to connect to Azure SQL Database or Azure SQL Managed Instance. You can then build an app by using SQL Server on Linux or Windows, or a SQL Server container on Linux.
The following table lists connectivity libraries ordriversthat client applications can use from various languages to connect to and use SQL Server running on-premises or in the cloud. You can use them on Linux, Windows, or in containers, and use them to connect to Azure SQL Database, Azure SQL Managed Instance, and Azure Synapse Analytics.
Data-access frameworks
The following table lists examples of object-relational mapping (ORM) frameworks and web frameworks that client applications can use with SQL Server, Azure SQL Database, Azure SQL Managed Instance, or Azure Synapse Analytics. You can use the frameworks on Linux, Windows, or in containers.
Related content
Azure SQL Database and Azure Synapse Analytics connectivity architecture
SQL Server drivers
Quickstart: Use .NET (C#) to query a database
Quickstart: Use Golang to query a database in Azure SQL Database or Azure SQL Managed Instance
Quickstart: Use Node.js to query a database in Azure SQL Database or Azure SQL Managed Instance
Quickstart: Use PHP to query a database in Azure SQL Database or Azure SQL Managed Instance
Quickstart: Use Python to query a database in Azure SQL Database or Azure SQL Managed Instance
Quickstart: Use Ruby to query a database in Azure SQL Database or Azure SQL Managed Instance
Use Java and JDBC with Azure SQL Database
Install sqlcmd and bcp the SQL Server command-line tools on Linux
sqlcmd
Connect resiliently to SQL with ADO.NET
Connect resiliently to SQL with PHP
Feedback
Was this page helpful?
Additional resources