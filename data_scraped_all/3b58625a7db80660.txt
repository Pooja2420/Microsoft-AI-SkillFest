Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Elevate access to manage all Azure subscriptions and management groups
Article
2025-03-10
13 contributors
In this article
As a Global Administrator in Microsoft Entra ID, you might not have access to all subscriptions and management groups in your tenant. This article describes the ways that you can elevate your access to all subscriptions and management groups.
Note
For information about viewing or deleting personal data, seeGeneral Data Subject Requests for the GDPR,Azure Data Subject Requests for the GDPR, orWindows Data Subject Requests for the GDPR, depending on your specific area and needs. For more information about GDPR, see theGDPR section of the Microsoft Trust Centerand theGDPR section of the Service Trust portal.
Why would you need to elevate your access?
If you are a Global Administrator, there might be times when you want to do the following actions:
Regain access to an Azure subscription or management group when a user has lost access
Grant another user or yourself access to an Azure subscription or management group
See all Azure subscriptions or management groups in an organization
Allow an automation app (such as an invoicing or auditing app) to access all Azure subscriptions or management groups
How does elevated access work?
Microsoft Entra ID and Azure resources are secured independently from one another. That is, Microsoft Entra role assignments do not grant access to Azure resources, and Azure role assignments do not grant access to Microsoft Entra ID. However, if you are aGlobal Administratorin Microsoft Entra ID, you can assign yourself access to all Azure subscriptions and management groups in your tenant. Use this capability if you don't have access to Azureâ¯subscription resources, such as virtual machines or storage accounts, andâ¯youâ¯want to use your Global Administrator privilege to gain access to those resources.
When you elevate your access, you are assigned theUser Access Administratorrole in Azure at root scope (/).â¯This allows you to view all resources and assign access in any subscription or management group in the tenant. User Access Administrator role assignments can be removed using Azure PowerShell, Azure CLI, or the REST API.
/
You should remove this elevated access once you have made the changes you need to make at root scope.

Perform steps at root scope
Azure portal
PowerShell
Azure CLI
REST API
Step 1: Elevate access for a Global Administrator
Follow these steps to elevate access for a Global Administrator using the Azure portal.
Sign in to theAzure portalas a Global Administrator.If you are using Microsoft Entra Privileged Identity Management,activate your Global Administrator role assignment.
Sign in to theAzure portalas a Global Administrator.
If you are using Microsoft Entra Privileged Identity Management,activate your Global Administrator role assignment.
Browse toMicrosoft Entra ID>Manage>Properties.
Browse toMicrosoft Entra ID>Manage>Properties.

UnderAccess management for Azure resources, set the toggle toYes.When you set the toggle toYes, you are assigned the User Access Administrator role in Azure RBAC at root scope (/). This grants you permission to assign roles in all Azure subscriptions and management groups associated with this Microsoft Entra tenant. This toggle is only available to users who are assigned the Global Administrator role in Microsoft Entra ID.When you set the toggle toNo, the User Access Administrator role in Azure RBAC is removed from your user account. You can no longer assign roles in all Azure subscriptions and management groups that are associated with this Microsoft Entra tenant. You can view and manage only the Azure subscriptions and management groups to which you have been granted access.NoteIf you're usingPrivileged Identity Management, deactivating your role assignment does not change theAccess management for Azure resourcestoggle toNo. To maintain least privileged access, we recommend that you set this toggle toNobefore you deactivate your role assignment.
UnderAccess management for Azure resources, set the toggle toYes.

When you set the toggle toYes, you are assigned the User Access Administrator role in Azure RBAC at root scope (/). This grants you permission to assign roles in all Azure subscriptions and management groups associated with this Microsoft Entra tenant. This toggle is only available to users who are assigned the Global Administrator role in Microsoft Entra ID.
When you set the toggle toNo, the User Access Administrator role in Azure RBAC is removed from your user account. You can no longer assign roles in all Azure subscriptions and management groups that are associated with this Microsoft Entra tenant. You can view and manage only the Azure subscriptions and management groups to which you have been granted access.
Note
If you're usingPrivileged Identity Management, deactivating your role assignment does not change theAccess management for Azure resourcestoggle toNo. To maintain least privileged access, we recommend that you set this toggle toNobefore you deactivate your role assignment.
SelectSaveto save your setting.This setting is not a global property and applies only to the currently signed in user. You can't elevate access for all members of the Global Administrator role.
SelectSaveto save your setting.
This setting is not a global property and applies only to the currently signed in user. You can't elevate access for all members of the Global Administrator role.
Sign out and sign back in to refresh your access.You should now have access to all subscriptions and management groups in your tenant. When you view the Access control (IAM) page, you'll notice that you have been assigned the User Access Administrator role at root scope.
Sign out and sign back in to refresh your access.
You should now have access to all subscriptions and management groups in your tenant. When you view the Access control (IAM) page, you'll notice that you have been assigned the User Access Administrator role at root scope.

Make the changes you need to make at elevated access.For information about assigning roles, seeAssign Azure roles using the Azure portal. If you are using Privileged Identity Management, seeDiscover Azure resources to manageorAssign Azure resource roles.
Make the changes you need to make at elevated access.
For information about assigning roles, seeAssign Azure roles using the Azure portal. If you are using Privileged Identity Management, seeDiscover Azure resources to manageorAssign Azure resource roles.
Perform the steps in the following section to remove your elevated access.
Perform the steps in the following section to remove your elevated access.
Step 2: Remove elevated access
To remove the User Access Administrator role assignment at root scope (/), follow these steps.
/
Sign in as the same user that was used to elevate access.
Sign in as the same user that was used to elevate access.
Browse toMicrosoft Entra ID>Manage>Properties.
Browse toMicrosoft Entra ID>Manage>Properties.
Set theAccess management for Azure resourcestoggle back toNo. Since this is a per-user setting, you must be signed in as the same user as was used to elevate access.If you try to remove the User Access Administrator role assignment on the Access control (IAM) page, you'll see the following message. To remove the role assignment, you must set the toggle back toNoor use Azure PowerShell, Azure CLI, or the REST API.
Set theAccess management for Azure resourcestoggle back toNo. Since this is a per-user setting, you must be signed in as the same user as was used to elevate access.
If you try to remove the User Access Administrator role assignment on the Access control (IAM) page, you'll see the following message. To remove the role assignment, you must set the toggle back toNoor use Azure PowerShell, Azure CLI, or the REST API.

Sign out as Global Administrator.If you are using Privileged Identity Management, deactivate your Global Administrator role assignment.NoteIf you're usingPrivileged Identity Management, deactivating your role assignment does not change theAccess management for Azure resourcestoggle toNo. To maintain least privileged access, we recommend that you set this toggle toNobefore you deactivate your role assignment.
Sign out as Global Administrator.
If you are using Privileged Identity Management, deactivate your Global Administrator role assignment.
Note
If you're usingPrivileged Identity Management, deactivating your role assignment does not change theAccess management for Azure resourcestoggle toNo. To maintain least privileged access, we recommend that you set this toggle toNobefore you deactivate your role assignment.
Step 1: Elevate access for a Global Administrator
Use the Azure portal or REST API to elevate access for a Global Administrator.
Step 2: List role assignment at root scope (/)
Once you have elevated access, to list the User Access Administrator role assignment for a user at root scope (/), use theGet-AzRoleAssignmentcommand.
/
Get-AzRoleAssignment | where {$_.RoleDefinitionName -eq "User Access Administrator" `
  -and $_.SignInName -eq "<username@example.com>" -and $_.Scope -eq "/"}
Get-AzRoleAssignment | where {$_.RoleDefinitionName -eq "User Access Administrator" `
  -and $_.SignInName -eq "<username@example.com>" -and $_.Scope -eq "/"}
RoleAssignmentId   : /providers/Microsoft.Authorization/roleAssignments/11111111-1111-1111-1111-111111111111
Scope              : /
DisplayName        : username
SignInName         : username@example.com
RoleDefinitionName : User Access Administrator
RoleDefinitionId   : 18d7d88d-d35e-4fb5-a5c3-7773c20a72d9
ObjectId           : 22222222-2222-2222-2222-222222222222
ObjectType         : User
CanDelegate        : False
RoleAssignmentId   : /providers/Microsoft.Authorization/roleAssignments/11111111-1111-1111-1111-111111111111
Scope              : /
DisplayName        : username
SignInName         : username@example.com
RoleDefinitionName : User Access Administrator
RoleDefinitionId   : 18d7d88d-d35e-4fb5-a5c3-7773c20a72d9
ObjectId           : 22222222-2222-2222-2222-222222222222
ObjectType         : User
CanDelegate        : False
Step 3: Remove elevated access
To remove the User Access Administrator role assignment for yourself or another user at root scope (/), follow these steps.
/
Sign in as a user that can remove elevated access. This can be the same user that was used to elevate access or another Global Administrator with elevated access at root scope.
Sign in as a user that can remove elevated access. This can be the same user that was used to elevate access or another Global Administrator with elevated access at root scope.
Use theRemove-AzRoleAssignmentcommand to remove the User Access Administrator role assignment.Remove-AzRoleAssignment -SignInName <username@example.com> `
  -RoleDefinitionName "User Access Administrator" -Scope "/"
Use theRemove-AzRoleAssignmentcommand to remove the User Access Administrator role assignment.
Remove-AzRoleAssignment -SignInName <username@example.com> `
  -RoleDefinitionName "User Access Administrator" -Scope "/"
Remove-AzRoleAssignment -SignInName <username@example.com> `
  -RoleDefinitionName "User Access Administrator" -Scope "/"
Step 1: Elevate access for a Global Administrator
Use the following basic steps to elevate access for a Global Administrator using the Azure CLI.
Use theaz restcommand to call theelevateAccessendpoint, which grants you the User Access Administrator role at root scope (/).az rest --method post --url "/providers/Microsoft.Authorization/elevateAccess?api-version=2016-07-01"
Use theaz restcommand to call theelevateAccessendpoint, which grants you the User Access Administrator role at root scope (/).
elevateAccess
/
az rest --method post --url "/providers/Microsoft.Authorization/elevateAccess?api-version=2016-07-01"
az rest --method post --url "/providers/Microsoft.Authorization/elevateAccess?api-version=2016-07-01"
Make the changes you need to make at elevated access.For information about assigning roles, seeAssign Azure roles using the Azure CLI.
Make the changes you need to make at elevated access.
For information about assigning roles, seeAssign Azure roles using the Azure CLI.
Perform the steps in a later section to remove your elevated access.
Perform the steps in a later section to remove your elevated access.
Step 2: List role assignment at root scope (/)
Once you have elevated access, to list the User Access Administrator role assignment for a user at root scope (/), use theaz role assignment listcommand.
/
az role assignment list --role "User Access Administrator" --scope "/"
az role assignment list --role "User Access Administrator" --scope "/"
[
  {
    "canDelegate": null,
    "id": "/providers/Microsoft.Authorization/roleAssignments/11111111-1111-1111-1111-111111111111",
    "name": "11111111-1111-1111-1111-111111111111",
    "principalId": "22222222-2222-2222-2222-222222222222",
    "principalName": "username@example.com",
    "principalType": "User",
    "roleDefinitionId": "/providers/Microsoft.Authorization/roleDefinitions/18d7d88d-d35e-4fb5-a5c3-7773c20a72d9",
    "roleDefinitionName": "User Access Administrator",
    "scope": "/",
    "type": "Microsoft.Authorization/roleAssignments"
  }
]
[
  {
    "canDelegate": null,
    "id": "/providers/Microsoft.Authorization/roleAssignments/11111111-1111-1111-1111-111111111111",
    "name": "11111111-1111-1111-1111-111111111111",
    "principalId": "22222222-2222-2222-2222-222222222222",
    "principalName": "username@example.com",
    "principalType": "User",
    "roleDefinitionId": "/providers/Microsoft.Authorization/roleDefinitions/18d7d88d-d35e-4fb5-a5c3-7773c20a72d9",
    "roleDefinitionName": "User Access Administrator",
    "scope": "/",
    "type": "Microsoft.Authorization/roleAssignments"
  }
]
Step 3: Remove elevated access
To remove the User Access Administrator role assignment for yourself or another user at root scope (/), follow these steps.
/
Sign in as a user that can remove elevated access. This can be the same user that was used to elevate access or another Global Administrator with elevated access at root scope.
Sign in as a user that can remove elevated access. This can be the same user that was used to elevate access or another Global Administrator with elevated access at root scope.
Use theaz role assignment deletecommand to remove the User Access Administrator role assignment.az role assignment delete --assignee username@example.com --role "User Access Administrator" --scope "/"
Use theaz role assignment deletecommand to remove the User Access Administrator role assignment.
az role assignment delete --assignee username@example.com --role "User Access Administrator" --scope "/"
az role assignment delete --assignee username@example.com --role "User Access Administrator" --scope "/"
Prerequisites
You must use the following versions:
2015-07-01or later to list and remove role assignments
2015-07-01
2016-07-01or later to elevate access
2016-07-01
2018-07-01-previewor later to list deny assignments
2018-07-01-preview
For more information, seeAPI versions of Azure RBAC REST APIs.
Step 1: Elevate access for a Global Administrator
Use the following basic steps to elevate access for a Global Administrator using the REST API.
Using REST, callelevateAccess, which grants you the User Access Administrator role at root scope (/).POST https://management.azure.com/providers/Microsoft.Authorization/elevateAccess?api-version=2016-07-01
Using REST, callelevateAccess, which grants you the User Access Administrator role at root scope (/).
elevateAccess
/
POST https://management.azure.com/providers/Microsoft.Authorization/elevateAccess?api-version=2016-07-01
POST https://management.azure.com/providers/Microsoft.Authorization/elevateAccess?api-version=2016-07-01
Make the changes you need to make at elevated access.For information about assigning roles, seeAssign Azure roles using the REST API.
Make the changes you need to make at elevated access.
For information about assigning roles, seeAssign Azure roles using the REST API.
Perform the steps in a later section to remove your elevated access.
Perform the steps in a later section to remove your elevated access.
Step 2: List role assignments at root scope (/)
Once you have elevated access, you can list all of the role assignments for a user at root scope (/).
/
CallRole Assignments - List For Scopewhere{objectIdOfUser}is the object ID of the user whose role assignments you want to retrieve.GET https://management.azure.com/providers/Microsoft.Authorization/roleAssignments?api-version=2022-04-01&$filter=principalId+eq+'{objectIdOfUser}'
CallRole Assignments - List For Scopewhere{objectIdOfUser}is the object ID of the user whose role assignments you want to retrieve.
{objectIdOfUser}
GET https://management.azure.com/providers/Microsoft.Authorization/roleAssignments?api-version=2022-04-01&$filter=principalId+eq+'{objectIdOfUser}'
GET https://management.azure.com/providers/Microsoft.Authorization/roleAssignments?api-version=2022-04-01&$filter=principalId+eq+'{objectIdOfUser}'
Step 3: List deny assignments at root scope (/)
Once you have elevated access, you can list all of the deny assignments for a user at root scope (/).
/
CallDeny Assignments - List For Scopewhere{objectIdOfUser}is the object ID of the user whose deny assignments you want to retrieve.GET https://management.azure.com/providers/Microsoft.Authorization/denyAssignments?api-version=2022-04-01&$filter=gdprExportPrincipalId+eq+'{objectIdOfUser}'
CallDeny Assignments - List For Scopewhere{objectIdOfUser}is the object ID of the user whose deny assignments you want to retrieve.
{objectIdOfUser}
GET https://management.azure.com/providers/Microsoft.Authorization/denyAssignments?api-version=2022-04-01&$filter=gdprExportPrincipalId+eq+'{objectIdOfUser}'
GET https://management.azure.com/providers/Microsoft.Authorization/denyAssignments?api-version=2022-04-01&$filter=gdprExportPrincipalId+eq+'{objectIdOfUser}'
Step 4: Remove elevated access
When you callelevateAccess, you create a role assignment for yourself, so to revoke those privileges you need to remove the User Access Administrator role assignment for yourself at root scope (/).
elevateAccess
/
CallRole Definitions - GetwhereroleNameequals User Access Administrator to determine the name ID of the User Access Administrator role.GET https://management.azure.com/providers/Microsoft.Authorization/roleDefinitions?api-version=2022-04-01&$filter=roleName+eq+'User Access Administrator'{
  "value": [
    {
      "properties": {
  "roleName": "User Access Administrator",
  "type": "BuiltInRole",
  "description": "Lets you manage user access to Azure resources.",
  "assignableScopes": [
    "/"
  ],
  "permissions": [
    {
      "actions": [
        "*/read",
        "Microsoft.Authorization/*",
        "Microsoft.Support/*"
      ],
      "notActions": []
    }
  ],
  "createdOn": "0001-01-01T08:00:00.0000000Z",
  "updatedOn": "2016-05-31T23:14:04.6964687Z",
  "createdBy": null,
  "updatedBy": null
      },
      "id": "/providers/Microsoft.Authorization/roleDefinitions/18d7d88d-d35e-4fb5-a5c3-7773c20a72d9",
      "type": "Microsoft.Authorization/roleDefinitions",
      "name": "18d7d88d-d35e-4fb5-a5c3-7773c20a72d9"
    }
  ],
  "nextLink": null
}Save the ID from thenameparameter, in this case18d7d88d-d35e-4fb5-a5c3-7773c20a72d9.
CallRole Definitions - GetwhereroleNameequals User Access Administrator to determine the name ID of the User Access Administrator role.
roleName
GET https://management.azure.com/providers/Microsoft.Authorization/roleDefinitions?api-version=2022-04-01&$filter=roleName+eq+'User Access Administrator'
GET https://management.azure.com/providers/Microsoft.Authorization/roleDefinitions?api-version=2022-04-01&$filter=roleName+eq+'User Access Administrator'
{
  "value": [
    {
      "properties": {
  "roleName": "User Access Administrator",
  "type": "BuiltInRole",
  "description": "Lets you manage user access to Azure resources.",
  "assignableScopes": [
    "/"
  ],
  "permissions": [
    {
      "actions": [
        "*/read",
        "Microsoft.Authorization/*",
        "Microsoft.Support/*"
      ],
      "notActions": []
    }
  ],
  "createdOn": "0001-01-01T08:00:00.0000000Z",
  "updatedOn": "2016-05-31T23:14:04.6964687Z",
  "createdBy": null,
  "updatedBy": null
      },
      "id": "/providers/Microsoft.Authorization/roleDefinitions/18d7d88d-d35e-4fb5-a5c3-7773c20a72d9",
      "type": "Microsoft.Authorization/roleDefinitions",
      "name": "18d7d88d-d35e-4fb5-a5c3-7773c20a72d9"
    }
  ],
  "nextLink": null
}
{
  "value": [
    {
      "properties": {
  "roleName": "User Access Administrator",
  "type": "BuiltInRole",
  "description": "Lets you manage user access to Azure resources.",
  "assignableScopes": [
    "/"
  ],
  "permissions": [
    {
      "actions": [
        "*/read",
        "Microsoft.Authorization/*",
        "Microsoft.Support/*"
      ],
      "notActions": []
    }
  ],
  "createdOn": "0001-01-01T08:00:00.0000000Z",
  "updatedOn": "2016-05-31T23:14:04.6964687Z",
  "createdBy": null,
  "updatedBy": null
      },
      "id": "/providers/Microsoft.Authorization/roleDefinitions/18d7d88d-d35e-4fb5-a5c3-7773c20a72d9",
      "type": "Microsoft.Authorization/roleDefinitions",
      "name": "18d7d88d-d35e-4fb5-a5c3-7773c20a72d9"
    }
  ],
  "nextLink": null
}
Save the ID from thenameparameter, in this case18d7d88d-d35e-4fb5-a5c3-7773c20a72d9.
name
18d7d88d-d35e-4fb5-a5c3-7773c20a72d9
You also need to list the role assignment for the tenant administrator at tenant scope. List all assignments at tenant scope for theprincipalIdof the tenant administrator who made the elevate access call. This will list all assignments in the tenant for the objectid.GET https://management.azure.com/providers/Microsoft.Authorization/roleAssignments?api-version=2022-04-01&$filter=principalId+eq+'{objectid}'NoteA tenant administrator should not have many assignments. If the previous query returns too many assignments, you can also query for all assignments just at tenant scope, then filter the results:GET https://management.azure.com/providers/Microsoft.Authorization/roleAssignments?api-version=2022-04-01&$filter=atScope()
You also need to list the role assignment for the tenant administrator at tenant scope. List all assignments at tenant scope for theprincipalIdof the tenant administrator who made the elevate access call. This will list all assignments in the tenant for the objectid.
principalId
GET https://management.azure.com/providers/Microsoft.Authorization/roleAssignments?api-version=2022-04-01&$filter=principalId+eq+'{objectid}'
GET https://management.azure.com/providers/Microsoft.Authorization/roleAssignments?api-version=2022-04-01&$filter=principalId+eq+'{objectid}'
Note
A tenant administrator should not have many assignments. If the previous query returns too many assignments, you can also query for all assignments just at tenant scope, then filter the results:GET https://management.azure.com/providers/Microsoft.Authorization/roleAssignments?api-version=2022-04-01&$filter=atScope()
GET https://management.azure.com/providers/Microsoft.Authorization/roleAssignments?api-version=2022-04-01&$filter=atScope()
The previous calls return a list of role assignments. Find the role assignment where the scope is"/"and theroleDefinitionIdends with the role name ID you found in step 1 andprincipalIdmatches the objectId of the tenant administrator.Sample role assignment:{
  "value": [
    {
      "properties": {
        "roleDefinitionId": "/providers/Microsoft.Authorization/roleDefinitions/18d7d88d-d35e-4fb5-a5c3-7773c20a72d9",
        "principalId": "{objectID}",
        "scope": "/",
        "createdOn": "2016-08-17T19:21:16.3422480Z",
        "updatedOn": "2016-08-17T19:21:16.3422480Z",
        "createdBy": "22222222-2222-2222-2222-222222222222",
        "updatedBy": "22222222-2222-2222-2222-222222222222"
      },
      "id": "/providers/Microsoft.Authorization/roleAssignments/11111111-1111-1111-1111-111111111111",
      "type": "Microsoft.Authorization/roleAssignments",
      "name": "11111111-1111-1111-1111-111111111111"
    }
  ],
  "nextLink": null
}Again, save the ID from thenameparameter, in this case 11111111-1111-1111-1111-111111111111.
The previous calls return a list of role assignments. Find the role assignment where the scope is"/"and theroleDefinitionIdends with the role name ID you found in step 1 andprincipalIdmatches the objectId of the tenant administrator.
"/"
roleDefinitionId
principalId
Sample role assignment:
{
  "value": [
    {
      "properties": {
        "roleDefinitionId": "/providers/Microsoft.Authorization/roleDefinitions/18d7d88d-d35e-4fb5-a5c3-7773c20a72d9",
        "principalId": "{objectID}",
        "scope": "/",
        "createdOn": "2016-08-17T19:21:16.3422480Z",
        "updatedOn": "2016-08-17T19:21:16.3422480Z",
        "createdBy": "22222222-2222-2222-2222-222222222222",
        "updatedBy": "22222222-2222-2222-2222-222222222222"
      },
      "id": "/providers/Microsoft.Authorization/roleAssignments/11111111-1111-1111-1111-111111111111",
      "type": "Microsoft.Authorization/roleAssignments",
      "name": "11111111-1111-1111-1111-111111111111"
    }
  ],
  "nextLink": null
}
{
  "value": [
    {
      "properties": {
        "roleDefinitionId": "/providers/Microsoft.Authorization/roleDefinitions/18d7d88d-d35e-4fb5-a5c3-7773c20a72d9",
        "principalId": "{objectID}",
        "scope": "/",
        "createdOn": "2016-08-17T19:21:16.3422480Z",
        "updatedOn": "2016-08-17T19:21:16.3422480Z",
        "createdBy": "22222222-2222-2222-2222-222222222222",
        "updatedBy": "22222222-2222-2222-2222-222222222222"
      },
      "id": "/providers/Microsoft.Authorization/roleAssignments/11111111-1111-1111-1111-111111111111",
      "type": "Microsoft.Authorization/roleAssignments",
      "name": "11111111-1111-1111-1111-111111111111"
    }
  ],
  "nextLink": null
}
Again, save the ID from thenameparameter, in this case 11111111-1111-1111-1111-111111111111.
name
Finally, Use the role assignment ID to remove the assignment added byelevateAccess:DELETE https://management.azure.com/providers/Microsoft.Authorization/roleAssignments/11111111-1111-1111-1111-111111111111?api-version=2022-04-01
Finally, Use the role assignment ID to remove the assignment added byelevateAccess:
elevateAccess
DELETE https://management.azure.com/providers/Microsoft.Authorization/roleAssignments/11111111-1111-1111-1111-111111111111?api-version=2022-04-01
DELETE https://management.azure.com/providers/Microsoft.Authorization/roleAssignments/11111111-1111-1111-1111-111111111111?api-version=2022-04-01
View users with elevated access
If you have users with elevated access and you have the appropriate permissions, banners are displayed in a couple locations of the Azure portal. Global Administrators have permissions to read Azure role assignments from root scope and below for all Azure management groups and subscriptions within a tenant. This section describes how to determine if you have users that have elevated access in your tenant.
Option 1
In the Azure portal, sign in as Global Administrator.
In the Azure portal, sign in as Global Administrator.
Browse toMicrosoft Entra ID>Manage>Properties.
Browse toMicrosoft Entra ID>Manage>Properties.
UnderAccess management for Azure resources, look for the following banner.You have X users with elevated access. Microsoft Security recommends deleting access for users who have unnecessary elevated access. Manage elevated access users
UnderAccess management for Azure resources, look for the following banner.
You have X users with elevated access. Microsoft Security recommends deleting access for users who have unnecessary elevated access. Manage elevated access users
You have X users with elevated access. Microsoft Security recommends deleting access for users who have unnecessary elevated access. Manage elevated access users

Select theManage elevated access userslink to view a list of users with elevated access.
Select theManage elevated access userslink to view a list of users with elevated access.
Option 2
In the Azure portal, sign in as Global Administrator with elevated access.
In the Azure portal, sign in as Global Administrator with elevated access.
Browse to a subscription.
Browse to a subscription.
SelectAccess control (IAM).
SelectAccess control (IAM).
At the top of the page, look for the following banner.Action required: X users have elevated access in your tenant. You should take immediate action and remove all role assignments with elevated access. View role assignments
At the top of the page, look for the following banner.
Action required: X users have elevated access in your tenant. You should take immediate action and remove all role assignments with elevated access. View role assignments
Action required: X users have elevated access in your tenant. You should take immediate action and remove all role assignments with elevated access. View role assignments

Select theView role assignmentslink to view a list of users with elevated access.
Select theView role assignmentslink to view a list of users with elevated access.
Remove elevated access for users
If you have users with elevated access, you should take immediate action and remove that access. To remove these role assignments, you must also have elevated access. This section describes how to remove elevated access for users in your tenant using the Azure portal. This capability is being deployed in stages, so it might not be available yet in your tenant.
Sign in to theAzure portalas a Global Administrator.
Sign in to theAzure portalas a Global Administrator.
Browse toMicrosoft Entra ID>Manage>Properties.
Browse toMicrosoft Entra ID>Manage>Properties.
UnderAccess management for Azure resources, set the toggle toYesas described earlier inStep 1: Elevate access for a Global Administrator.
UnderAccess management for Azure resources, set the toggle toYesas described earlier inStep 1: Elevate access for a Global Administrator.
Select theManage elevated access userslink.TheUsers with elevated access appearspane appears with a list of users with elevated access in your tenant.
Select theManage elevated access userslink.
TheUsers with elevated access appearspane appears with a list of users with elevated access in your tenant.

To remove elevated access for users, add a check mark next to the user and selectRemove.
To remove elevated access for users, add a check mark next to the user and selectRemove.
View elevate access log entries
When access is elevated or removed, an entry is added to the logs. As an administrator in Microsoft Entra ID, you might want to check when access was elevated and who did it.
Elevate access log entries appear in both the Microsoft Entra directory audit logs and the Azure activity logs. Elevated access log entries for directory audit logs and activity logs include similar information. However, the directory audit logs are easier to filter and export. Also, the export capability enables you to stream access events, which can be used for your alert and detection solutions, such as Microsoft Sentinel or other systems. For information about how to send logs to different destinations, seeConfigure Microsoft Entra diagnostic settings for activity logs.
This section describes different ways that you can view the elevate access log entries.
Microsoft Entra audit logs
Azure activity logs
Important
Elevate access log entries in the Microsoft Entra directory audit logs is currently in preview.
This preview version is provided without a service level agreement, and it's not recommended for production workloads. Certain features might not be supported or might have constrained capabilities.
For more information, seeSupplemental Terms of Use for Microsoft Azure Previews.
Sign in to theAzure portalas a Global Administrator.
Sign in to theAzure portalas a Global Administrator.
Browse toMicrosoft Entra ID>Monitoring>Audit logs.
Browse toMicrosoft Entra ID>Monitoring>Audit logs.
In theServicefilter, selectAzure RBAC (Elevated Access)and then selectApply.Elevated access logs are displayed.
In theServicefilter, selectAzure RBAC (Elevated Access)and then selectApply.
Elevated access logs are displayed.

To view details when access was elevated or removed, select these audit log entries.User has elevated their access to User Access Administrator for their Azure ResourcesThe role assignment of User Access Administrator has been removed from the user
To view details when access was elevated or removed, select these audit log entries.
User has elevated their access to User Access Administrator for their Azure Resources
User has elevated their access to User Access Administrator for their Azure Resources
The role assignment of User Access Administrator has been removed from the user
The role assignment of User Access Administrator has been removed from the user

To download and view the payload of the log entries in JSON format, selectDownloadandJSON.
To download and view the payload of the log entries in JSON format, selectDownloadandJSON.

View elevate access log entries using the Azure portal
Sign in to theAzure portalas a Global Administrator.
Sign in to theAzure portalas a Global Administrator.
Browse toMonitor>Activity log.
Browse toMonitor>Activity log.
Change theActivitylist toDirectory Activity.
Change theActivitylist toDirectory Activity.
Search for the following operation, which signifies the elevate access action.Assigns the caller to User Access Administrator role
Search for the following operation, which signifies the elevate access action.
Assigns the caller to User Access Administrator role
Assigns the caller to User Access Administrator role

View elevate access log entries using Azure CLI
Use theaz logincommand to sign in as Global Administrator.
Use theaz logincommand to sign in as Global Administrator.
Use theaz restcommand to make the following call where you will have to filter by a date as shown with the example timestamp and specify a filename where you want the logs to be stored.Theurlcalls an API to retrieve the logs in Microsoft.Insights. The output will be saved to your file.az rest --url "https://management.azure.com/providers/Microsoft.Insights/eventtypes/management/values?api-version=2015-04-01&$filter=eventTimestamp ge '2021-09-10T20:00:00Z'" > output.txt
Use theaz restcommand to make the following call where you will have to filter by a date as shown with the example timestamp and specify a filename where you want the logs to be stored.
Theurlcalls an API to retrieve the logs in Microsoft.Insights. The output will be saved to your file.
url
az rest --url "https://management.azure.com/providers/Microsoft.Insights/eventtypes/management/values?api-version=2015-04-01&$filter=eventTimestamp ge '2021-09-10T20:00:00Z'" > output.txt
az rest --url "https://management.azure.com/providers/Microsoft.Insights/eventtypes/management/values?api-version=2015-04-01&$filter=eventTimestamp ge '2021-09-10T20:00:00Z'" > output.txt
In the output file, search forelevateAccess.The log will resemble the following where you can see the timestamp of when the action occurred and who called it."submissionTimestamp": "2021-08-27T15:42:00.1527942Z",
  "subscriptionId": "",
  "tenantId": "33333333-3333-3333-3333-333333333333"
},
{
  "authorization": {
    "action": "Microsoft.Authorization/elevateAccess/action",
    "scope": "/providers/Microsoft.Authorization"
  },
  "caller": "user@example.com",
  "category": {
    "localizedValue": "Administrative",
    "value": "Administrative"
  },
In the output file, search forelevateAccess.
elevateAccess
The log will resemble the following where you can see the timestamp of when the action occurred and who called it.
"submissionTimestamp": "2021-08-27T15:42:00.1527942Z",
  "subscriptionId": "",
  "tenantId": "33333333-3333-3333-3333-333333333333"
},
{
  "authorization": {
    "action": "Microsoft.Authorization/elevateAccess/action",
    "scope": "/providers/Microsoft.Authorization"
  },
  "caller": "user@example.com",
  "category": {
    "localizedValue": "Administrative",
    "value": "Administrative"
  },
"submissionTimestamp": "2021-08-27T15:42:00.1527942Z",
  "subscriptionId": "",
  "tenantId": "33333333-3333-3333-3333-333333333333"
},
{
  "authorization": {
    "action": "Microsoft.Authorization/elevateAccess/action",
    "scope": "/providers/Microsoft.Authorization"
  },
  "caller": "user@example.com",
  "category": {
    "localizedValue": "Administrative",
    "value": "Administrative"
  },
Delegate access to a group to view elevate access log entries using Azure CLI
If you want to be able to periodically get the elevate access log entries, you can delegate access to a group and then use Azure CLI.
Browse toMicrosoft Entra ID>Groups.
Browse toMicrosoft Entra ID>Groups.
Create a new security group and note the group object ID.
Create a new security group and note the group object ID.
Use theaz logincommand to sign in as Global Administrator.
Use theaz logincommand to sign in as Global Administrator.
Use theaz role assignment createcommand to assign theReaderrole to the group who can only read logs at the tenant level, which are found atMicrosoft/Insights.az role assignment create --assignee "{groupId}" --role "Reader" --scope "/providers/Microsoft.Insights"
Use theaz role assignment createcommand to assign theReaderrole to the group who can only read logs at the tenant level, which are found atMicrosoft/Insights.
Microsoft/Insights
az role assignment create --assignee "{groupId}" --role "Reader" --scope "/providers/Microsoft.Insights"
az role assignment create --assignee "{groupId}" --role "Reader" --scope "/providers/Microsoft.Insights"
Add a user who will read logs to the previously created group.
Add a user who will read logs to the previously created group.
A user in the group can now periodically run theaz restcommand to view elevate access log entries.
az rest --url "https://management.azure.com/providers/Microsoft.Insights/eventtypes/management/values?api-version=2015-04-01&$filter=eventTimestamp ge '2021-09-10T20:00:00Z'" > output.txt
az rest --url "https://management.azure.com/providers/Microsoft.Insights/eventtypes/management/values?api-version=2015-04-01&$filter=eventTimestamp ge '2021-09-10T20:00:00Z'" > output.txt
Detect elevate access events using Microsoft Sentinel
To detect elevate access events and gain visibility into potentially fraudulent activities, you can use Microsoft Sentinel.Microsoft Sentinelis a security information and event management (SIEM) platform that provides security analytics and threat response capabilities. This section describes how to connect Microsoft Entra audit logs to Microsoft Sentinel so that you can detect elevate access in your organization.
Step 1: Enable Microsoft Sentinel
To get started, add Microsoft Sentinel to an existing Log Analytics workspace or create a new one.
Enable Microsoft Sentinel by following the steps atEnable Microsoft Sentinel.
Enable Microsoft Sentinel by following the steps atEnable Microsoft Sentinel.

Step 2: Connect Microsoft Entra data to Microsoft Sentinel
In this step, you install theMicrosoft Entra IDsolution and use theMicrosoft Entra ID connectorto collect data from Microsoft Entra ID.
Your organization might have already configured a diagnostic setting to integrate the Microsoft Entra audit logs. To check, view your diagnostic settings as described inHow to access diagnostic settings.
Install theMicrosoft Entra IDsolution by following the steps atDiscover and manage Microsoft Sentinel out-of-the-box content.
Install theMicrosoft Entra IDsolution by following the steps atDiscover and manage Microsoft Sentinel out-of-the-box content.

Use theMicrosoft Entra ID connectorto collect data from Microsoft Entra ID by following the steps atConnect Microsoft Entra data to Microsoft Sentinel.
Use theMicrosoft Entra ID connectorto collect data from Microsoft Entra ID by following the steps atConnect Microsoft Entra data to Microsoft Sentinel.
On theData connectorspage, add a check mark forAudit Logs.
On theData connectorspage, add a check mark forAudit Logs.

Step 3: Create an elevate access rule
In this step, you create a scheduled analytics rule based on a template to examine the Microsoft Entra audit logs for elevate access events.
Create an elevate access analytics rule by following the steps atCreate a rule from a template.
Create an elevate access analytics rule by following the steps atCreate a rule from a template.
Select theAzure RBAC (Elevate Access)template then select theCreate rulebutton on the details pane.If you don't see the details pane, on the right edge, select the expand icon.
Select theAzure RBAC (Elevate Access)template then select theCreate rulebutton on the details pane.
If you don't see the details pane, on the right edge, select the expand icon.

In theAnalytics rule wizard, use the default settings to create a new scheduled rule.
In theAnalytics rule wizard, use the default settings to create a new scheduled rule.

Step 4: View incidents of elevate access
In this step, you view and investigate elevate access incidents.
Use theIncidentspage to view incidents of elevate access by following the steps atNavigate and investigate incidents in Microsoft Sentinel.
Use theIncidentspage to view incidents of elevate access by following the steps atNavigate and investigate incidents in Microsoft Sentinel.

Next steps
Understand the different roles
Assign Azure roles using the REST API
Feedback
Was this page helpful?
Additional resources