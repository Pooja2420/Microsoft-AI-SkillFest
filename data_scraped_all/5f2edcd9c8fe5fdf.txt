Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Azure Git repositories can now be treated as protected resources in YAML pipelines
Article
2022-10-04
2 contributors
In this article
You can now treat Azure Git repositories as protected resources in YAML pipelines, just like service connections and agent pools. As a contributor of a repo, you can add checks and pipeline permissions to help you manage your repository.
Check out the following feature descriptions for details.
General
PAT lifecycle management API general availability
Azure Boards
Fixed several issues with Delivery Plans 2.0
Azure Pipelines
Repos as a protected resource in YAML pipelines
Azure Artifacts
Enable empty recycle bin for feeds
General
PAT lifecycle management API general availability
We're happy to announce the general availability of the Personal Access Tokens (PATs) lifecycle management APIs. This rich set of APIs allows your team to simplify the management of the PATs they own, offering them new functionality, such as creating new personal access tokens with a desired scope and duration, and renewing or expiring existing ones.
Previously, the primary way for you to manage PATs (Personal Access Tokens) is through the UI or by using a limited set of APIs intended only for Project Collection Administrators. This new API unlocks the ability for organizations to set up automation involving PATs, including setting up build pipelines or interacting with work items.
Azure Boards
Fixed several issues with Delivery Plans 2.0
Delivery Plans 2.0 has been in public preview since last October. We've been acting on customer feedback and addressing issues. This release includes fixes for those issues. Specifically the inconsistent zooming behavior and scroll bar freezes have been addressed now. Cards are now ordered on the plan by date rather than backlog priority to make better use of the space.
Azure Pipelines
Repos as a protected resource in YAML pipelines
You may organize your Azure DevOps project to host many sub-projects - each with its own Azure DevOps Git repository and one or more pipelines. In this structure, you may want to control which pipelines can access which repositories. For example, let us say that you have two repositories A and B in the same project and two pipelines X and Y that normally build these repositories. You may want to prevent pipeline Y from accessing repository A. In general, you want the contributors of A to control which pipelines they want to provide access to.
While this was partially possible with Azure Git repositories and pipelines, there was no experience for managing it. This feature addresses that gap. Azure Git repositories can now be treated asprotected resourcesin YAML pipelines, just like service connections and agent pools.
As a contributor of repo A, you can add checks and pipeline permissions to your repository. To do this, navigate to the project settings, select Repositories, and then your repository. You will notice a new menu called "Checks", where you can configure any of the in-the-box or custom checks in the form of Azure functions.

Under the "Security" tab, you can manage the list of pipelines that can access the repository.

Anytime a YAML pipeline uses a repository, the Azure Pipelines infrastructure verifies and ensures that all the checks and permissions are satisfied.
Note
These permissions and checks are only applicable to YAML pipelines. Classic pipelines do not recognize these new features.
Azure Artifacts
Enable empty recycle bin for feeds
With this update, you can now empty the recycle bin to permanently delete artifacts outside of the retention policy cadence.
Next steps
Note
These features will roll out over the next two to three weeks.
Head over to Azure DevOps and take a look.
Go to Azure DevOps
How to provide feedback
We would love to hear what you think about these features. Use the help menu to report a problem or provide a suggestion.

You can also get advice and your questions answered by the community onStack Overflow.
Thanks,
Vijay Machiraju
Feedback
Was this page helpful?
Additional resources