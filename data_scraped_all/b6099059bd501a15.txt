Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
PowerShell@2 - PowerShell v2 task
Article
2025-03-20
5 contributors
In this article
Use this task to run a PowerShell script on Linux, macOS, or Windows.
Note
By default, PowerShell v2 uses PowerShell Core for Linux agents and Windows PowerShell for Windows agents. To use the latest version of PowerShell on Windows agents, set thepwshparameter totrue. PowerShell Core will then be used instead.
pwsh
true
Syntax
# PowerShell v2
# Run a PowerShell script on Linux, macOS, or Windows.
- task: PowerShell@2
  inputs:
    #targetType: 'filePath' # 'filePath' | 'inline'. Type. Default: filePath.
    filePath: # string. Required when targetType = filePath. Script Path. 
    #arguments: # string. Optional. Use when targetType = filePath. Arguments. 
    #script: # string. Required when targetType = inline. Script. 
  # Preference Variables
    #errorActionPreference: 'stop' # 'default' | 'stop' | 'continue' | 'silentlyContinue'. ErrorActionPreference. Default: stop.
    #warningPreference: 'default' # 'default' | 'stop' | 'continue' | 'silentlyContinue'. WarningPreference. Default: default.
    #informationPreference: 'default' # 'default' | 'stop' | 'continue' | 'silentlyContinue'. InformationPreference. Default: default.
    #verbosePreference: 'default' # 'default' | 'stop' | 'continue' | 'silentlyContinue'. VerbosePreference. Default: default.
    #debugPreference: 'default' # 'default' | 'stop' | 'continue' | 'silentlyContinue'. DebugPreference. Default: default.
    #progressPreference: 'silentlyContinue' # 'default' | 'stop' | 'continue' | 'silentlyContinue'. ProgressPreference. Default: silentlyContinue.
  # Advanced
    #failOnStderr: false # boolean. Fail on Standard Error. Default: false.
    #showWarnings: false # boolean. Show warnings as Azure DevOps warnings. Default: false.
    #ignoreLASTEXITCODE: false # boolean. Ignore $LASTEXITCODE. Default: false.
    #pwsh: false # boolean. Use PowerShell Core. Default: false.
    #workingDirectory: # string. Working Directory. 
    #runScriptInSeparateScope: false # boolean. Run script in the separate scope. Default: false.
# PowerShell v2
# Run a PowerShell script on Linux, macOS, or Windows.
- task: PowerShell@2
  inputs:
    #targetType: 'filePath' # 'filePath' | 'inline'. Type. Default: filePath.
    filePath: # string. Required when targetType = filePath. Script Path. 
    #arguments: # string. Optional. Use when targetType = filePath. Arguments. 
    #script: # string. Required when targetType = inline. Script. 
  # Preference Variables
    #errorActionPreference: 'stop' # 'default' | 'stop' | 'continue' | 'silentlyContinue'. ErrorActionPreference. Default: stop.
    #warningPreference: 'default' # 'default' | 'stop' | 'continue' | 'silentlyContinue'. WarningPreference. Default: default.
    #informationPreference: 'default' # 'default' | 'stop' | 'continue' | 'silentlyContinue'. InformationPreference. Default: default.
    #verbosePreference: 'default' # 'default' | 'stop' | 'continue' | 'silentlyContinue'. VerbosePreference. Default: default.
    #debugPreference: 'default' # 'default' | 'stop' | 'continue' | 'silentlyContinue'. DebugPreference. Default: default.
    #progressPreference: 'silentlyContinue' # 'default' | 'stop' | 'continue' | 'silentlyContinue'. ProgressPreference. Default: silentlyContinue.
  # Advanced
    #failOnStderr: false # boolean. Fail on Standard Error. Default: false.
    #showWarnings: false # boolean. Show warnings as Azure DevOps warnings. Default: false.
    #ignoreLASTEXITCODE: false # boolean. Ignore $LASTEXITCODE. Default: false.
    #pwsh: false # boolean. Use PowerShell Core. Default: false.
    #workingDirectory: # string. Working Directory. 
    #runScriptInSeparateScope: false # boolean. Run script in the separate scope. Default: false.
# PowerShell v2
# Run a PowerShell script on Linux, macOS, or Windows.
- task: PowerShell@2
  inputs:
    #targetType: 'filePath' # 'filePath' | 'inline'. Type. Default: filePath.
    filePath: # string. Required when targetType = filePath. Script Path. 
    #arguments: # string. Optional. Use when targetType = filePath. Arguments. 
    #script: # string. Required when targetType = inline. Script. 
  # Preference Variables
    #errorActionPreference: 'stop' # 'default' | 'stop' | 'continue' | 'silentlyContinue'. ErrorActionPreference. Default: stop.
    #warningPreference: 'default' # 'default' | 'stop' | 'continue' | 'silentlyContinue'. WarningPreference. Default: default.
    #informationPreference: 'default' # 'default' | 'stop' | 'continue' | 'silentlyContinue'. InformationPreference. Default: default.
    #verbosePreference: 'default' # 'default' | 'stop' | 'continue' | 'silentlyContinue'. VerbosePreference. Default: default.
    #debugPreference: 'default' # 'default' | 'stop' | 'continue' | 'silentlyContinue'. DebugPreference. Default: default.
  # Advanced
    #failOnStderr: false # boolean. Fail on Standard Error. Default: false.
    #showWarnings: false # boolean. Show warnings as Azure DevOps warnings. Default: false.
    #ignoreLASTEXITCODE: false # boolean. Ignore $LASTEXITCODE. Default: false.
    #pwsh: false # boolean. Use PowerShell Core. Default: false.
    #workingDirectory: # string. Working Directory. 
    #runScriptInSeparateScope: false # boolean. Run script in the separate scope. Default: false.
# PowerShell v2
# Run a PowerShell script on Linux, macOS, or Windows.
- task: PowerShell@2
  inputs:
    #targetType: 'filePath' # 'filePath' | 'inline'. Type. Default: filePath.
    filePath: # string. Required when targetType = filePath. Script Path. 
    #arguments: # string. Optional. Use when targetType = filePath. Arguments. 
    #script: # string. Required when targetType = inline. Script. 
  # Preference Variables
    #errorActionPreference: 'stop' # 'default' | 'stop' | 'continue' | 'silentlyContinue'. ErrorActionPreference. Default: stop.
    #warningPreference: 'default' # 'default' | 'stop' | 'continue' | 'silentlyContinue'. WarningPreference. Default: default.
    #informationPreference: 'default' # 'default' | 'stop' | 'continue' | 'silentlyContinue'. InformationPreference. Default: default.
    #verbosePreference: 'default' # 'default' | 'stop' | 'continue' | 'silentlyContinue'. VerbosePreference. Default: default.
    #debugPreference: 'default' # 'default' | 'stop' | 'continue' | 'silentlyContinue'. DebugPreference. Default: default.
  # Advanced
    #failOnStderr: false # boolean. Fail on Standard Error. Default: false.
    #showWarnings: false # boolean. Show warnings as Azure DevOps warnings. Default: false.
    #ignoreLASTEXITCODE: false # boolean. Ignore $LASTEXITCODE. Default: false.
    #pwsh: false # boolean. Use PowerShell Core. Default: false.
    #workingDirectory: # string. Working Directory. 
    #runScriptInSeparateScope: false # boolean. Run script in the separate scope. Default: false.
# PowerShell v2
# Run a PowerShell script on Linux, macOS, or Windows.
- task: PowerShell@2
  inputs:
    #targetType: 'filePath' # 'filePath' | 'inline'. Type. Default: filePath.
    filePath: # string. Required when targetType = filePath. Script Path. 
    #arguments: # string. Optional. Use when targetType = filePath. Arguments. 
    #script: # string. Required when targetType = inline. Script. 
    #errorActionPreference: 'stop' # 'stop' | 'continue' | 'silentlyContinue'. ErrorActionPreference. Default: stop.
  # Advanced
    #failOnStderr: false # boolean. Fail on Standard Error. Default: false.
    #showWarnings: false # boolean. Show warnings as Azure DevOps warnings. Default: false.
    #ignoreLASTEXITCODE: false # boolean. Ignore $LASTEXITCODE. Default: false.
    #pwsh: false # boolean. Use PowerShell Core. Default: false.
    #workingDirectory: # string. Working Directory.
# PowerShell v2
# Run a PowerShell script on Linux, macOS, or Windows.
- task: PowerShell@2
  inputs:
    #targetType: 'filePath' # 'filePath' | 'inline'. Type. Default: filePath.
    filePath: # string. Required when targetType = filePath. Script Path. 
    #arguments: # string. Optional. Use when targetType = filePath. Arguments. 
    #script: # string. Required when targetType = inline. Script. 
    #errorActionPreference: 'stop' # 'stop' | 'continue' | 'silentlyContinue'. ErrorActionPreference. Default: stop.
  # Advanced
    #failOnStderr: false # boolean. Fail on Standard Error. Default: false.
    #showWarnings: false # boolean. Show warnings as Azure DevOps warnings. Default: false.
    #ignoreLASTEXITCODE: false # boolean. Ignore $LASTEXITCODE. Default: false.
    #pwsh: false # boolean. Use PowerShell Core. Default: false.
    #workingDirectory: # string. Working Directory.
# PowerShell v2
# Run a PowerShell script on Linux, macOS, or Windows.
- task: PowerShell@2
  inputs:
    #targetType: 'filePath' # 'filePath' | 'inline'. Type. Default: filePath.
    filePath: # string. Required when targetType = filePath. Script Path. 
    #arguments: # string. Optional. Use when targetType = filePath. Arguments. 
    #script: # string. Required when targetType = inline. Script. 
    #errorActionPreference: 'stop' # 'stop' | 'continue' | 'silentlyContinue'. ErrorActionPreference. Default: stop.
  # Advanced
    #failOnStderr: false # boolean. Fail on Standard Error. Default: false.
    #ignoreLASTEXITCODE: false # boolean. Ignore $LASTEXITCODE. Default: false.
    #pwsh: false # boolean. Use PowerShell Core. Default: false.
    #workingDirectory: # string. Working Directory.
# PowerShell v2
# Run a PowerShell script on Linux, macOS, or Windows.
- task: PowerShell@2
  inputs:
    #targetType: 'filePath' # 'filePath' | 'inline'. Type. Default: filePath.
    filePath: # string. Required when targetType = filePath. Script Path. 
    #arguments: # string. Optional. Use when targetType = filePath. Arguments. 
    #script: # string. Required when targetType = inline. Script. 
    #errorActionPreference: 'stop' # 'stop' | 'continue' | 'silentlyContinue'. ErrorActionPreference. Default: stop.
  # Advanced
    #failOnStderr: false # boolean. Fail on Standard Error. Default: false.
    #ignoreLASTEXITCODE: false # boolean. Ignore $LASTEXITCODE. Default: false.
    #pwsh: false # boolean. Use PowerShell Core. Default: false.
    #workingDirectory: # string. Working Directory.
Inputs
targetType-Typestring. Allowed values:filePath(File Path),inline. Default value:filePath.
targetType
string
filePath
inline
filePath
Specifies the type of script for the task to run: an inline script or a path to a.ps1file.
.ps1
filePath-Script Pathstring. Required whentargetType = filePath.
filePath
string
targetType = filePath
Specifies the path of the script to execute. Must be a fully qualified path or relative to$(System.DefaultWorkingDirectory).
$(System.DefaultWorkingDirectory)
arguments-Argumentsstring. Optional. Use whentargetType = filePath.
arguments
string
targetType = filePath
Specifies the arguments passed to the PowerShell script. Arguments can be ordinal parameters or named parameters. For example,-Name someName -Path -Value "Some long string value".
-Name someName -Path -Value "Some long string value"
argumentsis not used whentargetTypeis set toinline.
arguments
targetType
inline
script-Scriptstring. Required whentargetType = inline. Default value:# Write your PowerShell commands here.\n\nWrite-Host "Hello World".
script
string
targetType = inline
# Write your PowerShell commands here.\n\nWrite-Host "Hello World"
Specifies the contents of the script. The maximum supported inline script length is 20000 characters. Use a script from a file if you want to use a longer script.
errorActionPreference-ErrorActionPreferencestring. Allowed values:default,stop,continue,silentlyContinue. Default value:stop.
errorActionPreference
string
default
stop
continue
silentlyContinue
stop
Prepends the line$ErrorActionPreference = 'VALUE'at the top of your script.
$ErrorActionPreference = 'VALUE'
errorActionPreference-ErrorActionPreferencestring. Allowed values:stop,continue,silentlyContinue. Default value:stop.
errorActionPreference
string
stop
continue
silentlyContinue
stop
Prepends the line$ErrorActionPreference = 'VALUE'at the top of your script.
$ErrorActionPreference = 'VALUE'
warningPreference-WarningPreferencestring. Allowed values:default,stop,continue,silentlyContinue. Default value:default.
warningPreference
string
default
stop
continue
silentlyContinue
default
When not set toDefault, prepends the line$WarningPreference = 'VALUE'at the top of your script.
Default
$WarningPreference = 'VALUE'
informationPreference-InformationPreferencestring. Allowed values:default,stop,continue,silentlyContinue. Default value:default.
informationPreference
string
default
stop
continue
silentlyContinue
default
When not set toDefault, prepends the line$InformationPreference = 'VALUE'at the top of your script.
Default
$InformationPreference = 'VALUE'
verbosePreference-VerbosePreferencestring. Allowed values:default,stop,continue,silentlyContinue. Default value:default.
verbosePreference
string
default
stop
continue
silentlyContinue
default
When not set toDefault, prepends the line$VerbosePreference = 'VALUE'at the top of your script.
Default
$VerbosePreference = 'VALUE'
debugPreference-DebugPreferencestring. Allowed values:default,stop,continue,silentlyContinue. Default value:default.
debugPreference
string
default
stop
continue
silentlyContinue
default
When not set toDefault, prepends the line$DebugPreference = 'VALUE'at the top of your script.
Default
$DebugPreference = 'VALUE'
progressPreference-ProgressPreferencestring. Allowed values:default,stop,continue,silentlyContinue. Default value:silentlyContinue.
progressPreference
string
default
stop
continue
silentlyContinue
silentlyContinue
When not set toDefault, prepends the line$ProgressPreference = 'VALUE'at the top of your script.
Default
$ProgressPreference = 'VALUE'
failOnStderr-Fail on Standard Errorboolean. Default value:false.
failOnStderr
boolean
false
If the value of this boolean istrue, the task fails if any errors are written to the error pipeline or if any data is written to the Standard Error stream. Otherwise, the task relies on the exit code to determine failure.
true
showWarnings-Show warnings as Azure DevOps warningsboolean. Default value:false.
showWarnings
boolean
false
If the value is set totrue, and your script writes warnings, then the warnings will appear as warnings in Pipeline logs.
true
ignoreLASTEXITCODE-Ignore $LASTEXITCODEboolean. Default value:false.
ignoreLASTEXITCODE
boolean
false
If the value is set tofalse, the lineif ((Test-Path -LiteralPath variable:\LASTEXITCODE)) { exit $LASTEXITCODE }is appended to the end of your script. This will cause the last exit code from an external command to be propagated as the exit code ofpowershell. Otherwise, the line is not appended to the end of your script.
false
if ((Test-Path -LiteralPath variable:\LASTEXITCODE)) { exit $LASTEXITCODE }
powershell
pwsh-Use PowerShell Coreboolean. Default value:false.
pwsh
boolean
false
If this is true, then tasks running on Windows agents will usepwsh.exefrom your path instead ofpowershell.exe.
pwsh.exe
powershell.exe
workingDirectory-Working Directorystring.
workingDirectory
string
Specifies the working directory where the script is run. If a value is not specified, the working directory is$(Build.SourcesDirectory).
$(Build.SourcesDirectory)
runScriptInSeparateScope-Run script in the separate scopeboolean. Default value:false.
runScriptInSeparateScope
boolean
false
This input allows executing PowerShell scripts using&operator instead of the default.. If this input is set totrue, the script will be executed in a separate scope, and globally scoped PowerShell variables won't be updated.
&
.
true
Task control options
All tasks have control options in addition to their task inputs. For more information, seeControl options and common task properties.
Output variables
None.
Remarks
Each PowerShell session lasts only for the duration of the job in which it runs. Tasks that depend on what has been bootstrapped must be in the same job as the bootstrap.
Task shortcuts
PowerShell@2has two shortcuts in YAML:steps.powershellandsteps.pwsh.
PowerShell@2
powershellruns using either Windows PowerShell (on Windows) orpwsh(Linux and macOS).
powershell
pwsh
pwshruns PowerShell Core, the cross-platform edition of PowerShell built on .NET Core.
pwsh
steps:
- powershell: # Run a script in Windows PowerShell on Windows, and pwsh on Linux and macOS.
- pwsh: # Run a script in PowerShell Core on Windows, macOS, and Linux.
steps:
- powershell: # Run a script in Windows PowerShell on Windows, and pwsh on Linux and macOS.
- pwsh: # Run a script in PowerShell Core on Windows, macOS, and Linux.
Set a variable so it can be read by subsequent scripts and tasks
To learn more about defining build variables in a script, seeDefine and modify your build variables in a script.
To learn more about defining release variables in a script, seeDefine and modify your release variables in a script.
Passing pipeline secrets in script, but secret is not masked in pipeline logs
Be aware that PowerShell cuts off error messages, so if you use pipeline secrets in a script, the secrets could be trimmed and exposed. For example, in the inline script below:
./script.ps1 --arg1 value1 --arg2 <some_secret_which_will_be_masked_here>
./script.ps1 --arg1 value1 --arg2 <some_secret_which_will_be_masked_here>
There could be an exception like:At <path_to_temp_script_file>:4 char:3:
At <path_to_temp_script_file>:4 char:3
+   ./script.ps1 --arg1 value1 --arg2 <unmasked_part_of_original_secret> ...
+   ~~~~~~~~~~
    + <Additional exception details>
+   ./script.ps1 --arg1 value1 --arg2 <unmasked_part_of_original_secret> ...
+   ~~~~~~~~~~
    + <Additional exception details>
To avoid this issue, you can handle these exceptions on a script level, or avoid cases when pipeline secrets could appear in source code lines within error messages.
Examples
Invoke a script from a file
Write a warning
Write an error
Call PowerShell script with multiple arguments
Invoke a script from a file
The following is a sample PowerShell file namedtest.ps1located in the root of your repository.
test.ps1
Write-Host "Hello World from $Env:AGENT_NAME."
Write-Host "My ID is $Env:AGENT_ID."
Write-Host "AGENT_WORKFOLDER contents:"
gci $Env:AGENT_WORKFOLDER
Write-Host "AGENT_BUILDDIRECTORY contents:"
gci $Env:AGENT_BUILDDIRECTORY
Write-Host "BUILD_SOURCESDIRECTORY contents:"
gci $Env:BUILD_SOURCESDIRECTORY
Write-Host "Over and out."
Write-Host "Hello World from $Env:AGENT_NAME."
Write-Host "My ID is $Env:AGENT_ID."
Write-Host "AGENT_WORKFOLDER contents:"
gci $Env:AGENT_WORKFOLDER
Write-Host "AGENT_BUILDDIRECTORY contents:"
gci $Env:AGENT_BUILDDIRECTORY
Write-Host "BUILD_SOURCESDIRECTORY contents:"
gci $Env:BUILD_SOURCESDIRECTORY
Write-Host "Over and out."
You can invoke this script in your pipeline like this.
steps:
- task: PowerShell@2
  inputs:
    targetType: 'filePath'
    filePath: 'test.ps1'
steps:
- task: PowerShell@2
  inputs:
    targetType: 'filePath'
    filePath: 'test.ps1'
Write a warning
- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: Write-Host "##vso[task.LogIssue type=warning;]This is the warning"
    # Writes a warning to build summary and to log in yellow text
- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: Write-Host "##vso[task.LogIssue type=warning;]This is the warning"
    # Writes a warning to build summary and to log in yellow text
Write an error
- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: Write-Host "##vso[task.LogIssue type=error;]This is the error"
    # Writes an error to build summary and to log in red text
- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: Write-Host "##vso[task.LogIssue type=error;]This is the error"
    # Writes an error to build summary and to log in red text
If you want this error to fail the build, addexit 1to the script.
exit 1
- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      Write-Host "##vso[task.LogIssue type=error;]This is the error"
      exit 1
    # Writes an error to build summary and to log in red text
- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      Write-Host "##vso[task.LogIssue type=error;]This is the error"
      exit 1
    # Writes an error to build summary and to log in red text
Call PowerShell script with multiple arguments
Create PowerShell scripttest2.ps1:
test2.ps1
param ($input1, $input2)
Write-Host "$input1 $input2"
param ($input1, $input2)
Write-Host "$input1 $input2"
In your YAML pipeline, call:
- task: PowerShell@2
  inputs:
    targetType: 'filePath'
    filePath: $(System.DefaultWorkingDirectory)\test2.ps1
    arguments: > # Use this to avoid newline characters in multiline string
      -input1 "Hello"
      -input2 "World"
  displayName: 'Print Hello World'
- task: PowerShell@2
  inputs:
    targetType: 'filePath'
    filePath: $(System.DefaultWorkingDirectory)\test2.ps1
    arguments: > # Use this to avoid newline characters in multiline string
      -input1 "Hello"
      -input2 "World"
  displayName: 'Print Hello World'
Requirements
See also
Use a PowerShell script to customize your pipeline - ApplyVersionToAssemblies.ps1
Learn more about PowerShell scriptsScripting with Windows PowerShellMicrosoft Script Center (the Scripting Guys)PowerShell.org
Scripting with Windows PowerShell
Microsoft Script Center (the Scripting Guys)
PowerShell.org
Feedback
Was this page helpful?
Additional resources