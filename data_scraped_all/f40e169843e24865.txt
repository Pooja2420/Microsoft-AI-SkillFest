Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Azure Certificate Authority details
Article
2025-03-31
5 contributors
In this article
This article outlines the specific root and subordinate Certificate Authorities (CAs) that are employed by Azure's service endpoints. It is important to note that this list is distinct from the trust anchors provided on Azure VMs and hosted services, which leverage the trust anchors provided by the operating systems themselves. The scope includes government and national clouds. The minimum requirements for public key encryption and signature algorithms, links to certificate downloads and revocation lists, and information about key concepts are provided below the CA details tables. The host names for the URIs that should be added to your firewall allowlists are also provided.
Certificate Authority details
Any entity trying to access Microsoft Entra identity services via the TLS/SSL protocols will be presented with certificates from the CAs listed in this article. Different services may use different root or intermediate CAs. The following root and subordinate CAs are relevant to entities that usecertificate pinning.
How to read the certificate details:
The Serial Number (top string in the table) contains the hexadecimal value of the certificate serial number.
The Thumbprint (bottom string in the table) is the SHA1 thumbprint.
CAs listed in italics are the most recently added CAs.
Root and Subordinate CAs list
Certificate Authority chains
Root Certificate Authorities
Subordinate Certificate Authorities
Root and subordinate certificate authority chains
Client compatibility for public PKIs
The CAs used by Azure are compatible with the following OS versions:
Review the following action steps when CAs expire or change:
Update to a supported version of the required OS.
If you can't change the OS version, you may need to manually update the trusted root store to include the new CAs. Refer to documentation provided by the manufacturer.
If your scenario includes disabling the trusted root store or running the Windows client in disconnected environments, ensure that all root CAs are included in the Trusted Root CA store and all sub CAs listed in this article are included in the Intermediate CA store.
Many distributions ofLinuxrequire you to add CAs to /etc/ssl/certs. Refer to the distributionâs documentation.
Ensure that theJavakey store contains the CAs listed in this article.  For more information, see theJava applicationssection of this article.
If your application explicitly specifies a list of acceptable CAs, check to see if you need to update the pinned certificates when CAs change or expire. For more information, seeCertificate pinning.
Public key encryption and signature algorithms
Support for the following algorithms, elliptical curves, and key sizes are required:
Signature algorithms:
ES256
ES384
ES512
RS256
RS384
RS512
Elliptical curves:
P256
P384
P521
Key sizes:
ECDSA 256
ECDSA 384
ECDSA 521
RSA 2048
RSA 3072
RSA 4096
Certificate downloads and revocation lists
The following domains (HTTP/Port 80) may need to be included in your firewall allowlists to optimize connectivity:
AIA:
cacerts.digicert.com
cacerts.digicert.com
cacerts.digicert.cn
cacerts.digicert.cn
cacerts.geotrust.com
cacerts.geotrust.com
www.microsoft.com
www.microsoft.com
CRL:
crl3.digicert.com
crl3.digicert.com
crl4.digicert.com
crl4.digicert.com
crl.digicert.cn
crl.digicert.cn
cdp.geotrust.com
cdp.geotrust.com
www.microsoft.com
www.microsoft.com
OCSP:
ocsp.digicert.com
ocsp.digicert.com
ocsp.digicert.cn
ocsp.digicert.cn
oneocsp.microsoft.com
oneocsp.microsoft.com
status.geotrust.com
status.geotrust.com
Certificate Pinning
Certificate Pinning is a security technique where only authorized, orpinned, certificates are accepted when establishing a secure session. Any attempt to establish a secure session using a different certificate is rejected. Learn about the history and implications ofcertificate pinning.
How to address certificate pinning
If your application explicitly specifies a list of acceptable CAs, you may periodically need to update pinned certificates when Certificate Authorities change or expire.
To detect certificate pinning, we recommend the taking the following steps:
If you're an application developer, search your source code for references to certificate thumbprints, Subject Distinguished Names, Common Names, serial numbers, public keys, and other certificate properties of any of the Sub CAs involved in this change.If there's a match, update the application to include the missing CAs.
If there's a match, update the application to include the missing CAs.
If you have an application that integrates with Azure APIs or other Azure services and you're unsure if it uses certificate pinning, check with the application vendor.
Java Applications
To determine if theMicrosoft ECC Root Certificate Authority 2017andMicrosoft RSA Root Certificate Authority 2017root certificates are trusted by your Java application, you can check the list of trusted root certificates used by the Java Virtual Machine (JVM).
Open a terminal window on your system.
Open a terminal window on your system.
Run the following command:keytool -list -keystore $JAVA_HOME/jre/lib/security/cacerts$JAVA_HOMErefers to the path to the Java home directory.If you're unsure of the path, you can find it by running the following command:readlink -f $(which java) | xargs dirname | xargs dirname
Run the following command:
keytool -list -keystore $JAVA_HOME/jre/lib/security/cacerts
keytool -list -keystore $JAVA_HOME/jre/lib/security/cacerts
$JAVA_HOMErefers to the path to the Java home directory.
$JAVA_HOME
If you're unsure of the path, you can find it by running the following command:
readlink -f $(which java) | xargs dirname | xargs dirname
readlink -f $(which java) | xargs dirname | xargs dirname
Look for theMicrosoft RSA Root Certificate Authority 2017in the output. It should look something like this:If theMicrosoft ECC Root Certificate Authority 2017andMicrosoft RSA Root Certificate Authority 2017root certificates are trusted, they should appear in the list of trusted root certificates used by the JVM.If it's not in the list, you'll need to add it.The output should look like the following sample:...
    Microsoft ECC Root Certificate Authority 2017, 20-Aug-2022, Root CA,
    Microsoft RSA Root Certificate Authority 2017, 20-Aug-2022, Root CA,
    ...
Look for theMicrosoft RSA Root Certificate Authority 2017in the output. It should look something like this:
If theMicrosoft ECC Root Certificate Authority 2017andMicrosoft RSA Root Certificate Authority 2017root certificates are trusted, they should appear in the list of trusted root certificates used by the JVM.
If it's not in the list, you'll need to add it.
The output should look like the following sample:
...
    Microsoft ECC Root Certificate Authority 2017, 20-Aug-2022, Root CA,
    Microsoft RSA Root Certificate Authority 2017, 20-Aug-2022, Root CA,
    ...
...
    Microsoft ECC Root Certificate Authority 2017, 20-Aug-2022, Root CA,
    Microsoft RSA Root Certificate Authority 2017, 20-Aug-2022, Root CA,
    ...
To add a root certificate to the trusted root certificate store in Java, you can use thekeytoolutility. The following example adds theMicrosoft RSA Root Certificate Authority 2017root certificate:keytool -import -file microsoft-ecc-root-ca.crt -alias microsoft-ecc-root-ca -keystore $JAVA_HOME/jre/lib/security/cacerts
keytool -import -file microsoft-rsa-root-ca.crt -alias microsoft-rsa-root-ca -keystore $JAVA_HOME/jre/lib/security/cacertsNoteIn this example,microsoft-ecc-root-ca.crtandmicrosoft-rsa-root-ca.crtare the names of the files that contain theMicrosoft ECC Root Certificate Authority 2017andMicrosoft RSA Root Certificate Authority 2017root certificates, respectively.
To add a root certificate to the trusted root certificate store in Java, you can use thekeytoolutility. The following example adds theMicrosoft RSA Root Certificate Authority 2017root certificate:
keytool
keytool -import -file microsoft-ecc-root-ca.crt -alias microsoft-ecc-root-ca -keystore $JAVA_HOME/jre/lib/security/cacerts
keytool -import -file microsoft-rsa-root-ca.crt -alias microsoft-rsa-root-ca -keystore $JAVA_HOME/jre/lib/security/cacerts
keytool -import -file microsoft-ecc-root-ca.crt -alias microsoft-ecc-root-ca -keystore $JAVA_HOME/jre/lib/security/cacerts
keytool -import -file microsoft-rsa-root-ca.crt -alias microsoft-rsa-root-ca -keystore $JAVA_HOME/jre/lib/security/cacerts
Note
In this example,microsoft-ecc-root-ca.crtandmicrosoft-rsa-root-ca.crtare the names of the files that contain theMicrosoft ECC Root Certificate Authority 2017andMicrosoft RSA Root Certificate Authority 2017root certificates, respectively.
microsoft-ecc-root-ca.crt
microsoft-rsa-root-ca.crt
Past changes
The CA/Browser Forum updated the Baseline Requirements to require all publicly trusted Public Key Infrastructures (PKIs) to end usage of the SHA-1 hash algorithms for Online Certificate Standard Protocol (OCSP) on May 31, 2022. Microsoft updated all remaining OCSP Responders that used the SHA-1 hash algorithm to use the SHA-256 hash algorithm.
Microsoft updated Azure services to use TLS certificates from a different set of Root Certificate Authorities (CAs) on February 15, 2021, to comply with changes set forth by the CA/Browser Forum Baseline Requirements. Some services finalized these updates in 2022.
Article change log
October 8, 2024: Removed the following CAs and CDP endpoints: crl.microsoft.com, mscrl.microsoft.com, and ocsp.msocsp.com.Certificate AuthoritySerial NumberThumbprintBaltimore CyberTrust Root0x20000b9D4DE20D05E66FC53FE1A50882C78DB2852CAE474Microsoft RSA TLS CA 010x0f14965f202069994fd5c7ac788941e2703D7A8F0EBF55AAA59F98EAF4A206004EB2516AMicrosoft RSA TLS CA 020x0fa74722c53d88c80f589efb1f9d4a3aB0C2D2D13CDD56CDAA6AB6E2C04440BE4A429C75DigiCert Cloud Services CA-10f171a48c6f223809218cd2ed6ddc0e8B3F6B64A07BB9611F47174407841F564FB991F29
October 8, 2024: Removed the following CAs and CDP endpoints: crl.microsoft.com, mscrl.microsoft.com, and ocsp.msocsp.com.
July 22, 2024: Added Entrust CAs from a parallel Microsoft 365 article to provide a comprehensive list.
July 22, 2024: Added Entrust CAs from a parallel Microsoft 365 article to provide a comprehensive list.
June 27, 2024: Removed the following CAs, which were superseded by both versions of Microsoft Azure ECC TLS Issuing CAs 03, 04, 07, 08.Certificate AuthoritySerial NumberThumbprintMicrosoft Azure ECC TLS Issuing CA 010x09dc42a5f574ff3a389ee06d5d4de44092503D0D74A7D3708197B6EE13082D52117A6AB0Microsoft Azure ECC TLS Issuing CA 010x330000001aa9564f44321c54b900000000001aCDA57423EC5E7192901CA1BF6169DBE48E8D1268Microsoft Azure ECC TLS Issuing CA 020x0e8dbe5ea610e6cbb569c736f6d7004b1E981CCDDC69102A45C6693EE84389C3CF2329F1Microsoft Azure ECC TLS Issuing CA 020x330000001b498d6736ed5612c200000000001b489FF5765030EB28342477693EB183A4DED4D2A6Microsoft Azure ECC TLS Issuing CA 05x0ce59c30fd7a83532e2d0146b332f965C6363570AF8303CDF31C1D5AD81E19DBFE172531Microsoft Azure ECC TLS Issuing CA 050x330000001cc0d2a3cd78cf2c1000000000001c4C15BC8D7AA5089A84F2AC4750F040D064040CD4Microsoft Azure ECC TLS Issuing CA 060x066e79cd7624c63130c77abeb6a8bb947365ADAEDFEA4909C1BAADBAB68719AD0C381163Microsoft Azure ECC TLS Issuing CA 060x330000001d0913c309da3f05a600000000001dDFEB65E575D03D0CC59FD60066C6D39421E65483Microsoft Azure TLS Issuing CA 010x0aafa6c5ca63c45141ea3be1f7c753172F2877C5D778C31E0F29C7E371DF5471BD673173Microsoft Azure TLS Issuing CA 010x1dbe9496f3db8b8de700000000001dB9ED88EB05C15C79639493016200FDAB08137AF3Microsoft Azure TLS Issuing CA 020x0c6ae97cced599838690a00a9ea53214E7EEA674CA718E3BEFD90858E09F8372AD0AE2AAMicrosoft Azure TLS Issuing CA 020x330000001ec6749f058517b4d000000000001eC5FB956A0E7672E9857B402008E7CCAD031F9B08Microsoft Azure TLS Issuing CA 050x0d7bede97d8209967a52631b8bdd18bd6C3AF02E7F269AA73AFD0EFF2A88A4A1F04ED1E5Microsoft Azure TLS Issuing CA 050x330000001f9f1fa2043bc28db900000000001f56F1CA470BB94E274B516A330494C792C419CF87Microsoft Azure TLS Issuing CA 060x02e79171fb8021e93fe2d983834c50c030E01761AB97E59A06B41EF20AF6F2DE7EF4F7B0Microsoft Azure TLS Issuing CA 060x3300000020a2f1491a37fbd31f0000000000208F1FD57F27C828D7BE29743B4D02CD7E6E5F43E6
June 27, 2024: Removed the following CAs, which were superseded by both versions of Microsoft Azure ECC TLS Issuing CAs 03, 04, 07, 08.
July 17, 2023: Added 16 new subordinate Certificate Authorities.
July 17, 2023: Added 16 new subordinate Certificate Authorities.
February 7, 2023: Added eight new subordinate Certificate Authorities.
February 7, 2023: Added eight new subordinate Certificate Authorities.
Next steps
To learn more about Certificate Authorities and PKI, see:
Microsoft PKI Repository
Microsoft PKI Repository, including CRL and policy information
Azure Firewall Premium certificates
PKI certificates and Configuration Manager
Securing PKI
Feedback
Was this page helpful?
Additional resources