Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Quickstart: Use Python to query a database in Azure SQL Database or Azure SQL Managed Instance
Article
2023-09-21
19 contributors
In this article
Applies to:Azure SQL DatabaseAzure SQL Managed InstanceAzure Synapse Analytics
In this quickstart, you use Python to connect to Azure SQL Database, Azure SQL Managed Instance, or Synapse SQL database and use T-SQL statements to query data.
Prerequisites
To complete this quickstart, you need:
An Azure account with an active subscription.Create an account for free.
An Azure account with an active subscription.Create an account for free.
A database where you'll run a query.You can use one of these quickstarts to create and then configure a database:ActionSQL DatabaseSQL Managed InstanceSQL Server on Azure VMAzure Synapse AnalyticsCreatePortalPortalPortalPortalCLICLIPowerShellPowerShellPowerShellPowerShellDeployment templateDeployment templateDeployment templateDeployment templateConfigureServer-level IP firewall ruleConnectivity from a VMConnectivity settingsConnectivity from on-premisesConnect to a SQL Server instanceGet connection informationAzure SQLAzure SQLSQL VMSynapse SQL
A database where you'll run a query.
You can use one of these quickstarts to create and then configure a database:
Python3 and related softwareActionmacOSLinuxWindowsInstall the ODBC driver,sqlcmd, and the Python driver for SQL ServerConfigure an environment for pyodbc Python developmentConfigure an environment for pyodbc Python developmentConfigure an environment for pyodbc Python development.Install Python and other required packagesUsesudo apt-get install python python-pip gcc g++ build-essential.Further informationMicrosoft ODBC driver on macOSMicrosoft ODBC driver on LinuxMicrosoft ODBC driver on Windows
Python3 and related software
sudo apt-get install python python-pip gcc g++ build-essential
To further explore Python and the database in Azure SQL Database, seeAzure SQL Database libraries for Python, thepyodbc repository, and apyodbc sample.
Create code to query your database
In a text editor, create a new file namedsqltest.py.
In a text editor, create a new file namedsqltest.py.
Add the following code. Get the connection information from the prerequisites section and substitute your own values for <server>, <database>, <username>, and <password>.import pyodbc
server = '<server>.database.windows.net'
database = '<database>'
username = '<username>'
password = '{<password>}'
driver= '{ODBC Driver 17 for SQL Server}'

with pyodbc.connect('DRIVER='+driver+';SERVER=tcp:'+server+';PORT=1433;DATABASE='+database+';UID='+username+';PWD='+ password) as conn:
    with conn.cursor() as cursor:
        cursor.execute("SELECT TOP 3 name, collation_name FROM sys.databases")
        row = cursor.fetchone()
        while row:
            print (str(row[0]) + " " + str(row[1]))
            row = cursor.fetchone()
Add the following code. Get the connection information from the prerequisites section and substitute your own values for <server>, <database>, <username>, and <password>.
import pyodbc
server = '<server>.database.windows.net'
database = '<database>'
username = '<username>'
password = '{<password>}'
driver= '{ODBC Driver 17 for SQL Server}'

with pyodbc.connect('DRIVER='+driver+';SERVER=tcp:'+server+';PORT=1433;DATABASE='+database+';UID='+username+';PWD='+ password) as conn:
    with conn.cursor() as cursor:
        cursor.execute("SELECT TOP 3 name, collation_name FROM sys.databases")
        row = cursor.fetchone()
        while row:
            print (str(row[0]) + " " + str(row[1]))
            row = cursor.fetchone()
import pyodbc
server = '<server>.database.windows.net'
database = '<database>'
username = '<username>'
password = '{<password>}'
driver= '{ODBC Driver 17 for SQL Server}'

with pyodbc.connect('DRIVER='+driver+';SERVER=tcp:'+server+';PORT=1433;DATABASE='+database+';UID='+username+';PWD='+ password) as conn:
    with conn.cursor() as cursor:
        cursor.execute("SELECT TOP 3 name, collation_name FROM sys.databases")
        row = cursor.fetchone()
        while row:
            print (str(row[0]) + " " + str(row[1]))
            row = cursor.fetchone()
Run the code
At a command prompt, run the following command:python sqltest.py
At a command prompt, run the following command:
python sqltest.py
python sqltest.py
Verify that the databases and their collations are returned, and then close the command window.If you receive an error:Verify that the server name, database name, username, and password you're using are correct.Verify that the ODBC driver you installed is the same version as thedrivervariable in the code above. For example, the code shows 17, but you may have installed a different version.If you're running the code from a local environment, verify that the firewall of the Azure resource you're trying to access is configured to allow access from your environment's IP address.
Verify that the databases and their collations are returned, and then close the command window.
If you receive an error:
Verify that the server name, database name, username, and password you're using are correct.
Verify that the ODBC driver you installed is the same version as thedrivervariable in the code above. For example, the code shows 17, but you may have installed a different version.
driver
If you're running the code from a local environment, verify that the firewall of the Azure resource you're trying to access is configured to allow access from your environment's IP address.
Next steps
Design your first database in Azure SQL Database
Microsoft Python drivers for SQL Server
Python developer center
Feedback
Was this page helpful?
Additional resources