Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Create and deploy an Azure OpenAI Service resource
Article
2025-01-31
8 contributors
In this article

This article describes how to get started with Azure OpenAI Service and provides step-by-step instructions to create a resource and deploy a model. You can create resources in Azure in several different ways:
TheAzure portal
The REST APIs, the Azure CLI, PowerShell, or client libraries
Azure Resource Manager (ARM) templates
In this article, you review examples for creating and deploying resources in the Azure portal and with the Azure CLI.
Prerequisites
An Azure subscription.Create one for free.
Access permissions tocreate Azure OpenAI resources and to deploy models.
Create a resource
The following steps show how to create an Azure OpenAI resource in the Azure portal.
Identify the resource
Sign in with your Azure subscription in the Azure portal.
Sign in with your Azure subscription in the Azure portal.
SelectCreate a resourceand search for theAzure OpenAI. When you locate the service, selectCreate.
SelectCreate a resourceand search for theAzure OpenAI. When you locate the service, selectCreate.

On theCreate Azure OpenAIpage, provide the following information for the fields on theBasicstab:FieldDescriptionSubscriptionThe Azure subscription used in your Azure OpenAI Service onboarding application.Resource groupThe Azure resource group to contain your Azure OpenAI resource. You can create a new group or use a pre-existing group.RegionThe location of your instance. Different locations can introduce latency, but they don't affect the runtime availability of your resource.NameA descriptive name for your Azure OpenAI Service resource, such asMyOpenAIResource.Pricing TierThe pricing tier for the resource. Currently, only the Standard tier is available for the Azure OpenAI Service. For more info on pricing visit theAzure OpenAI pricing page
On theCreate Azure OpenAIpage, provide the following information for the fields on theBasicstab:

SelectNext.
SelectNext.
Configure network security
TheNetworktab presents three options for the securityType:
Option 1:All networks, including the internet, can access this resource.
Option 2:Selected networks, configure network security for your Azure AI services resource.
Option 3:Disabled, no networks can access this resource. You could configure private endpoint connections that will be the exclusive way to access this resource.

Depending on the option you select, you might need to provide additional information.
The first option allows all networks, including the internet, to access your resource. This option is the default setting. No extra settings are required for this option.
The second option lets you identify specific networks that can access your resource. When you select this option, the page updates to include the following required fields:

TheFirewallsection provides an optionalAddress rangefield that you can use to configure firewall settings for the resource.
The third option lets you disable network access to your resource. When you select this option, the page updates to include thePrivate endpointtable.

As an option, you can add a private endpoint for access to your resource. SelectAdd private endpoint, and complete the endpoint configuration.
Confirm the configuration and create the resource
SelectNextand configure anyTagsfor your resource, as desired.
SelectNextand configure anyTagsfor your resource, as desired.
SelectNextto move to the final stage in the process:Review + submit.
SelectNextto move to the final stage in the process:Review + submit.
Confirm your configuration settings, and selectCreate.
Confirm your configuration settings, and selectCreate.
The Azure portal displays a notification when the new resource is available. SelectGo to resource.
The Azure portal displays a notification when the new resource is available. SelectGo to resource.

Deploy a model
Before you can generate text or inference, you need to deploy a model. You can select from one of several available models in Azure AI Foundry portal.
To deploy a model, follow these steps:
Sign in toAzure AI Foundry portal.
Sign in toAzure AI Foundry portal.
Choose the subscription and the Azure OpenAI resource to work with, and selectUse resource.
Choose the subscription and the Azure OpenAI resource to work with, and selectUse resource.
UnderManagementselectDeployments.
UnderManagementselectDeployments.
SelectCreate new deploymentand configure the following fields:FieldDescriptionSelect a modelModel availability varies by region. For a list of available models per region, seeModel summary table and region availability.Deployment nameChoose a name carefully. The deployment name is used in your code to call the model by using the client libraries and the REST APIs.Deployment typeStandard,Global-Batch,Global-Standard,Provisioned-Managed. Learn more aboutdeployment type options.Advanced options(Optional)You can set optional advanced settings, as needed for your resource.- For theContent Filter, assign a content filter to your deployment.- For theTokens per Minute Rate Limit, adjust the Tokens per Minute (TPM) to set the effective rate limit for your deployment. You can modify this value at any time by using theQuotasmenu.Dynamic Quotaallows you to take advantage of more quota when extra capacity is available.
SelectCreate new deploymentand configure the following fields:
Select a model from the dropdown list.
Select a model from the dropdown list.
Enter a deployment name to identify the model.ImportantWhen you access the model via the API, you need to refer to the deployment name rather than the underlying model name in API calls, which is one of thekey differencesbetween OpenAI and Azure OpenAI. OpenAI only requires the model name. Azure OpenAI always requires deployment name, even when using the model parameter. In our docs, we often have examples where deployment names are represented as identical to model names to help indicate which model works with a particular API endpoint. Ultimately your deployment names can follow whatever naming convention is best for your use case.
Enter a deployment name to identify the model.
Important
When you access the model via the API, you need to refer to the deployment name rather than the underlying model name in API calls, which is one of thekey differencesbetween OpenAI and Azure OpenAI. OpenAI only requires the model name. Azure OpenAI always requires deployment name, even when using the model parameter. In our docs, we often have examples where deployment names are represented as identical to model names to help indicate which model works with a particular API endpoint. Ultimately your deployment names can follow whatever naming convention is best for your use case.
For your first deployment, leave theAdvanced optionsset to the defaults.
For your first deployment, leave theAdvanced optionsset to the defaults.
SelectCreate.
SelectCreate.
The deployments table shows a new entry that corresponds to your newly created model.
When the deployment completes, your model deployment status changes tosucceeded.
Prerequisites
An Azure subscription.Create one for free.
Access permissions tocreate Azure OpenAI resources and to deploy models.
The Azure CLI. For more information, seeHow to install the Azure CLI.
Sign in to the Azure CLI
Sign into the Azure CLI or selectOpen Cloudshellin the following steps.
Create an Azure resource group
To create an Azure OpenAI resource, you need an Azure resource group. When you create a new resource through the Azure CLI, you can also create a new resource group or instruct Azure to use an existing group. The following example shows how to create a new resource group namedOAIResourceGroupwith theaz group createcommand. The resource group is created in the East US location.
az group create \
--name OAIResourceGroup \
--location eastus
az group create \
--name OAIResourceGroup \
--location eastus
Create a resource
Use theaz cognitiveservices account createcommand to create an Azure OpenAI resource in the resource group. In the following example, you create a resource namedMyOpenAIResourcein theOAIResourceGroupresource group. When you try the example, update the code to use your desired values for the resource group and resource name, along with your Azure subscription ID<subscriptionID>.
az cognitiveservices account create \
--name MyOpenAIResource \
--resource-group OAIResourceGroup \
--location eastus \
--kind OpenAI \
--sku s0 \
--subscription <subscriptionID>
az cognitiveservices account create \
--name MyOpenAIResource \
--resource-group OAIResourceGroup \
--location eastus \
--kind OpenAI \
--sku s0 \
--subscription <subscriptionID>
Retrieve information about the resource
After you create the resource, you can use different commands to find useful information about your Azure OpenAI Service instance. The following examples demonstrate how to retrieve the REST API endpoint base URL and the access keys for the new resource.
Get the endpoint URL
Use theaz cognitiveservices account showcommand to retrieve the REST API endpoint base URL for the resource. In this example, we direct the command output through thejqJSON processor to locate the.properties.endpointvalue.
.properties.endpoint
When you try the example, update the code to use your values for the resource group<myResourceGroupName>and resource<myResourceName>.
az cognitiveservices account show \
--name <myResourceName> \
--resource-group  <myResourceGroupName> \
| jq -r .properties.endpoint
az cognitiveservices account show \
--name <myResourceName> \
--resource-group  <myResourceGroupName> \
| jq -r .properties.endpoint
Get the primary API key
To retrieve the access keys for the resource, use theaz cognitiveservices account keys listcommand. In this example, we direct the command output through thejqJSON processor to locate the.key1value.
.key1
When you try the example, update the code to use your values for the resource group and resource.
az cognitiveservices account keys list \
--name <myResourceName> \
--resource-group  <myResourceGroupName> \
| jq -r .key1
az cognitiveservices account keys list \
--name <myResourceName> \
--resource-group  <myResourceGroupName> \
| jq -r .key1
Deploy a model
To deploy a model, use theaz cognitiveservices account deployment createcommand. In the following example, you deploy an instance of thetext-embedding-ada-002model and give it the nameMyModel. When you try the example, update the code to use your values for the resource group and resource. You don't need to change themodel-version,model-formatorsku-capacity, andsku-namevalues.
text-embedding-ada-002
model-version
model-format
sku-capacity
sku-name
az cognitiveservices account deployment create \
--name <myResourceName> \
--resource-group  <myResourceGroupName> \
--deployment-name MyModel \
--model-name text-embedding-ada-002 \
--model-version "1"  \
--model-format OpenAI \
--sku-capacity "1" \
--sku-name "Standard"
az cognitiveservices account deployment create \
--name <myResourceName> \
--resource-group  <myResourceGroupName> \
--deployment-name MyModel \
--model-name text-embedding-ada-002 \
--model-version "1"  \
--model-format OpenAI \
--sku-capacity "1" \
--sku-name "Standard"
--sku-nameaccepts the following deployment types:Standard,GlobalBatch,GlobalStandard, andProvisionedManaged.  Learn more aboutdeployment type options.
--sku-name
Standard
GlobalBatch
GlobalStandard
ProvisionedManaged
Important
When you access the model via the API, you need to refer to the deployment name rather than the underlying model name in API calls, which is one of thekey differencesbetween OpenAI and Azure OpenAI. OpenAI only requires the model name. Azure OpenAI always requires deployment name, even when using the model parameter. In our docs, we often have examples where deployment names are represented as identical to model names to help indicate which model works with a particular API endpoint. Ultimately your deployment names can follow whatever naming convention is best for your use case.
Delete a model from your resource
You can delete any model deployed from your resource with theaz cognitiveservices account deployment deletecommand. In the following example, you delete a model namedMyModel. When you try the example, update the code to use your values for the resource group, resource, and deployed model.
az cognitiveservices account deployment delete \
--name <myResourceName> \
--resource-group  <myResourceGroupName> \
--deployment-name MyModel
az cognitiveservices account deployment delete \
--name <myResourceName> \
--resource-group  <myResourceGroupName> \
--deployment-name MyModel
Delete a resource
If you want to clean up after these exercises, you can remove your Azure OpenAI resource by deleting the resource through the Azure CLI. You can also delete the resource group. If you choose to delete the resource group, all resources contained in the group are also deleted.
To remove the resource group and its associated resources, use theaz cognitiveservices account deletecommand.
If you're not going to continue to use the resources created in these exercises, run the following command to delete your resource group. Be sure to update the example code to use your values for the resource group and resource.
az cognitiveservices account delete \
--name <myResourceName> \
--resource-group  <myResourceGroupName>
az cognitiveservices account delete \
--name <myResourceName> \
--resource-group  <myResourceGroupName>
Prerequisites
An Azure subscription.Create one for free.
Azure PowerShell. For more information, seeHow to install the Azure PowerShell.
Access permissions tocreate Azure OpenAI resources and to deploy models.
Sign in to the Azure PowerShell
Sign into Azure PowerShell or selectOpen Cloudshellin the following steps.
Create an Azure resource group
To create an Azure OpenAI resource, you need an Azure resource group. When you create a new resource through Azure PowerShell, you can also create a new resource group or instruct Azure to use an existing group. The following example shows how to create a new resource group namedOAIResourceGroupwith theNew-AzResourceGroupcommand. The resource group is created in the East US location.
New-AzResourceGroup -Name OAIResourceGroup -Location eastus
New-AzResourceGroup -Name OAIResourceGroup -Location eastus
Create a resource
Use theNew-AzCognitiveServicesAccountcommand to create an Azure OpenAI resource in the resource group. In the following example, you create a resource namedMyOpenAIResourcein theOAIResourceGroupresource group. When you try the example, update the code to use your desired values for the resource group and resource name, along with your Azure subscription ID<subscriptionID>.
New-AzCognitiveServicesAccount -ResourceGroupName OAIResourceGroup -Name MyOpenAIResource -Type OpenAI -SkuName S0 -Location eastus
New-AzCognitiveServicesAccount -ResourceGroupName OAIResourceGroup -Name MyOpenAIResource -Type OpenAI -SkuName S0 -Location eastus
Retrieve information about the resource
After you create the resource, you can use different commands to find useful information about your Azure OpenAI Service instance. The following examples demonstrate how to retrieve the REST API endpoint base URL and the access keys for the new resource.
Get the endpoint URL
Use theGet-AzCognitiveServicesAccountcommand to retrieve the REST API endpoint base URL for the resource. In this example, we direct the command output through theSelect-Objectcmdlet to locate theendpointvalue.
endpoint
When you try the example, update the code to use your values for the resource group<myResourceGroupName>and resource<myResourceName>.
<myResourceGroupName>
<myResourceName>
Get-AzCognitiveServicesAccount -ResourceGroupName OAIResourceGroup -Name MyOpenAIResource |
  Select-Object -Property endpoint
Get-AzCognitiveServicesAccount -ResourceGroupName OAIResourceGroup -Name MyOpenAIResource |
  Select-Object -Property endpoint
Get the primary API key
To retrieve the access keys for the resource, use theGet-AzCognitiveServicesAccountKeycommand. In this example, we direct the command output through theSelect-Objectcmdlet to locate theKey1value.
Key1
When you try the example, update the code to use your values for the resource group and resource.
Get-AzCognitiveServicesAccountKey -Name MyOpenAIResource -ResourceGroupName OAIResourceGroup |
  Select-Object -Property Key1
Get-AzCognitiveServicesAccountKey -Name MyOpenAIResource -ResourceGroupName OAIResourceGroup |
  Select-Object -Property Key1
Deploy a model
To deploy a model, use theNew-AzCognitiveServicesAccountDeploymentcommand. In the following example, you deploy an instance of thetext-embedding-ada-002model and give it the nameMyModel. When you try the example, update the code to use your values for the resource group and resource. You don't need to change themodel-version,model-formatorsku-capacity, andsku-namevalues.
text-embedding-ada-002
model-version
model-format
sku-capacity
sku-name
$model = New-Object -TypeName 'Microsoft.Azure.Management.CognitiveServices.Models.DeploymentModel' -Property @{
    Name = 'text-embedding-ada-002'
    Version = '2'
    Format = 'OpenAI'
}

$properties = New-Object -TypeName 'Microsoft.Azure.Management.CognitiveServices.Models.DeploymentProperties' -Property @{
    Model = $model
}

$sku = New-Object -TypeName "Microsoft.Azure.Management.CognitiveServices.Models.Sku" -Property @{
    Name = 'Standard'
    Capacity = '1'
}

New-AzCognitiveServicesAccountDeployment -ResourceGroupName OAIResourceGroup -AccountName MyOpenAIResource -Name MyModel -Properties $properties -Sku $sku
$model = New-Object -TypeName 'Microsoft.Azure.Management.CognitiveServices.Models.DeploymentModel' -Property @{
    Name = 'text-embedding-ada-002'
    Version = '2'
    Format = 'OpenAI'
}

$properties = New-Object -TypeName 'Microsoft.Azure.Management.CognitiveServices.Models.DeploymentProperties' -Property @{
    Model = $model
}

$sku = New-Object -TypeName "Microsoft.Azure.Management.CognitiveServices.Models.Sku" -Property @{
    Name = 'Standard'
    Capacity = '1'
}

New-AzCognitiveServicesAccountDeployment -ResourceGroupName OAIResourceGroup -AccountName MyOpenAIResource -Name MyModel -Properties $properties -Sku $sku
TheNameproperty of the$skuvariable accepts the following deployment types:Standard,GlobalBatch,GlobalStandard, andProvisionedManaged. Learn more aboutdeployment type options.
Name
$sku
Standard
GlobalBatch
GlobalStandard
ProvisionedManaged
Important
When you access the model via the API, you need to refer to the deployment name rather than the underlying model name in API calls, which is one of thekey differencesbetween OpenAI and Azure OpenAI. OpenAI only requires the model name. Azure OpenAI always requires deployment name, even when using the model parameter. In our docs, we often have examples where deployment names are represented as identical to model names to help indicate which model works with a particular API endpoint. Ultimately your deployment names can follow whatever naming convention is best for your use case.
Delete a model from your resource
You can delete any model deployed from your resource with theRemove-AzCognitiveServicesAccountDeploymentcommand. In the following example, you delete a model namedMyModel. When you try the example, update the code to use your values for the resource group, resource, and deployed model.
Remove-AzCognitiveServicesAccountDeployment -ResourceGroupName OAIResourceGroup -AccountName MyOpenAIResource -Name MyModel
Remove-AzCognitiveServicesAccountDeployment -ResourceGroupName OAIResourceGroup -AccountName MyOpenAIResource -Name MyModel
Delete a resource
If you want to clean up after these exercises, you can remove your Azure OpenAI resource by deleting the resource through the Azure PowerShell. You can also delete the resource group. If you choose to delete the resource group, all resources contained in the group are also deleted.
To remove the resource group and its associated resources, use theRemove-AzCognitiveServicesAccountcommand.
If you're not going to continue to use the resources created in these exercises, run the following command to delete your resource group. Be sure to update the example code to use your values for the resource group and resource.
Remove-AzCognitiveServicesAccount -Name MyOpenAIResource -ResourceGroupName OAIResourceGroup
Remove-AzCognitiveServicesAccount -Name MyOpenAIResource -ResourceGroupName OAIResourceGroup
Next steps
Get started with the Azure OpenAI security building block
Make API calls and generate text withAzure OpenAI Service quickstarts.
Learn more about theAzure OpenAI Service models.
For information on pricing visit theAzure OpenAI pricing page
Feedback
Was this page helpful?
Additional resources