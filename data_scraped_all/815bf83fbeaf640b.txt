Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Manage local accounts with AKS-managed Microsoft Entra integration
Article
2024-08-01
5 contributors
In this article
When you deploy an AKS cluster, local accounts are enabled by default. Even when you enable RBAC or Microsoft Entra integration,--adminaccess still exists as a non-auditable backdoor option. This article shows you how to disable local accounts on an existing cluster, create a new cluster with local accounts disabled, and re-enable local accounts on existing clusters.
--admin
Before you begin
SeeAKS-managed Microsoft Entra integrationfor an overview and setup instructions.
Disable local accounts
You can disable local accounts using the parameterdisable-local-accounts. Theproperties.disableLocalAccountsfield has been added to the managed cluster API to indicate whether the feature is enabled or not on the cluster.
disable-local-accounts
properties.disableLocalAccounts
Note
On clusters with Microsoft Entra integration enabled, users assigned to a Microsoft Entra administrators group specified byaad-admin-group-object-idscan still gain access using non-administrator credentials. On clusters without Microsoft Entra integration enabled andproperties.disableLocalAccountsset totrue, any attempt to authenticate with user or admin credentials will fail.
On clusters with Microsoft Entra integration enabled, users assigned to a Microsoft Entra administrators group specified byaad-admin-group-object-idscan still gain access using non-administrator credentials. On clusters without Microsoft Entra integration enabled andproperties.disableLocalAccountsset totrue, any attempt to authenticate with user or admin credentials will fail.
aad-admin-group-object-ids
properties.disableLocalAccounts
true
After disabling local user accounts on an existing AKS cluster where users might have authenticated with local accounts, the administrator mustrotate the cluster certificatesto revoke certificates they might have had access to. If this is a new cluster, no action is required.
After disabling local user accounts on an existing AKS cluster where users might have authenticated with local accounts, the administrator mustrotate the cluster certificatesto revoke certificates they might have had access to. If this is a new cluster, no action is required.
Create a new cluster without local accounts
Create a new AKS cluster without any local accounts using theaz aks createcommand with thedisable-local-accountsflag.az aks create \
    --resource-group <resource-group> \
    --name <cluster-name> \
    --enable-aad \
    --aad-admin-group-object-ids <aad-group-id> \
    --disable-local-accounts \
    --generate-ssh-keys
Create a new AKS cluster without any local accounts using theaz aks createcommand with thedisable-local-accountsflag.
az aks create
disable-local-accounts
az aks create \
    --resource-group <resource-group> \
    --name <cluster-name> \
    --enable-aad \
    --aad-admin-group-object-ids <aad-group-id> \
    --disable-local-accounts \
    --generate-ssh-keys
az aks create \
    --resource-group <resource-group> \
    --name <cluster-name> \
    --enable-aad \
    --aad-admin-group-object-ids <aad-group-id> \
    --disable-local-accounts \
    --generate-ssh-keys
In the output, confirm local accounts are disabled by checking that the fieldproperties.disableLocalAccountsis set totrue."properties": {
    ...
    "disableLocalAccounts": true,
    ...
}
In the output, confirm local accounts are disabled by checking that the fieldproperties.disableLocalAccountsis set totrue.
properties.disableLocalAccounts
true
"properties": {
    ...
    "disableLocalAccounts": true,
    ...
}
"properties": {
    ...
    "disableLocalAccounts": true,
    ...
}
Run theaz aks get-credentialscommand to ensure the cluster is set to disable local accounts.az aks get-credentials --resource-group <resource-group> --name <cluster-name> --adminYour output should show the following error message indicating the feature is preventing access:Operation failed with status: 'Bad Request'. Details: Getting static credential isn't allowed because this cluster is set to disable local accounts.
Run theaz aks get-credentialscommand to ensure the cluster is set to disable local accounts.
az aks get-credentials
az aks get-credentials --resource-group <resource-group> --name <cluster-name> --admin
az aks get-credentials --resource-group <resource-group> --name <cluster-name> --admin
Your output should show the following error message indicating the feature is preventing access:
Operation failed with status: 'Bad Request'. Details: Getting static credential isn't allowed because this cluster is set to disable local accounts.
Operation failed with status: 'Bad Request'. Details: Getting static credential isn't allowed because this cluster is set to disable local accounts.
Disable local accounts on an existing cluster
Disable local accounts on an existing Microsoft Entra integration enabled AKS cluster using theaz aks updatecommand with thedisable-local-accountsparameter.az aks update --resource-group <resource-group> --name <cluster-name> --disable-local-accounts
Disable local accounts on an existing Microsoft Entra integration enabled AKS cluster using theaz aks updatecommand with thedisable-local-accountsparameter.
az aks update
disable-local-accounts
az aks update --resource-group <resource-group> --name <cluster-name> --disable-local-accounts
az aks update --resource-group <resource-group> --name <cluster-name> --disable-local-accounts
In the output, confirm local accounts are disabled by checking that the fieldproperties.disableLocalAccountsis set totrue."properties": {
    ...
    "disableLocalAccounts": true,
    ...
}
In the output, confirm local accounts are disabled by checking that the fieldproperties.disableLocalAccountsis set totrue.
properties.disableLocalAccounts
true
"properties": {
    ...
    "disableLocalAccounts": true,
    ...
}
"properties": {
    ...
    "disableLocalAccounts": true,
    ...
}
Run theaz aks get-credentialscommand to ensure the cluster is set to disable local accounts.az aks get-credentials --resource-group <resource-group> --name <cluster-name> --adminYour output should show the following error message indicating the feature is preventing access:Operation failed with status: 'Bad Request'. Details: Getting static credential isn't allowed because this cluster is set to disable local accounts.
Run theaz aks get-credentialscommand to ensure the cluster is set to disable local accounts.
az aks get-credentials
az aks get-credentials --resource-group <resource-group> --name <cluster-name> --admin
az aks get-credentials --resource-group <resource-group> --name <cluster-name> --admin
Your output should show the following error message indicating the feature is preventing access:
Operation failed with status: 'Bad Request'. Details: Getting static credential isn't allowed because this cluster is set to disable local accounts.
Operation failed with status: 'Bad Request'. Details: Getting static credential isn't allowed because this cluster is set to disable local accounts.
Re-enable local accounts on an existing cluster
Re-enable a disabled local account on an existing cluster using theaz aks updatecommand with theenable-local-accountsparameter.az aks update --resource-group <resource-group> --name <cluster-name> --enable-local-accounts
Re-enable a disabled local account on an existing cluster using theaz aks updatecommand with theenable-local-accountsparameter.
az aks update
enable-local-accounts
az aks update --resource-group <resource-group> --name <cluster-name> --enable-local-accounts
az aks update --resource-group <resource-group> --name <cluster-name> --enable-local-accounts
In the output, confirm local accounts are re-enabled by checking that the fieldproperties.disableLocalAccountsis set tofalse."properties": {
    ...
    "disableLocalAccounts": false,
    ...
}
In the output, confirm local accounts are re-enabled by checking that the fieldproperties.disableLocalAccountsis set tofalse.
properties.disableLocalAccounts
false
"properties": {
    ...
    "disableLocalAccounts": false,
    ...
}
"properties": {
    ...
    "disableLocalAccounts": false,
    ...
}
Run theaz aks get-credentialscommand to ensure the cluster is set to enable local accounts.az aks get-credentials --resource-group <resource-group> --name <cluster-name> --adminYour output should show the following message indicating you have successfully enabled local accounts on the cluster:Merged "<cluster-name>-admin" as current context in C:\Users\<username>\.kube\config
Run theaz aks get-credentialscommand to ensure the cluster is set to enable local accounts.
az aks get-credentials
az aks get-credentials --resource-group <resource-group> --name <cluster-name> --admin
az aks get-credentials --resource-group <resource-group> --name <cluster-name> --admin
Your output should show the following message indicating you have successfully enabled local accounts on the cluster:
Merged "<cluster-name>-admin" as current context in C:\Users\<username>\.kube\config
Merged "<cluster-name>-admin" as current context in C:\Users\<username>\.kube\config
Next steps
Learn aboutAzure RBAC integration for Kubernetes Authorization.
Azure Kubernetes Service

Additional resources