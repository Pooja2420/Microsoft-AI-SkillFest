Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Connect to Log Analytics or Application Insights from workflows in Azure Logic Apps
Article
2025-04-15
4 contributors
In this article
Applies to:Azure Logic Apps (Consumption + Standard)
Note
The Azure Monitor Logs connector replaces theAzure Log Analytics connectorand theAzure Application Insights connector. This connector provides
the same functionality as the other connectors and is the preferred method for running a query against a
Log Analytics workspace or an Application Insights resource. For example, when you connect to your Application
Insights resource, you don't have to create or provide an application ID and API key. Authentication is
integrated with Microsoft Entra ID.
To build workflows in Azure Logic Apps that retrieve data from a Log Analytics workspace or an Application Insights resource in Azure Monitor, you can use the Azure Monitor Logs connector.
For example, you can create a logic app workflow that sends Azure Monitor log data in an email message from your Office 365 Outlook account, create a bug in Azure DevOps, or post a Slack message. This connector provides only actions, so to start a workflow, you can use a Recurrence trigger to specify a simple schedule or any trigger from another service.
This guide describes how to build a logic app workflow that sends the results of an Azure Monitor log query by email.
Connector technical reference
For technical information about this connector's operations, see theconnector's reference documentation.
Both of the following actions can run a log query against a Log Analytics workspace or Application Insights resource. The difference exists in the way that data is returned.
Limitations
The connector has the following limits, which your workflow might reach, based on the query that you use and the size of the results:LimitValueNotesMax query response size~16.7 MB or 16 MiBThe connector infrastructure dictates that the size limit is set lower than the query API limit.Max number of records500,000 recordsMax connector timeout110 secondsMax query timeout100 secondsTo avoid reaching these limits, try aggregating data to reduce the results size, or adjusting the workflow recurrence to run more frequently across a smaller time range.
The connector has the following limits, which your workflow might reach, based on the query that you use and the size of the results:
To avoid reaching these limits, try aggregating data to reduce the results size, or adjusting the workflow recurrence to run more frequently across a smaller time range.
Visualizations on the Logs page and the connector use different charting libraries. So, the connector currently doesn't include some functionality.
Visualizations on the Logs page and the connector use different charting libraries. So, the connector currently doesn't include some functionality.
Prerequisites
An Azure account and subscription. If you don't have an Azure subscription,sign up for a free Azure account.
An Azure account and subscription. If you don't have an Azure subscription,sign up for a free Azure account.
TheLog Analytics workspaceorApplication Insights resourcethat you want to connect.
TheLog Analytics workspaceorApplication Insights resourcethat you want to connect.
TheStandard or Consumption logic app workflowfrom where you want to access your Log Analytics workspace or Application Insights resource. To use an Azure Monitor Logs action, start your workflow with any trigger. This guide uses theRecurrencetrigger.
TheStandard or Consumption logic app workflowfrom where you want to access your Log Analytics workspace or Application Insights resource. To use an Azure Monitor Logs action, start your workflow with any trigger. This guide uses theRecurrencetrigger.
An Office 365 Outlook account to complete the example in this guide. Otherwise, you can use any email provider that has an available connector in Azure Logic Apps.
An Office 365 Outlook account to complete the example in this guide. Otherwise, you can use any email provider that has an available connector in Azure Logic Apps.
Add an Azure Monitor Logs action
Standard
Consumption
In theAzure portal, open your Standard logic app and workflow in the designer.
In theAzure portal, open your Standard logic app and workflow in the designer.
In your workflow where you want to add the Azure Monitor Logs action,follow these general steps to add an Azure Monitor Logs action.This example continues with the action namedRun query and visualize results.
In your workflow where you want to add the Azure Monitor Logs action,follow these general steps to add an Azure Monitor Logs action.
This example continues with the action namedRun query and visualize results.
In the connection information pane, provide the following information:PropertyDescriptionConnection NameA name for the connectionAuthentication TypeThe authentication type to use for the connection. For more information, seeAdd authentication to outbound calls.Tenant IDYour Microsoft Entra tenant.Note: The account associated with the current connection is used later to send the email.
In the connection information pane, provide the following information:
When you're done, selectSign inorCreate New, based on the selected authentication type.
When you're done, selectSign inorCreate New, based on the selected authentication type.
In theRun query and visualize resultsaction box, provide the following information:PropertyRequiredValueDescriptionSubscriptionYes<Azure-subscription>The Azure subscription for your Log Analytics workspace or Application Insights application.Resource GroupYes<Azure-resource-group>The Azure resource group for your Log Analytics workspace or Application Insights application.Resource TypeYesLog Analytics WorkspaceorApplication InsightsThe resource type to connect from your workflow. This example continues by selectingLog Analytics Workspace.Resource NameYes<Azure-resource-name>The name for your Log Analytics workspace or Application Insights resource.
In theRun query and visualize resultsaction box, provide the following information:
In theQuerybox, enter the following Kusto query to retrieve the specified log data from the following sources:NoteWhen you create your own queries, make sure they work correctly in Log Analytics before you add them to your Azure Monitor Logs action.Log Analytics workspaceThe following example query selects errors that occurred within the last day, reports their total number, and sorts them in ascending order.Event
| where EventLevelName == "Error" 
| where TimeGenerated > ago(1day)
| summarize TotalErrors=count() by Computer
| sort by Computer ascApplication Insights resourceThe following example query selects the failed requests within the last day and correlates them with exceptions that occurred as part of the operation, based on theoperation_Ididentifier. The query then segments the results by using theautocluster()algorithm.requests
| where timestamp > ago(1d)
| where success == "False"
| project name, operation_Id
| join ( exceptions
    | project problemId, outerMessage, operation_Id
) on operation_Id
| evaluate autocluster()
In theQuerybox, enter the following Kusto query to retrieve the specified log data from the following sources:
Note
When you create your own queries, make sure they work correctly in Log Analytics before you add them to your Azure Monitor Logs action.
Log Analytics workspaceThe following example query selects errors that occurred within the last day, reports their total number, and sorts them in ascending order.Event
| where EventLevelName == "Error" 
| where TimeGenerated > ago(1day)
| summarize TotalErrors=count() by Computer
| sort by Computer asc
Log Analytics workspace
The following example query selects errors that occurred within the last day, reports their total number, and sorts them in ascending order.
Event
| where EventLevelName == "Error" 
| where TimeGenerated > ago(1day)
| summarize TotalErrors=count() by Computer
| sort by Computer asc
Event
| where EventLevelName == "Error" 
| where TimeGenerated > ago(1day)
| summarize TotalErrors=count() by Computer
| sort by Computer asc
Application Insights resourceThe following example query selects the failed requests within the last day and correlates them with exceptions that occurred as part of the operation, based on theoperation_Ididentifier. The query then segments the results by using theautocluster()algorithm.requests
| where timestamp > ago(1d)
| where success == "False"
| project name, operation_Id
| join ( exceptions
    | project problemId, outerMessage, operation_Id
) on operation_Id
| evaluate autocluster()
Application Insights resource
The following example query selects the failed requests within the last day and correlates them with exceptions that occurred as part of the operation, based on theoperation_Ididentifier. The query then segments the results by using theautocluster()algorithm.
operation_Id
autocluster()
requests
| where timestamp > ago(1d)
| where success == "False"
| project name, operation_Id
| join ( exceptions
    | project problemId, outerMessage, operation_Id
) on operation_Id
| evaluate autocluster()
requests
| where timestamp > ago(1d)
| where success == "False"
| project name, operation_Id
| join ( exceptions
    | project problemId, outerMessage, operation_Id
) on operation_Id
| evaluate autocluster()
ForTime Range, selectSet in query.The following table describes the options forTime Range:Time RangeDescriptionExactDynamically provide the start time and end time.RelativeSet the relative value such as the last hour, last 12 hours, and so on.Set in queryApplies when theTimeGeneratedfilter is included in query.
ForTime Range, selectSet in query.
The following table describes the options forTime Range:
ForChart Type, selectHtml Table.
ForChart Type, selectHtml Table.
Save your workflow. On the designer toolbar, selectSave.
Save your workflow. On the designer toolbar, selectSave.
In theAzure portal, open your Consumption logic app and workflow in the designer.
In theAzure portal, open your Consumption logic app and workflow in the designer.
In your workflow where you want to add the Azure Monitor Logs action,follow these general steps to add an Azure Monitor Logs action.This example continues with the action namedRun query and visualize results.
In your workflow where you want to add the Azure Monitor Logs action,follow these general steps to add an Azure Monitor Logs action.
This example continues with the action namedRun query and visualize results.
In the connection information pane, provide the following information:PropertyDescriptionConnection NameA name for the connectionAuthentication TypeThe authentication type to use for the connection. For more information, seeAdd authentication to outbound calls.Tenant IDYour Microsoft Entra tenant.Note: The account associated with the current connection is used later to send the email. To use a different account, after the Azure Monitor Logs action appears, selectChange connection.
In the connection information pane, provide the following information:
When you're done, selectSign inorCreate, based on the selected authentication type.
When you're done, selectSign inorCreate, based on the selected authentication type.
In theRun query and visualize resultsaction box, provide the following information:PropertyRequiredValueDescriptionSubscriptionYes<Azure-subscription>The Azure subscription for your Log Analytics workspace or Application Insights application.Resource GroupYes<Azure-resource-group>The Azure resource group for your Log Analytics workspace or Application Insights application.Resource TypeYesLog Analytics WorkspaceorApplication InsightsThe resource type to connect from your workflow. This example continues by selectingLog Analytics Workspace.Resource NameYes<Azure-resource-name>The name for your Log Analytics workspace or Application Insights resource.
In theRun query and visualize resultsaction box, provide the following information:
In theQuerybox, enter the following Kusto query to retrieve the specified log data from the following sources:NoteWhen you create your own queries, make sure they work correctly in Log Analytics before you add them to your Azure Monitor Logs action.Log Analytics workspaceThe following example query selects errors that occurred within the last day, reports their total number, and sorts them in ascending order.Event
| where EventLevelName == "Error" 
| where TimeGenerated > ago(1day)
| summarize TotalErrors=count() by Computer
| sort by Computer ascApplication Insights resourceThe following example query selects the failed requests within the last day and correlates them with exceptions that occurred as part of the operation, based on theoperation_Ididentifier. The query then segments the results by using theautocluster()algorithm.requests
| where timestamp > ago(1d)
| where success == "False"
| project name, operation_Id
| join ( exceptions
    | project problemId, outerMessage, operation_Id
) on operation_Id
| evaluate autocluster()
In theQuerybox, enter the following Kusto query to retrieve the specified log data from the following sources:
Note
When you create your own queries, make sure they work correctly in Log Analytics before you add them to your Azure Monitor Logs action.
Log Analytics workspaceThe following example query selects errors that occurred within the last day, reports their total number, and sorts them in ascending order.Event
| where EventLevelName == "Error" 
| where TimeGenerated > ago(1day)
| summarize TotalErrors=count() by Computer
| sort by Computer asc
Log Analytics workspace
The following example query selects errors that occurred within the last day, reports their total number, and sorts them in ascending order.
Event
| where EventLevelName == "Error" 
| where TimeGenerated > ago(1day)
| summarize TotalErrors=count() by Computer
| sort by Computer asc
Event
| where EventLevelName == "Error" 
| where TimeGenerated > ago(1day)
| summarize TotalErrors=count() by Computer
| sort by Computer asc
Application Insights resourceThe following example query selects the failed requests within the last day and correlates them with exceptions that occurred as part of the operation, based on theoperation_Ididentifier. The query then segments the results by using theautocluster()algorithm.requests
| where timestamp > ago(1d)
| where success == "False"
| project name, operation_Id
| join ( exceptions
    | project problemId, outerMessage, operation_Id
) on operation_Id
| evaluate autocluster()
Application Insights resource
The following example query selects the failed requests within the last day and correlates them with exceptions that occurred as part of the operation, based on theoperation_Ididentifier. The query then segments the results by using theautocluster()algorithm.
operation_Id
autocluster()
requests
| where timestamp > ago(1d)
| where success == "False"
| project name, operation_Id
| join ( exceptions
    | project problemId, outerMessage, operation_Id
) on operation_Id
| evaluate autocluster()
requests
| where timestamp > ago(1d)
| where success == "False"
| project name, operation_Id
| join ( exceptions
    | project problemId, outerMessage, operation_Id
) on operation_Id
| evaluate autocluster()
ForTime Range, selectSet in query.The following table describes the options forTime Range:Time RangeDescriptionExactDynamically provide the start time and end time.RelativeSet the relative value such as the last hour, last 12 hours, and so on.Set in queryApplies when theTimeGeneratedfilter is included in query.
ForTime Range, selectSet in query.
The following table describes the options forTime Range:
ForChart Type, selectHtml Table.
ForChart Type, selectHtml Table.
Save your workflow. On the designer toolbar, selectSave.
Save your workflow. On the designer toolbar, selectSave.
Add an email action
Standard
Consumption
In your workflow where you want to add the Office 365 Outlook action,follow these general steps to add theOffice 365 Outlookaction namedSend an email (V2)
In your workflow where you want to add the Office 365 Outlook action,follow these general steps to add theOffice 365 Outlookaction namedSend an email (V2)
In theTobox, enter the recipient's email address. For this example, use your own email address.
In theTobox, enter the recipient's email address. For this example, use your own email address.
In theSubjectbox, enter a subject for the email, for example,Top daily errors or failures.
In theSubjectbox, enter a subject for the email, for example,Top daily errors or failures.
Select inside theBodybox, and then select theDynamic contentoption (lightning icon), so that you can select outputs from previous steps in the workflow.
Select inside theBodybox, and then select theDynamic contentoption (lightning icon), so that you can select outputs from previous steps in the workflow.
In the dynamic content list, underRun query and visualize results, selectBody, which represents the results of the query that you previously entered in the Log Analytics action.
In the dynamic content list, underRun query and visualize results, selectBody, which represents the results of the query that you previously entered in the Log Analytics action.
From theAdvanced parameterslist, selectAttachments.TheSend an emailaction now includes theAttachmentssection with theAttachment nameandAttachment contentproperties.
From theAdvanced parameterslist, selectAttachments.
TheSend an emailaction now includes theAttachmentssection with theAttachment nameandAttachment contentproperties.
For the added properties, follow these steps:In theAttachment namebox, open the dynamic content list. UnderRun query and visualize results, selectAttachment Name.In theAttachment contentbox, open the dynamic content list. UnderRun query and visualize results, selectAttachment Content.
For the added properties, follow these steps:
In theAttachment namebox, open the dynamic content list. UnderRun query and visualize results, selectAttachment Name.
In theAttachment namebox, open the dynamic content list. UnderRun query and visualize results, selectAttachment Name.
In theAttachment contentbox, open the dynamic content list. UnderRun query and visualize results, selectAttachment Content.
In theAttachment contentbox, open the dynamic content list. UnderRun query and visualize results, selectAttachment Content.
Save your workflow. On the designer toolbar, selectSave.
Save your workflow. On the designer toolbar, selectSave.
In your workflow where you want to add the Office 365 Outlook action,follow these general steps to add theOffice 365 Outlookaction namedSend an email (V2)
In your workflow where you want to add the Office 365 Outlook action,follow these general steps to add theOffice 365 Outlookaction namedSend an email (V2)
In theTobox, enter the recipient's email address. For this example, use your own email address.
In theTobox, enter the recipient's email address. For this example, use your own email address.
In theSubjectbox, enter a subject for the email, for example,Top daily errors or failures.
In theSubjectbox, enter a subject for the email, for example,Top daily errors or failures.
In theBodybox, click anywhere inside to open theDynamic contentlist, which shows the outputs from the previous steps in the workflow.In theDynamic contentlist, next to theRun query and visualize resultssection name, selectSee more.From the outputs list, selectBody, which represents the results of the query that you previously entered in the Log Analytics action.
In theBodybox, click anywhere inside to open theDynamic contentlist, which shows the outputs from the previous steps in the workflow.
In theDynamic contentlist, next to theRun query and visualize resultssection name, selectSee more.
In theDynamic contentlist, next to theRun query and visualize resultssection name, selectSee more.
From the outputs list, selectBody, which represents the results of the query that you previously entered in the Log Analytics action.
From the outputs list, selectBody, which represents the results of the query that you previously entered in the Log Analytics action.
From theAdd new parameterlist, selectAttachments.TheSend an emailaction now includes theAttachments NameandAttachments Contentproperties.
From theAdd new parameterlist, selectAttachments.
TheSend an emailaction now includes theAttachments NameandAttachments Contentproperties.
For the added properties, follow these steps:Select inside theAttachment Namebox, and then select the lightning icon to open the dynamic content list. UnderRun query and visualize results, selectAttachment Name.Select inside theAttachment Contentbox, and then select the lightning icon to open the dynamic content list. UnderRun query and visualize results, selectAttachment Content.
For the added properties, follow these steps:
Select inside theAttachment Namebox, and then select the lightning icon to open the dynamic content list. UnderRun query and visualize results, selectAttachment Name.
Select inside theAttachment Namebox, and then select the lightning icon to open the dynamic content list. UnderRun query and visualize results, selectAttachment Name.
Select inside theAttachment Contentbox, and then select the lightning icon to open the dynamic content list. UnderRun query and visualize results, selectAttachment Content.
Select inside theAttachment Contentbox, and then select the lightning icon to open the dynamic content list. UnderRun query and visualize results, selectAttachment Content.
Save your workflow. On the designer toolbar, selectSave.
Save your workflow. On the designer toolbar, selectSave.
Test your workflow
Standard
Consumption
On the workflow designer toolbar, selectRun>Run.
On the workflow designer toolbar, selectRun>Run.
When the workflow completes, check your email.NoteThe workflow generates an email with a JPG file that shows the query result set.
If your query doesn't return any results, the workflow won't create a JPG file.For the Log Analytics workspace example, the email that you receive has a body that looks similar to the following example:For an Application Insights resource, the email that you receive has a body that looks similar to the following example:
When the workflow completes, check your email.
Note
The workflow generates an email with a JPG file that shows the query result set.
If your query doesn't return any results, the workflow won't create a JPG file.
For the Log Analytics workspace example, the email that you receive has a body that looks similar to the following example:

For an Application Insights resource, the email that you receive has a body that looks similar to the following example:

On the workflow designer toolbar, selectRun>Run.
On the workflow designer toolbar, selectRun>Run.
When the workflow completes, check your email.NoteThe workflow generates an email with a JPG file that shows the query result set.
If your query doesn't return any results, the workflow won't create a JPG file.For the Log Analytics workspace example, the email that you receive has a body that looks similar to the following example:For an Application Insights resource, the email that you receive has a body that looks similar to the following example:
When the workflow completes, check your email.
Note
The workflow generates an email with a JPG file that shows the query result set.
If your query doesn't return any results, the workflow won't create a JPG file.
For the Log Analytics workspace example, the email that you receive has a body that looks similar to the following example:

For an Application Insights resource, the email that you receive has a body that looks similar to the following example:

Related content
Log queries in Azure Monitor
Queries for Log Analytics
Feedback
Was this page helpful?
Additional resources