Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Set up an image labeling project
Article
2024-09-24
13 contributors
In this article
Learn how to create and run data labeling projects to label images in Azure Machine Learning. Use machine learning (ML)-assisted data labeling or human-in-the-loop labeling to help with the task.
Set up labels for classification, object detection (bounding box), instance segmentation (polygon), or semantic segmentation (preview).
You can also use the data labeling tool in Azure Machine Learning tocreate a text labeling project.
Important
Items marked (preview) in this article are currently in public preview.
The preview version is provided without a service level agreement, and it's not recommended for production workloads. Certain features might not be supported or might have constrained capabilities.
For more information, seeSupplemental Terms of Use for Microsoft Azure Previews.
Image labeling capabilities
Azure Machine Learning data labeling is a tool you can use to create, manage, and monitor data labeling projects. Use it to:
Coordinate data, labels, and team members to efficiently manage the labeling tasks.
Track progress and maintain the queue of incomplete labeling tasks.
Start and stop the project, and control the labeling progress.
Review and export the labeled data as an Azure Machine Learning dataset.
Important
The data images you work with in the Azure Machine Learning data labeling tool must be available in an Azure Blob Storage datastore. If you don't have an existing datastore, you can upload your data files to a new datastore when you create a project.
Image data can be any file that has one of these file extensions:
.jpg
.jpg
.jpeg
.jpeg
.png
.png
.jpe
.jpe
.jfif
.jfif
.bmp
.bmp
.tif
.tif
.tiff
.tiff
.dcm
.dcm
.dicom
.dicom
Each file is an item to be labeled.
You can also use anMLTabledata asset as input to an image labeling project, as long as the images in the table are one of the above formats. For more information, seeHow to useMLTabledata assets.
MLTable
MLTable
Prerequisites
You use these items to set up image labeling in Azure Machine Learning:
The data that you want to label, either in local files or in Azure Blob Storage.
The set of labels that you want to apply.
The instructions for labeling.
An Azure subscription. If you don't have an Azure subscription, create afree accountbefore you begin.
An Azure Machine Learning workspace. SeeCreate an Azure Machine Learning workspace.
Create an image labeling project
Labeling projects are administered in Azure Machine Learning. Use theData Labelingpage in Machine Learning to manage your projects.
If your data is already in Azure Blob Storage, make sure that it's available as a datastore before you create the labeling project.
To create a project, selectAdd project.
To create a project, selectAdd project.
ForProject name, enter a name for the project.You can't reuse the project name, even if you delete the project.
ForProject name, enter a name for the project.
You can't reuse the project name, even if you delete the project.
To create an image labeling project, forMedia type, selectImage.
To create an image labeling project, forMedia type, selectImage.
ForLabeling task type, select an option for your scenario:To apply only asingle labelto an image from a set of labels, selectImage Classification Multi-class.To applyone or morelabels to an image from a set of labels, selectImage Classification Multi-label. For example, a photo of a dog might be labeled with bothdoganddaytime.To assign a label to each object within an image and add bounding boxes, selectObject Identification (Bounding Box).To assign a label to each object within an image and draw a polygon around each object, selectPolygon (Instance Segmentation).To draw masks on an image and assign a label class at the pixel level, selectSemantic Segmentation (Preview).
ForLabeling task type, select an option for your scenario:
To apply only asingle labelto an image from a set of labels, selectImage Classification Multi-class.
To applyone or morelabels to an image from a set of labels, selectImage Classification Multi-label. For example, a photo of a dog might be labeled with bothdoganddaytime.
To assign a label to each object within an image and add bounding boxes, selectObject Identification (Bounding Box).
To assign a label to each object within an image and draw a polygon around each object, selectPolygon (Instance Segmentation).
To draw masks on an image and assign a label class at the pixel level, selectSemantic Segmentation (Preview).

SelectNextto continue.
SelectNextto continue.
Add workforce (optional)
SelectUse a vendor labeling company from Azure Marketplaceonly if you've engaged a data labeling company fromAzure Marketplace. Then select the vendor. If your vendor doesn't appear in the list, clear this option.
Make sure that you first contact the vendor and sign a contract. For more information, seeWork with a data labeling vendor company (preview).
SelectNextto continue.
Specify the data to label
If you already created a dataset that contains your data, select the dataset in theSelect an existing datasetdropdown.
You can also selectCreate a datasetto use an existing Azure datastore or to upload local files.
Note
A project can't contain more than 500,000 files. If your dataset exceeds this file count, only the first 500,000 files are loaded.
Data column mapping (preview)
If you select an MLTable data asset, anotherData Column Mappingstep appears for you to specify the column that contains the image URLs.
You must specify a column that maps to theImagefield. You can also optionally map other columns that are present in the data. For example, if your data contains aLabelcolumn, you can map it to theCategoryfield. If your data contains aConfidencecolumn, you can map it to theConfidencefield.
If you're importing labels from a previous project, the labels must be in the same format as the labels you're creating. For example, if you're creating bounding box labels, the labels you import must also be bounding box labels.
Import options (preview)
When you include aCategorycolumn in theData Column Mappingstep, useImport Optionsto specify how to treat the labeled data.
You must specify a column that maps to theImagefield. You can also optionally map other columns that are present in the data. For example, if your data contains aLabelcolumn, you can map it to theCategoryfield. If your data contains aConfidencecolumn, you can map it to theConfidencefield.
If you're importing labels from a previous project, the labels must be in the same format as the labels you're creating. For example, if you're creating bounding box labels, the labels you import must also be bounding box labels.
Create a dataset from an Azure datastore
In many cases, you can upload local files. However,Azure Storage Explorerprovides a faster and more robust way to transfer a large amount of data. We recommend Storage Explorer as the default way to move files.
To create a dataset from data that's already stored in Blob Storage:
SelectCreate.
ForName, enter a name for your dataset. Optionally, enter a description.
Ensure thatDataset typeis set toFile. Only file dataset types are supported for images.
SelectNext.
SelectFrom Azure storage, and then selectNext.
Select the datastore, and then selectNext.
If your data is in a subfolder within Blob Storage, chooseBrowseto select the path.To include all the files in the subfolders of the selected path, append/**to the path.To include all the data in the current container and its subfolders, append**/*.*to the path.
To include all the files in the subfolders of the selected path, append/**to the path.
/**
To include all the data in the current container and its subfolders, append**/*.*to the path.
**/*.*
SelectCreate.
Select the data asset you created.
Create a dataset from uploaded data
To directly upload your data:
SelectCreate.
ForName, enter a name for your dataset. Optionally, enter a description.
Ensure thatDataset typeis set toFile. Only file dataset types are supported for images.
SelectNext.
SelectFrom local files, and then selectNext.
(Optional) Select a datastore. You can also leave the default to upload to the default blob store (workspaceblobstore) for your Machine Learning workspace.
SelectNext.
SelectUpload>Upload filesorUpload>Upload folderto select the local files or folders to upload.
In the browser window, find your files or folders, and then selectOpen.
Continue to selectUploaduntil you specify all your files and folders.
Optionally, you can choose to select theOverwrite if already existscheckbox. Verify the list of files and folders.
SelectNext.
Confirm the details. SelectBackto modify the settings or selectCreateto create the dataset.
Finally, select the data asset you created.
Configure incremental refresh
If you plan to add new data files to your dataset, use incremental refresh to add the files to your project.
WhenEnable incremental refresh at regular intervalsis set, the dataset is checked periodically for new files to be added to a project based on the labeling completion rate. The check for new data stops when the project contains the maximum 500,000 files.
SelectEnable incremental refresh at regular intervalswhen you want your project to continually monitor for new data in the datastore.
Clear the selection if you don't want new files in the datastore to automatically be added to your project.
Important
When incremental refresh is enabled, don't create a new version for the dataset you want to update. If you do, the updates won't be seen because the data labeling project is pinned to the initial version. Instead, useAzure Storage Explorerto modify your data in the appropriate folder in Blob Storage.
Also, don't remove data. Removing data from the dataset your project uses causes an error in the project.
After the project is created, use theDetailstab to change incremental refresh, view the time stamp for the last refresh, and request an immediate refresh of data.
Specify label classes
On theLabel categoriespage, specify a set of classes to categorize your data.
Your labelers' accuracy and speed are affected by their ability to choose among classes. For instance, instead of spelling out the full genus and species for plants or animals, use a field code or abbreviate the genus.
You can use either a flat list or create groups of labels.
To create a flat list, selectAdd label categoryto create each label.
To create a flat list, selectAdd label categoryto create each label.

To create labels in different groups, selectAdd label categoryto create the top-level labels. Then select the plus sign (+) under each top level to create the next level of labels for that category. You can create up to six levels for any grouping.
To create labels in different groups, selectAdd label categoryto create the top-level labels. Then select the plus sign (+) under each top level to create the next level of labels for that category. You can create up to six levels for any grouping.

You can select labels at any level during the tagging process. For example, the labelsAnimal,Animal/Cat,Animal/Dog,Color,Color/Black,Color/White, andColor/Silverare all available choices for a label. In a multi-label project, there's no requirement to pick one of each category. If that is your intent, make sure to include this information in your instructions.
Animal
Animal/Cat
Animal/Dog
Color
Color/Black
Color/White
Color/Silver
Describe the image labeling task
It's important to clearly explain the labeling task. On theLabeling instructionspage, you can add a link to an external site that has labeling instructions, or you can provide instructions in the edit box on the page. Keep the instructions task-oriented and appropriate to the audience. Consider these questions:
What are the labels labelers will see, and how will they choose among them? Is there a reference text to refer to?
What should they do if no label seems appropriate?
What should they do if multiple labels seem appropriate?
What confidence threshold should they apply to a label? Do you want the labeler's best guess if they aren't certain?
What should they do with partially occluded or overlapping objects of interest?
What should they do if an object of interest is clipped by the edge of the image?
What should they do if they think they made a mistake after they submit a label?
What should they do if they discover image quality issues, including poor lighting conditions, reflections, loss of focus, undesired background included, abnormal camera angles, and so on?
What should they do if multiple reviewers have different opinions about applying a label?
For bounding boxes, important questions include:
How is the bounding box defined for this task? Should it stay entirely on the interior of the object or should it be on the exterior? Should it be cropped as closely as possible, or is some clearance acceptable?
What level of care and consistency do you expect the labelers to apply in defining bounding boxes?
What is the visual definition of each label class? Can you provide a list of normal, edge, and counter cases for each class?
What should the labelers do if the object is tiny? Should it be labeled as an object or should they ignore that object as background?
How should labelers handle an object that's only partially shown in the image?
How should labelers handle an object that's partially covered by another object?
How should labelers handle an object that has no clear boundary?
How should labelers handle an object that isn't the object class of interest but has visual similarities to a relevant object type?
Note
Labelers can select the first nine labels by using number keys 1 through 9. You might want to include this information in your instructions.
Quality control (preview)
To get more accurate labels, use theQuality controlpage to send each item to multiple labelers.
Important
Consensus labeling is currently in public preview.
The preview version is provided without a service level agreement, and it's not recommended for production workloads. Certain features might not be supported or might have constrained capabilities.
For more information, seeSupplemental Terms of Use for Microsoft Azure Previews.
To have each item sent to multiple labelers, selectEnable consensus labeling (preview). Then set values forMinimum labelersandMaximum labelersto specify how many labelers to use.  Make sure that you have as many labelers available as your maximum number. Youcan'tchange these settings after the project has started.
If a consensus is reached from the minimum number of labelers, the item is labeled. If a consensus isn't reached, the item is sent to more labelers. If there's no consensus after the item goes to the maximum number of labelers, its status isNeeds Review, and the project owner is responsible for labeling the item.
Note
Instance Segmentationprojects can't use consensus labeling.
Use ML-assisted data labeling
To accelerate labeling tasks, on theML assisted labelingpage, you can trigger automatic machine learning models. Medical images (files that have a.dcmextension) aren't included in assisted labeling. If the project type isSemantic Segmentation (Preview), ML-assisted labeling isn't available.
.dcm
At the start of your labeling project, the items are shuffled into a random order to reduce potential bias. However, the trained model reflects any biases that are present in the dataset. For example, if 80 percent of your items are of a single class, then approximately 80 percent of the data used to train the model lands in that class.
To enable assisted labeling, selectEnable ML assisted labelingand specify a GPU. If you don't have a GPU in your workspace, a GPU cluster (resource name: DefLabelNC6v3, vmsize: Standard_NC6s_v3) is created for you and added to your workspace. The cluster is created with a minimum of zero nodes, which means it costs nothing when not in use.
ML-assisted labeling consists of two phases:
Clustering
Prelabeling
The labeled data item count that's needed to start assisted labeling isn't a fixed number. This number can vary significantly from one labeling project to another. For some projects, it's sometimes possible to see prelabel or cluster tasks after 300 items are manually labeled. ML-assisted labeling uses a technique calledtransfer learning. Transfer learning uses a pretrained model to jump-start the training process. If the classes of your dataset resemble the classes in the pretrained model, prelabels might become available after only a few hundred manually labeled items. If your dataset significantly differs from the data that's used to pretrain the model, the process might take more time.
When you use consensus labeling, the consensus label is used for training.
Because the final labels still rely on input from the labeler, this technology is sometimes calledhuman-in-the-looplabeling.
Note
ML-assisted data labeling doesn't support default storage accounts that are secured behind avirtual network. You must use a non-default storage account for ML-assisted data labeling. The non-default storage account can be secured behind the virtual network.
Clustering
After you submit some labels, the classification model starts to group together similar items. These similar images are presented to labelers on the same page to help make manual tagging more efficient. Clustering is especially useful when a labeler views a grid of four, six, or nine images.
After a machine learning model is trained on your manually labeled data, the model is truncated to its last fully connected layer. Unlabeled images are then passed through the truncated model in a process calledembeddingorfeaturization. This process embeds each image in a high-dimensional space that the model layer defines. Other images in the space that are nearest the image are used for clustering tasks.
The clustering phase doesn't appear for object detection models or text classification.
Prelabeling
After you submit enough labels for training, either a classification model predicts tags, or an object detection model predicts bounding boxes. The labeler now sees pages that contain predicted labels already present on each item. For object detection, predicted boxes are also shown. The task involves reviewing these predictions and correcting any incorrectly labeled images before page submission.
After a machine learning model is trained on your manually labeled data, the model is evaluated on a test set of manually labeled items. The evaluation helps determine the model's accuracy at different confidence thresholds. The evaluation process sets a confidence threshold beyond which the model is accurate enough to show prelabels. The model is then evaluated against unlabeled data. Items with predictions that are more confident than the threshold are used for prelabeling.
Initialize the image labeling project
After the labeling project is initialized, some aspects of the  project are immutable. You can't change the task type or dataset. Youcanmodify labels and the URL for the task description. Carefully review the settings before you create the project. After you submit the project, you return to theData Labelingoverview page, which shows the project asInitializing.
Note
The overview page might not automatically refresh. After a pause, manually refresh the page to see the project's status asCreated.
Troubleshooting
For problems creating a project or accessing data, seeTroubleshoot data labeling.
Related content
Manage labeling projects
How to tag images
Feedback
Was this page helpful?
Additional resources