Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Tutorial: Create an Azure custom role using Azure PowerShell
Article
2023-12-01
6 contributors
In this article
If theAzure built-in rolesdon't meet the specific needs of your organization, you can create your own custom roles. For this tutorial, you create a custom role named Reader Support Tickets using Azure PowerShell. The custom role allows the user to view everything in the control plane of a subscription and also open support tickets.
In this tutorial, you learn how to:
Create a custom role
List custom roles
Update a custom role
Delete a custom role
If you don't have an Azure subscription, create afree accountbefore you begin.
Note
We recommend that you use the Azure Az PowerShell module to interact with Azure. To get started, seeInstall Azure PowerShell. To learn how to migrate to the Az PowerShell module, seeMigrate Azure PowerShell from AzureRM to Az.
Prerequisites
To complete this tutorial, you will need:
Permissions to create custom roles, such asUser Access Administrator
Azure Cloud ShellorAzure PowerShell
Sign in to Azure PowerShell
Sign in toAzure PowerShell.
Create a custom role
The easiest way to create a custom role is to start with a built-in role, edit it, and then create a new role.
In PowerShell, use theGet-AzProviderOperationcommand to get the list of operations for the Microsoft.Support resource provider. It's helpful to know the operations that are available to create your permissions. You can also see a list of all the operations atAzure resource provider operations.Get-AzProviderOperation "Microsoft.Support/*" | FT Operation, Description -AutoSizeOperation                              Description
---------                              -----------
Microsoft.Support/register/action      Registers to Support Resource Provider
Microsoft.Support/supportTickets/read  Gets Support Ticket details (including status, severity, contact ...
Microsoft.Support/supportTickets/write Creates or Updates a Support Ticket. You can create a Support Tic...
In PowerShell, use theGet-AzProviderOperationcommand to get the list of operations for the Microsoft.Support resource provider. It's helpful to know the operations that are available to create your permissions. You can also see a list of all the operations atAzure resource provider operations.
Get-AzProviderOperation "Microsoft.Support/*" | FT Operation, Description -AutoSize
Get-AzProviderOperation "Microsoft.Support/*" | FT Operation, Description -AutoSize
Operation                              Description
---------                              -----------
Microsoft.Support/register/action      Registers to Support Resource Provider
Microsoft.Support/supportTickets/read  Gets Support Ticket details (including status, severity, contact ...
Microsoft.Support/supportTickets/write Creates or Updates a Support Ticket. You can create a Support Tic...
Operation                              Description
---------                              -----------
Microsoft.Support/register/action      Registers to Support Resource Provider
Microsoft.Support/supportTickets/read  Gets Support Ticket details (including status, severity, contact ...
Microsoft.Support/supportTickets/write Creates or Updates a Support Ticket. You can create a Support Tic...
Use theGet-AzRoleDefinitioncommand to output theReaderrole in JSON format.Get-AzRoleDefinition -Name "Reader" | ConvertTo-Json | Out-File C:\CustomRoles\ReaderSupportRole.json
Use theGet-AzRoleDefinitioncommand to output theReaderrole in JSON format.
Get-AzRoleDefinition -Name "Reader" | ConvertTo-Json | Out-File C:\CustomRoles\ReaderSupportRole.json
Get-AzRoleDefinition -Name "Reader" | ConvertTo-Json | Out-File C:\CustomRoles\ReaderSupportRole.json
Open theReaderSupportRole.jsonfile in an editor.The following shows the JSON output. For information about the different properties, seeAzure custom roles.{
  "Name": "Reader",
  "Id": "acdd72a7-3385-48ef-bd42-f606fba81ae7",
  "IsCustom": false,
  "Description": "Lets you view everything, but not make any changes.",
  "Actions": [
    "*/read"
  ],
  "NotActions": [],
  "DataActions": [],
  "NotDataActions": [],
  "AssignableScopes": [
    "/"
  ]
}
Open theReaderSupportRole.jsonfile in an editor.
The following shows the JSON output. For information about the different properties, seeAzure custom roles.
{
  "Name": "Reader",
  "Id": "acdd72a7-3385-48ef-bd42-f606fba81ae7",
  "IsCustom": false,
  "Description": "Lets you view everything, but not make any changes.",
  "Actions": [
    "*/read"
  ],
  "NotActions": [],
  "DataActions": [],
  "NotDataActions": [],
  "AssignableScopes": [
    "/"
  ]
}
{
  "Name": "Reader",
  "Id": "acdd72a7-3385-48ef-bd42-f606fba81ae7",
  "IsCustom": false,
  "Description": "Lets you view everything, but not make any changes.",
  "Actions": [
    "*/read"
  ],
  "NotActions": [],
  "DataActions": [],
  "NotDataActions": [],
  "AssignableScopes": [
    "/"
  ]
}
Edit the JSON file to add the"Microsoft.Support/*"action to theActionsproperty. Be sure to include a comma after the read action. This action will allow the user to create support tickets.
Edit the JSON file to add the"Microsoft.Support/*"action to theActionsproperty. Be sure to include a comma after the read action. This action will allow the user to create support tickets.
"Microsoft.Support/*"
Actions
Get the ID of your subscription using theGet-AzSubscriptioncommand.Get-AzSubscription
Get the ID of your subscription using theGet-AzSubscriptioncommand.
Get-AzSubscription
Get-AzSubscription
InAssignableScopes, add your subscription ID with the following format:"/subscriptions/00000000-0000-0000-0000-000000000000"You must add explicit subscription IDs, otherwise you won't be allowed to import the role into your subscription.
InAssignableScopes, add your subscription ID with the following format:"/subscriptions/00000000-0000-0000-0000-000000000000"
AssignableScopes
"/subscriptions/00000000-0000-0000-0000-000000000000"
You must add explicit subscription IDs, otherwise you won't be allowed to import the role into your subscription.
Delete theIdproperty line and change theIsCustomproperty totrue.
Delete theIdproperty line and change theIsCustomproperty totrue.
Id
IsCustom
true
Change theNameandDescriptionproperties to "Reader Support Tickets" and "View everything in the subscription and also open support tickets."Your JSON file should look like the following:{
  "Name": "Reader Support Tickets",
  "IsCustom": true,
  "Description": "View everything in the subscription and also open support tickets.",
  "Actions": [
    "*/read",
    "Microsoft.Support/*"
  ],
  "NotActions": [],
  "DataActions": [],
  "NotDataActions": [],
  "AssignableScopes": [
    "/subscriptions/00000000-0000-0000-0000-000000000000"
  ]
}
Change theNameandDescriptionproperties to "Reader Support Tickets" and "View everything in the subscription and also open support tickets."
Name
Description
Your JSON file should look like the following:
{
  "Name": "Reader Support Tickets",
  "IsCustom": true,
  "Description": "View everything in the subscription and also open support tickets.",
  "Actions": [
    "*/read",
    "Microsoft.Support/*"
  ],
  "NotActions": [],
  "DataActions": [],
  "NotDataActions": [],
  "AssignableScopes": [
    "/subscriptions/00000000-0000-0000-0000-000000000000"
  ]
}
{
  "Name": "Reader Support Tickets",
  "IsCustom": true,
  "Description": "View everything in the subscription and also open support tickets.",
  "Actions": [
    "*/read",
    "Microsoft.Support/*"
  ],
  "NotActions": [],
  "DataActions": [],
  "NotDataActions": [],
  "AssignableScopes": [
    "/subscriptions/00000000-0000-0000-0000-000000000000"
  ]
}
To create the new custom role, use theNew-AzRoleDefinitioncommand and specify the JSON role definition file.New-AzRoleDefinition -InputFile "C:\CustomRoles\ReaderSupportRole.json"Name             : Reader Support Tickets
Id               : 22222222-2222-2222-2222-222222222222
IsCustom         : True
Description      : View everything in the subscription and also open support tickets.
Actions          : {*/read, Microsoft.Support/*}
NotActions       : {}
DataActions      : {}
NotDataActions   : {}
AssignableScopes : {/subscriptions/00000000-0000-0000-0000-000000000000}The new custom role is now available in the Azure portal and can be assigned to users, groups, or service principals just like built-in roles.
To create the new custom role, use theNew-AzRoleDefinitioncommand and specify the JSON role definition file.
New-AzRoleDefinition -InputFile "C:\CustomRoles\ReaderSupportRole.json"
New-AzRoleDefinition -InputFile "C:\CustomRoles\ReaderSupportRole.json"
Name             : Reader Support Tickets
Id               : 22222222-2222-2222-2222-222222222222
IsCustom         : True
Description      : View everything in the subscription and also open support tickets.
Actions          : {*/read, Microsoft.Support/*}
NotActions       : {}
DataActions      : {}
NotDataActions   : {}
AssignableScopes : {/subscriptions/00000000-0000-0000-0000-000000000000}
Name             : Reader Support Tickets
Id               : 22222222-2222-2222-2222-222222222222
IsCustom         : True
Description      : View everything in the subscription and also open support tickets.
Actions          : {*/read, Microsoft.Support/*}
NotActions       : {}
DataActions      : {}
NotDataActions   : {}
AssignableScopes : {/subscriptions/00000000-0000-0000-0000-000000000000}
The new custom role is now available in the Azure portal and can be assigned to users, groups, or service principals just like built-in roles.
List custom roles
To list all your custom roles, use theGet-AzRoleDefinitioncommand.Get-AzRoleDefinition | ? {$_.IsCustom -eq $true} | FT Name, IsCustomName                   IsCustom
----                   --------
Reader Support Tickets     TrueYou can also see the custom role in the Azure portal.
To list all your custom roles, use theGet-AzRoleDefinitioncommand.
Get-AzRoleDefinition | ? {$_.IsCustom -eq $true} | FT Name, IsCustom
Get-AzRoleDefinition | ? {$_.IsCustom -eq $true} | FT Name, IsCustom
Name                   IsCustom
----                   --------
Reader Support Tickets     True
Name                   IsCustom
----                   --------
Reader Support Tickets     True
You can also see the custom role in the Azure portal.

Update a custom role
To update the custom role, you can update the JSON file or use thePSRoleDefinitionobject.
PSRoleDefinition
To update the JSON file, use theGet-AzRoleDefinitioncommand to output the custom role in JSON format.Get-AzRoleDefinition -Name "Reader Support Tickets" | ConvertTo-Json | Out-File C:\CustomRoles\ReaderSupportRole2.json
To update the JSON file, use theGet-AzRoleDefinitioncommand to output the custom role in JSON format.
Get-AzRoleDefinition -Name "Reader Support Tickets" | ConvertTo-Json | Out-File C:\CustomRoles\ReaderSupportRole2.json
Get-AzRoleDefinition -Name "Reader Support Tickets" | ConvertTo-Json | Out-File C:\CustomRoles\ReaderSupportRole2.json
Open the file in an editor.
Open the file in an editor.
InActions, add the action to create and manage resource group deployments"Microsoft.Resources/deployments/*".Your updated JSON file should look like the following:{
  "Name": "Reader Support Tickets",
  "Id": "22222222-2222-2222-2222-222222222222",
  "IsCustom": true,
  "Description": "View everything in the subscription and also open support tickets.",
  "Actions": [
    "*/read",
    "Microsoft.Support/*",
    "Microsoft.Resources/deployments/*"
  ],
  "NotActions": [],
  "DataActions": [],
  "NotDataActions": [],
  "AssignableScopes": [
    "/subscriptions/00000000-0000-0000-0000-000000000000"
  ]
}
InActions, add the action to create and manage resource group deployments"Microsoft.Resources/deployments/*".
Actions
"Microsoft.Resources/deployments/*"
Your updated JSON file should look like the following:
{
  "Name": "Reader Support Tickets",
  "Id": "22222222-2222-2222-2222-222222222222",
  "IsCustom": true,
  "Description": "View everything in the subscription and also open support tickets.",
  "Actions": [
    "*/read",
    "Microsoft.Support/*",
    "Microsoft.Resources/deployments/*"
  ],
  "NotActions": [],
  "DataActions": [],
  "NotDataActions": [],
  "AssignableScopes": [
    "/subscriptions/00000000-0000-0000-0000-000000000000"
  ]
}
{
  "Name": "Reader Support Tickets",
  "Id": "22222222-2222-2222-2222-222222222222",
  "IsCustom": true,
  "Description": "View everything in the subscription and also open support tickets.",
  "Actions": [
    "*/read",
    "Microsoft.Support/*",
    "Microsoft.Resources/deployments/*"
  ],
  "NotActions": [],
  "DataActions": [],
  "NotDataActions": [],
  "AssignableScopes": [
    "/subscriptions/00000000-0000-0000-0000-000000000000"
  ]
}
To update the custom role, use theSet-AzRoleDefinitioncommand and specify the updated JSON file.Set-AzRoleDefinition -InputFile "C:\CustomRoles\ReaderSupportRole2.json"Name             : Reader Support Tickets
Id               : 22222222-2222-2222-2222-222222222222
IsCustom         : True
Description      : View everything in the subscription and also open support tickets.
Actions          : {*/read, Microsoft.Support/*, Microsoft.Resources/deployments/*}
NotActions       : {}
DataActions      : {}
NotDataActions   : {}
AssignableScopes : {/subscriptions/00000000-0000-0000-0000-000000000000}
To update the custom role, use theSet-AzRoleDefinitioncommand and specify the updated JSON file.
Set-AzRoleDefinition -InputFile "C:\CustomRoles\ReaderSupportRole2.json"
Set-AzRoleDefinition -InputFile "C:\CustomRoles\ReaderSupportRole2.json"
Name             : Reader Support Tickets
Id               : 22222222-2222-2222-2222-222222222222
IsCustom         : True
Description      : View everything in the subscription and also open support tickets.
Actions          : {*/read, Microsoft.Support/*, Microsoft.Resources/deployments/*}
NotActions       : {}
DataActions      : {}
NotDataActions   : {}
AssignableScopes : {/subscriptions/00000000-0000-0000-0000-000000000000}
Name             : Reader Support Tickets
Id               : 22222222-2222-2222-2222-222222222222
IsCustom         : True
Description      : View everything in the subscription and also open support tickets.
Actions          : {*/read, Microsoft.Support/*, Microsoft.Resources/deployments/*}
NotActions       : {}
DataActions      : {}
NotDataActions   : {}
AssignableScopes : {/subscriptions/00000000-0000-0000-0000-000000000000}
To use thePSRoleDefinitionobject to update your custom role, first use theGet-AzRoleDefinitioncommand to get the role.$role = Get-AzRoleDefinition "Reader Support Tickets"
To use thePSRoleDefinitionobject to update your custom role, first use theGet-AzRoleDefinitioncommand to get the role.
PSRoleDefinition
$role = Get-AzRoleDefinition "Reader Support Tickets"
$role = Get-AzRoleDefinition "Reader Support Tickets"
Call theAddmethod to add the action to read diagnostic settings.$role.Actions.Add("Microsoft.Insights/diagnosticSettings/*/read")
Call theAddmethod to add the action to read diagnostic settings.
Add
$role.Actions.Add("Microsoft.Insights/diagnosticSettings/*/read")
$role.Actions.Add("Microsoft.Insights/diagnosticSettings/*/read")
Use theSet-AzRoleDefinitionto update the role.Set-AzRoleDefinition -Role $roleName             : Reader Support Tickets
Id               : 22222222-2222-2222-2222-222222222222
IsCustom         : True
Description      : View everything in the subscription and also open support tickets.
Actions          : {*/read, Microsoft.Support/*, Microsoft.Resources/deployments/*,
                   Microsoft.Insights/diagnosticSettings/*/read}
NotActions       : {}
DataActions      : {}
NotDataActions   : {}
AssignableScopes : {/subscriptions/00000000-0000-0000-0000-000000000000}
Use theSet-AzRoleDefinitionto update the role.
Set-AzRoleDefinition -Role $role
Set-AzRoleDefinition -Role $role
Name             : Reader Support Tickets
Id               : 22222222-2222-2222-2222-222222222222
IsCustom         : True
Description      : View everything in the subscription and also open support tickets.
Actions          : {*/read, Microsoft.Support/*, Microsoft.Resources/deployments/*,
                   Microsoft.Insights/diagnosticSettings/*/read}
NotActions       : {}
DataActions      : {}
NotDataActions   : {}
AssignableScopes : {/subscriptions/00000000-0000-0000-0000-000000000000}
Name             : Reader Support Tickets
Id               : 22222222-2222-2222-2222-222222222222
IsCustom         : True
Description      : View everything in the subscription and also open support tickets.
Actions          : {*/read, Microsoft.Support/*, Microsoft.Resources/deployments/*,
                   Microsoft.Insights/diagnosticSettings/*/read}
NotActions       : {}
DataActions      : {}
NotDataActions   : {}
AssignableScopes : {/subscriptions/00000000-0000-0000-0000-000000000000}
Delete a custom role
Use theGet-AzRoleDefinitioncommand to get the ID of the custom role.Get-AzRoleDefinition "Reader Support Tickets"
Use theGet-AzRoleDefinitioncommand to get the ID of the custom role.
Get-AzRoleDefinition "Reader Support Tickets"
Get-AzRoleDefinition "Reader Support Tickets"
Use theRemove-AzRoleDefinitioncommand and specify the role ID to delete the custom role.Remove-AzRoleDefinition -Id "22222222-2222-2222-2222-222222222222"Confirm
Are you sure you want to remove role definition with id '22222222-2222-2222-2222-222222222222'.
[Y] Yes  [N] No  [S] Suspend  [?] Help (default is "Y"):
Use theRemove-AzRoleDefinitioncommand and specify the role ID to delete the custom role.
Remove-AzRoleDefinition -Id "22222222-2222-2222-2222-222222222222"
Remove-AzRoleDefinition -Id "22222222-2222-2222-2222-222222222222"
Confirm
Are you sure you want to remove role definition with id '22222222-2222-2222-2222-222222222222'.
[Y] Yes  [N] No  [S] Suspend  [?] Help (default is "Y"):
Confirm
Are you sure you want to remove role definition with id '22222222-2222-2222-2222-222222222222'.
[Y] Yes  [N] No  [S] Suspend  [?] Help (default is "Y"):
When asked to confirm, typeY.
When asked to confirm, typeY.
Next steps
Create or update Azure custom roles using Azure PowerShell
Feedback
Was this page helpful?
Additional resources