Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Create an Azure Red Hat OpenShift 4 private cluster
Article
2025-03-06
14 contributors
In this article
In this article, you'll prepare your environment to create Azure Red Hat OpenShift private clusters running OpenShift 4. You'll learn how to:
Setup the prerequisites and create the required virtual network and subnets
Deploy a cluster with a private API server endpoint and a private ingress controller
If you choose to install and use the CLI locally, this tutorial requires that you're running the Azure CLI version 2.30.0 or later. Runaz --versionto find the version. If you need to install or upgrade, seeInstall Azure CLI.
az --version
Before you begin
Register the resource providers
If you have multiple Azure subscriptions, specify the relevant subscription ID:az account set --subscription <SUBSCRIPTION ID>
If you have multiple Azure subscriptions, specify the relevant subscription ID:
az account set --subscription <SUBSCRIPTION ID>
az account set --subscription <SUBSCRIPTION ID>
Register theMicrosoft.RedHatOpenShiftresource provider:az provider register -n Microsoft.RedHatOpenShift --wait
Register theMicrosoft.RedHatOpenShiftresource provider:
Microsoft.RedHatOpenShift
az provider register -n Microsoft.RedHatOpenShift --wait
az provider register -n Microsoft.RedHatOpenShift --wait
Register theMicrosoft.Computeresource provider (if you haven't already):az provider register -n Microsoft.Compute --wait
Register theMicrosoft.Computeresource provider (if you haven't already):
Microsoft.Compute
az provider register -n Microsoft.Compute --wait
az provider register -n Microsoft.Compute --wait
Register theMicrosoft.Networkresource provider (if you haven't already):az provider register -n Microsoft.Network --wait
Register theMicrosoft.Networkresource provider (if you haven't already):
Microsoft.Network
az provider register -n Microsoft.Network --wait
az provider register -n Microsoft.Network --wait
Register theMicrosoft.Storageresource provider (if you haven't already):az provider register -n Microsoft.Storage --wait
Register theMicrosoft.Storageresource provider (if you haven't already):
Microsoft.Storage
az provider register -n Microsoft.Storage --wait
az provider register -n Microsoft.Storage --wait
Get a Red Hat pull secret (optional)
A Red Hat pull secret enables your cluster to access Red Hat container registries along with other content. This step is optional but recommended.
Go to your Red Hat OpenShift cluster manager portaland log in.Sign in to your Red Hat account or create a new Red Hat account with your business email and accept the terms and conditions.
Go to your Red Hat OpenShift cluster manager portaland log in.
Sign in to your Red Hat account or create a new Red Hat account with your business email and accept the terms and conditions.
Click Download pull secret.
Click Download pull secret.
Keep the savedpull-secret.txtfile somewhere safe - it's used in each cluster creation.
pull-secret.txt
When running theaz aro createcommand, you can reference your pull secret using the--pull-secret @pull-secret.txtparameter. Executeaz aro createfrom the directory where you stored yourpull-secret.txtfile. Otherwise, replace@pull-secret.txtwith@<path-to-my-pull-secret-file.
az aro create
--pull-secret @pull-secret.txt
az aro create
pull-secret.txt
@pull-secret.txt
@<path-to-my-pull-secret-file
If you're copying your pull secret or referencing it in other scripts, your pull secret should be formatted as a valid JSON string.
Create a virtual network containing two empty subnets
Next, create a virtual network containing two empty subnets.
Set the following variables.LOCATION=eastus                 # the location of your cluster
RESOURCEGROUP="v4-$LOCATION"    # the name of the resource group where you want to create your cluster
CLUSTER=aro-cluster             # the name of your cluster
Set the following variables.
LOCATION=eastus                 # the location of your cluster
RESOURCEGROUP="v4-$LOCATION"    # the name of the resource group where you want to create your cluster
CLUSTER=aro-cluster             # the name of your cluster
LOCATION=eastus                 # the location of your cluster
RESOURCEGROUP="v4-$LOCATION"    # the name of the resource group where you want to create your cluster
CLUSTER=aro-cluster             # the name of your cluster
Create a resource groupAn Azure resource group is a logical group in which Azure resources are deployed and managed. When you create a resource group, you specify a location. This location is where resource group metadata is stored, it's also where your resources run in Azure if you don't specify another region during resource creation. Create a resource group using the [az group create][az-group-create] command.az group create --name $RESOURCEGROUP --location $LOCATIONThe following example output shows the resource group created successfully:{
"id": "/subscriptions/<guid>/resourceGroups/aro-rg",
"location": "eastus",
"managedBy": null,
"name": "aro-rg",
"properties": {
    "provisioningState": "Succeeded"
},
"tags": null
}
Create a resource group
An Azure resource group is a logical group in which Azure resources are deployed and managed. When you create a resource group, you specify a location. This location is where resource group metadata is stored, it's also where your resources run in Azure if you don't specify another region during resource creation. Create a resource group using the [az group create][az-group-create] command.
az group create --name $RESOURCEGROUP --location $LOCATION
az group create --name $RESOURCEGROUP --location $LOCATION
The following example output shows the resource group created successfully:
{
"id": "/subscriptions/<guid>/resourceGroups/aro-rg",
"location": "eastus",
"managedBy": null,
"name": "aro-rg",
"properties": {
    "provisioningState": "Succeeded"
},
"tags": null
}
{
"id": "/subscriptions/<guid>/resourceGroups/aro-rg",
"location": "eastus",
"managedBy": null,
"name": "aro-rg",
"properties": {
    "provisioningState": "Succeeded"
},
"tags": null
}
Create a virtual network.Azure Red Hat OpenShift clusters running OpenShift 4 require a virtual network with two empty subnets, for the control and worker nodes.Create a new virtual network in the same resource group you created earlier.az network vnet create \
--resource-group $RESOURCEGROUP \
--name aro-vnet \
--address-prefixes 10.0.0.0/22The following example output shows the virtual network created successfully:{
"newVNet": {
    "addressSpace": {
    "addressPrefixes": [
        "10.0.0.0/22"
    ]
    },
    "id": "/subscriptions/<guid>/resourceGroups/aro-rg/providers/Microsoft.Network/virtualNetworks/aro-vnet",
    "location": "eastus",
    "name": "aro-vnet",
    "provisioningState": "Succeeded",
    "resourceGroup": "aro-rg",
    "type": "Microsoft.Network/virtualNetworks"
}
}
Create a virtual network.
Azure Red Hat OpenShift clusters running OpenShift 4 require a virtual network with two empty subnets, for the control and worker nodes.
Create a new virtual network in the same resource group you created earlier.
az network vnet create \
--resource-group $RESOURCEGROUP \
--name aro-vnet \
--address-prefixes 10.0.0.0/22
az network vnet create \
--resource-group $RESOURCEGROUP \
--name aro-vnet \
--address-prefixes 10.0.0.0/22
The following example output shows the virtual network created successfully:
{
"newVNet": {
    "addressSpace": {
    "addressPrefixes": [
        "10.0.0.0/22"
    ]
    },
    "id": "/subscriptions/<guid>/resourceGroups/aro-rg/providers/Microsoft.Network/virtualNetworks/aro-vnet",
    "location": "eastus",
    "name": "aro-vnet",
    "provisioningState": "Succeeded",
    "resourceGroup": "aro-rg",
    "type": "Microsoft.Network/virtualNetworks"
}
}
{
"newVNet": {
    "addressSpace": {
    "addressPrefixes": [
        "10.0.0.0/22"
    ]
    },
    "id": "/subscriptions/<guid>/resourceGroups/aro-rg/providers/Microsoft.Network/virtualNetworks/aro-vnet",
    "location": "eastus",
    "name": "aro-vnet",
    "provisioningState": "Succeeded",
    "resourceGroup": "aro-rg",
    "type": "Microsoft.Network/virtualNetworks"
}
}
Add an empty subnet for the master nodes.az network vnet subnet create \
--resource-group $RESOURCEGROUP \
--vnet-name aro-vnet \
--name master-subnet \
--address-prefixes 10.0.0.0/23 \
--service-endpoints Microsoft.ContainerRegistry
Add an empty subnet for the master nodes.
az network vnet subnet create \
--resource-group $RESOURCEGROUP \
--vnet-name aro-vnet \
--name master-subnet \
--address-prefixes 10.0.0.0/23 \
--service-endpoints Microsoft.ContainerRegistry
az network vnet subnet create \
--resource-group $RESOURCEGROUP \
--vnet-name aro-vnet \
--name master-subnet \
--address-prefixes 10.0.0.0/23 \
--service-endpoints Microsoft.ContainerRegistry
Add an empty subnet for the worker nodes.az network vnet subnet create \
--resource-group $RESOURCEGROUP \
--vnet-name aro-vnet \
--name worker-subnet \
--address-prefixes 10.0.2.0/23 \
--service-endpoints Microsoft.ContainerRegistry
Add an empty subnet for the worker nodes.
az network vnet subnet create \
--resource-group $RESOURCEGROUP \
--vnet-name aro-vnet \
--name worker-subnet \
--address-prefixes 10.0.2.0/23 \
--service-endpoints Microsoft.ContainerRegistry
az network vnet subnet create \
--resource-group $RESOURCEGROUP \
--vnet-name aro-vnet \
--name worker-subnet \
--address-prefixes 10.0.2.0/23 \
--service-endpoints Microsoft.ContainerRegistry
Disable subnet private endpoint policieson the master subnet.This is required to be able to connect and manage the cluster.az network vnet subnet update \
--name master-subnet \
--resource-group $RESOURCEGROUP \
--vnet-name aro-vnet \
--private-link-service-network-policies Disabled
Disable subnet private endpoint policieson the master subnet.This is required to be able to connect and manage the cluster.
az network vnet subnet update \
--name master-subnet \
--resource-group $RESOURCEGROUP \
--vnet-name aro-vnet \
--private-link-service-network-policies Disabled
az network vnet subnet update \
--name master-subnet \
--resource-group $RESOURCEGROUP \
--vnet-name aro-vnet \
--private-link-service-network-policies Disabled
Create the cluster
Run the following command to create a cluster. Optionally, you canpass your Red Hat pull secretwhich enables your cluster to access Red Hat container registries along with other content.
Note
If you're copy/pasting commands and using one of the optional parameters, be sure delete the initial hashtags and the trailing comment text. As well, close the argument on the preceding line of the command with a trailing backslash.
az aro create \
  --resource-group $RESOURCEGROUP \
  --name $CLUSTER \
  --vnet aro-vnet \
  --master-subnet master-subnet \
  --worker-subnet worker-subnet \
  --apiserver-visibility Private \
  --ingress-visibility Private
  # --domain foo.example.com # [OPTIONAL] custom domain
  # --pull-secret @pull-secret.txt # [OPTIONAL]
az aro create \
  --resource-group $RESOURCEGROUP \
  --name $CLUSTER \
  --vnet aro-vnet \
  --master-subnet master-subnet \
  --worker-subnet worker-subnet \
  --apiserver-visibility Private \
  --ingress-visibility Private
  # --domain foo.example.com # [OPTIONAL] custom domain
  # --pull-secret @pull-secret.txt # [OPTIONAL]
Theaz aro createcommand normally takes about 35 minutes to create a cluster.
az aro create
Note
When attempting to create a cluster, if you receive an error message saying that your resource quota has been exceeded, seeAdding Quota to ARO accountto learn how to proceed.
Important
If you choose to specify a custom domain, for examplefoo.example.com, the OpenShift console is available at a URL such ashttps://console-openshift-console.apps.foo.example.com, instead of the built-in domainhttps://console-openshift-console.apps.<random>.<location>.aroapp.io.
https://console-openshift-console.apps.foo.example.com
https://console-openshift-console.apps.<random>.<location>.aroapp.io
By default OpenShift uses self-signed certificates for all of the routes created on*.apps.<random>.<location>.aroapp.io.  If you choose Custom DNS, after connecting to the cluster, you'll need to follow the OpenShift documentation toconfigure a custom certificate for your ingress controllerandcustom certificate for your API server.
*.apps.<random>.<location>.aroapp.io
Create a private cluster without a public IP address
Typically, private clusters are created with a public IP address and load balancer, providing a means for outbound connectivity to other services. However, you can create a private cluster without a public IP address. This may be required in situations in which security or policy requirements prohibit the use of public IP addresses.
To create a private cluster without a public IP address,follow the procedure above, adding the parameter--outbound-type UserDefinedRoutingto thearo createcommand, as in the following example:
--outbound-type UserDefinedRouting
aro create
az aro create \
  --resource-group $RESOURCEGROUP \
  --name $CLUSTER \
  --vnet aro-vnet \
  --master-subnet master-subnet \
  --worker-subnet worker-subnet \
  --apiserver-visibility Private \
  --ingress-visibility Private \
  --outbound-type UserDefinedRouting
az aro create \
  --resource-group $RESOURCEGROUP \
  --name $CLUSTER \
  --vnet aro-vnet \
  --master-subnet master-subnet \
  --worker-subnet worker-subnet \
  --apiserver-visibility Private \
  --ingress-visibility Private \
  --outbound-type UserDefinedRouting
Note
The UserDefinedRouting flag can only be used when creating clusters with--apiserver-visibility Privateand--ingress-visibility Privateparameters. Ensure you are using the latest Azure CLI. Clusters deployed with Azure CLI 2.52.0 and older will get deployed with public IPs.
--apiserver-visibility Private
--ingress-visibility Private
This User Defined Routing option prevents a public IP address from being provisioned. User Defined Routing (UDR) allows you to create custom routes in Azure to override the default system routes or to add more routes to a subnet's route table. SeeVirtual network traffic routingto learn more.
Important
Be sure to specify the correct subnet with the properly configured routing table when creating your private cluster.
For egress, the User Defined Routing option ensures that the newly created cluster has the egress lockdown feature enabled to allow you to secure outbound traffic from your new private cluster. SeeControl egress traffic for your Azure Red Hat OpenShift (ARO) clusterto learn more.
Note
If you choose the User Defined Routing network type, you're completely responsible for managing the egress of your cluster's routing outside of your virtual network (for example, getting access to public internet). Azure Red Hat OpenShift cannot manage this for you.
You can configure one or more egress IP addresses to a namespace or to specific pods in a namespace of a private cluster with no public IP address. To do so, follow the procedure above to create a private cluster without a public IP address, and then configure the egress IP as perthis Red Hat OpenShift document. These egress IP addresses need to be from the subnets associated with the ARO cluster.
Configuring an egress IP for an ARO private cluster is only supported for clusters with the--outbound-type UserDefinedRoutingparameter. It isn't supported for public ARO clusters that have the--outbound-type LoadBalancerparameter.
--outbound-type UserDefinedRouting
--outbound-type LoadBalancer
Connect to the private cluster
You can log into the cluster using thekubeadminuser.  Run the following command to find the password for thekubeadminuser.
kubeadmin
kubeadmin
az aro list-credentials \
  --name $CLUSTER \
  --resource-group $RESOURCEGROUP
az aro list-credentials \
  --name $CLUSTER \
  --resource-group $RESOURCEGROUP
The following example output shows the password inkubeadminPassword.
kubeadminPassword
{
  "kubeadminPassword": "<generated password>",
  "kubeadminUsername": "kubeadmin"
}
{
  "kubeadminPassword": "<generated password>",
  "kubeadminUsername": "kubeadmin"
}
You can find the cluster console URL by running the following command, which looks likehttps://console-openshift-console.apps.<random>.<region>.aroapp.io/
https://console-openshift-console.apps.<random>.<region>.aroapp.io/
az aro show \
    --name $CLUSTER \
    --resource-group $RESOURCEGROUP \
    --query "consoleProfile.url" -o tsv
az aro show \
    --name $CLUSTER \
    --resource-group $RESOURCEGROUP \
    --query "consoleProfile.url" -o tsv
Important
In order to connect to a private Azure Red Hat OpenShift cluster, you'll need to perform the following step from a host that is either in the Virtual Network you created or in a Virtual Network that ispeeredwith the Virtual Network the cluster was deployed to.
Launch the console URL in a browser and sign in using thekubeadmincredentials.
kubeadmin
Install the OpenShift CLI
Once you're signed into the OpenShift Web Console, select the?at the top right and then onCommand Line Tools. Download the release appropriate to your machine.

You can also download thelatest release of the CLIappropriate to your machine.
Connect using the OpenShift CLI
Retrieve the API server's address.
apiServer=$(az aro show -g $RESOURCEGROUP -n $CLUSTER --query apiserverProfile.url -o tsv)
apiServer=$(az aro show -g $RESOURCEGROUP -n $CLUSTER --query apiserverProfile.url -o tsv)
Important
In order to connect to a private Azure Red Hat OpenShift cluster, you'll need to perform the following step from a host that is either in the Virtual Network you created or in a Virtual Network that ispeeredwith the Virtual Network the cluster was deployed to.
Sign in to the OpenShift cluster's API server using the following command. Replace<kubeadmin password>with the password you retrieved.
oc login $apiServer -u kubeadmin -p <kubeadmin password>
oc login $apiServer -u kubeadmin -p <kubeadmin password>
Next steps
In this article, an Azure Red Hat OpenShift cluster running OpenShift 4 was deployed. You learned how to:
Setup the prerequisites and create the required virtual network and subnets
Deploy a cluster
Connect to the cluster using thekubeadminuser
kubeadmin
Advance to the next article to learn how to configure the cluster for authentication using Microsoft Entra ID.
Configure authentication with Microsoft Entra ID using the command line
Configure authentication with Microsoft Entra ID using the command line
Configure authentication with Microsoft Entra ID using the Azure portal and OpenShift web console
Configure authentication with Microsoft Entra ID using the Azure portal and OpenShift web console
Feedback
Was this page helpful?
Additional resources