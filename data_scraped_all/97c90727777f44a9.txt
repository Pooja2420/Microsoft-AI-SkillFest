Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Azure Policy definitions audit effect
Article
2025-03-04
2 contributors
In this article
Theauditeffect is used to create a warning event in the activity log when evaluating a non-compliant resource, but it doesn't stop the request.
audit
Audit evaluation
Audit is the last effect checked by Azure Policy during the creation or update of a resource. For a Resource Manager mode, Azure Policy then sends the resource to the Resource Provider. When evaluating a create or update request for a resource, Azure Policy adds aMicrosoft.Authorization/policies/audit/actionoperation to the activity log and marks the resource as non-compliant. During a standard compliance evaluation cycle, only the compliance status on the resource is updated.
Microsoft.Authorization/policies/audit/action
Audit properties
For a Resource Manager mode, the audit effect doesn't have any other properties for use in thethencondition of the policy definition.
then
For a Resource Provider mode ofMicrosoft.Kubernetes.Data, the audit effect has the following subproperties ofdetails. Use oftemplateInfois required for new or updated policy definitions asconstraintTemplateis deprecated.
Microsoft.Kubernetes.Data
details
templateInfo
constraintTemplate
templateInfo(required)Can't be used withconstraintTemplate.sourceType(required)Defines the type of source for the constraint template. Allowed values:PublicURLorBase64Encoded.IfPublicURL, paired with propertyurlto provide location of the constraint template. The location must be publicly accessible.WarningDon't use SAS URIs, URL tokens, or anything else that could expose secrets in plain text.IfBase64Encoded, paired with propertycontentto provide the base 64 encoded constraint template. SeeCreate policy definition from constraint templateto create a custom definition from an existingOpen Policy Agent(OPA) Gatekeeper v3constraint template.
templateInfo(required)
templateInfo
Can't be used withconstraintTemplate.
constraintTemplate
sourceType(required)Defines the type of source for the constraint template. Allowed values:PublicURLorBase64Encoded.IfPublicURL, paired with propertyurlto provide location of the constraint template. The location must be publicly accessible.WarningDon't use SAS URIs, URL tokens, or anything else that could expose secrets in plain text.IfBase64Encoded, paired with propertycontentto provide the base 64 encoded constraint template. SeeCreate policy definition from constraint templateto create a custom definition from an existingOpen Policy Agent(OPA) Gatekeeper v3constraint template.
sourceType
Defines the type of source for the constraint template. Allowed values:PublicURLorBase64Encoded.
Defines the type of source for the constraint template. Allowed values:PublicURLorBase64Encoded.
PublicURL
Base64Encoded
IfPublicURL, paired with propertyurlto provide location of the constraint template. The location must be publicly accessible.WarningDon't use SAS URIs, URL tokens, or anything else that could expose secrets in plain text.
IfPublicURL, paired with propertyurlto provide location of the constraint template. The location must be publicly accessible.
PublicURL
url
Warning
Don't use SAS URIs, URL tokens, or anything else that could expose secrets in plain text.
IfBase64Encoded, paired with propertycontentto provide the base 64 encoded constraint template. SeeCreate policy definition from constraint templateto create a custom definition from an existingOpen Policy Agent(OPA) Gatekeeper v3constraint template.
IfBase64Encoded, paired with propertycontentto provide the base 64 encoded constraint template. SeeCreate policy definition from constraint templateto create a custom definition from an existingOpen Policy Agent(OPA) Gatekeeper v3constraint template.
Base64Encoded
content
constraint(deprecated)Can't be used withtemplateInfo.The CRD implementation of the Constraint template. Uses parameters passed viavaluesas{{ .Values.<valuename> }}. In example 2 below, these values are{{ .Values.excludedNamespaces }}and{{ .Values.allowedContainerImagesRegex }}.
constraint(deprecated)
constraint
Can't be used withtemplateInfo.
templateInfo
The CRD implementation of the Constraint template. Uses parameters passed viavaluesas{{ .Values.<valuename> }}. In example 2 below, these values are{{ .Values.excludedNamespaces }}and{{ .Values.allowedContainerImagesRegex }}.
values
{{ .Values.<valuename> }}
{{ .Values.excludedNamespaces }}
{{ .Values.allowedContainerImagesRegex }}
constraintTemplate(deprecated)Can't be used withtemplateInfo.Must be replaced withtemplateInfowhen creating or updating a policy definition.The Constraint template CustomResourceDefinition (CRD) that defines new Constraints. The template defines the Rego logic, the Constraint schema, and the Constraint parameters that are passed viavaluesfrom Azure Policy. For more information, go toGatekeeper constraints.
constraintTemplate(deprecated)
constraintTemplate
Can't be used withtemplateInfo.
templateInfo
Must be replaced withtemplateInfowhen creating or updating a policy definition.
templateInfo
The Constraint template CustomResourceDefinition (CRD) that defines new Constraints. The template defines the Rego logic, the Constraint schema, and the Constraint parameters that are passed viavaluesfrom Azure Policy. For more information, go toGatekeeper constraints.
values
constraintInfo(optional)Can't be used withconstraint,constraintTemplate,apiGroups,kinds,scope,namespaces,excludedNamespaces, orlabelSelector.IfconstraintInfoisn't provided, the constraint can be generated fromtemplateInfoand policy.sourceType(required)Defines the type of source for the constraint. Allowed values:PublicURLorBase64Encoded.IfPublicURL, paired with propertyurlto provide location of the constraint. The location must be publicly accessible.WarningDon't use SAS URIs or tokens inurlor anything else that could expose a secret.
constraintInfo(optional)
constraintInfo
Can't be used withconstraint,constraintTemplate,apiGroups,kinds,scope,namespaces,excludedNamespaces, orlabelSelector.
constraint
constraintTemplate
apiGroups
kinds
scope
namespaces
excludedNamespaces
labelSelector
IfconstraintInfoisn't provided, the constraint can be generated fromtemplateInfoand policy.
constraintInfo
templateInfo
sourceType(required)Defines the type of source for the constraint. Allowed values:PublicURLorBase64Encoded.IfPublicURL, paired with propertyurlto provide location of the constraint. The location must be publicly accessible.WarningDon't use SAS URIs or tokens inurlor anything else that could expose a secret.
sourceType
Defines the type of source for the constraint. Allowed values:PublicURLorBase64Encoded.
Defines the type of source for the constraint. Allowed values:PublicURLorBase64Encoded.
PublicURL
Base64Encoded
IfPublicURL, paired with propertyurlto provide location of the constraint. The location must be publicly accessible.WarningDon't use SAS URIs or tokens inurlor anything else that could expose a secret.
IfPublicURL, paired with propertyurlto provide location of the constraint. The location must be publicly accessible.
PublicURL
url
Warning
Don't use SAS URIs or tokens inurlor anything else that could expose a secret.
url
namespaces(optional)AnarrayofKubernetes namespacesto limit policy evaluation to.An empty or missing value causes policy evaluation to include all namespaces not defined inexcludedNamespaces.
namespaces(optional)
namespaces
AnarrayofKubernetes namespacesto limit policy evaluation to.
An empty or missing value causes policy evaluation to include all namespaces not defined inexcludedNamespaces.
excludedNamespaces(optional)AnarrayofKubernetes namespacesto exclude from policy evaluation.
excludedNamespaces(optional)
excludedNamespaces
AnarrayofKubernetes namespacesto exclude from policy evaluation.
labelSelector(optional)Anobjectthat includesmatchLabels(object) andmatchExpression(array) properties to allow specifying which Kubernetes resources to include for policy evaluation that matched the providedlabels and selectors.An empty or missing value causes policy evaluation to include all labels and selectors, except
namespaces defined inexcludedNamespaces.
labelSelector(optional)
labelSelector
Anobjectthat includesmatchLabels(object) andmatchExpression(array) properties to allow specifying which Kubernetes resources to include for policy evaluation that matched the providedlabels and selectors.
An empty or missing value causes policy evaluation to include all labels and selectors, except
namespaces defined inexcludedNamespaces.
scope(optional)Astringthat includes thescopeproperty to allow specifying if cluster-scoped or namespaced-scoped resources are matched.
scope(optional)
scope
Astringthat includes thescopeproperty to allow specifying if cluster-scoped or namespaced-scoped resources are matched.
apiGroups(required when usingtemplateInfo)Anarraythat includes theAPI groupsto match. An empty array ([""]) is the core API group.Defining["*"]forapiGroupsis disallowed.
apiGroups(required when usingtemplateInfo)
apiGroups
Anarraythat includes theAPI groupsto match. An empty array ([""]) is the core API group.
[""]
Defining["*"]forapiGroupsis disallowed.
["*"]
kinds(required when usingtemplateInfo)Anarraythat includes thekindof Kubernetes object to limit evaluation to.Defining["*"]forkindsis disallowed.
kinds(required when usingtemplateInfo)
kinds
Anarraythat includes thekindof Kubernetes object to limit evaluation to.
Defining["*"]forkindsis disallowed.
["*"]
values(optional)Defines any parameters and values to pass to the Constraint. Each value must exist and match a property in the validationopenAPIV3Schemasection of the Constraint template CRD.
values(optional)
values
Defines any parameters and values to pass to the Constraint. Each value must exist and match a property in the validationopenAPIV3Schemasection of the Constraint template CRD.
openAPIV3Schema
Audit example
Example 1: Using the audit effect for Resource Manager modes.
"then": {
  "effect": "audit"
}
"then": {
  "effect": "audit"
}
Example 2: Using the audit effect for a Resource Provider mode ofMicrosoft.Kubernetes.Data. The additional information indetails.templateInfodeclares use ofPublicURLand setsurlto the location of the Constraint template to use in Kubernetes to limit the allowed container images.
Microsoft.Kubernetes.Data
details.templateInfo
PublicURL
url
"then": {
  "effect": "audit",
  "details": {
    "templateInfo": {
      "sourceType": "PublicURL",
      "url": "https://store.policy.core.windows.net/kubernetes/container-allowed-images/v1/template.yaml",
    },
    "values": {
      "imageRegex": "[parameters('allowedContainerImagesRegex')]"
    },
    "apiGroups": [
      ""
    ],
    "kinds": [
      "Pod"
    ]
  }
}
"then": {
  "effect": "audit",
  "details": {
    "templateInfo": {
      "sourceType": "PublicURL",
      "url": "https://store.policy.core.windows.net/kubernetes/container-allowed-images/v1/template.yaml",
    },
    "values": {
      "imageRegex": "[parameters('allowedContainerImagesRegex')]"
    },
    "apiGroups": [
      ""
    ],
    "kinds": [
      "Pod"
    ]
  }
}
Next steps
Review examples atAzure Policy samples.
Review theAzure Policy definition structure.
Understand how toprogrammatically create policies.
Learn how toget compliance data.
Learn how toremediate non-compliant resources.
ReviewAzure management groups.
Feedback
Was this page helpful?
Additional resources