Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Operational Excellence design principles
Article
2023-11-15
2 contributors
In this article
At the core of the Operational Excellence pillar are DevOps practices thatensure workload quality through standardized workflows and team cohesion. This pillar defines operating procedures fordevelopment practices, observability, and release management. The goal is to minimize process variance, chances of human error, and disruption to customers. To assess your operational health, start with these questions:
Do you execute operations with discipline?
Are customers using the workload with maximum predictability?
How do you learn from experience and collected data to drive continuous improvement?
Workload operations can devolve into chaotic practices when there's no clear ownership or leadership. In this type of environment, teams often resort to methods that are executed with high effort and produce low outcomes, which leads to poor user experience. These approaches meet only short-term goals. Long-term benefits are realized throughcontinuous evaluation and strategic investments.
The design principles provide guidelines for operational strategies that must be considered toaddress the underlying causes and not just treat symptoms. Start with the recommended approaches, and then observe what works and what doesn't to identify areas of improvement. After you set your strategy, continue to drive action by using theOperational Excellence checklist.
The operational requirements of a workload are as important as its business requirements. Efficient processes ensure the workload achieves business outcomes within the constraints of compliance, whether that compliance is organizational or external. The key is to find repeatability with consistency.
The goals of the Operational Excellence pillar areto do the right thing, to do it the right way, and to solve the right problems as a team.
If you meet these goals, workloads will run reliably and predictably even during times of change.Inability to fulfill operational requirements can lead to failed deployments, inconsistent user experience, and added costs that could have been avoided through proper planning and streamlined execution.
Embrace DevOps culture
DevOps is a community of practice where diversity of perspective and skills drives toward one mission. Teams mustfoster a collaborative environment of shared knowledgeinstead of siloed learning. Use shared functions to strive to overcome resource constraints.
A good DevOps culture thrives on shared responsibility. Development and operations teams should align their goals and priorities with the expectations of their customers and keep business focus in mind. The development team should involve the operations team in the feedback loop so the improvements are driven upstream and other teams benefit equally. Conversely, operations teams are responsible for making the development team successful in their business outcomes by sharing resources and feedback that are relevant to the workload.
At the same time, DevOps practicesapply clear lines of ownership and accountability to each team. Regardless of where the application runs, the workload team is responsible for that application.
DevOps optimizes operational tasks so that they're effective but not burdensome. To reap the full benefit of DevOps, the culture should optimize processes through technology and have processes for people in the organization to promote transparent communication.
Establish development standards
The development team is responsible for addressing workload issues prior to release with minimal friction. Be mindful of developer efficiency andoptimize for fast turnaround cycles, from coding to testing results. Implement effective and right-sized processes that plan and standardize technical activities and also drive consensus within the team and the stakeholders.
Evolve operations with observability
Build a culture that continuouslyimproves quality by monitoring the workloadand taking all the pillars of the Azure Well-Architected Framework into consideration. Enable the team and stakeholders to make both short-term and long-term decisions across many facets by providing the necessary data, statistics, and trends. Learn from your data and drive improvements.
Operations built for the purposes of observability are key in proactive maintenance of the application, quality and security assurance, capacity planning, and product management.
A crucial aspect of monitoring is applicationusing health modeling to help you anticipate issues before they become incidentsand affect customer experience. Efficient monitoring reduces reactive cycles spent on incident management.
Deploy with confidence
Build a workload supply chain that enables you to consistently reach the goal of predictability in all of your environments, across the workload's hosting platforms, applications, data, and configuration resources.The deployment mechanism must be capable of automation, testing, monitoring, and versioning. It should be modularized and ready to execute on demand. It shouldn't be represented as a monolithic end-to-end process. The supply chain isn't necessarily for faster execution, but to achieve consistency and self-documentation over multiple iterations.
The workload team is accountable for the supply chain as it relates to their own workload.
Note
Reduce the scope of portal usage to only non-repeating investigatory tasks.
Automate for efficiency
The workload might have workflows with processes that involve team members doing mundane, repetitive, and time-consuming tasks that don't actually need human intellect. Depending on the frequency, you might spend considerable time on these efforts, investing more time as the workload grows. Also, these processes are often error-prone due to human input.
Through automation, you save time, effort, and money, and you avoid mistakes.
Adopt safe deployment practices
During the development cycle, workload artifacts go through many changes as they get implemented and tested and as bugs are fixed.
The deployment process must follow a standard operating procedure.Any change must be deployed with the same level of rigor. This principle applies equally to code, configuration, and all related artifacts. The key is to apply safe practices as early as possible so that you have predictability in production. Even if errors reach the customers, you should be able to roll out recovery changes as soon as possible.
Next steps
We recommend that you review the Operational Excellence checklist to explore other concepts.
Operational Excellence checklist
Feedback
Was this page helpful?
Additional resources