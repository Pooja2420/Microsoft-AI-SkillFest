Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Overview of business continuity with Azure SQL Database
Article
2025-04-07
17 contributors
In this article
Applies to:Azure SQL DatabaseSQL database in Fabric
Azure SQL Database
Azure SQL Managed Instance
This article provides an overview of the business continuity and disaster recovery capabilities of Azure SQL Database, describing the options and recommendations to recover from disruptive events that could lead to data loss or cause your database and application to become unavailable. Learn what to do when a user or application error affects data integrity, an Azure availability zone or region has an outage, or your application requires maintenance.
Overview
Business continuityin Azure SQL Database refers to the mechanisms, policies, and procedures that enable your business to continue operating in the face of disruption by providing availability, high availability, and disaster recovery.
In most cases, SQL Database handles disruptive events that might happen in a cloud environment and keeps your applications and business processes running. However, there are some disruptive events where mitigation might take some time, such as:
User accidentally deletes or updates a row in a table.
Malicious attacker successfully deletes data or drops a database.
Catastrophic natural disaster event takes down a datacenter or availability zone or region.
Rare datacenter, availability zone, or region-wide outage caused by a configuration change, software bug, or hardware failure.
For prescriptive recommendations to maximize availability and achieve higher business continuity, see:
Availability checklist
High availability checklist
Disaster recovery checklist
High Availability
Azure SQL Database comes with a core resiliency and reliability promise that protects it against software or hardware failures. Database backups are automated to protect your data from corruption or accidental deletion. As a Platform-as-a-service (PaaS), the Azure SQL Database service provides availability as an off-the-shelf feature with an industry-leading availability SLA of 99.99%.
To achieve high availability in the Azure cloud environment, enablezone redundancy. With zone redundancy, the database or elastic pool usesAzure availability zonesto ensure resilience to zonal failures.
Many Azure regions provide availability zones, which are separated groups of data centers within a region that have independent power, cooling, and networking infrastructure.
Availability zones are designed to provide regional services, capacity, and high availability in the remaining zones if one zone experiences an outage.
By enabling zone redundancy, the database or elastic pool is resilient to zonal hardware and software failures and the recovery is transparent to applications. When high availability is enabled, the Azure SQL Database service is able to provide a higher availability SLA of 99.995%.
Disaster recovery
To achieve higher availability and redundancy across regions, you can enable disaster recovery capabilities to quickly recover the database from a catastrophic regional failure. Options for disaster recovery with Azure SQL Database are:
Active geo-replicationlets you create a continuously synchronized readable secondary database in any region for a primary database.
Failover groups, in addition to providing continuous synchronization between a primary and secondary database, also allow you to manage the replication and failover of some, or all, databases on a logical server to a secondary logical server in another region. Failover groups provide read-write and read-only listener endpoints that remain unchanged so updating application connection strings after failover isn't necessary.
Geo-restoreallows you to recover from a regional outage by restoring from geo replicated backups when you can't access your database in the primary region by creating a new database on any existing server in any Azure region.
The following table compares active geo-replication and failover groups, two disaster recovery options for Azure SQL Database:
RTO and RPO
As you develop your business continuity plan, understand the maximum acceptable time before the application fully recovers after the disruptive event. Two common ways to quantify business requirements around disaster recovery are:
Recovery Time Objective (RTO): The time required for an application to fully recover after an unplanned disruptive event.
Recovery Point Objective (RPO): The time amount of data loss that can be tolerated from an unplanned disruptive event.
The following table compares RPO and RTO of each business continuity option:
Features that provide business continuity
From a database perspective, there are four major potential disruption scenarios. The following table lists SQL Database business continuity features you can use to mitigate a potential business disruption scenario:
Prepare for a region outage
Regardless of which business continuity features you use, you must prepare the secondary database in another region. If you don't prepare properly, bringing your applications online after a failover or recovery takes additional time and likely also requires troubleshooting, which can delay RTO. Follow thechecklist for preparing secondary for a region outage.
Restore a database within the same Azure region
You can use automatic database backups to restore a database to a point in time in the past. This way you can recover from data corruptions caused by human errors. Point-in-time restore (PITR) allows you to create a new database on the same server that represents the state of data before the corrupting event. For recovery times, seeRTO and RPO.
If the maximum supported backup retention period for point-in-time restore isn't sufficient for your application, you can extend it by configuring a long-term retention (LTR) policy. For more information, seeLong-term retention.
Upgrade an application with minimal downtime
Sometimes an application must be taken offline because of maintenance such as an application upgrade. You canmanage rolling upgrades of cloud applications by using SQL Database active geo-replication. Geo-replication can also provide a recovery path if something goes wrong.
Save on costs with a standby replica
If your secondary replica is usedonlyfor disaster recovery (DR) and doesn't have any read or write workloads, you can save on licensing costs by designating the database for standby when you configure a new active geo-replication relationship.
Reviewlicense-free standby replicato learn more.
Next step
High availability and disaster recovery checklist
Related content
Designing globally available services using Azure SQL Database
Disaster recovery strategies for applications using Azure SQL Database elastic pools
Disaster recovery guidance - Azure SQL Database
High availability and disaster recovery checklist - Azure SQL Database
Feedback
Was this page helpful?
Additional resources