Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
jobs.deployment.strategy.canary definition
Article
2025-03-24
2 contributors
In this article
Canary deployment strategy rolls out changes to a small subset of servers.
canary:
  increments: [ string ] # Maximum batch size for deployment.
  preDeploy: # Pre deploy hook for canary deployment strategy.
    steps: [ task | script | powershell | pwsh | bash | checkout | download | downloadBuild | getPackage | publish | template | reviewApp ] # A list of steps to run.
    pool: string | pool # Pool where pre deploy steps will run.
  deploy: # Deploy hook for canary deployment strategy.
    steps: [ task | script | powershell | pwsh | bash | checkout | download | downloadBuild | getPackage | publish | template | reviewApp ] # A list of steps to run.
    pool: string | pool # Pool where deploy steps will run.
  routeTraffic: # Route traffic hook for canary deployment strategy.
    steps: [ task | script | powershell | pwsh | bash | checkout | download | downloadBuild | getPackage | publish | template | reviewApp ] # A list of steps to run.
    pool: string | pool # Pool where route traffic steps will run.
  postRouteTraffic: # Post route traffic hook for canary deployment strategy.
    steps: [ task | script | powershell | pwsh | bash | checkout | download | downloadBuild | getPackage | publish | template | reviewApp ] # A list of steps to run.
    pool: string | pool # Pool where post route traffic steps will run.
  on: # On success or failure hook for canary deployment strategy.
    failure: # Runs on failure of any step.
      steps: [ task | script | powershell | pwsh | bash | checkout | download | downloadBuild | getPackage | publish | template | reviewApp ] # A list of steps to run.
      pool: string | pool # Pool where post on failure steps will run.
    success: # Runs on success of all of the steps.
      steps: [ task | script | powershell | pwsh | bash | checkout | download | downloadBuild | getPackage | publish | template | reviewApp ] # A list of steps to run.
      pool: string | pool # Pool where on success steps will run.
canary:
  increments: [ string ] # Maximum batch size for deployment.
  preDeploy: # Pre deploy hook for canary deployment strategy.
    steps: [ task | script | powershell | pwsh | bash | checkout | download | downloadBuild | getPackage | publish | template | reviewApp ] # A list of steps to run.
    pool: string | pool # Pool where pre deploy steps will run.
  deploy: # Deploy hook for canary deployment strategy.
    steps: [ task | script | powershell | pwsh | bash | checkout | download | downloadBuild | getPackage | publish | template | reviewApp ] # A list of steps to run.
    pool: string | pool # Pool where deploy steps will run.
  routeTraffic: # Route traffic hook for canary deployment strategy.
    steps: [ task | script | powershell | pwsh | bash | checkout | download | downloadBuild | getPackage | publish | template | reviewApp ] # A list of steps to run.
    pool: string | pool # Pool where route traffic steps will run.
  postRouteTraffic: # Post route traffic hook for canary deployment strategy.
    steps: [ task | script | powershell | pwsh | bash | checkout | download | downloadBuild | getPackage | publish | template | reviewApp ] # A list of steps to run.
    pool: string | pool # Pool where post route traffic steps will run.
  on: # On success or failure hook for canary deployment strategy.
    failure: # Runs on failure of any step.
      steps: [ task | script | powershell | pwsh | bash | checkout | download | downloadBuild | getPackage | publish | template | reviewApp ] # A list of steps to run.
      pool: string | pool # Pool where post on failure steps will run.
    success: # Runs on success of all of the steps.
      steps: [ task | script | powershell | pwsh | bash | checkout | download | downloadBuild | getPackage | publish | template | reviewApp ] # A list of steps to run.
      pool: string | pool # Pool where on success steps will run.
Definitions that reference this definition:jobs.deployment.strategy
Properties
incrementsstring list.Maximum batch size for deployment.
increments
preDeploypreDeployHook.Pre deploy hook for canary deployment strategy.
preDeploy
deploydeployHook.Deploy hook for canary deployment strategy.
deploy
routeTrafficrouteTrafficHook.Route traffic hook for canary deployment strategy.
routeTraffic
postRouteTrafficpostRouteTrafficHook.Post route traffic hook for canary deployment strategy.
postRouteTraffic
ononSuccessOrFailureHook.On success or failure hook for canary deployment strategy.
on
Remarks
Canary deployment strategy is an advanced deployment strategy that helps mitigate the risk involved in rolling out new versions of applications. By using this strategy, you can roll out the changes to a small subset of servers first. As you gain more confidence in the new version, you can release it to more servers in your infrastructure and route more traffic to it.
Canary deployment strategy supports thepreDeploylifecycle hook (executed once) and iterates with thedeploy,routeTraffic, andpostRouteTrafficlifecycle hooks. It then exits with either thesuccessorfailurehook.
preDeploy
deploy
routeTraffic
postRouteTraffic
success
failure
The following variables are available in this strategy:
strategy.name: Name of the strategy. For example, canary.strategy.action: The action to be performed on the Kubernetes cluster. For example, deploy, promote, or reject.strategy.increment: The increment value used in the current interaction. This variable is available only indeploy,routeTraffic, andpostRouteTrafficlifecycle hooks.
strategy.name
strategy.action
strategy.increment
deploy
routeTraffic
postRouteTraffic
Descriptions of lifecycle hooks
preDeploy: Used to run steps that initialize resources before application deployment starts.
preDeploy
deploy: Used to run steps that deploy your application. Download artifact task will be auto injected only in thedeployhook for deployment jobs. To stop downloading artifacts, use- download: noneor choose specific artifacts to download by specifyingDownload Pipeline Artifact task.
deploy
deploy
- download: none
routeTraffic: Used to run steps that serve the traffic to the updated version.
routeTraffic
postRouteTraffic: Used to run the steps after the traffic is routed. Typically, these tasks monitor the health of the updated version for defined interval.
postRouteTraffic
on: failureoron: success: Used to run steps for rollback actions or clean-up.
on: failure
on: success
Examples
In the following example, the canary strategy for AKS will first deploy the changes with 10 percent pods, followed by 20 percent, while monitoring the health duringpostRouteTraffic. If all goes well, it will promote to 100 percent.
postRouteTraffic
jobs: 
- deployment: 
  environment: smarthotel-dev.bookings
  pool: 
    name: smarthotel-devPool
  strategy:                  
    canary:      
      increments: [10,20]  
      preDeploy:                                     
        steps:           
        - script: initialize, cleanup....   
      deploy:             
        steps: 
        - script: echo deploy updates... 
â¯â¯â¯â¯â¯â¯â¯â¯-â¯task:â¯KubernetesManifest@0 
â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯inputs: 
â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯action:â¯$(strategy.action)â¯â¯â¯â¯â¯â¯ 
â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯namespace:â¯'default' 
â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯strategy:â¯$(strategy.name) 
â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯percentage:â¯$(strategy.increment) 
â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯manifests:â¯'manifest.yml' 
      postRouteTraffic: 
        pool: server 
        steps:           
        - script: echo monitor application health...   
      on: 
        failure: 
          steps: 
          - script: echo clean-up, rollback...   
        success: 
          steps: 
          - script: echo checks passed, notify...
jobs: 
- deployment: 
  environment: smarthotel-dev.bookings
  pool: 
    name: smarthotel-devPool
  strategy:                  
    canary:      
      increments: [10,20]  
      preDeploy:                                     
        steps:           
        - script: initialize, cleanup....   
      deploy:             
        steps: 
        - script: echo deploy updates... 
â¯â¯â¯â¯â¯â¯â¯â¯-â¯task:â¯KubernetesManifest@0 
â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯inputs: 
â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯action:â¯$(strategy.action)â¯â¯â¯â¯â¯â¯ 
â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯namespace:â¯'default' 
â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯strategy:â¯$(strategy.name) 
â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯percentage:â¯$(strategy.increment) 
â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯â¯manifests:â¯'manifest.yml' 
      postRouteTraffic: 
        pool: server 
        steps:           
        - script: echo monitor application health...   
      on: 
        failure: 
          steps: 
          - script: echo clean-up, rollback...   
        success: 
          steps: 
          - script: echo checks passed, notify...
See also
Deployment jobs
Feedback
Was this page helpful?
Additional resources