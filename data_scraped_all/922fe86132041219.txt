Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Microsoft.DBforPostgreSQL flexibleServers
Article
2024-12-09
2 contributors
In this article
Latest
2024-11-01-preview
2024-08-01
2024-03-01-preview
2023-12-01-preview
2023-06-01-preview
2023-03-01-preview
2022-12-01
2022-03-08-preview
2022-01-20-preview
2021-06-01
2021-06-01-preview
2020-02-14-preview
Bicep resource definition
The flexibleServers resource type can be deployed with operations that target:
Resource groups- Seeresource group deployment commands
For a list of changed properties in each API version, seechange log.
Resource format
To create a Microsoft.DBforPostgreSQL/flexibleServers resource, add the following Bicep to your template.
resource symbolicname 'Microsoft.DBforPostgreSQL/flexibleServers@2024-11-01-preview' = {
  identity: {
    principalId: 'string'
    type: 'string'
    userAssignedIdentities: {
      {customized property}: {
        clientId: 'string'
        principalId: 'string'
      }
    }
  }
  location: 'string'
  name: 'string'
  properties: {
    administratorLogin: 'string'
    administratorLoginPassword: 'string'
    authConfig: {
      activeDirectoryAuth: 'string'
      passwordAuth: 'string'
      tenantId: 'string'
    }
    availabilityZone: 'string'
    backup: {
      backupRetentionDays: int
      geoRedundantBackup: 'string'
    }
    cluster: {
      clusterSize: int
    }
    createMode: 'string'
    dataEncryption: {
      geoBackupKeyURI: 'string'
      geoBackupUserAssignedIdentityId: 'string'
      primaryKeyURI: 'string'
      primaryUserAssignedIdentityId: 'string'
      type: 'string'
    }
    highAvailability: {
      mode: 'string'
      standbyAvailabilityZone: 'string'
    }
    maintenanceWindow: {
      customWindow: 'string'
      dayOfWeek: int
      startHour: int
      startMinute: int
    }
    network: {
      delegatedSubnetResourceId: 'string'
      privateDnsZoneArmResourceId: 'string'
      publicNetworkAccess: 'string'
    }
    pointInTimeUTC: 'string'
    replica: {
      promoteMode: 'string'
      promoteOption: 'string'
      role: 'string'
    }
    replicationRole: 'string'
    sourceServerResourceId: 'string'
    storage: {
      autoGrow: 'string'
      iops: int
      storageSizeGB: int
      throughput: int
      tier: 'string'
      type: 'string'
    }
    version: 'string'
  }
  sku: {
    name: 'string'
    tier: 'string'
  }
  tags: {
    {customized property}: 'string'
  }
}
resource symbolicname 'Microsoft.DBforPostgreSQL/flexibleServers@2024-11-01-preview' = {
  identity: {
    principalId: 'string'
    type: 'string'
    userAssignedIdentities: {
      {customized property}: {
        clientId: 'string'
        principalId: 'string'
      }
    }
  }
  location: 'string'
  name: 'string'
  properties: {
    administratorLogin: 'string'
    administratorLoginPassword: 'string'
    authConfig: {
      activeDirectoryAuth: 'string'
      passwordAuth: 'string'
      tenantId: 'string'
    }
    availabilityZone: 'string'
    backup: {
      backupRetentionDays: int
      geoRedundantBackup: 'string'
    }
    cluster: {
      clusterSize: int
    }
    createMode: 'string'
    dataEncryption: {
      geoBackupKeyURI: 'string'
      geoBackupUserAssignedIdentityId: 'string'
      primaryKeyURI: 'string'
      primaryUserAssignedIdentityId: 'string'
      type: 'string'
    }
    highAvailability: {
      mode: 'string'
      standbyAvailabilityZone: 'string'
    }
    maintenanceWindow: {
      customWindow: 'string'
      dayOfWeek: int
      startHour: int
      startMinute: int
    }
    network: {
      delegatedSubnetResourceId: 'string'
      privateDnsZoneArmResourceId: 'string'
      publicNetworkAccess: 'string'
    }
    pointInTimeUTC: 'string'
    replica: {
      promoteMode: 'string'
      promoteOption: 'string'
      role: 'string'
    }
    replicationRole: 'string'
    sourceServerResourceId: 'string'
    storage: {
      autoGrow: 'string'
      iops: int
      storageSizeGB: int
      throughput: int
      tier: 'string'
      type: 'string'
    }
    version: 'string'
  }
  sku: {
    name: 'string'
    tier: 'string'
  }
  tags: {
    {customized property}: 'string'
  }
}
Property Values
AuthConfig
Backup
Cluster
DataEncryption
HighAvailability
MaintenanceWindow
Microsoft.DBforPostgreSQL/flexibleServers
^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*
Network
Replica
ServerProperties
Sku
Storage
TrackedResourceTags
UserAssignedIdentity
UserAssignedIdentityMap
UserIdentity
Usage Examples
Azure Verified Modules
The followingAzure Verified Modulescan be used to deploy this resource type.
Azure Quickstart Samples
The followingAzure Quickstart templatescontain Bicep samples for deploying this resource type.
ARM template resource definition
The flexibleServers resource type can be deployed with operations that target:
Resource groups- Seeresource group deployment commands
For a list of changed properties in each API version, seechange log.
Resource format
To create a Microsoft.DBforPostgreSQL/flexibleServers resource, add the following JSON to your template.
{
  "type": "Microsoft.DBforPostgreSQL/flexibleServers",
  "apiVersion": "2024-11-01-preview",
  "name": "string",
  "identity": {
    "principalId": "string",
    "type": "string",
    "userAssignedIdentities": {
      "{customized property}": {
        "clientId": "string",
        "principalId": "string"
      }
    }
  },
  "location": "string",
  "properties": {
    "administratorLogin": "string",
    "administratorLoginPassword": "string",
    "authConfig": {
      "activeDirectoryAuth": "string",
      "passwordAuth": "string",
      "tenantId": "string"
    },
    "availabilityZone": "string",
    "backup": {
      "backupRetentionDays": "int",
      "geoRedundantBackup": "string"
    },
    "cluster": {
      "clusterSize": "int"
    },
    "createMode": "string",
    "dataEncryption": {
      "geoBackupKeyURI": "string",
      "geoBackupUserAssignedIdentityId": "string",
      "primaryKeyURI": "string",
      "primaryUserAssignedIdentityId": "string",
      "type": "string"
    },
    "highAvailability": {
      "mode": "string",
      "standbyAvailabilityZone": "string"
    },
    "maintenanceWindow": {
      "customWindow": "string",
      "dayOfWeek": "int",
      "startHour": "int",
      "startMinute": "int"
    },
    "network": {
      "delegatedSubnetResourceId": "string",
      "privateDnsZoneArmResourceId": "string",
      "publicNetworkAccess": "string"
    },
    "pointInTimeUTC": "string",
    "replica": {
      "promoteMode": "string",
      "promoteOption": "string",
      "role": "string"
    },
    "replicationRole": "string",
    "sourceServerResourceId": "string",
    "storage": {
      "autoGrow": "string",
      "iops": "int",
      "storageSizeGB": "int",
      "throughput": "int",
      "tier": "string",
      "type": "string"
    },
    "version": "string"
  },
  "sku": {
    "name": "string",
    "tier": "string"
  },
  "tags": {
    "{customized property}": "string"
  }
}
{
  "type": "Microsoft.DBforPostgreSQL/flexibleServers",
  "apiVersion": "2024-11-01-preview",
  "name": "string",
  "identity": {
    "principalId": "string",
    "type": "string",
    "userAssignedIdentities": {
      "{customized property}": {
        "clientId": "string",
        "principalId": "string"
      }
    }
  },
  "location": "string",
  "properties": {
    "administratorLogin": "string",
    "administratorLoginPassword": "string",
    "authConfig": {
      "activeDirectoryAuth": "string",
      "passwordAuth": "string",
      "tenantId": "string"
    },
    "availabilityZone": "string",
    "backup": {
      "backupRetentionDays": "int",
      "geoRedundantBackup": "string"
    },
    "cluster": {
      "clusterSize": "int"
    },
    "createMode": "string",
    "dataEncryption": {
      "geoBackupKeyURI": "string",
      "geoBackupUserAssignedIdentityId": "string",
      "primaryKeyURI": "string",
      "primaryUserAssignedIdentityId": "string",
      "type": "string"
    },
    "highAvailability": {
      "mode": "string",
      "standbyAvailabilityZone": "string"
    },
    "maintenanceWindow": {
      "customWindow": "string",
      "dayOfWeek": "int",
      "startHour": "int",
      "startMinute": "int"
    },
    "network": {
      "delegatedSubnetResourceId": "string",
      "privateDnsZoneArmResourceId": "string",
      "publicNetworkAccess": "string"
    },
    "pointInTimeUTC": "string",
    "replica": {
      "promoteMode": "string",
      "promoteOption": "string",
      "role": "string"
    },
    "replicationRole": "string",
    "sourceServerResourceId": "string",
    "storage": {
      "autoGrow": "string",
      "iops": "int",
      "storageSizeGB": "int",
      "throughput": "int",
      "tier": "string",
      "type": "string"
    },
    "version": "string"
  },
  "sku": {
    "name": "string",
    "tier": "string"
  },
  "tags": {
    "{customized property}": "string"
  }
}
Property Values
AuthConfig
Backup
Cluster
DataEncryption
HighAvailability
MaintenanceWindow
Microsoft.DBforPostgreSQL/flexibleServers
^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*
Network
Replica
ServerProperties
Sku
Storage
TrackedResourceTags
UserAssignedIdentity
UserAssignedIdentityMap
UserIdentity
Usage Examples
Azure Quickstart Templates
The followingAzure Quickstart templatesdeploy this resource type.
Terraform (AzAPI provider) resource definition
The flexibleServers resource type can be deployed with operations that target:
Resource groups
For a list of changed properties in each API version, seechange log.
Resource format
To create a Microsoft.DBforPostgreSQL/flexibleServers resource, add the following Terraform to your template.
resource "azapi_resource" "symbolicname" {
  type = "Microsoft.DBforPostgreSQL/flexibleServers@2024-11-01-preview"
  name = "string"
  identity = {
    principalId = "string"
    type = "string"
    userAssignedIdentities = {
      {customized property} = {
        clientId = "string"
        principalId = "string"
      }
    }
  }
  location = "string"
  tags = {
    {customized property} = "string"
  }
  body = {
    properties = {
      administratorLogin = "string"
      administratorLoginPassword = "string"
      authConfig = {
        activeDirectoryAuth = "string"
        passwordAuth = "string"
        tenantId = "string"
      }
      availabilityZone = "string"
      backup = {
        backupRetentionDays = int
        geoRedundantBackup = "string"
      }
      cluster = {
        clusterSize = int
      }
      createMode = "string"
      dataEncryption = {
        geoBackupKeyURI = "string"
        geoBackupUserAssignedIdentityId = "string"
        primaryKeyURI = "string"
        primaryUserAssignedIdentityId = "string"
        type = "string"
      }
      highAvailability = {
        mode = "string"
        standbyAvailabilityZone = "string"
      }
      maintenanceWindow = {
        customWindow = "string"
        dayOfWeek = int
        startHour = int
        startMinute = int
      }
      network = {
        delegatedSubnetResourceId = "string"
        privateDnsZoneArmResourceId = "string"
        publicNetworkAccess = "string"
      }
      pointInTimeUTC = "string"
      replica = {
        promoteMode = "string"
        promoteOption = "string"
        role = "string"
      }
      replicationRole = "string"
      sourceServerResourceId = "string"
      storage = {
        autoGrow = "string"
        iops = int
        storageSizeGB = int
        throughput = int
        tier = "string"
        type = "string"
      }
      version = "string"
    }
    sku = {
      name = "string"
      tier = "string"
    }
  }
}
resource "azapi_resource" "symbolicname" {
  type = "Microsoft.DBforPostgreSQL/flexibleServers@2024-11-01-preview"
  name = "string"
  identity = {
    principalId = "string"
    type = "string"
    userAssignedIdentities = {
      {customized property} = {
        clientId = "string"
        principalId = "string"
      }
    }
  }
  location = "string"
  tags = {
    {customized property} = "string"
  }
  body = {
    properties = {
      administratorLogin = "string"
      administratorLoginPassword = "string"
      authConfig = {
        activeDirectoryAuth = "string"
        passwordAuth = "string"
        tenantId = "string"
      }
      availabilityZone = "string"
      backup = {
        backupRetentionDays = int
        geoRedundantBackup = "string"
      }
      cluster = {
        clusterSize = int
      }
      createMode = "string"
      dataEncryption = {
        geoBackupKeyURI = "string"
        geoBackupUserAssignedIdentityId = "string"
        primaryKeyURI = "string"
        primaryUserAssignedIdentityId = "string"
        type = "string"
      }
      highAvailability = {
        mode = "string"
        standbyAvailabilityZone = "string"
      }
      maintenanceWindow = {
        customWindow = "string"
        dayOfWeek = int
        startHour = int
        startMinute = int
      }
      network = {
        delegatedSubnetResourceId = "string"
        privateDnsZoneArmResourceId = "string"
        publicNetworkAccess = "string"
      }
      pointInTimeUTC = "string"
      replica = {
        promoteMode = "string"
        promoteOption = "string"
        role = "string"
      }
      replicationRole = "string"
      sourceServerResourceId = "string"
      storage = {
        autoGrow = "string"
        iops = int
        storageSizeGB = int
        throughput = int
        tier = "string"
        type = "string"
      }
      version = "string"
    }
    sku = {
      name = "string"
      tier = "string"
    }
  }
}
Property Values
AuthConfig
Backup
Cluster
DataEncryption
HighAvailability
MaintenanceWindow
Microsoft.DBforPostgreSQL/flexibleServers
^[a-zA-Z0-9]+(-[a-zA-Z0-9]+)*
Network
Replica
ServerProperties
Sku
Storage
TrackedResourceTags
UserAssignedIdentity
UserAssignedIdentityMap
UserIdentity
Usage Examples
Azure Verified Modules
The followingAzure Verified Modulescan be used to deploy this resource type.
Feedback
Was this page helpful?
Additional resources