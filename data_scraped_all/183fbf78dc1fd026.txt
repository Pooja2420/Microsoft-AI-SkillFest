Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
parse_json()
Article
2025-03-30
6 contributors
In this article
Applies to: âMicrosoft FabricâAzure Data ExplorerâAzure MonitorâMicrosoft Sentinel
Interprets astringas a JSON value and returns the value asdynamic. If possible, the value is converted into relevantdata types.  For strict parsing with no data type conversion, useextract()orextract_json()functions.
string
dynamic
It's better to use the parse_json() function over theextract_json()function when you need to extract more than one element of a JSON compound object. Usedynamic()when possible.
Deprecated aliases:parsejson(), toobject(), todynamic()
Syntax
parse_json(json)
parse_json(
)
Learn more aboutsyntax conventions.
Parameters
string
Returns
An object of typedynamicthat is determined by the value ofjson:
dynamic
Ifjsonis of typedynamic, its value is used as-is.
dynamic
Ifjsonis of typestring, and is aproperly formatted JSON string, then the string is parsed, and the value produced is returned.
string
Ifjsonis of typestring, but it isn't aproperly formatted JSON string, then the returned value is an object of typedynamicthat holds the originalstringvalue.
string
dynamic
string
Examples
The examples in this section show how to use the syntax to help you get started.
Duration metrics parsing
In the following example, whencontext_custom_metricsis astringthat looks like this:
context_custom_metrics
string
{"duration":{"value":118.0,"count":5.0,"min":100.0,"max":150.0,"stdDev":0.0,"sampledValue":118.0,"sum":118.0}}
{"duration":{"value":118.0,"count":5.0,"min":100.0,"max":150.0,"stdDev":0.0,"sampledValue":118.0,"sum":118.0}}
Then the following query retrieves the value of thedurationslot in the object, and from that it retrieves two slots,duration.valueandduration.min(118.0and110.0, respectively).
duration
duration.value
duration.min
118.0
110.0
Run the query
datatable(context_custom_metrics:string)
[
    '{"duration":{"value":118.0,"count":5.0,"min":100.0,"max":150.0,"stdDev":0.0,"sampledValue":118.0,"sum":118.0}}'
]
| extend d = parse_json(context_custom_metrics)
| extend duration_value = d.duration.value, duration_min = d.duration.min
datatable(context_custom_metrics:string)
[
    '{"duration":{"value":118.0,"count":5.0,"min":100.0,"max":150.0,"stdDev":0.0,"sampledValue":118.0,"sum":118.0}}'
]
| extend d = parse_json(context_custom_metrics)
| extend duration_value = d.duration.value, duration_min = d.duration.min
Output
Nested JSON parsing
It's common to have a JSON string describing a property bag in which one of the "slots" is another JSON string.
For example:
Run the query
let d='{"a":123, "b":"{\\"c\\":456}"}';
print d
let d='{"a":123, "b":"{\\"c\\":456}"}';
print d
Output
In such cases, it isn't only necessary to invokeparse_jsontwice, but also to make sure that in the second call,tostringis used. Otherwise, the second call toparse_jsonjust passes on the input to the output as-is, because its declared type isdynamic.
parse_json
tostring
parse_json
dynamic
Run the query
let d='{"a":123, "b":"{\\"c\\":456}"}';
print d_b_c=parse_json(tostring(parse_json(d).b)).c
let d='{"a":123, "b":"{\\"c\\":456}"}';
print d_b_c=parse_json(tostring(parse_json(d).b)).c
Ouput
Related content
parse operator
bag_unpack plugin
mv-expand operator
Feedback
Was this page helpful?
Additional resources