Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Introduction to Application Insights - OpenTelemetry observability
Article
2025-04-22
30 contributors
In this article
Azure Monitor Application Insights is an OpenTelemetry feature ofAzure Monitorthat offers application performance monitoring (APM) for live web applications. Integrating with OpenTelemetry (OTel) provides a vendor-neutral approach to collecting and analyzing telemetry data, enabling comprehensive observability of your applications.

Application Insights Experiences
Application Insights supports OpenTelemetry (OTel) to collect telemetry data in a standardized format across platforms. Integration with Azure services allows for efficient monitoring and diagnostics, improving application observability and performance.
Investigate
Application dashboard: An at-a-glance assessment of your application's health and performance.
Application map: A visual overview of application architecture and components' interactions.
Live metrics: A real-time analytics dashboard for insight into application activity and performance.
Transaction search: Trace and diagnose transactions to identify issues and optimize performance.
Availability view: Proactively monitor and test the availability and responsiveness of application endpoints.
Failures view: Identify and analyze failures in your application to minimize downtime.
Performance view: Review application performance metrics and potential bottlenecks.
Monitoring
Alerts: Monitor a wide range of aspects of your application and trigger various actions.
Metrics: Dive deep into metrics data to understand usage patterns and trends.
Diagnostic settings: Configure streaming export of platform logs and metrics to the destination of your choice.
Logs: Retrieve, consolidate, and analyze all data collected into Azure Monitoring Logs.
Workbooks: Create interactive reports and dashboards that visualize application monitoring data.
Usage
Users, sessions, and events: Determine when, where, and how users interact with your web app.
Funnels: Analyze conversion rates to identify where users progress or drop off in the funnel.
Flows: Visualize user paths on your site to identify high engagement areas and exit points.
Cohorts: Group users by shared characteristics to simplify trend identification, segmentation, and performance troubleshooting.
Code analysis
.NET Profiler: Capture, identify, and view performance traces for your application.
Code optimizations: Harness AI to create better and more efficient applications.
Snapshot debugger: Automatically collect debug snapshots when exceptions occur in .NET application
Logic model
The logic model diagram visualizes components of Application Insights and how they interact.

Note
Firewall settings must be adjusted for data to reach ingestion endpoints. For more information, seeAzure Monitor endpoint access and firewall configuration.
Supported languages
This section outlines supported scenarios.
For more information about instrumenting applications to enable Application Insights, seedata collection basics.
Automatic instrumentation (enable without code changes)
Autoinstrumentation supported environments and languages
Manual instrumentation
ASP.NET Core
.NET
Java
Node.js
Python
JavaScriptReactReact NativeAngular
React
React Native
Angular
ASP.NET Core
ASP.NET
Node.js
Supported platforms and frameworks
This section lists all supported platforms and frameworks.
Azure Virtual Machines and Azure Virtual Machine Scale Sets
Azure App Service
Azure Functions
Azure Spring Apps
Azure Cloud Services, including both web and worker roles
ILogger
ILogger
Log4Net, NLog, or System.Diagnostics.Trace
Log4J, Logback, or java.util.logging
Log4J
LogStash plug-in
Azure Monitor
Integrate Log Analytics with Power BI
Unsupported Software Development Kits (SDKs)
Many community-supported Application Insights SDKs exist, but Microsoft only provides support for instrumentation options listed in this article.
Troubleshooting
For assistance with troubleshooting Application Insights, seeour dedicated troubleshooting documentation.
Frequently asked questions
This section provides answers to common questions.
How do I instrument an application?
For detailed information about instrumenting applications to enable Application Insights, seedata collection basics.
How do I use Application Insights?
After enabling Application Insights byinstrumenting an application, we suggest first checking outLive metricsand theApplication map.
What telemetry does Application Insights collect?
From server web apps:
HTTP requests.
Dependencies. Calls to SQL databases, HTTP calls to external services, Azure Cosmos DB, Azure Table Storage, Azure Blob Storage, and Azure Queue Storage.
Exceptionsand stack traces.
Performance counters: Performance counters are available when using:Azure Monitor Application Insights agentAzure monitoring for VMs or virtual machine scale setsApplication Insightscollectdwriter.
Azure Monitor Application Insights agent
Azure monitoring for VMs or virtual machine scale sets
Application Insightscollectdwriter.
collectd
Custom events and metricsthat you code.
Trace logsif you configure the appropriate collector.
Fromclient webpages:
Uncaught exceptions in your app, including information onStack traceException details and message accompanying the errorLine & column number of errorURL where error was raisedNetwork Dependency Requests made by your app XML Http Request (XHR) and Fetch (fetch collection is disabled by default) requests, include information on:Url of dependency sourceCommand & Method used to request the dependencyDuration of the requestResult code and success status of the requestID (if any) of user making the requestCorrelation context (if any) where request is made
Uncaught exceptions in your app, including information on
Stack trace
Exception details and message accompanying the error
Line & column number of error
URL where error was raised
Network Dependency Requests made by your app XML Http Request (XHR) and Fetch (fetch collection is disabled by default) requests, include information on:Url of dependency sourceCommand & Method used to request the dependencyDuration of the requestResult code and success status of the requestID (if any) of user making the requestCorrelation context (if any) where request is made
Url of dependency source
Command & Method used to request the dependency
Duration of the request
Result code and success status of the request
ID (if any) of user making the request
Correlation context (if any) where request is made
User information (for example, Location, network, IP)
User information (for example, Location, network, IP)
Device information (for example, Browser, OS, version, language, model)
Device information (for example, Browser, OS, version, language, model)
Session informationNoteFor some applications, such as single-page applications (SPAs), the duration isn't always recorded and, in those cases, defaults to 0.For more information, seeData collection, retention, and storage in Application Insights.
Session information
Note
For some applications, such as single-page applications (SPAs), the duration isn't always recorded and, in those cases, defaults to 0.
For more information, seeData collection, retention, and storage in Application Insights.
From other sources, if you configure them:
Azure diagnostics
Import to Log Analytics
Log Analytics
Logstash
How many Application Insights resources should I deploy?
To understand the number of Application Insights resources required to cover your application or components across environments, see theApplication Insights deployment planning guide.
How can I manage Application Insights resources with PowerShell?
You canwrite PowerShell scriptsby using Azure Resource Monitor to:
Create and update Application Insights resources.
Set the pricing plan.
Get the instrumentation key.
Add a metric alert.
Add an availability test.
You can't set up a metrics explorer report or set up continuous export.
How can I query Application Insights telemetry?
Use theREST APIto runLog Analyticsqueries.
Can I send telemetry to the Application Insights portal?
We recommend theAzure Monitor OpenTelemetry Distro.
Theingestion schemaandendpoint protocolare available publicly.
How long does it take for telemetry to be collected?
Most Application Insights data has a latency of under 5 minutes. Some data can take longer, which is typical for larger log files. See theApplication Insights service-level agreement.
How does Application Insights handle data collection, retention, storage, and privacy?
Application Insights collects telemetry about your app, including web server telemetry, web page telemetry, and performance counters. This data can be used to monitor your app's performance, health, and usage. You can select the location when youcreate a new Application Insights resource.
Data is sent to an Application InsightsLog Analytics workspace. You can choose the retention period for raw data, from 30 to 730 days. Aggregated data is retained for 90 days, and debug snapshots are retained for 15 days.
Application Insights doesn't handle sensitive data by default. We recommend you don't put sensitive data in URLs as plain text and ensure your custom code doesn't collect personal or other sensitive details. During development and testing, check the sent data in your IDE and browser's debugging output windows.
For archived information, seeData collection, retention, and storage in Application Insights.
What is the Application Insights pricing model?
Application Insights is billed through the Log Analytics workspace into which its log data ingested. The default Pay-as-you-go Log Analytics pricing tier includes 5 GB per month of free data allowance per billing account. Learn more aboutAzure Monitor logs pricing options.
Are there data transfer charges between an Azure web app and Application Insights?
If your Azure web app is hosted in a datacenter where there's an Application Insights collection endpoint, there's no charge.
If there's no collection endpoint in your host datacenter, your app's telemetry incursAzure outgoing charges.
This answer depends on the distribution of our endpoints,noton where your Application Insights resource is hosted.
Do I incur network costs if my Application Insights resource is monitoring an Azure resource (that is, telemetry producer) in a different region?
Yes, you can incur more network costs, which vary depending on the region the telemetry is coming from and where it's going. Refer toAzure bandwidth pricingfor details.
If you're seeing unexpected charges or high costs in Application Insights, this guide can help. It covers common causes like high telemetry volume, data ingestion spikes, and misconfigured sampling. It's especially useful if you're troubleshooting issues related to cost spikes, telemetry volume, sampling not working, data caps, high ingestion, or unexpected billing. To get started, seeTroubleshoot high data ingestion in Application Insights.
What TLS versions are supported?
Application Insights uses Transport Layer Security (TLS) 1.2 and 1.3.
Important
On 1 March 2025, Azure will retire legacy versions of TLS across all services. At that time, Application Insights no longer supports TLS 1.0, TLS 1.1, and the listed legacy TLS 1.2/1.3 cipher suites and elliptic curves.
For any general questions around the legacy TLS problem, seeSolving TLS problemsandAzure Resource Manager TLS Support.
Help and support
Azure technical support
For Azure support issues, open anAzure support ticket.
General Questions
Post general questions to theMicrosoft Questions and Answers forum.
Coding Questions
Post coding questions toStack Overflowby using anazure-application-insightstag.
azure-application-insights
Feedback Community
Leave product feedback for the engineering team in theFeedback Community.
Next steps
Data collection basics
Workspace-based resources
Automatic instrumentation overview
Application dashboard
Application Map
Live metrics
Transaction search
Availability overview
Users, sessions, and events
Feedback
Was this page helpful?
Additional resources