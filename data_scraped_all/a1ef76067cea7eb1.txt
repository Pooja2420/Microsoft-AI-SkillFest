Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Microsoft.Logic integrationAccounts/certificates
Article
2024-12-09
2 contributors
In this article
Latest
2019-05-01
2018-07-01-preview
2016-06-01
2015-08-01-preview
Bicep resource definition
The integrationAccounts/certificates resource type can be deployed with operations that target:
Resource groups- Seeresource group deployment commands
For a list of changed properties in each API version, seechange log.
Resource format
To create a Microsoft.Logic/integrationAccounts/certificates resource, add the following Bicep to your template.
resource symbolicname 'Microsoft.Logic/integrationAccounts/certificates@2019-05-01' = {
  parent: resourceSymbolicName
  location: 'string'
  name: 'string'
  properties: {
    key: {
      keyName: 'string'
      keyVault: {
        id: 'string'
      }
      keyVersion: 'string'
    }
    metadata: any(...)
    publicCertificate: 'string'
  }
  tags: {
    {customized property}: 'string'
  }
}
resource symbolicname 'Microsoft.Logic/integrationAccounts/certificates@2019-05-01' = {
  parent: resourceSymbolicName
  location: 'string'
  name: 'string'
  properties: {
    key: {
      keyName: 'string'
      keyVault: {
        id: 'string'
      }
      keyVersion: 'string'
    }
    metadata: any(...)
    publicCertificate: 'string'
  }
  tags: {
    {customized property}: 'string'
  }
}
Property Values
IntegrationAccountCertificateProperties
KeyVaultKeyReference
KeyVaultKeyReferenceKeyVault
Microsoft.Logic/integrationAccounts/certificates
ResourceTags
ARM template resource definition
The integrationAccounts/certificates resource type can be deployed with operations that target:
Resource groups- Seeresource group deployment commands
For a list of changed properties in each API version, seechange log.
Resource format
To create a Microsoft.Logic/integrationAccounts/certificates resource, add the following JSON to your template.
{
  "type": "Microsoft.Logic/integrationAccounts/certificates",
  "apiVersion": "2019-05-01",
  "name": "string",
  "location": "string",
  "properties": {
    "key": {
      "keyName": "string",
      "keyVault": {
        "id": "string"
      },
      "keyVersion": "string"
    },
    "metadata": {},
    "publicCertificate": "string"
  },
  "tags": {
    "{customized property}": "string"
  }
}
{
  "type": "Microsoft.Logic/integrationAccounts/certificates",
  "apiVersion": "2019-05-01",
  "name": "string",
  "location": "string",
  "properties": {
    "key": {
      "keyName": "string",
      "keyVault": {
        "id": "string"
      },
      "keyVersion": "string"
    },
    "metadata": {},
    "publicCertificate": "string"
  },
  "tags": {
    "{customized property}": "string"
  }
}
Property Values
IntegrationAccountCertificateProperties
KeyVaultKeyReference
KeyVaultKeyReferenceKeyVault
Microsoft.Logic/integrationAccounts/certificates
ResourceTags
Usage Examples
Terraform (AzAPI provider) resource definition
The integrationAccounts/certificates resource type can be deployed with operations that target:
Resource groups
For a list of changed properties in each API version, seechange log.
Resource format
To create a Microsoft.Logic/integrationAccounts/certificates resource, add the following Terraform to your template.
resource "azapi_resource" "symbolicname" {
  type = "Microsoft.Logic/integrationAccounts/certificates@2019-05-01"
  name = "string"
  location = "string"
  tags = {
    {customized property} = "string"
  }
  body = {
    properties = {
      key = {
        keyName = "string"
        keyVault = {
          id = "string"
        }
        keyVersion = "string"
      }
      metadata = ?
      publicCertificate = "string"
    }
  }
}
resource "azapi_resource" "symbolicname" {
  type = "Microsoft.Logic/integrationAccounts/certificates@2019-05-01"
  name = "string"
  location = "string"
  tags = {
    {customized property} = "string"
  }
  body = {
    properties = {
      key = {
        keyName = "string"
        keyVault = {
          id = "string"
        }
        keyVersion = "string"
      }
      metadata = ?
      publicCertificate = "string"
    }
  }
}
Property Values
IntegrationAccountCertificateProperties
KeyVaultKeyReference
KeyVaultKeyReferenceKeyVault
Microsoft.Logic/integrationAccounts/certificates
ResourceTags
Feedback
Was this page helpful?
Additional resources