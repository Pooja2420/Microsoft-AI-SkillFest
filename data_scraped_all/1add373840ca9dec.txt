Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
How to authorize developer accounts by using Azure Active Directory B2C in Azure API Management
Article
2025-01-07
17 contributors
In this article
APPLIES TO: Developer | Basic v2 | Standard | Standard v2 | Premium | Premium v2
Azure Active Directory B2C is a cloud identity management solution for consumer-facing web and mobile applications. You can use it to manage access to your API Management developer portal.
In this tutorial, you'll learn the configuration required in your API Management service to integrate with Azure Active Directory B2C.
For an overview of options to secure the developer portal, seeSecure access to the API Management developer portal.
Important
This article has been updated with steps to configure an Azure AD B2C app using the Microsoft Authentication Library (MSAL).
If you previously configured an Azure AD B2C app for user sign-in using the Azure AD Authentication Library (ADAL), we recommend that youmigrate to MSAL.
Prerequisites
An Azure Active Directory B2C tenant in which to create an application. For more information, seeAzure Active Directory B2C overview.
An API Management instance. If you don't already have one,create an Azure API Management instance.
If you created your instance in a v2 tier, enable the developer portal. For more information, seeTutorial: Access and customize the developer portal.
Configure sign up and sign in user flow
In this section, you'll configure a user flow in your Azure Active Directory B2C tenant that enables users to sign up or sign in to the developer portal. Users are led down the right path depending on the context. For detailed steps, seeCreate user flows and custom policies in Azure Active Directory B2C.
In theAzure portal, access your Azure Active Directory B2C tenant.
UnderPolicies, selectUser flows>+ New user flow.
On theCreate a user flowpage, select theSign up and sign inuser flow. Select theRecommendedversion and then selectCreate.
On theCreatepage, provide the following information:Enter a unique name for the user flow.InIdentity providers, selectEmail signup.Optionally enable aMultifactor authenticationmethod orConditional accesspolicies.InUser attributes and token claims, select the following attributes and claims that you want to collect and send from the user during sign-up. SelectShow moreto view all attributes and claims.Collect attributes: Given Name, SurnameReturn claims: Given Name, Surname, Email Addresses, Userâs ObjectID
Enter a unique name for the user flow.
InIdentity providers, selectEmail signup.
Optionally enable aMultifactor authenticationmethod orConditional accesspolicies.
InUser attributes and token claims, select the following attributes and claims that you want to collect and send from the user during sign-up. SelectShow moreto view all attributes and claims.Collect attributes: Given Name, SurnameReturn claims: Given Name, Surname, Email Addresses, Userâs ObjectID
Collect attributes: Given Name, Surname
Collect attributes: Given Name, Surname
Return claims: Given Name, Surname, Email Addresses, Userâs ObjectID
Return claims: Given Name, Surname, Email Addresses, Userâs ObjectID

SelectCreate.
Configure identity provider for developer portal
In a separateAzure portaltab, navigate to your API Management instance.
In a separateAzure portaltab, navigate to your API Management instance.
UnderDeveloper portal, selectIdentities>+ Add.
UnderDeveloper portal, selectIdentities>+ Add.
In theAdd identity providerpage, selectAzure Active Directory B2C. Once selected, you'll be able to enter other necessary information.In theClient librarydropdown, selectMSAL.To add other settings, see steps later in the article.
In theAdd identity providerpage, selectAzure Active Directory B2C. Once selected, you'll be able to enter other necessary information.
In theClient librarydropdown, selectMSAL.
To add other settings, see steps later in the article.
In theAdd identity providerwindow, copy theRedirect URL.
In theAdd identity providerwindow, copy theRedirect URL.

Return to the browser tab for your Azure Active Directory B2C tenant in the Azure portal. SelectApp registrations>+ New registration.
Return to the browser tab for your Azure Active Directory B2C tenant in the Azure portal. SelectApp registrations>+ New registration.
In theRegister an applicationpage, enter your application's registration information.In theNamesection, enter an application name of your choosing.In theSupported account typessection, selectAccounts in any organizational directory (for authenticating users with user flows). For more information, seeRegister an application.InRedirect URI, selectSingle-page application (SPA)and paste the redirect URL you saved from a previous step.InPermissions, selectGrant admin consent to openid and offline_access permissions.SelectRegisterto create the application.
In theRegister an applicationpage, enter your application's registration information.
In theNamesection, enter an application name of your choosing.
In theSupported account typessection, selectAccounts in any organizational directory (for authenticating users with user flows). For more information, seeRegister an application.
InRedirect URI, selectSingle-page application (SPA)and paste the redirect URL you saved from a previous step.
InPermissions, selectGrant admin consent to openid and offline_access permissions.
SelectRegisterto create the application.

On the appOverviewpage, find theApplication (client) IDand copy the value to the clipboard.
On the appOverviewpage, find theApplication (client) IDand copy the value to the clipboard.

Switch back to the API ManagementAdd identity providerpage and paste the ID into theClient Idtext box.
Switch back to the API ManagementAdd identity providerpage and paste the ID into theClient Idtext box.
Switch back to the B2C app registration. SelectCertificates & secrets>+ New client secret.In theAdd a client secretpage, enter aDescriptionand selectAdd.Record theValuein a safe location. This secret value is never displayed again after you leave this page.
Switch back to the B2C app registration. SelectCertificates & secrets>+ New client secret.
In theAdd a client secretpage, enter aDescriptionand selectAdd.
Record theValuein a safe location. This secret value is never displayed again after you leave this page.
Switch back to the API ManagementAdd identity providerpage, and paste the key into theClient secrettext box.
Switch back to the API ManagementAdd identity providerpage, and paste the key into theClient secrettext box.
Continuing on theAdd identity providerpage:InSignin tenant, specify the domain name of the Azure Active Directory B2C tenant.TheAuthorityfield lets you control the Azure Active Directory B2C login URL to use. Set the value to<your_b2c_tenant_name>.b2clogin.com.Specify theSign-up PolicyandSign-in Policyusing the name of the user flow you created in a previous step.Optionally provide theProfile Editing PolicyandPassword Reset Policy.
Continuing on theAdd identity providerpage:
InSignin tenant, specify the domain name of the Azure Active Directory B2C tenant.
InSignin tenant, specify the domain name of the Azure Active Directory B2C tenant.
TheAuthorityfield lets you control the Azure Active Directory B2C login URL to use. Set the value to<your_b2c_tenant_name>.b2clogin.com.
TheAuthorityfield lets you control the Azure Active Directory B2C login URL to use. Set the value to<your_b2c_tenant_name>.b2clogin.com.
Specify theSign-up PolicyandSign-in Policyusing the name of the user flow you created in a previous step.
Specify theSign-up PolicyandSign-in Policyusing the name of the user flow you created in a previous step.
Optionally provide theProfile Editing PolicyandPassword Reset Policy.
Optionally provide theProfile Editing PolicyandPassword Reset Policy.

After you've specified the desired configuration, selectAdd.
After you've specified the desired configuration, selectAdd.
Republish the developer portal for the Azure AD B2C configuration to take effect. In the left menu, underDeveloper portal, selectPortal overview>Publish.
Republish the developer portal for the Azure AD B2C configuration to take effect. In the left menu, underDeveloper portal, selectPortal overview>Publish.
After the changes are saved, developers will be able to sign up for new accounts and sign in to the developer portal by using Azure Active Directory B2C.
Migrate to MSAL
If you previously configured an Azure AD B2C app for user sign-in using the ADAL, you can use the portal to migrate the app to MSAL and update the identity provider in API Management.
Update Azure AD B2C app for MSAL compatibility
For steps to update the Azure AD B2C app, seeSwitch redirect URIs to the single-page application type.
Update identity provider configuration
In the left menu of your API Management instance, underDeveloper portal, selectIdentities.
SelectAzure Active Directory B2Cfrom the list.
In theClient librarydropdown, selectMSAL.
SelectUpdate.
Republish your developer portal.
Developer portal - add Azure Active Directory B2C account authentication
Important
You need torepublish the developer portalwhen you create or update Azure Active Directory B2C configuration settings for the changes to take effect.
In the developer portal, sign-in with Azure Active Directory B2C is possible with theSign-in button: OAuthwidget. The widget is already included on the sign-in page of the default developer portal content.
To sign in by using Azure Active Directory B2C, open a new browser window and go to the developer portal. SelectSign in.
To sign in by using Azure Active Directory B2C, open a new browser window and go to the developer portal. SelectSign in.
On theSign inpage, selectAzure Active Directory B2C.
On theSign inpage, selectAzure Active Directory B2C.

You're redirected to the signup policy that you configured in the previous section. Choose to sign up by using your email address in the Active Directory B2C tenant.
You're redirected to the signup policy that you configured in the previous section. Choose to sign up by using your email address in the Active Directory B2C tenant.
When the signup is complete, you're redirected back to the developer portal. You're now signed in to the developer portal for your API Management service instance.

Although a new account is automatically created whenever a new user signs in with Azure Active Directory B2C, you may consider adding the same widget to the signup page.
TheSign-up form: OAuthwidget represents a form used for signing up with OAuth.
Related content
Azure Active Directory B2C overview
Azure Active Directory B2C: Extensible policy framework
Learn more aboutMSALandmigrating to MSAL v2
Use a Microsoft account as an identity provider in Azure Active Directory B2C
Use a Google account as an identity provider in Azure Active Directory B2C
Use a LinkedIn account as an identity provider in Azure Active Directory B2C
Use a Facebook account as an identity provider in Azure Active Directory B2C
Feedback
Was this page helpful?
Additional resources