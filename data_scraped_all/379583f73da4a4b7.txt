Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Disable basic authentication in Azure App Service deployments
Article
2025-03-31
4 contributors
In this article
This article shows you how to disable basic authentication (username and password authentication) when deploying code to Azure App Service apps.
App Service provides basic authentication for FTP and Web Deploy clients, which can connect by usingdeployment credentials. These APIs are great for browsing your site's file system, uploading drivers and utilities, and deploying with MSBuild.
However, enterprises often require deployment methods that are more secure than basic authentication, such asMicrosoft Entra IDauthentication. (For more information, seeAuthentication types by deployment method in Azure App Service.) Microsoft Entra uses OAuth 2.0 token-based authorization, which has many benefits and improvements that help mitigate basic authentication problems. For example, OAuth access tokens have a limited usable lifetime, and are specific to the applications and resources for which they're issued. They can't be reused. Microsoft Entra also lets you deploy from other Azure services by using managed identities.
Disable basic authentication
Two controls for basic authentication are available:
ForFTP deployment, basic authentication is controlled by thebasicPublishingCredentialsPolicies/ftpflag (theFTP Basic Auth Publishing Credentialsoption in the portal).
basicPublishingCredentialsPolicies/ftp
For other deployment methods that use basic authentication, such as Visual Studio, local Git, and GitHub, basic authentication is controlled by thebasicPublishingCredentialsPolicies/scmflag (theSCM Basic Auth Publishing Credentialsoption in the portal).
basicPublishingCredentialsPolicies/scm
Azure portal
Azure CLI
In theAzure portal, search for and selectApp Services, and then select your app.
In theAzure portal, search for and selectApp Services, and then select your app.
On the app's left menu, selectConfiguration>General settings.
On the app's left menu, selectConfiguration>General settings.
ForSCM Basic Auth Publishing CredentialsorFTP Basic Auth Publishing Credentials, selectOffand then selectSave.
ForSCM Basic Auth Publishing CredentialsorFTP Basic Auth Publishing Credentials, selectOffand then selectSave.

You configure two settings to disable basic authentication with the Azure CLI. One setting is for FTP. The other is for Web Deploy and Git.
To disable FTP access using basic authentication, you must have owner-level access to the app. Run the following CLI command. Replace the placeholders with your resource group name and app name:
az resource update --resource-group <group-name> --name ftp --namespace Microsoft.Web --resource-type basicPublishingCredentialsPolicies --parent sites/<app-name> --set properties.allow=false
az resource update --resource-group <group-name> --name ftp --namespace Microsoft.Web --resource-type basicPublishingCredentialsPolicies --parent sites/<app-name> --set properties.allow=false
To disable basic authentication access to the Web Deploy port and the Git deploy URLhttps://\<app-name>.scm.azurewebsites.net, run the following CLI command. Replace the placeholders with your resource group name and app name.
https://\<app-name>.scm.azurewebsites.net
az resource update --resource-group <resource-group> --name scm --namespace Microsoft.Web --resource-type basicPublishingCredentialsPolicies --parent sites/<app-name> --set properties.allow=false
az resource update --resource-group <resource-group> --name scm --namespace Microsoft.Web --resource-type basicPublishingCredentialsPolicies --parent sites/<app-name> --set properties.allow=false
To confirm that FTP access is blocked, tryto connect to your app using FTP/FTPS. You should get a "401 Unauthenticated" message.
To confirm that Git access is blocked, trylocal Git deployment. You should get an "Authentication failed" message.
Deploy without basic authentication
When you disable basic authentication, deployment methods that depend on basic authentication stop working.
The following table shows how various deployment methods behave when basic authentication is disabled, and if there's any fallback mechanism. For more information, seeAuthentication types by deployment methods in Azure App Service.
az webapp up
az webapp deploy
az webapp log deployment show
az webapp log deployment list
az webapp log download
az webapp log tail
az webapp browse
az webapp create-remote-connection
az webapp ssh
az functionapp deploy
az functionapp log deployment list
az functionapp log deployment show
az functionapp deployment source config-zip
AzureWebApp
AzureRmWebAppDeployment
AzureRmWebAppDeployment
PublishProfile
AzureRM
DeploymentType: 'webDeploy'
windows-latest
Create a custom role with no permissions for basic authentication
To prevent a lower-privileged user from enabling basic authentication for any app, you can create a custom role and assign the user to the role.
Azure portal
Azure CLI
In the Azure portal, on the top menu, search for and select the subscription in which you want to create the custom role.
In the Azure portal, on the top menu, search for and select the subscription in which you want to create the custom role.
On the left menu, selectAccess Control (IAM)>Add>Add custom role.
On the left menu, selectAccess Control (IAM)>Add>Add custom role.
Set theBasictab as you wish, and then selectNext.
Set theBasictab as you wish, and then selectNext.
In thePermissionstab, selectExclude permissions.
In thePermissionstab, selectExclude permissions.
Find and selectMicrosoft Web Apps, and then search for the following operations:OperationDescriptionmicrosoft.web/sites/basicPublishingCredentialsPolicies/ftpFTP publishing credentials for App Service appsmicrosoft.web/sites/basicPublishingCredentialsPolicies/scmSCM publishing credentials for App Service appsmicrosoft.web/sites/slots/basicPublishingCredentialsPolicies/ftpFTP publishing credentials for App Service slotsmicrosoft.web/sites/slots/basicPublishingCredentialsPolicies/scmSCM publishing credentials for App Service slots
Find and selectMicrosoft Web Apps, and then search for the following operations:
microsoft.web/sites/basicPublishingCredentialsPolicies/ftp
microsoft.web/sites/basicPublishingCredentialsPolicies/scm
microsoft.web/sites/slots/basicPublishingCredentialsPolicies/ftp
microsoft.web/sites/slots/basicPublishingCredentialsPolicies/scm
Under each of these operations, select the box forWrite, and then selectAdd. This step adds the operation asNotActionsfor the role.YourPermissionstab should look like the following screenshot:
Under each of these operations, select the box forWrite, and then selectAdd. This step adds the operation asNotActionsfor the role.
YourPermissionstab should look like the following screenshot:

SelectReview + create, and then selectCreate.
SelectReview + create, and then selectCreate.
You can now assign this role to your organization's users.
You can now assign this role to your organization's users.
For more information, seeCreate or update Azure custom roles by using the Azure portal.
In the following command, replace<role-name>and<subscription-guid>and run in Azure Cloud Shell:
az role definition create --role-definition '{
    "Name": "<role-name>",
    "IsCustom": true,
    "Description": "Prevents users from enabling basic authentication for all App Service apps or slots.",
    "NotActions": [
        "Microsoft.Web/sites/basicPublishingCredentialsPolicies/ftp/Write",
        "Microsoft.Web/sites/basicPublishingCredentialsPolicies/scm/Write",
        "Microsoft.Web/sites/slots/basicPublishingCredentialsPolicies/ftp/Write",
        "Microsoft.Web/sites/slots/basicPublishingCredentialsPolicies/scm/Write"
    ],
    "AssignableScopes": ["/subscriptions/<subscription-guid>"]
}'
az role definition create --role-definition '{
    "Name": "<role-name>",
    "IsCustom": true,
    "Description": "Prevents users from enabling basic authentication for all App Service apps or slots.",
    "NotActions": [
        "Microsoft.Web/sites/basicPublishingCredentialsPolicies/ftp/Write",
        "Microsoft.Web/sites/basicPublishingCredentialsPolicies/scm/Write",
        "Microsoft.Web/sites/slots/basicPublishingCredentialsPolicies/ftp/Write",
        "Microsoft.Web/sites/slots/basicPublishingCredentialsPolicies/scm/Write"
    ],
    "AssignableScopes": ["/subscriptions/<subscription-guid>"]
}'
You can now assign this role to your organization's users.
For more information, seeCreate or update Azure custom roles using the Azure CLI.
Monitor for basic authentication attempts
All successful and attempted logins are logged to the Azure MonitorAppServiceAuditLogslog type. To audit the attempted and successful logins on FTP and Web Deploy, follow the steps atSend logs to Azure Monitorand enable shipping of theAppServiceAuditLogslog type.
AppServiceAuditLogs
AppServiceAuditLogs
To confirm that the logs are shipped to your selected services, try logging in via FTP or Web Deploy. The following example shows a storage account log.
{
  "time": "2023-10-16T17:42:32.9322528Z",
  "ResourceId": "/SUBSCRIPTIONS/aaaa0a0a-bb1b-cc2c-dd3d-eeeeee4e4e4e/RESOURCEGROUPS/MYRESOURCEGROUP/PROVIDERS/MICROSOFT.WEB/SITES/MY-DEMO-APP",
  "Category": "AppServiceAuditLogs",
  "OperationName": "Authorization",
  "Properties": {
    "User": "$my-demo-app",
    "UserDisplayName": "$my-demo-app",
    "UserAddress": "24.19.191.170",
    "Protocol": "FTP"
  }
}
Basic authentication-related policies
Azure Policycan help you enforce organizational standards and assess compliance at scale. You can use Azure Policy to audit for any apps that still use basic authentication, and remediate any noncompliant resources. The following are built-in policies for auditing and remediating basic authentication on App Service:
Audit policy for FTP
Audit policy for SCM
Remediation policy for FTP
Remediation policy for SCM
The following are corresponding policies for slots:
Audit policy for FTP
Audit policy for SCM
Remediation policy for FTP
Remediation policy for SCM
Frequently asked questions
Visual Studio requires basic authentication to deploy to Azure App Service. The warning reminds you that the configuration on your app changed and you can no longer deploy to it. Either you disabled basic authentication on the app yourself, or your organization policy enforces that basic authentication is disabled for App Service apps.
Feedback
Was this page helpful?
Additional resources