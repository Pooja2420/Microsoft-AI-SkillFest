Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Monitor Azure Cosmos DB
Article
2024-08-14
5 contributors
In this article
This article describes:
The types of monitoring data you can collect for this service.
Ways to analyze that data.
Note
If you're already familiar with this service and/or Azure Monitor and just want to know how to analyze monitoring data, see theAnalyzesection near the end of this article.
When you have critical applications and business processes that rely on Azure resources, you need to monitor and get alerts for your system. The Azure Monitor service collects and aggregates metrics and logs from every component of your system. Azure Monitor provides you with a view of availability, performance, and resilience, and notifies you of issues. You can use the Azure portal, PowerShell, Azure CLI, REST API, or client libraries to set up and view monitoring data.
For more information on Azure Monitor, see theAzure Monitor overview.
For more information on how to monitor Azure resources in general, seeMonitor Azure resources with Azure Monitor.
Insights
Some services in Azure have a built-in monitoring dashboard in the Azure portal that provides a starting point for monitoring your service. These dashboards are calledinsights, and you can find them in theInsights Hubof Azure Monitor in the Azure portal.
Azure Cosmos DB insights
Azure Cosmos DB insights is a feature based on theworkbooks feature of Azure Monitor. Use Azure Cosmos DB insights for a view of the overall performance, failures, capacity, and operational health of all your Azure Cosmos DB resources in a unified interactive experience.
For more information about Azure Cosmos DB insights, see the following articles:
Explore Azure Cosmos DB insights
Monitor and debug with insights in Azure Cosmos DB.
Resource types
Azure uses the concept of resource types and IDs to identify everything in a subscription. Resource types are also part of the resource IDs for every resource running in Azure. For example, one resource type for a virtual machine isMicrosoft.Compute/virtualMachines. For a list of services and their associated resource types, seeResource providers.
Microsoft.Compute/virtualMachines
Azure Monitor similarly organizes core monitoring data into metrics and logs based on resource types, also callednamespaces. Different metrics and logs are available for different resource types. Your service might be associated with more than one resource type.
For more information about the resource types for Azure Cosmos DB, seeAzure Cosmos DB monitoring data reference.
Data storage
For Azure Monitor:
Metrics data is stored in the Azure Monitor metrics database.
Log data is stored in the Azure Monitor logs store. Log Analytics is a tool in the Azure portal that can query this store.
The Azure activity log is a separate store with its own interface in the Azure portal.
You can optionally route metric and activity log data to the Azure Monitor logs store. You can then use Log Analytics to query the data and correlate it with other log data.
Many services can use diagnostic settings to send metric and log data to other storage locations outside Azure Monitor. Examples include Azure Storage,hosted partner systems, andnon-Azure partner systems, by using Event Hubs.
For detailed information on how Azure Monitor stores data, seeAzure Monitor data platform.

Azure Monitor platform metrics
Azure Monitor provides platform metrics for most services. These metrics are:
Individually defined for each namespace.
Stored in the Azure Monitor time-series metrics database.
Lightweight and capable of supporting near real-time alerting.
Used to track the performance of a resource over time.
Collection:Azure Monitor collects platform metrics automatically. No configuration is required.
Routing:You can also route some platform metrics to Azure Monitor Logs / Log Analytics so you can query them with other log data. Check theDS exportsetting for each metric to see if you can use a diagnostic setting to route the metric to Azure Monitor Logs / Log Analytics.
For more information, see theMetrics diagnostic setting.
To configure diagnostic settings for a service, seeCreate diagnostic settings in Azure Monitor.
For a list of all metrics it's possible to gather for all resources in Azure Monitor, seeSupported metrics in Azure Monitor.
Azure Monitor collects Azure Cosmos DB metrics by default. You don't need to explicitly configure anything. Most of the metrics are available from the Azure Cosmos DB portal page or from the Azure Monitor page. By default, the metrics are collected with one-minute granularity. The granularity might vary based on the metric you choose. For more information on the default retention period, seeAzure Monitor metrics retention
Azure Cosmos DB server-side metrics include throughput, storage, availability, latency, consistency, and system level metrics. On the client side, you can collect details for request charge, activity ID, exception and stack trace information, HTTP status and substatus code, and diagnostic string. By default, these metrics have a retention period of seven days. You can use this data to debug issues or if you need to contact the Azure Cosmos DB support team.
The dimension values for the metrics, such as container name, are case insensitive. This situation can result in confusion or collision of telemetry and actions on containers with such names. Use case insensitive comparison when doing string comparisons on these dimension values.
For a list of available metrics for Azure Cosmos DB, seeAzure Cosmos DB monitoring data reference.
Non-Azure Monitor based metrics
This service provides other metrics that aren't included in the Azure Monitor metrics database.
For information about partner solutions and tools that can help monitor Azure Cosmos DB, seeMonitor Azure Cosmos DB using third-party solutions.
To implement Micrometer metrics in the Java SDK for Azure Cosmos DB by consuming Prometheus metrics, seeUse Micrometer client metrics for Java.

Azure Monitor resource logs
Resource logs provide insight into operations that were done by an Azure resource. Logs are generated automatically, but you must route them to Azure Monitor logs to save or query them. Logs are organized in categories. A given namespace might have multiple resource log categories.
Collection:Resource logs aren't collected and stored until you create adiagnostic settingand route the logs to one or more locations. When you create a diagnostic setting, you specify which categories of logs to collect. There are multiple ways to create and maintain diagnostic settings, including the Azure portal, programmatically, and though Azure Policy.
Routing:The suggested default is to route resource logs to Azure Monitor Logs so you can query them with other log data. Other locations such as Azure Storage, Azure Event Hubs, and certain Microsoft monitoring partners are also available. For more information, seeAzure resource logsandResource log destinations.
For detailed information about collecting, storing, and routing resource logs, seeDiagnostic settings in Azure Monitor.
For a list of all available resource log categories in Azure Monitor, seeSupported resource logs in Azure Monitor.
All resource logs in Azure Monitor have the same header fields, followed by service-specific fields. The common schema is outlined inAzure Monitor resource log schema.
You can monitor diagnostic logs from your Azure Cosmos DB account and create dashboards from Azure Monitor. Data such as events and traces that occur at a second granularity are stored as logs. For example, if the throughput of a container changes, the properties of an Azure Cosmos DB account change. The logs capture these events. You can analyze these logs by running queries on the gathered data.
For the available resource log categories, their associated Log Analytics tables, and the logs schemas for Azure Cosmos DB, seeAzure Cosmos DB monitoring data reference.

Azure activity log
The activity log contains subscription-level events that track operations for each Azure resource as seen from outside that resource; for example, creating a new resource or starting a virtual machine.
Collection:Activity log events are automatically generated and collected in a separate store for viewing in the Azure portal.
Routing:You can send activity log data to Azure Monitor Logs so you can analyze it alongside other log data. Other locations such as Azure Storage, Azure Event Hubs, and certain Microsoft monitoring partners are also available. For more information on how to route the activity log, seeOverview of the Azure activity log.
Audit restore actions for continuous backup mode
By using activity logs, you can list all the point-in-time restores for continuous mode that were performed on an Azure Cosmos DB account. To learn how to view these operations in the Azure portal, seeAudit the point-in-time restore action for continuous backup mode.
Analyze monitoring data
There are many tools for analyzing monitoring data.
Azure Monitor tools
Azure Monitor supports the following basic tools:
Metrics explorer, a tool in the Azure portal that allows you to view and analyze metrics for Azure resources. For more information, seeAnalyze metrics with Azure Monitor metrics explorer.
Metrics explorer, a tool in the Azure portal that allows you to view and analyze metrics for Azure resources. For more information, seeAnalyze metrics with Azure Monitor metrics explorer.
Log Analytics, a tool in the Azure portal that allows you to query and analyze log data by using theKusto query language (KQL). For more information, seeGet started with log queries in Azure Monitor.
Log Analytics, a tool in the Azure portal that allows you to query and analyze log data by using theKusto query language (KQL). For more information, seeGet started with log queries in Azure Monitor.
Theactivity log, which has a user interface in the Azure portal for viewing and basic searches. To do more in-depth analysis, you have to route the data to Azure Monitor logs and run more complex queries in Log Analytics.
Theactivity log, which has a user interface in the Azure portal for viewing and basic searches. To do more in-depth analysis, you have to route the data to Azure Monitor logs and run more complex queries in Log Analytics.
Tools that allow more complex visualization include:
Dashboardsthat let you combine different kinds of data into a single pane in the Azure portal.
Workbooks, customizable reports that you can create in the Azure portal. Workbooks can include text, metrics, and log queries.
Grafana, an open platform tool that excels in operational dashboards. You can use Grafana to create dashboards that include data from multiple sources other than Azure Monitor.
Power BI, a business analytics service that provides interactive visualizations across various data sources. You can configure Power BI to automatically import log data from Azure Monitor to take advantage of these visualizations.

Azure Monitor export tools
You can get data out of Azure Monitor into other tools by using the following methods:
Metrics:Use theREST API for metricsto extract metric data from the Azure Monitor metrics database. The API supports filter expressions to refine the data retrieved. For more information, seeAzure Monitor REST API reference.
Metrics:Use theREST API for metricsto extract metric data from the Azure Monitor metrics database. The API supports filter expressions to refine the data retrieved. For more information, seeAzure Monitor REST API reference.
Logs:Use the REST API or theassociated client libraries.
Logs:Use the REST API or theassociated client libraries.
Another option is theworkspace data export.
Another option is theworkspace data export.
To get started with the REST API for Azure Monitor, seeAzure monitoring REST API walkthrough.

Analyze Azure Cosmos DB metrics
You can use Azure Monitor Metrics Explorer to analyze metrics for Azure Cosmos DB with metrics from other Azure services by selectingMetricsunderMonitoringin your Azure Cosmos DB account portal navigation. For more information about how to use metrics explorer, seeAnalyze metrics with Azure Monitor metrics explorer.
You can monitor server-side latency, request unit usage, and normalized request unit usage for your Azure Cosmos DB resources. You can select metrics specific to request units, storage, latency, availability, Cassandra, and others.
On the client side, you can debug issues by collecting metrics for request charge, activity ID, exception and stack trace information, HTTP status and substatus code, and diagnostic string.
For more information and detailed instructions, see the following articles:
Monitor server-side latency
Monitor request unit usage
Monitor normalized request unit usage
For a list of all resource metrics supported in Azure Monitor, seeSupported Azure Monitor metrics. For a list of the platform metrics collected for Azure Cosmos DB, seeMonitoring Azure Cosmos DB data reference metrics.
Monitor Azure Cosmos DB programmatically
The account level metrics available in the portal, such as account storage usage and total requests, aren't available by using the API for NoSQL. However, you can retrieve usage data at the collection level by using the API for NoSQL. To retrieve collection level data, use one of the following approaches:
To use the REST API,perform a GET on the collection. The quota and usage information for the collection is returned in thex-ms-resource-quotaandx-ms-resource-usageheaders in the response.
To use the REST API,perform a GET on the collection. The quota and usage information for the collection is returned in thex-ms-resource-quotaandx-ms-resource-usageheaders in the response.
x-ms-resource-quota
x-ms-resource-usage
To use the .NET SDK, use theDocumentClient.ReadDocumentCollectionAsyncmethod, which returns aResourceResponsethat contains many usage properties such asCollectionSizeUsage,DatabaseUsage, andDocumentUsage.
To use the .NET SDK, use theDocumentClient.ReadDocumentCollectionAsyncmethod, which returns aResourceResponsethat contains many usage properties such asCollectionSizeUsage,DatabaseUsage, andDocumentUsage.
To access more metrics, use theAzure Monitor SDK. Available metric definitions can be retrieved by using this format:
https://management.azure.com/subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroup}/providers/Microsoft.DocumentDb/databaseAccounts/{DocumentDBAccountName}/providers/microsoft.insights/metricDefinitions?api-version=2018-01-01
https://management.azure.com/subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroup}/providers/Microsoft.DocumentDb/databaseAccounts/{DocumentDBAccountName}/providers/microsoft.insights/metricDefinitions?api-version=2018-01-01
To retrieve individual metrics, use the following format:
https://management.azure.com/subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroup}/providers/Microsoft.DocumentDb/databaseAccounts/{DocumentDBAccountName}/providers/microsoft.insights/metrics?timespan={StartTime}/{EndTime}&interval={AggregationInterval}&metricnames={MetricName}&aggregation={AggregationType}&`$filter={Filter}&api-version=2018-01-01
https://management.azure.com/subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroup}/providers/Microsoft.DocumentDb/databaseAccounts/{DocumentDBAccountName}/providers/microsoft.insights/metrics?timespan={StartTime}/{EndTime}&interval={AggregationInterval}&metricnames={MetricName}&aggregation={AggregationType}&`$filter={Filter}&api-version=2018-01-01
To learn more, seeAzure monitoring REST API.
Analyze Azure Cosmos DB logs
Data in Azure Monitor Logs is stored in tables. Each table has its own set of unique properties. All resource logs in Azure Monitor have the same fields followed by service-specific fields. The common schema is outlined inAzure Monitor resource log schema.
For the types of resource logs collected for Azure Cosmos DB, seeAzure Cosmos DB monitoring data reference.
See the following articles for more information about working with Azure Monitor Logs for Azure Cosmos DB:
Monitor data by using Azure Diagnostic settings
Audit control plane logs
Add a transformation for workspace data

Kusto queries
You can analyze monitoring data in the Azure Monitor Logs / Log Analytics store by using the Kusto query language (KQL).
Important
When you selectLogsfrom the service's menu in the portal, Log Analytics opens with the query scope set to the current service. This scope means that log queries will only include data from that type of resource. If you want to run a query that includes data from other Azure services, selectLogsfrom theAzure Monitormenu. SeeLog query scope and time range in Azure Monitor Log Analyticsfor details.
For a list of common queries for any service, see theLog Analytics queries interface.
Prior to using Log Analytics to issue Kusto queries, you mustenable diagnostic logs for control plane operations. When you enable diagnostic logs, you select between storing your data inresource-specific tablesor the singleAzureDiagnostics table (legacy). The exact text of Kusto queries depends on thecollection modeyou select.
SeeTroubleshoot issues with diagnostics queriesfor simple queries to help troubleshoot issues with your Azure Cosmos DB.
SeeTroubleshoot issues with advanced diagnostics queries with Azure Cosmos DB for NoSQLfor more advanced queries to help troubleshoot issues with your Azure Cosmos DB account by using diagnostics logs sent to Azure Diagnostics (legacy) and resource-specific (preview) tables.
Here are some queries that you can enter into theLog searchsearch bar to help you monitor your Azure Cosmos DB resources.
Resource-specific table
AzureDiagnostics table (legacy)
To query for all control-plane logs from Azure Cosmos DB:
CDBControlPlaneRequests
CDBControlPlaneRequests
To query for all data-plane logs from Azure Cosmos DB:
CDBDataPlaneRequests
CDBDataPlaneRequests
To query for a filtered list of data-plane logs, specific to a single resource:
CDBDataPlaneRequests
| where AccountName=="<account-name>"
CDBDataPlaneRequests
| where AccountName=="<account-name>"
To get a count of data-plane logs, grouped by resource:
CDBDataPlaneRequests
| summarize count() by AccountName
CDBDataPlaneRequests
| summarize count() by AccountName
To generate a chart for data-plane logs, grouped by the type of operation:
CDBDataPlaneRequests
| summarize count() by OperationName
| render piechart
CDBDataPlaneRequests
| summarize count() by OperationName
| render piechart
To query for all control-plane logs from Azure Cosmos DB:
AzureDiagnostics
| where ResourceProvider=="MICROSOFT.DOCUMENTDB"
| where Category=="ControlPlaneRequests"
AzureDiagnostics
| where ResourceProvider=="MICROSOFT.DOCUMENTDB"
| where Category=="ControlPlaneRequests"
To query for all data-plane logs from Azure Cosmos DB:
AzureDiagnostics
| where ResourceProvider=="MICROSOFT.DOCUMENTDB"
| where Category=="DataPlaneRequests"
AzureDiagnostics
| where ResourceProvider=="MICROSOFT.DOCUMENTDB"
| where Category=="DataPlaneRequests"
To query for a filtered list of data-plane logs, specific to a single resource:
AzureDiagnostics
| where ResourceProvider=="MICROSOFT.DOCUMENTDB"
| where Category=="DataPlaneRequests"
| where Resource=="<account-name>"
AzureDiagnostics
| where ResourceProvider=="MICROSOFT.DOCUMENTDB"
| where Category=="DataPlaneRequests"
| where Resource=="<account-name>"
Important
In theAzureDiagnosticstable, many fields are case sensitive and uppercase including, but not limited toResourceId,ResourceGroup,ResourceProvider, andResource.
To get a count of data-plane logs, grouped by resource:
AzureDiagnostics
| where ResourceProvider=="MICROSOFT.DOCUMENTDB"
| where Category=="DataPlaneRequests"
| summarize count() by Resource
AzureDiagnostics
| where ResourceProvider=="MICROSOFT.DOCUMENTDB"
| where Category=="DataPlaneRequests"
| summarize count() by Resource
To generate a chart for data-plane logs, grouped by the type of operation:
AzureDiagnostics
| where ResourceProvider=="MICROSOFT.DOCUMENTDB"
| where Category=="DataPlaneRequests"
| summarize count() by OperationName
| render columnchart
AzureDiagnostics
| where ResourceProvider=="MICROSOFT.DOCUMENTDB"
| where Category=="DataPlaneRequests"
| summarize count() by OperationName
| render columnchart
For Kusto queries you can use to troubleshoot issues with Azure Cosmos DB, see the following articles:
Troubleshoot issues by using basic queries
Troubleshoot issues by using advanced diagnostic queries
These examples are just a small sampling of the rich queries you can run in Azure Monitor by using the Kusto Query Language (KQL). For more examples, seesamples for Kusto queries.
Alerts
Azure Monitor alerts proactively notify you when specific conditions are found in your monitoring data. Alerts allow you to identify and address issues in your system before your customers notice them. For more information, seeAzure Monitor alerts.
There are many sources of common alerts for Azure resources. For examples of common alerts for Azure resources, seeSample log alert queries. TheAzure Monitor Baseline Alerts (AMBA)site provides a semi-automated method of implementing important platform metric alerts, dashboards, and guidelines. The site applies to a continually expanding subset of Azure services, including all services that are part of the Azure Landing Zone (ALZ).
The common alert schema standardizes the consumption of Azure Monitor alert notifications. For more information, seeCommon alert schema.
Types of alerts
You can alert on any metric or log data source in the Azure Monitor data platform. There are many different types of alerts depending on the services you're monitoring and the monitoring data you're collecting. Different types of alerts have various benefits and drawbacks. For more information, seeChoose the right monitoring alert type.
The following list describes the types of Azure Monitor alerts you can create:
Metric alertsevaluate resource metrics at regular intervals. Metrics can be platform metrics, custom metrics, logs from Azure Monitor converted to metrics, or Application Insights metrics. Metric alerts can also apply multiple conditions and dynamic thresholds.
Log alertsallow users to use a Log Analytics query to evaluate resource logs at a predefined frequency.
Activity log alertstrigger when a new activity log event occurs that matches defined conditions. Resource Health alerts and Service Health alerts are activity log alerts that report on your service and resource health.
Some Azure services also supportsmart detection alerts,Prometheus alerts, orrecommended alert rules.
For some services, you can monitor at scale by applying the same metric alert rule to multiple resources of the same type that exist in the same Azure region. Individual notifications are sent for each monitored resource. For supported Azure services and clouds, seeMonitor multiple resources with one alert rule.
Azure Cosmos DB alert rules
The following table lists some common and recommended alert rules for Azure Cosmos DB.
For more information and instructions on creating alerts for Azure Cosmos DB, seeCreate alert on metrics. To create an alert to monitor if storage for a logical partition key is approaching 20 GB, seeCreate alert on logical partition key size.
Advisor recommendations
For some services, if critical conditions or imminent changes occur during resource operations, an alert displays on the serviceOverviewpage in the portal. You can find more information and recommended fixes for the alert inAdvisor recommendationsunderMonitoringin the left menu. During normal operations, no advisor recommendations display.
For more information on Azure Advisor, seeAzure Advisor overview.
Related content
SeeAzure Cosmos DB monitoring data referencefor a reference of the metrics, logs, and other important values created for Azure Cosmos DB.
SeeMonitoring Azure resources with Azure Monitorfor general details on monitoring Azure resources.
Feedback
Was this page helpful?
Additional resources