Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Extension manifest reference
Article
2025-03-21
12 contributors
In this article
Azure DevOps Services | Azure DevOps Server 2022 - Azure DevOps Server 2019
Every extension has a JSON manifest file that defines basic information about the extension. The file also defines how it can extend and enhance the experience. This article shows you how to create a manifest for your extension to Azure DevOps.
Tip
Check out our newest documentation on extension development using theAzure DevOps Extension SDK.
Create a file namedvss-extension.jsonat the root of your extension folder. This file contains required attributes, like the extension's ID and its installation targets, where it can run. It also defines the contributions being made by your extension.
vss-extension.json
See the following example of a typical manifest:
{
    "manifestVersion": 1,
    "id": "tools",
    "version": "0.1.0",
    "name": "Fabrikam Tools",
    "publisher": "fabrikam",
    "description": "Awesome tools to help you and your team do great things everyday.",
    "targets": [
        {
            "id": "Microsoft.VisualStudio.Services"
        }
    ],
    "icons": {
        "default": "images/fabrikam-logo.png"
    },
    "scopes": [
        "vso.work",
        "vso.code_write",
        "vso.build_execute"
    ],
    "categories": [
        "Azure Boards"
    ],
    "branding": {
        "color": "rgb(34, 34, 34)",
        "theme": "dark"
    },
    "content": {
        "details": {
            "path": "readme.md"
        },
        "license": {
            "path": "eula.md"
        }
    },
    "links": {
        "getstarted": {
            "uri": "https://www.fabrikam-fiber-inc.com/help/getstarted"
        },
        "support": {
            "uri": "https://www.fabrikam-fiber-inc.com/support"
        }
    },
    "repository": {
        "type": "git",
        "uri": "https://github.com/fabrikam-fiber-inc/myextension"
    },
    "contributions": [
        {
            "id": "showCommits",
            "type": "ms.vss-web.action",
            "description": "Adds a menu action from builds grid to show associated items.",
            "targets": [
                "ms.vss-build-web.completed-build-menu"
            ],
            "properties": {
                "title": "View associated items",
                "uri": "launch.html"
            }
        }
    ],
    "files": [
        {
            "path": "launch.html",
            "addressable": true
        },        
        {
            "path": "node_modules/vss-web-extension-sdk/lib",
            "addressable": true,
            "packagePath": "lib"
        }
    ]
}
{
    "manifestVersion": 1,
    "id": "tools",
    "version": "0.1.0",
    "name": "Fabrikam Tools",
    "publisher": "fabrikam",
    "description": "Awesome tools to help you and your team do great things everyday.",
    "targets": [
        {
            "id": "Microsoft.VisualStudio.Services"
        }
    ],
    "icons": {
        "default": "images/fabrikam-logo.png"
    },
    "scopes": [
        "vso.work",
        "vso.code_write",
        "vso.build_execute"
    ],
    "categories": [
        "Azure Boards"
    ],
    "branding": {
        "color": "rgb(34, 34, 34)",
        "theme": "dark"
    },
    "content": {
        "details": {
            "path": "readme.md"
        },
        "license": {
            "path": "eula.md"
        }
    },
    "links": {
        "getstarted": {
            "uri": "https://www.fabrikam-fiber-inc.com/help/getstarted"
        },
        "support": {
            "uri": "https://www.fabrikam-fiber-inc.com/support"
        }
    },
    "repository": {
        "type": "git",
        "uri": "https://github.com/fabrikam-fiber-inc/myextension"
    },
    "contributions": [
        {
            "id": "showCommits",
            "type": "ms.vss-web.action",
            "description": "Adds a menu action from builds grid to show associated items.",
            "targets": [
                "ms.vss-build-web.completed-build-menu"
            ],
            "properties": {
                "title": "View associated items",
                "uri": "launch.html"
            }
        }
    ],
    "files": [
        {
            "path": "launch.html",
            "addressable": true
        },        
        {
            "path": "node_modules/vss-web-extension-sdk/lib",
            "addressable": true,
            "packagePath": "lib"
        }
    ]
}
For information about inputs, see...
Required attributes

These properties are required:
1
sample-extension
major.minor.patch
0.1.2
1.0.0
0.1.2.3
"Fabrikam Agile Board Extension"
Azure Repos
Azure Boards
Azure Pipelines
Azure Test Plans
Azure Artifacts
id
Microsoft.VisualStudio.Services
Microsoft.TeamFoundation.Server
Microsoft.VisualStudio.Services.Integration
Microsoft.TeamFoundation.Server.Integration
Examples of required attributes
{
    "manifestVersion": 1,
    "id": "tools",
    "version": "0.1.0",
    "name": "Fabrikam Tools",
    "publisher": "fabrikam",
    "targets": [
        {
            "id": "Microsoft.VisualStudio.Services"
        }
    ]
}
{
    "manifestVersion": 1,
    "id": "tools",
    "version": "0.1.0",
    "name": "Fabrikam Tools",
    "publisher": "fabrikam",
    "targets": [
        {
            "id": "Microsoft.VisualStudio.Services"
        }
    ]
}
Optional attributes
Runtime attributes
vso.work
vs.code_write
api-version/3.0
https://myapp.com/{{account.name}}/
{
    "scopes": [
        "vso.work",
        "vso.code_write",
        "vso.build_execute"
    ],
    "demands": [
        "api-version/3.0"
    ],
    "contributions": [
        {
            "id": "showCommits",
            "type": "ms.vss-web.action",
            "description": "Adds a menu action from builds grid to show associated items.",
            "targets": [
                "ms.vss-build-web.completed-build-menu"
            ],
            "properties": {
                "title": "View associated items",
                "uri": "launch.html"
            }
        }
    ]
}
{
    "scopes": [
        "vso.work",
        "vso.code_write",
        "vso.build_execute"
    ],
    "demands": [
        "api-version/3.0"
    ],
    "contributions": [
        {
            "id": "showCommits",
            "type": "ms.vss-web.action",
            "description": "Adds a menu action from builds grid to show associated items.",
            "targets": [
                "ms.vss-build-web.completed-build-menu"
            ],
            "properties": {
                "title": "View associated items",
                "uri": "launch.html"
            }
        }
    ]
}

Discovery attributes
These optional properties help users discover and learn about your extension:
default
large
agile
project management
task timer
path
overview.md
path
details
getstarted
learn
license
privacypolicy
support
uri
type
uri
href
uri
description
color
theme

By default, all extensions in theAzure DevOps Marketplaceare private. They're only visible to the publisher and accounts shared to by the publisher. If your publisher is verified, you can make your extension public by setting thePublicflag in your extension manifest:
Public
{
    "galleryFlags": [
        "Public"
    ]
}
{
    "galleryFlags": [
        "Public"
    ]
}
Or:
{
    "public": true
}
{
    "public": true
}
For more information, seePackage/Publish/Install.
If your extension's ready for users on the Marketplace to try, but you're still working out a few bugs or adding function, you can mark it aspreview:
preview
{
    "galleryFlags": [
        "Preview"
    ]
}
{
    "galleryFlags": [
        "Preview"
    ]
}
If you intend to sell your extension on the Marketplace, mark it aspaid preview. An extension markedfreecan't be changed topaid.
{
    "galleryFlags": [
        "Paid",
        "Preview"
    ]
}
{
    "galleryFlags": [
        "Paid",
        "Preview"
    ]
}
If you want to sell your extension on the Marketplace, you can mark it with thePaidflag and__BYOLENFORCEDtag (starts with two underscores):
Paid
__BYOLENFORCED
{
    "galleryFlags": [
        "Paid"        
    ],
     "tags": [        
        "__BYOLENFORCED"
    ]
}
{
    "galleryFlags": [
        "Paid"        
    ],
     "tags": [        
        "__BYOLENFORCED"
    ]
}
Both thePaidflag and__BYOLENFORCEDtag need to be present to mark an extension as paid in  the Marketplace. Bring-Your-Own-License (BYOL) means the publisher of the extension provides the billing and licensing mechanism for the extension, as it isn't provided by Microsoft for Azure DevOps extensions. All paid extensions are required to define privacy policy, support policy, and an end-user license agreement. Publishers must provide content for the pricing tab in Marketplace as follows:
Paid
__BYOLENFORCED
{
    "content": {
        "details": {
            "path": "overview.md"
        }, 
        "pricing": {
            "path": "pricing.md"
        }
    }
}
{
    "content": {
        "details": {
            "path": "overview.md"
        }, 
        "pricing": {
            "path": "pricing.md"
        }
    }
}
You also need to add a new section in your extension manifest to override paid licensing. In the future, we remove the paid licensing check and no longer require the override. For now, ensure your extension displays as expected. Each override consists of an "ID" and a "behavior." Make the "ID" match the ID of the contributions defined in the manifest.
"licensing": {

      "overrides": [

        { "id": "my-hub", "behavior": " AlwaysInclude" }
      ]
    }
"licensing": {

      "overrides": [

        { "id": "my-hub", "behavior": " AlwaysInclude" }
      ]
    }
If your paid BYOL extension offers a trial period (we recommend so), then you can specify the length of the trial in days:
{
    "galleryproperties": {
        "trialDays": "30"
    } 
}
{
    "galleryproperties": {
        "trialDays": "30"
    } 
}
Note
If you want to target Azure DevOps, but don't wish to surface aDownloadoption for your extension, then add the__DoNotDownloadtag (starts with two underscores) to the extension manifest.
If you're moving an extension from the previously offered billing & licensing from Microsoft to the BYOL model, then contact us for suitable steps.
__DoNotDownload
Example of more properties
{
    "description": "Awesome tools to help you and your team do great things everyday.",
    "icons": {
        "default": "images/fabrikam-logo.png"
    },
    "categories": [
        "Plan and track"
    ],
    "tags": [
        "working",
        "people person",
        "search"
    ],
    "content": {
        "details": {
            "path": "overview.md"
        },
        "license": {
            "path": "license-terms.md"
        }
    },
    "links": {
        "home": {
            "uri": "https://www.fabrikam-fiber-inc.com"
        },
        "getstarted": {
            "uri": "https://www.fabrikam-fiber-inc.com/help/getstarted"
        },
        "learn": {
            "uri": "https://www.fabrikam-fiber-inc.com/features"
        },
        "support": {
            "uri": "https://www.fabrikam-fiber-inc.com/support"
        },
        "repository": {
            "uri": "https://github.com/fabrikam-fiber-inc/tools"
        },
        "issues": {
            "uri": "https://github.com/fabrikam-fiber-inc/tools/issues"
        }
    },
    "repository": {
        "type": "git",
        "uri": "https://github.com/fabrikam-fiber-inc/tools"
    },
    "badges": [
        {
            "href": "https://travis.ci/fabrikam-fiber-inc/myextension",
            "uri": "https://travis.ci/fabrikam-fiber-inc/myextension.svg?branch=master",
            "description": "TravisCI build for the project"
        },
        {
            "href": "https://ci.appveyor.com/projects/fabrikam-fiber-inc/myextension",
            "uri": "https://ci.appveyor.com/api/projects/status/vlg2sgs2y7tsdxpj4c?svg=true",
            "description": "AppVeyor build for the project"
        }
    ],
    "branding": {
        "color": "rgb(34, 34, 34)",
        "theme": "dark"
    },
    "screenshots": [
        {
            "path": "screenshots/screen1.png"
        },
        {
            "path": "screenshots/screen2.png"
        }
    ]
}
{
    "description": "Awesome tools to help you and your team do great things everyday.",
    "icons": {
        "default": "images/fabrikam-logo.png"
    },
    "categories": [
        "Plan and track"
    ],
    "tags": [
        "working",
        "people person",
        "search"
    ],
    "content": {
        "details": {
            "path": "overview.md"
        },
        "license": {
            "path": "license-terms.md"
        }
    },
    "links": {
        "home": {
            "uri": "https://www.fabrikam-fiber-inc.com"
        },
        "getstarted": {
            "uri": "https://www.fabrikam-fiber-inc.com/help/getstarted"
        },
        "learn": {
            "uri": "https://www.fabrikam-fiber-inc.com/features"
        },
        "support": {
            "uri": "https://www.fabrikam-fiber-inc.com/support"
        },
        "repository": {
            "uri": "https://github.com/fabrikam-fiber-inc/tools"
        },
        "issues": {
            "uri": "https://github.com/fabrikam-fiber-inc/tools/issues"
        }
    },
    "repository": {
        "type": "git",
        "uri": "https://github.com/fabrikam-fiber-inc/tools"
    },
    "badges": [
        {
            "href": "https://travis.ci/fabrikam-fiber-inc/myextension",
            "uri": "https://travis.ci/fabrikam-fiber-inc/myextension.svg?branch=master",
            "description": "TravisCI build for the project"
        },
        {
            "href": "https://ci.appveyor.com/projects/fabrikam-fiber-inc/myextension",
            "uri": "https://ci.appveyor.com/api/projects/status/vlg2sgs2y7tsdxpj4c?svg=true",
            "description": "AppVeyor build for the project"
        }
    ],
    "branding": {
        "color": "rgb(34, 34, 34)",
        "theme": "dark"
    },
    "screenshots": [
        {
            "path": "screenshots/screen1.png"
        },
        {
            "path": "screenshots/screen2.png"
        }
    ]
}
Details page example
1 - description
2 - icon
3 - categories
4 - screenshots
5 - content (details)
6 - links
7 - branding


Marketplace Q & A - CustomerQnASupport property
All extensions on the Visual Studio Marketplace have a Questions and Answers (Q & A) section to allow one-on-one public conversations between extension users and publishers. Publishers can choose between Marketplace Q & A, GitHub issues, or a custom Q & A URL. You can disable Q & A in the Marketplace using theCustomerQnASupportproperty in the manifest.
CustomerQnASupport
Default experience(No changes to manifest are required)
For extensions with a GitHub repository, Marketplace redirects users in the Q&A section to the associated GitHub issues.
For extensions without a GitHub repository, Marketplace Q&A is enabled.
For a different experience than one of the default options, use theCustomerQnASupportproperty in the manifest.
CustomerQnASupport
{
    "CustomerQnASupport": {
        "enablemarketplaceqna": true,
        "url": "http://uservoice.visualstudio.com"
    } 
}
{
    "CustomerQnASupport": {
        "enablemarketplaceqna": true,
        "url": "http://uservoice.visualstudio.com"
    } 
}
Properties
Properties for the Customer Q & A Support section:
enablemarketplaceqna- boolean field, set totruefor marketplace, or custom Q&A; false for disabling Q&A
true
url- string, URL for custom Q&A
Examples showing usage of Q & A support
{
     "CustomerQnASupport": {
        "enablemarketplaceqna":"true",
        "url": "http://uservoice.visualstudio.com"
    } 
}
{
     "CustomerQnASupport": {
        "enablemarketplaceqna":"true",
        "url": "http://uservoice.visualstudio.com"
    } 
}
{
     "CustomerQnASupport": {
        "enablemarketplaceqna":"true"
    } 
}
{
     "CustomerQnASupport": {
        "enablemarketplaceqna":"true"
    } 
}
{
     "CustomerQnASupport": {
        "enablemarketplaceqna":"false"
    } 
}
{
     "CustomerQnASupport": {
        "enablemarketplaceqna":"false"
    } 
}
Scopes
In your extension, you can define one or more scopes. These scopes determine which resources your extension can access and the operations permitted to perform on those resources. The scopes you specify in your extension manifest are the scopes set on access tokens issued to your extension. For more information, seeAuth and security.
If no scopes are specified, extensions are only provided access to user profile and extension data.
Supported scopes
vso.advsec
vso.advsec_write
vso.advsec
vso.advsec_manage
vso.advsec_write
vso.agentpools
vso.agentpools_manage
vso.agentpools
vso.environment_manage
vso.agentpools_manage
vso.analytics
vso.auditlog
vso.auditstreams_manage
vso.auditlog
vso.build
vso.hooks_write
vso.build_execute
vso.build
vso.code
vso.hooks_write
vso.code_write
vso.code
vso.code_manage
vso.code_write
vso.code_full
vso.code_manage
vso.code_status
vso.connected_server
vso.entitlements
vso.memberentitlementmanagement
vso.memberentitlementmanagement_write
vso.memberentitlementmanagement
vso.extension
vso.profile
vso.extension_manage
vso.extension
vso.extension.data
vso.profile
vso.extension.data_write
vso.extension.data
vso.githubconnections
vso.githubconnections_manage
vso.githubconnections
vso.graph
vso.graph_manage
vso.graph
vso.identity
vso.identity_manage
vso.identity
vso.machinegroup_manage
vso.agentpools_manage
vso.gallery
vso.profile
vso.gallery_acquire
vso.gallery
vso.gallery_publish
vso.gallery
vso.gallery_manage
vso.gallery_publish
vso.notification
vso.profile
vso.notification_write
vso.notification
vso.notification_manage
vso.notification_write
vso.notification_diagnostics
vso.notification
vso.packaging
vso.profile
vso.packaging_write
vso.packaging
vso.packaging_manage
vso.packaging_write
vso.pipelineresources_use
vso.pipelineresources_manage
vso.pipelineresources_manage
vso.project
vso.project_write
vso.project
vso.project_manage
vso.project_write
vso.release
vso.profile
vso.release_execute
vso.release
vso.release_manage
vso.release_manage
vso.securefiles_read
vso.securefiles_write
vso.securefiles_read
vso.securefiles_manage
vso.securefiles_write
vso.security_manage
vso.serviceendpoint
vso.profile
vso.serviceendpoint_query
vso.serviceendpoint
vso.serviceendpoint_manage
vso.serviceendpoint_query
vso.hooks
vso.profile
vso.hooks_write
vso.hooks
vso.hooks_interact
vso.profile
vso.settings
vso.settings_write
vso.symbols
vso.profile
vso.symbols_write
vso.symbols
vso.symbols_manage
vso.symbols_write
vso.taskgroups_read
vso.taskgroups_write
vso.taskgroups_read
vso.taskgroups_manage
vso.taskgroups_write
vso.dashboards
vso.dashboards_manage
vso.dashboards
vso.test
vso.profile
vso.test_write
vso.test
vso.threads_full
vso.tokens
vso.tokenadministration
vso.profile
vso.profile_write
vso.profile
vso.variablegroups_read
vso.variablegroups_write
vso.variablegroups_read
vso.variablegroups_manage
vso.variablegroups_write
vso.wiki
vso.wiki_write
vso.wiki
vso.work
vso.hooks_write
vso.work_write
vso.work
vso.work_full
vso.work_write
user_impersonation
Changing scope of published extension
You can change the scope of a published extension. If you previously installed your extension (and authorized the previous set of scopes), authorize the new scopes before you can upgrade to the newest version.
TheAction Requiredsection of the Extension settings hub shows a user that, if any, installed extensions require authorization:

An administrator can then review and authorize the new set of scopes:

Installation targets
As the name implies, installation targets define the products and services where you can install your extension.Microsoft.VisualStudio.Servicesis the most common installation target and indicates that the extension can be installed into Azure DevOps.
Microsoft.VisualStudio.Services
The installation targets for an extension or integration are specified via thetargetsfield in the manifest.
targets
Supported identifiers forextensions:
Microsoft.VisualStudio.Services.Cloud: installs into Azure DevOps Services
Microsoft.VisualStudio.Services.Cloud
Microsoft.TeamFoundation.Server: installs into Azure DevOps Server
Microsoft.TeamFoundation.Server
Microsoft.VisualStudio.Services: installs into both. Shortcut forMicrosoft.VisualStudio.Services.CloudandMicrosoft.TeamFoundation.Serverversion[14.2,)
Microsoft.VisualStudio.Services
Microsoft.VisualStudio.Services.Cloud
Microsoft.TeamFoundation.Server
[14.2,)
Supported identifiers forintegrations:
Microsoft.VisualStudio.Services.Cloud.Integration: integrates with Azure DevOps Services
Microsoft.VisualStudio.Services.Cloud.Integration
Microsoft.TeamFoundation.Server.Integration: integrates with Azure DevOps Server
Microsoft.TeamFoundation.Server.Integration
Microsoft.VisualStudio.Services.Integration: integrates with both. Shortcut forMicrosoft.VisualStudio.Services.Cloud.IntegrationandMicrosoft.TeamFoundation.Server.Integration
Microsoft.VisualStudio.Services.Integration
Microsoft.VisualStudio.Services.Cloud.Integration
Microsoft.TeamFoundation.Server.Integration
For more information, seeExtensibility points.
Examples of installation targets
{
    "targets": [
        {
            "id": "Microsoft.VisualStudio.Services"
        }
    ]
}
{
    "targets": [
        {
            "id": "Microsoft.VisualStudio.Services"
        }
    ]
}
{
    "targets": [
        {
            "id": "Microsoft.VisualStudio.Services.Cloud"
        }
    ]
}
{
    "targets": [
        {
            "id": "Microsoft.VisualStudio.Services.Cloud"
        }
    ]
}
Installation targets can also be used in the manifest of integrations. For example, products, apps, or tools that work with, but don't install into Azure DevOps.
{
    "targets": [
        {
            "id": "Microsoft.VisualStudio.Services.Integration"
        }
    ]
}
{
    "targets": [
        {
            "id": "Microsoft.VisualStudio.Services.Integration"
        }
    ]
}
{
    "targets": [
        {
            "id": "Microsoft.TeamFoundation.Server.Integration"
        }
    ]
}
{
    "targets": [
        {
            "id": "Microsoft.TeamFoundation.Server.Integration"
        }
    ]
}
Installation target versions
Some installation target identifiers, likeMicrosoft.TeamFoundation.ServerandMicrosoft.TeamFoundation.Server.Integration, support an optional version range. This optional version range further clarifies the supported releases the extension or integration is supported on.
Microsoft.TeamFoundation.Server
Microsoft.TeamFoundation.Server.Integration
The version or version range is specified via theversionfield on the installation target object. This value can be either:
version
A specific version, for example:15.0(2017 RTM only)
15.0
A range of supported versions, for example:[14.0)(2015 RTM and later),[14.3,15.1](2015 Update 3 through 2017 Update 1). Range values are refined using:[: minimum version inclusive]: maximum version inclusive(: minimum version exclusive): maximum version exclusive
[14.0)
[14.3,15.1]
[: minimum version inclusive
[
]: maximum version inclusive
]
(: minimum version exclusive
(
): maximum version exclusive
)
Version numbers for Azure DevOps Server:
Examples showing versions
{
    "targets": [
        {
            "id": "Microsoft.VisualStudio.Services.Cloud"
        },
        {
            "id": "Microsoft.TeamFoundation.Server",
            "version": "[15.0,)"
        }
    ]
}
{
    "targets": [
        {
            "id": "Microsoft.VisualStudio.Services.Cloud"
        },
        {
            "id": "Microsoft.TeamFoundation.Server",
            "version": "[15.0,)"
        }
    ]
}
Shortcuts
Microsoft.VisualStudio.Servicesis a shortcut for Azure DevOps.
Microsoft.VisualStudio.Services
{
    "targets": [
        {
            "id": "Microsoft.VisualStudio.Services"
        }
    ]
}
{
    "targets": [
        {
            "id": "Microsoft.VisualStudio.Services"
        }
    ]
}
is equivalent to:
{
    "targets": [
        {
            "id": "Microsoft.VisualStudio.Services.Cloud"
        },
        {
            "id": "Microsoft.TeamFoundation.Server",
            "version": "[14.2,)"
        }
    ]
}
{
    "targets": [
        {
            "id": "Microsoft.VisualStudio.Services.Cloud"
        },
        {
            "id": "Microsoft.TeamFoundation.Server",
            "version": "[14.2,)"
        }
    ]
}
Using installation targets and demands
Installation targets and demands are used together to present users with a correct view of the products and services your extension or integration is compatible with. For example, specifying an installation target ofMicrosoft.VisualStudio.Serviceswith a demand ofapi-version/3.0means the extension works with Azure DevOps.
Microsoft.VisualStudio.Services
api-version/3.0
Tip
For more information on REST APIs, see theREST API Reference.
{
    "targets": [
        {
            "id": "Microsoft.VisualStudio.Services"
        }
    ],
    "demands": [
        "api-version/3.0"
    ]
}
{
    "targets": [
        {
            "id": "Microsoft.VisualStudio.Services"
        }
    ],
    "demands": [
        "api-version/3.0"
    ]
}
Resolves to the following installation targets:
Microsoft.VisualStudio.Services.Cloud
Microsoft.VisualStudio.Services.Cloud
Microsoft.TeamFoundation.Server, version:[15.0,)
Microsoft.TeamFoundation.Server
[15.0,)
{
    "targets": [
        {
            "id": "Microsoft.VisualStudio.Services.Integration"
        }
    ],
    "demands": [
        "api-version/2.0"
    ]
}
{
    "targets": [
        {
            "id": "Microsoft.VisualStudio.Services.Integration"
        }
    ],
    "demands": [
        "api-version/2.0"
    ]
}
Resolves to the following installation targets:
Microsoft.VisualStudio.Services.Cloud.Integration
Microsoft.VisualStudio.Services.Cloud.Integration
Microsoft.TeamFoundation.Server.Integration, version:[14.0,)
Microsoft.TeamFoundation.Server.Integration
[14.0,)
Demands
Demands let you specify capabilities and other features required by your extension. You can use these demands to limit where your extension can be published or installed.
Demands get used by the Visual Studio Marketplace to list the products and environments your extension is compatible with, which helps customers understand whether your extension works with their version of Azure DevOps, for example.
See the following example of how demands get specified in the extension manifest.
{
    "demands": [
        "api-version/3.0",
        "contribution/ms.vss-dashboards-web.widget-catalog"
    ]
}
{
    "demands": [
        "api-version/3.0",
        "contribution/ms.vss-dashboards-web.widget-catalog"
    ]
}
In this example, the extension demands version 3.0 of the APIs, which means it can only be installed to Azure DevOps. It also requires thems.vss-dashboards-webextension (and itswidget-catalogcontribution) to be installed (and enabled) in the collection before your extension can be installed.
ms.vss-dashboards-web
widget-catalog
Supported demands
environment/cloud
environment/onprem
api-version/{version}
extension/{id}
contribution/{id}
contributionType/{id}
Note
Useenvironment/cloudandenvironment/onpremonly when your extension has topology-related requirements that require running in that particular environment.
environment/cloud
environment/onprem
extension,contribution, andcontributionTypedemands are evaluated at install time and require that the specified extension is already installed and enabled in the organization or collection.
extension
contribution
contributionType
Files
Thefilessection is where you reference any files you wish to include in your extension. You can add both folders and individual files:
files
{
    "files": [
        {
            "path": "hello-world.html", "addressable": true
        },
        {
            "path": "scripts", "addressable": true
        },
        {
            "path": "images/logo.png", "addressable": true, "packagePath": "/"
        }
    ]
}
{
    "files": [
        {
            "path": "hello-world.html", "addressable": true
        },
        {
            "path": "scripts", "addressable": true
        },
        {
            "path": "images/logo.png", "addressable": true, "packagePath": "/"
        }
    ]
}
Properties
Properties for the Files section:
path- Path to resource on disk, which can be relative to your root directory.
addressableâ (optional) Set totrueif you want your file to be URL-addressable. Defaults tofalse.
packagePathâ (optional) Path to the resource within the package. Defaults to the relative path on disk from your root directory.
contentTypeâ (optional) MIME type of the file. Defaults to a best guess based on the file extension and OS settings.
assetTypeâ (optional) Specify the value of the Type attribute of the asset entry in the VSIX manifest. Can also be an array of strings, in which case multiple asset entries get added for this file. Defaults to the packagePath.
langâ (optional) Language of this asset. Localized files are served based on the Accept-Language header. Leave blank to signify this file is in the default (or fallback) language. Localized versions of the same file should have the same assetType.
Contributions
Each contribution entry has the following properties:
id- A reference ID (string) for the contribution. Make each contribution ID unique within an extension. Seereferencing contributions and types.
type- The ID of the contributionType of this contribution.
description- (Optional) A string describing what the contribution is providing.
targets- An array of contribution IDs that the contribution is targeting (contributing to). SeeTargeting contributions.
properties- (Optional) An object that includes properties for the contribution as defined in the contribution type.
For more information, see thecontribution model overview.

Contribution types
Each contribution entry has the following properties:
id- A reference ID (string) for the contribution type. Make each contribution type ID unique within an extension. Seereferencing contributions and types.
name- The friendly name of the contribution type.
description- (Optional) A string describing in more detail what the contribution type is for.
properties- (Optional) A dictionary that maps property names to property descriptions. These properties describe the required and optional properties that contributions of this type can use.
Property descriptions have the following properties:
description- (Optional) A string describing what the property is used for.
required- (Optional) A boolean value, which if true indicates that the property is required for all contributions of this type.
type- The type of value that the property can have, which could be string, uri, guid, boolean, integer, double, dateTime, array, or object.
For more information, see thecontribution model overview.

Referencing contributions and types
Use unique identifiers to reference contributions and contribution types. Referencetypeswith thetypeproperty, and reference other contributions with thetargetsproperty.
type
targets
Afullcontribution reference includes the publisher identifier, extension identifier, and contribution/type identifier, separated by
a dot (.). For example,ms.vss-web.hubis the full identifier for the contribution with identifier ofhubin thevss-webextension published by the "ms" (Microsoft) publisher.
ms.vss-web.hub
hub
vss-web
Relativecontribution references might get used within an extension manifest for a contribution's reference to another contribution or contribution type within that same extension. In this case, the publisher and extension identifiers are NOT included, and the identifier is a dot (.) followed
by the contribution identifier. For example,.hubmight be used within thevss-webextension mentioned previously as a shortcut forms.vss-web.hub.
.
.hub
vss-web
ms.vss-web.hub

Targeting contributions
Some contributions act as containers targeted by other contributions.
Hub contributions can target Hub Groups. When a page is rendered, the web UI shows all Hub contributions that target the selected hub group. Hub groups target a hub group collection, which defines a set of hub groups that show up in a given navigational area, for example, project-level admin pages.
Different types of contributions can target menus: action, hyperlink-action, and action-provider. Actions and hyperlink-actions provide single menu item entries. An action-provider can provide multiple dynamic menu items. For a given menu, items are aggregated across all contributions (of any of these types) that target that specific menu contribution.
Adding a hub icon
For information on adding an icon to your hub, check out thehub icon guidance.

Supported badge services
The Marketplace only supports badges from the following trusted services:
api.travis-ci.org/
badge.fury.io/
badges.frapsoft.com/
badges.gitter.im/
badges.greenkeeper.io/
cdn.travis-ci.org/
ci.appveyor.com/
codeclimate.com/
codecov.io/
coveralls.io/
david-dm.org/
gemnasium.com/
img.shields.io/
isitmaintained.com/
marketplace.visualstudio.com/
snyk.io/
travis-ci.com/
travis-ci.org/
vsmarketplacebadges.dev/
bithound.io/
deepscan.io/
githost.io/
gitlab.com/
opencollective.co/
Note
Replacevsmarketplacebadge.apphb.comwithvsmarketplacebadges.dev.
vsmarketplacebadge.apphb.com
vsmarketplacebadges.dev
To show a badge from another service, contactCustomer Support at the Developer Community.

Example manifest
The following extension contributes an action to the completed builds context menu and a hub to the Build hub group:
{
    "manifestVersion": 1,
    "id": "tools",
    "version": "0.1.0",
    "name": "Fabrikam Tools",
    "publisher": "fabrikam",
    "description": "Awesome tools to help you and your team do great things everyday.",
    "targets": [
        {
            "id": "Microsoft.VisualStudio.Services"
        }
    ],
    "demands": [
        "api-version/3.0"
    ],
    "icons": {
        "default": "images/fabrikam-logo.png"
    },
    "scopes": [
        "vso.work",
        "vso.code_write"
    ],
    "categories": [
        "Plan and track"
    ],
    "tags": [
        "working",
        "people person",
        "search"
    ],
    "branding": {
        "color": "rgb(34, 34, 34)",
        "theme": "dark"
    },
    "screenshots": [
        {
            "path": "screenshots/screen1.png"
        },
        {
            "path": "screenshots/screen2.png"
        }
    ],
    "content": {
        "details": {
            "path": "overview.md"
        },
        "license": {
            "path": "eula.md"
        }
    },
    "links": {
        "home": {
            "uri": "https://www.fabrikam-fiber-inc.com"
        },
        "getstarted": {
            "uri": "https://www.fabrikam-fiber-inc.com/help/getstarted"
        },
        "learn": {
            "uri": "https://www.fabrikam-fiber-inc.com/features"
        },
        "support": {
            "uri": "https://www.fabrikam-fiber-inc.com/support"
        },
        "repository": {
            "uri": "https://github.com/fabrikam-fiber-inc/tools"
        },
        "issues": {
            "uri": "https://github.com/fabrikam-fiber-inc/tools/issues"
        }
    },
    "repository": {
        "type": "git",
        "uri": "https://github.com/fabrikam-fiber-inc/myextension"
    },
    "badges": [
        {
            "href": "https://travis.ci/fabrikam-fiber-inc/myextension",
            "uri": "https://travis.ci/fabrikam-fiber-inc/myextension.svg?branch=master",
            "description": "TravisCI build for the project"
        },
        {
            "href": "https://ci.appveyor.com/projects/fabrikam-fiber-inc/myextension",
            "uri": "https://ci.appveyor.com/api/projects/status/vlg2sgs2y7tsdxpj4c?svg=true",
            "description": "AppVeyor build for the project"
        }
    ],
    "contributions": [
        {
            "id": "showCommits",
            "type": "ms.vss-web.action",
            "description": "Adds a menu action from builds grid to show associated items.",
            "targets": [
                "ms.vss-build-web.completed-build-menu"
            ],
            "properties": {
                "title": "View associated items",
                "uri": "launch.html"
            }
        }
    ]
}
{
    "manifestVersion": 1,
    "id": "tools",
    "version": "0.1.0",
    "name": "Fabrikam Tools",
    "publisher": "fabrikam",
    "description": "Awesome tools to help you and your team do great things everyday.",
    "targets": [
        {
            "id": "Microsoft.VisualStudio.Services"
        }
    ],
    "demands": [
        "api-version/3.0"
    ],
    "icons": {
        "default": "images/fabrikam-logo.png"
    },
    "scopes": [
        "vso.work",
        "vso.code_write"
    ],
    "categories": [
        "Plan and track"
    ],
    "tags": [
        "working",
        "people person",
        "search"
    ],
    "branding": {
        "color": "rgb(34, 34, 34)",
        "theme": "dark"
    },
    "screenshots": [
        {
            "path": "screenshots/screen1.png"
        },
        {
            "path": "screenshots/screen2.png"
        }
    ],
    "content": {
        "details": {
            "path": "overview.md"
        },
        "license": {
            "path": "eula.md"
        }
    },
    "links": {
        "home": {
            "uri": "https://www.fabrikam-fiber-inc.com"
        },
        "getstarted": {
            "uri": "https://www.fabrikam-fiber-inc.com/help/getstarted"
        },
        "learn": {
            "uri": "https://www.fabrikam-fiber-inc.com/features"
        },
        "support": {
            "uri": "https://www.fabrikam-fiber-inc.com/support"
        },
        "repository": {
            "uri": "https://github.com/fabrikam-fiber-inc/tools"
        },
        "issues": {
            "uri": "https://github.com/fabrikam-fiber-inc/tools/issues"
        }
    },
    "repository": {
        "type": "git",
        "uri": "https://github.com/fabrikam-fiber-inc/myextension"
    },
    "badges": [
        {
            "href": "https://travis.ci/fabrikam-fiber-inc/myextension",
            "uri": "https://travis.ci/fabrikam-fiber-inc/myextension.svg?branch=master",
            "description": "TravisCI build for the project"
        },
        {
            "href": "https://ci.appveyor.com/projects/fabrikam-fiber-inc/myextension",
            "uri": "https://ci.appveyor.com/api/projects/status/vlg2sgs2y7tsdxpj4c?svg=true",
            "description": "AppVeyor build for the project"
        }
    ],
    "contributions": [
        {
            "id": "showCommits",
            "type": "ms.vss-web.action",
            "description": "Adds a menu action from builds grid to show associated items.",
            "targets": [
                "ms.vss-build-web.completed-build-menu"
            ],
            "properties": {
                "title": "View associated items",
                "uri": "launch.html"
            }
        }
    ]
}
Feedback
Was this page helpful?
Additional resources