Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Debug your apps remotely in Azure Spring Apps
Article
2025-02-26
2 contributors
In this article
Note
TheBasic,Standard, andEnterpriseplans entered a retirement period on March 17, 2025. For more information, see theAzure Spring Apps retirement announcement.
TheStandard consumption and dedicatedplan entered a retirement period on September 30, 2024, with a complete shutdown by the end of March 2025. For more information, seeMigrate Azure Spring Apps Standard consumption and dedicated plan to Azure Container Apps.
This article applies to:â Basic/Standard â Enterprise
This feature describes how to enable remote debugging of your applications in Azure Spring Apps.
Prerequisites
Azure CLIwith the Azure Spring Apps extension. Use the following command to remove previous versions and install the latest extension. If you previously installed the spring-cloud extension, uninstall it to avoid configuration and version mismatches.az extension remove --name spring
az extension add --name spring
az extension remove --name spring-cloud
Azure CLIwith the Azure Spring Apps extension. Use the following command to remove previous versions and install the latest extension. If you previously installed the spring-cloud extension, uninstall it to avoid configuration and version mismatches.
az extension remove --name spring
az extension add --name spring
az extension remove --name spring-cloud
az extension remove --name spring
az extension add --name spring
az extension remove --name spring-cloud
A deployed application in Azure Spring Apps.
A deployed application in Azure Spring Apps.
Enable or disable remote debugging
For security reasons, Azure Spring Apps disables remote debugging by default. Based on your company policy, you can enable remote debugging for your app yourself or see an admin to enable it for you. You can enable or disable remote debugging using Azure CLI, Azure portal, or the VS Code extension.
Azure portal
Azure CLI
Use the following steps to enable remote debugging for your application using the Azure portal:
Navigate to your application page.
Navigate to your application page.
UnderSettingsin the left navigation pane, selectRemote debugging.
UnderSettingsin the left navigation pane, selectRemote debugging.
On theRemote debuggingpage, enable remote debugging and specify the debugging port.
On theRemote debuggingpage, enable remote debugging and specify the debugging port.

Use the following command to enable remote debugging for your application using the Azure CLI:
az spring app enable-remote-debugging \
    --name <application-name> \
    --deployment <deployment-name> \
    --resource-group <resource-group-name> \
    --service <service-name> \
    --port <port>
az spring app enable-remote-debugging \
    --name <application-name> \
    --deployment <deployment-name> \
    --resource-group <resource-group-name> \
    --service <service-name> \
    --port <port>
Use the following command to disable remote debugging for your application:
az spring app disable-remote-debugging \
    --name <application-name> \
    --deployment <deployment-name> \
    --resource-group <resource-group-name> \
    --service <service-name> \
az spring app disable-remote-debugging \
    --name <application-name> \
    --deployment <deployment-name> \
    --resource-group <resource-group-name> \
    --service <service-name> \
Use the following command to display the remote debugging configuration:
az spring app get-remote-debugging-config \
    --name <application-name> \
    --deployment <deployment-name> \
    --resource-group <resource-group-name> \
    --service <service-name> \
az spring app get-remote-debugging-config \
    --name <application-name> \
    --deployment <deployment-name> \
    --resource-group <resource-group-name> \
    --service <service-name> \
Assign an Azure role
To remotely debug an app instance, you must be granted the roleAzure Spring Apps Remote Debugging Role, which includes theMicrosoft.AppPlatform/Spring/apps/deployments/remotedebugging/actiondata action permission.
Azure Spring Apps Remote Debugging Role
Microsoft.AppPlatform/Spring/apps/deployments/remotedebugging/action
You can assign an Azure role using the Azure portal or Azure CLI.
Azure portal
Azure CLI
Use the following steps to assign an Azure role using the Azure portal.
Open theAzure portal.
Open theAzure portal.
Open your Azure Spring Apps service instance.
Open your Azure Spring Apps service instance.
In the navigation pane, selectAccess Control (IAM).
In the navigation pane, selectAccess Control (IAM).
On theAccess Control (IAM)page, selectAdd, and then selectAdd role assignment.
On theAccess Control (IAM)page, selectAdd, and then selectAdd role assignment.

On theAdd role assignmentpage, in theNamelist, search for and selectAzure Spring Apps Remote Debugging Role, and then selectNext.
On theAdd role assignmentpage, in theNamelist, search for and selectAzure Spring Apps Remote Debugging Role, and then selectNext.

SelectMembers, and then search for and select your username.
SelectMembers, and then search for and select your username.
SelectReview + assign.
SelectReview + assign.
Use the following command to obtain the Azure Spring Apps Remote Debugging Role.
az role assignment create \
    --role "Azure Spring Apps Remote Debugging Role" \
    --scope "<service-instance-resource-id>" \
    --assignee "<your-identity>"
az role assignment create \
    --role "Azure Spring Apps Remote Debugging Role" \
    --scope "<service-instance-resource-id>" \
    --assignee "<your-identity>"
Debug an app instance remotely
You can debug an app instance remotely using the Azure Toolkit for IntelliJ or the Azure Spring Apps for VS Code extension.
Azure Toolkit for IntelliJ
VS Code extension
This section describes how to debug an app instance remotely using the Azure Toolkit for IntelliJ.
Prerequisites
Azure Toolkit for IntelliJ.
IntelliJ IDEA, Ultimate or Community edition.
Enable or disable remote debugging
Use the following steps to enable or disable remote debugging:
Sign in to your Azure account in Azure Explorer.
Sign in to your Azure account in Azure Explorer.
Select an app instance, and then selectEnable Remote Debugging.
Select an app instance, and then selectEnable Remote Debugging.

Attach debugger
Use the following steps to attach debugger.
Select an app instance, and then selectAttach Debugger. IntelliJ connects to the app instance and starts remote debugging.
Select an app instance, and then selectAttach Debugger. IntelliJ connects to the app instance and starts remote debugging.

Azure Toolkit for IntelliJ creates the remote debugging configuration. You can find it underRemote Jvm Debug"Configure the module class path to the source code that you use for remote debugging.
Azure Toolkit for IntelliJ creates the remote debugging configuration. You can find it underRemote Jvm Debug"Configure the module class path to the source code that you use for remote debugging.

Troubleshooting
This section provides troubleshooting information.
Take the following actions if you fail to attach debugger and receive an error similar tojava.net.SocketException, connection resetorFailed to attach to remote debugger, ClosedConnectionException:Check the RBAC role to make sure that you're authorized to remotely debug an app instance.Make sure that you're connecting to a valid instance. Refresh the deployment to get the latest instances.
Take the following actions if you fail to attach debugger and receive an error similar tojava.net.SocketException, connection resetorFailed to attach to remote debugger, ClosedConnectionException:
java.net.SocketException, connection reset
Failed to attach to remote debugger, ClosedConnectionException
Check the RBAC role to make sure that you're authorized to remotely debug an app instance.
Check the RBAC role to make sure that you're authorized to remotely debug an app instance.
Make sure that you're connecting to a valid instance. Refresh the deployment to get the latest instances.
Make sure that you're connecting to a valid instance. Refresh the deployment to get the latest instances.

Take the following actions if you successfully attach debugger but can't remotely debug the app instance:Make sure that your IDE contains the source code you want to debug.Make sure that the debug configuration has the correct module class path.
Take the following actions if you successfully attach debugger but can't remotely debug the app instance:
Make sure that your IDE contains the source code you want to debug.
Make sure that the debug configuration has the correct module class path.
This section describes how to debug an app instance remotely using the VS Code extension.
Prerequisites
Azure Spring Apps for VS Code Plugin.
Visual Studio Code.
Enable or disable remote debugging
Use the following steps to enable or disable remote debugging:
Sign in to your Azure subscription.
Sign in to your Azure subscription.
Select an app instance, and then selectEnable Remote Debugging.
Select an app instance, and then selectEnable Remote Debugging.

Attach debugger
Use the following steps to attach debugger.
Select an app instance, and then selectAttach Debugger. VS Code connects to the app instance and starts remote debugging.
Select an app instance, and then selectAttach Debugger. VS Code connects to the app instance and starts remote debugging.

Troubleshooting
This section provides troubleshooting information.
Take the following actions if you fail to attach debugger and receive an error similar tojava.net.SocketException, connection resetorFailed to attach to remote debugger, ClosedConnectionException:Check the RBAC role to make sure that you're authorized to remotely debug an app instance.Make sure that you're connecting to a valid instance. Refresh the deployment to get the latest instances.
Take the following actions if you fail to attach debugger and receive an error similar tojava.net.SocketException, connection resetorFailed to attach to remote debugger, ClosedConnectionException:
java.net.SocketException, connection reset
Failed to attach to remote debugger, ClosedConnectionException
Check the RBAC role to make sure that you're authorized to remotely debug an app instance.
Check the RBAC role to make sure that you're authorized to remotely debug an app instance.
Make sure that you're connecting to a valid instance. Refresh the deployment to get the latest instances.
Make sure that you're connecting to a valid instance. Refresh the deployment to get the latest instances.

Take the following action if you successfully attach debugger but can't remotely debug the app instance:Make sure that your IDE contains the source code you want to debug.
Take the following action if you successfully attach debugger but can't remotely debug the app instance:
Make sure that your IDE contains the source code you want to debug.
Limitations
Remote debugging is only supported for Java applications.
Tips
Java remote debugging is dangerous because it allows remote code execution. Azure Spring Apps helps you secure the communication between your client IDE and the remote application. However, you should disable remote debugging and remove the RBAC role after you're finished.
You should scale in the app instance to one to ensure that traffic can go to the instance.
Next steps
Azure Spring Apps
Feedback
Was this page helpful?
Additional resources