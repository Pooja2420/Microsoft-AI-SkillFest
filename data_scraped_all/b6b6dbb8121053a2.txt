Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
resources.pipelines.pipeline definition
Article
2025-03-20
3 contributors
In this article
If you have an Azure Pipeline that produces artifacts, your pipeline can consume the artifacts by defining a pipeline resource. In Azure DevOps Server 2020 and higher, you can also enablepipeline completion triggersusing a pipeline resource.
pipelines:
- pipeline: string # Required as first property. ID of the pipeline resource.
  project: string # Project for the source; defaults to current project.
  source: string # Name of the pipeline that produces the artifact.
  version: string # The pipeline run number to pick the artifact, defaults to latest pipeline successful across all stages; used only for manual or scheduled triggers.
  branch: string # Branch to pick the artifact. Optional; defaults to all branches, used only for manual or scheduled triggers.
  tags: [ string ] # List of tags required on the pipeline to pickup default artifacts. Optional; used only for manual or scheduled triggers.
  trigger:  # Specify none to disable, true to include all branches, or use the full syntax as described in the following examples.
    enabled: boolean # Whether the trigger is enabled; defaults to true.
    branches: branches # Branches to include or exclude for triggering a run.
    stages: [ string ] # List of stages that when matched will trigger the pipeline.
    tags: [ string ] # List of tags that when matched will trigger the pipeline.
pipelines:
- pipeline: string # Required as first property. ID of the pipeline resource.
  project: string # Project for the source; defaults to current project.
  source: string # Name of the pipeline that produces the artifact.
  version: string # The pipeline run number to pick the artifact, defaults to latest pipeline successful across all stages; used only for manual or scheduled triggers.
  branch: string # Branch to pick the artifact. Optional; defaults to all branches, used only for manual or scheduled triggers.
  tags: [ string ] # List of tags required on the pipeline to pickup default artifacts. Optional; used only for manual or scheduled triggers.
  trigger:  # Specify none to disable, true to include all branches, or use the full syntax as described in the following examples.
    enabled: boolean # Whether the trigger is enabled; defaults to true.
    branches: branches # Branches to include or exclude for triggering a run.
    stages: [ string ] # List of stages that when matched will trigger the pipeline.
    tags: [ string ] # List of tags that when matched will trigger the pipeline.
pipelines:
- pipeline: string # Required as first property. ID of the pipeline resource.
  project: string # Project for the source; defaults to current project.
  source: string # Name of the pipeline that produces the artifact.
  version: string # The pipeline run number to pick the artifact, defaults to latest pipeline successful across all stages; used only for manual or scheduled triggers.
  branch: string # Branch to pick the artifact. Optional; defaults to all branches, used only for manual or scheduled triggers.
  tags: [ string ] # List of tags required on the pipeline to pickup default artifacts. Optional; used only for manual or scheduled triggers.
  trigger:  # Specify none to disable, true to include all branches, or use the full syntax as described in the following examples.
    enabled: boolean # Whether the trigger is enabled; defaults to true.
    branches: branches # Branches to include or exclude for triggering a run.
pipelines:
- pipeline: string # Required as first property. ID of the pipeline resource.
  project: string # Project for the source; defaults to current project.
  source: string # Name of the pipeline that produces the artifact.
  version: string # The pipeline run number to pick the artifact, defaults to latest pipeline successful across all stages; used only for manual or scheduled triggers.
  branch: string # Branch to pick the artifact. Optional; defaults to all branches, used only for manual or scheduled triggers.
  tags: [ string ] # List of tags required on the pipeline to pickup default artifacts. Optional; used only for manual or scheduled triggers.
  trigger:  # Specify none to disable, true to include all branches, or use the full syntax as described in the following examples.
    enabled: boolean # Whether the trigger is enabled; defaults to true.
    branches: branches # Branches to include or exclude for triggering a run.
Definitions that reference this definition:resources.pipelines
Properties
pipelinestring. Required as first property.ID of the pipeline resource. Acceptable values: [-_A-Za-z0-9]*.
pipeline
projectstring.Project for the source; defaults to current project.
project
sourcestring.Name of the pipeline that produces the artifact. If the pipeline is contained in a folder, include the folder name, including the leading\, for example\security pipelines\security-lib-ci. This property is not case sensitive and does not need quotes if the name include spaces. The folder path must be specified if there are multiple pipelines with the same name.
source
\
\security pipelines\security-lib-ci
versionstring.The pipeline run number to pick the artifact, defaults to latest pipeline successful across all stages; used only for manual or scheduled triggers.
version
branchstring.Branch to pick the artifact. Optional; defaults to all branches, used only for manual or scheduled triggers.
branch
tagsstring list.List of tags required on the pipeline to pickup default artifacts. Optional; used only for manual or scheduled triggers.
tags
triggerresources.pipelines.pipeline.trigger.Specify none to disable, true to include all branches, or use the full syntax as described in the following examples.
trigger
Remarks
Note
pipeline:specifies the name of the pipeline resource. Use the label defined here when referring to the pipeline resource from other parts of the pipeline, such as when using pipeline resource variables or downloading artifacts.
pipeline:
For more information aboutstagesandtagsin the pipeline resource trigger, seepipeline-completion triggers.
stages
tags
For more information about pipeline resource triggers, seepipeline-completion triggers.
Pipeline resource trigger syntax
Note
Pipeline completion triggers use theDefault branch for manual and scheduled buildssetting to determine which branch's version of a YAML pipeline's branch filters to evaluate when determining whether to run a pipeline as the result of another pipeline completing. By default this setting points to the default branch of the repository. For more information, seePipeline completion triggers - branch considerations.
There are several ways to define triggers in a pipeline resource. To trigger a run when any run of the referenced pipeline completes, usetrigger: true.
trigger: true
resources:
  pipelines:
  - pipeline: source-pipeline
    source: TriggeringPipeline
    trigger: true
resources:
  pipelines:
  - pipeline: source-pipeline
    source: TriggeringPipeline
    trigger: true
To disable the pipeline resource trigger, specify a value ofnone.
none
resources:
  pipelines:
  - pipeline: source-pipeline
    source: TriggeringPipeline
    trigger: none
resources:
  pipelines:
  - pipeline: source-pipeline
    source: TriggeringPipeline
    trigger: none
To configure branch filters, use the full syntax. Branch filters can be specified as a list of branches to include, or as a list of branches to include combined with a list of branches to exclude.
To specify a list of branches to include and exclude, use the followingtriggersyntax.
trigger
resources:
  pipelines:
  - pipeline: source-pipeline
    source: TriggeringPipeline
    trigger:
      branches:
        include:
        - main
        - develop
        - features/*
        exclude:
        - features/experimental/*
resources:
  pipelines:
  - pipeline: source-pipeline
    source: TriggeringPipeline
    trigger:
      branches:
        include:
        - main
        - develop
        - features/*
        exclude:
        - features/experimental/*
To specify a list of branches to include, with no excludes, omit theexcludevalue, or use the following syntax to specify the list of branches to include directly followingbranches.
exclude
branches
resources:
  pipelines:
  - pipeline: source-pipeline
    source: TriggeringPipeline
    trigger:
      branches:
      - main
      - develop
resources:
  pipelines:
  - pipeline: source-pipeline
    source: TriggeringPipeline
    trigger:
      branches:
      - main
      - develop
To filter by stages or tags, use the followingtriggersyntax.
trigger
resources:
  pipelines:
  - pipeline: source-pipeline
    source: TriggeringPipeline
    trigger:
      branches: # Branches to include
      tags: # List of tags that when matched will trigger the pipeline. 
      - release25
      stages: # List of stages that when complete will trigger the pipeline. 
      - build
resources:
  pipelines:
  - pipeline: source-pipeline
    source: TriggeringPipeline
    trigger:
      branches: # Branches to include
      tags: # List of tags that when matched will trigger the pipeline. 
      - release25
      stages: # List of stages that when complete will trigger the pipeline. 
      - build
For more information, seePipeline completion triggers.
Important
When you define a resource trigger, if its pipeline resource is from the same repo as the current pipeline, triggering follows the same branch and commit on which the event is raised.
But if the pipeline resource is from a different repo, the current pipeline is triggered on the branch specified by theDefault branch for manual and scheduled buildssetting. For more information, seeBranch considerations for pipeline completion triggers.
Pipeline resource metadata as predefined variables
In each run, the metadata for a pipeline resource is available to all jobs as the following predefined variables. These variables are available to your pipeline at runtime, and therefore can't be used intemplate expressions, which are evaluated at pipeline compile time.
resources.pipeline.<Alias>.projectName
resources.pipeline.<Alias>.projectID
resources.pipeline.<Alias>.pipelineName
resources.pipeline.<Alias>.pipelineID
resources.pipeline.<Alias>.runName
resources.pipeline.<Alias>.runID
resources.pipeline.<Alias>.runURI
resources.pipeline.<Alias>.sourceBranch
resources.pipeline.<Alias>.sourceCommit
resources.pipeline.<Alias>.sourceProvider
resources.pipeline.<Alias>.requestedFor
resources.pipeline.<Alias>.requestedForID
resources.pipeline.<Alias>.projectName
resources.pipeline.<Alias>.projectID
resources.pipeline.<Alias>.pipelineName
resources.pipeline.<Alias>.pipelineID
resources.pipeline.<Alias>.runName
resources.pipeline.<Alias>.runID
resources.pipeline.<Alias>.runURI
resources.pipeline.<Alias>.sourceBranch
resources.pipeline.<Alias>.sourceCommit
resources.pipeline.<Alias>.sourceProvider
resources.pipeline.<Alias>.requestedFor
resources.pipeline.<Alias>.requestedForID
Important
projectNameis not present in the variables if the pipeline resource does not have aprojectvalue specified. Theprojectproperty is optional for pipeline resources that reference a pipeline in the same project, but may be specified if desired.
projectName
project
project
Replace<Alias>with the ID of the pipeline resource. For the following pipeline resource, the variable to accessrunIDisresources.pipeline.source-pipeline.runID.
<Alias>
runID
resources.pipeline.source-pipeline.runID
resources:
  pipelines:
  - pipeline: source-pipeline
    source: TriggeringPipeline
resources:
  pipelines:
  - pipeline: source-pipeline
    source: TriggeringPipeline
When a pipeline is triggered by one of its pipeline resources, the following variables are set in addition to the variables in the previous list.
Build.Reason
ResourceTrigger
Resources.TriggeringAlias
source-pipeline
Resources.TriggeringCategory
pipeline
The following example has two pipeline resources.
resources:
 pipelines:
   - pipeline: source-pipeline
     source: PipelineTriggerSource
     project: FabrikamFiber
     trigger: true
   - pipeline: other-project-pipeline
     source: PipelineTriggerFromOtherProject
     project: FabrikamRepo
     trigger: true

trigger: none # Only trigger with pipeline resource trigger

pool:
  vmImage: ubuntu-latest

- bash: echo $(resources.pipeline.source-pipeline.projectName)
- bash: printenv | sort
resources:
 pipelines:
   - pipeline: source-pipeline
     source: PipelineTriggerSource
     project: FabrikamFiber
     trigger: true
   - pipeline: other-project-pipeline
     source: PipelineTriggerFromOtherProject
     project: FabrikamRepo
     trigger: true

trigger: none # Only trigger with pipeline resource trigger

pool:
  vmImage: ubuntu-latest

- bash: echo $(resources.pipeline.source-pipeline.projectName)
- bash: printenv | sort
Whe this pipeline is run, the firstbashtask outputs theprojectNameof the the pipeline resource namedsource-pipeline, which isFabrikamFiber.
bash
projectName
source-pipeline
FabrikamFiber
The secondbashtask outputs all of the environment variables available to the task, including the pipeline resource variables described in this section. Listing environment variables isn't typically done in a production pipeline, but it can be useful for troubleshooting. In this example there are two pipeline resources, and the output contains the following two lines.
bash
RESOURCES_PIPELINE_OTHER-PROJECT-PIPELINE_PROJECTNAME=FabrikamRepo
RESOURCES_PIPELINE_SOURCE-PIPELINE_PROJECTNAME=FabrikamFiber
RESOURCES_PIPELINE_OTHER-PROJECT-PIPELINE_PROJECTNAME=FabrikamRepo
RESOURCES_PIPELINE_SOURCE-PIPELINE_PROJECTNAME=FabrikamFiber
Note
System and user-defined variables get injected as environment variables for your platform. When variables convert into environment variables, variable names become uppercase, and periods turn into underscores. For example, the variable nameany.variablebecomesANY_VARIABLE.
any.variable
ANY_VARIABLE
For more information about using variables and variable syntax, seeUnderstand variable syntax,Specify conditions, andExpressions.
You can consume artifacts from a pipeline resource by using adownloadtask. See thesteps.downloadkeyword.
download
Examples
resources:
  pipelines:
  - pipeline: MyAppA
    source: MyCIPipelineA
  - pipeline: MyAppB
    source: MyCIPipelineB
    trigger: true
  - pipeline: MyAppC
    project:  DevOpsProject
    source: MyCIPipelineC
    branch: releases/M159
    version: 20190718.2
    trigger:
      branches:
        include:
        - main
        - releases/*
        exclude:
        - users/*
resources:
  pipelines:
  - pipeline: MyAppA
    source: MyCIPipelineA
  - pipeline: MyAppB
    source: MyCIPipelineB
    trigger: true
  - pipeline: MyAppC
    project:  DevOpsProject
    source: MyCIPipelineC
    branch: releases/M159
    version: 20190718.2
    trigger:
      branches:
        include:
        - main
        - releases/*
        exclude:
        - users/*
See also
Add resources to a pipeline
Feedback
Was this page helpful?
Additional resources