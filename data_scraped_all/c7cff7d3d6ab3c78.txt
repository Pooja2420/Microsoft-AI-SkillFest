Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Migrate log disk to Ultra disk
Article
2022-08-31
9 contributors
In this article
Applies to:SQL Server on Azure VM
Azure ultra disks deliver high throughput, high IOPS, and consistently low latency disk storage for SQL Server on Azure Virtual Machine (VM).
This article teaches you to migrate your log disk to an ultra SSD to take advantage of the performance benefits offered by ultra disks.
Back up database
Complete afull backupup of your database.
Attach disk
Attach the Ultra SSD to your virtual machine once you have enabled ultradisk compatibility on the VM.
Ultra disk is supported on a subset of VM sizes and regions. Before proceeding, validate that your VM is in a region, zone, and size that supports ultra disk. You candetermine and validate VM size and regionusing the Azure CLI or PowerShell.
Enable compatibility
To enable compatibility, follow these steps:
Go to your virtual machine in theAzure portal.
Go to your virtual machine in theAzure portal.
Stop/deallocate the virtual machine.
Stop/deallocate the virtual machine.
SelectDisksunderSettingsand then selectAdditional settings.
SelectDisksunderSettingsand then selectAdditional settings.

SelectYestoEnable Ultra disk compatibility.
SelectYestoEnable Ultra disk compatibility.

SelectSave.
SelectSave.
Attach disk
Use the Azure portal to attach an ultra disk to your virtual machine. For details, seeAttach an ultra disk.
Once the disk is attached, start your VM once more using the Azure portal.
Format disk
Connect to your virtual machine and format your ultra disk.
To format your ultra disk, follow these steps:
Connect to your VM by usingBastion.
UseDisk Managementto format and partition your newly attached ultra disk.
Use disk for log
Configure SQL Server to use the new log drive. You can do so using Transact-SQL (T-SQL) or SQL Server Management Studio (SSMS). The account used for the SQL Server service account must have full control of the new log file location.
Configure permissions
Verify the service account used by SQL Server. You can do so by using SQL Server Configuration Manager or Services.msc.
Navigate to your new disk.
Create a folder (or multiple folders) to be used for your log file.
Right-click the folder and selectProperties.
On theSecuritytab, grant full control access to the SQL Server service account.
SelectOKto save your settings.
Repeat this for every root-level folder where you plan to have SQL data.
Use new log drive
After permission has been granted, use either Transact-SQL (T-SQL) or SQL Server Management Studio (SSMS) to detach the database and move existing log files to the new location.
Caution
Detaching the database will take it offline, closing connections and rolling back any transactions that are in-flight. Proceed with caution and during a down-time maintenance window.
Transact-SQL (T-SQL)
SQL Server Management Studio (SSMS)
Use T-SQL to move the existing files to a new location:
Connect to your database in SQL Server Management Studio and open aNew Querywindow.
Connect to your database in SQL Server Management Studio and open aNew Querywindow.
Get the existing files and locations:USE AdventureWorks2022;
GO

sp_helpfile
GO
Get the existing files and locations:
USE AdventureWorks2022;
GO

sp_helpfile
GO
USE AdventureWorks2022;
GO

sp_helpfile
GO
Detach the database:USE master
GO

sp_detach_db 'AdventureWorks'
GO
Detach the database:
USE master
GO

sp_detach_db 'AdventureWorks'
GO
USE master
GO

sp_detach_db 'AdventureWorks'
GO
Use file explorer to move the log file to the new location on the ultra disk.
Use file explorer to move the log file to the new location on the ultra disk.
Attach the database, specifying the new file locations:sp_attach_db 'AdventureWorks'
'E:\Fixed_FG\AdventureWorks.mdf',
'E:\Fixed_FG\AdventureWorks_2.ndf',
'F:\New_Log\AdventureWorks_log.ldf'
GO
Attach the database, specifying the new file locations:
sp_attach_db 'AdventureWorks'
'E:\Fixed_FG\AdventureWorks.mdf',
'E:\Fixed_FG\AdventureWorks_2.ndf',
'F:\New_Log\AdventureWorks_log.ldf'
GO
sp_attach_db 'AdventureWorks'
'E:\Fixed_FG\AdventureWorks.mdf',
'E:\Fixed_FG\AdventureWorks_2.ndf',
'F:\New_Log\AdventureWorks_log.ldf'
GO
At this point, the database comes online with the log in the new location.
Use SSMS to move the existing files to a new location:
Connect to your database in SQL Server Management Studio (SSMS).
Right-click the database, selectPropertiesand then selectFiles.
Note down the path of the existing files.
SelectOKto close the dialog box.
Right-click the database, selectTasks>Detach.
Follow the wizard to detach the database.
Use File Explorer to manually move the log file to the new location.
Attach the database in SQL Server Management StudioRight-clickDatabasesinObject Explorerand selectAttach database.Using the dialog box, add each file, including the log file in its new location.SelectOKto attach the database.
Right-clickDatabasesinObject Explorerand selectAttach database.
Using the dialog box, add each file, including the log file in its new location.
SelectOKto attach the database.
At this point, the database comes online with the log in the new location.
Next steps
Review theperformance best practicesfor additional settings to improve performance.
For an overview of SQL Server on Azure Virtual Machines, see the following articles:
Overview of SQL Server on Windows VMs
Overview of SQL Server on Linux VMs
Feedback
Was this page helpful?
Additional resources