Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Implement continuous deployment of your app to an Azure Virtual Machine Scale Set
Article
2021-09-07
3 contributors
In this article
TFS 2017
Note
In Microsoft Team Foundation Server (TFS) 2018 and previous versions,
build and releasepipelinesare calleddefinitions,runsare calledbuilds,service connectionsare calledservice endpoints,stagesare calledenvironments,
andjobsare calledphases.
TheBuild Machine Imagetask makes it easy for users who are new to immutable
VHD-based deployments to usePackerwithout learning concepts such as provisioners
and builders. If you are deploying to virtual machines by using deployment scripts,
you can use this task for either creating new virtual machine instances or for
creating and updating virtual machine scale sets.
The autogenerate mode of the task generates thePackerconfiguration with:
Builder for Azure
Provisioners that depend on the type of base operating system selected.
For Linux, this is shell script. For Windows, this is PowerShell script.
The deployment script provided is used by the provisioner.
A customPackerconfiguration JSON file can also be used.
Get set up
Begin with a CI build
Before you begin, you need a CI build that creates your app. To set up CI, see:
Build and deploy your app
Create the release pipeline
Open theReleasestab ofAzure Pipelinesand choose the
"+" icon to create a new release pipeline.
Open theReleasestab ofAzure Pipelinesand choose the
"+" icon to create a new release pipeline.
In theCreate release pipelinedialog, select theEmptytemplate and chooseNext.
In theCreate release pipelinedialog, select theEmptytemplate and chooseNext.
In the next page, select the build pipeline you created
earlier and chooseCreate. This creates a new release pipeline
with one default stage.
In the next page, select the build pipeline you created
earlier and chooseCreate. This creates a new release pipeline
with one default stage.
In the new release pipeline, select+ Add tasksand add these tasks:Build Machine ImageAzure PowerShellTheBuild Machine ImageusesPackerto create a VHD. The entire process is:Create a new virtual machine with the selected base operating systemInstall all the prerequisites and the application on the VM by using a deployment scriptCreate a VHD and store it in the Azure storage accountDelete the new virtual machine that was created
In the new release pipeline, select+ Add tasksand add these tasks:
Build Machine Image
Azure PowerShell

TheBuild Machine ImageusesPackerto create a VHD. The entire process is:
Create a new virtual machine with the selected base operating system
Install all the prerequisites and the application on the VM by using a deployment script
Create a VHD and store it in the Azure storage account
Delete the new virtual machine that was created

Configure theBuild Machine Imagetask as follows:Deploy: Build Machine Image- Build machine image using Packer.Packer template: You can use your own packer configuration JSON file or use the autogenerate feature where the task generates a packer template for you. This example uses the autogenerated packer configuration.Azure subscription: Select a connection from the list underAvailable Azure Service Connectionsor create a more restricted permissions
connection to your Azure subscription. For more information, seeAzure Resource Manager service connection.Storage location: The location of storage account where the VHD will be stored. This should be the same location where the virtual machine scale set is located, or where it will be created.Base Image Source: You can choose from either a curated gallery of OS images, or provide the URL of your custom image. For example,Ubuntu 16.04 LTSDeployment Package: Specify the path of the deployment package directory relative to$(System.DefaultWorkingDirectory). For example,$(System.DefaultWorkingDirectory)/Packer-NodeJs/dropDeployment Script: Specify the relative path to the PowerShell script (for Windows) or shell script (for Linux) that deploys the package. This script should be within the deployment package path selected above. For example,Deploy/ubuntu/deployNodejsApp.sh. The script may need to install Curl, Node.js, NGINX, and PM2; copy the application; and then configure NGINX and PM2 to run the application.Output - Image URL: Provide a name for the output variable that will hold the URL of the generated machine image. For example,bakedImageUrlDeploy: Azure PowerShell- Run a PowerShell script to update the Virtual Machine Scale Set with the new VHD.Azure Connection Type: SelectAzure Resource ManagerAzure RM Subscription: Select a connection from the list underAvailable Azure Service Connectionsor create a more restricted permissions
connection to your Azure subscription. For more information, seeAzure Resource Manager service connection.Script type: SelectInline ScriptInline Script: Enter the script shown below to update the virtual machine scale set.Use the following script for theInline Scriptparameter of theAzure PowerShelltask:# get the VMSS model

$vmss = Get-AzureRmVmss -ResourceGroupName resource_group_name -VMScaleSetName VM_scale_set_name

# set the new version in the model data

$vmss.virtualMachineProfile.storageProfile.osDisk.image.uri="$(bakedImageUrl)"

# update the virtual machine scale set model

Update-AzureRmVmss -ResourceGroupName resource_group_name -Name resource_group_name -VirtualMachineScaleSet $vmssYou can use variables to pass values such as the resource group and virtual machine scale set names to the script if you wish.
Configure theBuild Machine Imagetask as follows:
Deploy: Build Machine Image- Build machine image using Packer.
Packer template: You can use your own packer configuration JSON file or use the autogenerate feature where the task generates a packer template for you. This example uses the autogenerated packer configuration.
Packer template: You can use your own packer configuration JSON file or use the autogenerate feature where the task generates a packer template for you. This example uses the autogenerated packer configuration.
Azure subscription: Select a connection from the list underAvailable Azure Service Connectionsor create a more restricted permissions
connection to your Azure subscription. For more information, seeAzure Resource Manager service connection.
Azure subscription: Select a connection from the list underAvailable Azure Service Connectionsor create a more restricted permissions
connection to your Azure subscription. For more information, seeAzure Resource Manager service connection.
Storage location: The location of storage account where the VHD will be stored. This should be the same location where the virtual machine scale set is located, or where it will be created.
Storage location: The location of storage account where the VHD will be stored. This should be the same location where the virtual machine scale set is located, or where it will be created.
Base Image Source: You can choose from either a curated gallery of OS images, or provide the URL of your custom image. For example,Ubuntu 16.04 LTS
Base Image Source: You can choose from either a curated gallery of OS images, or provide the URL of your custom image. For example,Ubuntu 16.04 LTS
Ubuntu 16.04 LTS
Deployment Package: Specify the path of the deployment package directory relative to$(System.DefaultWorkingDirectory). For example,$(System.DefaultWorkingDirectory)/Packer-NodeJs/drop
Deployment Package: Specify the path of the deployment package directory relative to$(System.DefaultWorkingDirectory). For example,$(System.DefaultWorkingDirectory)/Packer-NodeJs/drop
$(System.DefaultWorkingDirectory)/Packer-NodeJs/drop
Deployment Script: Specify the relative path to the PowerShell script (for Windows) or shell script (for Linux) that deploys the package. This script should be within the deployment package path selected above. For example,Deploy/ubuntu/deployNodejsApp.sh. The script may need to install Curl, Node.js, NGINX, and PM2; copy the application; and then configure NGINX and PM2 to run the application.
Deployment Script: Specify the relative path to the PowerShell script (for Windows) or shell script (for Linux) that deploys the package. This script should be within the deployment package path selected above. For example,Deploy/ubuntu/deployNodejsApp.sh. The script may need to install Curl, Node.js, NGINX, and PM2; copy the application; and then configure NGINX and PM2 to run the application.
Deploy/ubuntu/deployNodejsApp.sh
Output - Image URL: Provide a name for the output variable that will hold the URL of the generated machine image. For example,bakedImageUrl
Output - Image URL: Provide a name for the output variable that will hold the URL of the generated machine image. For example,bakedImageUrl
bakedImageUrl

Deploy: Azure PowerShell- Run a PowerShell script to update the Virtual Machine Scale Set with the new VHD.
Azure Connection Type: SelectAzure Resource Manager
Azure Connection Type: SelectAzure Resource Manager
Azure Resource Manager
Azure RM Subscription: Select a connection from the list underAvailable Azure Service Connectionsor create a more restricted permissions
connection to your Azure subscription. For more information, seeAzure Resource Manager service connection.
Azure RM Subscription: Select a connection from the list underAvailable Azure Service Connectionsor create a more restricted permissions
connection to your Azure subscription. For more information, seeAzure Resource Manager service connection.
Script type: SelectInline Script
Script type: SelectInline Script
Inline Script
Inline Script: Enter the script shown below to update the virtual machine scale set.
Inline Script: Enter the script shown below to update the virtual machine scale set.

Use the following script for theInline Scriptparameter of theAzure PowerShelltask:
# get the VMSS model

$vmss = Get-AzureRmVmss -ResourceGroupName resource_group_name -VMScaleSetName VM_scale_set_name

# set the new version in the model data

$vmss.virtualMachineProfile.storageProfile.osDisk.image.uri="$(bakedImageUrl)"

# update the virtual machine scale set model

Update-AzureRmVmss -ResourceGroupName resource_group_name -Name resource_group_name -VirtualMachineScaleSet $vmss
# get the VMSS model

$vmss = Get-AzureRmVmss -ResourceGroupName resource_group_name -VMScaleSetName VM_scale_set_name

# set the new version in the model data

$vmss.virtualMachineProfile.storageProfile.osDisk.image.uri="$(bakedImageUrl)"

# update the virtual machine scale set model

Update-AzureRmVmss -ResourceGroupName resource_group_name -Name resource_group_name -VirtualMachineScaleSet $vmss
You can use variables to pass values such as the resource group and virtual machine scale set names to the script if you wish.
In theDeployment conditionsdialog for the stage, ensure that theTriggersection is set toAfter release creation.
In theDeployment conditionsdialog for the stage, ensure that theTriggersection is set toAfter release creation.
Enter a name for the release pipeline and save it.
Enter a name for the release pipeline and save it.
Create a new release, select the latest build, and
ensure that the application has been deployed correctly and has generated the VHD.
Create a new release, select the latest build, and
ensure that the application has been deployed correctly and has generated the VHD.
FAQ
I use TFS on-premises and I don't see some of these features. Why not?
Some of these features are available only onAzure Pipelinesand not yet available on-premises. Some features are available on-premises if you haveupgraded to the latest version of TFS.
Help and support
See ourtroubleshootingpage
Get advice onStack Overflow,
and feel free to post your questions, search for answers, or suggest a feature on ourAzure DevOps Developer Community.Supportpage.
Additional resources