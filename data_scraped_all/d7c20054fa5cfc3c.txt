Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Edit and manage logic app workflows in the Azure portal
Article
2025-03-20
2 contributors
In this article
Applies to:Azure Logic Apps (Consumption + Standard)
This guide shows how to manage Consumption or Standard logic app workflows using the Azure portal and perform tasks such as edit, disable, enable, and delete workflows.
Prerequisites
An Azure account and subscription. If you don't have an Azure subscription,sign up for a free Azure account.
An Azure account and subscription. If you don't have an Azure subscription,sign up for a free Azure account.
An existing Consumption or Standard logic app workflow
An existing Consumption or Standard logic app workflow

Find and open a logic app resource
In theAzure portalsearch box, enterlogic apps, and selectLogic apps.
In theAzure portalsearch box, enterlogic apps, and selectLogic apps.
From the logic apps list, find your logic app resource by either browsing or filtering the list.
From the logic apps list, find your logic app resource by either browsing or filtering the list.
To open your logic app resource, select the app that you want to manage.
To open your logic app resource, select the app that you want to manage.
View logic app properties
In the Azure portal,find and open your logic app resource.
In the Azure portal,find and open your logic app resource.
From your logic app's menu, underSettings, selectProperties.
From your logic app's menu, underSettings, selectProperties.
On thePropertiespane, you can view and copy the following information about your logic app resource, for example:ConsumptionNameResource IDResource groupLocationTypeSubscription NameSubscription IDAccess EndpointRuntime outgoing IP addressesAccess endpoint IP addressesConnector outgoing IP addressesStandardStatusURLVirtual IP addressModeOutbound IP addressAdditional Outbound IP AddressesFTP/deployment userFTP host nameFTP diagnostic logsFTP host nameFTPS diagnostic logsResource IDLocationResource GroupSubscription nameSubscription ID
On thePropertiespane, you can view and copy the following information about your logic app resource, for example:
Consumption
Name
Resource ID
Resource group
Location
Type
Subscription Name
Subscription ID
Access Endpoint
Runtime outgoing IP addresses
Access endpoint IP addresses
Connector outgoing IP addresses
Standard
Status
URL
Virtual IP address
Mode
Outbound IP address
Additional Outbound IP Addresses
FTP/deployment user
FTP host name
FTP diagnostic logs
FTP host name
FTPS diagnostic logs
Resource ID
Location
Resource Group
Subscription name
Subscription ID

View connections
When you create connections in a workflow usingconnectors managed by Microsoft, these connections are separate Azure resources with their own resource definitions and are hosted in global, multitenant Azure. Standard logic app workflows can also usebuilt-in service provider connectorsthat natively run and are powered by the single-tenant Azure Logic Apps runtime. To view and manage these connections, follow these steps, based on the logic app resource type:
Consumption
Standard
In the Azure portal,find and open your logic app resource.
In the Azure portal,find and open your logic app resource.
From the logic app menu, underDevelopment Tools, selectAPI connections.
From the logic app menu, underDevelopment Tools, selectAPI connections.
On theAPI connectionspage, select a specific connection instance, which shows more information about that connection. To view the underlying connection resource definition, selectJSON View.
On theAPI connectionspage, select a specific connection instance, which shows more information about that connection. To view the underlying connection resource definition, selectJSON View.
In the Azure portal,find and open your logic app resource.
In the Azure portal,find and open your logic app resource.
From the logic app menu, underWorkflows, selectConnections.
From the logic app menu, underWorkflows, selectConnections.
Based on the connection type that you want to view, select one of the following options:OptionDescriptionAPI ConnectionsConnections created by globally hosted, multitenant Azure connectors. To view the underlying connection resource definition, selectJSON View.Service Provider ConnectionsConnections created by built-in, service provider connectors, based on the service provider interface implementation. To view more information about a specific connection instance, in theView Detailscolumn, select the eye icon. To view the selected connection's underlying resource definition, selectJSON View.Function ConnectionsConnections to functions in an associated function app. To view more information about a function, in theView Detailscolumn, select the eye icon.JSON ViewThe underlying resource definitions for all connections across workflows in the logic app resource
Based on the connection type that you want to view, select one of the following options:

Add blank workflow to logic app (Standard only)
While a Consumption logic app can have only one workflow, a Standard logic app resource can have multiple workflows. You can add blank workflows to a deployed Standard logic app resource and continue building the workflow in the Azure portal.
In theAzure portal, select your deployed Standard logic app resource.
In theAzure portal, select your deployed Standard logic app resource.
On the logic app resource menu, underWorkflows, selectWorkflows.
On the logic app resource menu, underWorkflows, selectWorkflows.
On theWorkflowspage toolbar, selectAdd>Add.
On theWorkflowspage toolbar, selectAdd>Add.

In theNew workflowpane, provide the workflow name. Select eitherStatefulorStateless>Create.
In theNew workflowpane, provide the workflow name. Select eitherStatefulorStateless>Create.
After the new workflow appears on theWorkflowspage, select that workflow to open the designer so you can build your workflow.
After the new workflow appears on theWorkflowspage, select that workflow to open the designer so you can build your workflow.

Disable or enable a deployed logic app
Deployed Consumption and Standard logic apps have different ways to disable and enable their activity.
Consumption
Standard

Disabling a Consumption logic app affects all workflow instances in the following ways:
Azure Logic Apps continues all in-progress and pending workflow instances until they finish running. Based on the volume or backlog, this process might take time to complete.
Azure Logic Apps continues all in-progress and pending workflow instances until they finish running. Based on the volume or backlog, this process might take time to complete.
Azure Logic Apps doesn't create or run new workflow instances.
Azure Logic Apps doesn't create or run new workflow instances.
You can resubmit workflow runs while the logic app is disabled.
You can resubmit workflow runs while the logic app is disabled.
The workflow trigger doesn't fire while the logic app is disabled. However, the trigger state remembers the point where you disabled the logic app. When you restart the logic app, the trigger fires for all unprocessed items since the last workflow run.To stop the trigger from firing on all unprocessed items since the last workflow run, you mustclear the trigger state.
The workflow trigger doesn't fire while the logic app is disabled. However, the trigger state remembers the point where you disabled the logic app. When you restart the logic app, the trigger fires for all unprocessed items since the last workflow run.
To stop the trigger from firing on all unprocessed items since the last workflow run, you mustclear the trigger state.

You can disable or enable one or multiple Consumption logic apps at the same time.
In theAzure portalsearch box, enterlogic apps, and selectLogic apps.
In theAzure portalsearch box, enterlogic apps, and selectLogic apps.
On theLogic appspage, view only the Consumption logic apps using thePlanfilter.
On theLogic appspage, view only the Consumption logic apps using thePlanfilter.
Based on whether you're disabling or enabling your logic apps, view only theEnabledorDisabledlogic apps using theStatusfilter.
Based on whether you're disabling or enabling your logic apps, view only theEnabledorDisabledlogic apps using theStatusfilter.
In the checkbox column, select one or multiple logic apps.To stop the selected running logic apps, selectDisable/Stop.To restart the selected stopped logic apps, selectEnable/Start.
In the checkbox column, select one or multiple logic apps.
To stop the selected running logic apps, selectDisable/Stop.
To restart the selected stopped logic apps, selectEnable/Start.
Confirm your selection.
Confirm your selection.
To check whether your task succeeded or failed, on main Azure toolbar, open theNotificationslist (bell icon).
To check whether your task succeeded or failed, on main Azure toolbar, open theNotificationslist (bell icon).
You can stop, start, or restart a Standard logic app, which affects all workflow instances. You can also restart a Standard logic app without first stopping its activity. Your Standard logic app can have multiple workflows, so you can either stop the entire logic app, or you can disable or enable individual workflows.
Stopping a Standard logic app versus disabling a child workflow have different effects, so review the following considerations before you continue:
Considerations for disabling Standard logic apps
Considerations for disabling a Standard workflow

Disabling a Standard logic app affects all its workflow instances in the following ways:
Azure Logic Apps immediately cancels all in-progress and pending workflow runs.
Azure Logic Apps immediately cancels all in-progress and pending workflow runs.
Azure Logic Apps doesn't create or run new workflow instances.
Azure Logic Apps doesn't create or run new workflow instances.
You can resubmit workflow runs while the logic app is disabled.
You can resubmit workflow runs while the logic app is disabled.
Workflow triggers don't fire while the logic app is disabled. However, the trigger states remember the point where you disabled the logic app. When you re-enable the logic app, the triggers fire for all unprocessed items since the last time that the corresponding workflows ran.To stop the triggers from firing on all unprocessed items since the last time that the workflows ran, you mustclear the trigger state for each workflow.
Workflow triggers don't fire while the logic app is disabled. However, the trigger states remember the point where you disabled the logic app. When you re-enable the logic app, the triggers fire for all unprocessed items since the last time that the corresponding workflows ran.
To stop the triggers from firing on all unprocessed items since the last time that the workflows ran, you mustclear the trigger state for each workflow.

You can disable or enable one or multiple Standard logic apps at the same time.
In theAzure portalsearch box, enterlogic apps, and selectLogic apps.
In theAzure portalsearch box, enterlogic apps, and selectLogic apps.
On theLogic appspage, view only the Standard logic apps using thePlanfilter.
On theLogic appspage, view only the Standard logic apps using thePlanfilter.
Based on whether you're disabling or enabling your logic apps, view only theEnabledorDisabledlogic apps using theStatusfilter.
Based on whether you're disabling or enabling your logic apps, view only theEnabledorDisabledlogic apps using theStatusfilter.
In the checkbox column, select one or multiple logic apps.To stop the selected logic apps, selectDisable/Stop.To restart the selected logic apps, selectEnable/Start.
In the checkbox column, select one or multiple logic apps.
To stop the selected logic apps, selectDisable/Stop.
To restart the selected logic apps, selectEnable/Start.
Confirm your selection.
Confirm your selection.
To check whether your task succeeded or failed, on main Azure toolbar, open theNotificationslist (bell icon).
To check whether your task succeeded or failed, on main Azure toolbar, open theNotificationslist (bell icon).

You can restart a single Standard logic app at any time.
In theAzure portal, open your Standard logic app resource.
In theAzure portal, open your Standard logic app resource.
On the logic app menu, selectOverview.
On the logic app menu, selectOverview.
On theOverviewpage toolbar, selectRestart.
On theOverviewpage toolbar, selectRestart.
To check whether your task succeeded or failed, on main Azure toolbar, open theNotificationslist (bell icon).
To check whether your task succeeded or failed, on main Azure toolbar, open theNotificationslist (bell icon).

Disabling a workflow affects all its workflow instances in the following ways:
Azure Logic Apps continues all in-progress and pending workflow runs until they finish. Based on the volume or backlog, this process might take time to complete.TipTo reduce costs resulting from resources and workflow instances that might otherwise take longer
to scale down in nonproduction environments for load and performance testing, you can manually
stop a workflow. This action cancels in-progress and pending workflow runs.For this task, add the following settings to the host settings for your Standard logic app resource:Important: Use following settings only in nonproduction environments. Follow each
workflow ID with a colon (:), and separate workflow IDs with a semicolon (;):"Jobs.SuspendedJobPartitionPrefixes": "<workflow-ID>:;<workflow-ID>:","Jobs.CleanupJobPartitionPrefixes": "<workflow-ID>:;<workflow-ID>:"For more information, seeEdit host and app settings for Standard logic apps.
Azure Logic Apps continues all in-progress and pending workflow runs until they finish. Based on the volume or backlog, this process might take time to complete.
Tip
To reduce costs resulting from resources and workflow instances that might otherwise take longer
to scale down in nonproduction environments for load and performance testing, you can manually
stop a workflow. This action cancels in-progress and pending workflow runs.
For this task, add the following settings to the host settings for your Standard logic app resource:
Important: Use following settings only in nonproduction environments. Follow each
workflow ID with a colon (:), and separate workflow IDs with a semicolon (;):
"Jobs.SuspendedJobPartitionPrefixes": "<workflow-ID>:;<workflow-ID>:",
"Jobs.SuspendedJobPartitionPrefixes": "<workflow-ID>:;<workflow-ID>:",
"Jobs.CleanupJobPartitionPrefixes": "<workflow-ID>:;<workflow-ID>:"
"Jobs.CleanupJobPartitionPrefixes": "<workflow-ID>:;<workflow-ID>:"
For more information, seeEdit host and app settings for Standard logic apps.
Azure Logic Apps doesn't create or run new workflow instances.
Azure Logic Apps doesn't create or run new workflow instances.
You can resubmit workflow runs while the workflow is disabled.
You can resubmit workflow runs while the workflow is disabled.
The workflow trigger doesn't fire while the logic app or workflow is disabled. However, the trigger state remembers the point where you disabled the workflow. When you restart the logic app or enable the workflow, the trigger fires for all unprocessed items since the last workflow run.To stop the trigger from firing on all unprocessed items since the last workflow run, you mustclear the trigger state.
The workflow trigger doesn't fire while the logic app or workflow is disabled. However, the trigger state remembers the point where you disabled the workflow. When you restart the logic app or enable the workflow, the trigger fires for all unprocessed items since the last workflow run.
To stop the trigger from firing on all unprocessed items since the last workflow run, you mustclear the trigger state.

To stop the trigger from firing the next time when the trigger condition is met, disable your workflow. You can disable or enable one or multiple Standard logic apps at the same time.
In theAzure portal, open your Standard logic app resource.
In theAzure portal, open your Standard logic app resource.
On the logic app menu, underWorkflows, selectWorkflows.
On the logic app menu, underWorkflows, selectWorkflows.
In the checkbox column, select the workflow to disable or enable.
In the checkbox column, select the workflow to disable or enable.
On theWorkflowspage toolbar, selectDisableorEnable, based on the current activity state.
On theWorkflowspage toolbar, selectDisableorEnable, based on the current activity state.
To confirm whether your operation succeeded or failed, on main Azure toolbar, open theNotificationslist (bell icon).
To confirm whether your operation succeeded or failed, on main Azure toolbar, open theNotificationslist (bell icon).

Post logic app or workflow stoppage
While a logic app is stopped or a workflow is disabled, the workflow trigger doesn't fire the next time that the trigger condition is met. However, the trigger state remembers the point at where you stopped the logic app or disabled the workflow. When you restart the logic app or re-enable the workflow, the trigger fires for all unprocessed items since the last workflow run.
To stop the trigger from firing on all unprocessed items since the last workflow run, you must clear the trigger state before you restart the logic app or re-enable the workflow.
Consumption
Standard
In theAzure portal, open your Consumption logic app workflow, and edit any part of the workflow trigger.
In theAzure portal, open your Consumption logic app workflow, and edit any part of the workflow trigger.
Save your changes. This step resets your trigger's current state.
Save your changes. This step resets your trigger's current state.
Restart your logic app.
Restart your logic app.
In theAzure portal, open your Standard logic app workflow, and edit any part of the workflow trigger.
In theAzure portal, open your Standard logic app workflow, and edit any part of the workflow trigger.
Save your changes. This step resets the trigger's current state.
Save your changes. This step resets the trigger's current state.
Repeat for each existing workflow.
Repeat for each existing workflow.
Restart your logic app.
Restart your logic app.

Delete logic apps
Consumption
Standard

You can't recover a deleted Consumption logic app resource. Deleting a Consumption logic app affects all its workflow instances in the following ways:
Azure Logic Apps makes a best effort to cancel any in-progress and pending workflow runs.Even with a large volume or backlog, most runs are canceled before they finish or start. However, the cancellation process might take time to complete. Meanwhile, some runs might get picked up for execution while the service works through the cancellation process.
Azure Logic Apps makes a best effort to cancel any in-progress and pending workflow runs.
Even with a large volume or backlog, most runs are canceled before they finish or start. However, the cancellation process might take time to complete. Meanwhile, some runs might get picked up for execution while the service works through the cancellation process.
Azure Logic Apps doesn't create or run new workflow instances.
Azure Logic Apps doesn't create or run new workflow instances.
If you delete a logic app and workflow, but you then recreate the same logic app and workflow, the recreated workflow doesn't have the same metadata as the deleted workflow.So, if you have another workflow that calls the deleted workflow, you must resave the caller workflow to refresh the metadata for the recreated workflow. That way, the caller gets the correct information for the recreated workflow. Otherwise, calls to the recreated workflow fail with anUnauthorizederror. This behavior also applies to workflows that use artifacts in integration accounts and workflows that call Azure functions.
If you delete a logic app and workflow, but you then recreate the same logic app and workflow, the recreated workflow doesn't have the same metadata as the deleted workflow.
So, if you have another workflow that calls the deleted workflow, you must resave the caller workflow to refresh the metadata for the recreated workflow. That way, the caller gets the correct information for the recreated workflow. Otherwise, calls to the recreated workflow fail with anUnauthorizederror. This behavior also applies to workflows that use artifacts in integration accounts and workflows that call Azure functions.
Unauthorized

You can delete one or multiple Consumption logic apps at the same time.
In theAzure portalsearch box, enterlogic apps, and selectLogic apps.
In theAzure portalsearch box, enterlogic apps, and selectLogic apps.
On theLogic appspage, view only the Consumption logic apps using thePlanfilter.
On theLogic appspage, view only the Consumption logic apps using thePlanfilter.
In the checkbox column, select one or multiple logic apps to delete. On the toolbar, selectDelete.
In the checkbox column, select one or multiple logic apps to delete. On the toolbar, selectDelete.
When the confirmation box appears, enteryes, and selectDelete.
When the confirmation box appears, enteryes, and selectDelete.
To check whether your task succeeded or failed, on main Azure toolbar, open theNotificationslist (bell icon).
To check whether your task succeeded or failed, on main Azure toolbar, open theNotificationslist (bell icon).
You can delete one or multiple Standard logic apps at the same time. A Standard logic app can have multiple workflows, so you can either delete the entire logic app or delete individual workflows.

Deleting a Standard logic app affects all its workflow instances in the following ways:
Azure Logic Apps immediately cancels any in-progress and pending workflow runs. However, the platform doesn't run cleanup tasks on the storage used by the logic app.
Azure Logic Apps immediately cancels any in-progress and pending workflow runs. However, the platform doesn't run cleanup tasks on the storage used by the logic app.
Azure Logic Apps doesn't create or run new workflow instances.
Azure Logic Apps doesn't create or run new workflow instances.
Although you canmanually recover deleted Standard logic apps, using source control to manage your Standard logic apps makes recovery and redeployment much easier.
Although you canmanually recover deleted Standard logic apps, using source control to manage your Standard logic apps makes recovery and redeployment much easier.
If you don't use source control, and you might have to later recover a deleted Standard logic app, make sure to save any custom settings that you need for recovery before you delete the logic app.In theAzure portal, go to the Standard logic app.On the logic app menu, underSettings, selectEnvironment variables.On theApp settingstab, find, copy, and save any custom app settings and values that you need for later recovery.On the logic app menu, underSettings, selectConfiguration.On each settings tab, note any custom settings that you need for later recovery.
If you don't use source control, and you might have to later recover a deleted Standard logic app, make sure to save any custom settings that you need for recovery before you delete the logic app.
In theAzure portal, go to the Standard logic app.
In theAzure portal, go to the Standard logic app.
On the logic app menu, underSettings, selectEnvironment variables.
On the logic app menu, underSettings, selectEnvironment variables.
On theApp settingstab, find, copy, and save any custom app settings and values that you need for later recovery.
On theApp settingstab, find, copy, and save any custom app settings and values that you need for later recovery.
On the logic app menu, underSettings, selectConfiguration.
On the logic app menu, underSettings, selectConfiguration.
On each settings tab, note any custom settings that you need for later recovery.
On each settings tab, note any custom settings that you need for later recovery.
If you delete a logic app and its workflows, but you then recreate the same logic app and workflows, the recreated logic app and workflows don't have the same metadata as the deleted resources.So, if you have another workflow that calls the deleted workflow, you must resave the caller workflow to refresh the metadata for the recreated workflow. That way, the caller gets the correct information for the recreated workflow. Otherwise, calls to the recreated workflow fail with anUnauthorizederror. This behavior also applies to workflows that use artifacts in integration accounts and workflows that call Azure functions.
If you delete a logic app and its workflows, but you then recreate the same logic app and workflows, the recreated logic app and workflows don't have the same metadata as the deleted resources.
So, if you have another workflow that calls the deleted workflow, you must resave the caller workflow to refresh the metadata for the recreated workflow. That way, the caller gets the correct information for the recreated workflow. Otherwise, calls to the recreated workflow fail with anUnauthorizederror. This behavior also applies to workflows that use artifacts in integration accounts and workflows that call Azure functions.
Unauthorized

In theAzure portalsearch box, enterlogic apps, and selectLogic apps.
In theAzure portalsearch box, enterlogic apps, and selectLogic apps.
On theLogic appspage, view only the Standard logic apps using thePlanfilter.
On theLogic appspage, view only the Standard logic apps using thePlanfilter.
In the checkbox column, select one or multiple logic apps to delete. On the toolbar, selectDelete.
In the checkbox column, select one or multiple logic apps to delete. On the toolbar, selectDelete.
When the confirmation box appears, enteryes, and selectDelete.
When the confirmation box appears, enteryes, and selectDelete.
To check whether your task succeeded or failed, on main Azure toolbar, open theNotificationslist (bell icon).
To check whether your task succeeded or failed, on main Azure toolbar, open theNotificationslist (bell icon).

You can delete one or multiple Standard workflows at the same time. Deleting a Standard workflow affects its workflow instances in the following ways:
Azure Logic Apps immediately cancels any in-progress and pending workflow runs. The platform also performs cleanup tasks on the storage used by the workflow.
Azure Logic Apps immediately cancels any in-progress and pending workflow runs. The platform also performs cleanup tasks on the storage used by the workflow.
Azure Logic Apps doesn't create or run new workflow instances.
Azure Logic Apps doesn't create or run new workflow instances.
If you delete a workflow, but you then recreate the same workflow, the recreated workflow doesn't have the same metadata as the deleted workflow.So, if you have another workflow that calls the deleted workflow, you must resave the caller workflow to refresh the metadata for the recreated workflow. That way, the caller gets the correct information for the recreated workflow. Otherwise, calls to the recreated workflow fail with anUnauthorizederror. This behavior also applies to workflows that use artifacts in integration accounts and workflows that call Azure functions.
If you delete a workflow, but you then recreate the same workflow, the recreated workflow doesn't have the same metadata as the deleted workflow.
So, if you have another workflow that calls the deleted workflow, you must resave the caller workflow to refresh the metadata for the recreated workflow. That way, the caller gets the correct information for the recreated workflow. Otherwise, calls to the recreated workflow fail with anUnauthorizederror. This behavior also applies to workflows that use artifacts in integration accounts and workflows that call Azure functions.
Unauthorized

In theAzure portal, open your Standard logic app resource.
In theAzure portal, open your Standard logic app resource.
On the logic app menu, underWorkflows, selectWorkflows. In the checkbox column, select a single or multiple workflows to delete.
On the logic app menu, underWorkflows, selectWorkflows. In the checkbox column, select a single or multiple workflows to delete.
On the toolbar, selectDelete.
On the toolbar, selectDelete.
To confirm whether your operation succeeded or failed, on main Azure toolbar, open theNotificationslist (bell icon).
To confirm whether your operation succeeded or failed, on main Azure toolbar, open theNotificationslist (bell icon).

Recover a deleted Standard logic app
The steps to recover a deleted Standard logic app vary based on whether you use source control and the hosting option for your logic app.
Before you try to recover a deleted logic app, review the following considerations:
The run history from the deleted logic app is unavailable in the recovered logic app.
The run history from the deleted logic app is unavailable in the recovered logic app.
If your workflow starts with theRequesttrigger, the callback URL for the recovered logic app differs from the URL for the deleted logic app.
If your workflow starts with theRequesttrigger, the callback URL for the recovered logic app differs from the URL for the deleted logic app.
If you use source control, you can recover a deleted Standard logic app resource, based on the hosting option:
To recover a deleted Standard logic app that uses theWorkflow Service Planhosting option and runs in single-tenant Azure Logic Apps, try the following steps:
In theAzure portal, confirm that the storage account used by your logic app still exists. If the storage account is deleted, you have tofirst recover the deleted storage account.To identify the storage account name, open your logic app.On the logic app menu, underSettings, selectEnvironment variables.On theEnvironment variablespage, underApp settings, find the app setting namedAzureWebJobsStorage.
In theAzure portal, confirm that the storage account used by your logic app still exists. If the storage account is deleted, you have tofirst recover the deleted storage account.
To identify the storage account name, open your logic app.
To identify the storage account name, open your logic app.
On the logic app menu, underSettings, selectEnvironment variables.
On the logic app menu, underSettings, selectEnvironment variables.
On theEnvironment variablespage, underApp settings, find the app setting namedAzureWebJobsStorage.
On theEnvironment variablespage, underApp settings, find the app setting namedAzureWebJobsStorage.
Go to the storage account. On the storage account menu, underSecurity + networking, selectAccess keys.
Go to the storage account. On the storage account menu, underSecurity + networking, selectAccess keys.
On theAccess keyspage, copy and save the primary connection string somewhere secure for later use in this guide.The connection string uses the following format:DefaultEndpointsProtocol=https;AccountName=<storage-account-name>;AccountKey=<access-key>;EndpointSuffix=core.windows.net
On theAccess keyspage, copy and save the primary connection string somewhere secure for later use in this guide.
The connection string uses the following format:
DefaultEndpointsProtocol=https;AccountName=<storage-account-name>;AccountKey=<access-key>;EndpointSuffix=core.windows.net
On the storage account menu, underData storage, selectFile shares. Copy and save the file share name for later use in this guide.
On the storage account menu, underData storage, selectFile shares. Copy and save the file share name for later use in this guide.
Important
When you handle sensitive information, such as connection strings that include usernames, passwords,
access keys, and so on, make sure that you use the most secure authentication flow available.
For example, Standard logic app workflows don't support secure data types, such assecurestringandsecureobject, aren't supported. Microsoft recommends that you authenticate access to Azure
resources with amanaged identitywhen possible, and assign a role with the least necessary privilege.
securestring
secureobject
If the managed identity capability is unavailable, secure your connection strings through other measures,
such asAzure Key Vault, which you can use withapp settingsin your Standard logic app resource.
You can thendirectly reference these secure strings.
Similar to ARM templates, where you can define environment variables at deployment time, you can define app
settings in yourlogic app workflow definition. You can then
capture dynamically generated infrastructure values, such as connection endpoints, storage strings, and so on.
For more information, seeApplication types for the Microsoft identity platform.
In theAzure portal, create a new Standard logic app resource with the same hosting option and pricing tier. You can use either a new name or reuse the name from the deleted logic app.
In theAzure portal, create a new Standard logic app resource with the same hosting option and pricing tier. You can use either a new name or reuse the name from the deleted logic app.
Before you continue,disable the new logic app.
Before you continue,disable the new logic app.
On the logic app menu, underSettings, selectEnvironment variables. On theApp settingstab, update the following values. Make sure to save your changes when you finish.App settingReplacement valueAzureWebJobsStorageReplace the existing value with the previously copied connection string from your storage account.WEBSITE_CONTENTAZUREFILECONNECTIONSTRINGReplace the existing value with the previously copied connection string from your storage account.WEBSITE_CONTENTSHAREReplace the existing value with the previously copied file share name.
On the logic app menu, underSettings, selectEnvironment variables. On theApp settingstab, update the following values. Make sure to save your changes when you finish.
On your logic app menu, underWorkflows, selectConnections.
On your logic app menu, underWorkflows, selectConnections.
Open each connection. On the connection menu, underSettings, selectAccess policies.
Open each connection. On the connection menu, underSettings, selectAccess policies.
In theActioncolumn, selectDeleteto delete the access policy for the deleted logic app.
In theActioncolumn, selectDeleteto delete the access policy for the deleted logic app.
On theAccess policiestoolbar, selectAddso you can add a new access policy, and select your replacement logic app.
On theAccess policiestoolbar, selectAddso you can add a new access policy, and select your replacement logic app.
Return to your replacement logic app.
Return to your replacement logic app.
If you have custom settings to restore, on the logic app menu, under Settings, selectsEnvironment variablesorConfiguration, based on the types of settings that you have.
If you have custom settings to restore, on the logic app menu, under Settings, selectsEnvironment variablesorConfiguration, based on the types of settings that you have.
When you're done, restart your logic app.
When you're done, restart your logic app.

Manage logic app versions (Consumption only)
When you save changes to your Consumption logic app workflow, Azure saves the version before you made your changes, and your edited version becomes the current version. You can view these previous versions, select a previous version to promote over the current version, and edit the selected version before you finish the promotion process.

View previous versions
In theAzure portal, open your Consumption logic app.
In theAzure portal, open your Consumption logic app.
On the logic app menu, underDevelopment Tools, selectVersions.
On the logic app menu, underDevelopment Tools, selectVersions.

From theVersionlist, select the workflow version that you want.To filter the list, in theVersionspage search bar, enter the version ID, if you know the ID.TheHistory versionpage shows the selected version in read-only mode. You can change between the designer view and code view.
From theVersionlist, select the workflow version that you want.
To filter the list, in theVersionspage search bar, enter the version ID, if you know the ID.
TheHistory versionpage shows the selected version in read-only mode. You can change between the designer view and code view.


Promote a previous version over the current version
In theAzure portal,view the previous version that you want to promote.
In theAzure portal,view the previous version that you want to promote.
On theHistory versiontoolbar, selectPromote.The workflow designer opens the selected workflow version.
On theHistory versiontoolbar, selectPromote.

The workflow designer opens the selected workflow version.
Optionally make any edits that you want to the workflow.You can change betweenDesignerandCode view. You can also update theParameters.
Optionally make any edits that you want to the workflow.
You can change betweenDesignerandCode view. You can also update theParameters.
To save any updates and finish promotion, on the designer toolbar, selectSave. To cancel your changes, selectDiscard.
To save any updates and finish promotion, on the designer toolbar, selectSave. To cancel your changes, selectDiscard.
When you view your logic app version history again, the promoted version now appears first in the list with a new identifier.
Related content
Monitor logic apps
Feedback
Was this page helpful?
Additional resources