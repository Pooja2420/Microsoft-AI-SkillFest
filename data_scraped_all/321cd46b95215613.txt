Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Microsoft.Logic workflows 2019-05-01
Article
2025-02-13
2 contributors
In this article
Latest
2019-05-01
2018-07-01-preview
2016-06-01
2015-02-01-preview
Bicep resource definition
The workflows resource type can be deployed with operations that target:
Resource groups- Seeresource group deployment commands
For a list of changed properties in each API version, seechange log.
Resource format
To create a Microsoft.Logic/workflows resource, add the following Bicep to your template.
resource symbolicname 'Microsoft.Logic/workflows@2019-05-01' = {
  identity: {
    type: 'string'
    userAssignedIdentities: {
      {customized property}: {}
    }
  }
  location: 'string'
  name: 'string'
  properties: {
    accessControl: {
      actions: {
        allowedCallerIpAddresses: [
          {
            addressRange: 'string'
          }
        ]
        openAuthenticationPolicies: {
          policies: {
            {customized property}: {
              claims: [
                {
                  name: 'string'
                  value: 'string'
                }
              ]
              type: 'string'
            }
          }
        }
      }
      contents: {
        allowedCallerIpAddresses: [
          {
            addressRange: 'string'
          }
        ]
        openAuthenticationPolicies: {
          policies: {
            {customized property}: {
              claims: [
                {
                  name: 'string'
                  value: 'string'
                }
              ]
              type: 'string'
            }
          }
        }
      }
      triggers: {
        allowedCallerIpAddresses: [
          {
            addressRange: 'string'
          }
        ]
        openAuthenticationPolicies: {
          policies: {
            {customized property}: {
              claims: [
                {
                  name: 'string'
                  value: 'string'
                }
              ]
              type: 'string'
            }
          }
        }
      }
      workflowManagement: {
        allowedCallerIpAddresses: [
          {
            addressRange: 'string'
          }
        ]
        openAuthenticationPolicies: {
          policies: {
            {customized property}: {
              claims: [
                {
                  name: 'string'
                  value: 'string'
                }
              ]
              type: 'string'
            }
          }
        }
      }
    }
    definition: any(...)
    endpointsConfiguration: {
      connector: {
        accessEndpointIpAddresses: [
          {
            address: 'string'
          }
        ]
        outgoingIpAddresses: [
          {
            address: 'string'
          }
        ]
      }
      workflow: {
        accessEndpointIpAddresses: [
          {
            address: 'string'
          }
        ]
        outgoingIpAddresses: [
          {
            address: 'string'
          }
        ]
      }
    }
    integrationAccount: {
      id: 'string'
    }
    integrationServiceEnvironment: {
      id: 'string'
    }
    parameters: {
      {customized property}: {
        description: 'string'
        metadata: any(...)
        type: 'string'
        value: any(...)
      }
    }
    state: 'string'
  }
  tags: {
    {customized property}: 'string'
  }
}
resource symbolicname 'Microsoft.Logic/workflows@2019-05-01' = {
  identity: {
    type: 'string'
    userAssignedIdentities: {
      {customized property}: {}
    }
  }
  location: 'string'
  name: 'string'
  properties: {
    accessControl: {
      actions: {
        allowedCallerIpAddresses: [
          {
            addressRange: 'string'
          }
        ]
        openAuthenticationPolicies: {
          policies: {
            {customized property}: {
              claims: [
                {
                  name: 'string'
                  value: 'string'
                }
              ]
              type: 'string'
            }
          }
        }
      }
      contents: {
        allowedCallerIpAddresses: [
          {
            addressRange: 'string'
          }
        ]
        openAuthenticationPolicies: {
          policies: {
            {customized property}: {
              claims: [
                {
                  name: 'string'
                  value: 'string'
                }
              ]
              type: 'string'
            }
          }
        }
      }
      triggers: {
        allowedCallerIpAddresses: [
          {
            addressRange: 'string'
          }
        ]
        openAuthenticationPolicies: {
          policies: {
            {customized property}: {
              claims: [
                {
                  name: 'string'
                  value: 'string'
                }
              ]
              type: 'string'
            }
          }
        }
      }
      workflowManagement: {
        allowedCallerIpAddresses: [
          {
            addressRange: 'string'
          }
        ]
        openAuthenticationPolicies: {
          policies: {
            {customized property}: {
              claims: [
                {
                  name: 'string'
                  value: 'string'
                }
              ]
              type: 'string'
            }
          }
        }
      }
    }
    definition: any(...)
    endpointsConfiguration: {
      connector: {
        accessEndpointIpAddresses: [
          {
            address: 'string'
          }
        ]
        outgoingIpAddresses: [
          {
            address: 'string'
          }
        ]
      }
      workflow: {
        accessEndpointIpAddresses: [
          {
            address: 'string'
          }
        ]
        outgoingIpAddresses: [
          {
            address: 'string'
          }
        ]
      }
    }
    integrationAccount: {
      id: 'string'
    }
    integrationServiceEnvironment: {
      id: 'string'
    }
    parameters: {
      {customized property}: {
        description: 'string'
        metadata: any(...)
        type: 'string'
        value: any(...)
      }
    }
    state: 'string'
  }
  tags: {
    {customized property}: 'string'
  }
}
Property Values
FlowAccessControlConfiguration
FlowAccessControlConfigurationPolicy
FlowEndpoints
FlowEndpointsConfiguration
IpAddress
IpAddressRange
ManagedServiceIdentity
ManagedServiceIdentityUserAssignedIdentities
Microsoft.Logic/workflows
OpenAuthenticationAccessPolicies
OpenAuthenticationAccessPolicies
OpenAuthenticationAccessPolicy
OpenAuthenticationPolicyClaim
ResourceReference
ResourceTags
UserAssignedIdentity
WorkflowParameter
WorkflowProperties
WorkflowPropertiesParameters
Usage Examples
Azure Verified Modules
The followingAzure Verified Modulescan be used to deploy this resource type.
Azure Quickstart Samples
The followingAzure Quickstart templatescontain Bicep samples for deploying this resource type.
ARM template resource definition
The workflows resource type can be deployed with operations that target:
Resource groups- Seeresource group deployment commands
For a list of changed properties in each API version, seechange log.
Resource format
To create a Microsoft.Logic/workflows resource, add the following JSON to your template.
{
  "type": "Microsoft.Logic/workflows",
  "apiVersion": "2019-05-01",
  "name": "string",
  "identity": {
    "type": "string",
    "userAssignedIdentities": {
      "{customized property}": {
      }
    }
  },
  "location": "string",
  "properties": {
    "accessControl": {
      "actions": {
        "allowedCallerIpAddresses": [
          {
            "addressRange": "string"
          }
        ],
        "openAuthenticationPolicies": {
          "policies": {
            "{customized property}": {
              "claims": [
                {
                  "name": "string",
                  "value": "string"
                }
              ],
              "type": "string"
            }
          }
        }
      },
      "contents": {
        "allowedCallerIpAddresses": [
          {
            "addressRange": "string"
          }
        ],
        "openAuthenticationPolicies": {
          "policies": {
            "{customized property}": {
              "claims": [
                {
                  "name": "string",
                  "value": "string"
                }
              ],
              "type": "string"
            }
          }
        }
      },
      "triggers": {
        "allowedCallerIpAddresses": [
          {
            "addressRange": "string"
          }
        ],
        "openAuthenticationPolicies": {
          "policies": {
            "{customized property}": {
              "claims": [
                {
                  "name": "string",
                  "value": "string"
                }
              ],
              "type": "string"
            }
          }
        }
      },
      "workflowManagement": {
        "allowedCallerIpAddresses": [
          {
            "addressRange": "string"
          }
        ],
        "openAuthenticationPolicies": {
          "policies": {
            "{customized property}": {
              "claims": [
                {
                  "name": "string",
                  "value": "string"
                }
              ],
              "type": "string"
            }
          }
        }
      }
    },
    "definition": {},
    "endpointsConfiguration": {
      "connector": {
        "accessEndpointIpAddresses": [
          {
            "address": "string"
          }
        ],
        "outgoingIpAddresses": [
          {
            "address": "string"
          }
        ]
      },
      "workflow": {
        "accessEndpointIpAddresses": [
          {
            "address": "string"
          }
        ],
        "outgoingIpAddresses": [
          {
            "address": "string"
          }
        ]
      }
    },
    "integrationAccount": {
      "id": "string"
    },
    "integrationServiceEnvironment": {
      "id": "string"
    },
    "parameters": {
      "{customized property}": {
        "description": "string",
        "metadata": {},
        "type": "string",
        "value": {}
      }
    },
    "state": "string"
  },
  "tags": {
    "{customized property}": "string"
  }
}
{
  "type": "Microsoft.Logic/workflows",
  "apiVersion": "2019-05-01",
  "name": "string",
  "identity": {
    "type": "string",
    "userAssignedIdentities": {
      "{customized property}": {
      }
    }
  },
  "location": "string",
  "properties": {
    "accessControl": {
      "actions": {
        "allowedCallerIpAddresses": [
          {
            "addressRange": "string"
          }
        ],
        "openAuthenticationPolicies": {
          "policies": {
            "{customized property}": {
              "claims": [
                {
                  "name": "string",
                  "value": "string"
                }
              ],
              "type": "string"
            }
          }
        }
      },
      "contents": {
        "allowedCallerIpAddresses": [
          {
            "addressRange": "string"
          }
        ],
        "openAuthenticationPolicies": {
          "policies": {
            "{customized property}": {
              "claims": [
                {
                  "name": "string",
                  "value": "string"
                }
              ],
              "type": "string"
            }
          }
        }
      },
      "triggers": {
        "allowedCallerIpAddresses": [
          {
            "addressRange": "string"
          }
        ],
        "openAuthenticationPolicies": {
          "policies": {
            "{customized property}": {
              "claims": [
                {
                  "name": "string",
                  "value": "string"
                }
              ],
              "type": "string"
            }
          }
        }
      },
      "workflowManagement": {
        "allowedCallerIpAddresses": [
          {
            "addressRange": "string"
          }
        ],
        "openAuthenticationPolicies": {
          "policies": {
            "{customized property}": {
              "claims": [
                {
                  "name": "string",
                  "value": "string"
                }
              ],
              "type": "string"
            }
          }
        }
      }
    },
    "definition": {},
    "endpointsConfiguration": {
      "connector": {
        "accessEndpointIpAddresses": [
          {
            "address": "string"
          }
        ],
        "outgoingIpAddresses": [
          {
            "address": "string"
          }
        ]
      },
      "workflow": {
        "accessEndpointIpAddresses": [
          {
            "address": "string"
          }
        ],
        "outgoingIpAddresses": [
          {
            "address": "string"
          }
        ]
      }
    },
    "integrationAccount": {
      "id": "string"
    },
    "integrationServiceEnvironment": {
      "id": "string"
    },
    "parameters": {
      "{customized property}": {
        "description": "string",
        "metadata": {},
        "type": "string",
        "value": {}
      }
    },
    "state": "string"
  },
  "tags": {
    "{customized property}": "string"
  }
}
Property Values
FlowAccessControlConfiguration
FlowAccessControlConfigurationPolicy
FlowEndpoints
FlowEndpointsConfiguration
IpAddress
IpAddressRange
ManagedServiceIdentity
ManagedServiceIdentityUserAssignedIdentities
Microsoft.Logic/workflows
OpenAuthenticationAccessPolicies
OpenAuthenticationAccessPolicies
OpenAuthenticationAccessPolicy
OpenAuthenticationPolicyClaim
ResourceReference
ResourceTags
UserAssignedIdentity
WorkflowParameter
WorkflowProperties
WorkflowPropertiesParameters
Usage Examples
Azure Quickstart Templates
The followingAzure Quickstart templatesdeploy this resource type.
Terraform (AzAPI provider) resource definition
The workflows resource type can be deployed with operations that target:
Resource groups
For a list of changed properties in each API version, seechange log.
Resource format
To create a Microsoft.Logic/workflows resource, add the following Terraform to your template.
resource "azapi_resource" "symbolicname" {
  type = "Microsoft.Logic/workflows@2019-05-01"
  name = "string"
  identity = {
    type = "string"
    userAssignedIdentities = {
      {customized property} = {
      }
    }
  }
  location = "string"
  tags = {
    {customized property} = "string"
  }
  body = {
    properties = {
      accessControl = {
        actions = {
          allowedCallerIpAddresses = [
            {
              addressRange = "string"
            }
          ]
          openAuthenticationPolicies = {
            policies = {
              {customized property} = {
                claims = [
                  {
                    name = "string"
                    value = "string"
                  }
                ]
                type = "string"
              }
            }
          }
        }
        contents = {
          allowedCallerIpAddresses = [
            {
              addressRange = "string"
            }
          ]
          openAuthenticationPolicies = {
            policies = {
              {customized property} = {
                claims = [
                  {
                    name = "string"
                    value = "string"
                  }
                ]
                type = "string"
              }
            }
          }
        }
        triggers = {
          allowedCallerIpAddresses = [
            {
              addressRange = "string"
            }
          ]
          openAuthenticationPolicies = {
            policies = {
              {customized property} = {
                claims = [
                  {
                    name = "string"
                    value = "string"
                  }
                ]
                type = "string"
              }
            }
          }
        }
        workflowManagement = {
          allowedCallerIpAddresses = [
            {
              addressRange = "string"
            }
          ]
          openAuthenticationPolicies = {
            policies = {
              {customized property} = {
                claims = [
                  {
                    name = "string"
                    value = "string"
                  }
                ]
                type = "string"
              }
            }
          }
        }
      }
      definition = ?
      endpointsConfiguration = {
        connector = {
          accessEndpointIpAddresses = [
            {
              address = "string"
            }
          ]
          outgoingIpAddresses = [
            {
              address = "string"
            }
          ]
        }
        workflow = {
          accessEndpointIpAddresses = [
            {
              address = "string"
            }
          ]
          outgoingIpAddresses = [
            {
              address = "string"
            }
          ]
        }
      }
      integrationAccount = {
        id = "string"
      }
      integrationServiceEnvironment = {
        id = "string"
      }
      parameters = {
        {customized property} = {
          description = "string"
          metadata = ?
          type = "string"
          value = ?
        }
      }
      state = "string"
    }
  }
}
resource "azapi_resource" "symbolicname" {
  type = "Microsoft.Logic/workflows@2019-05-01"
  name = "string"
  identity = {
    type = "string"
    userAssignedIdentities = {
      {customized property} = {
      }
    }
  }
  location = "string"
  tags = {
    {customized property} = "string"
  }
  body = {
    properties = {
      accessControl = {
        actions = {
          allowedCallerIpAddresses = [
            {
              addressRange = "string"
            }
          ]
          openAuthenticationPolicies = {
            policies = {
              {customized property} = {
                claims = [
                  {
                    name = "string"
                    value = "string"
                  }
                ]
                type = "string"
              }
            }
          }
        }
        contents = {
          allowedCallerIpAddresses = [
            {
              addressRange = "string"
            }
          ]
          openAuthenticationPolicies = {
            policies = {
              {customized property} = {
                claims = [
                  {
                    name = "string"
                    value = "string"
                  }
                ]
                type = "string"
              }
            }
          }
        }
        triggers = {
          allowedCallerIpAddresses = [
            {
              addressRange = "string"
            }
          ]
          openAuthenticationPolicies = {
            policies = {
              {customized property} = {
                claims = [
                  {
                    name = "string"
                    value = "string"
                  }
                ]
                type = "string"
              }
            }
          }
        }
        workflowManagement = {
          allowedCallerIpAddresses = [
            {
              addressRange = "string"
            }
          ]
          openAuthenticationPolicies = {
            policies = {
              {customized property} = {
                claims = [
                  {
                    name = "string"
                    value = "string"
                  }
                ]
                type = "string"
              }
            }
          }
        }
      }
      definition = ?
      endpointsConfiguration = {
        connector = {
          accessEndpointIpAddresses = [
            {
              address = "string"
            }
          ]
          outgoingIpAddresses = [
            {
              address = "string"
            }
          ]
        }
        workflow = {
          accessEndpointIpAddresses = [
            {
              address = "string"
            }
          ]
          outgoingIpAddresses = [
            {
              address = "string"
            }
          ]
        }
      }
      integrationAccount = {
        id = "string"
      }
      integrationServiceEnvironment = {
        id = "string"
      }
      parameters = {
        {customized property} = {
          description = "string"
          metadata = ?
          type = "string"
          value = ?
        }
      }
      state = "string"
    }
  }
}
Property Values
FlowAccessControlConfiguration
FlowAccessControlConfigurationPolicy
FlowEndpoints
FlowEndpointsConfiguration
IpAddress
IpAddressRange
ManagedServiceIdentity
ManagedServiceIdentityUserAssignedIdentities
Microsoft.Logic/workflows
OpenAuthenticationAccessPolicies
OpenAuthenticationAccessPolicies
OpenAuthenticationAccessPolicy
OpenAuthenticationPolicyClaim
ResourceReference
ResourceTags
UserAssignedIdentity
WorkflowParameter
WorkflowProperties
WorkflowPropertiesParameters
Usage Examples
Azure Verified Modules
The followingAzure Verified Modulescan be used to deploy this resource type.
Feedback
Was this page helpful?
Additional resources