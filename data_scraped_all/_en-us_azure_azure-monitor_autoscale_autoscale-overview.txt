Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Overview of autoscale in Azure
Article
2024-11-01
19 contributors
In this article
This article describes the autoscale feature in Azure Monitor and its benefits.
Autoscale supports many resource types. For more information about supported resources, seeAutoscale supported resources.
Note
Availability setsare an older scaling feature for virtual machines with limited support. We recommend migrating toAzure Virtual Machine Scale Setsfor faster and more reliable autoscale support.
What is autoscale
Autoscale is a service that you can use to automatically add and remove resources according to the load on your application.
When your application experiences higher load, autoscale adds resources to handle the increased load. When load is low, autoscale reduces the number of resources, which lowers your costs. You can scale your application based on metrics like CPU usage, queue length, and available memory. You can also scale based on a schedule. Metrics and schedules are set up in rules. The rules include a minimum level of resources that you need to run your application and a maximum level of resources that won't be exceeded.
For example, scale out your application by adding VMs when the average CPU usage per VM is above 70%. Scale it back by removing VMs when CPU usage drops to 40%.

When the conditions in the rules are met, one or more autoscale actions are triggered, adding or removing VMs. You can also perform other actions like sending email, notifications, or webhooks to trigger processes in other systems.
Horizontal vs. vertical scaling
Autoscale scales in and out, or horizontally. Scaling horizontally is an increase or decrease of the number of resource instances. For example, for a virtual machine scale set, scaling out means adding more virtual machines. Scaling in means removing virtual machines. Horizontal scaling is flexible in a cloud situation because you can use it to run a large number of VMs to handle load.
Autoscale does not support vertical scaling. In contrast, scaling up and down, or vertical scaling, keeps the same number of resource instances constant but gives them more capacity in terms of memory, CPU speed, disk space, and network. Vertical scaling is limited by the availability of larger hardware, which eventually reaches an upper limit. Hardware size availability varies in Azure by region. Vertical scaling might also require a restart of the VM during the scaling process.

When the conditions in the rules are met, one or more autoscale actions are triggered, adding or removing VMs. You can also perform other actions like sending email, notifications, or webhooks to trigger processes in other systems.
Predictive autoscale
Predictive autoscaleuses machine learning to help manage and scale virtual machine scale sets with cyclical workload patterns. It forecasts the overall CPU load on your virtual machine scale set, based on historical CPU usage patterns. The scale set can then be scaled out in time to meet the predicted demand.
Autoscale setup
You can set up autoscale via:
Azure portal
PowerShell
Cross-platform command-line interface (CLI)
Azure Monitor REST API
Resource metrics
Resources generate metrics that are used in autoscale rules to trigger scale events. Virtual machine scale sets use telemetry data from Azure diagnostics agents to generate metrics. Telemetry for the Web Apps feature of Azure App Service and Azure Cloud Services comes directly from the Azure infrastructure. Some commonly used metrics include CPU usage, memory usage, thread counts, queue length, and disk usage. For a list of available metrics, seeAutoscale Common Metrics.
Custom metrics
Use your own custom metrics that your application generates. Configure your application to send metrics toApplication Insightsso that you can use those metrics to decide when to scale.
Time
Set up schedule-based rules to trigger scale events. Use schedule-based rules when you see time patterns in your load and want to scale before an anticipated change in load occurs.
Rules
Rules define the conditions needed to trigger a scale event, the direction of the scaling, and the amount to scale by. Combine multiple rules by using different metrics like CPU usage and queue length. Define up to 10 rules per profile.
Rules can be:
Metric-based: Trigger based on a metric value, for example, when CPU usage is above 50%.
Time-based: Trigger based on a schedule, for example, every Saturday at 8 AM.
Autoscale scales out ifanyof the rules are met. Autoscale scales in only ifallthe rules are met.
In terms of logic operators, the OR operator is used for scaling out with multiple rules. The AND operator is used for scaling in with multiple rules.
Actions and automation
Rules can trigger one or more actions. Actions include:
Scale: Scale resources in or out.
Email: Send an email to the subscription admins, co-admins, and/or any other email address.
Webhooks: Call webhooks to trigger multiple complex actions inside or outside Azure. In Azure, you can:Start anAzure Automation runbook.Call anAzure function.Trigger anAzure logic app.
Start anAzure Automation runbook.
Call anAzure function.
Trigger anAzure logic app.
Autoscale settings
Autoscale settings includes scale conditions that define rules, limits, and schedules and notifications. Define one or more scale conditions in the settings and one notification setup.
Autoscale uses the following terminology and structure.

The full list of configurable fields and descriptions is available in theAutoscale REST API.
For code examples, see:
Tutorial: Automatically scale a virtual machine scale set with the Azure CLI
Tutorial: Automatically scale a virtual machine scale set with PowerShell
Supported services for autoscale
Autoscale supports the following services.
Next steps
To learn more about autoscale, see the following resources:
Azure Monitor autoscale common metrics
Use autoscale actions to send email and webhook alert notifications
Tutorial: Automatically scale a virtual machine scale set with the Azure CLI
Tutorial: Automatically scale a virtual machine scale set with Azure PowerShell
Autoscale CLI reference
ARM template resource definition
PowerShell Az.Monitor reference
REST API reference: Autoscale settings
Feedback
Was this page helpful?
Additional resources