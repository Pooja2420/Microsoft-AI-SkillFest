Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Run scripts in your Linux VM by using action Run Commands
Article
2024-08-22
24 contributors
In this article
Applies to:âï¸ Linux VMs âï¸ Flexible scale sets
The Run Command feature uses the virtual machine (VM) agent to run shell scripts within an Azure Linux VM. You can use these scripts for general machine or application management. They can help you to quickly diagnose and remediate VM access and network issues and get the VM back to a good state.
Benefits
You can access your virtual machines in multiple ways. Run Command can run scripts on your virtual machines remotely by using the VM agent. You use Run Command through the Azure portal,REST API, orAzure CLIfor Linux VMs.
This capability is useful in all scenarios where you want to run a script within a virtual machine. It's one of the only ways to troubleshoot and remediate a virtual machine that doesn't have the RDP or SSH port open because of network or administrative user configuration.
Prerequisites
Linux Distroâs Supported
Restrictions
The following restrictions apply when you're using Run Command:
Output is limited to the last 4,096 bytes.
The minimum time to run a script is about 20 seconds.
Scripts run by default as an elevated user on Linux.
You can run one script at a time.
Scripts that prompt for information (interactive mode) aren't supported.
You can't cancel a running script.
The maximum time a script can run is 90 minutes. After that, the script will time out.
Outbound connectivity from the VM is required to return the results of the script.
Note
To function correctly, Run Command requires connectivity (port 443) to Azure public IP addresses. If the extension doesn't have access to these endpoints, the scripts might run successfully but not return the results. If you're blocking traffic on the virtual machine, you can useservice tagsto allow traffic to Azure public IP addresses by using theAzureCloudtag.
AzureCloud
Available commands
This table shows the list of commands available for Linux VMs. You can use theRunShellScriptcommand to run any custom script that you want. When you're using the Azure CLI or PowerShell to run a command, the value that you provide for the--command-idor-CommandIdparameter must be one of the following listed values. When you specify a value that isn't an available command, you receive this error:
--command-id
-CommandId
The entity was not found in this Azure location
The entity was not found in this Azure location
Azure CLI
The following example uses theaz vm run-commandcommand to run a shell script on an Azure Linux VM.
az vm run-command invoke -g myResourceGroup -n myVm --command-id RunShellScript --scripts "apt-get update && apt-get install -y nginx"
az vm run-command invoke -g myResourceGroup -n myVm --command-id RunShellScript --scripts "apt-get update && apt-get install -y nginx"
Note
To run commands as a different user, entersudo -uto specify a user account.
sudo -u
Azure portal
Go to a VM in theAzure portaland selectRun commandin the left menu, underOperations. You see a list of the available commands to run on the VM.

Choose a command to run. Some of the commands might have optional or required input parameters. For those commands, the parameters are presented as text fields for you to provide the input values. For each command, you can view the script that's being run by expandingView script.RunShellScriptis different from the other commands, because it allows you to provide your own custom script.
Note
The built-in commands are not editable.
After you choose the command, selectRunto run the script. After the script finishes, it returns the output and any errors in the output window. The following screenshot shows an example output from running theifconfigcommand.

PowerShell
The following example uses theInvoke-AzVMRunCommandcmdlet to run a PowerShell script on an Azure VM. The cmdlet expects the script referenced in the-ScriptPathparameter to be local to where the cmdlet is being run.
-ScriptPath
Invoke-AzVMRunCommand -ResourceGroupName '<myResourceGroup>' -Name '<myVMName>' -CommandId 'RunShellScript' -ScriptPath '<pathToScript>' -Parameter @{"arg1" = "var1";"arg2" = "var2"}
Invoke-AzVMRunCommand -ResourceGroupName '<myResourceGroup>' -Name '<myVMName>' -CommandId 'RunShellScript' -ScriptPath '<pathToScript>' -Parameter @{"arg1" = "var1";"arg2" = "var2"}
Limiting access to Run Command
Listing the run commands or showing the details of a command requires theMicrosoft.Compute/locations/runCommands/readpermission on Subscription level. The built-inReaderrole and higher levels have this permission.
Microsoft.Compute/locations/runCommands/read
Running a command requires theMicrosoft.Compute/virtualMachines/runCommands/writepermission. TheVirtual Machine Contributorrole and higher levels have this permission.
Microsoft.Compute/virtualMachines/runCommands/write
You can use one of thebuilt-in rolesor create acustom roleto use Run Command.
Action Run Command Linux troubleshooting
When troubleshooting action run command for Linux environments, refer to thehandlerlog file typically located in the following directory:/var/log/azure/run-command-handler/handler.logfor further details.
/var/log/azure/run-command-handler/handler.log
Known issues
The Linux action run command logs have a few notable differences compared to the action run command Windows logs:
The sequence number is reported with each line of the log as 'seq=#'
There won't be a line that containsAwaiting completion...as this will be in action run command Windows only.
Awaiting completion...
The lineCommand existed with code: #is also only present in action run command Windows logging.
Command existed with code: #
Action Run Command Removal
If needing to remove your action run command Linux extension, refer to the below steps for Azure PowerShell and CLI:
Replacergnameandvmnamewith your relevant resource group name and virtual machine name in the following removal examples.
Invoke-AzVMRunCommand -ResourceGroupName 'rgname' -VMName 'vmname' -CommandId 'RemoveRunCommandLinuxExtension'
Invoke-AzVMRunCommand -ResourceGroupName 'rgname' -VMName 'vmname' -CommandId 'RemoveRunCommandLinuxExtension'
az vm run-command invoke  --command-id RemoveRunCommandLinuxExtension --name vmname -g rgname
az vm run-command invoke  --command-id RemoveRunCommandLinuxExtension --name vmname -g rgname
Note
When you apply a Run Command again, the extension will get installed automatically. You can use the extension removal command to troubleshoot any issues related to the extension.
Next steps
To learn about other ways to run scripts and commands remotely in your VM, seeRun scripts in your Linux VM.
Feedback
Was this page helpful?
Additional resources