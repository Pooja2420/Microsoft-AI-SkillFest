Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Quickstart: Scale compute for dedicated SQL pool (formerly SQL DW) in Azure Synapse Analytics using T-SQL
Article
2023-02-22
12 contributors
In this article
Scale compute in dedicated SQL pools using T-SQL and SQL Server Management Studio (SSMS).Scale out computefor better performance, or scale back compute to save costs.
If you don't have an Azure subscription, create afree Azure accountbefore you begin.
Note
This article applies to dedicated SQL pools created in Azure Synapse Analytics workspaces, dedicated SQL pools (formerly SQL DW), and dedicated SQL pools (formerly SQL DW) in connected workspaces.
Before you begin
Download and install the newest version ofSQL Server Management Studio (SSMS).
Create a dedicated SQL pool if needed
This quickstart assumes you already have a dedicated SQL pool.
If needed, it is recommended to create a new dedicated SQL pool in an Azure Synapse workspace.Create an Azure Synapse workspaceand thencreate a dedicated SQL pool using Synapse Studio. Or, you can create a legacy dedicated SQL pool (formerly SQL DW), usingQuickstart: create and Connect - portalto create a dedicated SQL pool (formerly SQL DW) namedmySampleDataWarehouse.
mySampleDataWarehouse
Ensure you have a firewall rule and can connect to your dedicated SQL pool from within SQL Server Management Studio (SSMS).
Connect to the server as server admin
This section usesSQL Server Management Studio (SSMS)to establish a connection to your Azure SQL server.
Open SQL Server Management Studio.
Open SQL Server Management Studio.
In theConnect to Serverdialog box, enter the following information:Setting â¯ â¯ â¯Suggested valueDescriptionâ¯Server typeDatabase engineThis value is requiredServer nameThe fully qualified server nameHere's an example:mySampleDataWarehouseservername.database.windows.net.AuthenticationSQL Server AuthenticationSQL Authentication is the only authentication type that is configured in this tutorial.LoginThe server admin accountThe account that you specified when you created the server.PasswordThe password for your server admin accountThe password you specified when you created the server.
In theConnect to Serverdialog box, enter the following information:

SelectConnect. The Object Explorer window opens in SSMS.
SelectConnect. The Object Explorer window opens in SSMS.
In Object Explorer, expandDatabases. Then expandmySampleDataWarehouseto view the objects in your new database.
In Object Explorer, expandDatabases. Then expandmySampleDataWarehouseto view the objects in your new database.
mySampleDataWarehouse

View service objective
The service objective setting contains the number of data warehouse units for the dedicated SQL pool (formerly SQL DW).
To view the current data warehouse units for your dedicated SQL pool (formerly SQL DW):
Under the connection tomySampleDataWarehouseservername.database.windows.net, expandSystem Databases.
Under the connection tomySampleDataWarehouseservername.database.windows.net, expandSystem Databases.
mySampleDataWarehouseservername.database.windows.net
Right-click on themastersystem database and selectNew Query. A new query window opens.
Right-click on themastersystem database and selectNew Query. A new query window opens.
master
Run the following query to select from thesys.database_service_objectivesdynamic management view.SELECT
    db.name AS [Database]
,    ds.edition AS [Edition]
,    ds.service_objective AS [Service Objective]
FROM
     sys.database_service_objectives ds
JOIN
    sys.databases db ON ds.database_id = db.database_id
WHERE
    db.name = 'mySampleDataWarehouse';
Run the following query to select from thesys.database_service_objectivesdynamic management view.
sys.database_service_objectives
SELECT
    db.name AS [Database]
,    ds.edition AS [Edition]
,    ds.service_objective AS [Service Objective]
FROM
     sys.database_service_objectives ds
JOIN
    sys.databases db ON ds.database_id = db.database_id
WHERE
    db.name = 'mySampleDataWarehouse';
SELECT
    db.name AS [Database]
,    ds.edition AS [Edition]
,    ds.service_objective AS [Service Objective]
FROM
     sys.database_service_objectives ds
JOIN
    sys.databases db ON ds.database_id = db.database_id
WHERE
    db.name = 'mySampleDataWarehouse';
The following results showmySampleDataWarehousehas a service objective of DW400 in theService Objectivecolumn.
The following results showmySampleDataWarehousehas a service objective of DW400 in theService Objectivecolumn.
mySampleDataWarehouse
Service Objective

Scale compute
In dedicated SQL pool (formerly SQL DW), you can increase or decrease compute resources by adjusting data warehouse units. TheCreate and Connect - portalcreatedmySampleDataWarehouseand initialized it with 400 DWUs. The following steps adjust the DWUs formySampleDataWarehouse.
mySampleDataWarehouse
mySampleDataWarehouse
To change data warehouse units:
Right-click on themastersystem database and selectNew Query.
Right-click on themastersystem database and selectNew Query.
master
Use theALTER DATABASET-SQL statement to modify the service objective. Run the following query to change the service objective to DW300.ALTER DATABASE mySampleDataWarehouse
MODIFY (SERVICE_OBJECTIVE = 'DW300c');
Use theALTER DATABASET-SQL statement to modify the service objective. Run the following query to change the service objective to DW300.
ALTER DATABASE mySampleDataWarehouse
MODIFY (SERVICE_OBJECTIVE = 'DW300c');
ALTER DATABASE mySampleDataWarehouse
MODIFY (SERVICE_OBJECTIVE = 'DW300c');
Monitor scale change request
To see the progress of the previous change request, you can use theWAITFORDELAYT-SQL syntax to poll thesys.dm_operation_statusdynamic management view (DMV).
WAITFORDELAY
To poll for the service object change status:
Right-click on themastersystem database and selectNew Query.
Right-click on themastersystem database and selectNew Query.
master
Run the following query to poll thesys.dm_operation_statusDMV.WHILE
(
    SELECT TOP 1 state_desc
    FROM sys.dm_operation_status
    WHERE
        1=1
        AND resource_type_desc = 'Database'
        AND major_resource_id = 'mySampleDataWarehouse'
        AND operation = 'ALTER DATABASE'
    ORDER BY
        start_time DESC
) = 'IN_PROGRESS'
BEGIN
    RAISERROR('Scale operation in progress',0,0) WITH NOWAIT;
    WAITFOR DELAY '00:00:05';
END
PRINT 'Complete';
Run the following query to poll thesys.dm_operation_statusDMV.
WHILE
(
    SELECT TOP 1 state_desc
    FROM sys.dm_operation_status
    WHERE
        1=1
        AND resource_type_desc = 'Database'
        AND major_resource_id = 'mySampleDataWarehouse'
        AND operation = 'ALTER DATABASE'
    ORDER BY
        start_time DESC
) = 'IN_PROGRESS'
BEGIN
    RAISERROR('Scale operation in progress',0,0) WITH NOWAIT;
    WAITFOR DELAY '00:00:05';
END
PRINT 'Complete';
WHILE
(
    SELECT TOP 1 state_desc
    FROM sys.dm_operation_status
    WHERE
        1=1
        AND resource_type_desc = 'Database'
        AND major_resource_id = 'mySampleDataWarehouse'
        AND operation = 'ALTER DATABASE'
    ORDER BY
        start_time DESC
) = 'IN_PROGRESS'
BEGIN
    RAISERROR('Scale operation in progress',0,0) WITH NOWAIT;
    WAITFOR DELAY '00:00:05';
END
PRINT 'Complete';
The resulting output shows a log of the polling of the status.
The resulting output shows a log of the polling of the status.

Check dedicated SQL pool (formerly SQL DW) state
When a dedicated SQL pool (formerly SQL DW) is paused, you can't connect to it with T-SQL. To see the current state of the dedicated SQL pool (formerly SQL DW), you can use a PowerShell cmdlet. For an example, seeCheck dedicated SQL pool (formerly SQL DW) state - PowerShell.
Check operation status
To return information about various management operations on your dedicated SQL pool (formerly SQL DW), run the following query on thesys.dm_operation_statusDMV. For example, it returns the operation and the  state of the operation, which is IN_PROGRESS or COMPLETED.
SELECT *
FROM
    sys.dm_operation_status
WHERE
    resource_type_desc = 'Database'
AND
    major_resource_id = 'mySampleDataWarehouse';
SELECT *
FROM
    sys.dm_operation_status
WHERE
    resource_type_desc = 'Database'
AND
    major_resource_id = 'mySampleDataWarehouse';
Next steps
You've now learned how to scale compute for your dedicated SQL pool (formerly SQL DW). To learn more about Azure Synapse Analytics, continue to the tutorial for loading data.
Load data into a dedicated SQL pool
Feedback
Was this page helpful?
Additional resources