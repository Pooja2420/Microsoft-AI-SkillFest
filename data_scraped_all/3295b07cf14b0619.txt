Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Calling SDK overview
Article
2025-04-15
31 contributors
In this article
Azure Communication Services allows end-user browsers, apps, and services to drive voice and video communication. This page focuses on Calling client SDK, which can be embedded in websites and native applications. This page provides detailed descriptions of Calling client features such as platform and browser support information. Services programmatically manages and access calls using theCall Automation APIs. TheRooms APIis an optional Azure Communication Services API that adds more features to a voice or video call, such as roles and permissions.
To build your own user experience with the Calling SDK, check outCalling quickstartsorCalling hero sample.
If you'd like help with the end-user experience, the Azure Communication Services UI Library provides a collection of open-source production-ready UI components to drop into your application. With this set of prebuilt controls, you can create beautiful communication experiences usingMicrosoft's Fluent design language. If you want to learn more about the UI Library, visitthe overview site.
Once you start development, check out theknown issues pageto find bugs we're working on.
SDK links
Key features
Device Management and Media- The Calling SDK provides facilities for binding to audio and video devices, encodes content for efficient transmission over the communications dataplane, and renders content to output devices and views that you specify. APIs are also provided for screen and application sharing.
PSTN- The Calling SDK can initiate voice calls with the traditional publicly switched telephone network,using phone numbers you acquire in the Azure portalor programmatically. You can also bring your own numbers using session border controllers.
Teams Meetings & Calling- The Calling SDK canjoin Teams meetingsand interact with the Teams voice and video dataplane.
Encryption- The Calling SDK encrypts traffic and prevents tampering on the wire.
Addressing- Azure Communication Services provides genericidentitiesthat are used to address communication endpoints. Clients use these identities to authenticate to the service and communicate with each other. These identities are used in Calling APIs that provide clients visibility into who is connected to a call (the roster).
User Access SecurityRostercontrol,schedulecontrol, and userroles/permissionsare enforced throughVirtual Rooms.Ability for a user toInitiate a new callor toJoin an existing callcan be managed throughUser Identities and Tokens
Rostercontrol,schedulecontrol, and userroles/permissionsare enforced throughVirtual Rooms.
Ability for a user toInitiate a new callor toJoin an existing callcan be managed throughUser Identities and Tokens
Notifications- The Calling SDK provides APIs allowing clients to be notified of an incoming call. In situations where your app isn't running in the foreground, patterns are available tofire pop-up notifications("toasts") to inform end-users of an incoming call.
Media Stats- The Calling SDK provides comprehensive insights intothe metricsof your VoIP and video calls. With this information, developers have a clearer understanding of call quality and can make informed decisions to further enhance their communication experience.
Video Constraints- The Calling SDK provides APIs that gain the ability to regulatevideo quality among other parametersduring video calls by adjusting parameters such as resolution and frame rate supporting different call situations for different levels of video quality
User Facing Diagnostics (UFD)- The Calling SDK provideseventsthat are designed to provide insights into underlying issues that could affect call quality. Developers can subscribe to triggers such as weak network signals or muted microphones, ensuring that they're always aware of any factors impacting the calls.
Real Time Text (RTT)-Real Time Text (RTT)provides developers with the ability to transmit text in near real-time during a call. This feature is designed to empower individuals who have difficulty speaking, ensuring their text messages are displayed prominently to other meeting participants, similar to spoken communication.
Detailed capabilities
The following list presents the set of features that are currently available in the Azure Communication Services Calling SDKs.
1The capability to Mute Others is currently in public preview.
2The Share Screen capability can be achieved using Raw Media APIs. To learn more, seethe raw media access quickstart guide.
3The Calling SDK doesn't have an explicit API for these functions. Use the Android & iOS OS APIs to achieve instead.
4The maximum value for TTL in native platforms, is180 days (15,552,000 seconds), and the min value is5 minutes (300 seconds). For CTE (Custom Teams Endpoint)/M365 Identity the max TTL value is24 hrs (86,400 seconds).
JavaScript Calling SDK support by OS and browser
The following table represents the set of supported browsers, which are currently available.We support the most recent three major versions of the browser (most recent three minor versions for Safari)unless otherwise indicated.
Outgoing Screen Sharing isn't supported on iOS or Android mobile browsers.
Firefox support is in public preview.
Currently, the calling SDK only supports Android System WebView on Android, iOS WebView(WKWebView) in public preview. Other types of embedded browsers or WebView on other OS platforms aren't officially supported, for example, GeckoView, Chromium Embedded Framework (CEF), Microsoft Edge WebView2. Running JavaScript Calling SDK on these platforms isn't actively tested, it might or might not work.
An iOS app on Safari can't enumerate/select mic and speaker devices(for example, Bluetooth). This issue is a limitation of iOS, and the operating system controls default device selection.
Calling client - browser security model
Use WebRTC over HTTPS
WebRTC APIs likegetUserMediarequire that the app that calls these APIs is served over HTTPS. For local development, you can usehttp://localhost.
getUserMedia
http://localhost
Embed the Communication Services Calling SDK in an iframe
A newpermissions policy (also called a feature policy)is available in various browsers. This policy affects calling scenarios by controlling how applications can access a device's camera and microphone through a cross-origin iframe element.
If you want to use an iframe to host part of the app from a different domain, you must add theallowattribute with the correct value to your iframe.
allow
For example, this iframe allows both camera and microphone access:
<iframe allow="camera *; microphone *">
<iframe allow="camera *; microphone *">
Android Calling SDK support
Support for Android API Level 21 or Higher
Support for Java 7 or higher
Support for Android Studio 2.0
We highly recommend identifying and validating your scenario by visiting the supportedAndroid platforms
iOS Calling SDK support
Support the last two major iOS operating system updates (N and N-1 for iOS minimum OS support)
Xcode 12.0+
Support foriPadOS13.0+
Maximum call duration
The maximum call duration is 30 hoursand participants that reach the maximum call duration lifetime of 30 hours are disconnected from the call.
Supported number of incoming video streams
The Azure Communication Services Calling SDK supports the following streaming configurations:
* Starting from Azure Communication Services Web Calling SDK version1.16.3. While the Calling SDK doesn't enforce these limits, your users might experience performance degradation if they're exceeded. Use the API ofOptimal Video Countto determine the number of incoming video streams your web environment can support. To properly support 16 incoming videos, the computer needs a minimum of 16GB RAM and a 4-core or greater CPU that is less than 3 years old.
Supported video resolutions
The Azure Communication Services Calling SDK automatically adjusts resolutions of video and screen share streams during the call.
Note
The resolution can vary depending on the number of participants on a call, the amount of bandwidth available to the client, hardware capabilities of local participant who renders remote video streams and other overall call parameters.
The Azure Communication Services Calling SDK supports sending following video resolutions
Number of participants on a call support
Sending a1080p stream from WebJS desktopis in public preview. GA versions of WebJS SDK for Desktop browser support sending a 720p stream.
Up to350users can join a group call, Room call, or Teams + Azure Communication Services call.
Once the call size reaches 100+ participants, the Calling SDK only displays the top four dominant speakers that have their video camera active.
When the number of people on the call is 100+, the viewable number of incoming videos automatically decreases from 4x4 (16 incoming videos) down to 2x2 (4 incoming videos).
When the number of users goes below 100, the number of supported incoming videos goes back up to 4x4 (16 incoming videos).
Calling SDK time-outs
The following time-outs apply to the Communication Services Calling SDKs:
Next steps
Get started with calling
Related articles
Familiarize yourself with generalcall flows.
Learn aboutcall types.
Learn aboutcall automation APIthat enables you to build server-based calling workflows that can route and control calls with client applications.
Plan your PSTN solution.
Feedback
Was this page helpful?
Additional resources