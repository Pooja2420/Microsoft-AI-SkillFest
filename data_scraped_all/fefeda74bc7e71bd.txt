Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Connect to an FTP server from workflows in Azure Logic Apps
Article
2024-01-04
7 contributors
In this article
Applies to:Azure Logic Apps (Consumption + Standard)
This article shows how to access your File Transfer Protocol (FTP) server from a workflow in Azure Logic Apps with the FTP connector. You can then create automated workflows that run when triggered by events in your FTP server or in other systems and run actions to manage files on your FTP server.
For example, your workflow can start with an FTP trigger that monitors and responds to events on your FTP server. The trigger makes the outputs available to subsequent actions in your workflow. Your workflow can run FTP actions that create, send, receive, and manage files through your FTP server account using the following specific tasks:
Monitor when files are added or changed.
Create, copy, delete, list, and update files.
Get file metadata and content.
Manage folders.
If you're new to Azure Logic Apps, review the following get started documentation:
What is Azure Logic Apps
Quickstart: Create an example Consumption logic app workflow
Connector technical reference
The FTP connector has different versions, based onlogic app type and host environment.
Limitations
Capacity and throughputBuilt-in connector for Standard workflows:By default, FTP actions can read or write files that are200 MB or smaller. Currently, the FTP built-in connector doesn't support chunking.Managed or Azure-hosted connector for Consumption and Standard workflowsBy default, FTP actions can read or write files that are50 MB or smaller. To handle files larger than 50 MB, FTP actions supportmessage chunking. TheGet file contentaction implicitly uses chunking.
Capacity and throughput
Built-in connector for Standard workflows:By default, FTP actions can read or write files that are200 MB or smaller. Currently, the FTP built-in connector doesn't support chunking.
Built-in connector for Standard workflows:
By default, FTP actions can read or write files that are200 MB or smaller. Currently, the FTP built-in connector doesn't support chunking.
Managed or Azure-hosted connector for Consumption and Standard workflowsBy default, FTP actions can read or write files that are50 MB or smaller. To handle files larger than 50 MB, FTP actions supportmessage chunking. TheGet file contentaction implicitly uses chunking.
Managed or Azure-hosted connector for Consumption and Standard workflows
By default, FTP actions can read or write files that are50 MB or smaller. To handle files larger than 50 MB, FTP actions supportmessage chunking. TheGet file contentaction implicitly uses chunking.
Triggers for the FTP managed or Azure-hosted connector might experience missing, incomplete, or delayed results when the "last modified" timestamp is preserved. On the other hand, the FTPbuilt-inconnector trigger in Standard logic app workflows doesn't have this limitation. For more information, review the FTP connector'sLimitationssection.
Triggers for the FTP managed or Azure-hosted connector might experience missing, incomplete, or delayed results when the "last modified" timestamp is preserved. On the other hand, the FTPbuilt-inconnector trigger in Standard logic app workflows doesn't have this limitation. For more information, review the FTP connector'sLimitationssection.
The FTP managed or Azure-hosted connector can create a limited number of connections to the FTP server, based on the connection capacity in the Azure region where your logic app resource exists. If this limit poses a problem in a Consumption logic app workflow, consider creating a Standard logic app workflow and use the FTP built-in connector instead.
The FTP managed or Azure-hosted connector can create a limited number of connections to the FTP server, based on the connection capacity in the Azure region where your logic app resource exists. If this limit poses a problem in a Consumption logic app workflow, consider creating a Standard logic app workflow and use the FTP built-in connector instead.
Prerequisites
An Azure account and subscription. If you don't have an Azure subscription,sign up for a free Azure account.
An Azure account and subscription. If you don't have an Azure subscription,sign up for a free Azure account.
The logic app workflow where you want to access your FTP account. To start your workflow with an FTP trigger, you have to start with a blank workflow. To use an FTP action, start your workflow with another trigger, such as theRecurrencetrigger.
The logic app workflow where you want to access your FTP account. To start your workflow with an FTP trigger, you have to start with a blank workflow. To use an FTP action, start your workflow with another trigger, such as theRecurrencetrigger.
For more requirements that apply to both the FTP managed connector and built-in connector, review theFTP managed connector reference - Requirements.
For more requirements that apply to both the FTP managed connector and built-in connector, review theFTP managed connector reference - Requirements.

Known issues
By default, triggers that return an array have aSplit Onsetting that's already enabled. With this setting enabled, the trigger automaticallydebatchesthe array by internally creating a separate workflow instance to process each array item. All the workflow instances run in parallel so that the array items are processed at the same time.
However, when theSplit Onsetting is enabled,managedconnector triggers return the outputs for all the array items as lists. Any subsequent actions that reference these outputs have to first handle these outputs as lists. To handle each array item individually, you can add extra actions. For example, to iterate through these array items, you can use aFor eachloop. For triggers that return only metadata or properties, use an action that gets the array item's metadata first, and then use an action to get the items contents.
You have to apply this approach only formanagedconnector triggers, not built-in connector triggers that return outputs for one array item at a time when theSplit Onsetting is enabled.
For example, suppose you have managed connector trigger namedWhen a file is added or modified (properties only)that returns the metadata or properties for the new or updated files as arrays. To get the metadata separately for each file, you might use aFor eachloop that iterates through the array. In this loop, use the following managed connector actions in the specified order:
Get file metadatato get each file's metadata.
Get file metadatato get each file's metadata.
Get file contentaction to get each file's content.
Get file contentaction to get each file's content.

Add an FTP trigger
A Consumption logic app workflow can use only the FTP managed connector. However, a Standard logic app workflow can use the FTP managed connectorandthe FTP built-in connector. In a Standard logic app workflow, managed connectors are also labeled asAzureconnectors.
The FTP managed connector and built-in connector each have only one trigger available:
Managed connector trigger: The FTP trigger namedWhen a file is added or modified (properties only)runs a Consumption or Standard logic app workflow when one or more files are added or changed in a folder on the FTP server. This trigger gets only the file properties or metadata, not the file content. However, to get the file content, your workflow can follow this trigger with other FTP actions.For more information about this trigger, reviewWhen a file is added or modified (properties only).
Managed connector trigger: The FTP trigger namedWhen a file is added or modified (properties only)runs a Consumption or Standard logic app workflow when one or more files are added or changed in a folder on the FTP server. This trigger gets only the file properties or metadata, not the file content. However, to get the file content, your workflow can follow this trigger with other FTP actions.
For more information about this trigger, reviewWhen a file is added or modified (properties only).
Built-in connector trigger: The FTP trigger namedWhen a file is added or updatedruns a Standard logic app workflow when one or more files are added or changed in a folder on the FTP server. This trigger gets only the file properties or metadata, not the file content. However, to get the content, your workflow can follow this trigger with other FTP actions. For more information about this trigger, reviewWhen a file is added or updated.
Built-in connector trigger: The FTP trigger namedWhen a file is added or updatedruns a Standard logic app workflow when one or more files are added or changed in a folder on the FTP server. This trigger gets only the file properties or metadata, not the file content. However, to get the content, your workflow can follow this trigger with other FTP actions. For more information about this trigger, reviewWhen a file is added or updated.
The following steps use the Azure portal, but with the appropriate Azure Logic Apps extension, you can also use the following tools to create and edit logic app workflows:
Consumption logic app workflows:Visual Studio Code
Consumption logic app workflows:Visual Studio Code
Standard logic app workflows:Visual Studio Code
Standard logic app workflows:Visual Studio Code
Consumption
Standard
In theAzure portal, and open your blank logic app workflow in the designer.
In theAzure portal, and open your blank logic app workflow in the designer.
On the designer, under the search box, selectStandard. In the search box, enterftp.
On the designer, under the search box, selectStandard. In the search box, enterftp.
From the triggers list, select the trigger namedWhen a filed is added or modified (properties only).
From the triggers list, select the trigger namedWhen a filed is added or modified (properties only).

Provide theinformation for your connection. When you're done, selectCreate.NoteBy default, this connector transfers files in text format. To transfer files in binary format,
for example, where and when encoding is used, select the binary transport option.
Provide theinformation for your connection. When you're done, selectCreate.
Note
By default, this connector transfers files in text format. To transfer files in binary format,
for example, where and when encoding is used, select the binary transport option.

After the trigger information box appears, find the folder that you want to monitor for new or edited files.In theFolderbox, select the folder icon to view the folder directory.Select the right angle arrow (>). Browse to the folder that you want, and then select the folder.Your selected folder appears in theFolderbox.
After the trigger information box appears, find the folder that you want to monitor for new or edited files.
In theFolderbox, select the folder icon to view the folder directory.
In theFolderbox, select the folder icon to view the folder directory.
Select the right angle arrow (>). Browse to the folder that you want, and then select the folder.
Select the right angle arrow (>). Browse to the folder that you want, and then select the folder.

Your selected folder appears in theFolderbox.

When you're done, save your workflow.
When you're done, save your workflow.
This section shows the steps for the following FTP connector triggers:
Built-intrigger namedWhen a file is added or updatedIf you use this FTP built-in trigger, you can get the file content by just using the FTP built-in action namedGet file contentwithout using theGet file metadataaction first, unlike when you use the FTP managed trigger. For more information about FTP built-in connector operations, reviewFTP built-in connector operationslater in this article.
Built-intrigger namedWhen a file is added or updated
If you use this FTP built-in trigger, you can get the file content by just using the FTP built-in action namedGet file contentwithout using theGet file metadataaction first, unlike when you use the FTP managed trigger. For more information about FTP built-in connector operations, reviewFTP built-in connector operationslater in this article.
Managedtrigger namedWhen a file is added or modified (properties only)If you use this FTP managed trigger, you have to later use theGet file metadataaction first to get a single array item before you use any other action on the file that was added or modified. This workaround results from theknown issue around theSplit Onsettingdescribed earlier in this article.
Managedtrigger namedWhen a file is added or modified (properties only)
If you use this FTP managed trigger, you have to later use theGet file metadataaction first to get a single array item before you use any other action on the file that was added or modified. This workaround results from theknown issue around theSplit Onsettingdescribed earlier in this article.

In theAzure portal, and open your blank logic app workflow in the designer.
In theAzure portal, and open your blank logic app workflow in the designer.
On the designer, selectChoose an operation. Under the search box, selectBuilt-in.
On the designer, selectChoose an operation. Under the search box, selectBuilt-in.
In the search box, enterftp. From the triggers list, select the trigger namedWhen a filed is added or updated.
In the search box, enterftp. From the triggers list, select the trigger namedWhen a filed is added or updated.

Provide the information for your connection.NoteBy default, this connector transfers files in text format. To transfer files in binary format,
for example, where and when encoding is used, select the binary transport option.
Provide the information for your connection.
Note
By default, this connector transfers files in text format. To transfer files in binary format,
for example, where and when encoding is used, select the binary transport option.

When you're done, selectCreate.
When you're done, selectCreate.
When the trigger information box appears, in theFolder pathbox, specify the path to the folder that you want to monitor.
When the trigger information box appears, in theFolder pathbox, specify the path to the folder that you want to monitor.

When you're done, save your logic app workflow.
When you're done, save your logic app workflow.

In theAzure portal, and open your blank logic app workflow in the designer.
In theAzure portal, and open your blank logic app workflow in the designer.
On the designer, selectChoose an operation. Under the search box, selectAzure.
On the designer, selectChoose an operation. Under the search box, selectAzure.
In the search box, enterftp. From the triggers list, select the trigger namedWhen a filed is added or modified (properties only).
In the search box, enterftp. From the triggers list, select the trigger namedWhen a filed is added or modified (properties only).

Provide theinformation for your connection.NoteBy default, this connector transfers files in text format. To transfer files in binary format,
for example, where and when encoding is used, select the binary transport option.
Provide theinformation for your connection.
Note
By default, this connector transfers files in text format. To transfer files in binary format,
for example, where and when encoding is used, select the binary transport option.

When you're done, selectCreate.
When you're done, selectCreate.
When the trigger information box appears, find the folder that you want to monitor for new or edited files.In theFolderbox, select the folder icon to view the folder directory.Select the right angle arrow (>). Browse to the folder that you want, and then select the folder.Your selected folder appears in theFolderbox.
When the trigger information box appears, find the folder that you want to monitor for new or edited files.
In theFolderbox, select the folder icon to view the folder directory.
In theFolderbox, select the folder icon to view the folder directory.
Select the right angle arrow (>). Browse to the folder that you want, and then select the folder.
Select the right angle arrow (>). Browse to the folder that you want, and then select the folder.

Your selected folder appears in theFolderbox.

When you're done, save your logic app workflow.
When you're done, save your logic app workflow.
When you save your workflow, this step automatically publishes your updates to your deployed logic app, which is live in Azure. With only a trigger, your workflow just checks the FTP server based on your specified schedule. You have toadd an actionthat responds to the trigger and does something with the trigger outputs.

Add an FTP action
A Consumption logic app workflow can use only the FTP managed connector. However, a Standard logic app workflow can use the FTP managed connector and the FTP built-in connector. Each version has multiple actions. For example, both managed and built-in connector versions have their own actions to get file metadata and get file content.
Managed connector actions: These actions run in a Consumption or Standard logic app workflow.
Managed connector actions: These actions run in a Consumption or Standard logic app workflow.
Built-in connector actions: These actions run only in a Standard logic app workflow.
Built-in connector actions: These actions run only in a Standard logic app workflow.
The following steps use the Azure portal, but with the appropriate Azure Logic Apps extension, you can also use the following tools to build logic app workflows:
Consumption workflows:Visual Studio Code
Standard workflows:Visual Studio Code
Before you can use an FTP action, your workflow must already start with a trigger, which can be any kind that you choose. For example, you can use the genericRecurrencebuilt-in trigger to start your workflow on specific schedule.
Consumption
Standard
In theAzure portal, and open your logic app workflow in the designer.
In theAzure portal, and open your logic app workflow in the designer.
Find and select theFTP actionthat you want to use.This example continues with the action namedGet file metadataso you can get the metadata for a single array item.On the designer, under the trigger or any other actions, selectNew step.Under theChoose an operationsearch box, selectStandard.In the search box, enterftp get file metadata.From the actions list, select the action namedGet file metadata.
Find and select theFTP actionthat you want to use.
This example continues with the action namedGet file metadataso you can get the metadata for a single array item.
On the designer, under the trigger or any other actions, selectNew step.
On the designer, under the trigger or any other actions, selectNew step.
Under theChoose an operationsearch box, selectStandard.
Under theChoose an operationsearch box, selectStandard.
In the search box, enterftp get file metadata.
In the search box, enterftp get file metadata.
From the actions list, select the action namedGet file metadata.
From the actions list, select the action namedGet file metadata.

If necessary, provide theinformation for your connection. When you're done, selectCreate.NoteBy default, this connector transfers files in text format. To transfer files in binary format,
for example, where and when encoding is used, select the binary transport option.
If necessary, provide theinformation for your connection. When you're done, selectCreate.
Note
By default, this connector transfers files in text format. To transfer files in binary format,
for example, where and when encoding is used, select the binary transport option.

After theGet file metadataaction information box appears, click inside theFilebox so that the dynamic content list opens.You can now select outputs from the preceding trigger.
After theGet file metadataaction information box appears, click inside theFilebox so that the dynamic content list opens.
You can now select outputs from the preceding trigger.
In the dynamic content list, underWhen a file is added or modified, selectList of Files Id.TheFileproperty now references theList of Files Idtrigger output.
In the dynamic content list, underWhen a file is added or modified, selectList of Files Id.

TheFileproperty now references theList of Files Idtrigger output.
On the designer, under theGet file metadataaction, selectNew step.
On the designer, under theGet file metadataaction, selectNew step.
Under theChoose an operationsearch box, selectStandard.
Under theChoose an operationsearch box, selectStandard.
In the search box, enterftp get file content.
In the search box, enterftp get file content.
From the actions list, select the action namedGet file content.
From the actions list, select the action namedGet file content.

After theGet file contentaction information box appears, click inside theFilebox so that the dynamic content list opens.You can now select outputs from the preceding trigger and any other actions.
After theGet file contentaction information box appears, click inside theFilebox so that the dynamic content list opens.
You can now select outputs from the preceding trigger and any other actions.
In the dynamic content list, underGet file metadata, selectId, which references the file that was added or updated.TheFileproperty now references theIdaction output.
In the dynamic content list, underGet file metadata, selectId, which references the file that was added or updated.

TheFileproperty now references theIdaction output.

When you're done, save your workflow. On the designer toolbar, selectSave.
When you're done, save your workflow. On the designer toolbar, selectSave.
The steps to add and use an FTP action differ based on whether your workflow uses the built-in connector or the managed, Azure-hosted connector.
Built-in trigger: Describes the steps to add a built-in action.If you used the FTP built-in trigger, and you want the content from a newly added or updated file, you can use aFor eachloop to iterate through the array that's returned by the trigger. You can then use just theGet file contentaction without any other intermediary actions. For more information about FTP built-in connector operations, reviewFTP built-in connector operationslater in this article.
Built-in trigger: Describes the steps to add a built-in action.
If you used the FTP built-in trigger, and you want the content from a newly added or updated file, you can use aFor eachloop to iterate through the array that's returned by the trigger. You can then use just theGet file contentaction without any other intermediary actions. For more information about FTP built-in connector operations, reviewFTP built-in connector operationslater in this article.
Managed trigger: Describes the steps to add a managed action.
Managed trigger: Describes the steps to add a managed action.
If you used the FTP managed connector trigger, and want the content from a newly added or modified file, you can use aFor eachloop to iterate through the array that's returned by the trigger. You then have to use intermediary actions such as the FTP action namedGet file metadatabefore you use theGet file contentaction.

In theAzure portal, and open your logic app workflow in the designer.
In theAzure portal, and open your logic app workflow in the designer.
On the designer, under the trigger or any other actions, select the plus sign (+) >Add an action.
On the designer, under the trigger or any other actions, select the plus sign (+) >Add an action.
On theAdd an actionpane, under theChoose an operationsearch box, selectBuilt-in.
On theAdd an actionpane, under theChoose an operationsearch box, selectBuilt-in.
In the search box, enterftp get file content. From the actions list, selectGet file content.
In the search box, enterftp get file content. From the actions list, selectGet file content.

If necessary, provide the information for your connection. When you're done, selectCreate.NoteBy default, this connector transfers files in text format. To transfer files in binary format,
for example, where and when encoding is used, select the binary transport option.
If necessary, provide the information for your connection. When you're done, selectCreate.
Note
By default, this connector transfers files in text format. To transfer files in binary format,
for example, where and when encoding is used, select the binary transport option.

In the action information pane that appears, click inside theFile pathbox so that the dynamic content list opens.You can now select outputs from the preceding trigger.
In the action information pane that appears, click inside theFile pathbox so that the dynamic content list opens.
You can now select outputs from the preceding trigger.
In the dynamic content list, underWhen a file is added or updated, selectFile path.TheFile pathproperty now references theFile pathtrigger output.
In the dynamic content list, underWhen a file is added or updated, selectFile path.

TheFile pathproperty now references theFile pathtrigger output.

Add any other actions that your workflow needs.
Add any other actions that your workflow needs.
When you're done, save your workflow. On the designer toolbar, selectSave.
When you're done, save your workflow. On the designer toolbar, selectSave.

In theAzure portal, and open your logic app workflow in the designer.
In theAzure portal, and open your logic app workflow in the designer.
On the designer, under the trigger or any other actions, select the plus sign (+) >Add an action.
On the designer, under the trigger or any other actions, select the plus sign (+) >Add an action.
On theAdd an actionpane, under theChoose an operationsearch box, selectAzure.
On theAdd an actionpane, under theChoose an operationsearch box, selectAzure.
In the search box, enterftp get file metadata. From the actions list, select theGet file metadataaction.
In the search box, enterftp get file metadata. From the actions list, select theGet file metadataaction.

If necessary, provide theinformation for your connection. When you're done, selectCreate.NoteBy default, this connector transfers files in text format. To transfer files in binary format,
for example, where and when encoding is used, select the binary transport option.
If necessary, provide theinformation for your connection. When you're done, selectCreate.
Note
By default, this connector transfers files in text format. To transfer files in binary format,
for example, where and when encoding is used, select the binary transport option.

In the action information pane that appears, click inside theFilebox so that the dynamic content list opens.You can now select outputs from the preceding trigger.
In the action information pane that appears, click inside theFilebox so that the dynamic content list opens.
You can now select outputs from the preceding trigger.
In the dynamic content list, underWhen a file is added or modified (properties only), selectList of Files Id.TheFileproperty now references theList of Files Idtrigger output.
In the dynamic content list, underWhen a file is added or modified (properties only), selectList of Files Id.

TheFileproperty now references theList of Files Idtrigger output.

On the designer, under theGet file metadataaction, select the plus sign (+) >Add an action.
On the designer, under theGet file metadataaction, select the plus sign (+) >Add an action.
In theAdd an actionpane, under theChoose an operationsearch box, selectAzure.
In theAdd an actionpane, under theChoose an operationsearch box, selectAzure.
In the search box, enterftp get file content. From the actions list, select theGet file contentaction.
In the search box, enterftp get file content. From the actions list, select theGet file contentaction.

In the action information pane that appears, click inside theFilebox so that the dynamic content list opens.You can now select outputs from the preceding trigger or actions.
In the action information pane that appears, click inside theFilebox so that the dynamic content list opens.
You can now select outputs from the preceding trigger or actions.
In the dynamic content list, underGet file metadata, selectId.TheFileproperty now references theIdaction output.
In the dynamic content list, underGet file metadata, selectId.

TheFileproperty now references theIdaction output.

Add any other actions that your workflow needs.
Add any other actions that your workflow needs.
When you're done, save your workflow. On the designer toolbar, selectSave.
When you're done, save your workflow. On the designer toolbar, selectSave.
Test your workflow
To check that your workflow returns the content that you expect, add another action that sends you the content from the added or updated file. This example uses the Office 365 Outlook action namedSend an email.
Consumption
Standard
Under theGet file contentaction, add the Office 365 Outlook action namedSend an email. If you have an Outlook.com account instead, add the Outlook.comSend an emailaction, and adjust the following steps accordingly.On the designer, under theGet file contentaction, selectNew step.Under theChoose an operationsearch box, selectStandard.In the search box, enteroffice 365 outlook send an email. From the actions list, select the Office 365 Outlook action namedSend an email.
Under theGet file contentaction, add the Office 365 Outlook action namedSend an email. If you have an Outlook.com account instead, add the Outlook.comSend an emailaction, and adjust the following steps accordingly.
On the designer, under theGet file contentaction, selectNew step.
On the designer, under theGet file contentaction, selectNew step.
Under theChoose an operationsearch box, selectStandard.
Under theChoose an operationsearch box, selectStandard.
In the search box, enteroffice 365 outlook send an email. From the actions list, select the Office 365 Outlook action namedSend an email.
In the search box, enteroffice 365 outlook send an email. From the actions list, select the Office 365 Outlook action namedSend an email.

If necessary, sign in to your email account.
If necessary, sign in to your email account.
In the action information box, provide the required values and include any other parameters or properties that you want to test.For example, you can include theFile contentoutput from theGet file contentaction. To find this output, follow these steps:In theGet file contentaction, click inside theBodybox so that the dynamic content list opens.In the dynamic content list, next toGet file content, selectSee more.In the dynamic content list, underGet file content, selectFile Content.TheBodyproperty now references theFile Contentaction output.
In the action information box, provide the required values and include any other parameters or properties that you want to test.
For example, you can include theFile contentoutput from theGet file contentaction. To find this output, follow these steps:
In theGet file contentaction, click inside theBodybox so that the dynamic content list opens.
In theGet file contentaction, click inside theBodybox so that the dynamic content list opens.
In the dynamic content list, next toGet file content, selectSee more.
In the dynamic content list, next toGet file content, selectSee more.

In the dynamic content list, underGet file content, selectFile Content.TheBodyproperty now references theFile Contentaction output.
In the dynamic content list, underGet file content, selectFile Content.
TheBodyproperty now references theFile Contentaction output.

Save your logic app workflow.
Save your logic app workflow.
To run and trigger the workflow, on the designer toolbar, selectRun Trigger>Run. Add a file to the FTP folder that your workflow monitors.
To run and trigger the workflow, on the designer toolbar, selectRun Trigger>Run. Add a file to the FTP folder that your workflow monitors.
Under theGet file contentaction, add the Office 365 Outlook action namedSend an email. If you have an Outlook.com account instead, add the Outlook.comSend an emailaction, and adjust the following steps accordingly.On the designer, selectChoose an operation.On theAdd an actionpane, under theChoose an operationsearch box, selectAzure.In the search box, enteroffice 365 outlook send an email. From the actions list, select the Office 365 Outlook action namedSend an email.
Under theGet file contentaction, add the Office 365 Outlook action namedSend an email. If you have an Outlook.com account instead, add the Outlook.comSend an emailaction, and adjust the following steps accordingly.
On the designer, selectChoose an operation.
On the designer, selectChoose an operation.
On theAdd an actionpane, under theChoose an operationsearch box, selectAzure.
On theAdd an actionpane, under theChoose an operationsearch box, selectAzure.
In the search box, enteroffice 365 outlook send an email. From the actions list, select the Office 365 Outlook action namedSend an email.
In the search box, enteroffice 365 outlook send an email. From the actions list, select the Office 365 Outlook action namedSend an email.

If necessary, sign in to your email account.
If necessary, sign in to your email account.
In the action information box, provide the required values and include any other parameters or properties that you want to test.For example, you can include theFile contentoutput from theGet file contentaction. To find this output, follow these steps:In theGet file contentaction, click inside theBodybox so that the dynamic content list opens. In the dynamic content list, next toGet file content, selectSee more.In the dynamic content list, underGet file content, selectFile content.TheBodyproperty now references theFile contentaction output.
In the action information box, provide the required values and include any other parameters or properties that you want to test.
For example, you can include theFile contentoutput from theGet file contentaction. To find this output, follow these steps:
In theGet file contentaction, click inside theBodybox so that the dynamic content list opens. In the dynamic content list, next toGet file content, selectSee more.
In theGet file contentaction, click inside theBodybox so that the dynamic content list opens. In the dynamic content list, next toGet file content, selectSee more.

In the dynamic content list, underGet file content, selectFile content.TheBodyproperty now references theFile contentaction output.
In the dynamic content list, underGet file content, selectFile content.
TheBodyproperty now references theFile contentaction output.

Save your logic app workflow.
Save your logic app workflow.
To run and trigger the workflow, follow these steps:On workflow menu, selectOverview.On theOverviewpane toolbar, selectRun Trigger>Run.Add a file to the FTP folder that your workflow monitors.
To run and trigger the workflow, follow these steps:
On workflow menu, selectOverview.
On workflow menu, selectOverview.
On theOverviewpane toolbar, selectRun Trigger>Run.
On theOverviewpane toolbar, selectRun Trigger>Run.
Add a file to the FTP folder that your workflow monitors.
Add a file to the FTP folder that your workflow monitors.
Under theGet file contentaction, add the Office 365 Outlook action namedSend an email. If you have an Outlook.com account instead, add the Outlook.comSend an emailaction, and adjust the following steps accordingly.On the designer, selectChoose an operation.On theAdd an actionpane, under theChoose an operationsearch box, selectAzure.In the search box, enteroffice 365 outlook send an email. From the actions list, select the Office 365 Outlook action namedSend an email.
Under theGet file contentaction, add the Office 365 Outlook action namedSend an email. If you have an Outlook.com account instead, add the Outlook.comSend an emailaction, and adjust the following steps accordingly.
On the designer, selectChoose an operation.
On the designer, selectChoose an operation.
On theAdd an actionpane, under theChoose an operationsearch box, selectAzure.
On theAdd an actionpane, under theChoose an operationsearch box, selectAzure.
In the search box, enteroffice 365 outlook send an email. From the actions list, select the Office 365 Outlook action namedSend an email.
In the search box, enteroffice 365 outlook send an email. From the actions list, select the Office 365 Outlook action namedSend an email.

If necessary, sign in to your email account.
If necessary, sign in to your email account.
In the action information box, provide the required values and include any other parameters or properties that you want to test.For example, you can include theFile contentoutput from theGet file contentaction. To find this output, follow these steps:In theGet file contentaction, click inside theBodybox so that the dynamic content list opens. In the dynamic content list, next toGet file content, selectSee more.In the dynamic content list, underGet file content, selectFile content.TheBodyproperty now references theFile contentaction output.
In the action information box, provide the required values and include any other parameters or properties that you want to test.
For example, you can include theFile contentoutput from theGet file contentaction. To find this output, follow these steps:
In theGet file contentaction, click inside theBodybox so that the dynamic content list opens. In the dynamic content list, next toGet file content, selectSee more.
In theGet file contentaction, click inside theBodybox so that the dynamic content list opens. In the dynamic content list, next toGet file content, selectSee more.

In the dynamic content list, underGet file content, selectFile content.TheBodyproperty now references theFile contentaction output.
In the dynamic content list, underGet file content, selectFile content.
TheBodyproperty now references theFile contentaction output.

Save your logic app workflow.
Save your logic app workflow.
To run and trigger the workflow, follow these steps:On workflow menu, selectOverview.On theOverviewpane toolbar, selectRun Trigger>Run.Add a file to the FTP folder that your workflow monitors.
To run and trigger the workflow, follow these steps:
On workflow menu, selectOverview.
On workflow menu, selectOverview.
On theOverviewpane toolbar, selectRun Trigger>Run.
On theOverviewpane toolbar, selectRun Trigger>Run.
Add a file to the FTP folder that your workflow monitors.
Add a file to the FTP folder that your workflow monitors.

FTP built-in connector operations
The FTP built-in connector is available only for Standard logic app workflows and provides the following operations:

Note: This trigger gets only the file metadata or properties, not the file content. However, to get the content, your workflow can follow this trigger with theGet file contentaction.

When a file is added or updated
Operation ID:whenFtpFilesAreAddedOrModified
whenFtpFilesAreAddedOrModified
This trigger starts a logic app workflow run when a file is added or updated in the specified folder on the FTP server. The trigger gets only the file metadata or properties, not any file content. However, to get the content, your workflow can follow this trigger with theGet file contentaction.
folderPath
string
maxFileCount
integer
oldFileCutOffTimestamp
dateTime
YYYY-MM-DDTHH:MM:SS
When the trigger'sSplit Onsetting is enabled, the trigger returns the metadata or properties for one file at a time. Otherwise, the trigger returns an array that contains each file's metadata.

Create file
Operation ID:createFile
createFile
This action creates a file using the specified file path and file content. If the file already exists, this action overwrites that file.
Important
If you delete or rename a file on the FTP server immediately after creation within the same workflow,
the operation might return an HTTP404error, which is by design. To avoid this problem, include
a 1-minute delay before you delete or rename any newly created files. You can use theDelayactionto add this delay to your workflow.
filePath
string
fileContent
string
This action returns aBlobMetadataobject namedBody.
string
string
string

Delete file
Operation ID:deleteFtpFile
deleteFtpFile
This action deletes a file using the specified file path.
filePath
string
None

Get file content
Operation ID:getFtpFileContent
getFtpFileContent
This action gets the content of a file using the specified file path.
path
string
This action returns the content of a file as a binary value namedFile content.

Get file metadata
Operation ID:getFileMetadata
getFileMetadata
This action gets the metadata or properties of a file using the specified file path.
path
string
This action returns the following outputs:
string
string
string
string

List files and subfolders in a folder
Operation ID:listFilesInFolder
listFilesInFolder
This action gets a list of files and subfolders in the specified folder.
folderPath
string
fileContent
string
This action returns an array that's namedResponseand containsBlobMetadataobjects.

Update file
Operation ID:updateFile
updateFile
This action updates a file using the specified file path and file content.
Important
If you delete or rename a file on the FTP server immediately after creation within the same workflow,
the operation might return an HTTP404error, which is by design. To avoid this problem, include
a 1-minute delay before you delete or rename any newly created files. You can use theDelayactionto add this delay to your workflow.
filePath
string
fileContent
string
This action returns aBlobMetadataobject namedBody.
Next steps
Managed connectors for Azure Logic Apps
Built-in connectors for Azure Logic Apps
What are connectors in Azure Logic Apps
Feedback
Was this page helpful?
Additional resources