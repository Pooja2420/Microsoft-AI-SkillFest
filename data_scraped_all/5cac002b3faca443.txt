Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Microsoft.Network loadBalancers
Article
2024-12-09
2 contributors
In this article
Latest
2024-05-01
2024-03-01
2024-01-01
2023-11-01
2023-09-01
2023-06-01
2023-05-01
2023-04-01
2023-02-01
2022-11-01
2022-09-01
2022-07-01
2022-05-01
2022-01-01
2021-08-01
2021-05-01
2021-03-01
2021-02-01
2020-11-01
2020-08-01
2020-07-01
2020-06-01
2020-05-01
2020-04-01
2020-03-01
2019-12-01
2019-11-01
2019-09-01
2019-08-01
2019-07-01
2019-06-01
2019-04-01
2019-02-01
2018-12-01
2018-11-01
2018-10-01
2018-08-01
2018-07-01
2018-06-01
2018-04-01
2018-02-01
2018-01-01
2017-11-01
2017-10-01
2017-09-01
2017-08-01
2017-06-01
2017-03-30
2017-03-01
2016-12-01
2016-09-01
2016-06-01
2016-03-30
2015-06-15
2015-05-01-preview
Bicep resource definition
The loadBalancers resource type can be deployed with operations that target:
Resource groups- Seeresource group deployment commands
For a list of changed properties in each API version, seechange log.
Resource format
To create a Microsoft.Network/loadBalancers resource, add the following Bicep to your template.
resource symbolicname 'Microsoft.Network/loadBalancers@2024-05-01' = {
  extendedLocation: {
    name: 'string'
    type: 'string'
  }
  location: 'string'
  name: 'string'
  properties: {
    backendAddressPools: [
      {
        id: 'string'
        name: 'string'
        properties: {
          drainPeriodInSeconds: int
          loadBalancerBackendAddresses: [
            {
              name: 'string'
              properties: {
                adminState: 'string'
                ipAddress: 'string'
                loadBalancerFrontendIPConfiguration: {
                  id: 'string'
                }
                subnet: {
                  id: 'string'
                }
                virtualNetwork: {
                  id: 'string'
                }
              }
            }
          ]
          location: 'string'
          syncMode: 'string'
          tunnelInterfaces: [
            {
              identifier: int
              port: int
              protocol: 'string'
              type: 'string'
            }
          ]
          virtualNetwork: {
            id: 'string'
          }
        }
      }
    ]
    frontendIPConfigurations: [
      {
        id: 'string'
        name: 'string'
        properties: {
          gatewayLoadBalancer: {
            id: 'string'
          }
          privateIPAddress: 'string'
          privateIPAddressVersion: 'string'
          privateIPAllocationMethod: 'string'
          publicIPAddress: {
            extendedLocation: {
              name: 'string'
              type: 'string'
            }
            id: 'string'
            location: 'string'
            properties: {
              ddosSettings: {
                ddosProtectionPlan: {
                  id: 'string'
                }
                protectionMode: 'string'
              }
              deleteOption: 'string'
              dnsSettings: {
                domainNameLabel: 'string'
                domainNameLabelScope: 'string'
                fqdn: 'string'
                reverseFqdn: 'string'
              }
              idleTimeoutInMinutes: int
              ipAddress: 'string'
              ipTags: [
                {
                  ipTagType: 'string'
                  tag: 'string'
                }
              ]
              linkedPublicIPAddress: ...
              migrationPhase: 'string'
              natGateway: {
                id: 'string'
                location: 'string'
                properties: {
                  idleTimeoutInMinutes: int
                  publicIpAddresses: [
                    {
                      id: 'string'
                    }
                  ]
                  publicIpPrefixes: [
                    {
                      id: 'string'
                    }
                  ]
                }
                sku: {
                  name: 'string'
                }
                tags: {
                  {customized property}: 'string'
                }
                zones: [
                  'string'
                ]
              }
              publicIPAddressVersion: 'string'
              publicIPAllocationMethod: 'string'
              publicIPPrefix: {
                id: 'string'
              }
              servicePublicIPAddress: ...
            }
            sku: {
              name: 'string'
              tier: 'string'
            }
            tags: {
              {customized property}: 'string'
            }
            zones: [
              'string'
            ]
          }
          publicIPPrefix: {
            id: 'string'
          }
          subnet: {
            id: 'string'
            name: 'string'
            properties: {
              addressPrefix: 'string'
              addressPrefixes: [
                'string'
              ]
              applicationGatewayIPConfigurations: [
                {
                  id: 'string'
                  name: 'string'
                  properties: {
                    subnet: {
                      id: 'string'
                    }
                  }
                }
              ]
              defaultOutboundAccess: bool
              delegations: [
                {
                  id: 'string'
                  name: 'string'
                  properties: {
                    serviceName: 'string'
                  }
                  type: 'string'
                }
              ]
              ipAllocations: [
                {
                  id: 'string'
                }
              ]
              ipamPoolPrefixAllocations: [
                {
                  numberOfIpAddresses: 'string'
                  pool: {
                    id: 'string'
                  }
                }
              ]
              natGateway: {
                id: 'string'
              }
              networkSecurityGroup: {
                id: 'string'
                location: 'string'
                properties: {
                  flushConnection: bool
                  securityRules: [
                    {
                      id: 'string'
                      name: 'string'
                      properties: {
                        access: 'string'
                        description: 'string'
                        destinationAddressPrefix: 'string'
                        destinationAddressPrefixes: [
                          'string'
                        ]
                        destinationApplicationSecurityGroups: [
                          {
                            id: 'string'
                            location: 'string'
                            properties: {}
                            tags: {
                              {customized property}: 'string'
                            }
                          }
                        ]
                        destinationPortRange: 'string'
                        destinationPortRanges: [
                          'string'
                        ]
                        direction: 'string'
                        priority: int
                        protocol: 'string'
                        sourceAddressPrefix: 'string'
                        sourceAddressPrefixes: [
                          'string'
                        ]
                        sourceApplicationSecurityGroups: [
                          {
                            id: 'string'
                            location: 'string'
                            properties: {}
                            tags: {
                              {customized property}: 'string'
                            }
                          }
                        ]
                        sourcePortRange: 'string'
                        sourcePortRanges: [
                          'string'
                        ]
                      }
                      type: 'string'
                    }
                  ]
                }
                tags: {
                  {customized property}: 'string'
                }
              }
              privateEndpointNetworkPolicies: 'string'
              privateLinkServiceNetworkPolicies: 'string'
              routeTable: {
                id: 'string'
                location: 'string'
                properties: {
                  disableBgpRoutePropagation: bool
                  routes: [
                    {
                      id: 'string'
                      name: 'string'
                      properties: {
                        addressPrefix: 'string'
                        nextHopIpAddress: 'string'
                        nextHopType: 'string'
                      }
                      type: 'string'
                    }
                  ]
                }
                tags: {
                  {customized property}: 'string'
                }
              }
              serviceEndpointPolicies: [
                {
                  id: 'string'
                  location: 'string'
                  properties: {
                    contextualServiceEndpointPolicies: [
                      'string'
                    ]
                    serviceAlias: 'string'
                    serviceEndpointPolicyDefinitions: [
                      {
                        id: 'string'
                        name: 'string'
                        properties: {
                          description: 'string'
                          service: 'string'
                          serviceResources: [
                            'string'
                          ]
                        }
                        type: 'string'
                      }
                    ]
                  }
                  tags: {
                    {customized property}: 'string'
                  }
                }
              ]
              serviceEndpoints: [
                {
                  locations: [
                    'string'
                  ]
                  networkIdentifier: {
                    id: 'string'
                  }
                  service: 'string'
                }
              ]
              sharingScope: 'string'
            }
            type: 'string'
          }
        }
        zones: [
          'string'
        ]
      }
    ]
    inboundNatPools: [
      {
        id: 'string'
        name: 'string'
        properties: {
          backendPort: int
          enableFloatingIP: bool
          enableTcpReset: bool
          frontendIPConfiguration: {
            id: 'string'
          }
          frontendPortRangeEnd: int
          frontendPortRangeStart: int
          idleTimeoutInMinutes: int
          protocol: 'string'
        }
      }
    ]
    inboundNatRules: [
      {
        id: 'string'
        name: 'string'
        properties: {
          backendAddressPool: {
            id: 'string'
          }
          backendPort: int
          enableFloatingIP: bool
          enableTcpReset: bool
          frontendIPConfiguration: {
            id: 'string'
          }
          frontendPort: int
          frontendPortRangeEnd: int
          frontendPortRangeStart: int
          idleTimeoutInMinutes: int
          protocol: 'string'
        }
      }
    ]
    loadBalancingRules: [
      {
        id: 'string'
        name: 'string'
        properties: {
          backendAddressPool: {
            id: 'string'
          }
          backendAddressPools: [
            {
              id: 'string'
            }
          ]
          backendPort: int
          disableOutboundSnat: bool
          enableFloatingIP: bool
          enableTcpReset: bool
          frontendIPConfiguration: {
            id: 'string'
          }
          frontendPort: int
          idleTimeoutInMinutes: int
          loadDistribution: 'string'
          probe: {
            id: 'string'
          }
          protocol: 'string'
        }
      }
    ]
    outboundRules: [
      {
        id: 'string'
        name: 'string'
        properties: {
          allocatedOutboundPorts: int
          backendAddressPool: {
            id: 'string'
          }
          enableTcpReset: bool
          frontendIPConfigurations: [
            {
              id: 'string'
            }
          ]
          idleTimeoutInMinutes: int
          protocol: 'string'
        }
      }
    ]
    probes: [
      {
        id: 'string'
        name: 'string'
        properties: {
          intervalInSeconds: int
          noHealthyBackendsBehavior: 'string'
          numberOfProbes: int
          port: int
          probeThreshold: int
          protocol: 'string'
          requestPath: 'string'
        }
      }
    ]
  }
  sku: {
    name: 'string'
    tier: 'string'
  }
  tags: {
    {customized property}: 'string'
  }
}
resource symbolicname 'Microsoft.Network/loadBalancers@2024-05-01' = {
  extendedLocation: {
    name: 'string'
    type: 'string'
  }
  location: 'string'
  name: 'string'
  properties: {
    backendAddressPools: [
      {
        id: 'string'
        name: 'string'
        properties: {
          drainPeriodInSeconds: int
          loadBalancerBackendAddresses: [
            {
              name: 'string'
              properties: {
                adminState: 'string'
                ipAddress: 'string'
                loadBalancerFrontendIPConfiguration: {
                  id: 'string'
                }
                subnet: {
                  id: 'string'
                }
                virtualNetwork: {
                  id: 'string'
                }
              }
            }
          ]
          location: 'string'
          syncMode: 'string'
          tunnelInterfaces: [
            {
              identifier: int
              port: int
              protocol: 'string'
              type: 'string'
            }
          ]
          virtualNetwork: {
            id: 'string'
          }
        }
      }
    ]
    frontendIPConfigurations: [
      {
        id: 'string'
        name: 'string'
        properties: {
          gatewayLoadBalancer: {
            id: 'string'
          }
          privateIPAddress: 'string'
          privateIPAddressVersion: 'string'
          privateIPAllocationMethod: 'string'
          publicIPAddress: {
            extendedLocation: {
              name: 'string'
              type: 'string'
            }
            id: 'string'
            location: 'string'
            properties: {
              ddosSettings: {
                ddosProtectionPlan: {
                  id: 'string'
                }
                protectionMode: 'string'
              }
              deleteOption: 'string'
              dnsSettings: {
                domainNameLabel: 'string'
                domainNameLabelScope: 'string'
                fqdn: 'string'
                reverseFqdn: 'string'
              }
              idleTimeoutInMinutes: int
              ipAddress: 'string'
              ipTags: [
                {
                  ipTagType: 'string'
                  tag: 'string'
                }
              ]
              linkedPublicIPAddress: ...
              migrationPhase: 'string'
              natGateway: {
                id: 'string'
                location: 'string'
                properties: {
                  idleTimeoutInMinutes: int
                  publicIpAddresses: [
                    {
                      id: 'string'
                    }
                  ]
                  publicIpPrefixes: [
                    {
                      id: 'string'
                    }
                  ]
                }
                sku: {
                  name: 'string'
                }
                tags: {
                  {customized property}: 'string'
                }
                zones: [
                  'string'
                ]
              }
              publicIPAddressVersion: 'string'
              publicIPAllocationMethod: 'string'
              publicIPPrefix: {
                id: 'string'
              }
              servicePublicIPAddress: ...
            }
            sku: {
              name: 'string'
              tier: 'string'
            }
            tags: {
              {customized property}: 'string'
            }
            zones: [
              'string'
            ]
          }
          publicIPPrefix: {
            id: 'string'
          }
          subnet: {
            id: 'string'
            name: 'string'
            properties: {
              addressPrefix: 'string'
              addressPrefixes: [
                'string'
              ]
              applicationGatewayIPConfigurations: [
                {
                  id: 'string'
                  name: 'string'
                  properties: {
                    subnet: {
                      id: 'string'
                    }
                  }
                }
              ]
              defaultOutboundAccess: bool
              delegations: [
                {
                  id: 'string'
                  name: 'string'
                  properties: {
                    serviceName: 'string'
                  }
                  type: 'string'
                }
              ]
              ipAllocations: [
                {
                  id: 'string'
                }
              ]
              ipamPoolPrefixAllocations: [
                {
                  numberOfIpAddresses: 'string'
                  pool: {
                    id: 'string'
                  }
                }
              ]
              natGateway: {
                id: 'string'
              }
              networkSecurityGroup: {
                id: 'string'
                location: 'string'
                properties: {
                  flushConnection: bool
                  securityRules: [
                    {
                      id: 'string'
                      name: 'string'
                      properties: {
                        access: 'string'
                        description: 'string'
                        destinationAddressPrefix: 'string'
                        destinationAddressPrefixes: [
                          'string'
                        ]
                        destinationApplicationSecurityGroups: [
                          {
                            id: 'string'
                            location: 'string'
                            properties: {}
                            tags: {
                              {customized property}: 'string'
                            }
                          }
                        ]
                        destinationPortRange: 'string'
                        destinationPortRanges: [
                          'string'
                        ]
                        direction: 'string'
                        priority: int
                        protocol: 'string'
                        sourceAddressPrefix: 'string'
                        sourceAddressPrefixes: [
                          'string'
                        ]
                        sourceApplicationSecurityGroups: [
                          {
                            id: 'string'
                            location: 'string'
                            properties: {}
                            tags: {
                              {customized property}: 'string'
                            }
                          }
                        ]
                        sourcePortRange: 'string'
                        sourcePortRanges: [
                          'string'
                        ]
                      }
                      type: 'string'
                    }
                  ]
                }
                tags: {
                  {customized property}: 'string'
                }
              }
              privateEndpointNetworkPolicies: 'string'
              privateLinkServiceNetworkPolicies: 'string'
              routeTable: {
                id: 'string'
                location: 'string'
                properties: {
                  disableBgpRoutePropagation: bool
                  routes: [
                    {
                      id: 'string'
                      name: 'string'
                      properties: {
                        addressPrefix: 'string'
                        nextHopIpAddress: 'string'
                        nextHopType: 'string'
                      }
                      type: 'string'
                    }
                  ]
                }
                tags: {
                  {customized property}: 'string'
                }
              }
              serviceEndpointPolicies: [
                {
                  id: 'string'
                  location: 'string'
                  properties: {
                    contextualServiceEndpointPolicies: [
                      'string'
                    ]
                    serviceAlias: 'string'
                    serviceEndpointPolicyDefinitions: [
                      {
                        id: 'string'
                        name: 'string'
                        properties: {
                          description: 'string'
                          service: 'string'
                          serviceResources: [
                            'string'
                          ]
                        }
                        type: 'string'
                      }
                    ]
                  }
                  tags: {
                    {customized property}: 'string'
                  }
                }
              ]
              serviceEndpoints: [
                {
                  locations: [
                    'string'
                  ]
                  networkIdentifier: {
                    id: 'string'
                  }
                  service: 'string'
                }
              ]
              sharingScope: 'string'
            }
            type: 'string'
          }
        }
        zones: [
          'string'
        ]
      }
    ]
    inboundNatPools: [
      {
        id: 'string'
        name: 'string'
        properties: {
          backendPort: int
          enableFloatingIP: bool
          enableTcpReset: bool
          frontendIPConfiguration: {
            id: 'string'
          }
          frontendPortRangeEnd: int
          frontendPortRangeStart: int
          idleTimeoutInMinutes: int
          protocol: 'string'
        }
      }
    ]
    inboundNatRules: [
      {
        id: 'string'
        name: 'string'
        properties: {
          backendAddressPool: {
            id: 'string'
          }
          backendPort: int
          enableFloatingIP: bool
          enableTcpReset: bool
          frontendIPConfiguration: {
            id: 'string'
          }
          frontendPort: int
          frontendPortRangeEnd: int
          frontendPortRangeStart: int
          idleTimeoutInMinutes: int
          protocol: 'string'
        }
      }
    ]
    loadBalancingRules: [
      {
        id: 'string'
        name: 'string'
        properties: {
          backendAddressPool: {
            id: 'string'
          }
          backendAddressPools: [
            {
              id: 'string'
            }
          ]
          backendPort: int
          disableOutboundSnat: bool
          enableFloatingIP: bool
          enableTcpReset: bool
          frontendIPConfiguration: {
            id: 'string'
          }
          frontendPort: int
          idleTimeoutInMinutes: int
          loadDistribution: 'string'
          probe: {
            id: 'string'
          }
          protocol: 'string'
        }
      }
    ]
    outboundRules: [
      {
        id: 'string'
        name: 'string'
        properties: {
          allocatedOutboundPorts: int
          backendAddressPool: {
            id: 'string'
          }
          enableTcpReset: bool
          frontendIPConfigurations: [
            {
              id: 'string'
            }
          ]
          idleTimeoutInMinutes: int
          protocol: 'string'
        }
      }
    ]
    probes: [
      {
        id: 'string'
        name: 'string'
        properties: {
          intervalInSeconds: int
          noHealthyBackendsBehavior: 'string'
          numberOfProbes: int
          port: int
          probeThreshold: int
          protocol: 'string'
          requestPath: 'string'
        }
      }
    ]
  }
  sku: {
    name: 'string'
    tier: 'string'
  }
  tags: {
    {customized property}: 'string'
  }
}
Property Values
ApplicationGatewayIPConfiguration
ApplicationGatewayIPConfigurationPropertiesFormat
ApplicationSecurityGroup
ApplicationSecurityGroupPropertiesFormat
BackendAddressPool
BackendAddressPoolPropertiesFormat
DdosSettings
Delegation
ExtendedLocation
FrontendIPConfiguration
FrontendIPConfigurationPropertiesFormat
GatewayLoadBalancerTunnelInterface
InboundNatPool
InboundNatPoolPropertiesFormat
InboundNatRule
InboundNatRulePropertiesFormat
IpamPoolPrefixAllocation
IpamPoolPrefixAllocationPool
IpTag
LoadBalancerBackendAddress
LoadBalancerBackendAddressPropertiesFormat
LoadBalancerPropertiesFormat
LoadBalancerSku
LoadBalancingRule
LoadBalancingRulePropertiesFormat
Microsoft.Network/loadBalancers
NatGateway
NatGatewayPropertiesFormat
NatGatewaySku
NetworkSecurityGroup
NetworkSecurityGroupPropertiesFormat
OutboundRule
OutboundRulePropertiesFormat
Probe
ProbePropertiesFormat
PublicIPAddress
PublicIPAddressDnsSettings
PublicIPAddressPropertiesFormat
PublicIPAddressSku
ResourceTags
ResourceTags
ResourceTags
ResourceTags
ResourceTags
ResourceTags
ResourceTags
Route
RoutePropertiesFormat
RouteTable
RouteTablePropertiesFormat
SecurityRule
SecurityRulePropertiesFormat
ServiceDelegationPropertiesFormat
ServiceEndpointPolicy
ServiceEndpointPolicyDefinition
ServiceEndpointPolicyDefinitionPropertiesFormat
ServiceEndpointPolicyPropertiesFormat
ServiceEndpointPropertiesFormat
Subnet
SubnetPropertiesFormat
SubResource
Usage Examples
Azure Verified Modules
The followingAzure Verified Modulescan be used to deploy this resource type.
Azure Quickstart Samples
The followingAzure Quickstart templatescontain Bicep samples for deploying this resource type.
ARM template resource definition
The loadBalancers resource type can be deployed with operations that target:
Resource groups- Seeresource group deployment commands
For a list of changed properties in each API version, seechange log.
Resource format
To create a Microsoft.Network/loadBalancers resource, add the following JSON to your template.
{
  "type": "Microsoft.Network/loadBalancers",
  "apiVersion": "2024-05-01",
  "name": "string",
  "extendedLocation": {
    "name": "string",
    "type": "string"
  },
  "location": "string",
  "properties": {
    "backendAddressPools": [
      {
        "id": "string",
        "name": "string",
        "properties": {
          "drainPeriodInSeconds": "int",
          "loadBalancerBackendAddresses": [
            {
              "name": "string",
              "properties": {
                "adminState": "string",
                "ipAddress": "string",
                "loadBalancerFrontendIPConfiguration": {
                  "id": "string"
                },
                "subnet": {
                  "id": "string"
                },
                "virtualNetwork": {
                  "id": "string"
                }
              }
            }
          ],
          "location": "string",
          "syncMode": "string",
          "tunnelInterfaces": [
            {
              "identifier": "int",
              "port": "int",
              "protocol": "string",
              "type": "string"
            }
          ],
          "virtualNetwork": {
            "id": "string"
          }
        }
      }
    ],
    "frontendIPConfigurations": [
      {
        "id": "string",
        "name": "string",
        "properties": {
          "gatewayLoadBalancer": {
            "id": "string"
          },
          "privateIPAddress": "string",
          "privateIPAddressVersion": "string",
          "privateIPAllocationMethod": "string",
          "publicIPAddress": {
            "extendedLocation": {
              "name": "string",
              "type": "string"
            },
            "id": "string",
            "location": "string",
            "properties": {
              "ddosSettings": {
                "ddosProtectionPlan": {
                  "id": "string"
                },
                "protectionMode": "string"
              },
              "deleteOption": "string",
              "dnsSettings": {
                "domainNameLabel": "string",
                "domainNameLabelScope": "string",
                "fqdn": "string",
                "reverseFqdn": "string"
              },
              "idleTimeoutInMinutes": "int",
              "ipAddress": "string",
              "ipTags": [
                {
                  "ipTagType": "string",
                  "tag": "string"
                }
              ],
              "linkedPublicIPAddress": ...,
              "migrationPhase": "string",
              "natGateway": {
                "id": "string",
                "location": "string",
                "properties": {
                  "idleTimeoutInMinutes": "int",
                  "publicIpAddresses": [
                    {
                      "id": "string"
                    }
                  ],
                  "publicIpPrefixes": [
                    {
                      "id": "string"
                    }
                  ]
                },
                "sku": {
                  "name": "string"
                },
                "tags": {
                  "{customized property}": "string"
                },
                "zones": [ "string" ]
              },
              "publicIPAddressVersion": "string",
              "publicIPAllocationMethod": "string",
              "publicIPPrefix": {
                "id": "string"
              },
              "servicePublicIPAddress": ...
            },
            "sku": {
              "name": "string",
              "tier": "string"
            },
            "tags": {
              "{customized property}": "string"
            },
            "zones": [ "string" ]
          },
          "publicIPPrefix": {
            "id": "string"
          },
          "subnet": {
            "id": "string",
            "name": "string",
            "properties": {
              "addressPrefix": "string",
              "addressPrefixes": [ "string" ],
              "applicationGatewayIPConfigurations": [
                {
                  "id": "string",
                  "name": "string",
                  "properties": {
                    "subnet": {
                      "id": "string"
                    }
                  }
                }
              ],
              "defaultOutboundAccess": "bool",
              "delegations": [
                {
                  "id": "string",
                  "name": "string",
                  "properties": {
                    "serviceName": "string"
                  },
                  "type": "string"
                }
              ],
              "ipAllocations": [
                {
                  "id": "string"
                }
              ],
              "ipamPoolPrefixAllocations": [
                {
                  "numberOfIpAddresses": "string",
                  "pool": {
                    "id": "string"
                  }
                }
              ],
              "natGateway": {
                "id": "string"
              },
              "networkSecurityGroup": {
                "id": "string",
                "location": "string",
                "properties": {
                  "flushConnection": "bool",
                  "securityRules": [
                    {
                      "id": "string",
                      "name": "string",
                      "properties": {
                        "access": "string",
                        "description": "string",
                        "destinationAddressPrefix": "string",
                        "destinationAddressPrefixes": [ "string" ],
                        "destinationApplicationSecurityGroups": [
                          {
                            "id": "string",
                            "location": "string",
                            "properties": {
                            },
                            "tags": {
                              "{customized property}": "string"
                            }
                          }
                        ],
                        "destinationPortRange": "string",
                        "destinationPortRanges": [ "string" ],
                        "direction": "string",
                        "priority": "int",
                        "protocol": "string",
                        "sourceAddressPrefix": "string",
                        "sourceAddressPrefixes": [ "string" ],
                        "sourceApplicationSecurityGroups": [
                          {
                            "id": "string",
                            "location": "string",
                            "properties": {
                            },
                            "tags": {
                              "{customized property}": "string"
                            }
                          }
                        ],
                        "sourcePortRange": "string",
                        "sourcePortRanges": [ "string" ]
                      },
                      "type": "string"
                    }
                  ]
                },
                "tags": {
                  "{customized property}": "string"
                }
              },
              "privateEndpointNetworkPolicies": "string",
              "privateLinkServiceNetworkPolicies": "string",
              "routeTable": {
                "id": "string",
                "location": "string",
                "properties": {
                  "disableBgpRoutePropagation": "bool",
                  "routes": [
                    {
                      "id": "string",
                      "name": "string",
                      "properties": {
                        "addressPrefix": "string",
                        "nextHopIpAddress": "string",
                        "nextHopType": "string"
                      },
                      "type": "string"
                    }
                  ]
                },
                "tags": {
                  "{customized property}": "string"
                }
              },
              "serviceEndpointPolicies": [
                {
                  "id": "string",
                  "location": "string",
                  "properties": {
                    "contextualServiceEndpointPolicies": [ "string" ],
                    "serviceAlias": "string",
                    "serviceEndpointPolicyDefinitions": [
                      {
                        "id": "string",
                        "name": "string",
                        "properties": {
                          "description": "string",
                          "service": "string",
                          "serviceResources": [ "string" ]
                        },
                        "type": "string"
                      }
                    ]
                  },
                  "tags": {
                    "{customized property}": "string"
                  }
                }
              ],
              "serviceEndpoints": [
                {
                  "locations": [ "string" ],
                  "networkIdentifier": {
                    "id": "string"
                  },
                  "service": "string"
                }
              ],
              "sharingScope": "string"
            },
            "type": "string"
          }
        },
        "zones": [ "string" ]
      }
    ],
    "inboundNatPools": [
      {
        "id": "string",
        "name": "string",
        "properties": {
          "backendPort": "int",
          "enableFloatingIP": "bool",
          "enableTcpReset": "bool",
          "frontendIPConfiguration": {
            "id": "string"
          },
          "frontendPortRangeEnd": "int",
          "frontendPortRangeStart": "int",
          "idleTimeoutInMinutes": "int",
          "protocol": "string"
        }
      }
    ],
    "inboundNatRules": [
      {
        "id": "string",
        "name": "string",
        "properties": {
          "backendAddressPool": {
            "id": "string"
          },
          "backendPort": "int",
          "enableFloatingIP": "bool",
          "enableTcpReset": "bool",
          "frontendIPConfiguration": {
            "id": "string"
          },
          "frontendPort": "int",
          "frontendPortRangeEnd": "int",
          "frontendPortRangeStart": "int",
          "idleTimeoutInMinutes": "int",
          "protocol": "string"
        }
      }
    ],
    "loadBalancingRules": [
      {
        "id": "string",
        "name": "string",
        "properties": {
          "backendAddressPool": {
            "id": "string"
          },
          "backendAddressPools": [
            {
              "id": "string"
            }
          ],
          "backendPort": "int",
          "disableOutboundSnat": "bool",
          "enableFloatingIP": "bool",
          "enableTcpReset": "bool",
          "frontendIPConfiguration": {
            "id": "string"
          },
          "frontendPort": "int",
          "idleTimeoutInMinutes": "int",
          "loadDistribution": "string",
          "probe": {
            "id": "string"
          },
          "protocol": "string"
        }
      }
    ],
    "outboundRules": [
      {
        "id": "string",
        "name": "string",
        "properties": {
          "allocatedOutboundPorts": "int",
          "backendAddressPool": {
            "id": "string"
          },
          "enableTcpReset": "bool",
          "frontendIPConfigurations": [
            {
              "id": "string"
            }
          ],
          "idleTimeoutInMinutes": "int",
          "protocol": "string"
        }
      }
    ],
    "probes": [
      {
        "id": "string",
        "name": "string",
        "properties": {
          "intervalInSeconds": "int",
          "noHealthyBackendsBehavior": "string",
          "numberOfProbes": "int",
          "port": "int",
          "probeThreshold": "int",
          "protocol": "string",
          "requestPath": "string"
        }
      }
    ]
  },
  "sku": {
    "name": "string",
    "tier": "string"
  },
  "tags": {
    "{customized property}": "string"
  }
}
{
  "type": "Microsoft.Network/loadBalancers",
  "apiVersion": "2024-05-01",
  "name": "string",
  "extendedLocation": {
    "name": "string",
    "type": "string"
  },
  "location": "string",
  "properties": {
    "backendAddressPools": [
      {
        "id": "string",
        "name": "string",
        "properties": {
          "drainPeriodInSeconds": "int",
          "loadBalancerBackendAddresses": [
            {
              "name": "string",
              "properties": {
                "adminState": "string",
                "ipAddress": "string",
                "loadBalancerFrontendIPConfiguration": {
                  "id": "string"
                },
                "subnet": {
                  "id": "string"
                },
                "virtualNetwork": {
                  "id": "string"
                }
              }
            }
          ],
          "location": "string",
          "syncMode": "string",
          "tunnelInterfaces": [
            {
              "identifier": "int",
              "port": "int",
              "protocol": "string",
              "type": "string"
            }
          ],
          "virtualNetwork": {
            "id": "string"
          }
        }
      }
    ],
    "frontendIPConfigurations": [
      {
        "id": "string",
        "name": "string",
        "properties": {
          "gatewayLoadBalancer": {
            "id": "string"
          },
          "privateIPAddress": "string",
          "privateIPAddressVersion": "string",
          "privateIPAllocationMethod": "string",
          "publicIPAddress": {
            "extendedLocation": {
              "name": "string",
              "type": "string"
            },
            "id": "string",
            "location": "string",
            "properties": {
              "ddosSettings": {
                "ddosProtectionPlan": {
                  "id": "string"
                },
                "protectionMode": "string"
              },
              "deleteOption": "string",
              "dnsSettings": {
                "domainNameLabel": "string",
                "domainNameLabelScope": "string",
                "fqdn": "string",
                "reverseFqdn": "string"
              },
              "idleTimeoutInMinutes": "int",
              "ipAddress": "string",
              "ipTags": [
                {
                  "ipTagType": "string",
                  "tag": "string"
                }
              ],
              "linkedPublicIPAddress": ...,
              "migrationPhase": "string",
              "natGateway": {
                "id": "string",
                "location": "string",
                "properties": {
                  "idleTimeoutInMinutes": "int",
                  "publicIpAddresses": [
                    {
                      "id": "string"
                    }
                  ],
                  "publicIpPrefixes": [
                    {
                      "id": "string"
                    }
                  ]
                },
                "sku": {
                  "name": "string"
                },
                "tags": {
                  "{customized property}": "string"
                },
                "zones": [ "string" ]
              },
              "publicIPAddressVersion": "string",
              "publicIPAllocationMethod": "string",
              "publicIPPrefix": {
                "id": "string"
              },
              "servicePublicIPAddress": ...
            },
            "sku": {
              "name": "string",
              "tier": "string"
            },
            "tags": {
              "{customized property}": "string"
            },
            "zones": [ "string" ]
          },
          "publicIPPrefix": {
            "id": "string"
          },
          "subnet": {
            "id": "string",
            "name": "string",
            "properties": {
              "addressPrefix": "string",
              "addressPrefixes": [ "string" ],
              "applicationGatewayIPConfigurations": [
                {
                  "id": "string",
                  "name": "string",
                  "properties": {
                    "subnet": {
                      "id": "string"
                    }
                  }
                }
              ],
              "defaultOutboundAccess": "bool",
              "delegations": [
                {
                  "id": "string",
                  "name": "string",
                  "properties": {
                    "serviceName": "string"
                  },
                  "type": "string"
                }
              ],
              "ipAllocations": [
                {
                  "id": "string"
                }
              ],
              "ipamPoolPrefixAllocations": [
                {
                  "numberOfIpAddresses": "string",
                  "pool": {
                    "id": "string"
                  }
                }
              ],
              "natGateway": {
                "id": "string"
              },
              "networkSecurityGroup": {
                "id": "string",
                "location": "string",
                "properties": {
                  "flushConnection": "bool",
                  "securityRules": [
                    {
                      "id": "string",
                      "name": "string",
                      "properties": {
                        "access": "string",
                        "description": "string",
                        "destinationAddressPrefix": "string",
                        "destinationAddressPrefixes": [ "string" ],
                        "destinationApplicationSecurityGroups": [
                          {
                            "id": "string",
                            "location": "string",
                            "properties": {
                            },
                            "tags": {
                              "{customized property}": "string"
                            }
                          }
                        ],
                        "destinationPortRange": "string",
                        "destinationPortRanges": [ "string" ],
                        "direction": "string",
                        "priority": "int",
                        "protocol": "string",
                        "sourceAddressPrefix": "string",
                        "sourceAddressPrefixes": [ "string" ],
                        "sourceApplicationSecurityGroups": [
                          {
                            "id": "string",
                            "location": "string",
                            "properties": {
                            },
                            "tags": {
                              "{customized property}": "string"
                            }
                          }
                        ],
                        "sourcePortRange": "string",
                        "sourcePortRanges": [ "string" ]
                      },
                      "type": "string"
                    }
                  ]
                },
                "tags": {
                  "{customized property}": "string"
                }
              },
              "privateEndpointNetworkPolicies": "string",
              "privateLinkServiceNetworkPolicies": "string",
              "routeTable": {
                "id": "string",
                "location": "string",
                "properties": {
                  "disableBgpRoutePropagation": "bool",
                  "routes": [
                    {
                      "id": "string",
                      "name": "string",
                      "properties": {
                        "addressPrefix": "string",
                        "nextHopIpAddress": "string",
                        "nextHopType": "string"
                      },
                      "type": "string"
                    }
                  ]
                },
                "tags": {
                  "{customized property}": "string"
                }
              },
              "serviceEndpointPolicies": [
                {
                  "id": "string",
                  "location": "string",
                  "properties": {
                    "contextualServiceEndpointPolicies": [ "string" ],
                    "serviceAlias": "string",
                    "serviceEndpointPolicyDefinitions": [
                      {
                        "id": "string",
                        "name": "string",
                        "properties": {
                          "description": "string",
                          "service": "string",
                          "serviceResources": [ "string" ]
                        },
                        "type": "string"
                      }
                    ]
                  },
                  "tags": {
                    "{customized property}": "string"
                  }
                }
              ],
              "serviceEndpoints": [
                {
                  "locations": [ "string" ],
                  "networkIdentifier": {
                    "id": "string"
                  },
                  "service": "string"
                }
              ],
              "sharingScope": "string"
            },
            "type": "string"
          }
        },
        "zones": [ "string" ]
      }
    ],
    "inboundNatPools": [
      {
        "id": "string",
        "name": "string",
        "properties": {
          "backendPort": "int",
          "enableFloatingIP": "bool",
          "enableTcpReset": "bool",
          "frontendIPConfiguration": {
            "id": "string"
          },
          "frontendPortRangeEnd": "int",
          "frontendPortRangeStart": "int",
          "idleTimeoutInMinutes": "int",
          "protocol": "string"
        }
      }
    ],
    "inboundNatRules": [
      {
        "id": "string",
        "name": "string",
        "properties": {
          "backendAddressPool": {
            "id": "string"
          },
          "backendPort": "int",
          "enableFloatingIP": "bool",
          "enableTcpReset": "bool",
          "frontendIPConfiguration": {
            "id": "string"
          },
          "frontendPort": "int",
          "frontendPortRangeEnd": "int",
          "frontendPortRangeStart": "int",
          "idleTimeoutInMinutes": "int",
          "protocol": "string"
        }
      }
    ],
    "loadBalancingRules": [
      {
        "id": "string",
        "name": "string",
        "properties": {
          "backendAddressPool": {
            "id": "string"
          },
          "backendAddressPools": [
            {
              "id": "string"
            }
          ],
          "backendPort": "int",
          "disableOutboundSnat": "bool",
          "enableFloatingIP": "bool",
          "enableTcpReset": "bool",
          "frontendIPConfiguration": {
            "id": "string"
          },
          "frontendPort": "int",
          "idleTimeoutInMinutes": "int",
          "loadDistribution": "string",
          "probe": {
            "id": "string"
          },
          "protocol": "string"
        }
      }
    ],
    "outboundRules": [
      {
        "id": "string",
        "name": "string",
        "properties": {
          "allocatedOutboundPorts": "int",
          "backendAddressPool": {
            "id": "string"
          },
          "enableTcpReset": "bool",
          "frontendIPConfigurations": [
            {
              "id": "string"
            }
          ],
          "idleTimeoutInMinutes": "int",
          "protocol": "string"
        }
      }
    ],
    "probes": [
      {
        "id": "string",
        "name": "string",
        "properties": {
          "intervalInSeconds": "int",
          "noHealthyBackendsBehavior": "string",
          "numberOfProbes": "int",
          "port": "int",
          "probeThreshold": "int",
          "protocol": "string",
          "requestPath": "string"
        }
      }
    ]
  },
  "sku": {
    "name": "string",
    "tier": "string"
  },
  "tags": {
    "{customized property}": "string"
  }
}
Property Values
ApplicationGatewayIPConfiguration
ApplicationGatewayIPConfigurationPropertiesFormat
ApplicationSecurityGroup
ApplicationSecurityGroupPropertiesFormat
BackendAddressPool
BackendAddressPoolPropertiesFormat
DdosSettings
Delegation
ExtendedLocation
FrontendIPConfiguration
FrontendIPConfigurationPropertiesFormat
GatewayLoadBalancerTunnelInterface
InboundNatPool
InboundNatPoolPropertiesFormat
InboundNatRule
InboundNatRulePropertiesFormat
IpamPoolPrefixAllocation
IpamPoolPrefixAllocationPool
IpTag
LoadBalancerBackendAddress
LoadBalancerBackendAddressPropertiesFormat
LoadBalancerPropertiesFormat
LoadBalancerSku
LoadBalancingRule
LoadBalancingRulePropertiesFormat
Microsoft.Network/loadBalancers
NatGateway
NatGatewayPropertiesFormat
NatGatewaySku
NetworkSecurityGroup
NetworkSecurityGroupPropertiesFormat
OutboundRule
OutboundRulePropertiesFormat
Probe
ProbePropertiesFormat
PublicIPAddress
PublicIPAddressDnsSettings
PublicIPAddressPropertiesFormat
PublicIPAddressSku
ResourceTags
ResourceTags
ResourceTags
ResourceTags
ResourceTags
ResourceTags
ResourceTags
Route
RoutePropertiesFormat
RouteTable
RouteTablePropertiesFormat
SecurityRule
SecurityRulePropertiesFormat
ServiceDelegationPropertiesFormat
ServiceEndpointPolicy
ServiceEndpointPolicyDefinition
ServiceEndpointPolicyDefinitionPropertiesFormat
ServiceEndpointPolicyPropertiesFormat
ServiceEndpointPropertiesFormat
Subnet
SubnetPropertiesFormat
SubResource
Usage Examples
Azure Quickstart Templates
The followingAzure Quickstart templatesdeploy this resource type.
Terraform (AzAPI provider) resource definition
The loadBalancers resource type can be deployed with operations that target:
Resource groups
For a list of changed properties in each API version, seechange log.
Resource format
To create a Microsoft.Network/loadBalancers resource, add the following Terraform to your template.
resource "azapi_resource" "symbolicname" {
  type = "Microsoft.Network/loadBalancers@2024-05-01"
  name = "string"
  location = "string"
  tags = {
    {customized property} = "string"
  }
  body = {
    extendedLocation = {
      name = "string"
      type = "string"
    }
    properties = {
      backendAddressPools = [
        {
          id = "string"
          name = "string"
          properties = {
            drainPeriodInSeconds = int
            loadBalancerBackendAddresses = [
              {
                name = "string"
                properties = {
                  adminState = "string"
                  ipAddress = "string"
                  loadBalancerFrontendIPConfiguration = {
                    id = "string"
                  }
                  subnet = {
                    id = "string"
                  }
                  virtualNetwork = {
                    id = "string"
                  }
                }
              }
            ]
            location = "string"
            syncMode = "string"
            tunnelInterfaces = [
              {
                identifier = int
                port = int
                protocol = "string"
                type = "string"
              }
            ]
            virtualNetwork = {
              id = "string"
            }
          }
        }
      ]
      frontendIPConfigurations = [
        {
          id = "string"
          name = "string"
          properties = {
            gatewayLoadBalancer = {
              id = "string"
            }
            privateIPAddress = "string"
            privateIPAddressVersion = "string"
            privateIPAllocationMethod = "string"
            publicIPAddress = {
              extendedLocation = {
                name = "string"
                type = "string"
              }
              id = "string"
              location = "string"
              properties = {
                ddosSettings = {
                  ddosProtectionPlan = {
                    id = "string"
                  }
                  protectionMode = "string"
                }
                deleteOption = "string"
                dnsSettings = {
                  domainNameLabel = "string"
                  domainNameLabelScope = "string"
                  fqdn = "string"
                  reverseFqdn = "string"
                }
                idleTimeoutInMinutes = int
                ipAddress = "string"
                ipTags = [
                  {
                    ipTagType = "string"
                    tag = "string"
                  }
                ]
                linkedPublicIPAddress = ...
                migrationPhase = "string"
                natGateway = {
                  id = "string"
                  location = "string"
                  properties = {
                    idleTimeoutInMinutes = int
                    publicIpAddresses = [
                      {
                        id = "string"
                      }
                    ]
                    publicIpPrefixes = [
                      {
                        id = "string"
                      }
                    ]
                  }
                  sku = {
                    name = "string"
                  }
                  tags = {
                    {customized property} = "string"
                  }
                  zones = [
                    "string"
                  ]
                }
                publicIPAddressVersion = "string"
                publicIPAllocationMethod = "string"
                publicIPPrefix = {
                  id = "string"
                }
                servicePublicIPAddress = ...
              }
              sku = {
                name = "string"
                tier = "string"
              }
              tags = {
                {customized property} = "string"
              }
              zones = [
                "string"
              ]
            }
            publicIPPrefix = {
              id = "string"
            }
            subnet = {
              id = "string"
              name = "string"
              properties = {
                addressPrefix = "string"
                addressPrefixes = [
                  "string"
                ]
                applicationGatewayIPConfigurations = [
                  {
                    id = "string"
                    name = "string"
                    properties = {
                      subnet = {
                        id = "string"
                      }
                    }
                  }
                ]
                defaultOutboundAccess = bool
                delegations = [
                  {
                    id = "string"
                    name = "string"
                    properties = {
                      serviceName = "string"
                    }
                    type = "string"
                  }
                ]
                ipAllocations = [
                  {
                    id = "string"
                  }
                ]
                ipamPoolPrefixAllocations = [
                  {
                    numberOfIpAddresses = "string"
                    pool = {
                      id = "string"
                    }
                  }
                ]
                natGateway = {
                  id = "string"
                }
                networkSecurityGroup = {
                  id = "string"
                  location = "string"
                  properties = {
                    flushConnection = bool
                    securityRules = [
                      {
                        id = "string"
                        name = "string"
                        properties = {
                          access = "string"
                          description = "string"
                          destinationAddressPrefix = "string"
                          destinationAddressPrefixes = [
                            "string"
                          ]
                          destinationApplicationSecurityGroups = [
                            {
                              id = "string"
                              location = "string"
                              properties = {
                              }
                              tags = {
                                {customized property} = "string"
                              }
                            }
                          ]
                          destinationPortRange = "string"
                          destinationPortRanges = [
                            "string"
                          ]
                          direction = "string"
                          priority = int
                          protocol = "string"
                          sourceAddressPrefix = "string"
                          sourceAddressPrefixes = [
                            "string"
                          ]
                          sourceApplicationSecurityGroups = [
                            {
                              id = "string"
                              location = "string"
                              properties = {
                              }
                              tags = {
                                {customized property} = "string"
                              }
                            }
                          ]
                          sourcePortRange = "string"
                          sourcePortRanges = [
                            "string"
                          ]
                        }
                        type = "string"
                      }
                    ]
                  }
                  tags = {
                    {customized property} = "string"
                  }
                }
                privateEndpointNetworkPolicies = "string"
                privateLinkServiceNetworkPolicies = "string"
                routeTable = {
                  id = "string"
                  location = "string"
                  properties = {
                    disableBgpRoutePropagation = bool
                    routes = [
                      {
                        id = "string"
                        name = "string"
                        properties = {
                          addressPrefix = "string"
                          nextHopIpAddress = "string"
                          nextHopType = "string"
                        }
                        type = "string"
                      }
                    ]
                  }
                  tags = {
                    {customized property} = "string"
                  }
                }
                serviceEndpointPolicies = [
                  {
                    id = "string"
                    location = "string"
                    properties = {
                      contextualServiceEndpointPolicies = [
                        "string"
                      ]
                      serviceAlias = "string"
                      serviceEndpointPolicyDefinitions = [
                        {
                          id = "string"
                          name = "string"
                          properties = {
                            description = "string"
                            service = "string"
                            serviceResources = [
                              "string"
                            ]
                          }
                          type = "string"
                        }
                      ]
                    }
                    tags = {
                      {customized property} = "string"
                    }
                  }
                ]
                serviceEndpoints = [
                  {
                    locations = [
                      "string"
                    ]
                    networkIdentifier = {
                      id = "string"
                    }
                    service = "string"
                  }
                ]
                sharingScope = "string"
              }
              type = "string"
            }
          }
          zones = [
            "string"
          ]
        }
      ]
      inboundNatPools = [
        {
          id = "string"
          name = "string"
          properties = {
            backendPort = int
            enableFloatingIP = bool
            enableTcpReset = bool
            frontendIPConfiguration = {
              id = "string"
            }
            frontendPortRangeEnd = int
            frontendPortRangeStart = int
            idleTimeoutInMinutes = int
            protocol = "string"
          }
        }
      ]
      inboundNatRules = [
        {
          id = "string"
          name = "string"
          properties = {
            backendAddressPool = {
              id = "string"
            }
            backendPort = int
            enableFloatingIP = bool
            enableTcpReset = bool
            frontendIPConfiguration = {
              id = "string"
            }
            frontendPort = int
            frontendPortRangeEnd = int
            frontendPortRangeStart = int
            idleTimeoutInMinutes = int
            protocol = "string"
          }
        }
      ]
      loadBalancingRules = [
        {
          id = "string"
          name = "string"
          properties = {
            backendAddressPool = {
              id = "string"
            }
            backendAddressPools = [
              {
                id = "string"
              }
            ]
            backendPort = int
            disableOutboundSnat = bool
            enableFloatingIP = bool
            enableTcpReset = bool
            frontendIPConfiguration = {
              id = "string"
            }
            frontendPort = int
            idleTimeoutInMinutes = int
            loadDistribution = "string"
            probe = {
              id = "string"
            }
            protocol = "string"
          }
        }
      ]
      outboundRules = [
        {
          id = "string"
          name = "string"
          properties = {
            allocatedOutboundPorts = int
            backendAddressPool = {
              id = "string"
            }
            enableTcpReset = bool
            frontendIPConfigurations = [
              {
                id = "string"
              }
            ]
            idleTimeoutInMinutes = int
            protocol = "string"
          }
        }
      ]
      probes = [
        {
          id = "string"
          name = "string"
          properties = {
            intervalInSeconds = int
            noHealthyBackendsBehavior = "string"
            numberOfProbes = int
            port = int
            probeThreshold = int
            protocol = "string"
            requestPath = "string"
          }
        }
      ]
    }
    sku = {
      name = "string"
      tier = "string"
    }
  }
}
resource "azapi_resource" "symbolicname" {
  type = "Microsoft.Network/loadBalancers@2024-05-01"
  name = "string"
  location = "string"
  tags = {
    {customized property} = "string"
  }
  body = {
    extendedLocation = {
      name = "string"
      type = "string"
    }
    properties = {
      backendAddressPools = [
        {
          id = "string"
          name = "string"
          properties = {
            drainPeriodInSeconds = int
            loadBalancerBackendAddresses = [
              {
                name = "string"
                properties = {
                  adminState = "string"
                  ipAddress = "string"
                  loadBalancerFrontendIPConfiguration = {
                    id = "string"
                  }
                  subnet = {
                    id = "string"
                  }
                  virtualNetwork = {
                    id = "string"
                  }
                }
              }
            ]
            location = "string"
            syncMode = "string"
            tunnelInterfaces = [
              {
                identifier = int
                port = int
                protocol = "string"
                type = "string"
              }
            ]
            virtualNetwork = {
              id = "string"
            }
          }
        }
      ]
      frontendIPConfigurations = [
        {
          id = "string"
          name = "string"
          properties = {
            gatewayLoadBalancer = {
              id = "string"
            }
            privateIPAddress = "string"
            privateIPAddressVersion = "string"
            privateIPAllocationMethod = "string"
            publicIPAddress = {
              extendedLocation = {
                name = "string"
                type = "string"
              }
              id = "string"
              location = "string"
              properties = {
                ddosSettings = {
                  ddosProtectionPlan = {
                    id = "string"
                  }
                  protectionMode = "string"
                }
                deleteOption = "string"
                dnsSettings = {
                  domainNameLabel = "string"
                  domainNameLabelScope = "string"
                  fqdn = "string"
                  reverseFqdn = "string"
                }
                idleTimeoutInMinutes = int
                ipAddress = "string"
                ipTags = [
                  {
                    ipTagType = "string"
                    tag = "string"
                  }
                ]
                linkedPublicIPAddress = ...
                migrationPhase = "string"
                natGateway = {
                  id = "string"
                  location = "string"
                  properties = {
                    idleTimeoutInMinutes = int
                    publicIpAddresses = [
                      {
                        id = "string"
                      }
                    ]
                    publicIpPrefixes = [
                      {
                        id = "string"
                      }
                    ]
                  }
                  sku = {
                    name = "string"
                  }
                  tags = {
                    {customized property} = "string"
                  }
                  zones = [
                    "string"
                  ]
                }
                publicIPAddressVersion = "string"
                publicIPAllocationMethod = "string"
                publicIPPrefix = {
                  id = "string"
                }
                servicePublicIPAddress = ...
              }
              sku = {
                name = "string"
                tier = "string"
              }
              tags = {
                {customized property} = "string"
              }
              zones = [
                "string"
              ]
            }
            publicIPPrefix = {
              id = "string"
            }
            subnet = {
              id = "string"
              name = "string"
              properties = {
                addressPrefix = "string"
                addressPrefixes = [
                  "string"
                ]
                applicationGatewayIPConfigurations = [
                  {
                    id = "string"
                    name = "string"
                    properties = {
                      subnet = {
                        id = "string"
                      }
                    }
                  }
                ]
                defaultOutboundAccess = bool
                delegations = [
                  {
                    id = "string"
                    name = "string"
                    properties = {
                      serviceName = "string"
                    }
                    type = "string"
                  }
                ]
                ipAllocations = [
                  {
                    id = "string"
                  }
                ]
                ipamPoolPrefixAllocations = [
                  {
                    numberOfIpAddresses = "string"
                    pool = {
                      id = "string"
                    }
                  }
                ]
                natGateway = {
                  id = "string"
                }
                networkSecurityGroup = {
                  id = "string"
                  location = "string"
                  properties = {
                    flushConnection = bool
                    securityRules = [
                      {
                        id = "string"
                        name = "string"
                        properties = {
                          access = "string"
                          description = "string"
                          destinationAddressPrefix = "string"
                          destinationAddressPrefixes = [
                            "string"
                          ]
                          destinationApplicationSecurityGroups = [
                            {
                              id = "string"
                              location = "string"
                              properties = {
                              }
                              tags = {
                                {customized property} = "string"
                              }
                            }
                          ]
                          destinationPortRange = "string"
                          destinationPortRanges = [
                            "string"
                          ]
                          direction = "string"
                          priority = int
                          protocol = "string"
                          sourceAddressPrefix = "string"
                          sourceAddressPrefixes = [
                            "string"
                          ]
                          sourceApplicationSecurityGroups = [
                            {
                              id = "string"
                              location = "string"
                              properties = {
                              }
                              tags = {
                                {customized property} = "string"
                              }
                            }
                          ]
                          sourcePortRange = "string"
                          sourcePortRanges = [
                            "string"
                          ]
                        }
                        type = "string"
                      }
                    ]
                  }
                  tags = {
                    {customized property} = "string"
                  }
                }
                privateEndpointNetworkPolicies = "string"
                privateLinkServiceNetworkPolicies = "string"
                routeTable = {
                  id = "string"
                  location = "string"
                  properties = {
                    disableBgpRoutePropagation = bool
                    routes = [
                      {
                        id = "string"
                        name = "string"
                        properties = {
                          addressPrefix = "string"
                          nextHopIpAddress = "string"
                          nextHopType = "string"
                        }
                        type = "string"
                      }
                    ]
                  }
                  tags = {
                    {customized property} = "string"
                  }
                }
                serviceEndpointPolicies = [
                  {
                    id = "string"
                    location = "string"
                    properties = {
                      contextualServiceEndpointPolicies = [
                        "string"
                      ]
                      serviceAlias = "string"
                      serviceEndpointPolicyDefinitions = [
                        {
                          id = "string"
                          name = "string"
                          properties = {
                            description = "string"
                            service = "string"
                            serviceResources = [
                              "string"
                            ]
                          }
                          type = "string"
                        }
                      ]
                    }
                    tags = {
                      {customized property} = "string"
                    }
                  }
                ]
                serviceEndpoints = [
                  {
                    locations = [
                      "string"
                    ]
                    networkIdentifier = {
                      id = "string"
                    }
                    service = "string"
                  }
                ]
                sharingScope = "string"
              }
              type = "string"
            }
          }
          zones = [
            "string"
          ]
        }
      ]
      inboundNatPools = [
        {
          id = "string"
          name = "string"
          properties = {
            backendPort = int
            enableFloatingIP = bool
            enableTcpReset = bool
            frontendIPConfiguration = {
              id = "string"
            }
            frontendPortRangeEnd = int
            frontendPortRangeStart = int
            idleTimeoutInMinutes = int
            protocol = "string"
          }
        }
      ]
      inboundNatRules = [
        {
          id = "string"
          name = "string"
          properties = {
            backendAddressPool = {
              id = "string"
            }
            backendPort = int
            enableFloatingIP = bool
            enableTcpReset = bool
            frontendIPConfiguration = {
              id = "string"
            }
            frontendPort = int
            frontendPortRangeEnd = int
            frontendPortRangeStart = int
            idleTimeoutInMinutes = int
            protocol = "string"
          }
        }
      ]
      loadBalancingRules = [
        {
          id = "string"
          name = "string"
          properties = {
            backendAddressPool = {
              id = "string"
            }
            backendAddressPools = [
              {
                id = "string"
              }
            ]
            backendPort = int
            disableOutboundSnat = bool
            enableFloatingIP = bool
            enableTcpReset = bool
            frontendIPConfiguration = {
              id = "string"
            }
            frontendPort = int
            idleTimeoutInMinutes = int
            loadDistribution = "string"
            probe = {
              id = "string"
            }
            protocol = "string"
          }
        }
      ]
      outboundRules = [
        {
          id = "string"
          name = "string"
          properties = {
            allocatedOutboundPorts = int
            backendAddressPool = {
              id = "string"
            }
            enableTcpReset = bool
            frontendIPConfigurations = [
              {
                id = "string"
              }
            ]
            idleTimeoutInMinutes = int
            protocol = "string"
          }
        }
      ]
      probes = [
        {
          id = "string"
          name = "string"
          properties = {
            intervalInSeconds = int
            noHealthyBackendsBehavior = "string"
            numberOfProbes = int
            port = int
            probeThreshold = int
            protocol = "string"
            requestPath = "string"
          }
        }
      ]
    }
    sku = {
      name = "string"
      tier = "string"
    }
  }
}
Property Values
ApplicationGatewayIPConfiguration
ApplicationGatewayIPConfigurationPropertiesFormat
ApplicationSecurityGroup
ApplicationSecurityGroupPropertiesFormat
BackendAddressPool
BackendAddressPoolPropertiesFormat
DdosSettings
Delegation
ExtendedLocation
FrontendIPConfiguration
FrontendIPConfigurationPropertiesFormat
GatewayLoadBalancerTunnelInterface
InboundNatPool
InboundNatPoolPropertiesFormat
InboundNatRule
InboundNatRulePropertiesFormat
IpamPoolPrefixAllocation
IpamPoolPrefixAllocationPool
IpTag
LoadBalancerBackendAddress
LoadBalancerBackendAddressPropertiesFormat
LoadBalancerPropertiesFormat
LoadBalancerSku
LoadBalancingRule
LoadBalancingRulePropertiesFormat
Microsoft.Network/loadBalancers
NatGateway
NatGatewayPropertiesFormat
NatGatewaySku
NetworkSecurityGroup
NetworkSecurityGroupPropertiesFormat
OutboundRule
OutboundRulePropertiesFormat
Probe
ProbePropertiesFormat
PublicIPAddress
PublicIPAddressDnsSettings
PublicIPAddressPropertiesFormat
PublicIPAddressSku
ResourceTags
ResourceTags
ResourceTags
ResourceTags
ResourceTags
ResourceTags
ResourceTags
Route
RoutePropertiesFormat
RouteTable
RouteTablePropertiesFormat
SecurityRule
SecurityRulePropertiesFormat
ServiceDelegationPropertiesFormat
ServiceEndpointPolicy
ServiceEndpointPolicyDefinition
ServiceEndpointPolicyDefinitionPropertiesFormat
ServiceEndpointPolicyPropertiesFormat
ServiceEndpointPropertiesFormat
Subnet
SubnetPropertiesFormat
SubResource
Usage Examples
Azure Verified Modules
The followingAzure Verified Modulescan be used to deploy this resource type.
Feedback
Was this page helpful?
Additional resources