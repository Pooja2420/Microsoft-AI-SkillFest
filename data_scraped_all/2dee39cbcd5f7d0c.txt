Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Visualize queries and create a legacy dashboard
Article
2024-12-18
3 contributors
In this article
This tutorial uses the New York City taxi dataset in Samples. It shows you how to use SQL editor in Databricks SQL to create a visualization for each of several queries and then create a dashboard using these visualizations. It also shows you how to create a dashboard parameter for each of the visualizations in the dashboard.
Important
Databricks recommends using AI/BI dashboards (formerly Lakeview dashboards). Earlier versions of dashboards, previously referred to as Databricks SQL dashboards are now calledlegacy dashboards.
End of support timeline:
As of April 7, 2025: Official support for the legacy version of dashboards has ended. You can no longer create new legacy dashboards. Only critical security issues and service outages will be addressed.
As of April 7, 2025: Official support for the legacy version of dashboards has ended. You can no longer create new legacy dashboards. Only critical security issues and service outages will be addressed.
November 3, 2025: Databricks will begin archiving legacy dashboards that have not been accessed in the past six months. Archived dashboards will no longer be accessible, and the archival process will occur on a rolling basis. Access to actively used dashboards will remain unchanged.Databricks will work with customers to develop migration plans for active legacy dashboards after November 3, 2025.
November 3, 2025: Databricks will begin archiving legacy dashboards that have not been accessed in the past six months. Archived dashboards will no longer be accessible, and the archival process will occur on a rolling basis. Access to actively used dashboards will remain unchanged.
Databricks will work with customers to develop migration plans for active legacy dashboards after November 3, 2025.
Convert legacy dashboards using the migration tool or REST API. SeeClone a legacy dashboard to an AI/BI dashboardfor instructions on using the built-in migration tool. SeeDashboard tutorialsfor tutorials on creating and managing dashboards using the REST API.
Convert legacy dashboards using the migration tool or REST API. SeeClone a legacy dashboard to an AI/BI dashboardfor instructions on using the built-in migration tool. SeeDashboard tutorialsfor tutorials on creating and managing dashboards using the REST API.
Connect to Databricks SQL with SQL editor
ClickNewin the sidebar and selectQuery.The SQL editor opens.
ClickNewin the sidebar and selectQuery.
The SQL editor opens.
Select a warehouse.The first time you create a query the list of available SQL warehouses displays in alphabetical order. The next time you create a query, the last used warehouse is selected.
Select a warehouse.
The first time you create a query the list of available SQL warehouses displays in alphabetical order. The next time you create a query, the last used warehouse is selected.
ClickServerless Starter Warehouse. This warehouse is created for you automatically to help you get started quickly. If serverless is not enabled for your workspace, chooseStarter Warehouse. For information on creating SQL warehouses, seeCreate a SQL warehouse.
Query for pickup hour distribution
In SQL editor, paste the following query in the new query window to return the distribution of taxi pickups by hour.SELECT
date_format(tpep_pickup_datetime, "HH") AS `Pickup Hour`,
count(*) AS `Number of Rides`
FROM
samples.nyctaxi.trips
GROUP BY 1
In SQL editor, paste the following query in the new query window to return the distribution of taxi pickups by hour.
SELECT
date_format(tpep_pickup_datetime, "HH") AS `Pickup Hour`,
count(*) AS `Number of Rides`
FROM
samples.nyctaxi.trips
GROUP BY 1
SELECT
date_format(tpep_pickup_datetime, "HH") AS `Pickup Hour`,
count(*) AS `Number of Rides`
FROM
samples.nyctaxi.trips
GROUP BY 1
PressCtrl/Cmd + Enteror clickRun (1000). After a few seconds, the query results are shown below the query in the results pane.Limit 1000is selected by default for all queries to ensure that the query returns at most 1000 rows. If a query is saved with theLimit 1000setting, this setting applies to all executions of the query (including within dashboards). If you want to return all rows for this query, you can unselectLIMIT 1000by clicking theRun (1000)drop-down. If you want to specify a different limit on the number of rows, you can add aLIMITclause in your query with a value of your choice.The query result displays in the Results tab.
PressCtrl/Cmd + Enteror clickRun (1000). After a few seconds, the query results are shown below the query in the results pane.
Limit 1000is selected by default for all queries to ensure that the query returns at most 1000 rows. If a query is saved with theLimit 1000setting, this setting applies to all executions of the query (including within dashboards). If you want to return all rows for this query, you can unselectLIMIT 1000by clicking theRun (1000)drop-down. If you want to specify a different limit on the number of rows, you can add aLIMITclause in your query with a value of your choice.
LIMIT
The query result displays in the Results tab.
ClickSaveand save the query asPickup hour.
ClickSaveand save the query asPickup hour.
Pickup hour

Create a visualization for the distribution of taxi pickups by hour.
Next to the Results tab, click+and then clickVisualization.The visualization editor displays.
Next to the Results tab, click+and then clickVisualization.
The visualization editor displays.
In theVisualization Typedrop-down, verify thatBaris selected.
In theVisualization Typedrop-down, verify thatBaris selected.
Change the visualization name toBar chart.
Change the visualization name toBar chart.
Bar chart
Verify thatPickup Houris specified for theY columndrop down.
Verify thatPickup Houris specified for theY columndrop down.
Pickup Hour
Verify thatNumber of RidesandSumare specified for theX columndrop down.
Verify thatNumber of RidesandSumare specified for theX columndrop down.
Number of Rides
Sum

ClickSave.The saved chart displays in the SQL editor.
ClickSave.
The saved chart displays in the SQL editor.
Query for daily fare trends
In SQL editor, click+and then clickCreate new query.
In SQL editor, click+and then clickCreate new query.
In the new query window, paste the following query to return the daily fare trends.SELECT
  T.weekday,
  CASE
    WHEN T.weekday = 1 THEN 'Sunday'
    WHEN T.weekday = 2 THEN 'Monday'
    WHEN T.weekday = 3 THEN 'Tuesday'
    WHEN T.weekday = 4 THEN 'Wednesday'
    WHEN T.weekday = 5 THEN 'Thursday'
    WHEN T.weekday = 6 THEN 'Friday'
    WHEN T.weekday = 7 THEN 'Saturday'
    ELSE 'N/A'
  END AS day_of_week,
  T.fare_amount,
  T.trip_distance
FROM
  (
    SELECT
      dayofweek(tpep_pickup_datetime) as weekday,
      *
    FROM
      `samples`.`nyctaxi`.`trips`
  ) T
In the new query window, paste the following query to return the daily fare trends.
SELECT
  T.weekday,
  CASE
    WHEN T.weekday = 1 THEN 'Sunday'
    WHEN T.weekday = 2 THEN 'Monday'
    WHEN T.weekday = 3 THEN 'Tuesday'
    WHEN T.weekday = 4 THEN 'Wednesday'
    WHEN T.weekday = 5 THEN 'Thursday'
    WHEN T.weekday = 6 THEN 'Friday'
    WHEN T.weekday = 7 THEN 'Saturday'
    ELSE 'N/A'
  END AS day_of_week,
  T.fare_amount,
  T.trip_distance
FROM
  (
    SELECT
      dayofweek(tpep_pickup_datetime) as weekday,
      *
    FROM
      `samples`.`nyctaxi`.`trips`
  ) T
SELECT
  T.weekday,
  CASE
    WHEN T.weekday = 1 THEN 'Sunday'
    WHEN T.weekday = 2 THEN 'Monday'
    WHEN T.weekday = 3 THEN 'Tuesday'
    WHEN T.weekday = 4 THEN 'Wednesday'
    WHEN T.weekday = 5 THEN 'Thursday'
    WHEN T.weekday = 6 THEN 'Friday'
    WHEN T.weekday = 7 THEN 'Saturday'
    ELSE 'N/A'
  END AS day_of_week,
  T.fare_amount,
  T.trip_distance
FROM
  (
    SELECT
      dayofweek(tpep_pickup_datetime) as weekday,
      *
    FROM
      `samples`.`nyctaxi`.`trips`
  ) T
ClickSaveand save the query asDaily fare to distance analysis.
ClickSaveand save the query asDaily fare to distance analysis.
Daily fare to distance analysis
Create a visualization for daily fare trends
Next to theResultstab, click+and then clickVisualization.The visualization editor displays.
Next to theResultstab, click+and then clickVisualization.
The visualization editor displays.
In theVisualization Typedrop-down, selectScatter.
In theVisualization Typedrop-down, selectScatter.
Change the visualization name toFare by distance.
Change the visualization name toFare by distance.
Fare by distance
On theGeneraltab, set the value for theX columntotrip_distanceand set the value for theY columnstofare_amount.
On theGeneraltab, set the value for theX columntotrip_distanceand set the value for theY columnstofare_amount.
trip_distance
fare_amount
In theGroup bydrop-down, set the value today_of_week.
In theGroup bydrop-down, set the value today_of_week.
day_of_week
On theX axistab, set theNamevalue toTrip distance (miles).
On theX axistab, set theNamevalue toTrip distance (miles).
Trip distance (miles)
On theY axistab, set theNamevalue toFare Amount (USD).
On theY axistab, set theNamevalue toFare Amount (USD).
Fare Amount (USD)
ClickSaveThe saved chart displays in the SQL editor.
ClickSave
The saved chart displays in the SQL editor.

Create a dashboard using these visualizations
ClickNewin the sidebar and selectLegacy dashboard.
Set the dashboard name toNYC taxi trip analysis.
NYC taxi trip analysis
ClickSave.
In theChoose warehousedrop-down list, selectServerless Starter Warehouse. If serverless is not enabled for your workspace, chooseStarter Warehouse.
In theAdddrop-down list, clickVisualization.
In theAdddrop-down list, clickVisualization.
In theAdd visualization widgetwindow, select theDaily fare to distance analysisquery.
In theAdd visualization widgetwindow, select theDaily fare to distance analysisquery.
In theSelect existing visualizationlist, selectFare by distance.
In theSelect existing visualizationlist, selectFare by distance.
In theTitletext box, enterDaily fare trends.
In theTitletext box, enterDaily fare trends.
Daily fare trends

ClickAdd to legacy dashboard.The Daily fare trends visualization appears on the dashbard design surface.
ClickAdd to legacy dashboard.
The Daily fare trends visualization appears on the dashbard design surface.
In theAdddrop-down list to add a second widget to the dashboard, and then clickVisualization.
In theAdddrop-down list to add a second widget to the dashboard, and then clickVisualization.
In theAdd visualization widgetwindow, select thePickup hourquery.
In theAdd visualization widgetwindow, select thePickup hourquery.
In theSelect existing visualizationlist, selectBar chart.
In theSelect existing visualizationlist, selectBar chart.
In theTitletext box, enterPickup hour distribution.
In theTitletext box, enterPickup hour distribution.
Pickup hour distribution
ClickAdd to legacy dashboard.
ClickAdd to legacy dashboard.
Resize this visualization to match the width of the first visualization in the dashboard.
Resize this visualization to match the width of the first visualization in the dashboard.
ClickDone Editing.
ClickDone Editing.

Add a pickup zip code parameter to each query
In SQL editor, open theDaily fare to distance analysisquery.
In SQL editor, open theDaily fare to distance analysisquery.
Add the followingWHEREclause to theDaily fare to distance analysisquery to filter the query by pickup zip code.WHERE
  pickup_zip IN ({{ pickupzip }})
Add the followingWHEREclause to theDaily fare to distance analysisquery to filter the query by pickup zip code.
WHERE
WHERE
  pickup_zip IN ({{ pickupzip }})
WHERE
  pickup_zip IN ({{ pickupzip }})
In thepickupziptext box, enter10018and then clickApply changesto execute the query with the pickup zip code parameter.
In thepickupziptext box, enter10018and then clickApply changesto execute the query with the pickup zip code parameter.
10018
ClickSave.
ClickSave.
Open thePickup hourquery.
Open thePickup hourquery.
Add the followingWHEREclause to thePickup hourquery to filter the query by the pickup zip code. Add this clause before theGROUP BYclause.WHERE
     pickup_zip IN ({{ pickupzip }})
Add the followingWHEREclause to thePickup hourquery to filter the query by the pickup zip code. Add this clause before theGROUP BYclause.
WHERE
GROUP BY
WHERE
     pickup_zip IN ({{ pickupzip }})
WHERE
     pickup_zip IN ({{ pickupzip }})
In thepickupziptext box, enter10018and then clickApply changesto execute the query with the pickup zip code filter.
In thepickupziptext box, enter10018and then clickApply changesto execute the query with the pickup zip code filter.
10018
ClickSave.
ClickSave.
Update the dashboard to use a dashboard parameter
Open theNYC taxi trip analysisdashboard.Each of the visualizations now includes a parameter for the pickup zip code.
Open theNYC taxi trip analysisdashboard.
Each of the visualizations now includes a parameter for the pickup zip code.

Click the kebab menufor this dashboard and then clickEdit.
Click the kebab menufor this dashboard and then clickEdit.
Click the kebab menuforDaily fare trendsvisualization and then clickChange widget settings.
Click the kebab menuforDaily fare trendsvisualization and then clickChange widget settings.
In theParameterssection, click the pencil iconfor theWidget parameterin theValuefield.
In theParameterssection, click the pencil iconfor theWidget parameterin theValuefield.

In theEdit source and Valuewindow, change theSourcetoNew dashboard parameter.
In theEdit source and Valuewindow, change theSourcetoNew dashboard parameter.

ClickOKand then clickSave.Thepickupzipdashboard parameter appears and the widget parameter for theDaily fare trendsvisualization no longer appears.
ClickOKand then clickSave.
Thepickupzipdashboard parameter appears and the widget parameter for theDaily fare trendsvisualization no longer appears.
Click the kebab menuforPickup hour distributionvisualization and then clickChange widget settings.
Click the kebab menuforPickup hour distributionvisualization and then clickChange widget settings.
In theParameterssection, click the pencil iconfor theWidget parameterin theValuefield.
In theParameterssection, click the pencil iconfor theWidget parameterin theValuefield.
In theEdit source and Valuewindow, change theSourcetoExisting dashboard parameter.
In theEdit source and Valuewindow, change theSourcetoExisting dashboard parameter.
Verify thatpickupzipis selected as theKeyvalue.
Verify thatpickupzipis selected as theKeyvalue.
ClickOKand then clickSave.The widget parameter for thePickup hour distributionvisualization no longer appears.
ClickOKand then clickSave.
The widget parameter for thePickup hour distributionvisualization no longer appears.
ClickDone editing.
ClickDone editing.
Change the value of thepickupzipdashboard parameter to10017and then clickApply changes.The data in each of the vizualizations now displays the data for pickups in the 10017 zip code.
Change the value of thepickupzipdashboard parameter to10017and then clickApply changes.
10017
The data in each of the vizualizations now displays the data for pickups in the 10017 zip code.

Feedback
Was this page helpful?
Additional resources