Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Geolocation and IP address handling
Article
2025-03-06
21 contributors
In this article
This article explains how geolocation lookup and IP address handling work inApplication Insights.
Default behavior
By default, IP addresses are temporarily collected but not stored.
When telemetry is sent to Azure, the IP address is used in a geolocation lookup. The result is used to populate the fieldsclient_City,client_StateOrProvince, andclient_CountryOrRegion. The address is then discarded, and0.0.0.0is written to theclient_IPfield.
client_City
client_StateOrProvince
client_CountryOrRegion
0.0.0.0
client_IP
The telemetry types are:
Browser telemetry: Application Insights collects the sender's IP address. The ingestion endpoint calculates the IP address.
Server telemetry: The Application Insights telemetry module temporarily collects the client IP address when theX-Forwarded-Forheader isn't set. When the incoming IP address list has more than one item, the last IP address is used to populate geolocation fields.
X-Forwarded-For
This behavior is by design to help avoid unnecessary collection of personal data and IP address location information.
When IP addresses aren't collected, city and other geolocation attributes also aren't collected.
Storage of IP address data
Warning
The default and our recommendation are to not collect IP addresses. If you override this behavior, verify the collection doesn't break any compliance requirements or local regulations.
To learn more about handling personal data, seeGuidance for personal data.
Note
The IP addresses associated with telemetry ingested before enabling theDisableIpMaskingproperty continues to be displayed as0.0.0.0. Only telemetry ingested after this change reflects the actual IP address information.
DisableIpMasking
0.0.0.0
To enable IP collection and storage, theDisableIpMaskingproperty of the Application Insights component must be set totrue.
DisableIpMasking
true
Disable IP masking
Tip
If you need to modify the behavior for only a single Application Insights resource, use the Azure portal.
Portal
Azure CLI
PowerShell
REST API
Bicep
ARM (JSON)
Go to your Application Insights resource, and then selectAutomation>Export template.
Go to your Application Insights resource, and then selectAutomation>Export template.
SelectDeploy.
SelectDeploy.

SelectEdit template.NoteIf you experience the error shown in the preceding screenshot, you can resolve it. It states: "The resource group is in a location that isn't supported by one or more resources in the template. Please choose a different resource group." Temporarily select a different resource group from the dropdown list and then reselect your original resource group.
SelectEdit template.

Note
If you experience the error shown in the preceding screenshot, you can resolve it. It states: "The resource group is in a location that isn't supported by one or more resources in the template. Please choose a different resource group." Temporarily select a different resource group from the dropdown list and then reselect your original resource group.
In the JSON template, locatepropertiesinsideresources. Add a comma to the last JSON field, and then add the following new line:"DisableIpMasking": true. Then selectSave.
In the JSON template, locatepropertiesinsideresources. Add a comma to the last JSON field, and then add the following new line:"DisableIpMasking": true. Then selectSave.
properties
resources
"DisableIpMasking": true

SelectReview + create>Create.NoteIf you see "Your deployment failed," look through your deployment details for the one with the typemicrosoft.insights/componentsand check the status. If that one succeeds, the changes made toDisableIpMaskingwere deployed.
SelectReview + create>Create.
Note
If you see "Your deployment failed," look through your deployment details for the one with the typemicrosoft.insights/componentsand check the status. If that one succeeds, the changes made toDisableIpMaskingwere deployed.
microsoft.insights/components
DisableIpMasking
After the deployment is complete, new telemetry data will be recorded.If you select and edit the template again, only the default template without the newly added property. If you aren't seeing IP address data and want to confirm that"DisableIpMasking": trueis set, run the following PowerShell commands:# Replace <application-insights-resource-name> and <resource-group-name> with the appropriate resource and resource group name.

# If you aren't using Azure Cloud Shell, you need to connect to your Azure account
# Connect-AzAccount

$AppInsights = Get-AzResource -Name '<application-insights-resource-name>' -ResourceType 'microsoft.insights/components' -ResourceGroupName '<resource-group-name>'
$AppInsights.PropertiesA list of properties is returned as a result. One of the properties should readDisableIpMasking: true. If you run the PowerShell commands before you deploy the new property with Azure Resource Manager, the property doesn't exist.
After the deployment is complete, new telemetry data will be recorded.
If you select and edit the template again, only the default template without the newly added property. If you aren't seeing IP address data and want to confirm that"DisableIpMasking": trueis set, run the following PowerShell commands:
"DisableIpMasking": true
# Replace <application-insights-resource-name> and <resource-group-name> with the appropriate resource and resource group name.

# If you aren't using Azure Cloud Shell, you need to connect to your Azure account
# Connect-AzAccount

$AppInsights = Get-AzResource -Name '<application-insights-resource-name>' -ResourceType 'microsoft.insights/components' -ResourceGroupName '<resource-group-name>'
$AppInsights.Properties
# Replace <application-insights-resource-name> and <resource-group-name> with the appropriate resource and resource group name.

# If you aren't using Azure Cloud Shell, you need to connect to your Azure account
# Connect-AzAccount

$AppInsights = Get-AzResource -Name '<application-insights-resource-name>' -ResourceType 'microsoft.insights/components' -ResourceGroupName '<resource-group-name>'
$AppInsights.Properties
A list of properties is returned as a result. One of the properties should readDisableIpMasking: true. If you run the PowerShell commands before you deploy the new property with Azure Resource Manager, the property doesn't exist.
DisableIpMasking: true
Note
Currently, Azure doesn't provide a way to disable IP masking for Application Insights via the Azure CLI. To disable IP masking programmatically, use Azure PowerShell.
To disable IP masking usingAzure PowerShell, use the following command and replace the placeholders<application-insights-resource-name>and<resource-group-name>with your specific values:
<application-insights-resource-name>
<resource-group-name>
Update-AzApplicationInsights -Name "<application-insights-resource-name>" -ResourceGroupName "<resource-group-name>" -DisableIPMasking:$true
Update-AzApplicationInsights -Name "<application-insights-resource-name>" -ResourceGroupName "<resource-group-name>" -DisableIPMasking:$true
For more information about theUpdate-AzApplicationInsightscmdlet, see theAzure PowerShell documentation.
Update-AzApplicationInsights
To disable IP masking using theREST API, use the following request and replace the placeholders<subscription-id>,<resource-group-name>,<application-insights-resource-name>,<access-token>, and<azure-region-name>with your specific values:
<subscription-id>
<resource-group-name>
<application-insights-resource-name>
<access-token>
<azure-region-name>
PATCH https://management.azure.com/subscriptions/<subscription-id>/resourceGroups/<resource-group-name>/providers/microsoft.insights/components/<application-insights-resource-name>?api-version=2018-05-01-preview HTTP/1.1
Host: management.azure.com
Authorization: Bearer <access-token>
Content-Type: application/json

{
    "location": "<azure-region-name>",
    "kind": "web",
    "properties": {
        "Application_Type": "web",
        "DisableIpMasking": true
    }
}
PATCH https://management.azure.com/subscriptions/<subscription-id>/resourceGroups/<resource-group-name>/providers/microsoft.insights/components/<application-insights-resource-name>?api-version=2018-05-01-preview HTTP/1.1
Host: management.azure.com
Authorization: Bearer <access-token>
Content-Type: application/json

{
    "location": "<azure-region-name>",
    "kind": "web",
    "properties": {
        "Application_Type": "web",
        "DisableIpMasking": true
    }
}
For more information about configuring Application Insights resources using the REST API, see theREST API documentation.
To disable IP masking usingBicep, use the following template and replace the placeholders<application-insights-resource-name>and<azure-region-name>with your specific values:
<application-insights-resource-name>
<azure-region-name>
resource appInsights 'microsoft.insights/components@2020-02-02' = {
    name: '<application-insights-resource-name>'
    location: '<azure-region-name>'

    kind: 'web'
    properties: {
        Application_Type: 'web'
        DisableIpMasking: true
    }
}
resource appInsights 'microsoft.insights/components@2020-02-02' = {
    name: '<application-insights-resource-name>'
    location: '<azure-region-name>'

    kind: 'web'
    properties: {
        Application_Type: 'web'
        DisableIpMasking: true
    }
}
To disable IP masking usingARM (JSON), use the following template and replace the placeholders<subscription-id>,<resource-group-name>,<application-insights-resource-name>, and<azure-region-name>with your specific values:
<subscription-id>
<resource-group-name>
<application-insights-resource-name>
<azure-region-name>
{
    "id": "/subscriptions/<subscription-id>/resourceGroups/<resource-group-name>/providers/microsoft.insights/components/<application-insights-resource-name>",
    "name": "<application-insights-resource-name>",
    "type": "microsoft.insights/components",
    "location": "<azure-region-name>",

    "kind": "web",
    "properties": {
        "Application_Type": "web",
        "DisableIpMasking": true
    }
}
{
    "id": "/subscriptions/<subscription-id>/resourceGroups/<resource-group-name>/providers/microsoft.insights/components/<application-insights-resource-name>",
    "name": "<application-insights-resource-name>",
    "type": "microsoft.insights/components",
    "location": "<azure-region-name>",

    "kind": "web",
    "properties": {
        "Application_Type": "web",
        "DisableIpMasking": true
    }
}
Next steps
Learn more aboutpersonal data collectionin Azure Monitor.
Learn how toset the user IPusing OpenTelemetry.
Feedback
Was this page helpful?
Additional resources