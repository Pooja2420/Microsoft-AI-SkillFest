Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Microsoft Entra SSO integration with AWS Single-Account Access
Article
2025-03-25
55 contributors
In this article
In this article,  you learn how to integrate AWS Single-Account Access with Microsoft Entra ID. When you integrate AWS Single-Account Access with Microsoft Entra ID, you can:
Control in Microsoft Entra ID who has access to AWS Single-Account Access.
Enable your users to be automatically signed-in to AWS Single-Account Access with their Microsoft Entra accounts.
Manage your accounts in one central location.

Understanding the different AWS applications in the Microsoft Entra application gallery
Use the information below to make a decision between using the AWS Single Sign-On and AWS Single-Account Access applications in the Microsoft Entra application gallery.
AWS Single Sign-On
AWS Single Sign-Onwas added to the Microsoft Entra application gallery in February 2021. It makes it easy to manage access centrally to multiple AWS accounts and AWS applications, with sign-in through Microsoft Entra ID. Federate Microsoft Entra ID with AWS SSO once, and use AWS SSO to manage permissions across all of your AWS accounts from one place. AWS SSO provisions permissions automatically and keeps them current as you update policies and access assignments. End users can authenticate with their Microsoft Entra credentials to access the AWS Console, Command Line Interface, and AWS SSO integrated applications.
AWS Single-Account Access
AWS Single-Account Accesshas been used by customers over the past several years and enables you to federate Microsoft Entra ID to a single AWS account and use Microsoft Entra ID to manage access to AWS IAM roles. AWS IAM administrators define roles and policies in each AWS account. For each AWS account, Microsoft Entra administrators federate to AWS IAM, assign users or groups to the account, and configure Microsoft Entra ID to send assertions that authorize role access.
AWS Single-Account Access architecture

You can configure multiple identifiers for multiple instances. For example:
https://signin.aws.amazon.com/saml#1
https://signin.aws.amazon.com/saml#1
https://signin.aws.amazon.com/saml#1
https://signin.aws.amazon.com/saml#2
https://signin.aws.amazon.com/saml#2
https://signin.aws.amazon.com/saml#2
With these values, Microsoft Entra ID removes the value of#, and sends the correct valuehttps://signin.aws.amazon.com/samlas the audience URL in the SAML token.
https://signin.aws.amazon.com/saml
We recommend this approach for the following reasons:
Each application provides you with a unique X509 certificate. Each instance of an AWS app instance can then have a different certificate expiry date, which can be managed on an individual AWS account basis. Overall certificate rollover is easier in this case.
Each application provides you with a unique X509 certificate. Each instance of an AWS app instance can then have a different certificate expiry date, which can be managed on an individual AWS account basis. Overall certificate rollover is easier in this case.
You can enable user provisioning with an AWS app in Microsoft Entra ID, and then our service fetches all the roles from that AWS account. You don't have to manually add or update the AWS roles on the app.
You can enable user provisioning with an AWS app in Microsoft Entra ID, and then our service fetches all the roles from that AWS account. You don't have to manually add or update the AWS roles on the app.
You can assign the app owner individually for the app. This person can manage the app directly in Microsoft Entra ID.
You can assign the app owner individually for the app. This person can manage the app directly in Microsoft Entra ID.
Note
Make sure you use a gallery application only.
Prerequisites
To get started, you need the following items:
A Microsoft Entra subscription. If you don't have a subscription, you can get afree account.
An AWS IAM IdP enabled subscription.
Along with Cloud Application Administrator, Application Administrator can also add or manage applications in Microsoft Entra ID.
For more information, seeAzure built-in roles.
Note
Roles shouldn't be manually edited in Microsoft Entra ID when doing role imports.
Scenario description
In this article,  you configure and test Microsoft Entra SSO in a test environment.
AWS Single-Account Access supportsSP and IDPinitiated SSO.
Note
Identifier of this application is a fixed string value so only one instance can be configured in one tenant.
Adding AWS Single-Account Access from the gallery
To configure the integration of AWS Single-Account Access into Microsoft Entra ID, you need to add AWS Single-Account Access from the gallery to your list of managed SaaS apps.
Sign in to theMicrosoft Entra admin centeras at least aCloud Application Administrator.
Browse toEntra ID>Enterprise apps>New application.
In theAdd from the gallerysection, typeAWS Single-Account Accessin the search box.
SelectAWS Single-Account Accessfrom results panel and then add the app. Wait a few seconds while the app is added to your tenant.
Alternatively, you can also use theEnterprise App Configuration Wizard. In this wizard, you can add an application to your tenant, add users/groups to the app, assign roles, and walk through the SSO configuration as well. You can learn more about Microsoft 365 wizardshere.

Configure and test Microsoft Entra SSO for AWS Single-Account Access
Configure and test Microsoft Entra SSO with AWS Single-Account Access using a test user calledB.Simon. For SSO to work, you need to establish a link relationship between a Microsoft Entra user and the related user in AWS Single-Account Access.
To configure and test Microsoft Entra SSO with AWS Single-Account Access, perform the following steps:
Configure Microsoft Entra SSO- to enable your users to use this feature.Create a Microsoft Entra test user- to test Microsoft Entra single sign-on with B.Simon.Assign the Microsoft Entra test user- to enable B.Simon to use Microsoft Entra single sign-on.
Create a Microsoft Entra test user- to test Microsoft Entra single sign-on with B.Simon.
Assign the Microsoft Entra test user- to enable B.Simon to use Microsoft Entra single sign-on.
Configure AWS Single-Account Access SSO- to configure the single sign-on settings on application side.Create AWS Single-Account Access test user- to have a counterpart of B.Simon in AWS Single-Account Access that's linked to the Microsoft Entra representation of user.How to configure role provisioning in AWS Single-Account Access
Create AWS Single-Account Access test user- to have a counterpart of B.Simon in AWS Single-Account Access that's linked to the Microsoft Entra representation of user.
How to configure role provisioning in AWS Single-Account Access
Test SSO- to verify whether the configuration works.

Configure Microsoft Entra SSO
Follow these steps to enable Microsoft Entra SSO.
Sign in to theMicrosoft Entra admin centeras at least aCloud Application Administrator.
Sign in to theMicrosoft Entra admin centeras at least aCloud Application Administrator.
Browse toEntra ID>Enterprise apps>AWS Single-Account Access>Single sign-on.
Browse toEntra ID>Enterprise apps>AWS Single-Account Access>Single sign-on.
On theSelect a single sign-on methodpage, selectSAML.
On theSelect a single sign-on methodpage, selectSAML.
On theSet up single sign-on with SAMLpage, select the pencil icon forBasic SAML Configurationto edit the settings.
On theSet up single sign-on with SAMLpage, select the pencil icon forBasic SAML Configurationto edit the settings.

In theBasic SAML Configurationsection, update bothIdentifier (Entity ID)andReply URLwith the same default value:https://signin.aws.amazon.com/saml. You must selectSaveto save the configuration changes.
In theBasic SAML Configurationsection, update bothIdentifier (Entity ID)andReply URLwith the same default value:https://signin.aws.amazon.com/saml. You must selectSaveto save the configuration changes.
https://signin.aws.amazon.com/saml
AWS application expects the SAML assertions in a specific format, which requires you to add custom attribute mappings to your SAML token attributes configuration. The following screenshot shows the list of default attributes.
AWS application expects the SAML assertions in a specific format, which requires you to add custom attribute mappings to your SAML token attributes configuration. The following screenshot shows the list of default attributes.

In addition to above, AWS application expects few more attributes to be passed back in SAML response which are shown below. These attributes are also pre populated but you can review them as per your requirements.NameSource attributeNamespaceRoleSessionNameuser.userprincipalnamehttps://aws.amazon.com/SAML/AttributesRoleuser.assignedroleshttps://aws.amazon.com/SAML/AttributesSessionDurationuser.sessiondurationhttps://aws.amazon.com/SAML/AttributesNoteAWS expects roles for users assigned to the application. Please set up these roles in Microsoft Entra ID so that users can be assigned the appropriate roles. To understand how to configure roles in Microsoft Entra ID, seehere
In addition to above, AWS application expects few more attributes to be passed back in SAML response which are shown below. These attributes are also pre populated but you can review them as per your requirements.
https://aws.amazon.com/SAML/Attributes
https://aws.amazon.com/SAML/Attributes
https://aws.amazon.com/SAML/Attributes
Note
AWS expects roles for users assigned to the application. Please set up these roles in Microsoft Entra ID so that users can be assigned the appropriate roles. To understand how to configure roles in Microsoft Entra ID, seehere
On theSet up single sign-on with SAMLpage, in theSAML Signing Certificate(Step 3) dialog box, selectAdd a certificate.
On theSet up single sign-on with SAMLpage, in theSAML Signing Certificate(Step 3) dialog box, selectAdd a certificate.

Generate a new SAML signing certificate, and then selectNew Certificate. Enter an email address for certificate notifications.
Generate a new SAML signing certificate, and then selectNew Certificate. Enter an email address for certificate notifications.

(Optional) You can selectMake certificate active.
(Optional) You can selectMake certificate active.
In theSAML Signing Certificatesection, findFederation Metadata XMLand selectDownloadto download the certificate and save it on your computer.
In theSAML Signing Certificatesection, findFederation Metadata XMLand selectDownloadto download the certificate and save it on your computer.
In theSet up AWS Single-Account Accesssection, copy the appropriate URL(s) based on your requirement.
In theSet up AWS Single-Account Accesssection, copy the appropriate URL(s) based on your requirement.


Create and assign Microsoft Entra test user
Follow the guidelines in thecreate and assign a user accountquickstart to create a test user account called B.Simon.
Configure AWS Single-Account Access SSO
In a different browser window, sign-on to your AWS company site as an administrator.
In a different browser window, sign-on to your AWS company site as an administrator.
In AWS home page, search forIAMand select it.
In AWS home page, search forIAMand select it.

Go toAccess management>Identity Providersand selectAdd providerbutton.
Go toAccess management>Identity Providersand selectAdd providerbutton.

In theAdd an Identity providerpage, perform the following steps:a. ForProvider type, selectSAML.b. ForProvider name, type a provider name (for example:WAAD).c. To upload your downloadedmetadata file, selectChoose file.d. SelectAdd provider.
In theAdd an Identity providerpage, perform the following steps:

a. ForProvider type, selectSAML.
b. ForProvider name, type a provider name (for example:WAAD).
c. To upload your downloadedmetadata file, selectChoose file.
d. SelectAdd provider.
SelectRoles>Create role.
SelectRoles>Create role.

On theCreate rolepage, perform the following steps:a. ChooseTrusted entity type, selectSAML 2.0 federation.b. UnderSAML 2.0 based provider, select theSAML provideryou created previously (for example:WAAD).c. SelectAllow programmatic and AWS Management Console access.d. SelectNext.
On theCreate rolepage, perform the following steps:

a. ChooseTrusted entity type, selectSAML 2.0 federation.
b. UnderSAML 2.0 based provider, select theSAML provideryou created previously (for example:WAAD).
c. SelectAllow programmatic and AWS Management Console access.
d. SelectNext.
On thePermissions policiesdialog box, attach the appropriate policy, per your organization. Then selectNext.
On thePermissions policiesdialog box, attach the appropriate policy, per your organization. Then selectNext.

On theReviewdialog box, perform the following steps:a. InRole name, enter your role name.b. InDescription, enter the role description.c. SelectCreate role.d. Create as many roles as needed and map them to the identity provider.
On theReviewdialog box, perform the following steps:

a. InRole name, enter your role name.
b. InDescription, enter the role description.
c. SelectCreate role.
d. Create as many roles as needed and map them to the identity provider.
Use AWS service account credentials for fetching the roles from the AWS account in Microsoft Entra user provisioning. For this, open the AWS console home.
Use AWS service account credentials for fetching the roles from the AWS account in Microsoft Entra user provisioning. For this, open the AWS console home.
In the IAM section, selectPoliciesand selectCreate policy.
In the IAM section, selectPoliciesand selectCreate policy.

Create your own policy to fetch all the roles from AWS accounts.a. InCreate policy, select theJSONtab.b. In the policy document, add the following JSON:{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Effect": "Allow",
            "Action": [
            "iam:ListRoles"
            ],
            "Resource": "*"
        }
    ]
}c. SelectNext: Tags.
Create your own policy to fetch all the roles from AWS accounts.

a. InCreate policy, select theJSONtab.
b. In the policy document, add the following JSON:
{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Effect": "Allow",
            "Action": [
            "iam:ListRoles"
            ],
            "Resource": "*"
        }
    ]
}
{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Effect": "Allow",
            "Action": [
            "iam:ListRoles"
            ],
            "Resource": "*"
        }
    ]
}
c. SelectNext: Tags.
You can also add the required tags in the below page and selectNext: Review.
You can also add the required tags in the below page and selectNext: Review.

Define the new policy.a. ForName, enterAzureAD_SSOUserRole_Policy.b. ForDescription, enterThis policy will allow to fetch the roles from AWS accounts.c. SelectCreate policy.
Define the new policy.
a. ForName, enterAzureAD_SSOUserRole_Policy.
b. ForDescription, enterThis policy will allow to fetch the roles from AWS accounts.
c. SelectCreate policy.
Create a new user account in the AWS IAM service.
a. In the AWS IAM console, selectUsersand selectAdd users.b. In theSpecify user detailssection, enter the user name asAzureADRoleManagerand selectNext.c. Create a new policy for this user.d. SelectAttach existing policies directly.e. Search for the newly created policy in the filter sectionAzureAD_SSOUserRole_Policy.f. Select the policy, and then selectNext.
Create a new user account in the AWS IAM service.
a. In the AWS IAM console, selectUsersand selectAdd users.

b. In theSpecify user detailssection, enter the user name asAzureADRoleManagerand selectNext.

c. Create a new policy for this user.

d. SelectAttach existing policies directly.
e. Search for the newly created policy in the filter sectionAzureAD_SSOUserRole_Policy.
f. Select the policy, and then selectNext.
Review your choices and selectCreate user.NoteEnsure to create and download the third-party access key for this user. This key is used in the Microsoft Entra user provisioning section to fetch the roles from the AWS console.
Review your choices and selectCreate user.
Note
Ensure to create and download the third-party access key for this user. This key is used in the Microsoft Entra user provisioning section to fetch the roles from the AWS console.
To download the user credentials of a user, enable the console access inSecurity credentialstab.
To download the user credentials of a user, enable the console access inSecurity credentialstab.
Enter these credentials into the Microsoft Entra user provisioning section to fetch the roles from the AWS console.
Enter these credentials into the Microsoft Entra user provisioning section to fetch the roles from the AWS console.
Note
AWS has a set of permissions/limits are required to configure AWS SSO. To know more information on AWS limits, please referthispage.
How to configure role provisioning in AWS Single-Account Access
In the Microsoft Entra management portal, in the AWS app, go toProvisioning.
In the Microsoft Entra management portal, in the AWS app, go toProvisioning.

Note:The username and password returned when enabling console access aren't what is needed for the clientsecret and Secret Token values. Instead, create a third-party access key for this step.
Enter the access key and secret in theclientsecretandSecret Tokenfields, respectively.a. Enter the AWS user access key in theclientsecretfield.b. Enter the AWS user secret in theSecret Tokenfield.c. SelectTest Connection.d. Save the setting by selectingSave.
Enter the access key and secret in theclientsecretandSecret Tokenfields, respectively.

a. Enter the AWS user access key in theclientsecretfield.
b. Enter the AWS user secret in theSecret Tokenfield.
c. SelectTest Connection.
d. Save the setting by selectingSave.
In theSettingssection, forProvisioning Status, selectOn. Then selectSave.
In theSettingssection, forProvisioning Status, selectOn. Then selectSave.

Note
The provisioning service imports roles only from AWS to Microsoft Entra ID. The service doesn't provision users and groups from Microsoft Entra ID to AWS.
Note
After you save the provisioning credentials, you must wait for the initial sync cycle to run. Sync usually takes around 40 minutes to finish. You can see the status at the bottom of theProvisioningpage, underCurrent Status.
Create AWS Single-Account Access test user
The objective of this section is to create a user called B.Simon in AWS Single-Account Access. AWS Single-Account Access doesn't need a user to be created in their system for SSO, so you don't need to perform any action here.
Test SSO
In this section, you test your Microsoft Entra single sign-on configuration with following options.
SelectTest this application, this option redirects to AWS Single-Account Access Sign on URL where you can initiate the login flow.
SelectTest this application, this option redirects to AWS Single-Account Access Sign on URL where you can initiate the login flow.
Go to AWS Single-Account Access Sign-on URL directly and initiate the login flow from there.
Go to AWS Single-Account Access Sign-on URL directly and initiate the login flow from there.
SelectTest this application, and you should be automatically signed in to the AWS Single-Account Access for which you set up the SSO.
You can also use Microsoft My Apps to test the application in any mode. When you select the AWS Single-Account Access tile in the My Apps, if configured in SP mode you would be redirected to the application sign on page for initiating the login flow and if configured in IDP mode, you should be automatically signed in to the AWS Single-Account Access for which you set up the SSO. For more information about the My Apps, seeIntroduction to the My Apps.
Known issues
AWS Single-Account Access provisioning integration can't be used in the AWS China regions.
AWS Single-Account Access provisioning integration can't be used in the AWS China regions.
In theProvisioningsection, theMappingssubsection shows a "Loading..." message, and never displays the attribute mappings. The only provisioning workflow supported today is the import of roles from AWS into Microsoft Entra ID for selection during a user or group assignment. The attribute mappings for this are predetermined, and aren't configurable.
In theProvisioningsection, theMappingssubsection shows a "Loading..." message, and never displays the attribute mappings. The only provisioning workflow supported today is the import of roles from AWS into Microsoft Entra ID for selection during a user or group assignment. The attribute mappings for this are predetermined, and aren't configurable.
TheProvisioningsection only supports entering one set of credentials for one AWS tenant at a time. All imported roles are written to theappRolesproperty of the Microsoft Entra IDservicePrincipalobjectfor the AWS tenant.Multiple AWS tenants (represented byservicePrincipals) can be added to Microsoft Entra ID from the gallery for provisioning. There's a known issue, however, with not being able to automatically write all of the imported roles from the multiple AWSservicePrincipalsused for provisioning into the singleservicePrincipalused for SSO.As a workaround, you can use theMicrosoft Graph APIto extract all of theappRolesimported into each AWSservicePrincipalwhere provisioning is configured. You can subsequently add these role strings to the AWSservicePrincipalwhere SSO is configured.
TheProvisioningsection only supports entering one set of credentials for one AWS tenant at a time. All imported roles are written to theappRolesproperty of the Microsoft Entra IDservicePrincipalobjectfor the AWS tenant.
appRoles
servicePrincipal
Multiple AWS tenants (represented byservicePrincipals) can be added to Microsoft Entra ID from the gallery for provisioning. There's a known issue, however, with not being able to automatically write all of the imported roles from the multiple AWSservicePrincipalsused for provisioning into the singleservicePrincipalused for SSO.
servicePrincipals
servicePrincipals
servicePrincipal
As a workaround, you can use theMicrosoft Graph APIto extract all of theappRolesimported into each AWSservicePrincipalwhere provisioning is configured. You can subsequently add these role strings to the AWSservicePrincipalwhere SSO is configured.
appRoles
servicePrincipal
servicePrincipal
Roles must meet the following requirements to be eligible to be imported from AWS into Microsoft Entra ID:Roles must have exactly one saml-provider defined in AWSThe combined length of the ARN(Amazon Resource Name) for the role and the ARN for the associated saml-provider must be less than 240 characters.
Roles must meet the following requirements to be eligible to be imported from AWS into Microsoft Entra ID:
Roles must have exactly one saml-provider defined in AWS
The combined length of the ARN(Amazon Resource Name) for the role and the ARN for the associated saml-provider must be less than 240 characters.
Change log
01/12/2020 - Increased role length limit from 119 characters to 239 characters.
Related content
Once you configure AWS Single-Account Access you can enforce Session Control, which protects exfiltration and infiltration of your organization's sensitive data in real time. Session Control extends from Conditional Access.Learn how to enforce session control with Microsoft Defender for Cloud Apps.
Feedback
Was this page helpful?
Additional resources