Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Technical deep dive on platform-supported migration from classic to Azure Resource Manager
Article
2025-03-17
2 contributors
In this article
Applies to:âï¸ Linux VMs âï¸ Windows VMs
Important
Today, about 90% of IaaS VMs are usingAzure Resource Manager. As of February 28, 2020, classic VMs have been deprecated and will be fully retired on September 6, 2023.Learn moreabout this deprecation andhow it affects you.
Let's take a deep-dive on migrating from the Azure classic deployment model to the Azure Resource Manager deployment model. We look at resources at a resource and feature level to help you understand how the Azure platform migrates resources between the two deployment models. For more information, please read the service announcement article:Platform-supported migration of IaaS resources from classic to Azure Resource Manager.
Migrate IaaS resources from the classic deployment model to Azure Resource Manager
First, it's important to understand the difference between data-plane and management-plane operations on the infrastructure as a service (IaaS) resources.
Management/control planedescribes the calls that come into the management/control plane or the API for modifying resources. For example, operations like creating a VM, restarting a VM, and updating a virtual network with a new subnet manage the running resources. They don't directly affect connecting to the VMs.
Data plane(application) describes the runtime of the application itself, and involves interaction with instances that donât go through the Azure API. For example, accessing your website, or pulling data from a running SQL Server instance or a MongoDB server, are data plane or application interactions. Other examples include copying a blob from a storage account, and accessing a public IP address to use Remote Desktop Protocol (RDP) or Secure Shell (SSH) into the virtual machine. These operations keep the application running across compute, networking, and storage.
The data plane is the same between the classic deployment model and Resource Manager stacks. The difference is that during the migration process, Microsoft translates the representation of the resources from the classic deployment model to that in the Resource Manager stack. As a result, you need to use new tools, APIs, and SDKs to manage your resources in the Resource Manager stack.

Note
In some migration scenarios, the Azure platform stops, deallocates, and restarts your virtual machines. This causes a brief data-plane downtime.
The migration experience
Before you start the migration:
Ensure that the resources that you want to migrate don't use any unsupported features or configurations. Usually the platform detects these issues and generates an error.
If you have VMs that aren't in a virtual network, they're stopped and deallocated as part of the prepare operation. If you don't want to lose the public IP address, consider reserving the IP address before triggering the prepare operation. If the VMs are in a virtual network, they aren't stopped and deallocated.
Plan your migration during non-business hours to accommodate for any unexpected failures that might happen during migration.
Download the current configuration of your VMs by using PowerShell, command-line interface (CLI) commands, or REST APIs to make it easier for validation after the prepare step is complete.
Update your automation and operationalization scripts to handle the Resource Manager deployment model, before you start the migration. You can optionally do GET operations when the resources are in the prepared state.
Evaluate the Azure role-based access control (Azure RBAC) policies that are configured on the IaaS resources in the classic deployment model, and plan for after the migration is complete.
The migration workflow is as follows:

Note
The operations described in the following sections are all idempotent. If you have a problem other than an unsupported feature or a configuration error, retry the prepare, abort, or commit operation. Azure tries the action again.
Validate
The validate operation is the first step in the migration process. The goal of this step is to analyze the state of the resources you want to migrate in the classic deployment model. The operation evaluates whether the resources are capable of migration (success or failure).
You select the virtual network or a cloud service (if itâs not in a virtual network) that you want to validate for migration. If the resource isn't capable of migration, Azure lists the reasons why.
The validate operation only analyzes the state of the resources in the classic deployment model. It can check for all failures and unsupported scenarios due to various configurations in the classic deployment model. It isn't possible to check for all issues that the Azure Resource Manager stack might impose on the resources during migration. These issues are only checked when the resources undergo transformation in the next step of migration (the prepare operation). The following table lists all the issues not checked in the validate operation:
Prepare
The prepare operation is the second step in the migration process. The goal of this step is to simulate the transformation of the IaaS resources from the classic deployment model to Resource Manager resources. Further, the prepare operation presents this side-by-side for you to visualize.
Note
Your resources in the classic deployment model aren't modified during this step. It's a safe step to run if you're trying out migration.
You select the virtual network or the cloud service (if itâs not a virtual network) that you want to prepare for migration.
If the resource isn't capable of migration, Azure stops the migration process and lists the reason why the prepare operation failed.
If the resource is capable of migration, Azure locks down the management-plane operations for the resources under migration. For example, you aren't able to add a data disk to a VM under migration.
Azure then starts the migration of metadata from the classic deployment model to Resource Manager for the migrating resources.
After the prepare operation is complete, you have the option of visualizing the resources in both the classic deployment model and Resource Manager. For every cloud service in the classic deployment model, the Azure platform creates a resource group name that has the patterncloud-service-name>-Migrated.
cloud-service-name>-Migrated
Note
It isn't possible to select the name of a resource group created for migrated resources (that is, "-Migrated"). After migration is complete, however, you can use the move feature of Azure Resource Manager to move resources to any resource group you want. For more information, seeMove resources to new resource group or subscription.
The following two screenshots show the result after a successful prepare operation. The first one shows a resource group that contains the original cloud service. The second one shows the new "-Migrated" resource group that contains the equivalent Azure Resource Manager resources.


Here's a behind-the-scenes look at your resources after the completion of the prepare phase. Note that the resource in the data plane is the same. It's represented in both the management plane (classic deployment model) and the control plane (Resource Manager).

Note
VMs that aren't in a virtual network in the classic deployment model are stopped and deallocated in this phase of migration.
Check (manual or scripted)
In the check step, you have the option to use the configuration that you downloaded earlier to validate that the migration looks correct. Alternatively, you can sign in to the portal, and spot check the properties and resources to validate that metadata migration looks good.
If you're migrating a virtual network, most configuration of virtual machines isn't restarted. For applications on those VMs, you can validate that the application is still running.
You can test your monitoring and operational scripts to see if the VMs are working as expected, and if your updated scripts work correctly. Only GET operations are supported when the resources are in the prepared state.
There's no set window of time before which you need to commit the migration. You can take as much time as you want in this state. However, the management plane is locked for these resources until you either abort or commit.
If you see any issues, you can always abort the migration and go back to the classic deployment model. After you go back, Azure opens the management-plane operations on the resources, so that you can resume normal operations on those VMs in the classic deployment model.
Abort
This is an optional step if you want to revert your changes to the classic deployment model and stop the migration. This operation deletes the Resource Manager metadata (created in the prepare step) for your resources.

Note
This operation can't be done after you have triggered the commit operation.
Commit
After you finish the validation, you can commit the migration. Resources don't appear anymore in the classic deployment model, and are available only in the Resource Manager deployment model. The migrated resources can be managed only in the new portal.
Note
This is an idempotent operation. If it fails, retry the operation. If it continues to fail, create a support ticket or create a forum onMicrosoft Q&A

Migration flowchart
Here's a flowchart that shows how to proceed with migration:

Translation of the classic deployment model to Resource Manager resources
You can find the classic deployment model and Resource Manager representations of the resources in the following table. Other features and resources aren't currently supported.
<cloudservicename>-migrated
-migrated
Changes to your automation and tooling after migration
As part of migrating your resources from the classic deployment model to the Resource Manager deployment model, you must update your existing automation or tooling to ensure that it continues to work after the migration.
Next steps
Overview of platform-supported migration of IaaS resources from classic to Azure Resource Manager
Planning for migration of IaaS resources from classic to Azure Resource Manager
Use PowerShell to migrate IaaS resources from classic to Azure Resource Manager
Use CLI to migrate IaaS resources from classic to Azure Resource Manager
VPN Gateway classic to Resource Manager migration
Migrate ExpressRoute circuits and associated virtual networks from the classic to the Resource Manager deployment model
Community tools for assisting with migration of IaaS resources from classic to Azure Resource Manager
Review most common migration errors
Review the most frequently asked questions about migrating IaaS resources from classic to Azure Resource Manager
Feedback
Was this page helpful?
Additional resources