Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Call a webhook with a classic metric alert in Azure Monitor
Article
2023-05-28
2 contributors
In this article
Warning
This article describes how to use older classic metric alerts. Azure Monitor now supportsnear-real time metric alerts and a new alerts experience. Classic alerts areretiredfor public cloud users. Classic alerts for Azure Government cloud and Microsoft Azure operated by 21Vianet will retire on29 February 2024.
You can use webhooks to route an Azure alert notification to other systems for post-processing or custom actions. You can use a webhook on an alert to route it to services that send SMS messages, to log bugs, to notify a team via chat or messaging services, or for various other actions.
This article describes how to set a webhook on an Azure metric alert. It also shows you what the payload for the HTTP POST to a webhook looks like. For information about the setup and schema for an Azure activity log alert (alert on events), seeCall a webhook on an Azure activity log alert.
Azure alerts use HTTP POST to send the alert contents in JSON format to a webhook URI that you provide when you create the alert. The schema is defined later in this article. The URI must be a valid HTTP or HTTPS endpoint. Azure posts one entry per request when an alert is activated.
Configure webhooks via the Azure portal
To add or update the webhook URI, in theAzure portal, go toCreate/Update Alerts.

You can also configure an alert to post to a webhook URI by usingAzure PowerShell cmdlets, across-platform CLI, orAzure Monitor REST APIs.
Authenticate the webhook
The webhook can authenticate by using token-based authorization. The webhook URI is saved with a token ID. For example:https://mysamplealert/webcallback?tokenid=sometokenid&someparameter=somevalue
https://mysamplealert/webcallback?tokenid=sometokenid&someparameter=somevalue
Payload schema
The POST operation contains the following JSON payload and schema for all metric-based alerts:
{
    "status": "Activated",
    "context": {
        "timestamp": "2015-08-14T22:26:41.9975398Z",
        "id": "/subscriptions/s1/resourceGroups/useast/providers/microsoft.insights/alertrules/ruleName1",
        "name": "ruleName1",
        "description": "some description",
        "conditionType": "Metric",
        "condition": {
            "metricName": "Requests",
            "metricUnit": "Count",
            "metricValue": "10",
            "threshold": "10",
            "windowSize": "15",
            "timeAggregation": "Average",
            "operator": "GreaterThanOrEqual"
        },
        "subscriptionId": "s1",
        "resourceGroupName": "useast",
        "resourceName": "mysite1",
        "resourceType": "microsoft.foo/sites",
        "resourceId": "/subscriptions/s1/resourceGroups/useast/providers/microsoft.foo/sites/mysite1",
        "resourceRegion": "centralus",
        "portalLink": "https://portal.azure.com/#resource/subscriptions/s1/resourceGroups/useast/providers/microsoft.foo/sites/mysite1"
    },
    "properties": {
        "key1": "value1",
        "key2": "value2"
    }
}
{
    "status": "Activated",
    "context": {
        "timestamp": "2015-08-14T22:26:41.9975398Z",
        "id": "/subscriptions/s1/resourceGroups/useast/providers/microsoft.insights/alertrules/ruleName1",
        "name": "ruleName1",
        "description": "some description",
        "conditionType": "Metric",
        "condition": {
            "metricName": "Requests",
            "metricUnit": "Count",
            "metricValue": "10",
            "threshold": "10",
            "windowSize": "15",
            "timeAggregation": "Average",
            "operator": "GreaterThanOrEqual"
        },
        "subscriptionId": "s1",
        "resourceGroupName": "useast",
        "resourceName": "mysite1",
        "resourceType": "microsoft.foo/sites",
        "resourceId": "/subscriptions/s1/resourceGroups/useast/providers/microsoft.foo/sites/mysite1",
        "resourceRegion": "centralus",
        "portalLink": "https://portal.azure.com/#resource/subscriptions/s1/resourceGroups/useast/providers/microsoft.foo/sites/mysite1"
    },
    "properties": {
        "key1": "value1",
        "key2": "value2"
    }
}
Dictionary<String, String>
Note
You can set thepropertiesfield only by usingAzure Monitor REST APIs.
Next steps
Learn more about Azure alerts and webhooks in the videoIntegrate Azure alerts with PagerDuty.
Learn how toexecute Azure Automation scripts (runbooks) on Azure alerts.
Learn how touse a logic app to send an SMS message via Twilio from an Azure alert.
Learn how touse a logic app to send a Slack message from an Azure alert.
Learn how touse a logic app to send a message to an Azure Queue from an Azure alert.
Additional resources