Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Tutorial: Connect to Azure storage account in Azure Kubernetes Service (AKS) with Service Connector using workload identity
Article
2025-01-28
4 contributors
In this article
Learn how to create a pod in an AKS cluster, which talks to an Azure storage account using workload identity with the help of Service Connector. In this tutorial, you complete the following tasks:
Create an AKS cluster and an Azure storage account.
Create a connection between the AKS cluster and the Azure storage account with Service Connector.
Clone a sample application that will talk to the Azure storage account from an AKS cluster.
Deploy the application to a pod in AKS cluster and test the connection.
Clean up resources.
Prerequisites
An Azure account with an active subscription.Create an account for free.
Installthe Azure CLI, and sign in to Azure CLI by using theaz logincommand.
InstallDockerandkubectl, to manage container image and Kubernetes resources.
A basic understanding of container and AKS. Get started frompreparing an application for AKS.
A basic understanding ofworkload identity.
Create Azure resources
Create a resource group for this tutorial.az group create \
    --name MyResourceGroup \
    --location eastus
Create a resource group for this tutorial.
az group create \
    --name MyResourceGroup \
    --location eastus
az group create \
    --name MyResourceGroup \
    --location eastus
Create an AKS cluster with the following command, or referring to thetutorial. We create the service connection, pod definition and deploy the sample application to this cluster.az aks create \
    --resource-group MyResourceGroup \
    --name MyAKSCluster \
    --enable-managed-identity \
    --node-count 1
Create an AKS cluster with the following command, or referring to thetutorial. We create the service connection, pod definition and deploy the sample application to this cluster.
az aks create \
    --resource-group MyResourceGroup \
    --name MyAKSCluster \
    --enable-managed-identity \
    --node-count 1
az aks create \
    --resource-group MyResourceGroup \
    --name MyAKSCluster \
    --enable-managed-identity \
    --node-count 1
Connect to the cluster with the following command.az aks get-credentials \
    --resource-group MyResourceGroup \
    --name MyAKSCluster
Connect to the cluster with the following command.
az aks get-credentials \
    --resource-group MyResourceGroup \
    --name MyAKSCluster
az aks get-credentials \
    --resource-group MyResourceGroup \
    --name MyAKSCluster
Create an Azure storage account with the following command, or referring to thetutorial. This is the target service that is connected to the AKS cluster and sample application interacts with.az storage account create \
    --resource-group MyResourceGroup \
    --name MyStorageAccount \
    --location eastus \
    --sku Standard_LRS
Create an Azure storage account with the following command, or referring to thetutorial. This is the target service that is connected to the AKS cluster and sample application interacts with.
az storage account create \
    --resource-group MyResourceGroup \
    --name MyStorageAccount \
    --location eastus \
    --sku Standard_LRS
az storage account create \
    --resource-group MyResourceGroup \
    --name MyStorageAccount \
    --location eastus \
    --sku Standard_LRS
Create an Azure container registry with the following command, or referring to thetutorial. The registry hosts the container image of the sample application, which will be consumed by the AKS pod definition.az acr create \
    --resource-group MyResourceGroup \
    --name MyRegistry \
    --sku StandardAnd enable anonymous pull so that AKS cluster can consume the images in the registry.az acr update \
    --resource-group MyResourceGroup \
    --name MyRegistry \
    --anonymous-pull-enabled
Create an Azure container registry with the following command, or referring to thetutorial. The registry hosts the container image of the sample application, which will be consumed by the AKS pod definition.
az acr create \
    --resource-group MyResourceGroup \
    --name MyRegistry \
    --sku Standard
az acr create \
    --resource-group MyResourceGroup \
    --name MyRegistry \
    --sku Standard
And enable anonymous pull so that AKS cluster can consume the images in the registry.
az acr update \
    --resource-group MyResourceGroup \
    --name MyRegistry \
    --anonymous-pull-enabled
az acr update \
    --resource-group MyResourceGroup \
    --name MyRegistry \
    --anonymous-pull-enabled
Create a user-assigned managed identity with the following command, or referring to thetutorial. The user-assigned managed identity is used in service connection creation to enable workload identity for AKS workloads.az identity create \
    --resource-group MyResourceGroup \
    --name MyIdentity
Create a user-assigned managed identity with the following command, or referring to thetutorial. The user-assigned managed identity is used in service connection creation to enable workload identity for AKS workloads.
az identity create \
    --resource-group MyResourceGroup \
    --name MyIdentity
az identity create \
    --resource-group MyResourceGroup \
    --name MyIdentity
Create service connection with Service Connector
Create a service connection between an AKS cluster and an Azure storage account using the Azure portal or the Azure CLI.
Portal
Azure CLI
Open yourKubernetes servicein the Azure portal and selectService Connectorfrom the left menu.
Open yourKubernetes servicein the Azure portal and selectService Connectorfrom the left menu.
SelectCreateand fill in the settings as shown below. Leave the other settings with their default values.Basics tab:SettingChoiceDescriptionKubernetes namespacedefaultThe namespace where you need the connection in the cluster.Service typeStorage - BlobThe target service type.Connection namestorage_connUse the connection name provided by Service Connector or choose your own connection name.Subscription<MySubscription>The subscription for your Azure Blob Storage target service.Storage account<MyStorageAccount>The target storage account you want to connect to.Client typePythonThe code language or framework you use to connect to the target service.Authentication tab:Authentication SettingChoiceDescriptionAuthentication typeWorkload IdentityService Connector authentication type.User assigned managed identity<MyIdentity>A user assigned managed identity is needed to enable workload identity.
SelectCreateand fill in the settings as shown below. Leave the other settings with their default values.
Basics tab:
<MySubscription>
<MyStorageAccount>
Authentication tab:
<MyIdentity>
Once the connection has been created, the Service Connector page displays information about the new connection.
Once the connection has been created, the Service Connector page displays information about the new connection.
Run the following Azure CLI command to create a service connection to the Azure storage account, providing the following information:
az aks connection create storage-blob \
    --workload-identity <user-identity-resource-id>
az aks connection create storage-blob \
    --workload-identity <user-identity-resource-id>
Provide the following information as prompted:
Source compute service resource group name:the resource group name of the AKS cluster.
AKS cluster name:the name of your AKS cluster that connects to the target service.
Target service resource group name:the resource group name of the Azure storage account.
Storage account name:the Azure storage account that is connected.
User-assigned identity resource ID:the resource ID of the user-assigned identity used to create the workload identity.
Clone sample application
Clone the sample repository:git clone https://github.com/Azure-Samples/serviceconnector-aks-samples.git
Clone the sample repository:
git clone https://github.com/Azure-Samples/serviceconnector-aks-samples.git
git clone https://github.com/Azure-Samples/serviceconnector-aks-samples.git
Go to the repository's sample folder for Azure storage:cd serviceconnector-aks-samples/azure-storage-workload-identity
Go to the repository's sample folder for Azure storage:
cd serviceconnector-aks-samples/azure-storage-workload-identity
cd serviceconnector-aks-samples/azure-storage-workload-identity
Build and push container image
Build and push the images to your container registry using the Azure CLIaz acr buildcommand.az acr build --registry <MyRegistry> --image sc-demo-storage-identity:latest ./
Build and push the images to your container registry using the Azure CLIaz acr buildcommand.
az acr build
az acr build --registry <MyRegistry> --image sc-demo-storage-identity:latest ./
az acr build --registry <MyRegistry> --image sc-demo-storage-identity:latest ./
View the images in your container registry using theaz acr repository listcommand.az acr repository list --name <MyRegistry> --output table
View the images in your container registry using theaz acr repository listcommand.
az acr repository list
az acr repository list --name <MyRegistry> --output table
az acr repository list --name <MyRegistry> --output table
Run application and test connection
Replace the placeholders in thepod.yamlfile in theazure-storage-identityfolder.Replace<YourContainerImage>with the image name we build in last step, for example,<MyRegistry>.azurecr.io/sc-demo-storage-identity:latest.Replace<ServiceAccountCreatedByServiceConnector>with the service account created by Service Connector after the connection creation. You may check the service account name in the Azure portal of Service Connector.Replace<SecretCreatedByServiceConnector>with the secret created by Service Connector after the connection creation. You may check the secret name in the Azure portal of Service Connector.
Replace the placeholders in thepod.yamlfile in theazure-storage-identityfolder.
pod.yaml
azure-storage-identity
Replace<YourContainerImage>with the image name we build in last step, for example,<MyRegistry>.azurecr.io/sc-demo-storage-identity:latest.
<YourContainerImage>
<MyRegistry>.azurecr.io/sc-demo-storage-identity:latest
Replace<ServiceAccountCreatedByServiceConnector>with the service account created by Service Connector after the connection creation. You may check the service account name in the Azure portal of Service Connector.
<ServiceAccountCreatedByServiceConnector>
Replace<SecretCreatedByServiceConnector>with the secret created by Service Connector after the connection creation. You may check the secret name in the Azure portal of Service Connector.
<SecretCreatedByServiceConnector>
Deploy the pod to your cluster withkubectl applycommand. Installkubectllocally using theaz aks install-clicommand if it isn't installed. The command creates a pod namedsc-demo-storage-identityin the default namespace of your AKS cluster.kubectl apply -f pod.yaml
Deploy the pod to your cluster withkubectl applycommand. Installkubectllocally using theaz aks install-clicommand if it isn't installed. The command creates a pod namedsc-demo-storage-identityin the default namespace of your AKS cluster.
kubectl apply
kubectl
sc-demo-storage-identity
kubectl apply -f pod.yaml
kubectl apply -f pod.yaml
Check the deployment is successful by viewing the pod withkubectl.kubectl get pod/sc-demo-storage-identity.
Check the deployment is successful by viewing the pod withkubectl.
kubectl
kubectl get pod/sc-demo-storage-identity.
kubectl get pod/sc-demo-storage-identity.
Check connection is established by viewing the logs withkubectl.kubectl logs pod/sc-demo-storage-identity
Check connection is established by viewing the logs withkubectl.
kubectl
kubectl logs pod/sc-demo-storage-identity
kubectl logs pod/sc-demo-storage-identity
Clean up resources
If you don't need to reuse the resources you've created in this tutorial, delete all the resources you created by deleting your resource group.
az group delete \
    --resource-group MyResourceGroup
az group delete \
    --resource-group MyResourceGroup
Next steps
Read the following articles to learn more about Service Connector concepts and how it helps AKS connect to services.
Learn about Service Connector concepts
Use Service Connector to connect an AKS cluster to other cloud services
Feedback
Was this page helpful?
Additional resources