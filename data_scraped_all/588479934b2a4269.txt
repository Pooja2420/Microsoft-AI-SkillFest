Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Allow cross-tenant queries and commands
Article
2024-08-12
12 contributors
In this article
Principals from multiple tenants can run queries and commands in a single Azure Data Explorer cluster. In this article, you'll learn how to give cluster access to principals from another tenant.
To set thetrustedExternalTenantson the cluster, useARM Templates,AZ CLI,PowerShell,Azure Resource Explorer, or send anAPI request.
trustedExternalTenants
The following examples show how to define trusted tenants in the portal and with an API request.
Note
The principal who will run queries or commands must also have a relevant database role. See alsorole-based access control. Validation of correct roles takes place after validation of trusted external tenants.
Portal
API
In the Azure portal, go to your Azure Data Explorer cluster page.
In the Azure portal, go to your Azure Data Explorer cluster page.
In the left-hand menu, underSettings, selectSecurity.
In the left-hand menu, underSettings, selectSecurity.
Define the desired tenants permissions.
Define the desired tenants permissions.

Syntax
Allow specific tenants
trustedExternalTenants: [ {"value": "tenantId1" }, { "value": "tenantId2" }, ... ]
trustedExternalTenants: [ {"value": "tenantId1" }, { "value": "tenantId2" }, ... ]
Allow all tenants
The trustedExternalTenants array supports also all-tenants star ('*') notation, which allows queries and commands from all tenants.
trustedExternalTenants: [ { "value": "*" }]
trustedExternalTenants: [ { "value": "*" }]
Note
The default value fortrustedExternalTenantsis all tenants:[ { "value": "*" }]. If the external tenants array was not defined on cluster creation, it can be overridden with a cluster update operation. An empty array means that only identities of the clusters tenant are allowed to authenticate to this cluster.
trustedExternalTenants
[ { "value": "*" }]
Learn more aboutsyntax conventions.
Examples
The following example allows specific tenants to run queries on the cluster:
{
    "properties": {
        "trustedExternalTenants": [
            { "value": "tenantId1" },
            { "value": "tenantId2" },
            ...
        ]
    }
}
{
    "properties": {
        "trustedExternalTenants": [
            { "value": "tenantId1" },
            { "value": "tenantId2" },
            ...
        ]
    }
}
The following example allows all tenants to run queries on the cluster:
{
    "properties": {
        "trustedExternalTenants": [  { "value": "*" }  ]
    }
}
{
    "properties": {
        "trustedExternalTenants": [  { "value": "*" }  ]
    }
}
Update the cluster
Update the cluster using the following operation:
PATCH https://management.azure.com/subscriptions/12345678-1234-1234-1234-123456789098/resourceGroups/kustorgtest/providers/Microsoft.Kusto/clusters/kustoclustertest?api-version=2020-09-18
PATCH https://management.azure.com/subscriptions/12345678-1234-1234-1234-123456789098/resourceGroups/kustorgtest/providers/Microsoft.Kusto/clusters/kustoclustertest?api-version=2020-09-18
Add Principals
After updating thetrustedExternalTenantsproperty, you can give access to principals from the approved tenants. Use the Azure portal to give a principalcluster level permissionsordatabase permissions. Alternatively, to give access to a database, table, function, or materialized view level, usemanagement commands.
trustedExternalTenants
Limitations
The configuration of this feature applies solely to Microsoft Entra identities (Users, Applications, Groups) trying to connect to Azure Data Explorer. It has no impact on cross Microsoft Entra ingestion.
Feedback
Was this page helpful?
Additional resources