Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Configure customer-managed keys for Azure Load Testing with Azure Key Vault
Article
2023-10-05
3 contributors
In this article
Azure Load Testing automatically encrypts all data stored in your load testing resource with keys that Microsoft provides (service-managed keys). Optionally, you can add a second layer of security by also providing your own (customer-managed) keys. Customer-managed keys offer greater flexibility for controlling access and using key-rotation policies.
The keys you provide are stored securely usingAzure Key Vault. You can create a separate key for each Azure load testing resource you enable with customer-managed keys.
When you use customer-managed encryption keys, you need to specify a user-assigned managed identity to retrieve the keys from Azure Key Vault.
Azure Load Testing uses the customer-managed key to encrypt the following data in the load testing resource:
Test script and configuration files
Secrets
Environment variables
Note
Azure Load Testing does not encrypt metrics data for a test run with your customer-managed key, including the JMeter metrics sampler names that you specify in the JMeter script and the request names that you specify in the Locust script. Microsoft has access to this metrics data.
Prerequisites
An Azure account with an active subscription. If you don't have an Azure subscription, create afree accountbefore you begin.
An Azure account with an active subscription. If you don't have an Azure subscription, create afree accountbefore you begin.
An existing user-assigned managed identity. For more information about creating a user-assigned managed identity, seeManage user-assigned managed identities.
An existing user-assigned managed identity. For more information about creating a user-assigned managed identity, seeManage user-assigned managed identities.
Limitations
Customer-managed keys are only available for new Azure load testing resources. You should configure the key during resource creation.
Customer-managed keys are only available for new Azure load testing resources. You should configure the key during resource creation.
Once customer-managed key encryption is enabled on a resource, it can't be disabled.
Once customer-managed key encryption is enabled on a resource, it can't be disabled.
Azure Load Testing can't automatically rotate the customer-managed key to use the latest version of the encryption key. You should update the key URI in the resource after the key is rotated in the Azure Key Vault.
Azure Load Testing can't automatically rotate the customer-managed key to use the latest version of the encryption key. You should update the key URI in the resource after the key is rotated in the Azure Key Vault.
Configure your Azure key vault
To use customer-managed encryption keys with Azure Load Testing, you need to store the key in Azure Key Vault. You can use an existing key vault or create a new one. The load testing resource and key vault may be in different regions or subscriptions in the same tenant.
Make sure to configure the following key vault settings when you use customer-managed encryption keys.
Configure key vault networking settings
If you restricted access to your Azure key vault by a firewall or virtual networking, you need to grant access to Azure Load Testing for retrieving your customer-managed keys. Follow these steps togrant access to trusted Azure services.
Important
Retrieving customer-managed keys from a private Azure key vault that has access restrictions is currently not supported inUS Gov Virginiaregion.
Configure soft delete and purge protection
You have to set theSoft DeleteandPurge Protectionproperties on your key vault to use customer-managed keys with Azure Load Testing. Soft delete is enabled by default when you create a new key vault and can't be disabled. You can enable purge protection at any time. Learn more aboutsoft delete and purge protection in Azure Key Vault.
Azure portal
PowerShell
Azure CLI
Follow these steps toverify if soft delete is enabled and enable it on a key vault. Soft delete is abled by default when you create a new key vault.
You can enable purge protection when youcreate a new key vaultby selecting theEnable purge protectionsettings.

To enable purge protection on an existing key vault, follow these steps:
Navigate to your key vault in the Azure portal.
UnderSettings, chooseProperties.
In thePurge protectionsection, chooseEnable purge protection.
To create a new key vault with PowerShell, install version 2.0.0 or later of theAz.KeyVaultPowerShell module. Then callNew-AzKeyVaultto create a new key vault. With version 2.0.0 and later of the Az.KeyVault module, soft delete is enabled by default when you create a new key vault.
The following example creates a new key vault with both soft delete and purge protection enabled. Remember to replace the placeholder values in brackets with your own values.
$keyVault = New-AzKeyVault -Name <key-vault-name> `
    -ResourceGroupName <resource-group> `
    -Location <location> `
    -EnablePurgeProtection
$keyVault = New-AzKeyVault -Name <key-vault-name> `
    -ResourceGroupName <resource-group> `
    -Location <location> `
    -EnablePurgeProtection
To enable purge protection on an existing key vault with PowerShell:
Update-AzKeyVault -VaultName <key-vault-name> -ResourceGroupName <resource-group> -EnablePurgeProtection
Update-AzKeyVault -VaultName <key-vault-name> -ResourceGroupName <resource-group> -EnablePurgeProtection
To create a new key vault using Azure CLI, callaz keyvault create. Soft delete is enabled by default when you create a new key vault.
The following example creates a new key vault with both soft delete and purge protection enabled. Remember to replace the placeholder values in brackets with your own values.
az keyvault create \
    --name <key-vault-name> \
    --resource-group <resource-group> \
    --location <region> \
    --enable-purge-protection
az keyvault create \
    --name <key-vault-name> \
    --resource-group <resource-group> \
    --location <region> \
    --enable-purge-protection
To enable purge protection on an existing key vault with Azure CLI:
az keyvault update --subscription <subscription-id> -g <resource-group> -n <key-vault-name> --enable-purge-protection true
az keyvault update --subscription <subscription-id> -g <resource-group> -n <key-vault-name> --enable-purge-protection true
Add a customer-managed key to Azure Key Vault
Next, add a key to the key vault. Azure Load Testing encryption supports RSA keys. For more information about supported key types in Azure Key Vault, seeAbout keys.
Azure portal
PowerShell
Azure CLI
To learn how to add a key with the Azure portal, seeSet and retrieve a key from Azure Key Vault using the Azure portal.
To add a key with PowerShell, callAdd-AzKeyVaultKey. Remember to replace the placeholder values in brackets with your own values and to use the variables defined in the previous examples.
$key = Add-AzKeyVaultKey -VaultName <key-vault-name> `
    -Name <key-name> `
    -Destination 'Software'
$key = Add-AzKeyVaultKey -VaultName <key-vault-name> `
    -Name <key-name> `
    -Destination 'Software'
To add a key with Azure CLI, callaz keyvault key create. Remember to replace the placeholder values in brackets with your own values.
az keyvault key create \
    --name <key-name> \
    --vault-name <key-vault-name>
az keyvault key create \
    --name <key-name> \
    --vault-name <key-vault-name>
Add an access policy to your key vault
When you use customer-managed encryption keys, you have to specify a user-assigned managed identity. The user-assigned managed identity for accessing the customer-managed keys in Azure Key Vault must have appropriate permissions to access the key vault.
In theAzure portal, go to the Azure key vault instance that you plan to use to host your encryption keys.
In theAzure portal, go to the Azure key vault instance that you plan to use to host your encryption keys.
SelectAccess Policiesfrom the left menu.
SelectAccess Policiesfrom the left menu.

Select+ Add Access Policy.
Select+ Add Access Policy.
In theKey permissionsdrop-down menu, selectGet,Unwrap Key, andWrap Keypermissions.
In theKey permissionsdrop-down menu, selectGet,Unwrap Key, andWrap Keypermissions.

InSelect principal, selectNone selected.
InSelect principal, selectNone selected.
Search for the user-assigned managed identity you created earlier, and select it from the list.
Search for the user-assigned managed identity you created earlier, and select it from the list.
ChooseSelectat the bottom.
ChooseSelectat the bottom.
SelectAddto add the new access policy.
SelectAddto add the new access policy.
SelectSaveon the key vault instance to save all changes.
SelectSaveon the key vault instance to save all changes.
Use customer-managed keys with Azure Load Testing
You can only configure customer-managed encryption keys when you create a new Azure load testing resource. When you specify the encryption key details, you also have to select a user-assigned managed identity to retrieve the key from Azure Key Vault.
To configure customer-managed keys for a new load testing resource, follow these steps:
Azure portal
PowerShell
Azure CLI
Follow these steps tocreate an Azure load testing resource in the Azure portaland fill out the fields on theBasicstab.
Follow these steps tocreate an Azure load testing resource in the Azure portaland fill out the fields on theBasicstab.
Go to theEncryptiontab, and then selectCustomer-managed keys (CMK)for theEncryption typefield.
Go to theEncryptiontab, and then selectCustomer-managed keys (CMK)for theEncryption typefield.
In theKey URIfield, paste the URI/key identifier of the Azure Key Vault key including the key version.
In theKey URIfield, paste the URI/key identifier of the Azure Key Vault key including the key version.
For theUser-assigned identityfield, select an existing user-assigned managed identity.
For theUser-assigned identityfield, select an existing user-assigned managed identity.
SelectReview + createto validate and create the new resource.
SelectReview + createto validate and create the new resource.

You can deploy an ARM template using PowerShell to automate the creation of your Azure resources. You can create any resource of typeMicrosoft.LoadTestService/loadtestswith customer managed key enabled for encryption by adding the following properties:
Microsoft.LoadTestService/loadtests
"encryption": {
            "keyUrl": "https://contosovault.vault.azure.net/keys/contosokek/abcdef01234567890abcdef012345678",
            "identity": {
                "type": "UserAssigned",
                "resourceId": "User assigned managed identity resource id"
            }
"encryption": {
            "keyUrl": "https://contosovault.vault.azure.net/keys/contosokek/abcdef01234567890abcdef012345678",
            "identity": {
                "type": "UserAssigned",
                "resourceId": "User assigned managed identity resource id"
            }
The following code sample shows an ARM template for creating a load testing resource with customer-managed keys enabled:
{
    "type": "Microsoft.LoadTestService/loadtests",
    "apiVersion": "2022-04-15-preview",
    "name": "[parameters('name')]",
    "location": "[parameters('location')]",
    "tags": "[parameters('tags')]",
    "identity": {
        "type": "userassigned",
        "userAssignedIdentities": {
            "User assigned managed identity resource id": {}
        }
    },
    "properties": {
        "encryption": {
            "identity": {
                "type": "UserAssigned",
                "resourceId": "User assigned managed identity resource id"
            },
            "keyUrl": "https://contosovault.vault.azure.net/keys/contosokek/abcdef01234567890abcdef012345678"
        }
    }
}
{
    "type": "Microsoft.LoadTestService/loadtests",
    "apiVersion": "2022-04-15-preview",
    "name": "[parameters('name')]",
    "location": "[parameters('location')]",
    "tags": "[parameters('tags')]",
    "identity": {
        "type": "userassigned",
        "userAssignedIdentities": {
            "User assigned managed identity resource id": {}
        }
    },
    "properties": {
        "encryption": {
            "identity": {
                "type": "UserAssigned",
                "resourceId": "User assigned managed identity resource id"
            },
            "keyUrl": "https://contosovault.vault.azure.net/keys/contosokek/abcdef01234567890abcdef012345678"
        }
    }
}
Deploy the above template to a resource group by usingNew-AzResourceGroupDeployment:
New-AzResourceGroupDeployment -ResourceGroupName <resource-group-name> -TemplateFile <path-to-template>
New-AzResourceGroupDeployment -ResourceGroupName <resource-group-name> -TemplateFile <path-to-template>
You can deploy an ARM template using Azure CLI to automate the creation of your Azure resources. You can create any resource of typeMicrosoft.LoadTestService/loadtestswith customer managed key enabled for encryption by adding the following properties:
Microsoft.LoadTestService/loadtests
"encryption": {
            "keyUrl": "https://contosovault.vault.azure.net/keys/contosokek/abcdef01234567890abcdef012345678",
            "identity": {
                "type": "UserAssigned",
                "resourceId": "User assigned managed identity resource id"
            }
"encryption": {
            "keyUrl": "https://contosovault.vault.azure.net/keys/contosokek/abcdef01234567890abcdef012345678",
            "identity": {
                "type": "UserAssigned",
                "resourceId": "User assigned managed identity resource id"
            }
The following code sample shows an ARM template for creating a load testing resource with customer-managed keys enabled:
{
    "type": "Microsoft.LoadTestService/loadtests",
    "apiVersion": "2022-04-15-preview",
    "name": "[parameters('name')]",
    "location": "[parameters('location')]",
    "tags": "[parameters('tags')]",
    "identity": {
        "type": "userassigned",
        "userAssignedIdentities": {
            "User assigned managed identity resource id": {}
        }
    },
    "properties": {
        "encryption": {
            "identity": {
                "type": "UserAssigned",
                "resourceId": "User assigned managed identity resource id"
            },
            "keyUrl": "https://contosovault.vault.azure.net/keys/contosokek/abcdef01234567890abcdef012345678"
        }
    }
}
{
    "type": "Microsoft.LoadTestService/loadtests",
    "apiVersion": "2022-04-15-preview",
    "name": "[parameters('name')]",
    "location": "[parameters('location')]",
    "tags": "[parameters('tags')]",
    "identity": {
        "type": "userassigned",
        "userAssignedIdentities": {
            "User assigned managed identity resource id": {}
        }
    },
    "properties": {
        "encryption": {
            "identity": {
                "type": "UserAssigned",
                "resourceId": "User assigned managed identity resource id"
            },
            "keyUrl": "https://contosovault.vault.azure.net/keys/contosokek/abcdef01234567890abcdef012345678"
        }
    }
}
Deploy the above template to a resource group by usingaz deployment group create:
az deployment group create --resource-group <resource-group-name> --template-file <path-to-template>
az deployment group create --resource-group <resource-group-name> --template-file <path-to-template>
Change the managed identity for retrieving the encryption key
You can change the managed identity for customer-managed keys for an existing load testing resource at any time.
In theAzure portal, go to your Azure load testing resource.
In theAzure portal, go to your Azure load testing resource.
On theSettingspage, selectEncryption.TheEncryption typeshows the encryption type that was used for creating the load testing resource.
On theSettingspage, selectEncryption.
TheEncryption typeshows the encryption type that was used for creating the load testing resource.
If the encryption type isCustomer-managed keys, select the type of identity to use to authenticate to the key vault. The options includeSystem-assigned(the default) orUser-assigned.To learn more about each type of managed identity, seeManaged identity types.If you selectSystem-assigned, the system-assigned managed identity needs to be enabled on the resource and granted access to the AKV before changing the identity for customer-managed keys.If you selectUser-assigned, you must select an existing user-assigned identity that has permissions to access the key vault. To learn how to create a user-assigned identity, seeUse managed identities for Azure Load Testing Preview.
If the encryption type isCustomer-managed keys, select the type of identity to use to authenticate to the key vault. The options includeSystem-assigned(the default) orUser-assigned.
To learn more about each type of managed identity, seeManaged identity types.
If you selectSystem-assigned, the system-assigned managed identity needs to be enabled on the resource and granted access to the AKV before changing the identity for customer-managed keys.
If you selectUser-assigned, you must select an existing user-assigned identity that has permissions to access the key vault. To learn how to create a user-assigned identity, seeUse managed identities for Azure Load Testing Preview.
Save your changes.
Save your changes.

Important
Make sure that the selectedmanaged identity has access to the Azure Key Vault.
Update the customer-managed encryption key
You can change the key that you're using for Azure Load Testing encryption at any time. To change the key with the Azure portal, follow these steps:
In theAzure portal, go to your Azure load testing resource.
In theAzure portal, go to your Azure load testing resource.
On theSettingspage, selectEncryption. TheEncryption typeshows the encryption selected for the resource while creation.
On theSettingspage, selectEncryption. TheEncryption typeshows the encryption selected for the resource while creation.
If the selected encryption type isCustomer-managed keys, you can edit theKey URIfield with the new key URI.
If the selected encryption type isCustomer-managed keys, you can edit theKey URIfield with the new key URI.
Save your changes.
Save your changes.
Rotate encryption keys
You can rotate a customer-managed key in Azure Key Vault according to your compliance policies. To rotate a key:
In Azure Key Vault, update the key version or create a new key.
Update the customer-managed encryption keyfor your load testing resource.
Frequently asked questions
Is there an extra charge to enable customer-managed keys?
No, there's no charge to enable this feature.
Are customer-managed keys supported for existing Azure load testing resources?
This feature is currently only available for new Azure load testing resources.
How can I tell if customer-managed keys are enabled on my Azure load testing resource?
In theAzure portal, go to your Azure load testing resource.
Go to theEncryptionitem in the left navigation bar.
You can verify theEncryption typeon your resource.
How do I revoke an encryption key?
You can revoke a key by disabling the latest version of the key in Azure Key Vault. Alternatively, to revoke all keys from a key vault instance, you can delete the access policy granted to the managed identity of the load testing resource.
When you revoke the encryption key you may be able to run tests for about 10 minutes, after which the only available operation is resource deletion. It's recommended to rotate the key instead of revoking it to manage resource security and retain your data.
Related content
Learn how toMonitor server-side application metrics.
Learn how toParameterize a load test with secrets and environment variables.
Feedback
Was this page helpful?
Additional resources