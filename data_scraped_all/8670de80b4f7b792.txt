Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Manage a Managed HSM using the Azure CLI
Article
2025-04-25
9 contributors
In this article
Note
Key Vault supports two types of resources: vaults and managed HSMs. This article is aboutManaged HSM. If you want to learn how to manage a vault, seeManage Key Vault using the Azure CLI.
For an overview of Managed HSM, seeWhat is Managed HSM?
Prerequisites
To complete the steps in this article, you must have the following items:
A Microsoft Azure subscription. If you don't have one, you can sign up for afree trial.
The Azure CLI version 2.25.0 or later. Runaz --versionto find the version. If you need to install or upgrade, seeInstall the Azure CLI.
az --version
A managed HSM in your subscription. SeeQuickstart: Provision and activate a managed HSM using Azure CLIto provision and activate a managed HSM.
Azure Cloud Shell
Azure hosts Azure Cloud Shell, an interactive shell environment that you can use through your browser. You can use either Bash or PowerShell with Cloud Shell to work with Azure services. You can use the Cloud Shell preinstalled commands to run the code in this article, without having to install anything on your local environment.
To start Azure Cloud Shell:
To use Azure Cloud Shell:
Start Cloud Shell.
Start Cloud Shell.
Select theCopybutton on a code block (or command block) to copy the code or command.
Select theCopybutton on a code block (or command block) to copy the code or command.
Paste the code or command into the Cloud Shell session by selectingCtrl+Shift+Von Windows and Linux, or by selectingCmd+Shift+Von macOS.
Paste the code or command into the Cloud Shell session by selectingCtrl+Shift+Von Windows and Linux, or by selectingCmd+Shift+Von macOS.
SelectEnterto run the code or command.
SelectEnterto run the code or command.
Sign in to Azure
Sign in to Azure using the CLI by typing:
az login
az login
For more information on sign in options via the CLI, seesign in with Azure CLI
Note
All the commands following commands show two usage methods. One using--hsm-nameand--name(for key name) parameters and another using--idparameter where you can specify the entire url including the key name where appropriate. The latter method is useful when the caller (a user or an application) has no read access on the control plane and only restricted access on the data plane.
--hsm-name
--name
--id
Note
Some interactions with key material require specific Local RBAC permissions. For a full list of built-in Local RBAC roles and permissions, seeManaged HSM local RBAC built-in roles. To assign these permissions to a user, seeSecure access to your managed HSMs
Create an HSM key
Note
A key that's generated or imported into Managed HSM cannot be exported. The only exception to the no-export rule is when you create a key with a specifickey release policy. This policy allows the key to be exported only to trusted confidential computing environments (secure enclaves) that you explicitly define. This limited export capability is designed for specific secure computing scenarios and is not the same as a general-purpose key export. Refer to recommended best practices for key portability and durability.
Useaz keyvault key createcommand to create a key.
az keyvault key create
Create an RSA key
This example shows how to create a 3072-bitRSAkey that is only used forwrapKey, unwrapKeyoperations (--ops).
az keyvault key create --hsm-name ContosoMHSM --name myrsakey --ops wrapKey unwrapKey --kty RSA-HSM --size 3072

## OR
# Note the key name (myrsakey) in the URI

az keyvault key create --id https://ContosoMHSM.managedhsm.azure.net/keys/myrsakey --ops wrapKey unwrapKey --kty RSA-HSM --size 3072
az keyvault key create --hsm-name ContosoMHSM --name myrsakey --ops wrapKey unwrapKey --kty RSA-HSM --size 3072

## OR
# Note the key name (myrsakey) in the URI

az keyvault key create --id https://ContosoMHSM.managedhsm.azure.net/keys/myrsakey --ops wrapKey unwrapKey --kty RSA-HSM --size 3072
Note, that thegetoperation only returns the public key and key attributes. It does not return the private key (if a asymmetric key) or the key material (if a symmetric key).
get
Create an EC key
The example below shows how to create anECkey with P-256 curve that will be only used forsign and verifyoperations (--ops) and has two tags,usageandappname. Tags help you add additional metadata to the key for tracking and managing.
az keyvault key create --hsm-name ContosoMHSM --name myec256key --ops sign verify  --tags âusage=signing] appname=myappâ --kty EC-HSM --curve P-256

## OR
# Note the key name (myec256key) in the URI

az keyvault key create --id https://ContosoMHSM.managedhsm.azure.net/keys/myec256key --ops sign verify  --tags âusage=signing] appname=myappâ --kty EC-HSM --curve P-256
az keyvault key create --hsm-name ContosoMHSM --name myec256key --ops sign verify  --tags âusage=signing] appname=myappâ --kty EC-HSM --curve P-256

## OR
# Note the key name (myec256key) in the URI

az keyvault key create --id https://ContosoMHSM.managedhsm.azure.net/keys/myec256key --ops sign verify  --tags âusage=signing] appname=myappâ --kty EC-HSM --curve P-256
Create a 256-bit symmetric key
This example shows how to create a 256-bitsymmetrickey that will be only used forencrypt and decryptoperations (--ops).
az keyvault key create --hsm-name ContosoMHSM --name myaeskey --ops encrypt decrypt  --tags --kty oct-HSM --size 256

## OR
# Note the key name (myaeskey) in the URI

az keyvault key create --id https://ContosoMHSM.managedhsm.azure.net/keys/myaeskey --ops encrypt decrypt  --tags âusage=signing] appname=myappâ --kty oct-HSM --size 256
az keyvault key create --hsm-name ContosoMHSM --name myaeskey --ops encrypt decrypt  --tags --kty oct-HSM --size 256

## OR
# Note the key name (myaeskey) in the URI

az keyvault key create --id https://ContosoMHSM.managedhsm.azure.net/keys/myaeskey --ops encrypt decrypt  --tags âusage=signing] appname=myappâ --kty oct-HSM --size 256
View key attributes and tags
Useaz keyvault key showcommand to view attributes, versions, and tags for a key.
az keyvault key show
az keyvault key show --hsm-name ContosoHSM --name myrsakey

## OR
# Note the key name (myaeskey) in the URI

az keyvault key show --id https://ContosoMHSM.managedhsm.azure.net/keys/myrsakey
az keyvault key show --hsm-name ContosoHSM --name myrsakey

## OR
# Note the key name (myaeskey) in the URI

az keyvault key show --id https://ContosoMHSM.managedhsm.azure.net/keys/myrsakey
List keys
Useaz keyvault key listcommand to list all keys inside a managed HSM.
az keyvault key list
az keyvault key list --hsm-name ContosoHSM

## OR
# use full URI

az keyvault key list --id https://ContosoMHSM.managedhsm.azure.net/
az keyvault key list --hsm-name ContosoHSM

## OR
# use full URI

az keyvault key list --id https://ContosoMHSM.managedhsm.azure.net/
Delete a key
Useaz keyvault key deletecommand to delete a key from a managed HSM. Soft-delete is always on. Therefore a deleted key remains in deleted state and can be recovered until the number of retention days have passed, at which point the key is purged (permanently deleted) with no recovery possible.
az keyvault key delete
az keyvault key delete --hsm-name ContosoHSM --name myrsakey

## OR
# Note the key name (myaeskey) in the URI

az keyvault key delete --id https://ContosoMHSM.managedhsm.azure.net/keys/myrsakey
az keyvault key delete --hsm-name ContosoHSM --name myrsakey

## OR
# Note the key name (myaeskey) in the URI

az keyvault key delete --id https://ContosoMHSM.managedhsm.azure.net/keys/myrsakey
List deleted keys
Useaz keyvault key list-deletedcommand to list all the keys in deleted state in your managed HSM.
az keyvault key list-deleted
az keyvault key list-deleted --hsm-name ContosoHSM

## OR
# use full URI

az keyvault key list-deleted --id https://ContosoMHSM.managedhsm.azure.net/
az keyvault key list-deleted --hsm-name ContosoHSM

## OR
# use full URI

az keyvault key list-deleted --id https://ContosoMHSM.managedhsm.azure.net/
Recover (undelete) a deleted key
Useaz keyvault key list-deletedcommand to list all the keys in deleted state in your managed HSM. If you need to recover (undelete) a key using the--idparameter while recovering a deleted key, you must note therecoveryIdvalue of the deleted key obtained from theaz keyvault key list-deletedcommand.
az keyvault key list-deleted
--id
recoveryId
az keyvault key list-deleted
az keyvault key recover --hsm-name ContosoHSM --name myrsakey

## OR
# Note the key name (myaeskey) in the URI

az keyvault key recover --id https://ContosoMHSM.managedhsm.azure.net/deletedKeys/myrsakey
az keyvault key recover --hsm-name ContosoHSM --name myrsakey

## OR
# Note the key name (myaeskey) in the URI

az keyvault key recover --id https://ContosoMHSM.managedhsm.azure.net/deletedKeys/myrsakey
Purge (permanently delete) a key
Useaz keyvault key purgecommand to purge (permanently delete) a key.
az keyvault key purge
Note
If the managed HSM has purge protection enabled, purge operation is not permitted. The key is automatically purged when the retention period has passed.
az keyvault key purge --hsm-name ContosoHSM --name myrsakey

## OR
# Note the key name (myaeskey) in the URI

az keyvault key purge --id https://ContosoMHSM.managedhsm.azure.net/deletedKeys/myrsakey
az keyvault key purge --hsm-name ContosoHSM --name myrsakey

## OR
# Note the key name (myaeskey) in the URI

az keyvault key purge --id https://ContosoMHSM.managedhsm.azure.net/deletedKeys/myrsakey
Create a single key backup
Useaz keyvault key backupto create a key backup. The backup file is an encrypted blob cryptographically tied to the Security Domain of the source HSM. It can only be restored in HSMs that share the same security domain. Read more aboutSecurity Domain.
az keyvault key backup
az keyvault key backup --hsm-name ContosoHSM --name myrsakey --file myrsakey.backup

## OR
# Note the key name (myaeskey) in the URI

az keyvault key backup --id https://ContosoMHSM.managedhsm.azure.net/deletedKeys/myrsakey  --file myrsakey.backup
az keyvault key backup --hsm-name ContosoHSM --name myrsakey --file myrsakey.backup

## OR
# Note the key name (myaeskey) in the URI

az keyvault key backup --id https://ContosoMHSM.managedhsm.azure.net/deletedKeys/myrsakey  --file myrsakey.backup
Restore a single key from backup
Useaz keyvault key restoreto restore a single key. The source HSM where the backup was created must share the same security domain as the target HSM where the key is being restored.
az keyvault key restore
Note
The restore will not succeed if a key with same name exists in active or deleted state.
az keyvault key restore --hsm-name ContosoHSM --name myrsakey --file myrsakey.backup

## OR
# Note the key name (myaeskey) in the URI

az keyvault key restore --id https://ContosoMHSM.managedhsm.azure.net/deletedKeys/myrsakey --file myrsakey.backup
az keyvault key restore --hsm-name ContosoHSM --name myrsakey --file myrsakey.backup

## OR
# Note the key name (myaeskey) in the URI

az keyvault key restore --id https://ContosoMHSM.managedhsm.azure.net/deletedKeys/myrsakey --file myrsakey.backup
Import a key from a file
Useaz keyvault key importcommand to import a key (only RSA and EC) from a file. The certificate file must have private key and must use PEM encoding (as defined in RFCs1421,1422,1423,1424).
az keyvault key import
az keyvault key import --hsm-name ContosoHSM --name myrsakey --pem-file mycert.key --pem-password 'mypassword'

## OR
# Note the key name (myaeskey) in the URI

az keyvault key recover --id https://ContosoMHSM.managedhsm.azure.net/deletedKeys/myrsakey --pem-file mycert.key --password 'mypassword'
az keyvault key import --hsm-name ContosoHSM --name myrsakey --pem-file mycert.key --pem-password 'mypassword'

## OR
# Note the key name (myaeskey) in the URI

az keyvault key recover --id https://ContosoMHSM.managedhsm.azure.net/deletedKeys/myrsakey --pem-file mycert.key --password 'mypassword'
To import a key from your on-premises HSM to managed HSM, seeImport HSM-protected keys to Managed HSM (BYOK)
Next steps
For complete Azure CLI reference for key vault commands, seeKey Vault CLI reference.
For programming references, seethe Azure Key Vault developer's guide
Learn more aboutManaged HSM role management
Learn more aboutManaged HSM best practices
Feedback
Was this page helpful?
Additional resources