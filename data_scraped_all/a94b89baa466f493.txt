Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
T-SQL differences between SQL Server and Azure SQL Managed Instance
Article
2025-04-23
36 contributors
In this article
Applies to:Azure SQL Managed Instance
This article summarizes and explains the differences in syntax and behavior between Azure SQL Managed Instance and SQL Server.
SQL Managed Instance provides high compatibility with the SQL Server database engine, and most features are supported in a SQL Managed Instance.


There are some PaaS limitations that are introduced in SQL Managed Instance and some behavior changes compared to SQL Server. The differences are divided into the following categories:
Availabilityincludes the differences inAlways On Availability Groupsandbackups.
Securityincludes the differences inauditing,certificates,credentials,cryptographic providers,logins and users, and theservice key and service master key.
Configurationincludes the differences inbuffer pool extension,collation,compatibility levels,database mirroring,database options,SQL Server Agent, andtable options.
FunctionalitiesincludeBULK INSERT/OPENROWSET,CLR,DBCC,distributed transactions,extended events,external libraries,FILESTREAM and FileTable,full-text Semantic Search,linked servers,PolyBase,Replication,Resource governor,RESTORE,Service Broker,stored procedures, functions, and triggers.
Environment settingssuch as VNets and subnet configurations.
Most of these features are architectural constraints and represent service features.
Temporary known issues that are discovered in SQL Managed Instance and will be resolved in the future are described inWhat's new in Azure SQL Managed Instance?
Note
Microsoft Entra IDwas previously known as Azure Active Directory (Azure AD).
Availability
Always On availability groups
High availabilityis built into SQL Managed Instance and can't be controlled by users. The following statements aren't supported:
CREATE ENDPOINT ... FOR DATABASE_MIRRORING
CREATE AVAILABILITY GROUP
ALTER AVAILABILITY GROUP
DROP AVAILABILITY GROUP
TheSET HADRclause of theALTER DATABASEstatement
Backup
Azure SQL Managed Instance has automatic backups, so users can create full databaseCOPY_ONLYbackups. Differential, log, and file snapshot backups aren't supported.
COPY_ONLY
With a SQL Managed Instance, you can back up an instance database only to an Azure Blob storage account:OnlyBACKUP TO URLis supported.FILE,TAPE, and backup devices aren't supported.
OnlyBACKUP TO URLis supported.
BACKUP TO URL
FILE,TAPE, and backup devices aren't supported.
FILE
TAPE
Most of the generalWITHoptions are supported.COPY_ONLYis mandatory.FILE_SNAPSHOTandCREDENTIALaren't supported.Tape options:REWIND,NOREWIND,UNLOAD, andNOUNLOADaren't supported.Log-specific options:NORECOVERY,STANDBY, andNO_TRUNCATEaren't supported.
WITH
COPY_ONLYis mandatory.
COPY_ONLY
FILE_SNAPSHOTandCREDENTIALaren't supported.
FILE_SNAPSHOT
CREDENTIAL
Tape options:REWIND,NOREWIND,UNLOAD, andNOUNLOADaren't supported.
REWIND
NOREWIND
UNLOAD
NOUNLOAD
Log-specific options:NORECOVERY,STANDBY, andNO_TRUNCATEaren't supported.
NORECOVERY
STANDBY
NO_TRUNCATE
Limitations:
With a SQL Managed Instance, you can back up an instance database to a backup with up to 32 stripes, which is enough for databases up to 4 TB if backup compression is used.
With a SQL Managed Instance, you can back up an instance database to a backup with up to 32 stripes, which is enough for databases up to 4 TB if backup compression is used.
You can't executeBACKUP DATABASE ... WITH COPY_ONLYon a database that's encrypted with service-managed transparent data encryption (TDE). Service-managed TDE forces backups to be encrypted with an internal TDE key. The key can't be exported, so you can't restore the backup. Use automatic backups and point-in-time restore, or usecustomer-managed (BYOK) TDEinstead. You also can disable encryption on the database.
You can't executeBACKUP DATABASE ... WITH COPY_ONLYon a database that's encrypted with service-managed transparent data encryption (TDE). Service-managed TDE forces backups to be encrypted with an internal TDE key. The key can't be exported, so you can't restore the backup. Use automatic backups and point-in-time restore, or usecustomer-managed (BYOK) TDEinstead. You also can disable encryption on the database.
BACKUP DATABASE ... WITH COPY_ONLY
Native backups taken on a SQL Managed Instance can be restored to a SQL Server 2022 instance only. This is because SQL Managed Instance has higher internal database version compared to other versions of SQL Server. For more information, reviewRestore a database to SQL Server 2022 from Azure SQL Managed Instance.
Native backups taken on a SQL Managed Instance can be restored to a SQL Server 2022 instance only. This is because SQL Managed Instance has higher internal database version compared to other versions of SQL Server. For more information, reviewRestore a database to SQL Server 2022 from Azure SQL Managed Instance.
To back up or restore a database to/from an Azure storage, you can authenticate using either managed identity or shared access signature (SAS) which is an URI that grants you restricted access rights to Azure Storage resourcesLearn more on this. Using Access keys for these scenarios isn't supported.
To back up or restore a database to/from an Azure storage, you can authenticate using either managed identity or shared access signature (SAS) which is an URI that grants you restricted access rights to Azure Storage resourcesLearn more on this. Using Access keys for these scenarios isn't supported.
The maximum backup stripe size by using theBACKUPcommand in SQL Managed Instance is 195 GB, which is the maximum blob size. Increase the number of stripes in the backup command to reduce individual stripe size and stay within this limit.TipTo work around this limitation, when you back up a database from either SQL Server in an on-premises environment or in a virtual machine, you can:Back up toDISKinstead of backing up toURL.Upload the backup files to Blob storage.Restore into SQL Managed Instance.TheRestorecommand in SQL Managed Instance supports bigger blob sizes in the backup files because a different blob type is used for storage of the uploaded backup files.
The maximum backup stripe size by using theBACKUPcommand in SQL Managed Instance is 195 GB, which is the maximum blob size. Increase the number of stripes in the backup command to reduce individual stripe size and stay within this limit.
BACKUP
Tip
To work around this limitation, when you back up a database from either SQL Server in an on-premises environment or in a virtual machine, you can:
Back up toDISKinstead of backing up toURL.
DISK
URL
Upload the backup files to Blob storage.
Restore into SQL Managed Instance.
TheRestorecommand in SQL Managed Instance supports bigger blob sizes in the backup files because a different blob type is used for storage of the uploaded backup files.
Restore
For information about backups using T-SQL, seeBACKUP.
Security
Auditing
The key differences between auditing in Microsoft Azure SQL and in SQL Server are:
With SQL Managed Instance, auditing works at the server level. The.xellog files are stored in Azure Blob storage.
.xel
With Azure SQL Database, auditing works at the database level. The.xellog files are stored in Azure Blob storage.
.xel
With SQL Server, on-premises or in virtual machines, auditing works at the server level. Events are stored on file system or Windows event logs.
XEvent auditing in SQL Managed Instance supports Azure Blob storage targets. File and Windows logs aren't supported.
The key differences in theCREATE AUDITsyntax for auditing to Azure Blob storage are:
CREATE AUDIT
A new syntaxTO URLis provided to specify the URL of the Azure Blob storage container where the.xelfiles are placed.
TO URL
.xel
The syntaxTO FILEisn't supported because SQL Managed Instance can't access Windows file shares.
TO FILE
For more information, see:
CREATE SERVER AUDIT
ALTER SERVER AUDIT
Auditing
Certificates
SQL Managed Instance can't access file shares and Windows folders, so the following constraints apply:
TheCREATE FROM/BACKUP TOfile isn't supported for certificates.
CREATE FROM
BACKUP TO
TheCREATE/BACKUPcertificate fromFILE/ASSEMBLYisn't supported. Private key files can't be used.
CREATE
BACKUP
FILE
ASSEMBLY
SeeCREATE CERTIFICATEandBACKUP CERTIFICATE.
Workaround: Instead of creating backup of certificate and restoring the backup,get the certificate binary content and private key, store it as .sql file, and create from binary:
CREATE CERTIFICATE
   FROM BINARY = asn_encoded_certificate
WITH PRIVATE KEY (<private_key_options>);
CREATE CERTIFICATE
   FROM BINARY = asn_encoded_certificate
WITH PRIVATE KEY (<private_key_options>);
Credential
Managed identity, Azure Key Vault andSHARED ACCESS SIGNATUREidentities are supported. Windows users aren't supported.
SHARED ACCESS SIGNATURE
SeeCREATE CREDENTIALandALTER CREDENTIAL.
Cryptographic providers
SQL Managed Instance can't access files, so cryptographic providers can't be created:
CREATE CRYPTOGRAPHIC PROVIDERisn't supported. SeeCREATE CRYPTOGRAPHIC PROVIDER.
CREATE CRYPTOGRAPHIC PROVIDER
ALTER CRYPTOGRAPHIC PROVIDERisn't supported. SeeALTER CRYPTOGRAPHIC PROVIDER.
ALTER CRYPTOGRAPHIC PROVIDER
Logins and users
SQL logins created by usingFROM CERTIFICATE,FROM ASYMMETRIC KEY, andFROM SIDare supported. SeeCREATE LOGIN.
Server principals (logins) are created at the server level, and users (database principals) are created at the database level. Microsoft Entra logins created with theCREATE LOGINsyntax and Microsoft Entra users created with theCREATE USER FROM LOGINsyntax are supported. When creating a user and specifyingFROM LOGIN, that user is associated to the login, and inherits the server roles and permissions assigned to it.SQL Managed Instance supports creating contained database users based on Microsoft Entra identities with the syntaxCREATE USER [AADUser/AAD group] FROM EXTERNAL PROVIDER. Users created this way aren't associated to server principals, even if a server principal with the same name exists in themasterdatabase.
SQL logins created by usingFROM CERTIFICATE,FROM ASYMMETRIC KEY, andFROM SIDare supported. SeeCREATE LOGIN.
Server principals (logins) are created at the server level, and users (database principals) are created at the database level. Microsoft Entra logins created with theCREATE LOGINsyntax and Microsoft Entra users created with theCREATE USER FROM LOGINsyntax are supported. When creating a user and specifyingFROM LOGIN, that user is associated to the login, and inherits the server roles and permissions assigned to it.
FROM CERTIFICATE
FROM ASYMMETRIC KEY
FROM SID
FROM LOGIN
SQL Managed Instance supports creating contained database users based on Microsoft Entra identities with the syntaxCREATE USER [AADUser/AAD group] FROM EXTERNAL PROVIDER. Users created this way aren't associated to server principals, even if a server principal with the same name exists in themasterdatabase.
CREATE USER [AADUser/AAD group] FROM EXTERNAL PROVIDER
master
Windows logins created with theCREATE LOGIN ... FROM WINDOWSsyntax aren't supported. Use Microsoft Entra logins and users.
Windows logins created with theCREATE LOGIN ... FROM WINDOWSsyntax aren't supported. Use Microsoft Entra logins and users.
CREATE LOGIN ... FROM WINDOWS
The Microsoft Entra admin for the instance hasunrestricted admin privileges.
The Microsoft Entra admin for the instance hasunrestricted admin privileges.
Some features don't support using Microsoft Entra logins in cross-instance interactions, but only within a single SQL Managed Instance, such as SQL Server replication for example. Linked server feature though supports cross-instance authentication using Microsoft Entra server principals (logins).
Some features don't support using Microsoft Entra logins in cross-instance interactions, but only within a single SQL Managed Instance, such as SQL Server replication for example. Linked server feature though supports cross-instance authentication using Microsoft Entra server principals (logins).
Setting a Microsoft Entra login mapped to a Microsoft Entra group as the database owner isn't supported. A member of the Microsoft Entra group can be a database owner, even if the login hasn't been created in the database.
Setting a Microsoft Entra login mapped to a Microsoft Entra group as the database owner isn't supported. A member of the Microsoft Entra group can be a database owner, even if the login hasn't been created in the database.
Impersonation of Microsoft Entra server-level principals by using other Microsoft Entra principals is supported, such as theEXECUTE ASclause. EXECUTE AS limitations are:EXECUTE AS USER isn't supported for Microsoft Entra users when the name differs from the login name. An example is when the user is created through the syntaxCREATE USER [myAadUser] FROM LOGIN [john@contoso.com]and impersonation is attempted throughEXEC AS USER = myAadUser. When you create aUSERfrom a Microsoft Entra login, specify the user_name as the same login_name fromLOGIN.Only SQL Server-level logins that are part of thesysadminrole can execute the following operations that target Microsoft Entra principals:EXECUTE AS USEREXECUTE AS LOGINTo impersonate a user with EXECUTE AS statement, the user needs to be mapped directly to Microsoft Entra login. Users that are members of Microsoft Entra groups mapped into Microsoft Entra server principals can't effectively be impersonated with EXECUTE AS statement, even though the caller has the impersonate permissions on the specified user name.
Impersonation of Microsoft Entra server-level principals by using other Microsoft Entra principals is supported, such as theEXECUTE ASclause. EXECUTE AS limitations are:
EXECUTE AS USER isn't supported for Microsoft Entra users when the name differs from the login name. An example is when the user is created through the syntaxCREATE USER [myAadUser] FROM LOGIN [john@contoso.com]and impersonation is attempted throughEXEC AS USER = myAadUser. When you create aUSERfrom a Microsoft Entra login, specify the user_name as the same login_name fromLOGIN.
EXECUTE AS USER isn't supported for Microsoft Entra users when the name differs from the login name. An example is when the user is created through the syntaxCREATE USER [myAadUser] FROM LOGIN [john@contoso.com]and impersonation is attempted throughEXEC AS USER = myAadUser. When you create aUSERfrom a Microsoft Entra login, specify the user_name as the same login_name fromLOGIN.
CREATE USER [myAadUser] FROM LOGIN [john@contoso.com]
EXEC AS USER = myAadUser
Only SQL Server-level logins that are part of thesysadminrole can execute the following operations that target Microsoft Entra principals:EXECUTE AS USEREXECUTE AS LOGIN
Only SQL Server-level logins that are part of thesysadminrole can execute the following operations that target Microsoft Entra principals:
sysadmin
EXECUTE AS USER
EXECUTE AS LOGIN
To impersonate a user with EXECUTE AS statement, the user needs to be mapped directly to Microsoft Entra login. Users that are members of Microsoft Entra groups mapped into Microsoft Entra server principals can't effectively be impersonated with EXECUTE AS statement, even though the caller has the impersonate permissions on the specified user name.
To impersonate a user with EXECUTE AS statement, the user needs to be mapped directly to Microsoft Entra login. Users that are members of Microsoft Entra groups mapped into Microsoft Entra server principals can't effectively be impersonated with EXECUTE AS statement, even though the caller has the impersonate permissions on the specified user name.
Database export/import using bacpac files are supported for Microsoft Entra users in SQL Managed Instance using eitherSSMS V18.4 or later, orSqlPackage.The following configurations are supported using database bacpac file:Export/import a database between different manage instances within the same Microsoft Entra domain.Export a database from SQL Managed Instance and import to SQL Database within the same Microsoft Entra domain.Export a database from SQL Database and import to SQL Managed Instance within the same Microsoft Entra domain.Export a database from SQL Managed Instance and import to SQL Server (version 2012 or later).In this configuration, all Microsoft Entra users are created as SQL Server database principals (users) without logins. The type of users isSQLand is visible asSQL_USERinsys.database_principals. Their permissions and roles remain in the SQL Server database metadata and can be used for impersonation. However, they can't be used to access and sign in to the SQL Server using their credentials.
Database export/import using bacpac files are supported for Microsoft Entra users in SQL Managed Instance using eitherSSMS V18.4 or later, orSqlPackage.
The following configurations are supported using database bacpac file:Export/import a database between different manage instances within the same Microsoft Entra domain.Export a database from SQL Managed Instance and import to SQL Database within the same Microsoft Entra domain.Export a database from SQL Database and import to SQL Managed Instance within the same Microsoft Entra domain.Export a database from SQL Managed Instance and import to SQL Server (version 2012 or later).In this configuration, all Microsoft Entra users are created as SQL Server database principals (users) without logins. The type of users isSQLand is visible asSQL_USERinsys.database_principals. Their permissions and roles remain in the SQL Server database metadata and can be used for impersonation. However, they can't be used to access and sign in to the SQL Server using their credentials.
Export/import a database between different manage instances within the same Microsoft Entra domain.
Export a database from SQL Managed Instance and import to SQL Database within the same Microsoft Entra domain.
Export a database from SQL Database and import to SQL Managed Instance within the same Microsoft Entra domain.
Export a database from SQL Managed Instance and import to SQL Server (version 2012 or later).In this configuration, all Microsoft Entra users are created as SQL Server database principals (users) without logins. The type of users isSQLand is visible asSQL_USERinsys.database_principals. Their permissions and roles remain in the SQL Server database metadata and can be used for impersonation. However, they can't be used to access and sign in to the SQL Server using their credentials.
In this configuration, all Microsoft Entra users are created as SQL Server database principals (users) without logins. The type of users isSQLand is visible asSQL_USERinsys.database_principals. Their permissions and roles remain in the SQL Server database metadata and can be used for impersonation. However, they can't be used to access and sign in to the SQL Server using their credentials.
SQL
SQL_USER
sys.database_principals
Only the server-level principal login, which is created by the SQL Managed Instance provisioning process, members of the server roles, such assecurityadminorsysadmin, or other logins with ALTER ANY LOGIN permission at the server level can create Microsoft Entra server principals (logins) in themasterdatabase for SQL Managed Instance.
Only the server-level principal login, which is created by the SQL Managed Instance provisioning process, members of the server roles, such assecurityadminorsysadmin, or other logins with ALTER ANY LOGIN permission at the server level can create Microsoft Entra server principals (logins) in themasterdatabase for SQL Managed Instance.
securityadmin
sysadmin
master
SQL auth-based logins must be assigned thesysadminrole to create logins for Microsoft Entra identities.
SQL auth-based logins must be assigned thesysadminrole to create logins for Microsoft Entra identities.
sysadmin
The login must be a member of the same Microsoft Entra tenant that the Azure SQL Managed Instance is hosted in.
The login must be a member of the same Microsoft Entra tenant that the Azure SQL Managed Instance is hosted in.
Microsoft Entra server principals (logins) are visible in Object Explorer starting with SQL Server Management Studio 18.0 preview 5.
Microsoft Entra server principals (logins) are visible in Object Explorer starting with SQL Server Management Studio 18.0 preview 5.
A server principal withsysadminaccess level is automatically created for the Microsoft Entra admin once it's enabled on an instance.
A server principal withsysadminaccess level is automatically created for the Microsoft Entra admin once it's enabled on an instance.
During authentication, the following sequence is applied to resolve the authenticating principal:If the Microsoft Entra account is directly mapped to a Microsoft Entra login, which is present insys.server_principalsas type "E," grant access and apply permissions of that login.If the Microsoft Entra account is a member of a group that's mapped to a Microsoft Entra login, which is present insys.server_principalsas type "X," grant access and apply permissions of that login.If the Microsoft Entra account exists as directly mapped to a Microsoft Entra user in a database, which is present insys.database_principalsas type "E," grant access and apply permissions of the Microsoft Entra database user.If the Microsoft Entra account is a member of a Microsoft Entra group that's mapped to a Microsoft Entra user in a database, which is present insys.database_principalsas type "X," grant access and apply permissions of the Microsoft Entra group user.
During authentication, the following sequence is applied to resolve the authenticating principal:
If the Microsoft Entra account is directly mapped to a Microsoft Entra login, which is present insys.server_principalsas type "E," grant access and apply permissions of that login.
sys.server_principals
If the Microsoft Entra account is a member of a group that's mapped to a Microsoft Entra login, which is present insys.server_principalsas type "X," grant access and apply permissions of that login.
sys.server_principals
If the Microsoft Entra account exists as directly mapped to a Microsoft Entra user in a database, which is present insys.database_principalsas type "E," grant access and apply permissions of the Microsoft Entra database user.
sys.database_principals
If the Microsoft Entra account is a member of a Microsoft Entra group that's mapped to a Microsoft Entra user in a database, which is present insys.database_principalsas type "X," grant access and apply permissions of the Microsoft Entra group user.
sys.database_principals
Service key and service master key
Master key backupisn't supported (managed by SQL Database service).
Master key restoreisn't supported (managed by SQL Database service).
Service master key backupisn't supported (managed by SQL Database service).
Service master key restoreisn't supported (managed by SQL Database service).
Configuration
Buffer pool extension
Buffer pool extensionisn't supported.
ALTER SERVER CONFIGURATION SET BUFFER POOL EXTENSIONisn't supported. SeeALTER SERVER CONFIGURATION.
ALTER SERVER CONFIGURATION SET BUFFER POOL EXTENSION
Collation
The default instance collation isSQL_Latin1_General_CP1_CI_ASand can be specified as a creation parameter. SeeCollations.
SQL_Latin1_General_CP1_CI_AS
Compatibility levels
Supported compatibility levels are 100, 110, 120, 130, 140, 150 and 160.
Compatibility levels below 100 aren't supported.
The default compatibility level for new databases is 150. For restored databases, the compatibility level remains unchanged if it was 100 and above.
SeeALTER DATABASE compatibility level.
Database mirroring
Database mirroring isn't supported.
ALTER DATABASE SET PARTNERandSET WITNESSoptions aren't supported.
ALTER DATABASE SET PARTNER
SET WITNESS
CREATE ENDPOINT ... FOR DATABASE_MIRRORINGisn't supported.
CREATE ENDPOINT ... FOR DATABASE_MIRRORING
For more information, seeALTER DATABASE SET PARTNER and SET WITNESSandCREATE ENDPOINT ... FOR DATABASE_MIRRORING.
Database options
Multiple log files aren't supported.
In-memory objects aren't supported in the General Purpose service tier.
There's a limit of 280 files per General Purpose instance, which implies a maximum of 280 files per database. Both data and log files in the General Purpose tier are counted toward this limit.The Business Critical tier supports 32,767 files per database.
The database can't contain filegroups that contain FILESTREAM data. Restore fails if.bakcontainsFILESTREAMdata.
.bak
FILESTREAM
Every file is placed in Azure Blob storage. IO and throughput per file depend on the size of each individual file.
The following limitations apply toCREATE DATABASE:
CREATE DATABASE
Files and filegroups can't be defined.
Files and filegroups can't be defined.
A memory-optimized filegroup and file are automatically added and are called XTP.
A memory-optimized filegroup and file are automatically added and are called XTP.
TheCONTAINMENToption isn't supported.
TheCONTAINMENToption isn't supported.
CONTAINMENT
WITHoptions aren't supported.TipAs a workaround, useALTER DATABASEafterCREATE DATABASEto set database options to add files or to set containment.
WITHoptions aren't supported.
WITH
Tip
As a workaround, useALTER DATABASEafterCREATE DATABASEto set database options to add files or to set containment.
ALTER DATABASE
CREATE DATABASE
TheFOR ATTACHoption isn't supported.
TheFOR ATTACHoption isn't supported.
FOR ATTACH
TheAS SNAPSHOT OFoption isn't supported.
TheAS SNAPSHOT OFoption isn't supported.
AS SNAPSHOT OF
For more information, seeCREATE DATABASE.
Some file properties can't be set or changed:
A file path can't be specified in theALTER DATABASE ADD FILE (FILENAME='path')T-SQL statement. RemoveFILENAMEfrom the script because SQL Managed Instance automatically places the files.
ALTER DATABASE ADD FILE (FILENAME='path')
FILENAME
A file name can't be changed by using theALTER DATABASEstatement.
ALTER DATABASE
Altering XTP file or filegroup isn't allowed.
The following options are set by default and can't be changed:
MULTI_USER
MULTI_USER
ENABLE_BROKER
ENABLE_BROKER
AUTO_CLOSE OFF
AUTO_CLOSE OFF
The following options can't be modified:
AUTO_CLOSE
AUTO_CLOSE
AUTOMATIC_TUNING(CREATE_INDEX=ON|OFF)
AUTOMATIC_TUNING(CREATE_INDEX=ON|OFF)
AUTOMATIC_TUNING(DROP_INDEX=ON|OFF)
AUTOMATIC_TUNING(DROP_INDEX=ON|OFF)
DISABLE_BROKER
DISABLE_BROKER
EMERGENCY
EMERGENCY
ENABLE_BROKER
ENABLE_BROKER
FILESTREAM
FILESTREAM
HADR
HADR
NEW_BROKER
NEW_BROKER
OFFLINE
OFFLINE
PAGE_VERIFY
PAGE_VERIFY
PARTNER
PARTNER
READ_ONLY
READ_ONLY
RECOVERY BULK_LOGGED
RECOVERY BULK_LOGGED
RECOVERY_SIMPLE
RECOVERY_SIMPLE
REMOTE_DATA_ARCHIVE
REMOTE_DATA_ARCHIVE
RESTRICTED_USER
RESTRICTED_USER
SINGLE_USER
SINGLE_USER
WITNESS
WITNESS
SomeALTER DATABASEstatements (for example,SET CONTAINMENT) might transiently fail, for example during the automated database backup or right after a database is created. In this caseALTER DATABASEstatement should be retried. For more information on related error messages, see theRemarks section.
ALTER DATABASE
ALTER DATABASE
For more information, seeALTER DATABASE.
SQL Server Agent
Enabling and disabling SQL Server Agent is currently not supported in SQL Managed Instance. SQL Agent is always running.
Job schedule trigger based on an idle CPU isn't supported.
SQL Server Agent settings are read only. The proceduresp_set_agent_propertiesisn't supported in SQL Managed Instance.
sp_set_agent_properties
JobsT-SQL job steps are supported.The following replication jobs are supported:Transaction-log readerSnapshotDistributorSSIS job steps are supported.Other types of job steps aren't currently supported:The merge replication job step isn't supported.Queue Reader isn't supported.Command shell isn't yet supported.SQL Managed Instance can't access external resources, for example, network shares via robocopy.SQL Server Analysis Services isn't supported.
T-SQL job steps are supported.
The following replication jobs are supported:Transaction-log readerSnapshotDistributor
Transaction-log reader
Snapshot
Distributor
SSIS job steps are supported.
Other types of job steps aren't currently supported:The merge replication job step isn't supported.Queue Reader isn't supported.Command shell isn't yet supported.
The merge replication job step isn't supported.
Queue Reader isn't supported.
Command shell isn't yet supported.
SQL Managed Instance can't access external resources, for example, network shares via robocopy.
SQL Server Analysis Services isn't supported.
Notifications are partially supported.
Email notification is supported, although it requires that you configure a Database Mail profile. SQL Server Agent can use only one Database Mail profile, and it must be calledAzureManagedInstance_dbmail_profile.Pager isn't supported.NetSend isn't supported.Alerts aren't yet supported.Proxies aren't supported.
AzureManagedInstance_dbmail_profile
Pager isn't supported.
NetSend isn't supported.
Alerts aren't yet supported.
Proxies aren't supported.
EventLog isn't supported.
User must be directly mapped to the Microsoft Entra server login to create, modify, or execute SQL Agent jobs. Users that aren't directly mapped, for example, users that belong to a Microsoft Entra group that has the rights to create, modify or execute SQL Agent jobs, will not effectively be able to perform those actions. This is due to SQL Managed Instance impersonation andEXECUTE AS limitations.
The Multi Server Administration feature for master/target (MSX/TSX) jobs aren't supported.
For information about SQL Server Agent, seeSQL Server Agent.
Tables
The following table types aren't supported:
FILESTREAM
FileTables
EXTERNAL TABLE(except PolyBase)
MEMORY_OPTIMIZED(not supported only in General Purpose tier)
For information about how to create and alter tables, seeCREATE TABLEandALTER TABLE.
Functionalities
BULK INSERT / OPENROWSET
SQL Managed Instance can't access file shares and Windows folders, so the files must be imported from Azure Blob storage:
DATASOURCEis required in theBULK INSERTcommand while you import files from Azure Blob storage. SeeBULK INSERT.
DATASOURCE
BULK INSERT
DATASOURCEis required in theOPENROWSETfunction when you read the content of a file from Azure Blob storage. SeeOPENROWSET.
DATASOURCE
OPENROWSET
OPENROWSETcan be used to read data from Azure SQL Database, Azure SQL Managed Instance, or SQL Server instances. Other sources such as Oracle databases or Excel files aren't supported.
OPENROWSET
CLR
A SQL Managed Instance can't access file shares and Windows folders, so the following constraints apply:
OnlyCREATE ASSEMBLY FROM BINARYis supported. SeeCREATE ASSEMBLY FROM BINARY.
CREATE ASSEMBLY FROM BINARY
CREATE ASSEMBLY FROM FILEisn't supported. SeeCREATE ASSEMBLY FROM FILE.
CREATE ASSEMBLY FROM FILE
ALTER ASSEMBLYcan't reference files. SeeALTER ASSEMBLY.
ALTER ASSEMBLY
Database Mail (db_mail)
sp_send_dbmailcan't send attachments using@file_attachmentsparameter. Local file system and external shares or Azure Blob Storage aren't accessible from this procedure.
sp_send_dbmail
See the known issues related to@queryparameter and authentication.
@query
DBCC
Undocumented DBCC statements that are enabled in SQL Server aren't supported in SQL Managed Instance.
Only a limited number of Global Trace flags are supported. Session-levelTrace flagsaren't supported. SeeTrace Flags.
Trace flags
DBCC TRACEOFFandDBCC TRACEONwork with the limited number of global trace-flags.
DBCC CHECKDBwith options REPAIR_ALLOW_DATA_LOSS, REPAIR_FAST, and REPAIR_REBUILD can't be used because database can't be set inSINGLE_USERmode - seeALTER DATABASE differences. Potential database corruption is handled by the Azure support team. Contact Azure support if there's any indication of database corruption.
SINGLE_USER
Distributed transactions
T-SQL and .NET based distributed transactions across managed instancesare generally available.
Other scenarios, such as XA transactions, distributed transactions between managed instances and other participants and more, are supported withDistributed Transaction Coordinator (DTC) for Azure SQL Managed Instance, which is available in public preview.
Extended Events
Some Windows-specific targets for Extended Events (XEvents) aren't supported:
Theetw_classic_synctarget isn't supported. Store.xelfiles in Azure Blob storage. Seeetw_classic_sync target.
etw_classic_sync
.xel
Theevent_filetarget isn't supported. Store.xelfiles in Azure Blob storage. Seeevent_file target.
event_file
.xel
External libraries
In-database R and Python external libraries are supported in limited public preview. SeeMachine Learning Services in Azure SQL Managed Instance.
FILESTREAM and FileTable
FILESTREAM data isn't supported.
The database can't contain filegroups withFILESTREAMdata.
FILESTREAM
FILETABLEisn't supported.
FILETABLE
Tables can't haveFILESTREAMtypes.
FILESTREAM
The following functions aren't supported:GetPathLocator()GET_FILESTREAM_TRANSACTION_CONTEXT()PathName()GetFileNamespacePat)FileTableRootPath()
GetPathLocator()
GetPathLocator()
GET_FILESTREAM_TRANSACTION_CONTEXT()
GET_FILESTREAM_TRANSACTION_CONTEXT()
PathName()
PathName()
GetFileNamespacePat)
GetFileNamespacePat)
FileTableRootPath()
FileTableRootPath()
For more information, seeFILESTREAMandFileTables.
Full-text Semantic Search
Semantic Searchisn't supported.
Linked servers
Linked serversin SQL Managed Instance support a limited number of targets:
Supported targets are SQL Managed Instance, SQL Database, Azure Synapse SQLserverlessand dedicated pools, and SQL Server instances.
Targets that aren't supported are files, Analysis Services, and other RDBMS. Try to use native CSV import from Azure Blob Storage usingBULK INSERTorOPENROWSETas an alternative for file import, or load files using aserverless SQL pool in Azure Synapse Analytics.
BULK INSERT
OPENROWSET
Operations:
sp_dropserveris supported for dropping a linked server. Seesp_dropserver.
sp_dropserver
TheOPENROWSETfunction can be used to execute queries only on SQL Server instances. They can be either managed, on-premises, or in virtual machines. SeeOPENROWSET.
OPENROWSET
TheOPENDATASOURCEfunction can be used to execute queries only on SQL Server instances. They can be either managed, on-premises, or in virtual machines. An example isSELECT * FROM OPENDATASOURCE('SQLNCLI', '...').AdventureWorks2022.HumanResources.Employee. Only theSQLNCLI,SQLNCLI11,SQLOLEDB, andMSOLEDBSQLvalues are supported as a provider. TheSQL Server Native Client(often abbreviated SNAC) has been removed from SQL Server 2022 and SQL Server Management Studio 19 (SSMS). The SQL Server Native Client (SQLNCLI or SQLNCLI11) and the legacy Microsoft OLE DB Provider for SQL Server (SQLOLEDB) aren't recommended for new development. Switch to the newMicrosoft OLE DB Driver for SQL Serveror the latestMicrosoft ODBC Driver for SQL Servergoing forward.
SELECT * FROM OPENDATASOURCE('SQLNCLI', '...').AdventureWorks2022.HumanResources.Employee
SQLNCLI
SQLNCLI11
SQLOLEDB
MSOLEDBSQL
Linked servers can't be used to read files (Excel, CSV) from the network shares. Try to useBULK INSERT,OPENROWSETthat reads CSV files from Azure Blob Storage, or alinked server that references a serverless SQL pool in Synapse Analytics. Track this requests onSQL Managed Instance Feedback item
Linked servers on Azure SQL Managed Instance support SQL authentication andMicrosoft Entra authentication.
PolyBase
Data virtualization with Azure SQL Managed Instanceenables you to execute Transact-SQL (T-SQL) queries against data from files stored in Azure Data Lake Storage Gen2 or Azure Blob Storage, and combine it with locally stored relational data using joins. Parquet and delimited text (CSV) file formats are directly supported. The JSON file format is indirectly supported by specifying the CSV file format where queries return every document as a separate row. It's possible to parse rows further usingJSON_VALUEandOPENJSON. For general information about PolyBase, seeData virtualization with PolyBase in SQL Server.
JSON_VALUE
OPENJSON
Further,CREATE EXTERNAL TABLE AS SELECT (CETAS)allows you to export data from your SQL managed instance into an external storage account. You can use CETAS to create an external table on top of Parquet or CSV files Azure Blob storage or Azure Data Lake Storage (ADLS) Gen2. CETAS can also export, in parallel, the results of a T-SQL SELECT statement into the created external table.
Replication
Snapshot and Bi-directional replication types are supported. Merge replication, Peer-to-peer replication, and updatable subscriptions aren't supported.
Transactional replicationis available for SQL Managed Instance with some constraints:All types of replication participants (Publisher, Distributor, Pull Subscriber, and Push Subscriber) can be placed on SQL Managed Instance, but the publisher and the distributor must be either both in the cloud or both on-premises.SQL Managed Instance can communicate with the recent versions of SQL Server. For more information, see thesupported versions matrix.Transactional Replication has someadditional networking requirements.
All types of replication participants (Publisher, Distributor, Pull Subscriber, and Push Subscriber) can be placed on SQL Managed Instance, but the publisher and the distributor must be either both in the cloud or both on-premises.
SQL Managed Instance can communicate with the recent versions of SQL Server. For more information, see thesupported versions matrix.
Transactional Replication has someadditional networking requirements.
For more information about configuring transactional replication, see the following tutorials:
Tutorial: Configure replication between two managed instances
Tutorial: Configure transactional replication between Azure SQL Managed Instance and SQL Server
Resource governor
Resource governor is supported. However, there are several behavior differences:
To modify resource governor configuration in SQL Managed Instance, you must be in the context of themasterdatabase on the primary replica.
master
Resource governor configuration changes made on the primary replica propagate to all secondary replicas. However, changes to the currently effective configuration on a secondary replica might not be immediate. To make the changes effective on a secondary replica,connectto themasterdatabase on a secondary replica and executeALTER RESOURCE GOVERNOR RECONFIGURE.
master
ALTER RESOURCE GOVERNOR RECONFIGURE
In SQL Server, if theREQUEST_MAX_CPU_TIME_SECsetting is configured for a workload group and a batch request exceeds the configured CPU time, thecpu_threshold_exceededevent fires but the request is not terminated unless a trace flag is enabled. In SQL Managed Instance, the same event fires and the request is always terminated. For more information, seeREQUEST_MAX_CPU_TIME_SEC.
REQUEST_MAX_CPU_TIME_SEC
cpu_threshold_exceeded
The maximum number of resource pools you can create is 40.
RESTORE statement
Supported syntax:RESTORE DATABASERESTORE FILELISTONLYRESTORE HEADERONLYRESTORE LABELONLYRESTORE VERIFYONLY
RESTORE DATABASE
RESTORE DATABASE
RESTORE FILELISTONLY
RESTORE FILELISTONLY
RESTORE HEADERONLY
RESTORE HEADERONLY
RESTORE LABELONLY
RESTORE LABELONLY
RESTORE VERIFYONLY
RESTORE VERIFYONLY
Unsupported syntax:RESTORE LOGONLYRESTORE REWINDONLY
RESTORE LOGONLY
RESTORE LOGONLY
RESTORE REWINDONLY
RESTORE REWINDONLY
Source:FROM URL(Azure Blob storage) is the only supported option.FROM DISK/TAPE/backup device isn't supported.Backup sets aren't supported.
FROM URL(Azure Blob storage) is the only supported option.
FROM URL
FROM DISK/TAPE/backup device isn't supported.
FROM DISK
TAPE
Backup sets aren't supported.
WITHoptions aren't supported. Restore attempts includingWITHlikeDIFFERENTIAL,STATS,REPLACE, and so on, will fail.
WITH
WITH
DIFFERENTIAL
STATS
REPLACE
A database restore operation is asynchronous and retryable in Azure SQL Managed Instance. You might get an error in SSMS if the connection fails or a time-out expires. Azure SQL Managed Instance keeps trying to restore the database in the background, and you can track the progress of the restore process by using thesys.dm_exec_requestsandsys.dm_operation_statusdynamic management views.
The following database options are set or overridden and can't be changed later:
NEW_BROKERif the broker isn't enabled in the .bak file.
NEW_BROKER
ENABLE_BROKERif the broker isn't enabled in the .bak file.
ENABLE_BROKER
AUTO_CLOSE=OFFif a database in the .bak file hasAUTO_CLOSE=ON.
AUTO_CLOSE=OFF
AUTO_CLOSE=ON
RECOVERY FULLif a database in the .bak file hasSIMPLEorBULK_LOGGEDrecovery model.
RECOVERY FULL
SIMPLE
BULK_LOGGED
A memory-optimized filegroup is added and called XTP if it wasn't in the source .bak file.
Any existing memory-optimized filegroup is renamed to XTP.
SINGLE_USERandRESTRICTED_USERoptions are converted toMULTI_USER.
SINGLE_USER
RESTRICTED_USER
MULTI_USER
Limitations:
Backups of the corrupted databases might be restored depending on the type of the corruption, but automated backups aren't taken until the corruption is fixed. Make sure that you runDBCC CHECKDBon the source SQL Managed Instance and use backupWITH CHECKSUMin order to prevent this issue.
DBCC CHECKDB
WITH CHECKSUM
Restore of.BAKfile of a database that contains any limitation described in this document (for example,FILESTREAMorFILETABLEobjects) can't be restored on SQL Managed Instance.
.BAK
FILESTREAM
FILETABLE
.BAKfiles that contain multiple backup sets can't be restored.
.BAK
.BAKfiles that contain multiple log files can't be restored.
.BAK
Backups that contain databases bigger than 8 TB, active in-memory OLTP objects, or number of files that would exceed 280 files per instance can't be restored on a General Purpose instance.
Backups that contain databases bigger than 4 TB or in-memory OLTP objects with the total size larger than the size described inresource limitscan't be restored on Business Critical instance.
For information about restore statements, seeRESTORE statements.
Important
The same limitations apply to built-in point-in-time restore operation. As an example, General Purpose database greater than 4 TB can't be restored on Business Critical instance. Business Critical database with In-memory OLTP files or more than 280 files can't be restored on General Purpose instance.
Service broker
Cross-instance service broker message exchange is supported only between Azure SQL Managed Instances:
CREATE ROUTE: You can't useCREATE ROUTEwithADDRESSother thanLOCALor DNS name of another SQL Managed Instance. Port is always 4022.
CREATE ROUTE
CREATE ROUTE
ADDRESS
LOCAL
ALTER ROUTE: You can't useALTER ROUTEwithADDRESSother thanLOCALor DNS name of another SQL Managed Instance. Port is always 4022.
ALTER ROUTE
ALTER ROUTE
ADDRESS
LOCAL
Transport security is supported, dialog security isn't:
CREATE REMOTE SERVICE BINDINGisn't supported.
CREATE REMOTE SERVICE BINDING
Service broker is enabled by default for newly created databases and can't be disabled. Service broker state for restored/migrated databases is inherited from the source database and can't be changed. The following ALTER DATABASE options aren't supported:
ENABLE_BROKER
ENABLE_BROKER
DISABLE_BROKER
DISABLE_BROKER
Stored procedures, functions, and triggers
NATIVE_COMPILATIONisn't supported in the General Purpose tier.
NATIVE_COMPILATION
The followingsp_configureoptions aren't supported:allow polybase exportallow updatesfilestream_access_levelremote accessremote data archiveremote proc transscan for startup procs
allow polybase export
allow polybase export
allow updates
allow updates
filestream_access_level
filestream_access_level
remote access
remote access
remote data archive
remote data archive
remote proc trans
remote proc trans
scan for startup procs
scan for startup procs
The followingsp_configureoptions are ignored and have no effect:Ole Automation Procedures
Ole Automation Procedures
Ole Automation Procedures
sp_execute_external_scriptsis only supported forMachine Learning Services in Azure SQL Managed Instance, otherwisesp_execute_external_scriptsisn't supported for SQL Managed Instance. Seesp_execute_external_scripts.
sp_execute_external_scripts
sp_execute_external_scripts
xp_cmdshellisn't supported. Seexp_cmdshell.
xp_cmdshell
Extended stored proceduresaren't supported, and this includessp_addextendedprocandsp_dropextendedproc. This functionality won't be supported because it's on a deprecation path for SQL Server. For more information, seeProgramming Database Engine extended stored procedures.
Extended stored procedures
sp_addextendedproc
sp_dropextendedproc
sp_attach_db,sp_attach_single_file_db, andsp_detach_dbaren't supported. Seesp_attach_db,sp_attach_single_file_db, andsp_detach_db.
sp_attach_db
sp_attach_single_file_db
sp_detach_db
sp_addmessageisn't supported on Azure SQL Managed Instance.
sp_addmessage
System functions and variables
The following variables, functions, and views return different results:
SERVERPROPERTY('EngineEdition')returns the value 8. This property uniquely identifies a SQL Managed Instance. SeeSERVERPROPERTY.
SERVERPROPERTY('EngineEdition')
SERVERPROPERTY('InstanceName')returnsNULLbecause the concept of instance as it exists for SQL Server doesn't apply to SQL Managed Instance. SeeSERVERPROPERTY('InstanceName').
SERVERPROPERTY('InstanceName')
NULL
@@SERVERNAMEreturns a full DNS "connectable" name, for example,my-managed-instance.wcus17662feb9ce98.database.windows.net. See@@SERVERNAME.
@@SERVERNAME
my-managed-instance.wcus17662feb9ce98.database.windows.net
SYS.SERVERSreturns a full DNS "connectable" name, such asmyinstance.domain.database.windows.netfor the properties "name" and "data_source." Seesys.servers.
SYS.SERVERS
myinstance.domain.database.windows.net
@@SERVICENAMEreturnsNULLbecause the concept of service as it exists for SQL Server doesn't apply to SQL Managed Instance. See@@SERVICENAME.
@@SERVICENAME
NULL
SUSER_IDis supported. It returnsNULLif the Microsoft Entra login isn't insys.syslogins. SeeSUSER_ID.
SUSER_ID
NULL
sys.syslogins
SUSER_SIDisn't supported. The wrong data is returned, which is a temporary known issue. SeeSUSER_SID.
SUSER_SID

Environment constraints
Subnet
You can't place any other resources (for example virtual machines) in the subnet where you have deployed your SQL Managed Instance. Deploy these resources using a different subnet.
Subnet must have sufficient number of availableIP addresses. Minimum is to have at least 32 IP addresses in the subnet.
The number of vCores and types of instances that you can deploy in a region have someconstraints and limits.
There's anetworking configurationthat must be applied on the subnet.
Virtual network
Virtual network can be deployed using Resource Model. Classic Model doesn't support virtual network (VNet) deployment.
After a SQL managed instance is created, moving the SQL managed instance or VNet to another resource group or subscription isn't supported.
For SQL managed instances hosted in virtual clusters that are created before September 22, 2020,VNet global peeringisn't supported. You can connect to these resources via ExpressRoute or VNet-to-VNet through Virtual Network Gateways.
Failover groups
System databases aren't replicated to the secondary instance in a failover group. Therefore, scenarios that depend on objects from the system databases are impossible on the secondary instance unless the objects are manually created on the secondary.
tempdb
tempdb
The maximum file size of thetempdbsystem database can't be greater than 24 GB per core on a General Purpose tier. The maximumtempdbsize on a Business Critical tier is limited by the SQL Managed Instance storage size.tempdblog file size is limited to 120 GB on General Purpose tier. Some queries might return an error if they need more than 24 GB per core intempdbor if they produce more than 120 GB of log data.
tempdb
tempdb
tempdb
tempdb
tempdbis always split into 12 data files: 1 primary, also calledmaster, data file, and 11 non-primary data files. The file structure can't be changed and new files can't be added totempdb.
tempdb
master
tempdb
Memory-optimized TempDB metadata, a new SQL Server 2019 in-memory database feature, isn't supported.
Objects created in themodeldatabase can't be auto-created intempdbafter a restart or a failover becausetempdbdoesn't get its initial object list from themodeldatabase. You must create objects intempdbmanually after each restart or a failover.
model
tempdb
tempdb
model
tempdb
msdb
msdb
The following schemas in themsdbsystem database in SQL Managed Instance must be owned by their respective predefined roles:
msdb
General rolesTargetServersRole
TargetServersRole
Fixed database rolesSQLAgentUserRoleSQLAgentReaderRoleSQLAgentOperatorRole
SQLAgentUserRole
SQLAgentReaderRole
SQLAgentOperatorRole
DatabaseMail roles:DatabaseMailUserRole
DatabaseMailUserRole
Integration services roles:db_ssisadmindb_ssisltduserdb_ssisoperator
db_ssisadmin
db_ssisltduser
db_ssisoperator
Important
Changing the predefined role names, schema names and schema owners by customers will affect the normal operation of the service. Any changes made to these will be reverted back to the predefined values as soon as detected, or at the next service update at the latest to ensure normal service operation.
Error logs
SQL Managed Instance places verbose information in error logs. There are many internal system events that are logged in the error log. Use a custom procedure to read error logs that filters out some irrelevant entries. For more information, seeSQL Managed Instance â sp_readmierrorlogorSQL Managed Instance extension(preview)for Azure Data Studio.
Changing the number of retained error logs is unsupported.
Related content
What is Azure SQL Managed Instance?
Features comparison: Azure SQL Database and Azure SQL Managed Instance
What's new in Azure SQL Managed Instance?
Known issues with Azure SQL Managed Instance
Quickstart: Create Azure SQL Managed Instance
Feedback
Was this page helpful?
Additional resources