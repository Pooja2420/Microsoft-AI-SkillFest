Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
PublishPipelineArtifact@1 - Publish Pipeline Artifacts v1 task
Article
2025-03-28
4 contributors
In this article
Use this task to publish (upload) a file or directory as a named artifact for the current run.
Use this task to publish (upload) a file or directory as a named artifact for the current run.
Important
This task is supported on Azure DevOps Services only. If you use it on Azure DevOps Server, you'll receive an error message similar toPipeline Artifact Task is not supported in on-premises. Please use Build Artifact Task instead.UsePublish Build Artifactsif you're using Azure DevOps Server or TFS 2018.
Pipeline Artifact Task is not supported in on-premises. Please use Build Artifact Task instead.
Syntax
# Publish Pipeline Artifacts v1
# Publish (upload) a file or directory as a named artifact for the current run.
- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(Pipeline.Workspace)' # string. Alias: path. Required. File or directory path. Default: $(Pipeline.Workspace).
    #artifact: # string. Alias: artifactName. Artifact name. 
    publishLocation: 'pipeline' # 'pipeline' | 'filepath'. Alias: artifactType. Required. Artifact publish location. Default: pipeline.
    #fileSharePath: # string. Required when artifactType = filepath. File share path. 
    #parallel: false # boolean. Optional. Use when artifactType = filepath. Parallel copy. Default: false.
    #parallelCount: '8' # string. Optional. Use when artifactType = filepath && parallel = true. Parallel count. Default: 8.
    #properties: # string. Custom properties.
# Publish Pipeline Artifacts v1
# Publish (upload) a file or directory as a named artifact for the current run.
- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(Pipeline.Workspace)' # string. Alias: path. Required. File or directory path. Default: $(Pipeline.Workspace).
    #artifact: # string. Alias: artifactName. Artifact name. 
    publishLocation: 'pipeline' # 'pipeline' | 'filepath'. Alias: artifactType. Required. Artifact publish location. Default: pipeline.
    #fileSharePath: # string. Required when artifactType = filepath. File share path. 
    #parallel: false # boolean. Optional. Use when artifactType = filepath. Parallel copy. Default: false.
    #parallelCount: '8' # string. Optional. Use when artifactType = filepath && parallel = true. Parallel count. Default: 8.
    #properties: # string. Custom properties.
# Publish Pipeline Artifacts v1
# Publish (upload) a file or directory as a named artifact for the current run.
- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(Pipeline.Workspace)' # string. Alias: path. Required. File or directory path. Default: $(Pipeline.Workspace).
    #artifact: # string. Alias: artifactName. Artifact name. 
    publishLocation: 'pipeline' # 'pipeline' | 'filepath'. Alias: artifactType. Required. Artifact publish location. Default: pipeline.
    #fileSharePath: # string. Required when artifactType = filepath. File share path. 
    #parallel: false # boolean. Optional. Use when artifactType = filepath. Parallel copy. Default: false.
    #parallelCount: '8' # string. Optional. Use when artifactType = filepath && parallel = true. Parallel count. Default: 8.
# Publish Pipeline Artifacts v1
# Publish (upload) a file or directory as a named artifact for the current run.
- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(Pipeline.Workspace)' # string. Alias: path. Required. File or directory path. Default: $(Pipeline.Workspace).
    #artifact: # string. Alias: artifactName. Artifact name. 
    publishLocation: 'pipeline' # 'pipeline' | 'filepath'. Alias: artifactType. Required. Artifact publish location. Default: pipeline.
    #fileSharePath: # string. Required when artifactType = filepath. File share path. 
    #parallel: false # boolean. Optional. Use when artifactType = filepath. Parallel copy. Default: false.
    #parallelCount: '8' # string. Optional. Use when artifactType = filepath && parallel = true. Parallel count. Default: 8.
Inputs
targetPath-File or directory pathInput alias:path.string. Required. Default value:$(Pipeline.Workspace).
targetPath
path
string
$(Pipeline.Workspace)
Specifies the path of the file or directory to publish. Can be absolute or relative to the default working directory. Can includevariables, but wildcards are not supported. SeeArtifacts in Azure Pipelinesfor more information.
artifact-Artifact nameInput alias:artifactName.string.
artifact
artifactName
string
Specifies the name of the artifact to publish. It can be any name you choose, for exampledrop. If not set, the default is a unique ID scoped to the job.
drop
Important
Artifact name cannot contain\,/,",:,<,>,|,*, or?.
\
/
"
:
<
>
|
*
?
publishLocation-Artifact publish locationInput alias:artifactType.string. Required. Allowed values:pipeline(Azure Pipelines),filepath(A file share). Default value:pipeline.
publishLocation
artifactType
string
pipeline
filepath
pipeline
Specifies whether to store the artifact in Azure Pipelines or to copy it to a file share that must be accessible from the pipeline agent.
fileSharePath-File share pathstring. Required whenartifactType = filepath.
fileSharePath
string
artifactType = filepath
Specifies the file share where the artifact files are copied. This can include variables, for example\\my\\share\\$(Build.DefinitionName)\\$(Build.BuildNumber). Publishing artifacts from a Linux or macOS agent to a file share is not supported, for example\\server\folderName.
\\my\\share\\$(Build.DefinitionName)\\$(Build.BuildNumber)
\\server\folderName
parallel-Parallel copyboolean. Optional. Use whenartifactType = filepath. Default value:false.
parallel
boolean
artifactType = filepath
false
Specifies whether to copy files in parallel using multiple threads for greater potential throughput. If this setting is not enabled, one thread will be used.
parallelCount-Parallel countstring. Optional. Use whenartifactType = filepath && parallel = true. Default value:8.
parallelCount
string
artifactType = filepath && parallel = true
8
Specifies the degree of parallelism, or the number of threads used, to perform the copy. The value must be between 1 and 128.
properties-Custom propertiesstring.
properties
string
Specifies the custom properties to associate with the artifact. Use a valid JSON string with the prefixuser-on all keys.
user-
Task control options
All tasks have control options in addition to their task inputs. For more information, seeControl options and common task properties.
Output variables
None.
Remarks
Publishing is not supported in classic release pipelines.
Note
Publish Pipeline Artifacts is not supported in on-premises. Please usePublish Build Artifactsif you're using Azure DevOps Server or TFS 2018. If you use it on Azure DevOps Server, you'll receive an error message similar toPipeline Artifact Task is not supported in on-premises. Please use Build Artifact Task instead..
Pipeline Artifact Task is not supported in on-premises. Please use Build Artifact Task instead.
Thepublishanddownloadkeywords are shortcuts for the PublishPipelineArtifact@1 and DownloadPipelineArtifact@2 tasks. Seesteps.publishandsteps.downloadfor more details.
publish
download
Tip
You can use the.artifactignorefile to control which files will be published.
I'm having issues with publishing my artifacts. How can I view the detailed logs?
To enable detailed logs for your pipeline:
Edit your pipeline and selectVariables
Add a new variable with the nameSystem.Debugand valuetrue
System.Debug
true
Save
A:$(Build.SourcesDirectory)and$(Agent.BuildDirectory)are just few of the variables you can use in your pipeline. Variables are available asexpressionsor scripts.
$(Build.SourcesDirectory)
$(Agent.BuildDirectory)
SeeDefine variables,predefined variables, andClassic release and artifacts variablesto learn about the different types of variables.
A:  Deployment jobs do not have the context of source branches and are hence not appropriate for publishing artifacts. They have been primarily designed to consume artifacts. A workaround would be to isolate that logic into a separate job (with dependencies on your deployment jobs).
Requirements
See also
Looking to get started with build artifacts? SeeArtifacts in Azure Pipelines.
Feedback
Was this page helpful?
Additional resources