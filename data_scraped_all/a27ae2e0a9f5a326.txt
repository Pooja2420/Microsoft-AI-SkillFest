Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Use Azure Key Vault secrets in your Pipeline
Article
2025-04-16
8 contributors
In this article
Azure DevOps Services | Azure DevOps Server 2022 - Azure DevOps Server 2019
Azure Key Vaults enable developers to securely store and manage sensitive information such as passwords, API keys, and certificates. This article walks you through how to query and use secrets from an Azure Key Vault in your pipeline.
Prerequisites
Create a Key Vault
Azure portal
Azure CLI
Sign in to theAzure portal, and then selectCreate a resource.
Sign in to theAzure portal, and then selectCreate a resource.
UnderKey Vault, selectCreateto create a new Azure Key Vault.
UnderKey Vault, selectCreateto create a new Azure Key Vault.
Select yourSubscriptionfrom the dropdown menu, and then select an existingResource groupor create a new one. Enter aKey vault name, select aRegion, choose aPricing tier, and selectNextif you want to configure additional properties. Otherwise, selectReview + createto keep the default settings.
Select yourSubscriptionfrom the dropdown menu, and then select an existingResource groupor create a new one. Enter aKey vault name, select aRegion, choose aPricing tier, and selectNextif you want to configure additional properties. Otherwise, selectReview + createto keep the default settings.
Once the deployment is complete, selectGo to resource.
Once the deployment is complete, selectGo to resource.
First, set your default region and Azure subscription:Set default subscription:az account set --subscription <your_subscription_name_or_subscription_ID>Set default region:az config set defaults.location=<your_region>
First, set your default region and Azure subscription:
Set default subscription:
az account set --subscription <your_subscription_name_or_subscription_ID>
az account set --subscription <your_subscription_name_or_subscription_ID>
Set default region:
az config set defaults.location=<your_region>
az config set defaults.location=<your_region>
Create a new resource group to host your Azure Key Vault. A resource group is a container that holds related resources for an Azure solution:az group create --name <your-resource-group>
Create a new resource group to host your Azure Key Vault. A resource group is a container that holds related resources for an Azure solution:
az group create --name <your-resource-group>
az group create --name <your-resource-group>
Create a new Azure Key Vault:az keyvault create \
  --name <your-key-vault-name> \
  --resource-group <your-resource-group>
Create a new Azure Key Vault:
az keyvault create \
  --name <your-key-vault-name> \
  --resource-group <your-resource-group>
az keyvault create \
  --name <your-key-vault-name> \
  --resource-group <your-resource-group>
Set up authentication
Managed Identity
Service Principal
Create a user-assigned managed identity
Sign in to theAzure portal, then search for theManaged Identitiesservice in the search bar.
Sign in to theAzure portal, then search for theManaged Identitiesservice in the search bar.
Select Create, and fill out the required fields as follows:Subscription: Select your subscription from the dropdown menu.Resource group: Select an existing resource group or create a new one.Region: Select a region from the dropdown menu.Name: Enter a name for your user-assigned managed identity.
Select Create, and fill out the required fields as follows:
Subscription: Select your subscription from the dropdown menu.
Resource group: Select an existing resource group or create a new one.
Region: Select a region from the dropdown menu.
Name: Enter a name for your user-assigned managed identity.
SelectReview + createwhen you're done.
SelectReview + createwhen you're done.
Once the deployment is complete, selectGo to resource, then copy theSubscriptionandClient ID, you'll need them in the next steps.
Once the deployment is complete, selectGo to resource, then copy theSubscriptionandClient ID, you'll need them in the next steps.
Navigate toSettings>Properties, and copy your managed identity'sTenant IDto use later.
Navigate toSettings>Properties, and copy your managed identity'sTenant IDto use later.
Set up key vault access policies
Navigate toAzure portal, and use the search bar to find the key vault you created earlier.
Navigate toAzure portal, and use the search bar to find the key vault you created earlier.
SelectAccess policies, then selectCreateto add a new policy.
SelectAccess policies, then selectCreateto add a new policy.
UnderSecret permissions, select theGetandListcheckboxes.
UnderSecret permissions, select theGetandListcheckboxes.
SelectNext, then paste theClient IDof the managed identity you created earlier into the search bar.
SelectNext, then paste theClient IDof the managed identity you created earlier into the search bar.
Select your managed identity, selectNext, thenNextonce more.
Select your managed identity, selectNext, thenNextonce more.
Review your new policy, and then selectCreatewhen you're done.
Review your new policy, and then selectCreatewhen you're done.
Create a service connection
Sign in to your Azure DevOps organization, and then navigate to your project.
Sign in to your Azure DevOps organization, and then navigate to your project.
SelectProject settings>Service connections, and then selectNew service connection.
SelectProject settings>Service connections, and then selectNew service connection.
SelectAzure Resource Manager, then selectNext.
SelectAzure Resource Manager, then selectNext.
UnderIdentity Type, selectManaged identityfrom the dropdown menu.
UnderIdentity Type, selectManaged identityfrom the dropdown menu.
ForStep 1: Managed identity details, fill out the fields as follows:Subscription for managed identity: Select the subscription that contains your managed identity.Resource group for managed identity: Select the resource group where your managed identity is hosted.Managed Identity: Select your managed identity from the dropdown menu.
ForStep 1: Managed identity details, fill out the fields as follows:
Subscription for managed identity: Select the subscription that contains your managed identity.
Subscription for managed identity: Select the subscription that contains your managed identity.
Resource group for managed identity: Select the resource group where your managed identity is hosted.
Resource group for managed identity: Select the resource group where your managed identity is hosted.
Managed Identity: Select your managed identity from the dropdown menu.
Managed Identity: Select your managed identity from the dropdown menu.
ForStep 2: Azure Scope, fill out the fields as follows:Scope level for service connection: SelectSubscription.Subscription for service connection: Select the subscription your managed identity will access.Resource group for Service connection: (Optional) Specify this if you want to restrict access to a specific resource group.
ForStep 2: Azure Scope, fill out the fields as follows:
Scope level for service connection: SelectSubscription.
Scope level for service connection: SelectSubscription.
Subscription for service connection: Select the subscription your managed identity will access.
Subscription for service connection: Select the subscription your managed identity will access.
Resource group for Service connection: (Optional) Specify this if you want to restrict access to a specific resource group.
Resource group for Service connection: (Optional) Specify this if you want to restrict access to a specific resource group.
ForStep 3: Service connection details:Service connection name: Provide a name for your service connection.Service Management Reference: (Optional) Include context information from an ITSM database.Description: (Optional) Add a description.
ForStep 3: Service connection details:
Service connection name: Provide a name for your service connection.
Service connection name: Provide a name for your service connection.
Service Management Reference: (Optional) Include context information from an ITSM database.
Service Management Reference: (Optional) Include context information from an ITSM database.
Description: (Optional) Add a description.
Description: (Optional) Add a description.
UnderSecurity, check theGrant access permission to all pipelinesbox to allow all pipelines to use this service connection. If you leave this unchecked, youâll need to manually grant access for each pipeline.
UnderSecurity, check theGrant access permission to all pipelinesbox to allow all pipelines to use this service connection. If you leave this unchecked, youâll need to manually grant access for each pipeline.
SelectSaveto validate and create the service connection.
SelectSaveto validate and create the service connection.

Create a service principal
In this step, you'll create a newservice principalin Azure so that your Azure Pipelines can access Azure Key Vault.
Navigate toAzure portal, then select the>_icon from the top menu to open theCloud Shell.
Navigate toAzure portal, then select the>_icon from the top menu to open theCloud Shell.
Select eitherPowerShellorBashdepending on your preference.
Select eitherPowerShellorBashdepending on your preference.
Run the following command to create a new service principal:az ad sp create-for-rbac --name YOUR_SERVICE_PRINCIPAL_NAME
Run the following command to create a new service principal:
az ad sp create-for-rbac --name YOUR_SERVICE_PRINCIPAL_NAME
az ad sp create-for-rbac --name YOUR_SERVICE_PRINCIPAL_NAME
After the command runs, youâll get an output similar to the following. Copy and save the output, youâll need it to create a service connection in the next step.{
  "appId": "00001111-aaaa-2222-bbbb-3333cccc4444",
  "displayName": "MyServicePrincipal",
  "password": "***********************************",
  "tenant": "aaaabbbb-0000-cccc-1111-dddd2222eeee"
}
After the command runs, youâll get an output similar to the following. Copy and save the output, youâll need it to create a service connection in the next step.
{
  "appId": "00001111-aaaa-2222-bbbb-3333cccc4444",
  "displayName": "MyServicePrincipal",
  "password": "***********************************",
  "tenant": "aaaabbbb-0000-cccc-1111-dddd2222eeee"
}
{
  "appId": "00001111-aaaa-2222-bbbb-3333cccc4444",
  "displayName": "MyServicePrincipal",
  "password": "***********************************",
  "tenant": "aaaabbbb-0000-cccc-1111-dddd2222eeee"
}
Create a service connection
Sign in to your Azure DevOps organization, and then navigate to your project.
Sign in to your Azure DevOps organization, and then navigate to your project.
SelectProject settings, and then selectService connections.
SelectProject settings, and then selectService connections.
SelectNew service connection, selectAzure Resource Manager, and then selectNext.
SelectNew service connection, selectAzure Resource Manager, and then selectNext.
SelectService principal (manual), and then selectNext.
SelectService principal (manual), and then selectNext.
UnderIdentity Type, selectApp registration or managed identity (manual).
UnderIdentity Type, selectApp registration or managed identity (manual).
UnderCredential, selectWorkload identity federation.
UnderCredential, selectWorkload identity federation.
Provide a name for your service connection, and then selectNext.
Provide a name for your service connection, and then selectNext.
Copy theIssuerand theSubject identifiervalues. You'll need them in the next step.
Copy theIssuerand theSubject identifiervalues. You'll need them in the next step.
ForEnvironment, SelectAzure Cloudand forSubscription scopeselectSubscription.
ForEnvironment, SelectAzure Cloudand forSubscription scopeselectSubscription.
Enter your AzureSubscription IDandSubscription name.
Enter your AzureSubscription IDandSubscription name.
UnderAuthentication, paste your service principal'sApplication (client) IDandDirectory (tenant) ID
UnderAuthentication, paste your service principal'sApplication (client) IDandDirectory (tenant) ID
In theSecuritysection, check theGrant access permission to all pipelinesbox to allow all pipelines to use this service connection. If you skip this, youâll need to manually grant access per pipeline.
In theSecuritysection, check theGrant access permission to all pipelinesbox to allow all pipelines to use this service connection. If you skip this, youâll need to manually grant access per pipeline.
Leave this page open, youâll come back to complete it after you've (1) created the federated credential in Azure and (2) granted your service principalReadaccess at the subscription level.
Leave this page open, youâll come back to complete it after you've (1) created the federated credential in Azure and (2) granted your service principalReadaccess at the subscription level.

Create a federated credential in Azure
Navigate toAzure portal, then use the search bar to find your service principal by entering itsClientID. Select the matchingApplicationfrom the results.
Navigate toAzure portal, then use the search bar to find your service principal by entering itsClientID. Select the matchingApplicationfrom the results.
UnderManage, selectCertificates & secrets>Federated credentials.
UnderManage, selectCertificates & secrets>Federated credentials.
SelectAdd credential, then forFederated credential scenario, selectOther issuer.
SelectAdd credential, then forFederated credential scenario, selectOther issuer.
In theIssuerfield, paste theIssuervalue you copied from your service connection earlier.
In theIssuerfield, paste theIssuervalue you copied from your service connection earlier.
In theSubject identifierfield, paste theSubject identifieryou copied earlier.
In theSubject identifierfield, paste theSubject identifieryou copied earlier.
Enter aNamefor your federated credential, and then selectAddwhen you're done.
Enter aNamefor your federated credential, and then selectAddwhen you're done.

Add role assignment to your subscription
Before you can verify the connection, you need to grant the service principalReadaccess at the subscription level:
Navigate toAzure portal
Navigate toAzure portal
UnderAzure services, selectSubscriptions, and then find and select your subscription.
UnderAzure services, selectSubscriptions, and then find and select your subscription.
SelectAccess control (IAM), and then selectAdd>Add role assignment.
SelectAccess control (IAM), and then selectAdd>Add role assignment.
Under theRoletab, selectReader, and then selectNext.
Under theRoletab, selectReader, and then selectNext.
SelectUser, group, or service principal, and then selectSelect members.
SelectUser, group, or service principal, and then selectSelect members.
In the search bar, paste your service principal'sObject ID, select it, then clickSelect.
In the search bar, paste your service principal'sObject ID, select it, then clickSelect.
SelectReview + assign, review your settings, and then selectReview + assignagain to confirm.
SelectReview + assign, review your settings, and then selectReview + assignagain to confirm.
Once the role assignment is added. go back to your service connection in Azure DevOps and selectVerify and Saveto save your service connection.
Once the role assignment is added. go back to your service connection in Azure DevOps and selectVerify and Saveto save your service connection.
Configure Key Vault access policies
Navigate to theAzure portal, find the key vault you created earlier, and then selectAccess policies.
Navigate to theAzure portal, find the key vault you created earlier, and then selectAccess policies.
SelectCreate, then underSecret permissionsadd both theGetandListpermissions, and then selectNext.
SelectCreate, then underSecret permissionsadd both theGetandListpermissions, and then selectNext.
UnderPrincipal, paste your service principal'sObject ID, select it, and then selectNext.
UnderPrincipal, paste your service principal'sObject ID, select it, and then selectNext.
SelectNextagain, review your settings, and then selectSaveto apply the new policy.
SelectNextagain, review your settings, and then selectSaveto apply the new policy.
Query and use secrets in your pipeline
Using theAzure Key Vault task, you can now query and fetch secrets from Azure Key Vault and use them in subsequent tasks in your pipeline. Note that secrets must be explicitly mapped to environment variables, as shown in the following example:
pool:
  vmImage: 'ubuntu-latest'

steps:
- task: AzureKeyVault@1
  inputs:
    azureSubscription: 'SERVICE_CONNECTION_NAME'
    KeyVaultName: 'KEY_VAULT_NAME'
    SecretsFilter: '*'

- bash: |
    echo "Secret Found! $MY_MAPPED_ENV_VAR"        
  env:
    MY_MAPPED_ENV_VAR: $(SECRET_NAME)
pool:
  vmImage: 'ubuntu-latest'

steps:
- task: AzureKeyVault@1
  inputs:
    azureSubscription: 'SERVICE_CONNECTION_NAME'
    KeyVaultName: 'KEY_VAULT_NAME'
    SecretsFilter: '*'

- bash: |
    echo "Secret Found! $MY_MAPPED_ENV_VAR"        
  env:
    MY_MAPPED_ENV_VAR: $(SECRET_NAME)
The output from the last bash step should look like this:
Secret Found! ***
Secret Found! ***
Note
To query multiple secrets from your Azure Key Vault, use theSecretsFilterinput and provide a comma-separated list of secret names, like:'secret1, secret2'.
SecretsFilter
Related content
Protect secrets in Azure Pipelines
Protect secrets in Azure Pipelines
Access a private key vault from your pipeline
Access a private key vault from your pipeline
Manage security in Azure Pipelines
Manage security in Azure Pipelines
Feedback
Was this page helpful?
Additional resources