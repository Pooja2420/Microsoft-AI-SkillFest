Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Monitor Azure Managed Instance for Apache Cassandra by using Azure Monitor
Article
2024-08-14
5 contributors
In this article
Azure Managed Instance for Apache Cassandra provides metrics and diagnostic logging throughAzure Monitor.
Azure Managed Instance for Apache Cassandra metrics
You can visualize metrics for Azure Managed Instance for Apache Cassandra in the Azure portal by going to your cluster resource and selectingMetrics. You can then choose from the available metrics and aggregations.

Diagnostic settings in Azure
Azure Monitor uses diagnostic settings to collect resource logs, which are also calleddata plane logs. An Azure resource emits resource logs to provide rich, frequent data about its operations. Azure Monitor captures these logs per request. Examples of data plane operations include delete, insert, and readFeed. The content of these logs varies by resource type.
Platform metrics and activity logs are collected automatically, whereas you must create a diagnostic setting to collect resource logs or to forward them outside Azure Monitor. You can turn on diagnostic settings for Azure Managed Instance for Apache Cassandra cluster resources and send resource logs to the following sources:
Log Analytics workspace. Data sent to Log Analytics workspaces is written intoAzure Diagnostics (legacy)orResource-specific (preview)tables.
Event hub.
Storage account.
Note
We recommend creating the diagnostic setting in resource-specific mode.
Create diagnostic settings via the Azure portal
Sign in to theAzure portal.
Sign in to theAzure portal.
Go to your Azure Managed Instance for Apache Cassandra cluster resource.
Go to your Azure Managed Instance for Apache Cassandra cluster resource.

SelectDiagnostic settingsin theMonitoringsection, and then selectAdd diagnostic setting.
SelectDiagnostic settingsin theMonitoringsection, and then selectAdd diagnostic setting.

On theDiagnostic settingpane, choose a name for your setting.Then, underCategory details, select your categories. TheCassandraLogscategory records Cassandra server operations. TheCassandraAuditcategory records audit and Cassandra Query Language (CQL) operations.UnderDestination details, choose your preferred destination for your logs. If you're sending logs to a Log Analytics workspace, be sure to selectResource specificas the destination table.NoteIf you're sending logs to a Log Analytics workspace, they can take up to 20 minutes to appear. Until then, the resource-specific tables (shown underAzure Managed Instance for Apache Cassandra) aren't visible.
On theDiagnostic settingpane, choose a name for your setting.
Then, underCategory details, select your categories. TheCassandraLogscategory records Cassandra server operations. TheCassandraAuditcategory records audit and Cassandra Query Language (CQL) operations.
UnderDestination details, choose your preferred destination for your logs. If you're sending logs to a Log Analytics workspace, be sure to selectResource specificas the destination table.

Note
If you're sending logs to a Log Analytics workspace, they can take up to 20 minutes to appear. Until then, the resource-specific tables (shown underAzure Managed Instance for Apache Cassandra) aren't visible.
After you set up diagnostic logging and data is flowing, you can selectLogsand query the available diagnostic logs by using Azure Data Explorer. For more information on Azure Monitor and Kusto Query Language, seeLog queries in Azure Monitor.
After you set up diagnostic logging and data is flowing, you can selectLogsand query the available diagnostic logs by using Azure Data Explorer. For more information on Azure Monitor and Kusto Query Language, seeLog queries in Azure Monitor.

Create a diagnostic setting via the Azure CLI
To create a diagnostic setting by using the Azure CLI, use theaz monitor diagnostic-settings createcommand:
logs='[{"category":"CassandraAudit","enabled":true,"retentionPolicy":{"enabled":true,"days":3}},{"category":"CassandraLogs","enabled":true,"retentionPolicy":{"enabled":true,"days":3}}]'
    resourceId='/subscriptions/{SUBSCRIPTION_ID}/resourceGroups/{RESOURCE_GROUP}/providers/Microsoft.DocumentDB/cassandraClusters/{CLUSTER_NAME}'
    workspace='/subscriptions/{SUBSCRIPTION_ID}/resourcegroups/{RESOURCE_GROUP}/providers/microsoft.operationalinsights/workspaces/{WORKSPACE_NAME}'

    az monitor diagnostic-settings create  --name tvk-diagnostic-logs-cassandra --resource $resourceId --logs  $logs --workspace $workspace --export-to-resource-specific true
logs='[{"category":"CassandraAudit","enabled":true,"retentionPolicy":{"enabled":true,"days":3}},{"category":"CassandraLogs","enabled":true,"retentionPolicy":{"enabled":true,"days":3}}]'
    resourceId='/subscriptions/{SUBSCRIPTION_ID}/resourceGroups/{RESOURCE_GROUP}/providers/Microsoft.DocumentDB/cassandraClusters/{CLUSTER_NAME}'
    workspace='/subscriptions/{SUBSCRIPTION_ID}/resourcegroups/{RESOURCE_GROUP}/providers/microsoft.operationalinsights/workspaces/{WORKSPACE_NAME}'

    az monitor diagnostic-settings create  --name tvk-diagnostic-logs-cassandra --resource $resourceId --logs  $logs --workspace $workspace --export-to-resource-specific true
Create a diagnostic setting via the REST API
Use theAzure Monitor REST APIfor creating a diagnostic setting via the interactive console.
Note
We recommend setting thelogAnalyticsDestinationTypeproperty toDedicatedfor enabling resource-specific tables.
logAnalyticsDestinationType
Dedicated
PUT
https://management.azure.com/{resource-id}/providers/microsoft.insights/diagnosticSettings/service?api-version={api-version}
PUT
https://management.azure.com/{resource-id}/providers/microsoft.insights/diagnosticSettings/service?api-version={api-version}
name
resourceUri
subscriptions/{SUBSCRIPTION_ID}/resourceGroups/{RESOURCE_GROUP}/providers/Microsoft.DocumentDb/databaseAccounts/{ACCOUNT_NAME}/providers/microsoft.insights/diagnosticSettings/{DIAGNOSTIC_SETTING_NAME}
api-version
2017-05-01-preview
Content-Type
application/json
{
    "id": "/subscriptions/{SUBSCRIPTION_ID}/resourceGroups/{RESOURCE_GROUP}/providers/Microsoft.DocumentDb/databaseAccounts/{ACCOUNT_NAME}/providers/microsoft.insights/diagnosticSettings/{DIAGNOSTIC_SETTING_NAME}",
    "type": "Microsoft.Insights/diagnosticSettings",
    "name": "name",
    "location": null,
    "kind": null,
    "tags": null,
    "properties": {
        "storageAccountId": null,
        "serviceBusRuleId": null,
        "workspaceId": "/subscriptions/{SUBSCRIPTION_ID}/resourcegroups/{RESOURCE_GROUP}/providers/microsoft.operationalinsights/workspaces/{WORKSPACE_NAME}",
        "eventHubAuthorizationRuleId": null,
        "eventHubName": null,
        "logs": [
            {
                "category": "CassandraAudit",
                "categoryGroup": null,
                "enabled": true,
                "retentionPolicy": {
                    "enabled": false,
                    "days": 0
                }
            },
            {
                "category": "CassandraLogs",
                "categoryGroup": null,
                "enabled": true,
                "retentionPolicy": {
                    "enabled": false,
                    "days": 0
                }
            }
        ],
        "logAnalyticsDestinationType": "Dedicated"
    },
    "identity": null
}
{
    "id": "/subscriptions/{SUBSCRIPTION_ID}/resourceGroups/{RESOURCE_GROUP}/providers/Microsoft.DocumentDb/databaseAccounts/{ACCOUNT_NAME}/providers/microsoft.insights/diagnosticSettings/{DIAGNOSTIC_SETTING_NAME}",
    "type": "Microsoft.Insights/diagnosticSettings",
    "name": "name",
    "location": null,
    "kind": null,
    "tags": null,
    "properties": {
        "storageAccountId": null,
        "serviceBusRuleId": null,
        "workspaceId": "/subscriptions/{SUBSCRIPTION_ID}/resourcegroups/{RESOURCE_GROUP}/providers/microsoft.operationalinsights/workspaces/{WORKSPACE_NAME}",
        "eventHubAuthorizationRuleId": null,
        "eventHubName": null,
        "logs": [
            {
                "category": "CassandraAudit",
                "categoryGroup": null,
                "enabled": true,
                "retentionPolicy": {
                    "enabled": false,
                    "days": 0
                }
            },
            {
                "category": "CassandraLogs",
                "categoryGroup": null,
                "enabled": true,
                "retentionPolicy": {
                    "enabled": false,
                    "days": 0
                }
            }
        ],
        "logAnalyticsDestinationType": "Dedicated"
    },
    "identity": null
}
Audit whitelist
Note
This article contains references to the termwhitelist, which Microsoft no longer uses. When the term is removed from the software, we'll remove it from this article.
By default, audit logging creates a record for every login attempt and CQL query. The result can be overwhelming and increase overhead. To manage this situation, you can use a whitelist to selectively include or exclude specific audit records.
Cassandra 3.11
In Cassandra 3.11, you can use the audit whitelist feature to set what operationsdon'tcreate an audit record. The audit whitelist feature is enabled by default in Cassandra 3.11. To learn how to configure your whitelist, seeRole-based whitelist management.
Examples:
To filter out allSELECTandMODIFYoperations for the userbobfrom the audit log, execute the following statements:cassandra@cqlsh> ALTER ROLE bob WITH OPTIONS = { 'GRANT AUDIT WHITELIST FOR SELECT' : 'data' };
cassandra@cqlsh> ALTER ROLE bob WITH OPTIONS = { 'GRANT AUDIT WHITELIST FOR MODIFY' : 'data' };
To filter out allSELECTandMODIFYoperations for the userbobfrom the audit log, execute the following statements:
SELECT
MODIFY
bob
cassandra@cqlsh> ALTER ROLE bob WITH OPTIONS = { 'GRANT AUDIT WHITELIST FOR SELECT' : 'data' };
cassandra@cqlsh> ALTER ROLE bob WITH OPTIONS = { 'GRANT AUDIT WHITELIST FOR MODIFY' : 'data' };
cassandra@cqlsh> ALTER ROLE bob WITH OPTIONS = { 'GRANT AUDIT WHITELIST FOR SELECT' : 'data' };
cassandra@cqlsh> ALTER ROLE bob WITH OPTIONS = { 'GRANT AUDIT WHITELIST FOR MODIFY' : 'data' };
To filter out allSELECToperations on thedecisionstable in thedesignkeyspace for userjimfrom the audit log, execute the following statement:cassandra@cqlsh> ALTER ROLE jim WITH OPTIONS = { 'GRANT AUDIT WHITELIST FOR SELECT' : 'data/design/decisions' };
To filter out allSELECToperations on thedecisionstable in thedesignkeyspace for userjimfrom the audit log, execute the following statement:
SELECT
decisions
design
jim
cassandra@cqlsh> ALTER ROLE jim WITH OPTIONS = { 'GRANT AUDIT WHITELIST FOR SELECT' : 'data/design/decisions' };
cassandra@cqlsh> ALTER ROLE jim WITH OPTIONS = { 'GRANT AUDIT WHITELIST FOR SELECT' : 'data/design/decisions' };
To revoke the whitelist for userbobon all the user'sSELECToperations, execute the following statement:cassandra@cqlsh> ALTER ROLE bob WITH OPTIONS = { 'REVOKE AUDIT WHITELIST FOR SELECT' : 'data' };
To revoke the whitelist for userbobon all the user'sSELECToperations, execute the following statement:
bob
SELECT
cassandra@cqlsh> ALTER ROLE bob WITH OPTIONS = { 'REVOKE AUDIT WHITELIST FOR SELECT' : 'data' };
cassandra@cqlsh> ALTER ROLE bob WITH OPTIONS = { 'REVOKE AUDIT WHITELIST FOR SELECT' : 'data' };
To view current whitelists, execute the following statement:cassandra@cqlsh> LIST ROLES;
To view current whitelists, execute the following statement:
cassandra@cqlsh> LIST ROLES;
cassandra@cqlsh> LIST ROLES;
Cassandra 4 and later
In Cassandra 4 and later, you can configure your whitelist in the Cassandra configuration. For detailed guidance, seeUpdate Cassandra configuration. The available options are as follows (reference:Cassandra documentation for audit logging):
audit_logging_options:
    included_keyspaces: <Comma separated list of keyspaces to be included in audit log, default - includes all keyspaces>
    excluded_keyspaces: <Comma separated list of keyspaces to be excluded from audit log, default - excludes no keyspace except system, system_schema and system_virtual_schema>
    included_categories: <Comma separated list of Audit Log Categories to be included in audit log, default - includes all categories>
    excluded_categories: <Comma separated list of Audit Log Categories to be excluded from audit log, default - excludes no category>
    included_users: <Comma separated list of users to be included in audit log, default - includes all users>
    excluded_users: <Comma separated list of users to be excluded from audit log, default - excludes no user>
audit_logging_options:
    included_keyspaces: <Comma separated list of keyspaces to be included in audit log, default - includes all keyspaces>
    excluded_keyspaces: <Comma separated list of keyspaces to be excluded from audit log, default - excludes no keyspace except system, system_schema and system_virtual_schema>
    included_categories: <Comma separated list of Audit Log Categories to be included in audit log, default - includes all categories>
    excluded_categories: <Comma separated list of Audit Log Categories to be excluded from audit log, default - excludes no category>
    included_users: <Comma separated list of users to be included in audit log, default - includes all users>
    excluded_users: <Comma separated list of users to be excluded from audit log, default - excludes no user>
The available categories are:QUERY,DML,DDL,DCL,OTHER,AUTH,ERROR,PREPARE.
QUERY
DML
DDL
DCL
OTHER
AUTH
ERROR
PREPARE
Here's an example configuration:
audit_logging_options:
    included_keyspaces: keyspace1,keyspace2
    included_categories: AUTH,ERROR,DCL,DDL
audit_logging_options:
    included_keyspaces: keyspace1,keyspace2
    included_categories: AUTH,ERROR,DCL,DDL
By default, the configuration setsincluded_categoriestoAUTH,ERROR,DCL,DDL.
included_categories
AUTH,ERROR,DCL,DDL
Next steps
For detailed information about how to create a diagnostic setting by using the Azure portal, the Azure CLI, or PowerShell, seeDiagnostic settings in Azure Monitor.
Feedback
Was this page helpful?
Additional resources