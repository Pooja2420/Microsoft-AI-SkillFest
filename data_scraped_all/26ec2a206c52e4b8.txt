Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Tutorial: Create an application gateway with a Web Application Firewall using the Azure portal
Article
2024-05-23
7 contributors
In this article
This tutorial shows you how to use the Azure portal to create an Application Gateway with a Web Application Firewall (WAF). The WAF usesOWASPrules to protect your application. These rules include protection against attacks such as SQL injection, cross-site scripting attacks, and session hijacks. After creating the application gateway, you test it to make sure it's working correctly. With Azure Application Gateway, you direct your application web traffic to specific resources by assigning listeners to ports, creating rules, and adding resources to a backend pool. For the sake of simplicity, this tutorial uses a simple setup with a public front-end IP, a basic listener to host a single site on this application gateway, two Linux virtual machines used for the backend pool, and a basic request routing rule.
In this tutorial, you learn how to:
Create an application gateway with WAF enabled
Create the virtual machines used as backend servers
Create a storage account and configure diagnostics
Test the application gateway

Note
We recommend that you use the Azure Az PowerShell module to interact with Azure. To get started, seeInstall Azure PowerShell. To learn how to migrate to the Az PowerShell module, seeMigrate Azure PowerShell from AzureRM to Az.
Prerequisites
If you don't have an Azure subscription, create afree accountbefore you begin.
Sign in to Azure
Sign in to theAzure portal.
Create an application gateway
SelectCreate a resourceon the left menu of the Azure portal. TheCreate a resourcewindow appears.
SelectCreate a resourceon the left menu of the Azure portal. TheCreate a resourcewindow appears.
SelectNetworkingand then selectApplication Gatewayin thePopular Azure serviceslist.
SelectNetworkingand then selectApplication Gatewayin thePopular Azure serviceslist.
Basics tab
On theBasicstab, enter these values for the following application gateway settings:Resource group: SelectmyResourceGroupAGfor the resource group. If it doesn't exist, selectCreate newto create it.Application gateway name: EntermyAppGatewayfor the name of the application gateway.Tier: selectWAF V2.WAF Policy: SelectCreate new, type a name for the new policy, and then selectOK.
This creates a basic WAF policy with a managed Core Rule Set (CRS).
On theBasicstab, enter these values for the following application gateway settings:
Resource group: SelectmyResourceGroupAGfor the resource group. If it doesn't exist, selectCreate newto create it.
Resource group: SelectmyResourceGroupAGfor the resource group. If it doesn't exist, selectCreate newto create it.
Application gateway name: EntermyAppGatewayfor the name of the application gateway.
Application gateway name: EntermyAppGatewayfor the name of the application gateway.
Tier: selectWAF V2.
Tier: selectWAF V2.
WAF Policy: SelectCreate new, type a name for the new policy, and then selectOK.
This creates a basic WAF policy with a managed Core Rule Set (CRS).
WAF Policy: SelectCreate new, type a name for the new policy, and then selectOK.
This creates a basic WAF policy with a managed Core Rule Set (CRS).

For Azure to communicate between the resources that you create, it needs a virtual network. You can either create a new virtual network or use an existing one. In this example, you create a new virtual network at the same time that you create the application gateway. Application Gateway instances are created in separate subnets. You create two subnets in this example: one for the application gateway, and then later add another for the backend servers.UnderConfigure virtual network,  selectCreate newto create a new virtual network. In theCreate virtual networkwindow that opens, enter the following values to create the virtual network and a subnet:Name: EntermyVNetfor the name of the virtual network.Address space: Accept the10.0.0.0/16address range.Subnet name(Application Gateway subnet): TheSubnetsarea shows a subnet namedDefault. Change the name of this subnet tomyAGSubnet, and leave the default IPv4 Address range of10.0.0.0/24.The application gateway subnet can contain only application gateways. No other resources are allowed.SelectOKto close theCreate virtual networkwindow and save the virtual network settings.
For Azure to communicate between the resources that you create, it needs a virtual network. You can either create a new virtual network or use an existing one. In this example, you create a new virtual network at the same time that you create the application gateway. Application Gateway instances are created in separate subnets. You create two subnets in this example: one for the application gateway, and then later add another for the backend servers.
UnderConfigure virtual network,  selectCreate newto create a new virtual network. In theCreate virtual networkwindow that opens, enter the following values to create the virtual network and a subnet:
Name: EntermyVNetfor the name of the virtual network.
Name: EntermyVNetfor the name of the virtual network.
Address space: Accept the10.0.0.0/16address range.
Address space: Accept the10.0.0.0/16address range.
Subnet name(Application Gateway subnet): TheSubnetsarea shows a subnet namedDefault. Change the name of this subnet tomyAGSubnet, and leave the default IPv4 Address range of10.0.0.0/24.The application gateway subnet can contain only application gateways. No other resources are allowed.SelectOKto close theCreate virtual networkwindow and save the virtual network settings.
Subnet name(Application Gateway subnet): TheSubnetsarea shows a subnet namedDefault. Change the name of this subnet tomyAGSubnet, and leave the default IPv4 Address range of10.0.0.0/24.The application gateway subnet can contain only application gateways. No other resources are allowed.
SelectOKto close theCreate virtual networkwindow and save the virtual network settings.
On theBasicstab, accept the default values for the other settings and then selectNext: Frontends.
On theBasicstab, accept the default values for the other settings and then selectNext: Frontends.
Frontends tab
On theFrontendstab, verifyFrontend IP address typeis set toPublic.You can configure the Frontend IP to bePublicorBothas per your use case. In this example, you choose a Public Frontend IP.NoteFor the Application Gateway v2 SKU,PublicandBothFrontend IP address types are supported today.Privatefrontend IP configuration only is not currently supported.
On theFrontendstab, verifyFrontend IP address typeis set toPublic.You can configure the Frontend IP to bePublicorBothas per your use case. In this example, you choose a Public Frontend IP.
Note
For the Application Gateway v2 SKU,PublicandBothFrontend IP address types are supported today.Privatefrontend IP configuration only is not currently supported.
ChooseAdd newfor thePublic IP addressand entermyAGPublicIPAddressfor the public IP address name, and then selectOK.
ChooseAdd newfor thePublic IP addressand entermyAGPublicIPAddressfor the public IP address name, and then selectOK.

SelectNext: Backends.
SelectNext: Backends.
Backends tab
The backend pool is used to route requests to the backend servers that serve the request. Backend pools can be composed of NICs, virtual machine scale sets, public IPs, internal IPs, fully qualified domain names (FQDN), and multitenant back-ends like Azure App Service. In this example, you create an empty backend pool with your application gateway and then later add backend targets to the backend pool.
On theBackendstab, selectAdd a backend pool.
On theBackendstab, selectAdd a backend pool.
In theAdd a backend poolwindow that opens, enter the following values to create an empty backend pool:Name: EntermyBackendPoolfor the name of the backend pool.Add backend pool without targets: SelectYesto create a backend pool with no targets. You'll add backend targets after creating the application gateway.
In theAdd a backend poolwindow that opens, enter the following values to create an empty backend pool:
Name: EntermyBackendPoolfor the name of the backend pool.
Add backend pool without targets: SelectYesto create a backend pool with no targets. You'll add backend targets after creating the application gateway.
In theAdd a backend poolwindow, selectAddto save the backend pool configuration and return to theBackendstab.
In theAdd a backend poolwindow, selectAddto save the backend pool configuration and return to theBackendstab.
On theBackendstab, selectNext: Configuration.
On theBackendstab, selectNext: Configuration.
Configuration tab
On theConfigurationtab, you connect the frontend and backend pool you created using a routing rule.
SelectAdd a routing rulein theRouting rulescolumn.
SelectAdd a routing rulein theRouting rulescolumn.
In theAdd a routing rulewindow that opens, entermyRoutingRulefor theRule name.
In theAdd a routing rulewindow that opens, entermyRoutingRulefor theRule name.
ForPriority, type a priority number.
ForPriority, type a priority number.
A routing rule requires a listener. On theListenertab within theAdd a routing rulewindow, enter the following values for the listener:Listener name: EntermyListenerfor the name of the listener.Frontend IP Protocol: SelectPublic IPv4to choose the public IP you created for the frontend.Accept the default values for the other settings on theListenertab, then select theBackend targetstab to configure the rest of the routing rule.
A routing rule requires a listener. On theListenertab within theAdd a routing rulewindow, enter the following values for the listener:
Listener name: EntermyListenerfor the name of the listener.
Listener name: EntermyListenerfor the name of the listener.
Frontend IP Protocol: SelectPublic IPv4to choose the public IP you created for the frontend.Accept the default values for the other settings on theListenertab, then select theBackend targetstab to configure the rest of the routing rule.
Frontend IP Protocol: SelectPublic IPv4to choose the public IP you created for the frontend.
Accept the default values for the other settings on theListenertab, then select theBackend targetstab to configure the rest of the routing rule.
On theBackend targetstab, selectmyBackendPoolfor theBackend target.
On theBackend targetstab, selectmyBackendPoolfor theBackend target.
For theBackend settings, selectAdd newto create a new Backend setting. This setting determines the behavior of the routing rule. In theAdd Backend settingwindow that opens, entermyBackendSettingfor theBackend settings name. Accept the default values for the other settings in the window, then selectAddto return to theAdd a routing rulewindow.
For theBackend settings, selectAdd newto create a new Backend setting. This setting determines the behavior of the routing rule. In theAdd Backend settingwindow that opens, entermyBackendSettingfor theBackend settings name. Accept the default values for the other settings in the window, then selectAddto return to theAdd a routing rulewindow.
On theAdd a routing rulewindow, selectAddto save the routing rule and return to theConfigurationtab.
On theAdd a routing rulewindow, selectAddto save the routing rule and return to theConfigurationtab.
SelectNext: Tagsand thenNext: Review + create.
SelectNext: Tagsand thenNext: Review + create.
Review + create tab
Review the settings on theReview + createtab, and then selectCreateto create the virtual network, the public IP address, and the application gateway. It might take several minutes for Azure to create the application gateway.
Wait until the deployment finishes successfully before moving on to the next section.
Add the backend server subnet
Open the myVNet virtual network.
UnderSettings, selectSubnets.
Select+ Subnet.
ForName, typemyBackendSubnet.
ForStarting address, type10.0.1.0.
SelectAddto add the subnet.
Add backend targets
In this example, you use virtual machines as the target backend. You can either use existing virtual machines or create new ones. You create two virtual machines that Azure uses as backend servers for the application gateway.
To do this, you'll:
Create two new Linux VMs,myVMandmyVM2, to be used as backend servers.
Install NGINX on the virtual machines to verify that the application gateway was created successfully.
Add the backend servers to the backend pool.
Create a virtual machine
On the Azure portal, selectCreate a resource. TheCreate a resourcewindow appears.
On the Azure portal, selectCreate a resource. TheCreate a resourcewindow appears.
UnderVirtual machine, selectCreate.
UnderVirtual machine, selectCreate.
Enter these values in theBasicstab for the following virtual machine settings:Resource group: SelectmyResourceGroupAGfor the resource group name.Virtual machine name: EntermyVMfor the name of the virtual machine.Image: Ubuntu Server 20.04 LTS - Gen2.Authentication type: PasswordUsername: Enter a name for the administrator username.Password: Enter a password for the administrator password.Public inbound ports: SelectNone.
Enter these values in theBasicstab for the following virtual machine settings:
Resource group: SelectmyResourceGroupAGfor the resource group name.
Virtual machine name: EntermyVMfor the name of the virtual machine.
Image: Ubuntu Server 20.04 LTS - Gen2.
Authentication type: Password
Username: Enter a name for the administrator username.
Password: Enter a password for the administrator password.
Public inbound ports: SelectNone.
Accept the other defaults and then selectNext: Disks.
Accept the other defaults and then selectNext: Disks.
Accept theDiskstab defaults and then selectNext: Networking.
Accept theDiskstab defaults and then selectNext: Networking.
On theNetworkingtab, verify thatmyVNetis selected for theVirtual networkand theSubnetis set tomyBackendSubnet.
On theNetworkingtab, verify thatmyVNetis selected for theVirtual networkand theSubnetis set tomyBackendSubnet.
ForPublic IP, selectNone.
ForPublic IP, selectNone.
Accept the other defaults and then selectNext: Management.
Accept the other defaults and then selectNext: Management.
SelectNext: Monitoring, setBoot diagnosticstoDisable. Accept the other defaults and then selectReview + create.
SelectNext: Monitoring, setBoot diagnosticstoDisable. Accept the other defaults and then selectReview + create.
On theReview + createtab, review the settings, correct any validation errors, and then selectCreate.
On theReview + createtab, review the settings, correct any validation errors, and then selectCreate.
Wait for the virtual machine creation to complete before continuing.
Wait for the virtual machine creation to complete before continuing.
Install NGINX for testing
In this example, you install NGINX on the virtual machines only to verify Azure created the application gateway successfully.
Open a Bash Cloud Shell. To do so, select theCloud Shellicon from the top navigation bar of the Azure portal and then selectBashfrom the drop-down list.
Open a Bash Cloud Shell. To do so, select theCloud Shellicon from the top navigation bar of the Azure portal and then selectBashfrom the drop-down list.
Ensure your bash session is set for your subscription:az account set --subscription "<your subscription name>"
Ensure your bash session is set for your subscription:
az account set --subscription "<your subscription name>"
az account set --subscription "<your subscription name>"
Run the following command to install NGINX on the virtual machine:az vm extension set \
 --publisher Microsoft.Azure.Extensions \
 --version 2.0 \
 --name CustomScript \
 --resource-group myResourceGroupAG \
 --vm-name myVM \
 --settings '{ "fileUris": ["https://raw.githubusercontent.com/Azure/azure-docs-powershell-samples/master/application-gateway/iis/install_nginx.sh"], "commandToExecute": "./install_nginx.sh" }'
Run the following command to install NGINX on the virtual machine:
az vm extension set \
 --publisher Microsoft.Azure.Extensions \
 --version 2.0 \
 --name CustomScript \
 --resource-group myResourceGroupAG \
 --vm-name myVM \
 --settings '{ "fileUris": ["https://raw.githubusercontent.com/Azure/azure-docs-powershell-samples/master/application-gateway/iis/install_nginx.sh"], "commandToExecute": "./install_nginx.sh" }'
az vm extension set \
 --publisher Microsoft.Azure.Extensions \
 --version 2.0 \
 --name CustomScript \
 --resource-group myResourceGroupAG \
 --vm-name myVM \
 --settings '{ "fileUris": ["https://raw.githubusercontent.com/Azure/azure-docs-powershell-samples/master/application-gateway/iis/install_nginx.sh"], "commandToExecute": "./install_nginx.sh" }'
Create a second virtual machine and install NGINX using these steps that you previously completed. UsemyVM2for the virtual machine name and for the--vm-namesetting of the cmdlet.
Create a second virtual machine and install NGINX using these steps that you previously completed. UsemyVM2for the virtual machine name and for the--vm-namesetting of the cmdlet.
--vm-name
Add backend servers to backend pool
SelectAll resources, and then selectmyAppGateway.
SelectAll resources, and then selectmyAppGateway.
SelectBackend poolsfrom the left menu.
SelectBackend poolsfrom the left menu.
SelectmyBackendPool.
SelectmyBackendPool.
UnderTarget type, selectVirtual machinefrom the drop-down list.
UnderTarget type, selectVirtual machinefrom the drop-down list.
UnderTarget, select the associated network interface formyVMfrom the drop-down list.
UnderTarget, select the associated network interface formyVMfrom the drop-down list.
Repeat formyVM2.
Repeat formyVM2.
SelectSave.
SelectSave.
Wait for the deployment to complete before proceeding to the next step.
Wait for the deployment to complete before proceeding to the next step.
Test the application gateway
Although NGINX isn't required to create the application gateway, you installed it to verify whether Azure successfully created the application gateway. Use the web service to test the application gateway:
Find the public IP address for the application gateway on itsOverviewpage.Or, you can selectAll resources, entermyAGPublicIPAddressin the search box, and then select it in the search results. Azure displays the public IP address on theOverviewpage.
Find the public IP address for the application gateway on itsOverviewpage.
Or, you can selectAll resources, entermyAGPublicIPAddressin the search box, and then select it in the search results. Azure displays the public IP address on theOverviewpage.
Copy the public IP address, and then paste it into the address bar of your browser.
Copy the public IP address, and then paste it into the address bar of your browser.
Check the response. A valid response verifies that the application gateway was successfully created and it can successfully connect with the backend.
Check the response. A valid response verifies that the application gateway was successfully created and it can successfully connect with the backend.

Clean up resources
When you no longer need the resources that you created with the application gateway, remove the resource group. By removing the resource group, you also remove the application gateway and all its related resources.
To remove the resource group:
On the left menu of the Azure portal, selectResource groups.
On theResource groupspage, search formyResourceGroupAGin the list, then select it.
On theResource group page, selectDelete resource group.
EntermyResourceGroupAGforTYPE THE RESOURCE GROUP NAMEand then selectDelete.
Next step
Learn more about Web Application Firewall
Feedback
Was this page helpful?
Additional resources