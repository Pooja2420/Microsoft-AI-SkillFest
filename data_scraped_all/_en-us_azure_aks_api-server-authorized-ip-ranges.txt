Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Secure access to the API server using authorized IP address ranges in Azure Kubernetes Service (AKS)
Article
2024-08-14
30 contributors
In this article
This article shows you how to useAPI server authorized IP address rangesfeature to limit which IP addresses and CIDRs can access control plane.
The Kubernetes API server is the core of the Kubernetes control plane and is the central way to interact with and manage your clusters. To improve the security of your clusters and minimize the risk of attacks, we recommend limiting the IP address ranges that can access the API server. To do this, you can use theAPI server authorized IP rangesfeature.
Before you begin
You need the Azure CLI version 2.0.76 or later installed and configured. Runaz --versionto find the version. If you need to install or upgrade, seeInstall Azure CLI.
az --version
To learn what IP addresses to include when integrating your AKS cluster with Azure DevOps, see the Azure DevOpsAllowed IP addresses and domain URLsarticle.
Limitations
TheAPI server authorized IP rangesfeature has the following limitations:
TheAPI server authorized IP rangesfeature was moved out of preview in October 2019. For clusters created after the feature was moved out of preview, this feature is only supported on theStandardSKU load balancer. Any existing clusters on theBasicSKU load balancer with theAPI server authorized IP rangesfeature enabled will continue to work as is. However, these clusters cannot be migrated to aStandardSKU load balancer. Existing clusters will continue to work if the Kubernetes version and control plane are upgraded.
TheAPI server authorized IP rangesfeature isn't supported on private clusters.
When using this feature with clusters that useNode Public IP, the node pools using Node Public IP must use public IP prefixes. The public IP prefixes must be added as authorized ranges.
Overview of API server authorized IP ranges
The Kubernetes API server exposes underlying Kubernetes APIs and provides the interaction for management tools likekubectland the Kubernetes dashboard. AKS provides a single-tenant cluster control plane with a dedicated API server. The API server is assigned a public IP address by default. You can control access using Kubernetes role-based access control (Kubernetes RBAC) or Azure RBAC.
kubectl
To secure access to the otherwise publicly accessible AKS control plane / API server, you can enable and use authorized IP ranges. These authorized IP ranges only allow defined IP address ranges to communicate with the API server. Any requests made to the API server from an IP address that isn't part of these authorized IP ranges is blocked.
Create an AKS cluster with API server authorized IP ranges enabled
Important
By default, your cluster uses theStandard SKU load balancerwhich you can use to configure the outbound gateway. When you enable API server authorized IP ranges during cluster creation, the public IP for your cluster is allowed by default in addition to the ranges you specify. If you specify""or no value for--api-server-authorized-ip-ranges, API server authorized IP ranges is disabled. Note that if you're using PowerShell, use--api-server-authorized-ip-ranges=""(with equals signs) to avoid any parsing issues.
--api-server-authorized-ip-ranges
--api-server-authorized-ip-ranges=""
Note
You should add these ranges to an allow list:
The cluster egress IP address (firewall, NAT gateway, or other address, depending on youroutbound type).
Any range that represents networks that you'll administer the cluster from.
The upper limit for the number of IP ranges you can specify is 200.
The rules can take up to two minutes to propagate. Please allow up to that time when testing the connection.
Azure CLI
Azure PowerShell
Azure portal
When creating a cluster with API server authorized IP ranges enabled, you use the--api-server-authorized-ip-rangesparameter to provide a list of authorized public IP address ranges. When you specify a CIDR range, start with the first IP address in the range. For example,137.117.106.90/29is a valid range, but make sure you specify the first IP address in the range, such as137.117.106.88/29.
--api-server-authorized-ip-ranges
Create an AKS cluster with API server authorized IP ranges enabled using theaz aks createcommand with the--api-server-authorized-ip-rangesparameter. The following example creates a cluster namedmyAKSClusterin the resource group namedmyResourceGroupwith API server authorized IP ranges enabled. The IP address ranges allowed are73.140.245.0/24:az aks create --resource-group myResourceGroup --name myAKSCluster --vm-set-type VirtualMachineScaleSets --load-balancer-sku standard --api-server-authorized-ip-ranges 73.140.245.0/24 --generate-ssh-keys
Create an AKS cluster with API server authorized IP ranges enabled using theaz aks createcommand with the--api-server-authorized-ip-rangesparameter. The following example creates a cluster namedmyAKSClusterin the resource group namedmyResourceGroupwith API server authorized IP ranges enabled. The IP address ranges allowed are73.140.245.0/24:
az aks create
--api-server-authorized-ip-ranges
az aks create --resource-group myResourceGroup --name myAKSCluster --vm-set-type VirtualMachineScaleSets --load-balancer-sku standard --api-server-authorized-ip-ranges 73.140.245.0/24 --generate-ssh-keys
az aks create --resource-group myResourceGroup --name myAKSCluster --vm-set-type VirtualMachineScaleSets --load-balancer-sku standard --api-server-authorized-ip-ranges 73.140.245.0/24 --generate-ssh-keys
When creating a cluster with API server authorized IP ranges enabled, you use the-ApiServerAccessAuthorizedIpRangeparameter to provide a list of authorized public IP address ranges. When you specify a CIDR range, start with the first IP address in the range. For example,137.117.106.90/29is a valid range, but make sure you specify the first IP address in the range, such as137.117.106.88/29.
-ApiServerAccessAuthorizedIpRange
Create an AKS cluster with API server authorized IP ranges enabled using theNew-AzAksClustercmdlet with the-ApiServerAccessAuthorizedIpRangeparameter. The following example creates a cluster namedmyAKSClusterin the resource group namedmyResourceGroupwith API server authorized IP ranges enabled. The IP address ranges allowed are73.140.245.0/24:New-AzAksCluster -ResourceGroupName myResourceGroup -Name myAKSCluster -NodeVmSetType VirtualMachineScaleSets -LoadBalancerSku Standard -ApiServerAccessAuthorizedIpRange '73.140.245.0/24' -GenerateSshKey
Create an AKS cluster with API server authorized IP ranges enabled using theNew-AzAksClustercmdlet with the-ApiServerAccessAuthorizedIpRangeparameter. The following example creates a cluster namedmyAKSClusterin the resource group namedmyResourceGroupwith API server authorized IP ranges enabled. The IP address ranges allowed are73.140.245.0/24:
New-AzAksCluster
-ApiServerAccessAuthorizedIpRange
New-AzAksCluster -ResourceGroupName myResourceGroup -Name myAKSCluster -NodeVmSetType VirtualMachineScaleSets -LoadBalancerSku Standard -ApiServerAccessAuthorizedIpRange '73.140.245.0/24' -GenerateSshKey
New-AzAksCluster -ResourceGroupName myResourceGroup -Name myAKSCluster -NodeVmSetType VirtualMachineScaleSets -LoadBalancerSku Standard -ApiServerAccessAuthorizedIpRange '73.140.245.0/24' -GenerateSshKey
When creating a cluster with API server authorized IP ranges enabled, you specify a list of authorized public IP address ranges. When you specify a CIDR range, start with the first IP address in the range. For example,137.117.106.90/29is a valid range, but make sure you specify the first IP address in the range, such as137.117.106.88/29.
From theAzure portal home page, selectCreate a resource>Containers>Azure Kubernetes Service (AKS).
Configure the cluster settings as needed.
In theNetworkingsection underPublic access, selectSet authorized IP ranges.
ForSpecify IP ranges, enter the IP address ranges you want to authorize to access the API server.
Configure the rest of the cluster settings as needed.
When you're ready, selectReview + create>Createto create the cluster.
Specify outbound IPs for a Standard SKU load balancer
When creating a cluster with API server authorized IP ranges enabled, you can also specify the outbound IP addresses or prefixes for the cluster using the--load-balancer-outbound-ipsor--load-balancer-outbound-ip-prefixesparameters. All IPs provided in the parameters are allowed along with the IPs in the--api-server-authorized-ip-rangesparameter.
--load-balancer-outbound-ips
--load-balancer-outbound-ip-prefixes
--api-server-authorized-ip-ranges
Create an AKS cluster with API server authorized IP ranges enabled and specify the outbound IP addresses for the Standard SKU load balancer using the--load-balancer-outbound-ipsparameter. The following example creates a cluster namedmyAKSClusterin the resource group namedmyResourceGroupwith API server authorized IP ranges enabled and the outbound IP addresses<public-ip-id-1>and<public-ip-id-2>:az aks create --resource-group myResourceGroup --name myAKSCluster --vm-set-type VirtualMachineScaleSets --load-balancer-sku standard --api-server-authorized-ip-ranges 73.140.245.0/24 --load-balancer-outbound-ips <public-ip-id-1>,<public-ip-id-2> --generate-ssh-keys
Create an AKS cluster with API server authorized IP ranges enabled and specify the outbound IP addresses for the Standard SKU load balancer using the--load-balancer-outbound-ipsparameter. The following example creates a cluster namedmyAKSClusterin the resource group namedmyResourceGroupwith API server authorized IP ranges enabled and the outbound IP addresses<public-ip-id-1>and<public-ip-id-2>:
--load-balancer-outbound-ips
<public-ip-id-1>
<public-ip-id-2>
az aks create --resource-group myResourceGroup --name myAKSCluster --vm-set-type VirtualMachineScaleSets --load-balancer-sku standard --api-server-authorized-ip-ranges 73.140.245.0/24 --load-balancer-outbound-ips <public-ip-id-1>,<public-ip-id-2> --generate-ssh-keys
az aks create --resource-group myResourceGroup --name myAKSCluster --vm-set-type VirtualMachineScaleSets --load-balancer-sku standard --api-server-authorized-ip-ranges 73.140.245.0/24 --load-balancer-outbound-ips <public-ip-id-1>,<public-ip-id-2> --generate-ssh-keys
Allow only the outbound public IP of the Standard SKU load balancer
Azure CLI
Azure PowerShell
Azure portal
When you enable API server authorized IP ranges during cluster creation, the outbound public IP for the Standard SKU load balancer for your cluster is also allowed by default in addition to the ranges you specify. To allow only the outbound public IP of the Standard SKU load balancer, you use0.0.0.0/32when specifying the--api-server-authorized-ip-rangesparameter.
--api-server-authorized-ip-ranges
Create an AKS cluster with API server authorized IP ranges enabled and allow only the outbound public IP of the Standard SKU load balancer using the--api-server-authorized-ip-rangesparameter. The following example creates a cluster namedmyAKSClusterin the resource group namedmyResourceGroupwith API server authorized IP ranges enabled and allows only the outbound public IP of the Standard SKU load balancer:az aks create --resource-group myResourceGroup --name myAKSCluster --vm-set-type VirtualMachineScaleSets --load-balancer-sku standard --api-server-authorized-ip-ranges 0.0.0.0/32 --generate-ssh-keys
Create an AKS cluster with API server authorized IP ranges enabled and allow only the outbound public IP of the Standard SKU load balancer using the--api-server-authorized-ip-rangesparameter. The following example creates a cluster namedmyAKSClusterin the resource group namedmyResourceGroupwith API server authorized IP ranges enabled and allows only the outbound public IP of the Standard SKU load balancer:
--api-server-authorized-ip-ranges
az aks create --resource-group myResourceGroup --name myAKSCluster --vm-set-type VirtualMachineScaleSets --load-balancer-sku standard --api-server-authorized-ip-ranges 0.0.0.0/32 --generate-ssh-keys
az aks create --resource-group myResourceGroup --name myAKSCluster --vm-set-type VirtualMachineScaleSets --load-balancer-sku standard --api-server-authorized-ip-ranges 0.0.0.0/32 --generate-ssh-keys
When you enable API server authorized IP ranges during cluster creation, the outbound public IP for the Standard SKU load balancer for your cluster is also allowed by default in addition to the ranges you specify. To allow only the outbound public IP of the Standard SKU load balancer, you use0.0.0.0/32when specifying the-ApiServerAccessAuthorizedIpRangeparameter.
-ApiServerAccessAuthorizedIpRange
Create an AKS cluster with API server authorized IP ranges enabled and allow only the outbound public IP of the Standard SKU load balancer using the-ApiServerAccessAuthorizedIpRangeparameter. The following example creates a cluster namedmyAKSClusterin the resource group namedmyResourceGroupwith API server authorized IP ranges enabled and allows only the outbound public IP of the Standard SKU load balancer:New-AzAksCluster -ResourceGroupName myResourceGroup -Name myAKSCluster -NodeVmSetType VirtualMachineScaleSets -LoadBalancerSku Standard -ApiServerAccessAuthorizedIpRange '0.0.0.0/32' -GenerateSshKey
Create an AKS cluster with API server authorized IP ranges enabled and allow only the outbound public IP of the Standard SKU load balancer using the-ApiServerAccessAuthorizedIpRangeparameter. The following example creates a cluster namedmyAKSClusterin the resource group namedmyResourceGroupwith API server authorized IP ranges enabled and allows only the outbound public IP of the Standard SKU load balancer:
-ApiServerAccessAuthorizedIpRange
New-AzAksCluster -ResourceGroupName myResourceGroup -Name myAKSCluster -NodeVmSetType VirtualMachineScaleSets -LoadBalancerSku Standard -ApiServerAccessAuthorizedIpRange '0.0.0.0/32' -GenerateSshKey
New-AzAksCluster -ResourceGroupName myResourceGroup -Name myAKSCluster -NodeVmSetType VirtualMachineScaleSets -LoadBalancerSku Standard -ApiServerAccessAuthorizedIpRange '0.0.0.0/32' -GenerateSshKey
When you enable API server authorized IP ranges during cluster creation, the outbound public IP for the Standard SKU load balancer for your cluster is also allowed by default in addition to the ranges you specify. To allow only the outbound public IP of the Standard SKU load balancer, you use0.0.0.0/32when specifying the IP ranges.
From theAzure portal home page, selectCreate a resource>Containers>Azure Kubernetes Service (AKS).
Configure the cluster settings as needed.
In theNetworkingsection underPublic access, selectSet authorized IP ranges.
ForSpecify IP ranges, enter0.0.0.0/32. This allows only the outbound public IP of the Standard SKU load balancer.
Configure the rest of the cluster settings as needed.
When you're ready, selectReview + create>Createto create the cluster.
Update an existing cluster's API server authorized IP ranges
Azure CLI
Azure PowerShell
Azure portal
Update an existing cluster's API server authorized IP ranges using theaz aks updatecommand with the--api-server-authorized-ip-rangesparameter. The following example updates API server authorized IP ranges on the cluster namedmyAKSClusterin the resource group namedmyResourceGroup. The IP address range to authorize is73.140.245.0/24:az aks update --resource-group myResourceGroup --name myAKSCluster --api-server-authorized-ip-ranges 73.140.245.0/24
Update an existing cluster's API server authorized IP ranges using theaz aks updatecommand with the--api-server-authorized-ip-rangesparameter. The following example updates API server authorized IP ranges on the cluster namedmyAKSClusterin the resource group namedmyResourceGroup. The IP address range to authorize is73.140.245.0/24:
az aks update
--api-server-authorized-ip-ranges
az aks update --resource-group myResourceGroup --name myAKSCluster --api-server-authorized-ip-ranges 73.140.245.0/24
az aks update --resource-group myResourceGroup --name myAKSCluster --api-server-authorized-ip-ranges 73.140.245.0/24
To allow multiple IP address ranges, you can list several IP addresses, separated by commas.az aks update --resource-group myResourceGroup --name myAKSCluster --api-server-authorized-ip-ranges 73.140.245.0/24,193.168.1.0/24,194.168.1.0/24You can also use0.0.0.0/32when specifying the--api-server-authorized-ip-rangesparameter to allow only the public IP of the Standard SKU load balancer.
To allow multiple IP address ranges, you can list several IP addresses, separated by commas.
az aks update --resource-group myResourceGroup --name myAKSCluster --api-server-authorized-ip-ranges 73.140.245.0/24,193.168.1.0/24,194.168.1.0/24
az aks update --resource-group myResourceGroup --name myAKSCluster --api-server-authorized-ip-ranges 73.140.245.0/24,193.168.1.0/24,194.168.1.0/24
You can also use0.0.0.0/32when specifying the--api-server-authorized-ip-rangesparameter to allow only the public IP of the Standard SKU load balancer.
--api-server-authorized-ip-ranges
Update an existing cluster's API server authorized IP ranges using theSet-AzAksClustercmdlet with the-ApiServerAccessAuthorizedIpRangeparameter. The following example updates API server authorized IP ranges on the cluster namedmyAKSClusterin the resource group namedmyResourceGroup. The IP address range to authorize is73.140.245.0/24:Set-AzAksCluster -ResourceGroupName myResourceGroup -Name myAKSCluster -ApiServerAccessAuthorizedIpRange '73.140.245.0/24'You can also use0.0.0.0/32when specifying the-ApiServerAccessAuthorizedIpRangeparameter to allow only the public IP of the Standard SKU load balancer.
Update an existing cluster's API server authorized IP ranges using theSet-AzAksClustercmdlet with the-ApiServerAccessAuthorizedIpRangeparameter. The following example updates API server authorized IP ranges on the cluster namedmyAKSClusterin the resource group namedmyResourceGroup. The IP address range to authorize is73.140.245.0/24:
Set-AzAksCluster
-ApiServerAccessAuthorizedIpRange
Set-AzAksCluster -ResourceGroupName myResourceGroup -Name myAKSCluster -ApiServerAccessAuthorizedIpRange '73.140.245.0/24'
Set-AzAksCluster -ResourceGroupName myResourceGroup -Name myAKSCluster -ApiServerAccessAuthorizedIpRange '73.140.245.0/24'
You can also use0.0.0.0/32when specifying the-ApiServerAccessAuthorizedIpRangeparameter to allow only the public IP of the Standard SKU load balancer.
-ApiServerAccessAuthorizedIpRange
Navigate to the Azure portal and select the AKS cluster you want to update.
In the service menu, underSettings, selectNetworking.
UnderResource settings, selectManage.
On theAuthorized IP rangespage, update theAuthorized IP rangesas needed.
When you're done, selectSave.
Disable authorized IP ranges
Azure CLI
Azure PowerShell
Azure portal
Disable authorized IP ranges using theaz aks updatecommand and specify an empty range""for the--api-server-authorized-ip-rangesparameter.az aks update --resource-group myResourceGroup --name myAKSCluster --api-server-authorized-ip-ranges ""
Disable authorized IP ranges using theaz aks updatecommand and specify an empty range""for the--api-server-authorized-ip-rangesparameter.
az aks update
""
--api-server-authorized-ip-ranges
az aks update --resource-group myResourceGroup --name myAKSCluster --api-server-authorized-ip-ranges ""
az aks update --resource-group myResourceGroup --name myAKSCluster --api-server-authorized-ip-ranges ""
Disable authorized IP ranges using theSet-AzAksClustercmdlet and specify an empty range''for the-ApiServerAccessAuthorizedIpRangeparameter.Set-AzAksCluster -ResourceGroupName myResourceGroup -Name myAKSCluster -ApiServerAccessAuthorizedIpRange ''
Disable authorized IP ranges using theSet-AzAksClustercmdlet and specify an empty range''for the-ApiServerAccessAuthorizedIpRangeparameter.
Set-AzAksCluster
''
-ApiServerAccessAuthorizedIpRange
Set-AzAksCluster -ResourceGroupName myResourceGroup -Name myAKSCluster -ApiServerAccessAuthorizedIpRange ''
Set-AzAksCluster -ResourceGroupName myResourceGroup -Name myAKSCluster -ApiServerAccessAuthorizedIpRange ''
Navigate to the Azure portal and select the AKS cluster you want to update.
In the service menu, underSettings, selectNetworking.
UnderResource settings, selectManage.
On theAuthorized IP rangespage, deselect theSet authorized IP rangescheckbox.
SelectSave.
Find existing authorized IP ranges
Azure CLI
Azure PowerShell
Azure portal
Find existing authorized IP ranges using theaz aks showcommand with the--queryparameter set toapiServerAccessProfile.authorizedIpRanges.az aks show --resource-group myResourceGroup --name myAKSCluster --query apiServerAccessProfile.authorizedIpRanges
Find existing authorized IP ranges using theaz aks showcommand with the--queryparameter set toapiServerAccessProfile.authorizedIpRanges.
az aks show
--query
apiServerAccessProfile.authorizedIpRanges
az aks show --resource-group myResourceGroup --name myAKSCluster --query apiServerAccessProfile.authorizedIpRanges
az aks show --resource-group myResourceGroup --name myAKSCluster --query apiServerAccessProfile.authorizedIpRanges
Find existing authorized IP ranges using theGet-AzAksClustercmdlet.Get-AzAksCluster -ResourceGroupName myResourceGroup -Name myAKSCluster | Select-Object -ExpandProperty ApiServerAccessProfile
Find existing authorized IP ranges using theGet-AzAksClustercmdlet.
Get-AzAksCluster
Get-AzAksCluster -ResourceGroupName myResourceGroup -Name myAKSCluster | Select-Object -ExpandProperty ApiServerAccessProfile
Get-AzAksCluster -ResourceGroupName myResourceGroup -Name myAKSCluster | Select-Object -ExpandProperty ApiServerAccessProfile
Navigate to the Azure portal and select your AKS cluster.
In the service menu, underSettings, selectNetworking. The existing authorized IP ranges are listed underResource settings.
How to find my IP to include in--api-server-authorized-ip-ranges?
--api-server-authorized-ip-ranges
You must add your development machines, tooling, or automation IP addresses to the AKS cluster list of approved IP ranges to access the API server from there.
Another option is to configure a jumpbox with the necessary tooling inside a separate subnet in the firewall's virtual network. This assumes your environment has a firewall with the respective network, and you've added the firewall IPs to authorized ranges. Similarly, if you've forced tunneling from the AKS subnet to the firewall subnet, having the jumpbox in the cluster subnet is also okay.
Retrieve your IP address using the following command:# Retrieve your IP address
CURRENT_IP=$(dig +short "myip.opendns.com" "@resolver1.opendns.com")
Retrieve your IP address using the following command:
# Retrieve your IP address
CURRENT_IP=$(dig +short "myip.opendns.com" "@resolver1.opendns.com")
# Retrieve your IP address
CURRENT_IP=$(dig +short "myip.opendns.com" "@resolver1.opendns.com")
Add your IP address to the approved list using Azure CLI or Azure PowerShell:# Add to AKS approved list using Azure CLI
az aks update --resource-group $RG --name $AKSNAME --api-server-authorized-ip-ranges $CURRENT_IP/24,73.140.245.0/24

# Add to AKS approved list using Azure PowerShell
Set-AzAksCluster -ResourceGroupName $RG -Name $AKSNAME -ApiServerAccessAuthorizedIpRange '$CURRENT_IP/24,73.140.245.0/24'
Add your IP address to the approved list using Azure CLI or Azure PowerShell:
# Add to AKS approved list using Azure CLI
az aks update --resource-group $RG --name $AKSNAME --api-server-authorized-ip-ranges $CURRENT_IP/24,73.140.245.0/24

# Add to AKS approved list using Azure PowerShell
Set-AzAksCluster -ResourceGroupName $RG -Name $AKSNAME -ApiServerAccessAuthorizedIpRange '$CURRENT_IP/24,73.140.245.0/24'
# Add to AKS approved list using Azure CLI
az aks update --resource-group $RG --name $AKSNAME --api-server-authorized-ip-ranges $CURRENT_IP/24,73.140.245.0/24

# Add to AKS approved list using Azure PowerShell
Set-AzAksCluster -ResourceGroupName $RG -Name $AKSNAME -ApiServerAccessAuthorizedIpRange '$CURRENT_IP/24,73.140.245.0/24'
Note
The above example adds another IP address to the approved ranges. Note that it still includes the IP address fromUpdate a cluster's API server authorized IP ranges. If you don't include your existing IP address, this command will replace it with the new one instead of adding it to the authorized ranges. To disable authorized IP ranges, useaz aks updateand specify an empty range "".
az aks update
Another option is to use the following command on Windows systems to get the public IPv4 address, or you can follow the steps inFind your IP address.
Invoke-RestMethod http://ipinfo.io/json | Select -exp ip
Invoke-RestMethod http://ipinfo.io/json | Select -exp ip
You can also find this address by searching onwhat is my IP addressin an internet browser.
Use Service Tags for API Server authorized IP ranges - (Preview)
Service tags are a convenient way to specify a group of IP addresses corresponding to a Kubernetes Service. You can use service tags to specify the IP addresses of Kubernetes servicesandspecific IP addresses in the authorized IP ranges for the API server by separating them with a comma.
Limitations
This feature is not compatible withAPI Server VNet Integration.
Important
AKS preview features are available on a self-service, opt-in basis. Previews are provided "as is" and "as available," and they're excluded from the service-level agreements and limited warranty. AKS previews are partially covered by customer support on a best-effort basis. As such, these features aren't meant for production use. For more information, see the following support articles:
AKS support policies
Azure support FAQ
Install the Azure CLI preview extension
Install the Azure CLI preview extension using the [az extension add][az-extension-add] command.az extension add --name aks-preview
Install the Azure CLI preview extension using the [az extension add][az-extension-add] command.
az extension add --name aks-preview
az extension add --name aks-preview
Update the extension to make sure you have the latest version using the [az extension update][az-extension-update] command.az extension update --name aks-preview
Update the extension to make sure you have the latest version using the [az extension update][az-extension-update] command.
az extension update --name aks-preview
az extension update --name aks-preview
Register the Service Tag Authorized IP feature flag
Register the EnableServiceTagAuthorizedIPPreview feature flag using theaz feature registercommand.az feature register --namespace "Microsoft.ContainerService" --name "EnableServiceTagAuthorizedIPPreview"It takes a few minutes for the registration to complete.
Register the EnableServiceTagAuthorizedIPPreview feature flag using theaz feature registercommand.
az feature register --namespace "Microsoft.ContainerService" --name "EnableServiceTagAuthorizedIPPreview"
az feature register --namespace "Microsoft.ContainerService" --name "EnableServiceTagAuthorizedIPPreview"
It takes a few minutes for the registration to complete.
Verify the registration using theaz feature showcommand.az feature show --namespace "Microsoft.ContainerService" --name "EnableServiceTagAuthorizedIPPreview"
Verify the registration using theaz feature showcommand.
az feature show --namespace "Microsoft.ContainerService" --name "EnableServiceTagAuthorizedIPPreview"
az feature show --namespace "Microsoft.ContainerService" --name "EnableServiceTagAuthorizedIPPreview"
Create an AKS cluster with Service Tag authorized IP ranges
Create a cluster with Service Tag authorized IP ranges using the--api-server-authorized-ip-rangesparameter with the service tagAzureCloudto allow all Azure services to access the API server and specify an additional IP address.
--api-server-authorized-ip-ranges
AzureCloud
Note
Only one service tag is allowed in the--api-server-authorized-ip-rangesparameter. Youcannotspecify multiple service tags.
--api-server-authorized-ip-ranges
az aks create --resource-group myResourceGroup \
  --name myAKSCluster \
  --api-server-authorized-ip-ranges AzureCloud,20.20.20.20
az aks create --resource-group myResourceGroup \
  --name myAKSCluster \
  --api-server-authorized-ip-ranges AzureCloud,20.20.20.20
You should be able to curl the API server from an Azure VM or Azure service that is part of theAzureCloudservice tag.
AzureCloud
Next steps
In this article, you enabled API server authorized IP ranges. This approach is one part of how you can securely run an AKS cluster. For more information, seeSecurity concepts for applications and clusters in AKSandBest practices for cluster security and upgrades in AKS.
Azure Kubernetes Service

Additional resources