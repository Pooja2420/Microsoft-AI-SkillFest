Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Azure Cache for Redis and reliability
Article
2023-11-14
4 contributors
In this article
Azure Cache for Redisprovides an in-memory data store based on theRedis (Remote Dictionary Server)software. It's a secure data cache and messaging broker that provides high throughput and low-latency access to data for applications.
Key concepts and best practices that support reliability include:
High availability
Failover and patching
Connection resilience
The following sections include design considerations, a configuration checklist, and recommended configuration options specific to Azure Cache for Redis.
Design considerations
TheAzure Cache for Redis Service Level Agreements (SLA)covers only Standard and Premium tier caches. Basic tier isn't covered.
Redis is an in-memory cache for key value pairs and has High Availability (HA), by default, except for Basic tier. There are three tiers for Azure Cache for Redis:
Basic:Not recommended for production workloads. Basic tier is ideal for:Single nodeMultiple sizesDevelopmentTestNon-critical workloads
Basic:Not recommended for production workloads. Basic tier is ideal for:
Single node
Multiple sizes
Development
Test
Non-critical workloads
Standard: A replicated cache in a two-node primary and secondary configuration managed by Microsoft, with a high availability SLA.
Standard: A replicated cache in a two-node primary and secondary configuration managed by Microsoft, with a high availability SLA.
Premium: Includes all standard-tier features and includes the following other features:Faster hardware and performance compared to Basic or Standard tier.Larger cache size, up to120GB.Data persistence, which includes Redis Database File (RDB) and Append Only File (AOF).VNET support.ClusteringGeo-Replication: A secondary cache is in another region and replicates data from the primary for disaster recovery. To failover to the secondary, the caches need to be unlinked manually and then the secondary is available for writes. The application writing to Redis needs to be updated with the secondary's cache connection string.Availability Zones: Deploy the cache and replicas across availability zones.NoteBy default, each deployment will have one replica per shard. Persistence, clustering, and geo-replication are all disabled at this time with deployments that have more than one replica. Your nodes will be distributed evenly across all zones. You should have a replica count>=number of zones.Import and export.
Premium: Includes all standard-tier features and includes the following other features:
Faster hardware and performance compared to Basic or Standard tier.
Larger cache size, up to120GB.
120GB
Data persistence, which includes Redis Database File (RDB) and Append Only File (AOF).
VNET support.
Clustering
Geo-Replication: A secondary cache is in another region and replicates data from the primary for disaster recovery. To failover to the secondary, the caches need to be unlinked manually and then the secondary is available for writes. The application writing to Redis needs to be updated with the secondary's cache connection string.
Availability Zones: Deploy the cache and replicas across availability zones.NoteBy default, each deployment will have one replica per shard. Persistence, clustering, and geo-replication are all disabled at this time with deployments that have more than one replica. Your nodes will be distributed evenly across all zones. You should have a replica count>=number of zones.
Note
By default, each deployment will have one replica per shard. Persistence, clustering, and geo-replication are all disabled at this time with deployments that have more than one replica. Your nodes will be distributed evenly across all zones. You should have a replica count>=number of zones.
>=
Import and export.
Microsoft guarantees at least99.9%of the time that customers will have connectivity between the Cache Endpoints and Microsoft's Internet gateway.
99.9%
Checklist
Have you configured Azure Cache for Redis with resiliency in mind?
Schedule updates.
Monitor the cache and set alerts.
Deploy the cache within a VNET.
Evaluate a partitioning strategy within Redis cache.
ConfigureData Persistenceto save a copy of the cache to Azure Storage or use Geo-Replication, depending on the business requirement.
Implement retry policies in the context of your Azure Redis Cache.
Use one static or singleton implementation of the connection multiplexer to Redis and follow thebest practices guide.
ReviewHow to administer Azure Cache for Redis.
Configuration recommendations
Explore the following table of recommendations to optimize your Azure Cache for Redis configuration for service reliability:
Source artifacts
To identify Redis instances that aren't on the Premium tier, use the following query:
Resources 
| where type == 'microsoft.cache/redis'
| where properties.sku.name != 'Premium'
Resources 
| where type == 'microsoft.cache/redis'
| where properties.sku.name != 'Premium'
Next step
Azure Cache for Redis and operational excellence
Feedback
Was this page helpful?
Additional resources