Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Copy data from SAP Business Warehouse via Open Hub using Azure Data Factory or Synapse Analytics
Article
2023-10-20
11 contributors
In this article
APPLIES TO:Azure Data FactoryAzure Synapse Analytics
Tip
Try outData Factory in Microsoft Fabric, an all-in-one analytics solution for enterprises.Microsoft Fabriccovers everything from data movement to data science, real-time analytics, business intelligence, and reporting. Learn how tostart a new trialfor free!
This article outlines how to use the Copy Activity in Azure Data Factory and Synapse Analytics pipelines to copy data from an SAP Business Warehouse (BW) via Open Hub. It builds on thecopy activity overviewarticle that presents a general overview of copy activity.
Tip
To learn about overall support for the SAP data integration scenario, seeSAP data integration whitepaperwith detailed introduction on each SAP connector, comparison and guidance.
Supported capabilities
This SAP Business Warehouse Open Hub connector is supported for the following capabilities:
â  Azure integration runtime â¡ Self-hosted integration runtime
For a list of data stores that are supported as sources/sinks by the copy activity, see theSupported data storestable.
Specifically, this SAP Business Warehouse Open Hub connector supports:
SAP Business Warehouseversion 7.01 or higher (in a recent SAP Support Package Stack released after the year 2015). SAP BW/4HANA is not supported by this connector.
Copying data via Open Hub Destination local table, which underneath can be DSO, InfoCube, MultiProvider, DataSource, etc.
Copying data using basic authentication.
Connecting to an SAP application server or SAP message server.
Retrieving data via RFC.
SAP BW Open Hub Integration
SAP BW Open Hub Serviceis an efficient way to extract data from SAP BW. The following diagram shows one of the typical flows customers have in their SAP system, in which case data flows from SAP ECC -> PSA -> DSO -> Cube.
SAP BW Open Hub Destination (OHD) defines the target to which the SAP data is relayed. Any objects supported by SAP Data Transfer Process (DTP) can be used as open hub data sources, for example, DSO, InfoCube, DataSource, etc. Open Hub Destination type - where the relayed data is stored - can be database tables (local or remote) and flat files. This SAP BW Open Hub connector support copying data from OHD local table in BW. In case you are using other types, you can directly connect to the database or file system using other connectors.

Delta extraction flow
The SAP BW Open Hub Connector offers two optional properties:excludeLastRequestandbaseRequestIdwhich can be used to handle delta load from Open Hub.
excludeLastRequest
baseRequestId
excludeLastRequestId: Whether to exclude the records of the last request. Default value is true.
baseRequestId: The ID of request for delta loading. Once it is set, only data with requestId larger than the value of this property will be retrieved.
Overall, the extraction from SAP InfoProviders consists of two steps:
SAP BW Data Transfer Process (DTP)This step copies the data from an SAP BW InfoProvider to an SAP BW Open Hub table
SAP BW Data Transfer Process (DTP)This step copies the data from an SAP BW InfoProvider to an SAP BW Open Hub table
Data copyIn this step, the Open Hub table is read by the connector
Data copyIn this step, the Open Hub table is read by the connector

In the first step, a DTP is executed. Each execution creates a new SAP request ID. The request ID is stored in the Open Hub table and is then used by the connector to identify the delta. The two steps run asynchronously: the DTP is triggered by SAP, and the data copy is triggered through the service.
By default, the service is not reading the latest delta from the Open Hub table (option "exclude last request" is true). Hereby, the data in the service is not 100% up to date with the data in the Open Hub table (the last delta is missing). In return, this procedure ensures that no rows get lost caused by the asynchronous extraction. It works fine even when the service is reading the Open Hub table while the DTP is still writing into the same table.
You typically store the max copied request ID in the last run by the service in a staging data store (such as Azure Blob in above diagram). Therefore, the same request is not read a second time by the service in the subsequent run. Meanwhile, note the data is not automatically deleted from the Open Hub table.
For proper delta handling, it is not allowed to have request IDs from different DTPs in the same Open Hub table. Therefore, you must not create more than one DTP for each Open Hub Destination (OHD). When needing Full and Delta extraction from the same InfoProvider, you should create two OHDs for the same InfoProvider.
Prerequisites
To use this SAP Business Warehouse Open Hub connector, you need to:
Set up a Self-hosted Integration Runtime with version 3.13 or above. SeeSelf-hosted Integration Runtimearticle for details.
Set up a Self-hosted Integration Runtime with version 3.13 or above. SeeSelf-hosted Integration Runtimearticle for details.
Download the64-bitSAP .NET Connector 3.0from SAP's website, and install it on the Self-hosted IR machine. When installing, in the optional setup steps window, make sure you select theInstall Assemblies to GACoption as shown in the following image.
Download the64-bitSAP .NET Connector 3.0from SAP's website, and install it on the Self-hosted IR machine. When installing, in the optional setup steps window, make sure you select theInstall Assemblies to GACoption as shown in the following image.

SAP user being used in the BW connector needs to have following permissions:Authorization for RFC and SAP BW.Permissions to the âExecuteâ Activity of Authorization Object âS_SDSAUTHâ.
SAP user being used in the BW connector needs to have following permissions:
Authorization for RFC and SAP BW.
Permissions to the âExecuteâ Activity of Authorization Object âS_SDSAUTHâ.
Create SAP Open Hub Destination type asDatabase Tablewith "Technical Key" option checked.  It is also recommended to leave the Deleting Data from Table as unchecked although it is not required. Use the DTP (directly execute or integrate into existing process chain) to land data from source object (such as cube) you have chosen to the open hub destination table.
Create SAP Open Hub Destination type asDatabase Tablewith "Technical Key" option checked.  It is also recommended to leave the Deleting Data from Table as unchecked although it is not required. Use the DTP (directly execute or integrate into existing process chain) to land data from source object (such as cube) you have chosen to the open hub destination table.
Getting started
Tip
For a walkthrough of using SAP BW Open Hub connector, seeLoad data from SAP Business Warehouse (BW).
To perform the Copy activity with a pipeline, you can use one of the following tools or SDKs:
The Copy Data tool
The Azure portal
The .NET SDK
The Python SDK
Azure PowerShell
The REST API
The Azure Resource Manager template
The following sections provide details about properties that are used to define entities specific to SAP Business Warehouse Open Hub connector.
Linked service properties
The following properties are supported for SAP Business Warehouse Open Hub linked service:
Example:
{
    "name": "SapBwOpenHubLinkedService",
    "properties": {
        "type": "SapOpenHub",
        "typeProperties": {
            "server": "<server name>",
            "systemNumber": "<system number>",
            "clientId": "<client id>",
            "userName": "<SAP user>",
            "password": {
                "type": "SecureString",
                "value": "<Password for SAP user>"
            }
        },
        "connectVia": {
            "referenceName": "<name of Integration Runtime>",
            "type": "IntegrationRuntimeReference"
        }
    }
}
{
    "name": "SapBwOpenHubLinkedService",
    "properties": {
        "type": "SapOpenHub",
        "typeProperties": {
            "server": "<server name>",
            "systemNumber": "<system number>",
            "clientId": "<client id>",
            "userName": "<SAP user>",
            "password": {
                "type": "SecureString",
                "value": "<Password for SAP user>"
            }
        },
        "connectVia": {
            "referenceName": "<name of Integration Runtime>",
            "type": "IntegrationRuntimeReference"
        }
    }
}
Dataset properties
For a full list of sections and properties available for defining datasets, see theDatasetsarticle. This section provides a list of properties supported by the SAP BW Open Hub dataset.
To copy data from and to SAP BW Open Hub, set the type property of the dataset toSapOpenHubTable. The following properties are supported.
If you were settingexcludeLastRequestandbaseRequestIdin dataset, it is still supported as-is, while you are suggested to use the new model in activity source going forward.
excludeLastRequest
baseRequestId
Example:
{
    "name": "SAPBWOpenHubDataset",
    "properties": {
        "type": "SapOpenHubTable",
        "typeProperties": {
            "openHubDestinationName": "<open hub destination name>"
        },
        "schema": [],
        "linkedServiceName": {
            "referenceName": "<SAP BW Open Hub linked service name>",
            "type": "LinkedServiceReference"
        }
    }
}
{
    "name": "SAPBWOpenHubDataset",
    "properties": {
        "type": "SapOpenHubTable",
        "typeProperties": {
            "openHubDestinationName": "<open hub destination name>"
        },
        "schema": [],
        "linkedServiceName": {
            "referenceName": "<SAP BW Open Hub linked service name>",
            "type": "LinkedServiceReference"
        }
    }
}
Copy activity properties
For a full list of sections and properties available for defining activities, see thePipelinesarticle. This section provides a list of properties supported by SAP BW Open Hub source.
SAP BW Open Hub as source
To copy data from SAP BW Open Hub, the following properties are supported in the copy activitysourcesection:
/SAPDS/RFC_READ_TABLE2
Tip
If your Open Hub table only contains the data generated by single request ID, for example, you always do full load and overwrite the existing data in the table, or you only run the DTP once for test, remember to uncheck the "excludeLastRequest" option in order to copy the data out.
To speed up the data loading, you can setparallelCopieson the copy activity to load data from SAP BW Open Hub in parallel. For example, if you setparallelCopiesto four, the service concurrently executes four RFC calls, and each RFC call retrieves a portion of data from your SAP BW Open Hub table partitioned by the DTP request ID and package ID. This applies when the number of unique DTP request ID + package ID is bigger than the value ofparallelCopies. When copying data into file-based data store, it's also recommended to write to a folder as multiple files (only specify folder name), in which case the performance is better than writing to a single file.
parallelCopies
parallelCopies
parallelCopies
Example:
"activities":[
    {
        "name": "CopyFromSAPBWOpenHub",
        "type": "Copy",
        "inputs": [
            {
                "referenceName": "<SAP BW Open Hub input dataset name>",
                "type": "DatasetReference"
            }
        ],
        "outputs": [
            {
                "referenceName": "<output dataset name>",
                "type": "DatasetReference"
            }
        ],
        "typeProperties": {
            "source": {
                "type": "SapOpenHubSource",
                "excludeLastRequest": true
            },
            "sink": {
                "type": "<sink type>"
            },
            "parallelCopies": 4
        }
    }
]
"activities":[
    {
        "name": "CopyFromSAPBWOpenHub",
        "type": "Copy",
        "inputs": [
            {
                "referenceName": "<SAP BW Open Hub input dataset name>",
                "type": "DatasetReference"
            }
        ],
        "outputs": [
            {
                "referenceName": "<output dataset name>",
                "type": "DatasetReference"
            }
        ],
        "typeProperties": {
            "source": {
                "type": "SapOpenHubSource",
                "excludeLastRequest": true
            },
            "sink": {
                "type": "<sink type>"
            },
            "parallelCopies": 4
        }
    }
]
Data type mapping for SAP BW Open Hub
When copying data from SAP BW Open Hub, the following mappings are used from SAP BW data types to interim data types used internally within the service. SeeSchema and data type mappingsto learn about how copy activity maps the source schema and data type to the sink.
Lookup activity properties
To learn details about the properties, checkLookup activity.
Troubleshooting tips
Symptoms:If you are running SAP BW on HANA and observe only subset of data is copied over using copy activity (1 million rows), the possible cause is that you enable "SAP HANA Execution" option in your DTP, in which case the service can only retrieve the first batch of data.
Resolution:Disable "SAP HANA Execution" option in DTP, reprocess the data, then try executing the copy activity again.
Related content
For a list of data stores supported as sources and sinks by the copy activity, seesupported data stores.
Feedback
Was this page helpful?
Additional resources