Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Azure Policy definition structure basics
Article
2025-03-04
5 contributors
In this article
Azure Policy definitions describe resource complianceconditionsand the effect to take if a condition is met. A condition compares a resource propertyfieldor avalueto a required value. Resource property fields are accessed by usingaliases. When a resource property field is an array, a specialarray aliascan be used to select values from all array members and apply a condition to each one. Learn more aboutconditions.
By using policy assignments, you can control costs and manage your resources. For example, you can specify that only certain types of virtual machines are allowed. Or, you can require that resources have a particular tag. Assignments at a scope apply to all resources at that scope and below. If a policy assignment is applied to a resource group, it's applicable to all the resources in that resource group.
You use JSON to create a policy definition that contains elements for:
displayName
displayName
description
description
mode
mode
version
version
metadata
metadata
parameters
parameters
policyRulelogical evaluationseffect
policyRule
logical evaluations
effect
effect
For example, the following JSON shows a policy that limits where resources are deployed:
{
  "properties": {
    "displayName": "Allowed locations",
    "description": "This policy enables you to restrict the locations your organization can specify when deploying resources.",
    "mode": "Indexed",
    "metadata": {
      "version": "1.0.0",
      "category": "Locations"
    },
    "parameters": {
      "allowedLocations": {
        "type": "array",
        "metadata": {
          "description": "The list of locations that can be specified when deploying resources",
          "strongType": "location",
          "displayName": "Allowed locations"
        },
        "defaultValue": [
          "westus2"
        ]
      }
    },
    "policyRule": {
      "if": {
        "not": {
          "field": "location",
          "in": "[parameters('allowedLocations')]"
        }
      },
      "then": {
        "effect": "deny"
      }
    }
  }
}
{
  "properties": {
    "displayName": "Allowed locations",
    "description": "This policy enables you to restrict the locations your organization can specify when deploying resources.",
    "mode": "Indexed",
    "metadata": {
      "version": "1.0.0",
      "category": "Locations"
    },
    "parameters": {
      "allowedLocations": {
        "type": "array",
        "metadata": {
          "description": "The list of locations that can be specified when deploying resources",
          "strongType": "location",
          "displayName": "Allowed locations"
        },
        "defaultValue": [
          "westus2"
        ]
      }
    },
    "policyRule": {
      "if": {
        "not": {
          "field": "location",
          "in": "[parameters('allowedLocations')]"
        }
      },
      "then": {
        "effect": "deny"
      }
    }
  }
}
For more information, go to thepolicy definition schema. Azure Policy built-ins and patterns are atAzure Policy samples.
Display name and description
You usedisplayNameanddescriptionto identify the policy definition and provide context for when the definition is used. ThedisplayNamehas a maximum length of128characters anddescriptiona maximum length of512characters.
displayName
description
displayName
description
Note
During the creation or updating of a policy definition,id,type, andnameare defined
by properties external to the JSON and aren't necessary in the JSON file. Fetching the policy
definition via SDK returns theid,type, andnameproperties as part of the JSON, but
each are read-only information related to the policy definition.
id
type
name
id
type
name
Policy type
While thepolicyTypeproperty can't be set, there are three values returned by SDK and visible in the portal:
policyType
Builtin: Microsoft provides and maintains these policy definitions.
Builtin
Custom: All policy definitions created by customers have this value.
Custom
Static: Indicates aRegulatory Compliancepolicy definition with MicrosoftOwnership. The compliance results for these policy definitions are the results of non-Microsoft audits of Microsoft infrastructure. In the Azure portal, this value is sometimes displayed asMicrosoft managed. For more information, seeShared responsibility in the cloud.
Static
Mode
Themodeis configured depending on if the policy is targeting an Azure Resource Manager property or a Resource Provider property.
mode
Resource Manager modes
Themodedetermines which resource types are evaluated for a policy definition. The supported modes are:
mode
all: evaluate resource groups, subscriptions, and all resource types
all
indexed: only evaluate resource types that support tags and location
indexed
For example, resourceMicrosoft.Network/routeTablessupports tags and location and is evaluated in both modes. However, resourceMicrosoft.Network/routeTables/routescan't be tagged and isn't evaluated inindexedmode.
Microsoft.Network/routeTables
Microsoft.Network/routeTables/routes
indexed
We recommend that you setmodetoallin most cases. All policy definitions created through the portal use theallmode. If you use PowerShell or Azure CLI, you can specify themodeparameter manually. If the policy definition doesn't include amodevalue, it defaults toallin Azure PowerShell and tonullin Azure CLI. Anullmode is the same as usingindexedto support backward compatibility.
mode
all
all
mode
mode
all
null
null
indexed
indexedshould be used when creating policies that enforce tags or locations. While not required, it prevents resources that don't support tags and locations from showing up as non-compliant in the compliance results. The exception is resource groups and subscriptions. Policy definitions that enforce location or tags on a resource group or subscription should setmodetoalland specifically target theMicrosoft.Resources/subscriptions/resourceGroupsorMicrosoft.Resources/subscriptionstype. For an example, seePattern: Tags - Sample #1. For a list of resources that support tags, seeTag support for Azure resources.
indexed
mode
all
Microsoft.Resources/subscriptions/resourceGroups
Microsoft.Resources/subscriptions
Resource Provider modes
The following Resource Provider modes are fully supported:
Microsoft.Kubernetes.Datafor managing Kubernetes clusters and components such as pods, containers, and ingresses. Supported for Azure Kubernetes Service clusters andAzure Arc-enabled Kubernetes clusters. Definitions using this Resource Provider mode use the effectsaudit,deny, anddisabled.
Microsoft.Kubernetes.Data
Microsoft.KeyVault.Datafor managing vaults and certificates inAzure Key Vault. For more information on these policy  definitions, seeIntegrate Azure Key Vault with Azure Policy.
Microsoft.KeyVault.Data
Microsoft.Network.Datafor managingAzure Virtual Network Managercustom membership policies using Azure Policy.
Microsoft.Network.Data
The following Resource Provider modes are currently supported as apreview:
Microsoft.ManagedHSM.Datafor managingManaged Hardware Security Module (HSM)keys using Azure Policy.
Microsoft.ManagedHSM.Data
Microsoft.DataFactory.Datafor using Azure Policy to denyAzure Data Factoryoutbound traffic domain names not specified in an allowlist. This Resource Provider mode is enforcement only and doesn't report compliance in public preview.
Microsoft.DataFactory.Data
Microsoft.MachineLearningServices.v2.Datafor managingAzure Machine Learningmodel deployments. This Resource Provider mode reports compliance for newly created and updated components. During public preview, compliance records remain for 24 hours. Model deployments that exist before these policy definitions are assigned don't report compliance.
Microsoft.MachineLearningServices.v2.Data
Microsoft.LoadTestService.Datafor restrictingAzure Load Testinginstances to private endpoints.
Microsoft.LoadTestService.Data
Note
Unless explicitly stated, Resource Provider modes only support built-in policy definitions, and exemptions are not supported at the component-level.
When Azure Policy versioning is released, the following Resource Provider modes won't support built-in versioning:
Microsoft.DataFactory.Data
Microsoft.DataFactory.Data
Microsoft.MachineLearningServices.v2.Data
Microsoft.MachineLearningServices.v2.Data
Microsoft.ManagedHSM.Data
Microsoft.ManagedHSM.Data
Version (preview)
Built-in policy definitions can host multiple versions with the samedefinitionID. If no version number is specified, all experiences will show the latest version of the definition. To see a specific version of a built-in, it must be specified in API, SDK or UI. To reference a specific version of a definition within an assignment, seedefinition version within assignment
definitionID
The Azure Policy service usesversion,preview, anddeprecatedproperties to convey state and level of change to a built-in policy definition or initiative. The format ofversionis:{Major}.{Minor}.{Patch}. When a policy definition is in preview state, the suffixpreviewis appended to theversionproperty and treated as aboolean. When a policy definition is deprecated, the deprecation is captured as a boolean in the definition's metadata using"deprecated": "true".
version
preview
deprecated
version
{Major}.{Minor}.{Patch}
version
"deprecated": "true"
Major Version (example: 2.0.0): introduce breaking changes such as major rule logic changes, removing parameters, adding an enforcement effect by default.
Minor Version (example: 2.1.0): introduce changes such as minor rule logic changes, adding new parameter allowed values, change toroleDefinitionIds, adding or moving definitions within an initiative.
roleDefinitionIds
Patch Version (example: 2.1.4): introduce string or metadata changes and break glass security scenarios (rare).
For more information about Azure Policy versions built-ins, seeBuilt-in versioning. To learn more about what it means for a policy to bedeprecatedor inpreview, seePreview and deprecated policies.
Metadata
The optionalmetadataproperty stores information about the policy definition. Customers can define any properties and values useful to their organization inmetadata. However, there are somecommonproperties used by Azure Policy and in built-ins. Eachmetadataproperty has a limit of 1,024 characters.
metadata
metadata
metadata
Common metadata properties
version(string): Tracks details about the version of the contents of a policy definition.
version
category(string): Determines under which category in the Azure portal the policy definition is displayed.
category
preview(boolean): True or false flag for if the policy definition ispreview.
preview
deprecated(boolean): True or false flag for if the policy definition is marked asdeprecated.
deprecated
portalReview(string): Determines whether parameters should be reviewed in the portal, regardless of the required input.
portalReview
Definition location
While creating an initiative or policy, it's necessary to specify the definition location. The definition location must be a management group or a subscription. This location determines the scope to which the initiative or policy can be assigned. Resources must be direct members of or children within the hierarchy of the definition location to target for assignment.
If the definition location is a:
Subscription- Only resources within that subscription can be assigned the policy definition.
Management group- Only resources within child management groups and child subscriptions can be assigned the policy definition. If you plan to apply the policy definition to several subscriptions, the location must be a management group that contains each subscription.
For more information, seeUnderstand scope in Azure Policy.
Next steps
For more information about policy definition structure, go toparameters,policy rule, andalias.
For initiatives, go toinitiative definition structure.
Review examples atAzure Policy samples.
ReviewUnderstanding policy effects.
Understand how toprogrammatically create policies.
Learn how toget compliance data.
Learn how toremediate non-compliant resources.
Review what a management group is withOrganize your resources with Azure management groups.
Feedback
Was this page helpful?
Additional resources