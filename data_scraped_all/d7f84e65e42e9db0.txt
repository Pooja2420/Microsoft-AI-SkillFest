Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Copy data to or from Azure Data Explorer using Azure Data Factory or Synapse Analytics
Article
2024-05-15
17 contributors
In this article
APPLIES TO:Azure Data FactoryAzure Synapse Analytics
Tip
Try outData Factory in Microsoft Fabric, an all-in-one analytics solution for enterprises.Microsoft Fabriccovers everything from data movement to data science, real-time analytics, business intelligence, and reporting. Learn how tostart a new trialfor free!
This article describes how to use the copy activity in Azure Data Factory and Synapse Analytics pipelines to copy data to or fromAzure Data Explorer. It builds on thecopy activity overviewarticle, which offers a general overview of copy activity.
Tip
To learn more about Azure Data Explorer integration with the service generally readIntegrate Azure Data Explorer.
Supported capabilities
This Azure Data Explorer connector is supported for the following capabilities:
â  Azure integration runtime â¡ Self-hosted integration runtime
You can copy data from any supported source data store to Azure Data Explorer. You can also copy data from Azure Data Explorer to any supported sink data store. For a list of data stores that the copy activity supports as sources or sinks, see theSupported data storestable.
Note
Copying data to or from Azure Data Explorer through an on-premises data store by using self-hosted integration runtime is supported in version 3.14 and later.
With the Azure Data Explorer connector, you can do the following:
Copy data by using Microsoft Entra application token authentication with aservice principal.
As a source, retrieve data by using a KQL (Kusto) query.
As a sink, append data to a destination table.
Getting started
Tip
For a walkthrough of Azure Data Explorer connector, seeCopy data to/from Azure Data ExplorerandBulk copy from a database to Azure Data Explorer.
To perform the Copy activity with a pipeline, you can use one of the following tools or SDKs:
The Copy Data tool
The Azure portal
The .NET SDK
The Python SDK
Azure PowerShell
The REST API
The Azure Resource Manager template
Create a linked service to Azure Data Explorer using UI
Use the following steps to create a linked service to Azure Data Explorer in the Azure portal UI.
Browse to the Manage tab in your Azure Data Factory or Synapse workspace and select Linked Services, then click New:Azure Data FactoryAzure Synapse
Browse to the Manage tab in your Azure Data Factory or Synapse workspace and select Linked Services, then click New:
Azure Data Factory
Azure Synapse


Search for Explorer and select the Azure Data Explorer (Kusto) connector.
Search for Explorer and select the Azure Data Explorer (Kusto) connector.

Configure the service details, test the connection, and create the new linked service.
Configure the service details, test the connection, and create the new linked service.

Connector configuration details
The following sections provide details about properties that are used to define entities specific to Azure Data Explorer connector.
Linked service properties
The Azure Data Explorer connector supports the following authentication types. See the corresponding sections for details:
Service principal authentication
System-assigned managed identity authentication
User-assigned managed identity authentication
Service principal authentication
To use service principal authentication, follow these steps to get a service principal and to grant permissions:
Register an application with the Microsoft identity platform. To learn how, seeQuickstart: Register an application with the Microsoft identity platform. Make note of these values, which you use to define the linked service:Application IDApplication keyTenant ID
Register an application with the Microsoft identity platform. To learn how, seeQuickstart: Register an application with the Microsoft identity platform. Make note of these values, which you use to define the linked service:
Application ID
Application key
Tenant ID
Grant the service principal the correct permissions in Azure Data Explorer. SeeManage Azure Data Explorer database permissionsfor detailed information about roles and permissions and about managing permissions. In general, you must:As source, grant at least theDatabase viewerrole to your databaseAs sink, grant at least theDatabase userrole to your database
Grant the service principal the correct permissions in Azure Data Explorer. SeeManage Azure Data Explorer database permissionsfor detailed information about roles and permissions and about managing permissions. In general, you must:
As source, grant at least theDatabase viewerrole to your database
As sink, grant at least theDatabase userrole to your database
Note
When you use the UI to author, by default your login user account is used to list Azure Data Explorer clusters, databases, and tables. You can choose to list the objects using the service principal by clicking the dropdown next to the refresh button, or manually enter the name if you don't have permission for these operations.
The following properties are supported for the Azure Data Explorer linked service:
https://<clusterName>.<regionName>.kusto.windows.net
Example: using service principal key authentication
{
    "name": "AzureDataExplorerLinkedService",
    "properties": {
        "type": "AzureDataExplorer",
        "typeProperties": {
            "endpoint": "https://<clusterName>.<regionName>.kusto.windows.net ",
            "database": "<database name>",
            "tenant": "<tenant name/id e.g. microsoft.onmicrosoft.com>",
            "servicePrincipalId": "<service principal id>",
            "servicePrincipalKey": {
                "type": "SecureString",
                "value": "<service principal key>"
            }
        }
    }
}
{
    "name": "AzureDataExplorerLinkedService",
    "properties": {
        "type": "AzureDataExplorer",
        "typeProperties": {
            "endpoint": "https://<clusterName>.<regionName>.kusto.windows.net ",
            "database": "<database name>",
            "tenant": "<tenant name/id e.g. microsoft.onmicrosoft.com>",
            "servicePrincipalId": "<service principal id>",
            "servicePrincipalKey": {
                "type": "SecureString",
                "value": "<service principal key>"
            }
        }
    }
}
System-assigned managed identity authentication
To learn more about managed identities for Azure resources, seeManaged identities for Azure resources.
To use system-assigned managed identity authentication, follow these steps to grant permissions:
Retrieve the managed identity informationby copying the value of themanaged identity object IDgenerated along with your factory or Synapse workspace.
Retrieve the managed identity informationby copying the value of themanaged identity object IDgenerated along with your factory or Synapse workspace.
Grant the managed identity the correct permissions in Azure Data Explorer. SeeManage Azure Data Explorer database permissionsfor detailed information about roles and permissions and about managing permissions. In general, you must:As source, grant theDatabase viewerrole to your database.As sink, grant theDatabase ingestorandDatabase viewerroles to your database.
Grant the managed identity the correct permissions in Azure Data Explorer. SeeManage Azure Data Explorer database permissionsfor detailed information about roles and permissions and about managing permissions. In general, you must:
As source, grant theDatabase viewerrole to your database.
As sink, grant theDatabase ingestorandDatabase viewerroles to your database.
Note
When you use the UI to author, your login user account is used to list Azure Data Explorer clusters, databases, and tables. Manually enter the name if you don't have permission for these operations.
The following properties are supported for the Azure Data Explorer linked service:
https://<clusterName>.<regionName>.kusto.windows.net
Example: using system-assigned managed identity authentication
{
    "name": "AzureDataExplorerLinkedService",
    "properties": {
        "type": "AzureDataExplorer",
        "typeProperties": {
            "endpoint": "https://<clusterName>.<regionName>.kusto.windows.net ",
            "database": "<database name>",
        }
    }
}
{
    "name": "AzureDataExplorerLinkedService",
    "properties": {
        "type": "AzureDataExplorer",
        "typeProperties": {
            "endpoint": "https://<clusterName>.<regionName>.kusto.windows.net ",
            "database": "<database name>",
        }
    }
}
User-assigned managed identity authentication
To learn more about managed identities for Azure resources, seeManaged identities for Azure resources
To use user-assigned managed identity authentication, follow these steps:
Create one or multiple user-assigned managed identitiesand grant permission in Azure Data Explorer. SeeManage Azure Data Explorer database permissionsfor detailed information about roles and permissions and about managing permissions. In general, you must:As source, grant at least theDatabase viewerrole to your databaseAs sink, grant at least theDatabase ingestorrole to your database
Create one or multiple user-assigned managed identitiesand grant permission in Azure Data Explorer. SeeManage Azure Data Explorer database permissionsfor detailed information about roles and permissions and about managing permissions. In general, you must:
As source, grant at least theDatabase viewerrole to your database
As sink, grant at least theDatabase ingestorrole to your database
Assign one or multiple user-assigned managed identities to your data factory or Synapse workspace, andcreate credentialsfor each user-assigned managed identity.
Assign one or multiple user-assigned managed identities to your data factory or Synapse workspace, andcreate credentialsfor each user-assigned managed identity.
The following properties are supported for the Azure Data Explorer linked service:
https://<clusterName>.<regionName>.kusto.windows.net
Example: using user-assigned managed identity authentication
{
    "name": "AzureDataExplorerLinkedService",
    "properties": {
        "type": "AzureDataExplorer",
        "typeProperties": {
            "endpoint": "https://<clusterName>.<regionName>.kusto.windows.net ",
            "database": "<database name>",
            "credential": {
                "referenceName": "credential1",
                "type": "CredentialReference"
            }
        }
    }
}
{
    "name": "AzureDataExplorerLinkedService",
    "properties": {
        "type": "AzureDataExplorer",
        "typeProperties": {
            "endpoint": "https://<clusterName>.<regionName>.kusto.windows.net ",
            "database": "<database name>",
            "credential": {
                "referenceName": "credential1",
                "type": "CredentialReference"
            }
        }
    }
}
Dataset properties
For a full list of sections and properties available for defining datasets, seeDatasets. This section lists properties that the Azure Data Explorer dataset supports.
To copy data to Azure Data Explorer, set the type property of the dataset toAzureDataExplorerTable.
The following properties are supported:
Dataset properties example:
{
   "name": "AzureDataExplorerDataset",
    "properties": {
        "type": "AzureDataExplorerTable",
        "typeProperties": {
            "table": "<table name>"
        },
        "schema": [],
        "linkedServiceName": {
            "referenceName": "<Azure Data Explorer linked service name>",
            "type": "LinkedServiceReference"
        }
    }
}
{
   "name": "AzureDataExplorerDataset",
    "properties": {
        "type": "AzureDataExplorerTable",
        "typeProperties": {
            "table": "<table name>"
        },
        "schema": [],
        "linkedServiceName": {
            "referenceName": "<Azure Data Explorer linked service name>",
            "type": "LinkedServiceReference"
        }
    }
}
Copy activity properties
For a full list of sections and properties available for defining activities, seePipelines and activities. This section provides a list of properties that Azure Data Explorer sources and sinks support.
Azure Data Explorer as source
To copy data from Azure Data Explorer, set thetypeproperty in the Copy activity source toAzureDataExplorerSource. The following properties are supported in the copy activitysourcesection:
Note
By default, Azure Data Explorer source has a size limit of 500,000 records or 64 MB. To retrieve all the records without truncation, you can specifyset notruncation;at the beginning of your query. For more information, seeQuery limits.
set notruncation;
Example:
"activities":[
    {
        "name": "CopyFromAzureDataExplorer",
        "type": "Copy",
        "typeProperties": {
            "source": {
                "type": "AzureDataExplorerSource",
                "query": "TestTable1 | take 10",
                "queryTimeout": "00:10:00"
            },
            "sink": {
                "type": "<sink type>"
            }
        },
        "inputs": [
            {
                "referenceName": "<Azure Data Explorer input dataset name>",
                "type": "DatasetReference"
            }
        ],
        "outputs": [
            {
                "referenceName": "<output dataset name>",
                "type": "DatasetReference"
            }
        ]
    }
]
"activities":[
    {
        "name": "CopyFromAzureDataExplorer",
        "type": "Copy",
        "typeProperties": {
            "source": {
                "type": "AzureDataExplorerSource",
                "query": "TestTable1 | take 10",
                "queryTimeout": "00:10:00"
            },
            "sink": {
                "type": "<sink type>"
            }
        },
        "inputs": [
            {
                "referenceName": "<Azure Data Explorer input dataset name>",
                "type": "DatasetReference"
            }
        ],
        "outputs": [
            {
                "referenceName": "<output dataset name>",
                "type": "DatasetReference"
            }
        ]
    }
]
Azure Data Explorer as sink
To copy data to Azure Data Explorer, set the type property in the copy activity sink toAzureDataExplorerSink. The following properties are supported in the copy activitysinksection:
Example:
"activities":[
    {
        "name": "CopyToAzureDataExplorer",
        "type": "Copy",
        "typeProperties": {
            "source": {
                "type": "<source type>"
            },
            "sink": {
                "type": "AzureDataExplorerSink",
                "ingestionMappingName": "<optional Azure Data Explorer mapping name>",
                "additionalProperties": {<additional settings for data ingestion>}
            }
        },
        "inputs": [
            {
                "referenceName": "<input dataset name>",
                "type": "DatasetReference"
            }
        ],
        "outputs": [
            {
                "referenceName": "<Azure Data Explorer output dataset name>",
                "type": "DatasetReference"
            }
        ]
    }
]
"activities":[
    {
        "name": "CopyToAzureDataExplorer",
        "type": "Copy",
        "typeProperties": {
            "source": {
                "type": "<source type>"
            },
            "sink": {
                "type": "AzureDataExplorerSink",
                "ingestionMappingName": "<optional Azure Data Explorer mapping name>",
                "additionalProperties": {<additional settings for data ingestion>}
            }
        },
        "inputs": [
            {
                "referenceName": "<input dataset name>",
                "type": "DatasetReference"
            }
        ],
        "outputs": [
            {
                "referenceName": "<Azure Data Explorer output dataset name>",
                "type": "DatasetReference"
            }
        ]
    }
]
Mapping data flow properties
When transforming data in mapping data flow, you can read from and write to tables in Azure Data Explorer. For more information, see thesource transformationandsink transformationin mapping data flows. You can choose to use an Azure Data Explorer dataset or aninline datasetas source and sink type.
Source transformation
The below table lists the properties supported by Azure Data Explorer source. You can edit these properties in theSource optionstab.
When you use Azure Data Explorer dataset as source type, the associated data flow script is:
source(allowSchemaDrift: true,
	validateSchema: false,
	query: 'table | take 10',
	format: 'query') ~> AzureDataExplorerSource
source(allowSchemaDrift: true,
	validateSchema: false,
	query: 'table | take 10',
	format: 'query') ~> AzureDataExplorerSource
If you use inline dataset, the associated data flow script is:
source(allowSchemaDrift: true,
    validateSchema: false,
    format: 'query',
    query: 'table | take 10',
    store: 'azuredataexplorer') ~> AzureDataExplorerSource
source(allowSchemaDrift: true,
    validateSchema: false,
    format: 'query',
    query: 'table | take 10',
    store: 'azuredataexplorer') ~> AzureDataExplorerSource
Sink transformation
The below table lists the properties supported by Azure Data Explorer sink. You can edit these properties in theSettingstab. When using inline dataset, you will see additional settings, which are the same as the properties described indataset propertiessection.
true
false
When you use Azure Data Explorer dataset as sink type, the associated data flow script is:
IncomingStream sink(allowSchemaDrift: true,
	validateSchema: false,
	format: 'table',
	preSQLs:['pre SQL scripts'],
	postSQLs:['post SQL script'],
	skipDuplicateMapInputs: true,
	skipDuplicateMapOutputs: true) ~> AzureDataExplorerSink
IncomingStream sink(allowSchemaDrift: true,
	validateSchema: false,
	format: 'table',
	preSQLs:['pre SQL scripts'],
	postSQLs:['post SQL script'],
	skipDuplicateMapInputs: true,
	skipDuplicateMapOutputs: true) ~> AzureDataExplorerSink
If you use inline dataset, the associated data flow script is:
IncomingStream sink(allowSchemaDrift: true,
    validateSchema: false,
    format: 'table',
    store: 'azuredataexplorer',
    skipDuplicateMapInputs: true,
    skipDuplicateMapOutputs: true) ~> AzureDataExplorerSink
IncomingStream sink(allowSchemaDrift: true,
    validateSchema: false,
    format: 'table',
    store: 'azuredataexplorer',
    skipDuplicateMapInputs: true,
    skipDuplicateMapOutputs: true) ~> AzureDataExplorerSink
Lookup activity properties
For more information about the properties, seeLookup activity.
Related content
For a list of data stores that the copy activity supports as sources and sinks, seesupported data stores.
For a list of data stores that the copy activity supports as sources and sinks, seesupported data stores.
Learn more about how tocopy data from Azure Data Factory and Synapse Analytics to Azure Data Explorer.
Learn more about how tocopy data from Azure Data Factory and Synapse Analytics to Azure Data Explorer.
Feedback
Was this page helpful?
Additional resources