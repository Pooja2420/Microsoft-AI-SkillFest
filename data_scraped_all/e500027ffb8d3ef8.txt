Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
MSBuild@1 - MSBuild v1 task
Article
2025-02-24
3 contributors
In this article
Use this task to build with MSBuild.
Syntax
# MSBuild v1
# Build with MSBuild.
- task: MSBuild@1
  inputs:
    solution: '**/*.sln' # string. Required. Project. Default: **/*.sln.
    #msbuildLocationMethod: 'version' # 'version' | 'location'. MSBuild. Default: version.
    #msbuildVersion: 'latest' # 'latest' | '17.0' | '16.0' | '15.0' | '14.0' | '12.0' | '4.0'. Optional. Use when msbuildLocationMethod = version. MSBuild Version. Default: latest.
    #msbuildArchitecture: 'x86' # 'x86' | 'x64'. Optional. Use when msbuildLocationMethod = version. MSBuild Architecture. Default: x86.
    #msbuildLocation: # string. Optional. Use when msbuildLocationMethod = location. Path to MSBuild. 
    #platform: # string. Platform. 
    #configuration: # string. Configuration. 
    #msbuildArguments: # string. MSBuild Arguments. 
    #clean: false # boolean. Clean. Default: false.
  # Advanced
    #maximumCpuCount: false # boolean. Build in Parallel. Default: false.
    #restoreNugetPackages: false # boolean. Restore NuGet Packages. Default: false.
    #logProjectEvents: false # boolean. Record Project Details. Default: false.
    #createLogFile: false # boolean. Create Log File. Default: false.
    #logFileVerbosity: 'normal' # 'quiet' | 'minimal' | 'normal' | 'detailed' | 'diagnostic'. Optional. Use when createLogFile = true. Log File Verbosity. Default: normal.
# MSBuild v1
# Build with MSBuild.
- task: MSBuild@1
  inputs:
    solution: '**/*.sln' # string. Required. Project. Default: **/*.sln.
    #msbuildLocationMethod: 'version' # 'version' | 'location'. MSBuild. Default: version.
    #msbuildVersion: 'latest' # 'latest' | '17.0' | '16.0' | '15.0' | '14.0' | '12.0' | '4.0'. Optional. Use when msbuildLocationMethod = version. MSBuild Version. Default: latest.
    #msbuildArchitecture: 'x86' # 'x86' | 'x64'. Optional. Use when msbuildLocationMethod = version. MSBuild Architecture. Default: x86.
    #msbuildLocation: # string. Optional. Use when msbuildLocationMethod = location. Path to MSBuild. 
    #platform: # string. Platform. 
    #configuration: # string. Configuration. 
    #msbuildArguments: # string. MSBuild Arguments. 
    #clean: false # boolean. Clean. Default: false.
  # Advanced
    #maximumCpuCount: false # boolean. Build in Parallel. Default: false.
    #restoreNugetPackages: false # boolean. Restore NuGet Packages. Default: false.
    #logProjectEvents: false # boolean. Record Project Details. Default: false.
    #createLogFile: false # boolean. Create Log File. Default: false.
    #logFileVerbosity: 'normal' # 'quiet' | 'minimal' | 'normal' | 'detailed' | 'diagnostic'. Optional. Use when createLogFile = true. Log File Verbosity. Default: normal.
# MSBuild v1
# Build with MSBuild.
- task: MSBuild@1
  inputs:
    solution: '**/*.sln' # string. Required. Project. Default: **/*.sln.
    #msbuildLocationMethod: 'version' # 'version' | 'location'. MSBuild. Default: version.
    #msbuildVersion: 'latest' # 'latest' | '16.0' | '15.0' | '14.0' | '12.0' | '4.0'. Optional. Use when msbuildLocationMethod = version. MSBuild Version. Default: latest.
    #msbuildArchitecture: 'x86' # 'x86' | 'x64'. Optional. Use when msbuildLocationMethod = version. MSBuild Architecture. Default: x86.
    #msbuildLocation: # string. Optional. Use when msbuildLocationMethod = location. Path to MSBuild. 
    #platform: # string. Platform. 
    #configuration: # string. Configuration. 
    #msbuildArguments: # string. MSBuild Arguments. 
    #clean: false # boolean. Clean. Default: false.
  # Advanced
    #maximumCpuCount: false # boolean. Build in Parallel. Default: false.
    #restoreNugetPackages: false # boolean. Restore NuGet Packages. Default: false.
    #logProjectEvents: false # boolean. Record Project Details. Default: false.
    #createLogFile: false # boolean. Create Log File. Default: false.
    #logFileVerbosity: 'normal' # 'quiet' | 'minimal' | 'normal' | 'detailed' | 'diagnostic'. Optional. Use when createLogFile = true. Log File Verbosity. Default: normal.
# MSBuild v1
# Build with MSBuild.
- task: MSBuild@1
  inputs:
    solution: '**/*.sln' # string. Required. Project. Default: **/*.sln.
    #msbuildLocationMethod: 'version' # 'version' | 'location'. MSBuild. Default: version.
    #msbuildVersion: 'latest' # 'latest' | '16.0' | '15.0' | '14.0' | '12.0' | '4.0'. Optional. Use when msbuildLocationMethod = version. MSBuild Version. Default: latest.
    #msbuildArchitecture: 'x86' # 'x86' | 'x64'. Optional. Use when msbuildLocationMethod = version. MSBuild Architecture. Default: x86.
    #msbuildLocation: # string. Optional. Use when msbuildLocationMethod = location. Path to MSBuild. 
    #platform: # string. Platform. 
    #configuration: # string. Configuration. 
    #msbuildArguments: # string. MSBuild Arguments. 
    #clean: false # boolean. Clean. Default: false.
  # Advanced
    #maximumCpuCount: false # boolean. Build in Parallel. Default: false.
    #restoreNugetPackages: false # boolean. Restore NuGet Packages. Default: false.
    #logProjectEvents: false # boolean. Record Project Details. Default: false.
    #createLogFile: false # boolean. Create Log File. Default: false.
    #logFileVerbosity: 'normal' # 'quiet' | 'minimal' | 'normal' | 'detailed' | 'diagnostic'. Optional. Use when createLogFile = true. Log File Verbosity. Default: normal.
Inputs
solution-Projectstring. Required. Default value:**/*.sln.
solution
string
**/*.sln
If you want to build multiple projects, specify search criteria. You can use a single-folder wildcard (*) and recursive wildcards (**). For example,**.*projsearches for all MSBuild project (.*proj) files in all subdirectories.
**.*proj
.*proj
Make sure the projects you specify are downloaded by this build pipeline. On the Repository tab:
If you use TFVC, make sure that the project is a child of one of the mappings on the Repository tab.
If you use Git, make sure that the project or project is in your Git repo, in a branch that you're building.
Tip
If you are building a solution, we recommend you use theVisual Studio build taskinstead of the MSBuild task.
msbuildLocationMethod-MSBuildstring. Allowed values:version,location(Specify Location). Default value:version.
msbuildLocationMethod
string
version
location
version
msbuildVersion-MSBuild Versionstring. Optional. Use whenmsbuildLocationMethod = version. Allowed values:latest,17.0(MSBuild 17.0),16.0(MSBuild 16.0),15.0(MSBuild 15.0),14.0(MSBuild 14.0),12.0(MSBuild 12.0),4.0(MSBuild 4.0). Default value:latest.
msbuildVersion
string
msbuildLocationMethod = version
latest
17.0
16.0
15.0
14.0
12.0
4.0
latest
If the preferred version cannot be found, the latest version found is used instead. On an macOS agent,xbuild(Mono) is used if version is lower than15.0.
xbuild
15.0
msbuildVersion-MSBuild Versionstring. Optional. Use whenmsbuildLocationMethod = version. Allowed values:latest,16.0(MSBuild 16.0),15.0(MSBuild 15.0),14.0(MSBuild 14.0),12.0(MSBuild 12.0),4.0(MSBuild 4.0). Default value:latest.
msbuildVersion
string
msbuildLocationMethod = version
latest
16.0
15.0
14.0
12.0
4.0
latest
If the preferred version cannot be found, the latest version found is used instead. On an macOS agent,xbuild(Mono) is used if version is lower than15.0.
xbuild
15.0
msbuildArchitecture-MSBuild Architecturestring. Optional. Use whenmsbuildLocationMethod = version. Allowed values:x86(MSBuild x86),x64(MSBuild x64). Default value:x86.
msbuildArchitecture
string
msbuildLocationMethod = version
x86
x64
x86
Supplies the MSBuild architecture (x86, x64) to run.
msbuildLocation-Path to MSBuildstring. Optional. Use whenmsbuildLocationMethod = location.
msbuildLocation
string
msbuildLocationMethod = location
Supplies the path to MSBuild.
platform-Platformstring.
platform
string
Tip
If you are targeting an MSBuild project (.*proj) file instead of a solution, specifyAnyCPU(no whitespace).
AnyCPU
Declare a build variable such asBuildPlatformon the Variables tab (selectingAllowat Queue Time) and reference it here as$(BuildPlatform). This way you can modify the platform when you queue the build and enable building multiple configurations.
BuildPlatform
Allow
$(BuildPlatform)
configuration-Configurationstring.
configuration
string
Tip
Declare a build variable such asBuildConfigurationon the Variables tab (selectingAllowat Queue Time) and reference it here as$(BuildConfiguration). This way you can modify the platform when you queue the build and enable building multiple configurations.
BuildConfiguration
Allow
$(BuildConfiguration)
msbuildArguments-MSBuild Argumentsstring.
msbuildArguments
string
Specifies additional arguments passed to MSBuild (on Windows) and xbuild (on macOS).
clean-Cleanboolean. Default value:false.
clean
boolean
false
Set toFalseif you want to make this an incremental build. This setting might reduce your build time, especially if your codebase is large. This option has no practical effect unless you also set theCleanrepository toFalse.
Set toTrueif you want to rebuild all the code in the code projects. This is equivalent to the MSBuild/target:cleanargument.
For more information, seerepo options
False
Clean
False
True
/target:clean
maximumCpuCount-Build in Parallelboolean. Default value:false.
maximumCpuCount
boolean
false
If your MSBuild target configuration is compatible with building in parallel, you can  check this input to pass the/mswitch to MSBuild (Windows only). If your target configuration is not compatible with building in parallel, checking this option may cause your build to result infile-in-useerrors, or intermittent or inconsistent build failures.
/m
file-in-use
restoreNugetPackages-Restore NuGet Packagesboolean. Default value:false.
restoreNugetPackages
boolean
false
This option is deprecated. To restore NuGet packages, add aNuGettask before the build.
logProjectEvents-Record Project Detailsboolean. Default value:false.
logProjectEvents
boolean
false
Optionally records timeline details for each project (Windows only).
createLogFile-Create Log Fileboolean. Default value:false.
createLogFile
boolean
false
Optionally creates a log file (Windows only).
logFileVerbosity-Log File Verbositystring. Optional. Use whencreateLogFile = true. Allowed values:quiet,minimal,normal,detailed,diagnostic. Default value:normal.
logFileVerbosity
string
createLogFile = true
quiet
minimal
normal
detailed
diagnostic
normal
Specifies log file verbosity.
Task control options
All tasks have control options in addition to their task inputs. For more information, seeControl options and common task properties.
Output variables
None.
Remarks
Should I use the Visual Studio Build task or the MSBuild task?
If you are building a solution, in most cases you should use theVisual Studio Build task. This task automatically:
Sets the/p:VisualStudioVersionproperty for you. This forces MSBuild to use a particular set of targets that increase the likelihood of a successful build.
/p:VisualStudioVersion
Specifies the MSBuild version argument.
In some cases, you might need to use theMSBuildtask. For example, you should use it if you are building code projects apart from a solution.
MSBuild
Where can I learn more about MSBuild?
MSBuild reference
MSBuild command-line reference

How do I build multiple configurations for multiple platforms?
On the Variables tab, make sure you have variables defined for your configurations and platforms. To specify multiple values, separate them with commas. For example:For a .NET app, you could specifyBuildConfigurationwith debug and release values, and you could specifyBuildPlatformwith any CPU value.For a C++ app, you could specifyBuildConfigurationwith debug and release values, and you could specifyBuildPlatformwith any x86 and x64 values.
On the Variables tab, make sure you have variables defined for your configurations and platforms. To specify multiple values, separate them with commas. For example:
For a .NET app, you could specifyBuildConfigurationwith debug and release values, and you could specifyBuildPlatformwith any CPU value.
BuildConfiguration
BuildPlatform
For a C++ app, you could specifyBuildConfigurationwith debug and release values, and you could specifyBuildPlatformwith any x86 and x64 values.
BuildConfiguration
BuildPlatform
On the Options tab, selectMultiConfigurationand specify theMultipliers, separated by commas. For example:BuildConfiguration, BuildPlatformSelectParallelif you want to distribute the jobs (one for each combination of values) to multiple agents in parallel if they are available.
On the Options tab, selectMultiConfigurationand specify theMultipliers, separated by commas. For example:BuildConfiguration, BuildPlatformSelectParallelif you want to distribute the jobs (one for each combination of values) to multiple agents in parallel if they are available.
MultiConfiguration
Multipliers
BuildConfiguration, BuildPlatform
Parallel
On the Build tab, select this step and specify thePlatformandConfigurationarguments. For example:Platform:$(BuildPlatform)Configuration:$(BuildConfiguration)
On the Build tab, select this step and specify thePlatformandConfigurationarguments. For example:
Platform
Configuration
Platform:$(BuildPlatform)
$(BuildPlatform)
Configuration:$(BuildConfiguration)
$(BuildConfiguration)
Can I build TFSBuild.proj files?
You cannot buildTFSBuild.projfiles. These kinds of files are generated byTFS 2005andTFS 2008.  These files contain tasks, and targets are supported only usingXAML builds.
TFSBuild.proj
TFS 2005
TFS 2008
Troubleshooting
This section provides troubleshooting tips for common issues that a user might encounter when using theMSBuildtask.
MSBuild
Build failed with the following error: An internal failure occurred while running MSBuild
Possible causes
Troubleshooting suggestions
Change in the MSBuild version.
Issues with a third-party extension.
New updates to Visual Studio that can cause missing assemblies on the build agent.
Moved or deleted some of the necessary NuGet packages.
Run the pipeline with diagnostics to retrieve detailed logs
Try to reproduce the error locally
What else can I do?
One of the available options to diagnose the issue is to take a look at the generated logs. You can view your pipeline logs by selecting the appropriate task and job in your pipeline run summary.
To get the logs of your pipeline executionGet logs to diagnose problems
You can also setup and download a customized verbose log to assist with your troubleshooting:
Configure verbose logs
View and download logs
In addition to the pipeline diagnostic logs, you can also check these other types of logs that contain more information to help you debug and solve the problem:
Worker diagnostic logs
Agent diagnostic logs
Other logs(Environment and capabilities)
If you are using a hosted build agent, you might want to try to reproduce the error locally. This will help you to narrow down whether the failure is the result of the build agent or the build task.
Run the sameMSBuildcommand on your local machine using the same arguments. Check outMSBuild commandfor reference.
MSBuild
Tip
If you can reproduce the problem on your local machine, then your next step is to investigate theMSBuildissue.
Learn more aboutMicrosoft hosted agents.
To setup your own self-hosted agent and run the build jobs:
Self-hosted Windows agents
Self-hosted Linux agents
Self-hosted macOS agents
Some of the MSBuild errors are caused by a change in Visual Studio so you can search onVisual Studio Developer Communityto see if this issue has been reported. We also welcome your questions, suggestions, and feedback.
Requirements
See also
Visual Studio Build task
Feedback
Was this page helpful?
Additional resources