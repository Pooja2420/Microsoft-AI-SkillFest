Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Set Git repository permissions
Article
2025-02-18
4 contributors
In this article
Azure DevOps Services | Azure DevOps Server 2022 - Azure DevOps Server 2019
Manage access to repositories to lock down who can contribute to your source code and manage other features.  You can set permissions across all Git repositories by making changes to the top-levelGit repositoriesentry. Individual repositories inherit permissions from the top-levelGit Repositoriesentry.
Note
Branches inherit a subset of permissions from assignments made at the repository level. For branch permissions and policies, seeSet branch permissionsandImprove code quality with branch policies.
For guidance on who to provide greater permission levels, seeManage access using permissions.
Prerequisites
Note
In public projects, users withStakeholderaccess have full access to Azure Repos, including viewing, cloning, and contributing to code.
To contribute to the source code, haveBasicaccess level or greater. Users grantedStakeholderaccess for private projects have no access to source code. Users grantedStakeholderaccess for public projects have the same access as Contributors and those grantedBasicaccess. For more information, seeAbout access levels.
To contribute to the source code, haveBasicaccess level or greater. Users grantedStakeholderaccess have no access to source code. For more information, seeAbout access levels.
Default repository permissions
By default, members of the project Contributors group have permissions to contribute to a repository. This includes the ability to create branches, create tags, and manage notes. For a description of each security group and permission level, seePermissions and group reference.

Permission
Readers
Contributors
Build Admins
Project Admins
Read(clone, fetch, and explore the contents of a repository); also, can create, comment on, vote, andContribute to pull requests
âï¸
âï¸
âï¸
âï¸
Contribute,Create branches,Create tags, andManage notes
âï¸
âï¸
âï¸
Create repository,Delete repository, andRename repository
âï¸
Edit policies,Manage permissions,Remove others' locks
âï¸
Bypass policies when completing pull requests,Bypass policies when pushing,Force push(rewrite history, delete branches and tags)(not set for any security group)
Starting withAzure DevOps sprint 224(Azure DevOps Services and Azure DevOps Server 2022.1 and higher),Edit policies permission is no longer granted automatically to branch creators. Previously, when you created a new branch, you were granted permission to edit policies on that branch. With this update, we are changing the default behavior to not grant this permission even if thePermission managementsetting is switched on for the repository. You will need theEdit policiespermission granted explicitly (either manually or through REST API) by security permission inheritance or through a group membership.

Open Security for a repository
You set Git repository permissions fromProject Settings>Repositories.
Open the web portal and choose the project where you want to add users or groups. To choose another project, seeSwitch project, repository, team.
Open the web portal and choose the project where you want to add users or groups. To choose another project, seeSwitch project, repository, team.
OpenProject settings>Repositories.To set the permissions for all Git repositories, chooseSecurity.For example, here we choose (1)Project settings, (2)Repositories, and then (3)Security.
OpenProject settings>Repositories.
To set the permissions for all Git repositories, chooseSecurity.
For example, here we choose (1)Project settings, (2)Repositories, and then (3)Security.

Otherwise, to set permissions for a specific repository, choose (1) the repository and then choose (2)Security.
Otherwise, to set permissions for a specific repository, choose (1) the repository and then choose (2)Security.

Set permissions for a repository
You can manage access to a repository by setting the permission state toAlloworDenyfor a single user or a security group.
Open the web portal and choose the project where you want to add users or groups. To choose another project, seeSwitch project, repository, team.
Open the web portal and choose the project where you want to add users or groups. To choose another project, seeSwitch project, repository, team.
To set the permissions for all Git repositories for a project, chooseGit Repositoriesand then choose the security group whose permissions you want to manage.For example, here we choose (1)Project Settings, (2)Repositories, (3)Git repositories, (4) theContributorsgroup, and then (5) the permission forCreate repository.To see the full image, click the image to expand. Choose theclose icon to close.NoteYou may not be able to find a user from a permissions page or identity field if the user hasn't been added to the projectâeither by adding it to a security group or to a project team. Also, when a user is added to Microsoft Entra ID or Active Directory, there can be a delay between the time they are added to the project and when they are searchable from an identity field. The delay can be between 5 minutes to 7 days.Otherwise, choose a specific repository and choose the security group whose permissions you want to manage.NoteIf you add a user or group, and don't change any permissions for that user or group, then upon refresh of the permissions page, the user or group you added no longer appears.
To set the permissions for all Git repositories for a project, chooseGit Repositoriesand then choose the security group whose permissions you want to manage.
For example, here we choose (1)Project Settings, (2)Repositories, (3)Git repositories, (4) theContributorsgroup, and then (5) the permission forCreate repository.
To see the full image, click the image to expand. Choose theclose icon to close.

Note
You may not be able to find a user from a permissions page or identity field if the user hasn't been added to the projectâeither by adding it to a security group or to a project team. Also, when a user is added to Microsoft Entra ID or Active Directory, there can be a delay between the time they are added to the project and when they are searchable from an identity field. The delay can be between 5 minutes to 7 days.
Otherwise, choose a specific repository and choose the security group whose permissions you want to manage.
Note
If you add a user or group, and don't change any permissions for that user or group, then upon refresh of the permissions page, the user or group you added no longer appears.
When done, chooseSave changes.
When done, chooseSave changes.
Change permissions for a security group
To set permissions for a custom security group, have defined that group previously. SeeSet permissions at the project-level.
To set permissions for a specific group, choose the group. For example, here we choose the Contributors group.
To set permissions for a specific group, choose the group. For example, here we choose the Contributors group.

Change one or more permissions. To grant a permissions, changeNot SettoAllow. To restrict permissions, changeAllowtoDeny.
Change one or more permissions. To grant a permissions, changeNot SettoAllow. To restrict permissions, changeAllowtoDeny.

When done, navigate away from the page. The permission changes are automatically saved for the selected group.
When done, navigate away from the page. The permission changes are automatically saved for the selected group.
Set permissions for a specific user
To set permissions for a specific user, enter the name of the user  into the search filter and select from the identities that appear.Then make the changes to the permission set.NoteYou may not be able to find a user from a permissions page or identity field if the user hasn't been added to the projectâeither by adding it to a security group or to a project team. Also, when a user is added to Microsoft Entra ID or Active Directory, there can be a delay between the time they are added to the project and when they are searchable from an identity field. The delay can be between 5 minutes to 7 days.
To set permissions for a specific user, enter the name of the user  into the search filter and select from the identities that appear.

Then make the changes to the permission set.
Note
You may not be able to find a user from a permissions page or identity field if the user hasn't been added to the projectâeither by adding it to a security group or to a project team. Also, when a user is added to Microsoft Entra ID or Active Directory, there can be a delay between the time they are added to the project and when they are searchable from an identity field. The delay can be between 5 minutes to 7 days.
When done, navigate away from the page. The permission changes are automatically saved for the selected group.
When done, navigate away from the page. The permission changes are automatically saved for the selected group.
Note
If you add a user or group, and don't change any permissions for that user or group, then upon refresh of the permissions page, the user or group you added no longer appears.
Enable or disable inheritance for a specific repository
To enable or disable inheritance for a specific repository, select the repository and then move theInheritanceslider to either an on or off position.To learn about inheritance, seeAbout permissions and groups, Inheritance and security groups.
To enable or disable inheritance for a specific repository, select the repository and then move theInheritanceslider to either an on or off position.

To learn about inheritance, seeAbout permissions and groups, Inheritance and security groups.
Exempt from policy enforcement and bypass policy permissions
There are many scenarios where you have the occasional need to bypass a branch policy. For example, when reverting a change that caused a build break or applying a hotfix in the middle of the night. Previously, theExempt from policy enforcementpermission helped teams manage which users were granted the ability to bypass branch policies when completing a pull request. However, that permission also granted the ability to push directly to the branch, bypassing the PR process entirely.
To improve this experience, we split theExempt from policy enforcementpermission to offer more control to teams that are granting bypass permissions. The following two permissions replace the former permission:
Bypass policies when completing pull requests.Users with this permission will be able to use the "Override" experience for pull requests.
Bypass policies when pushing.Users with this permission will be able to push directly to branches that have required policies configured.
By granting the first permission and denying the second, a user can use the bypass option when necessary, but will still have the protection from accidentally pushing to a branch with policies.
Note
This change does not introduce any behavior changes. Users that were formerly grantedAllowforExempt from policy enforcementare grantedAllowfor both new permissions, so they'll be able to both override completion on PRs and push directly to branches with policies.
Related articles
Manage access using permissions
Default permissions and access
Permissions and groups reference
Tf git permission command-line tool
Security REST API commands
Feedback
Was this page helpful?
Additional resources