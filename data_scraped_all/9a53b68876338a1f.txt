Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Quickstart: Connect an existing Kubernetes cluster to Azure Arc
Article
2024-10-08
18 contributors
In this article
Get started with Azure Arc-enabled Kubernetes by using Azure CLI or Azure PowerShell to connect an existing Kubernetes cluster to Azure Arc.
For a conceptual look at connecting clusters to Azure Arc, seeAzure Arc-enabled Kubernetes agent overview. To try things out in a sample/practice experience, visit theAzure Arc Jumpstart.
Prerequisites
Important
In addition to these prerequisites, be sure to meet allnetwork requirements for Azure Arc-enabled Kubernetes.
Azure CLI
Azure PowerShell
An Azure account with an active subscription.Create an account for free.
An Azure account with an active subscription.Create an account for free.
A basic understanding ofKubernetes core concepts.
A basic understanding ofKubernetes core concepts.
Anidentity (user or service principal)which can be used tolog in to Azure CLIand connect your cluster to Azure Arc.
Anidentity (user or service principal)which can be used tolog in to Azure CLIand connect your cluster to Azure Arc.
The latest version ofAzure CLI.
The latest version ofAzure CLI.
The latest version ofconnectedk8sAzure CLI extension, installed by running the following command:az extension add --name connectedk8s
The latest version ofconnectedk8sAzure CLI extension, installed by running the following command:
az extension add --name connectedk8s
az extension add --name connectedk8s
An up-and-running Kubernetes cluster. If you don't have one, you can create a cluster using one of these options:Kubernetes in Docker (KIND)Create a Kubernetes cluster using Docker forMacorWindowsSelf-managed Kubernetes cluster usingCluster APINoteThe cluster needs to have at least one node of operating system and architecture typelinux/amd64and/orlinux/arm64. SeeCluster requirementsfor more about ARM64 scenarios.
An up-and-running Kubernetes cluster. If you don't have one, you can create a cluster using one of these options:
Kubernetes in Docker (KIND)
Kubernetes in Docker (KIND)
Create a Kubernetes cluster using Docker forMacorWindows
Create a Kubernetes cluster using Docker forMacorWindows
Self-managed Kubernetes cluster usingCluster APINoteThe cluster needs to have at least one node of operating system and architecture typelinux/amd64and/orlinux/arm64. SeeCluster requirementsfor more about ARM64 scenarios.
Self-managed Kubernetes cluster usingCluster API
Note
The cluster needs to have at least one node of operating system and architecture typelinux/amd64and/orlinux/arm64. SeeCluster requirementsfor more about ARM64 scenarios.
linux/amd64
linux/arm64
At least 850 MB free for the Arc agents that will be deployed on the cluster, and capacity to use approximately 7% of a single CPU.
At least 850 MB free for the Arc agents that will be deployed on the cluster, and capacity to use approximately 7% of a single CPU.
Akubeconfig fileand context pointing to your cluster. For more information, seeConfigure access to multiple clusters.
Akubeconfig fileand context pointing to your cluster. For more information, seeConfigure access to multiple clusters.
An Azure account with an active subscription.Create an account for free.
An Azure account with an active subscription.Create an account for free.
A basic understanding ofKubernetes core concepts.
A basic understanding ofKubernetes core concepts.
Anidentity (user or service principal)which can be used tolog in to Azure PowerShelland connect your cluster to Azure Arc.
Anidentity (user or service principal)which can be used tolog in to Azure PowerShelland connect your cluster to Azure Arc.
Azure PowerShell version 6.6.0 or later
Azure PowerShell version 6.6.0 or later
TheAz.ConnectedKubernetesPowerShell module, installed by running the following command:Install-Module -Name Az.ConnectedKubernetes
TheAz.ConnectedKubernetesPowerShell module, installed by running the following command:
Install-Module -Name Az.ConnectedKubernetes
Install-Module -Name Az.ConnectedKubernetes
An up-and-running Kubernetes cluster. If you don't have one, you can create a cluster using one of these options:Kubernetes in Docker (KIND)Create a Kubernetes cluster using Docker forMacorWindowsSelf-managed Kubernetes cluster usingCluster APINoteThe cluster needs to have at least one node of operating system and architecture typelinux/amd64and/orlinux/arm64. SeeCluster requirementsfor more about ARM64 scenarios.
An up-and-running Kubernetes cluster. If you don't have one, you can create a cluster using one of these options:
Kubernetes in Docker (KIND)
Kubernetes in Docker (KIND)
Create a Kubernetes cluster using Docker forMacorWindows
Create a Kubernetes cluster using Docker forMacorWindows
Self-managed Kubernetes cluster usingCluster APINoteThe cluster needs to have at least one node of operating system and architecture typelinux/amd64and/orlinux/arm64. SeeCluster requirementsfor more about ARM64 scenarios.
Self-managed Kubernetes cluster usingCluster API
Note
The cluster needs to have at least one node of operating system and architecture typelinux/amd64and/orlinux/arm64. SeeCluster requirementsfor more about ARM64 scenarios.
linux/amd64
linux/arm64
At least 850 MB free for the Arc agents that will be deployed on the cluster, and capacity to use approximately 7% of a single CPU.
At least 850 MB free for the Arc agents that will be deployed on the cluster, and capacity to use approximately 7% of a single CPU.
Akubeconfig fileand context pointing to your cluster. For more information, seeConfigure access to multiple clusters.
Akubeconfig fileand context pointing to your cluster. For more information, seeConfigure access to multiple clusters.
Register providers for Azure Arc-enabled Kubernetes
Azure CLI
Azure PowerShell
Enter the following commands:az provider register --namespace Microsoft.Kubernetes
az provider register --namespace Microsoft.KubernetesConfiguration
az provider register --namespace Microsoft.ExtendedLocation
Enter the following commands:
az provider register --namespace Microsoft.Kubernetes
az provider register --namespace Microsoft.KubernetesConfiguration
az provider register --namespace Microsoft.ExtendedLocation
az provider register --namespace Microsoft.Kubernetes
az provider register --namespace Microsoft.KubernetesConfiguration
az provider register --namespace Microsoft.ExtendedLocation
Monitor the registration process. Registration may take up to 10 minutes.az provider show -n Microsoft.Kubernetes -o table
az provider show -n Microsoft.KubernetesConfiguration -o table
az provider show -n Microsoft.ExtendedLocation -o tableOnce registered, you should see theRegistrationStatestate for these namespaces change toRegistered.
Monitor the registration process. Registration may take up to 10 minutes.
az provider show -n Microsoft.Kubernetes -o table
az provider show -n Microsoft.KubernetesConfiguration -o table
az provider show -n Microsoft.ExtendedLocation -o table
az provider show -n Microsoft.Kubernetes -o table
az provider show -n Microsoft.KubernetesConfiguration -o table
az provider show -n Microsoft.ExtendedLocation -o table
Once registered, you should see theRegistrationStatestate for these namespaces change toRegistered.
RegistrationState
Registered
Enter the following commands:Register-AzResourceProvider -ProviderNamespace Microsoft.Kubernetes
Register-AzResourceProvider -ProviderNamespace Microsoft.KubernetesConfiguration
Register-AzResourceProvider -ProviderNamespace Microsoft.ExtendedLocation
Enter the following commands:
Register-AzResourceProvider -ProviderNamespace Microsoft.Kubernetes
Register-AzResourceProvider -ProviderNamespace Microsoft.KubernetesConfiguration
Register-AzResourceProvider -ProviderNamespace Microsoft.ExtendedLocation
Register-AzResourceProvider -ProviderNamespace Microsoft.Kubernetes
Register-AzResourceProvider -ProviderNamespace Microsoft.KubernetesConfiguration
Register-AzResourceProvider -ProviderNamespace Microsoft.ExtendedLocation
Monitor the registration process. Registration may take up to 10 minutes.Get-AzResourceProvider -ProviderNamespace Microsoft.Kubernetes
Get-AzResourceProvider -ProviderNamespace Microsoft.KubernetesConfiguration
Get-AzResourceProvider -ProviderNamespace Microsoft.ExtendedLocationOnce registered, you should see theRegistrationStatestate for these namespaces change toRegistered.
Monitor the registration process. Registration may take up to 10 minutes.
Get-AzResourceProvider -ProviderNamespace Microsoft.Kubernetes
Get-AzResourceProvider -ProviderNamespace Microsoft.KubernetesConfiguration
Get-AzResourceProvider -ProviderNamespace Microsoft.ExtendedLocation
Get-AzResourceProvider -ProviderNamespace Microsoft.Kubernetes
Get-AzResourceProvider -ProviderNamespace Microsoft.KubernetesConfiguration
Get-AzResourceProvider -ProviderNamespace Microsoft.ExtendedLocation
Once registered, you should see theRegistrationStatestate for these namespaces change toRegistered.
RegistrationState
Registered
Create a resource group
Run the following command:
Azure CLI
Azure PowerShell
az group create --name AzureArcTest --location EastUS --output table
az group create --name AzureArcTest --location EastUS --output table
Output:
Location    Name
----------  ------------
eastus      AzureArcTest
Location    Name
----------  ------------
eastus      AzureArcTest
New-AzResourceGroup -Name AzureArcTest -Location EastUS
New-AzResourceGroup -Name AzureArcTest -Location EastUS
Output:
ResourceGroupName : AzureArcTest
Location          : eastus
ProvisioningState : Succeeded
Tags              :
ResourceId        : /subscriptions/aaaa0a0a-bb1b-cc2c-dd3d-eeeeee4e4e4e/resourceGroups/AzureArcTest
ResourceGroupName : AzureArcTest
Location          : eastus
ProvisioningState : Succeeded
Tags              :
ResourceId        : /subscriptions/aaaa0a0a-bb1b-cc2c-dd3d-eeeeee4e4e4e/resourceGroups/AzureArcTest
Connect an existing Kubernetes cluster
Run the following command to connect your cluster. This command deploys the Azure Arc agents to the cluster and installs Helm v. 3.6.3 to the.azurefolder of the deployment machine. This Helm 3 installation is only used for Azure Arc, and it doesn't remove or change any previously installed versions of Helm on the machine.
.azure
In this example, the cluster's name is AzureArcTest1.
Azure CLI
Azure PowerShell
az connectedk8s connect --name AzureArcTest1 --resource-group AzureArcTest
az connectedk8s connect --name AzureArcTest1 --resource-group AzureArcTest
Output:
Helm release deployment succeeded

    {
      "aadProfile": {
        "clientAppId": "",
        "serverAppId": "",
        "tenantId": ""
      },
      "agentPublicKeyCertificate": "xxxxxxxxxxxxxxxxxxx",
      "agentVersion": null,
      "connectivityStatus": "Connecting",
      "distribution": "gke",
      "id": "/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/AzureArcTest/providers/Microsoft.Kubernetes/connectedClusters/AzureArcTest1",
      "identity": {
        "principalId": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
        "tenantId": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
        "type": "SystemAssigned"
      },
      "infrastructure": "gcp",
      "kubernetesVersion": null,
      "lastConnectivityTime": null,
      "location": "eastus",
      "managedIdentityCertificateExpirationTime": null,
      "name": "AzureArcTest1",
      "offering": null,
      "provisioningState": "Succeeded",
      "resourceGroup": "AzureArcTest",
      "tags": {},
      "totalCoreCount": null,
      "totalNodeCount": null,
      "type": "Microsoft.Kubernetes/connectedClusters"
    }
Helm release deployment succeeded

    {
      "aadProfile": {
        "clientAppId": "",
        "serverAppId": "",
        "tenantId": ""
      },
      "agentPublicKeyCertificate": "xxxxxxxxxxxxxxxxxxx",
      "agentVersion": null,
      "connectivityStatus": "Connecting",
      "distribution": "gke",
      "id": "/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/AzureArcTest/providers/Microsoft.Kubernetes/connectedClusters/AzureArcTest1",
      "identity": {
        "principalId": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
        "tenantId": "xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx",
        "type": "SystemAssigned"
      },
      "infrastructure": "gcp",
      "kubernetesVersion": null,
      "lastConnectivityTime": null,
      "location": "eastus",
      "managedIdentityCertificateExpirationTime": null,
      "name": "AzureArcTest1",
      "offering": null,
      "provisioningState": "Succeeded",
      "resourceGroup": "AzureArcTest",
      "tags": {},
      "totalCoreCount": null,
      "totalNodeCount": null,
      "type": "Microsoft.Kubernetes/connectedClusters"
    }
Tip
The above command without the location parameter specified creates the Azure Arc-enabled Kubernetes resource in the same location as the resource group. To create the Azure Arc-enabled Kubernetes resource in a different location, specify either--location <region>or-l <region>when running theaz connectedk8s connectcommand.
--location <region>
-l <region>
az connectedk8s connect
New-AzConnectedKubernetes -ClusterName AzureArcTest1 -ResourceGroupName AzureArcTest -Location eastus
New-AzConnectedKubernetes -ClusterName AzureArcTest1 -ResourceGroupName AzureArcTest -Location eastus
Output:
Location Name          Type
-------- ----          ----
eastus   AzureArcTest1 microsoft.kubernetes/connectedclusters
Location Name          Type
-------- ----          ----
eastus   AzureArcTest1 microsoft.kubernetes/connectedclusters
Important
If deployment fails due to a timeout error, see ourtroubleshooting guidefor details on how to resolve this issue.
Connect using an outbound proxy server
If your cluster is behind an outbound proxy server, requests must be routed via the outbound proxy server.
Azure CLI
Azure PowerShell
On the deployment machine, set the environment variables needed for Azure CLI to use the outbound proxy server:export HTTP_PROXY=<proxy-server-ip-address>:<port>
export HTTPS_PROXY=<proxy-server-ip-address>:<port>
export NO_PROXY=<cluster-apiserver-ip-address>:<port>
On the deployment machine, set the environment variables needed for Azure CLI to use the outbound proxy server:
export HTTP_PROXY=<proxy-server-ip-address>:<port>
export HTTPS_PROXY=<proxy-server-ip-address>:<port>
export NO_PROXY=<cluster-apiserver-ip-address>:<port>
export HTTP_PROXY=<proxy-server-ip-address>:<port>
export HTTPS_PROXY=<proxy-server-ip-address>:<port>
export NO_PROXY=<cluster-apiserver-ip-address>:<port>
On the Kubernetes cluster, run the connect command with theproxy-httpsandproxy-httpparameters specified. If your proxy server is set up with both HTTP and HTTPS, be sure to use--proxy-httpfor the HTTP proxy and--proxy-httpsfor the HTTPS proxy. If your proxy server only uses HTTP, you can use that value for both parameters.az connectedk8s connect --name <cluster-name> --resource-group <resource-group> --proxy-https https://<proxy-server-ip-address>:<port> --proxy-http http://<proxy-server-ip-address>:<port> --proxy-skip-range <excludedIP>,<excludedCIDR> --proxy-cert <path-to-cert-file>
On the Kubernetes cluster, run the connect command with theproxy-httpsandproxy-httpparameters specified. If your proxy server is set up with both HTTP and HTTPS, be sure to use--proxy-httpfor the HTTP proxy and--proxy-httpsfor the HTTPS proxy. If your proxy server only uses HTTP, you can use that value for both parameters.
proxy-https
proxy-http
--proxy-http
--proxy-https
az connectedk8s connect --name <cluster-name> --resource-group <resource-group> --proxy-https https://<proxy-server-ip-address>:<port> --proxy-http http://<proxy-server-ip-address>:<port> --proxy-skip-range <excludedIP>,<excludedCIDR> --proxy-cert <path-to-cert-file>
az connectedk8s connect --name <cluster-name> --resource-group <resource-group> --proxy-https https://<proxy-server-ip-address>:<port> --proxy-http http://<proxy-server-ip-address>:<port> --proxy-skip-range <excludedIP>,<excludedCIDR> --proxy-cert <path-to-cert-file>
Note
Some network requests such as the ones involving in-cluster service-to-service communication need to be separated from the traffic that is routed via the proxy server for outbound communication. The--proxy-skip-rangeparameter can be used to specify the CIDR range and endpoints in a comma-separated way so that any communication from the agents to these endpoints do not go via the outbound proxy. At a minimum, the CIDR range of the services in the cluster should be specified as value for this parameter. For example, let's saykubectl get svc -Areturns a list of services where all the services have ClusterIP values in the range10.0.0.0/16. Then the value to specify for--proxy-skip-rangeis10.0.0.0/16,kubernetes.default.svc,.svc.cluster.local,.svc.
--proxy-skip-range
kubectl get svc -A
10.0.0.0/16
--proxy-skip-range
10.0.0.0/16,kubernetes.default.svc,.svc.cluster.local,.svc
--proxy-http,--proxy-https, and--proxy-skip-rangeare expected for most outbound proxy environments.--proxy-certisonlyrequired if you need to inject trusted certificates expected by proxy into the trusted certificate store of agent pods.
--proxy-http
--proxy-https
--proxy-skip-range
--proxy-cert
The outbound proxy has to be configured to allow websocket connections.
For outbound proxy servers, if you're only providing a trusted certificate, you can runaz connectedk8s connectwith just the--proxy-certparameter specified:
az connectedk8s connect
--proxy-cert
az connectedk8s connect --name <cluster-name> --resource-group <resource-group> --proxy-cert <path-to-cert-file>
az connectedk8s connect --name <cluster-name> --resource-group <resource-group> --proxy-cert <path-to-cert-file>
If there are multiple trusted certificates, then the certificate chain (Leaf cert, Intermediate cert, Root cert) needs to be combined into a single file which is passed in the--proxy-certparameter.
--proxy-cert
Note
--custom-ca-certis an alias for--proxy-cert. Either parameter can be used interchangeably. Passing both parameters in the same command will honor the one passed last.
--custom-ca-cert
--proxy-cert
On the deployment machine, set the environment variables needed for Azure PowerShell to use the outbound proxy server:$Env:HTTP_PROXY = "<proxy-server-ip-address>:<port>"
$Env:HTTPS_PROXY = "<proxy-server-ip-address>:<port>"
$Env:NO_PROXY = "<cluster-apiserver-ip-address>:<port>"
On the deployment machine, set the environment variables needed for Azure PowerShell to use the outbound proxy server:
$Env:HTTP_PROXY = "<proxy-server-ip-address>:<port>"
$Env:HTTPS_PROXY = "<proxy-server-ip-address>:<port>"
$Env:NO_PROXY = "<cluster-apiserver-ip-address>:<port>"
$Env:HTTP_PROXY = "<proxy-server-ip-address>:<port>"
$Env:HTTPS_PROXY = "<proxy-server-ip-address>:<port>"
$Env:NO_PROXY = "<cluster-apiserver-ip-address>:<port>"
On the Kubernetes cluster, run the connect command with the proxy parameter specified:New-AzConnectedKubernetes -ClusterName <cluster-name> -ResourceGroupName <resource-group> -Location eastus -Proxy 'https://<proxy-server-ip-address>:<port>'
On the Kubernetes cluster, run the connect command with the proxy parameter specified:
New-AzConnectedKubernetes -ClusterName <cluster-name> -ResourceGroupName <resource-group> -Location eastus -Proxy 'https://<proxy-server-ip-address>:<port>'
New-AzConnectedKubernetes -ClusterName <cluster-name> -ResourceGroupName <resource-group> -Location eastus -Proxy 'https://<proxy-server-ip-address>:<port>'
The ability to pass in the proxy certificate only, without proxy server endpoint details, isn't currently supported via PowerShell.
Verify cluster connection
Run the following command:
Azure CLI
Azure PowerShell
az connectedk8s list --resource-group AzureArcTest --output table
az connectedk8s list --resource-group AzureArcTest --output table
Output:
Name           Location    ResourceGroup
-------------  ----------  ---------------
AzureArcTest1  eastus      AzureArcTest
Name           Location    ResourceGroup
-------------  ----------  ---------------
AzureArcTest1  eastus      AzureArcTest
Get-AzConnectedKubernetes -ResourceGroupName AzureArcTest
Get-AzConnectedKubernetes -ResourceGroupName AzureArcTest
Output:
Location Name          Type
-------- ----          ----
eastus   AzureArcTest1 microsoft.kubernetes/connectedclusters
Location Name          Type
-------- ----          ----
eastus   AzureArcTest1 microsoft.kubernetes/connectedclusters
For help troubleshooting connection problems, seeDiagnose connection issues for Azure Arc-enabled Kubernetes clusters.
Note
After onboarding the cluster, it takes up to ten minutes for cluster metadata (such as cluster version and number of nodes) to appear on the overview page of the Azure Arc-enabled Kubernetes resource in the Azure portal.
View Azure Arc agents for Kubernetes
Azure Arc-enabled Kubernetes deploys several agents into theazure-arcnamespace.
azure-arc
View these deployments and pods using:kubectl get deployments,pods -n azure-arc
View these deployments and pods using:
kubectl get deployments,pods -n azure-arc
kubectl get deployments,pods -n azure-arc
Verify all pods are in aRunningstate.Output:NAME                                        READY   UP-TO-DATE   AVAILABLE   AGE
 deployment.apps/cluster-metadata-operator   1/1     1            1           13d
 deployment.apps/clusterconnect-agent        1/1     1            1           13d
 deployment.apps/clusteridentityoperator     1/1     1            1           13d
 deployment.apps/config-agent                1/1     1            1           13d
 deployment.apps/controller-manager          1/1     1            1           13d
 deployment.apps/extension-manager           1/1     1            1           13d
 deployment.apps/flux-logs-agent             1/1     1            1           13d
 deployment.apps/kube-aad-proxy              1/1     1            1           13d
 deployment.apps/metrics-agent               1/1     1            1           13d
 deployment.apps/resource-sync-agent         1/1     1            1           13d

 NAME                                            READY   STATUS    RESTARTS   AGE
 pod/cluster-metadata-operator-9568b899c-2stjn   2/2     Running   0          13d
 pod/clusterconnect-agent-576758886d-vggmv       3/3     Running   0          13d
 pod/clusteridentityoperator-6f59466c87-mm96j    2/2     Running   0          13d
 pod/config-agent-7cbd6cb89f-9fdnt               2/2     Running   0          13d
 pod/controller-manager-df6d56db5-kxmfj          2/2     Running   0          13d
 pod/extension-manager-58c94c5b89-c6q72          2/2     Running   0          13d
 pod/flux-logs-agent-6db9687fcb-rmxww            1/1     Running   0          13d
 pod/kube-aad-proxy-67b87b9f55-bthqv             2/2     Running   0          13d
 pod/metrics-agent-575c565fd9-k5j2t              2/2     Running   0          13d
 pod/resource-sync-agent-6bbd8bcd86-x5bk5        2/2     Running   0          13d
Verify all pods are in aRunningstate.
Running
Output:
NAME                                        READY   UP-TO-DATE   AVAILABLE   AGE
 deployment.apps/cluster-metadata-operator   1/1     1            1           13d
 deployment.apps/clusterconnect-agent        1/1     1            1           13d
 deployment.apps/clusteridentityoperator     1/1     1            1           13d
 deployment.apps/config-agent                1/1     1            1           13d
 deployment.apps/controller-manager          1/1     1            1           13d
 deployment.apps/extension-manager           1/1     1            1           13d
 deployment.apps/flux-logs-agent             1/1     1            1           13d
 deployment.apps/kube-aad-proxy              1/1     1            1           13d
 deployment.apps/metrics-agent               1/1     1            1           13d
 deployment.apps/resource-sync-agent         1/1     1            1           13d

 NAME                                            READY   STATUS    RESTARTS   AGE
 pod/cluster-metadata-operator-9568b899c-2stjn   2/2     Running   0          13d
 pod/clusterconnect-agent-576758886d-vggmv       3/3     Running   0          13d
 pod/clusteridentityoperator-6f59466c87-mm96j    2/2     Running   0          13d
 pod/config-agent-7cbd6cb89f-9fdnt               2/2     Running   0          13d
 pod/controller-manager-df6d56db5-kxmfj          2/2     Running   0          13d
 pod/extension-manager-58c94c5b89-c6q72          2/2     Running   0          13d
 pod/flux-logs-agent-6db9687fcb-rmxww            1/1     Running   0          13d
 pod/kube-aad-proxy-67b87b9f55-bthqv             2/2     Running   0          13d
 pod/metrics-agent-575c565fd9-k5j2t              2/2     Running   0          13d
 pod/resource-sync-agent-6bbd8bcd86-x5bk5        2/2     Running   0          13d
NAME                                        READY   UP-TO-DATE   AVAILABLE   AGE
 deployment.apps/cluster-metadata-operator   1/1     1            1           13d
 deployment.apps/clusterconnect-agent        1/1     1            1           13d
 deployment.apps/clusteridentityoperator     1/1     1            1           13d
 deployment.apps/config-agent                1/1     1            1           13d
 deployment.apps/controller-manager          1/1     1            1           13d
 deployment.apps/extension-manager           1/1     1            1           13d
 deployment.apps/flux-logs-agent             1/1     1            1           13d
 deployment.apps/kube-aad-proxy              1/1     1            1           13d
 deployment.apps/metrics-agent               1/1     1            1           13d
 deployment.apps/resource-sync-agent         1/1     1            1           13d

 NAME                                            READY   STATUS    RESTARTS   AGE
 pod/cluster-metadata-operator-9568b899c-2stjn   2/2     Running   0          13d
 pod/clusterconnect-agent-576758886d-vggmv       3/3     Running   0          13d
 pod/clusteridentityoperator-6f59466c87-mm96j    2/2     Running   0          13d
 pod/config-agent-7cbd6cb89f-9fdnt               2/2     Running   0          13d
 pod/controller-manager-df6d56db5-kxmfj          2/2     Running   0          13d
 pod/extension-manager-58c94c5b89-c6q72          2/2     Running   0          13d
 pod/flux-logs-agent-6db9687fcb-rmxww            1/1     Running   0          13d
 pod/kube-aad-proxy-67b87b9f55-bthqv             2/2     Running   0          13d
 pod/metrics-agent-575c565fd9-k5j2t              2/2     Running   0          13d
 pod/resource-sync-agent-6bbd8bcd86-x5bk5        2/2     Running   0          13d
For more information about these agents, seeAzure Arc-enabled Kubernetes agent overview.
Clean up resources
Azure CLI
Azure PowerShell
You can delete the Azure Arc-enabled Kubernetes resource, any associated configuration resources, and any agents running on the cluster by using the following command:
az connectedk8s delete --name AzureArcTest1 --resource-group AzureArcTest
az connectedk8s delete --name AzureArcTest1 --resource-group AzureArcTest
If the deletion process fails, use the following command to force deletion (adding-yif you want to bypass the confirmation prompt):
-y
az connectedk8s delete -n AzureArcTest1 -g AzureArcTest --force
az connectedk8s delete -n AzureArcTest1 -g AzureArcTest --force
This command can also be used if you experience issues when creating a new cluster deployment (due to previously created resources not being completely removed).
Note
Deleting the Azure Arc-enabled Kubernetes resource using the Azure portal removes any associated configuration resources, butdoes notremove any agents running on the cluster. Because of this, we recommend deleting the Azure Arc-enabled Kubernetes resource usingaz connectedk8s deleterather than deleting the resource in the Azure portal.
az connectedk8s delete
Remove-AzConnectedKubernetes -ClusterName AzureArcTest1 -ResourceGroupName AzureArcTest
Remove-AzConnectedKubernetes -ClusterName AzureArcTest1 -ResourceGroupName AzureArcTest
Note
Deleting the Azure Arc-enabled Kubernetes resource using the Azure portal removes any associated configuration resources, butdoes notremove any agents running on the cluster. Because of this, we recommend deleting the Azure Arc-enabled Kubernetes resource usingRemove-AzConnectedKubernetesrather than deleting the resource in the Azure portal.
Remove-AzConnectedKubernetes
Next steps
Learn how todeploy configurations using GitOps with Flux v2.
Troubleshoot common Azure Arc-enabled Kubernetes issues.
Experience Azure Arc-enabled Kubernetes automated scenarios withAzure Arc Jumpstart.
Feedback
Was this page helpful?
Additional resources