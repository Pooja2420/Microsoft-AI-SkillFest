Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
How to configure a managed network for Azure AI Foundry hubs
Article
2025-02-28
2 contributors
In this article
We have two network isolation aspects. One is the network isolation to access anAzure AI Foundryhub. Another is the network isolation of computing resources for both your hub and project (such as compute instance, serverless and managed online endpoint.) This document explains the latter highlighted in the diagram. You can use hub built-in network isolation to protect your computing resources.

You need to configure following network isolation configurations.
Choose network isolation mode. You have two options: allow internet outbound mode or allow only approved outbound mode.
If you use Visual Studio Code integration with allow only approved outbound mode, create FQDN outbound rules described in theuse Visual Studio Codesection.
If you use HuggingFace models in Models with allow only approved outbound mode, create FQDN outbound rules described in theuse HuggingFace modelssection.
If you use one of the open-source models with allow only approved outbound mode, create FQDN outbound rules described in thecurated by Azure AIsection.
Network isolation architecture and isolation modes
When you enable managed virtual network isolation, a managed virtual network is created for the hub. Managed compute resources you create for the hub automatically use this managed virtual network. The managed virtual network can use private endpoints for Azure resources that are used by your hub, such as Azure Storage, Azure Key Vault, and Azure Container Registry.
There are three different configuration modes for outbound traffic from the managed virtual network:
1You can use outbound rules withallow only approved outboundmode to achieve the same result as using allow internet outbound. The differences are:
Always use private endpoints to access Azure resources.
You must add rules for each outbound connection you need to allow.
Adding FQDN outbound rulesincrease your costsas this rule type uses Azure Firewall. If you use outbound FQDN rules, charges for Azure Firewall are included in your billing. For more information, seePricing.
The default rules forallow only approved outboundare designed to minimize the risk of data exfiltration. Any outbound rules you add might increase your risk.
The managed virtual network is preconfigured withrequired default rules. It's also configured for private endpoint connections to your hub, the hub's default storage, container registry, and key vault if they're configured as private or the hub isolation mode is set to allow only approved outbound. After choosing the isolation mode, you only need to consider other outbound requirements you might need to add.
The following diagram shows a managed virtual network configured toallow internet outbound:

The following diagram shows a managed virtual network configured toallow only approved outbound:
Note
In this configuration, the storage, key vault, and container registry used by the hub are flagged as private. Since they're flagged as private, a private endpoint is used to communicate with them.

Note
When you're accessing a private storage account from a public AI Foundry hub, you must access AI Foundry from within the virtual network of your storage account. Accessing AI Foundry from within the virtual network ensures that you can call actions such as upload files to the private storage account. The private storage account is independent of your AI Foundry hub's networking settings. For more on setting your private storage accounts virtual network, seeConfigure Azure Storage firewalls and virtual networks.
Prerequisites
Before following the steps in this article, make sure you have the following prerequisites:
Azure portal
Azure CLI
Python SDK
An Azure subscription. If you don't have an Azure subscription, create a free account before you begin.
An Azure subscription. If you don't have an Azure subscription, create a free account before you begin.
TheMicrosoft.Networkresource provider must be registered for your Azure subscription. This resource provider is used by the hub when creating private endpoints for the managed virtual network.For information on registering resource providers, seeResolve errors for resource provider registration.
TheMicrosoft.Networkresource provider must be registered for your Azure subscription. This resource provider is used by the hub when creating private endpoints for the managed virtual network.
For information on registering resource providers, seeResolve errors for resource provider registration.
The Azure identity you use when deploying a managed network requires the followingAzure role-based access control (Azure RBAC)actions to create private endpoints:Microsoft.MachineLearningServices/workspaces/privateEndpointConnections/readMicrosoft.MachineLearningServices/workspaces/privateEndpointConnections/write
The Azure identity you use when deploying a managed network requires the followingAzure role-based access control (Azure RBAC)actions to create private endpoints:
Microsoft.MachineLearningServices/workspaces/privateEndpointConnections/read
Microsoft.MachineLearningServices/workspaces/privateEndpointConnections/write
An Azure subscription. If you don't have an Azure subscription, create a free account before you begin.
An Azure subscription. If you don't have an Azure subscription, create a free account before you begin.
TheMicrosoft.Networkresource provider must be registered for your Azure subscription. This resource provider is used by the hub when creating private endpoints for the managed virtual network.For information on registering resource providers, seeResolve errors for resource provider registration.
TheMicrosoft.Networkresource provider must be registered for your Azure subscription. This resource provider is used by the hub when creating private endpoints for the managed virtual network.
For information on registering resource providers, seeResolve errors for resource provider registration.
The Azure identity you use when deploying a managed network requires the followingAzure role-based access control (Azure RBAC)actions to create private endpoints:Microsoft.MachineLearningServices/workspaces/privateEndpointConnections/readMicrosoft.MachineLearningServices/workspaces/privateEndpointConnections/write
The Azure identity you use when deploying a managed network requires the followingAzure role-based access control (Azure RBAC)actions to create private endpoints:
Microsoft.MachineLearningServices/workspaces/privateEndpointConnections/read
Microsoft.MachineLearningServices/workspaces/privateEndpointConnections/write
TheAzure CLIand themlextension to the Azure CLI. For more information, seeInstall, set up, and use the CLI (v2).
TheAzure CLIand themlextension to the Azure CLI. For more information, seeInstall, set up, and use the CLI (v2).
ml
The CLI examples in this article assume that you're using the Bash (or compatible) shell. For example, from a Linux system orWindows Subsystem for Linux.
The CLI examples in this article assume that you're using the Bash (or compatible) shell. For example, from a Linux system orWindows Subsystem for Linux.
The Azure CLI examples in this article usewsto represent the name of the hub, andrgto represent the name of the resource group. Change these values as needed when using the commands with your Azure subscription.
The Azure CLI examples in this article usewsto represent the name of the hub, andrgto represent the name of the resource group. Change these values as needed when using the commands with your Azure subscription.
ws
rg
An Azure subscription. If you don't have an Azure subscription, create a free account before you begin. Try thefree or paid version of Azure Machine Learning.
An Azure subscription. If you don't have an Azure subscription, create a free account before you begin. Try thefree or paid version of Azure Machine Learning.
TheMicrosoft.Networkresource provider must be registered for your Azure subscription. This resource provider is used by hub when creating private endpoints for the managed virtual network.For information on registering resource providers, seeResolve errors for resource provider registration.
TheMicrosoft.Networkresource provider must be registered for your Azure subscription. This resource provider is used by hub when creating private endpoints for the managed virtual network.
For information on registering resource providers, seeResolve errors for resource provider registration.
The Azure identity you use when deploying a managed network requires the followingAzure role-based access control (Azure RBAC)actions to create private endpoints:Microsoft.MachineLearningServices/workspaces/privateEndpointConnections/readMicrosoft.MachineLearningServices/workspaces/privateEndpointConnections/write
The Azure identity you use when deploying a managed network requires the followingAzure role-based access control (Azure RBAC)actions to create private endpoints:
Microsoft.MachineLearningServices/workspaces/privateEndpointConnections/read
Microsoft.MachineLearningServices/workspaces/privateEndpointConnections/write
The Azure Machine Learning Python SDK v2. For more information on the SDK, seeInstall the Python SDK v2 for Azure Machine Learning.
The Azure Machine Learning Python SDK v2. For more information on the SDK, seeInstall the Python SDK v2 for Azure Machine Learning.
The examples in this article assume that your code begins with the following Python. This code imports the classes required when creating a hub with managed virtual network, sets variables for your Azure subscription and resource group, and creates theml_client:from azure.ai.ml import MLClient
from azure.ai.ml.entities import (
    Hub,
    ManagedNetwork,
    IsolationMode,
    ServiceTagDestination,
    PrivateEndpointDestination,
    FqdnDestination
)
from azure.identity import DefaultAzureCredential

# Replace with the values for your Azure subscription and resource group.
subscription_id = "<SUBSCRIPTION_ID>"
resource_group = "<RESOURCE_GROUP>"

# get a handle to the subscription
ml_client = MLClient(DefaultAzureCredential(), subscription_id, resource_group)
The examples in this article assume that your code begins with the following Python. This code imports the classes required when creating a hub with managed virtual network, sets variables for your Azure subscription and resource group, and creates theml_client:
ml_client
from azure.ai.ml import MLClient
from azure.ai.ml.entities import (
    Hub,
    ManagedNetwork,
    IsolationMode,
    ServiceTagDestination,
    PrivateEndpointDestination,
    FqdnDestination
)
from azure.identity import DefaultAzureCredential

# Replace with the values for your Azure subscription and resource group.
subscription_id = "<SUBSCRIPTION_ID>"
resource_group = "<RESOURCE_GROUP>"

# get a handle to the subscription
ml_client = MLClient(DefaultAzureCredential(), subscription_id, resource_group)
from azure.ai.ml import MLClient
from azure.ai.ml.entities import (
    Hub,
    ManagedNetwork,
    IsolationMode,
    ServiceTagDestination,
    PrivateEndpointDestination,
    FqdnDestination
)
from azure.identity import DefaultAzureCredential

# Replace with the values for your Azure subscription and resource group.
subscription_id = "<SUBSCRIPTION_ID>"
resource_group = "<RESOURCE_GROUP>"

# get a handle to the subscription
ml_client = MLClient(DefaultAzureCredential(), subscription_id, resource_group)
Limitations
Azure AI Foundry supports managed virtual network isolation for securing your compute resources. Azure AI Foundry doesn't support bring your own virtual network for securing compute resources. Note that bringing your own virtual network for securing computes is different than your Azure virtual network that is required to access Azure AI Foundry from your on-premises network.
Once you enable managed virtual network isolation of your Azure AI, you can't disable it.
Managed virtual network uses private endpoint connection to access your private resources. You can't have a private endpoint and a service endpoint at the same time for your Azure resources, such as a storage account. We recommend using private endpoints in all scenarios.
The managed virtual network is deleted when the Azure AI is deleted.
Data exfiltration protection is automatically enabled for the only approved outbound mode. If you add other outbound rules, such as to FQDNs, Microsoft can't guarantee that you're protected from data exfiltration to those outbound destinations.
Using FQDN outbound rules increases the cost of the managed virtual network because FQDN rules use Azure Firewall. For more information, seePricing.
FQDN outbound rules only support ports 80 and 443.
If you want to disable compute instance's Public IP, you must add a private endpoint to a hub.
When using a compute instance with a managed network, use theaz ml compute connect-sshcommand to connect to the compute using SSH.
az ml compute connect-ssh
If your managed network is configured toallow only approved outbound, you can't use an FQDN rule to access Azure Storage Accounts. You must use a private endpoint instead.
Configure a managed virtual network to allow internet outbound
Tip
The creation of the managed VNet is deferred until a compute resource is created or provisioning is manually started. When you allow automatic creation, it can take around30 minutesto create the first compute resource as it is also provisioning the network.
Azure portal
Azure CLI
Python SDK
Create a new hub:Sign in to theAzure portal, and choose Azure AI Foundry from Create a resource menu.Select+ New Azure AI.Provide the required information on theBasicstab.From theNetworkingtab, selectPrivate with Internet Outbound.To add anoutbound rule, selectAdd user-defined outbound rulesfrom theNetworkingtab. From theOutbound rulessidebar, provide the following information:Rule name: A name for the rule. The name must be unique for this hub.Destination type: Private Endpoint is the only option when the network isolation is private with internet outbound. Hub managed virtual network doesn't support creating a private endpoint to all Azure resource types. For a list of supported resources, see thePrivate endpointssection.Subscription: The subscription that contains the Azure resource you want to add a private endpoint for.Resource group: The resource group that contains the Azure resource you want to add a private endpoint for.Resource type: The type of the Azure resource.Resource name: The name of the Azure resource.Sub Resource: The sub resource of the Azure resource type.SelectSaveto save the rule. You can continue usingAdd user-defined outbound rulesto add rules.Continue creating the hub as normal.
Create a new hub:
Sign in to theAzure portal, and choose Azure AI Foundry from Create a resource menu.
Sign in to theAzure portal, and choose Azure AI Foundry from Create a resource menu.
Select+ New Azure AI.
Select+ New Azure AI.
Provide the required information on theBasicstab.
Provide the required information on theBasicstab.
From theNetworkingtab, selectPrivate with Internet Outbound.
From theNetworkingtab, selectPrivate with Internet Outbound.
To add anoutbound rule, selectAdd user-defined outbound rulesfrom theNetworkingtab. From theOutbound rulessidebar, provide the following information:Rule name: A name for the rule. The name must be unique for this hub.Destination type: Private Endpoint is the only option when the network isolation is private with internet outbound. Hub managed virtual network doesn't support creating a private endpoint to all Azure resource types. For a list of supported resources, see thePrivate endpointssection.Subscription: The subscription that contains the Azure resource you want to add a private endpoint for.Resource group: The resource group that contains the Azure resource you want to add a private endpoint for.Resource type: The type of the Azure resource.Resource name: The name of the Azure resource.Sub Resource: The sub resource of the Azure resource type.SelectSaveto save the rule. You can continue usingAdd user-defined outbound rulesto add rules.
To add anoutbound rule, selectAdd user-defined outbound rulesfrom theNetworkingtab. From theOutbound rulessidebar, provide the following information:
Rule name: A name for the rule. The name must be unique for this hub.
Destination type: Private Endpoint is the only option when the network isolation is private with internet outbound. Hub managed virtual network doesn't support creating a private endpoint to all Azure resource types. For a list of supported resources, see thePrivate endpointssection.
Subscription: The subscription that contains the Azure resource you want to add a private endpoint for.
Resource group: The resource group that contains the Azure resource you want to add a private endpoint for.
Resource type: The type of the Azure resource.
Resource name: The name of the Azure resource.
Sub Resource: The sub resource of the Azure resource type.
SelectSaveto save the rule. You can continue usingAdd user-defined outbound rulesto add rules.
Continue creating the hub as normal.
Continue creating the hub as normal.
Update an existing hub:Sign in to theAzure portal, and select the hub that you want to enable managed virtual network isolation for.SelectNetworking, then selectPrivate with Internet Outbound.Toaddanoutbound rule, selectAdd user-defined outbound rulesfrom theNetworkingtab. From theOutbound rulessidebar, provide the same information as used when creating a hub in the 'Create a new hub' section.Todeletean outbound rule, selectdeletefor the rule.SelectSaveat the top of the page to save the changes to the managed virtual network.
Update an existing hub:
Sign in to theAzure portal, and select the hub that you want to enable managed virtual network isolation for.
Sign in to theAzure portal, and select the hub that you want to enable managed virtual network isolation for.
SelectNetworking, then selectPrivate with Internet Outbound.Toaddanoutbound rule, selectAdd user-defined outbound rulesfrom theNetworkingtab. From theOutbound rulessidebar, provide the same information as used when creating a hub in the 'Create a new hub' section.Todeletean outbound rule, selectdeletefor the rule.
SelectNetworking, then selectPrivate with Internet Outbound.
Toaddanoutbound rule, selectAdd user-defined outbound rulesfrom theNetworkingtab. From theOutbound rulessidebar, provide the same information as used when creating a hub in the 'Create a new hub' section.
Toaddanoutbound rule, selectAdd user-defined outbound rulesfrom theNetworkingtab. From theOutbound rulessidebar, provide the same information as used when creating a hub in the 'Create a new hub' section.
Todeletean outbound rule, selectdeletefor the rule.
Todeletean outbound rule, selectdeletefor the rule.
SelectSaveat the top of the page to save the changes to the managed virtual network.
SelectSaveat the top of the page to save the changes to the managed virtual network.
To configure a managed virtual network that allows internet outbound communications, you can use either the--managed-network allow_internet_outboundparameter or a YAML configuration file that contains the following entries:
--managed-network allow_internet_outbound
managed_network:
  isolation_mode: allow_internet_outbound
managed_network:
  isolation_mode: allow_internet_outbound
You can also defineoutbound rulesto other Azure services that the hub relies on. These rules defineprivate endpointsthat allow an Azure resource to securely communicate with the managed virtual network. The following rule demonstrates adding a private endpoint to an Azure Blob resource.
managed_network:
  isolation_mode: allow_internet_outbound
  outbound_rules:
  - name: added-perule
    destination:
      service_resource_id: /subscriptions/<SUBSCRIPTION_ID>/resourceGroups/<RESOURCE_GROUP>/providers/Microsoft.Storage/storageAccounts/<STORAGE_ACCOUNT_NAME>
      spark_enabled: true
      subresource_target: blob
    type: private_endpoint
managed_network:
  isolation_mode: allow_internet_outbound
  outbound_rules:
  - name: added-perule
    destination:
      service_resource_id: /subscriptions/<SUBSCRIPTION_ID>/resourceGroups/<RESOURCE_GROUP>/providers/Microsoft.Storage/storageAccounts/<STORAGE_ACCOUNT_NAME>
      spark_enabled: true
      subresource_target: blob
    type: private_endpoint
You can configure a managed virtual network using either theaz ml workspace createoraz ml workspace updatecommands:
az ml workspace create
az ml workspace update
Create a new hub:The following example creates a new hub. The--managed-network allow_internet_outboundparameter configures a managed virtual network for the hub:az ml workspace create --name ws --resource-group rg --kind hub --managed-network allow_internet_outboundTo create a hub using a YAML file instead, use the--fileparameter and specify the YAML file that contains the configuration settings:az ml workspace create --file hub.yaml --resource-group rg --name ws --kind hubThe following YAML example defines a hub with a managed virtual network:name: myhub
location: EastUS
managed_network:
  isolation_mode: allow_internet_outbound
Create a new hub:
The following example creates a new hub. The--managed-network allow_internet_outboundparameter configures a managed virtual network for the hub:
--managed-network allow_internet_outbound
az ml workspace create --name ws --resource-group rg --kind hub --managed-network allow_internet_outbound
az ml workspace create --name ws --resource-group rg --kind hub --managed-network allow_internet_outbound
To create a hub using a YAML file instead, use the--fileparameter and specify the YAML file that contains the configuration settings:
--file
az ml workspace create --file hub.yaml --resource-group rg --name ws --kind hub
az ml workspace create --file hub.yaml --resource-group rg --name ws --kind hub
The following YAML example defines a hub with a managed virtual network:
name: myhub
location: EastUS
managed_network:
  isolation_mode: allow_internet_outbound
name: myhub
location: EastUS
managed_network:
  isolation_mode: allow_internet_outbound
Update an existing hub:WarningBefore updating an existing workspace to use a managed virtual network, you must delete all computing resources for the workspace. This includes compute instance, compute cluster, and managed online endpoints.The following example updates an existing hub. The--managed-network allow_internet_outboundparameter configures a managed virtual network for the hub:az ml workspace update --name ws --resource-group rg --kind hub --managed-network allow_internet_outboundTo update an existing hub using the YAML file, use the--fileparameter and specify the YAML file that contains the configuration settings:az ml workspace update --file hub.yaml --name ws --kind hub --resource-group MyGroupThe following YAML example defines a managed virtual network for the hub. It also demonstrates how to add a private endpoint connection to a resource used by the hub; in this example, a private endpoint for a blob store:name: myhub
managed_network:
  isolation_mode: allow_internet_outbound
  outbound_rules:
  - name: added-perule
    destination:
      service_resource_id: /subscriptions/<SUBSCRIPTION_ID>/resourceGroups/<RESOURCE_GROUP>/providers/Microsoft.Storage/storageAccounts/<STORAGE_ACCOUNT_NAME>
      spark_enabled: true
      subresource_target: blob
    type: private_endpoint
Update an existing hub:
Warning
Before updating an existing workspace to use a managed virtual network, you must delete all computing resources for the workspace. This includes compute instance, compute cluster, and managed online endpoints.
The following example updates an existing hub. The--managed-network allow_internet_outboundparameter configures a managed virtual network for the hub:
--managed-network allow_internet_outbound
az ml workspace update --name ws --resource-group rg --kind hub --managed-network allow_internet_outbound
az ml workspace update --name ws --resource-group rg --kind hub --managed-network allow_internet_outbound
To update an existing hub using the YAML file, use the--fileparameter and specify the YAML file that contains the configuration settings:
--file
az ml workspace update --file hub.yaml --name ws --kind hub --resource-group MyGroup
az ml workspace update --file hub.yaml --name ws --kind hub --resource-group MyGroup
The following YAML example defines a managed virtual network for the hub. It also demonstrates how to add a private endpoint connection to a resource used by the hub; in this example, a private endpoint for a blob store:
name: myhub
managed_network:
  isolation_mode: allow_internet_outbound
  outbound_rules:
  - name: added-perule
    destination:
      service_resource_id: /subscriptions/<SUBSCRIPTION_ID>/resourceGroups/<RESOURCE_GROUP>/providers/Microsoft.Storage/storageAccounts/<STORAGE_ACCOUNT_NAME>
      spark_enabled: true
      subresource_target: blob
    type: private_endpoint
name: myhub
managed_network:
  isolation_mode: allow_internet_outbound
  outbound_rules:
  - name: added-perule
    destination:
      service_resource_id: /subscriptions/<SUBSCRIPTION_ID>/resourceGroups/<RESOURCE_GROUP>/providers/Microsoft.Storage/storageAccounts/<STORAGE_ACCOUNT_NAME>
      spark_enabled: true
      subresource_target: blob
    type: private_endpoint
To configure a managed virtual network that allows internet outbound communications, use theManagedNetworkclass to define a network withIsolationMode.ALLOW_INTERNET_OUTBOUND. You can then use theManagedNetworkobject to create a new hub or update an existing one. To defineoutbound rulesto Azure services that the hub relies on, use thePrivateEndpointDestinationclass to define a new private endpoint to the service.
ManagedNetwork
IsolationMode.ALLOW_INTERNET_OUTBOUND
ManagedNetwork
PrivateEndpointDestination
Create a new hub:The following example creates a new hub namedmyhub, with an outbound rule namedmyrulethat adds a private endpoint for an Azure Blob store:# Basic managed VNet configuration
network = ManagedNetwork(isolation_mode=IsolationMode.ALLOW_INTERNET_OUTBOUND)

# Hub configuration
ws = Hub(
    name="myhub",
    location="eastus",
    managed_network=network
)

# Example private endpoint outbound to a blob
rule_name = "myrule"
service_resource_id = "/subscriptions/<SUBSCRIPTION_ID>/resourceGroups/<RESOURCE_GROUP>/providers/Microsoft.Storage/storageAccounts/<STORAGE_ACCOUNT_NAME>"
subresource_target = "blob"
spark_enabled = True

# Add the outbound 
ws.managed_network.outbound_rules = [PrivateEndpointDestination(
    name=rule_name, 
    service_resource_id=service_resource_id, 
    subresource_target=subresource_target, 
    spark_enabled=spark_enabled)]

# Create the hub
ws = ml_client.workspaces.begin_create(ws).result()
Create a new hub:
The following example creates a new hub namedmyhub, with an outbound rule namedmyrulethat adds a private endpoint for an Azure Blob store:
myhub
myrule
# Basic managed VNet configuration
network = ManagedNetwork(isolation_mode=IsolationMode.ALLOW_INTERNET_OUTBOUND)

# Hub configuration
ws = Hub(
    name="myhub",
    location="eastus",
    managed_network=network
)

# Example private endpoint outbound to a blob
rule_name = "myrule"
service_resource_id = "/subscriptions/<SUBSCRIPTION_ID>/resourceGroups/<RESOURCE_GROUP>/providers/Microsoft.Storage/storageAccounts/<STORAGE_ACCOUNT_NAME>"
subresource_target = "blob"
spark_enabled = True

# Add the outbound 
ws.managed_network.outbound_rules = [PrivateEndpointDestination(
    name=rule_name, 
    service_resource_id=service_resource_id, 
    subresource_target=subresource_target, 
    spark_enabled=spark_enabled)]

# Create the hub
ws = ml_client.workspaces.begin_create(ws).result()
# Basic managed VNet configuration
network = ManagedNetwork(isolation_mode=IsolationMode.ALLOW_INTERNET_OUTBOUND)

# Hub configuration
ws = Hub(
    name="myhub",
    location="eastus",
    managed_network=network
)

# Example private endpoint outbound to a blob
rule_name = "myrule"
service_resource_id = "/subscriptions/<SUBSCRIPTION_ID>/resourceGroups/<RESOURCE_GROUP>/providers/Microsoft.Storage/storageAccounts/<STORAGE_ACCOUNT_NAME>"
subresource_target = "blob"
spark_enabled = True

# Add the outbound 
ws.managed_network.outbound_rules = [PrivateEndpointDestination(
    name=rule_name, 
    service_resource_id=service_resource_id, 
    subresource_target=subresource_target, 
    spark_enabled=spark_enabled)]

# Create the hub
ws = ml_client.workspaces.begin_create(ws).result()
Update an existing hub:The following example demonstrates how to create a managed virtual network for an existing hub namedmyhub:# Get the existing hub
ml_client = MLClient(DefaultAzureCredential(), subscription_id, resource_group, "myhub")
ws = ml_client.workspaces.get()

# Basic managed VNet configuration
my_hub.managed_network = ManagedNetwork(isolation_mode=IsolationMode.ALLOW_INTERNET_OUTBOUND)

# Example private endpoint outbound to a blob
rule_name = "myrule"
service_resource_id = "/subscriptions/<SUBSCRIPTION_ID>/resourceGroups/<RESOURCE_GROUP>/providers/Microsoft.Storage/storageAccounts/<STORAGE_ACCOUNT_NAME>"
subresource_target = "blob"
spark_enabled = True

# Add the outbound 
ws.managed_network.outbound_rules = [PrivateEndpointDestination(
    name=rule_name, 
    service_resource_id=service_resource_id, 
    subresource_target=subresource_target, 
    spark_enabled=spark_enabled)]

# Update the hub
ml_client.workspaces.begin_update(ws)
Update an existing hub:
The following example demonstrates how to create a managed virtual network for an existing hub namedmyhub:
myhub
# Get the existing hub
ml_client = MLClient(DefaultAzureCredential(), subscription_id, resource_group, "myhub")
ws = ml_client.workspaces.get()

# Basic managed VNet configuration
my_hub.managed_network = ManagedNetwork(isolation_mode=IsolationMode.ALLOW_INTERNET_OUTBOUND)

# Example private endpoint outbound to a blob
rule_name = "myrule"
service_resource_id = "/subscriptions/<SUBSCRIPTION_ID>/resourceGroups/<RESOURCE_GROUP>/providers/Microsoft.Storage/storageAccounts/<STORAGE_ACCOUNT_NAME>"
subresource_target = "blob"
spark_enabled = True

# Add the outbound 
ws.managed_network.outbound_rules = [PrivateEndpointDestination(
    name=rule_name, 
    service_resource_id=service_resource_id, 
    subresource_target=subresource_target, 
    spark_enabled=spark_enabled)]

# Update the hub
ml_client.workspaces.begin_update(ws)
# Get the existing hub
ml_client = MLClient(DefaultAzureCredential(), subscription_id, resource_group, "myhub")
ws = ml_client.workspaces.get()

# Basic managed VNet configuration
my_hub.managed_network = ManagedNetwork(isolation_mode=IsolationMode.ALLOW_INTERNET_OUTBOUND)

# Example private endpoint outbound to a blob
rule_name = "myrule"
service_resource_id = "/subscriptions/<SUBSCRIPTION_ID>/resourceGroups/<RESOURCE_GROUP>/providers/Microsoft.Storage/storageAccounts/<STORAGE_ACCOUNT_NAME>"
subresource_target = "blob"
spark_enabled = True

# Add the outbound 
ws.managed_network.outbound_rules = [PrivateEndpointDestination(
    name=rule_name, 
    service_resource_id=service_resource_id, 
    subresource_target=subresource_target, 
    spark_enabled=spark_enabled)]

# Update the hub
ml_client.workspaces.begin_update(ws)
Configure a managed virtual network to allow only approved outbound
Tip
The managed VNet is automatically provisioned when you create a compute resource. When you allow automatic creation, it can take around30 minutesto create the first compute resource as it is also provisioning the network. If you configured FQDN outbound rules, the first FQDN rule adds around10 minutesto the provisioning time.
Azure portal
Azure CLI
Python SDK
Create a new hub:Sign in to theAzure portal, and choose Azure AI Foundry from Create a resource menu.Select+ New Azure AI.Provide the required information on theBasicstab.From theNetworkingtab, selectPrivate with Approved Outbound.To add anoutbound rule, selectAdd user-defined outbound rulesfrom theNetworkingtab. From theOutbound rulessidebar, provide the following information:Rule name: A name for the rule. The name must be unique for this hub.Destination type: Private Endpoint, Service Tag, or FQDN. Service Tag and FQDN are only available when the network isolation is private with approved outbound.If the destination type isPrivate Endpoint, provide the following information:Subscription: The subscription that contains the Azure resource you want to add a private endpoint for.Resource group: The resource group that contains the Azure resource you want to add a private endpoint for.Resource type: The type of the Azure resource.Resource name: The name of the Azure resource.Sub Resource: The sub resource of the Azure resource type.TipThe hub managed VNet doesn't support creating a private endpoint to all Azure resource types. For a list of supported resources, see thePrivate endpointssection.If the destination type isService Tag, provide the following information:Service tag: The service tag to add to the approved outbound rules.Protocol: The protocol to allow for the service tag.Port ranges: The port ranges to allow for the service tag.If the destination type isFQDN, provide the following information:FQDN destination: The fully qualified domain name to add to the approved outbound rules.SelectSaveto save the rule. You can continue usingAdd user-defined outbound rulesto add rules.Continue creating the hub as normal.
Create a new hub:
Sign in to theAzure portal, and choose Azure AI Foundry from Create a resource menu.
Sign in to theAzure portal, and choose Azure AI Foundry from Create a resource menu.
Select+ New Azure AI.
Select+ New Azure AI.
Provide the required information on theBasicstab.
Provide the required information on theBasicstab.
From theNetworkingtab, selectPrivate with Approved Outbound.
From theNetworkingtab, selectPrivate with Approved Outbound.
To add anoutbound rule, selectAdd user-defined outbound rulesfrom theNetworkingtab. From theOutbound rulessidebar, provide the following information:Rule name: A name for the rule. The name must be unique for this hub.Destination type: Private Endpoint, Service Tag, or FQDN. Service Tag and FQDN are only available when the network isolation is private with approved outbound.If the destination type isPrivate Endpoint, provide the following information:Subscription: The subscription that contains the Azure resource you want to add a private endpoint for.Resource group: The resource group that contains the Azure resource you want to add a private endpoint for.Resource type: The type of the Azure resource.Resource name: The name of the Azure resource.Sub Resource: The sub resource of the Azure resource type.TipThe hub managed VNet doesn't support creating a private endpoint to all Azure resource types. For a list of supported resources, see thePrivate endpointssection.If the destination type isService Tag, provide the following information:Service tag: The service tag to add to the approved outbound rules.Protocol: The protocol to allow for the service tag.Port ranges: The port ranges to allow for the service tag.If the destination type isFQDN, provide the following information:FQDN destination: The fully qualified domain name to add to the approved outbound rules.SelectSaveto save the rule. You can continue usingAdd user-defined outbound rulesto add rules.
To add anoutbound rule, selectAdd user-defined outbound rulesfrom theNetworkingtab. From theOutbound rulessidebar, provide the following information:
Rule name: A name for the rule. The name must be unique for this hub.
Destination type: Private Endpoint, Service Tag, or FQDN. Service Tag and FQDN are only available when the network isolation is private with approved outbound.
If the destination type isPrivate Endpoint, provide the following information:
Subscription: The subscription that contains the Azure resource you want to add a private endpoint for.
Resource group: The resource group that contains the Azure resource you want to add a private endpoint for.
Resource type: The type of the Azure resource.
Resource name: The name of the Azure resource.
Sub Resource: The sub resource of the Azure resource type.
Tip
The hub managed VNet doesn't support creating a private endpoint to all Azure resource types. For a list of supported resources, see thePrivate endpointssection.
If the destination type isService Tag, provide the following information:
Service tag: The service tag to add to the approved outbound rules.
Protocol: The protocol to allow for the service tag.
Port ranges: The port ranges to allow for the service tag.
If the destination type isFQDN, provide the following information:
FQDN destination: The fully qualified domain name to add to the approved outbound rules.
SelectSaveto save the rule. You can continue usingAdd user-defined outbound rulesto add rules.
Continue creating the hub as normal.
Continue creating the hub as normal.
Update an existing hub:Sign in to theAzure portal, and select the hub that you want to enable managed virtual network isolation for.SelectNetworking, then selectPrivate with Approved Outbound.Toaddanoutbound rule, selectAdd user-defined outbound rulesfrom theNetworkingtab. From theOutbound rulessidebar, provide the same information as when creating a hub in the previous 'Create a new hub' section.Todeletean outbound rule, selectdeletefor the rule.SelectSaveat the top of the page to save the changes to the managed virtual network.
Update an existing hub:
Sign in to theAzure portal, and select the hub that you want to enable managed virtual network isolation for.
Sign in to theAzure portal, and select the hub that you want to enable managed virtual network isolation for.
SelectNetworking, then selectPrivate with Approved Outbound.Toaddanoutbound rule, selectAdd user-defined outbound rulesfrom theNetworkingtab. From theOutbound rulessidebar, provide the same information as when creating a hub in the previous 'Create a new hub' section.Todeletean outbound rule, selectdeletefor the rule.
SelectNetworking, then selectPrivate with Approved Outbound.
Toaddanoutbound rule, selectAdd user-defined outbound rulesfrom theNetworkingtab. From theOutbound rulessidebar, provide the same information as when creating a hub in the previous 'Create a new hub' section.
Toaddanoutbound rule, selectAdd user-defined outbound rulesfrom theNetworkingtab. From theOutbound rulessidebar, provide the same information as when creating a hub in the previous 'Create a new hub' section.
Todeletean outbound rule, selectdeletefor the rule.
Todeletean outbound rule, selectdeletefor the rule.
SelectSaveat the top of the page to save the changes to the managed virtual network.
SelectSaveat the top of the page to save the changes to the managed virtual network.
To configure a managed virtual network that allows only approved outbound communications, you can use either the--managed-network allow_only_approved_outboundparameter or a YAML configuration file that contains the following entries:
--managed-network allow_only_approved_outbound
managed_network:
  isolation_mode: allow_only_approved_outbound
managed_network:
  isolation_mode: allow_only_approved_outbound
You can also defineoutbound rulesto define approved outbound communication. An outbound rule can be created for a type ofservice_tag,fqdn, andprivate_endpoint. The following rule demonstrates adding a private endpoint to an Azure Blob resource, a service tag to Azure Data Factory, and an FQDN topypi.org:
service_tag
fqdn
private_endpoint
pypi.org
Important
Adding an outbound for a service tag or FQDN is only valid when the managed VNet is configured toallow_only_approved_outbound.
allow_only_approved_outbound
If you add outbound rules, Microsoft can't guarantee data exfiltration.
managed_network:
  isolation_mode: allow_only_approved_outbound
  outbound_rules:
  - name: added-servicetagrule
    destination:
      port_ranges: 80, 8080
      protocol: TCP
      service_tag: DataFactory
    type: service_tag
  - name: add-fqdnrule
    destination: 'pypi.org'
    type: fqdn
  - name: added-perule
    destination:
      service_resource_id: /subscriptions/<SUBSCRIPTION_ID>/resourceGroups/<RESOURCE_GROUP>/providers/Microsoft.Storage/storageAccounts/<STORAGE_ACCOUNT_NAME>
      spark_enabled: true
      subresource_target: blob
    type: private_endpoint
managed_network:
  isolation_mode: allow_only_approved_outbound
  outbound_rules:
  - name: added-servicetagrule
    destination:
      port_ranges: 80, 8080
      protocol: TCP
      service_tag: DataFactory
    type: service_tag
  - name: add-fqdnrule
    destination: 'pypi.org'
    type: fqdn
  - name: added-perule
    destination:
      service_resource_id: /subscriptions/<SUBSCRIPTION_ID>/resourceGroups/<RESOURCE_GROUP>/providers/Microsoft.Storage/storageAccounts/<STORAGE_ACCOUNT_NAME>
      spark_enabled: true
      subresource_target: blob
    type: private_endpoint
You can configure a managed virtual network using either theaz ml workspace createoraz ml workspace updatecommands:
az ml workspace create
az ml workspace update
Create a new hub:The following example uses the--managed-network allow_only_approved_outboundparameter to configure the managed virtual network:az ml workspace create --name ws --resource-group rg --kind hub --managed-network allow_only_approved_outboundThe following YAML file defines a hub with a managed virtual network:name: myhub
location: EastUS
managed_network:
  isolation_mode: allow_only_approved_outboundTo create a hub using the YAML file, use the--fileparameter:az ml workspace create --file hub.yaml --resource-group rg --name ws --kind hub
Create a new hub:
The following example uses the--managed-network allow_only_approved_outboundparameter to configure the managed virtual network:
--managed-network allow_only_approved_outbound
az ml workspace create --name ws --resource-group rg --kind hub --managed-network allow_only_approved_outbound
az ml workspace create --name ws --resource-group rg --kind hub --managed-network allow_only_approved_outbound
The following YAML file defines a hub with a managed virtual network:
name: myhub
location: EastUS
managed_network:
  isolation_mode: allow_only_approved_outbound
name: myhub
location: EastUS
managed_network:
  isolation_mode: allow_only_approved_outbound
To create a hub using the YAML file, use the--fileparameter:
--file
az ml workspace create --file hub.yaml --resource-group rg --name ws --kind hub
az ml workspace create --file hub.yaml --resource-group rg --name ws --kind hub
Update an existing hubWarningBefore updating an existing workspace to use a managed virtual network, you must delete all computing resources for the workspace. This includes compute instance, compute cluster, and managed online endpoints.The following example uses the--managed-network allow_only_approved_outboundparameter to configure the managed virtual network for an existing hub:az ml workspace update --name ws --resource-group rg --kind hub --managed-network allow_only_approved_outboundThe following YAML file defines a managed virtual network for the hub. It also demonstrates how to add an approved outbound to the managed virtual network. In this example, an outbound rule is added for both a service tag:name: myhub_dep
managed_network:
  isolation_mode: allow_only_approved_outbound
  outbound_rules:
  - name: added-servicetagrule
    destination:
      port_ranges: 80, 8080
      protocol: TCP
      service_tag: DataFactory
    type: service_tag
  - name: add-fqdnrule
    destination: 'pypi.org'
    type: fqdn
  - name: added-perule
    destination:
      service_resource_id: /subscriptions/<SUBSCRIPTION_ID>/resourceGroups/<RESOURCE_GROUP>/providers/Microsoft.Storage/storageAccounts/<STORAGE_ACCOUNT_NAME>
      spark_enabled: true
      subresource_target: blob
    type: private_endpoint
Update an existing hub
Warning
Before updating an existing workspace to use a managed virtual network, you must delete all computing resources for the workspace. This includes compute instance, compute cluster, and managed online endpoints.
The following example uses the--managed-network allow_only_approved_outboundparameter to configure the managed virtual network for an existing hub:
--managed-network allow_only_approved_outbound
az ml workspace update --name ws --resource-group rg --kind hub --managed-network allow_only_approved_outbound
az ml workspace update --name ws --resource-group rg --kind hub --managed-network allow_only_approved_outbound
The following YAML file defines a managed virtual network for the hub. It also demonstrates how to add an approved outbound to the managed virtual network. In this example, an outbound rule is added for both a service tag:
name: myhub_dep
managed_network:
  isolation_mode: allow_only_approved_outbound
  outbound_rules:
  - name: added-servicetagrule
    destination:
      port_ranges: 80, 8080
      protocol: TCP
      service_tag: DataFactory
    type: service_tag
  - name: add-fqdnrule
    destination: 'pypi.org'
    type: fqdn
  - name: added-perule
    destination:
      service_resource_id: /subscriptions/<SUBSCRIPTION_ID>/resourceGroups/<RESOURCE_GROUP>/providers/Microsoft.Storage/storageAccounts/<STORAGE_ACCOUNT_NAME>
      spark_enabled: true
      subresource_target: blob
    type: private_endpoint
name: myhub_dep
managed_network:
  isolation_mode: allow_only_approved_outbound
  outbound_rules:
  - name: added-servicetagrule
    destination:
      port_ranges: 80, 8080
      protocol: TCP
      service_tag: DataFactory
    type: service_tag
  - name: add-fqdnrule
    destination: 'pypi.org'
    type: fqdn
  - name: added-perule
    destination:
      service_resource_id: /subscriptions/<SUBSCRIPTION_ID>/resourceGroups/<RESOURCE_GROUP>/providers/Microsoft.Storage/storageAccounts/<STORAGE_ACCOUNT_NAME>
      spark_enabled: true
      subresource_target: blob
    type: private_endpoint
To configure a managed virtual network that allows only approved outbound communications, use theManagedNetworkclass to define a network withIsolationMode.ALLOw_ONLY_APPROVED_OUTBOUND. You can then use theManagedNetworkobject to create a new hub or update an existing one. To defineoutbound rules, use the following classes:
ManagedNetwork
IsolationMode.ALLOw_ONLY_APPROVED_OUTBOUND
ManagedNetwork
PrivateEndpointDestination
ServiceTagDestination
FqdnDestination
Create a new hub:The following example creates a new hub namedmyhub, with several outbound rules:myrule- Adds a private endpoint for an Azure Blob store.datafactory- Adds a service tag rule to communicate with Azure Data Factory.ImportantAdding an outbound for a service tag or FQDN is only valid when the managed VNet is configured toIsolationMode.ALLOW_ONLY_APPROVED_OUTBOUND.If you add outbound rules, Microsoft can't guarantee data exfiltration.# Basic managed VNet configuration
network = ManagedNetwork(isolation_mode=IsolationMode.ALLOW_ONLY_APPROVED_OUTBOUND)

# Hub configuration
ws = Hub(
    name="myhub",
    location="eastus",
    managed_network=network
)

# Append some rules
ws.managed_network.outbound_rules = []
# Example private endpoint outbound to a blob
rule_name = "myrule"
service_resource_id = "/subscriptions/<SUBSCRIPTION_ID>/resourceGroups/<RESOURCE_GROUP>/providers/Microsoft.Storage/storageAccounts/<STORAGE_ACCOUNT_NAME>"
subresource_target = "blob"
spark_enabled = True
ws.managed_network.outbound_rules.append(
    PrivateEndpointDestination(
        name=rule_name, 
        service_resource_id=service_resource_id, 
        subresource_target=subresource_target, 
        spark_enabled=spark_enabled
    )
)

# Example service tag rule
rule_name = "datafactory"
service_tag = "DataFactory"
protocol = "TCP"
port_ranges = "80, 8080-8089"
ws.managed_network.outbound_rules.append(
    ServiceTagDestination(
        name=rule_name, 
        service_tag=service_tag, 
        protocol=protocol, 
        port_ranges=port_ranges
    )
)

# Example FQDN rule
ws.managed_network.outbound_rules.append(
    FqdnDestination(
        name="fqdnrule", 
        destination="pypi.org"
    )
)

# Create the hub
ws = ml_client.workspaces.begin_create(ws).result()
Create a new hub:
The following example creates a new hub namedmyhub, with several outbound rules:
myhub
myrule- Adds a private endpoint for an Azure Blob store.
myrule
datafactory- Adds a service tag rule to communicate with Azure Data Factory.
datafactory
Important
Adding an outbound for a service tag or FQDN is only valid when the managed VNet is configured toIsolationMode.ALLOW_ONLY_APPROVED_OUTBOUND.
IsolationMode.ALLOW_ONLY_APPROVED_OUTBOUND
If you add outbound rules, Microsoft can't guarantee data exfiltration.
# Basic managed VNet configuration
network = ManagedNetwork(isolation_mode=IsolationMode.ALLOW_ONLY_APPROVED_OUTBOUND)

# Hub configuration
ws = Hub(
    name="myhub",
    location="eastus",
    managed_network=network
)

# Append some rules
ws.managed_network.outbound_rules = []
# Example private endpoint outbound to a blob
rule_name = "myrule"
service_resource_id = "/subscriptions/<SUBSCRIPTION_ID>/resourceGroups/<RESOURCE_GROUP>/providers/Microsoft.Storage/storageAccounts/<STORAGE_ACCOUNT_NAME>"
subresource_target = "blob"
spark_enabled = True
ws.managed_network.outbound_rules.append(
    PrivateEndpointDestination(
        name=rule_name, 
        service_resource_id=service_resource_id, 
        subresource_target=subresource_target, 
        spark_enabled=spark_enabled
    )
)

# Example service tag rule
rule_name = "datafactory"
service_tag = "DataFactory"
protocol = "TCP"
port_ranges = "80, 8080-8089"
ws.managed_network.outbound_rules.append(
    ServiceTagDestination(
        name=rule_name, 
        service_tag=service_tag, 
        protocol=protocol, 
        port_ranges=port_ranges
    )
)

# Example FQDN rule
ws.managed_network.outbound_rules.append(
    FqdnDestination(
        name="fqdnrule", 
        destination="pypi.org"
    )
)

# Create the hub
ws = ml_client.workspaces.begin_create(ws).result()
# Basic managed VNet configuration
network = ManagedNetwork(isolation_mode=IsolationMode.ALLOW_ONLY_APPROVED_OUTBOUND)

# Hub configuration
ws = Hub(
    name="myhub",
    location="eastus",
    managed_network=network
)

# Append some rules
ws.managed_network.outbound_rules = []
# Example private endpoint outbound to a blob
rule_name = "myrule"
service_resource_id = "/subscriptions/<SUBSCRIPTION_ID>/resourceGroups/<RESOURCE_GROUP>/providers/Microsoft.Storage/storageAccounts/<STORAGE_ACCOUNT_NAME>"
subresource_target = "blob"
spark_enabled = True
ws.managed_network.outbound_rules.append(
    PrivateEndpointDestination(
        name=rule_name, 
        service_resource_id=service_resource_id, 
        subresource_target=subresource_target, 
        spark_enabled=spark_enabled
    )
)

# Example service tag rule
rule_name = "datafactory"
service_tag = "DataFactory"
protocol = "TCP"
port_ranges = "80, 8080-8089"
ws.managed_network.outbound_rules.append(
    ServiceTagDestination(
        name=rule_name, 
        service_tag=service_tag, 
        protocol=protocol, 
        port_ranges=port_ranges
    )
)

# Example FQDN rule
ws.managed_network.outbound_rules.append(
    FqdnDestination(
        name="fqdnrule", 
        destination="pypi.org"
    )
)

# Create the hub
ws = ml_client.workspaces.begin_create(ws).result()
Update an existing hub:The following example demonstrates how to create a managed virtual network for an existing Azure Machine Learning hub namedmyhub. The example also adds several outbound rules for the managed virtual network:myrule- Adds a private endpoint for an Azure Blob store.datafactory- Adds a service tag rule to communicate with Azure Data Factory.TipAdding an outbound for a service tag or FQDN is only valid when the managed VNet is configured toIsolationMode.ALLOW_ONLY_APPROVED_OUTBOUND.# Get the existing hub
ml_client = MLClient(DefaultAzureCredential(), subscription_id, resource_group, "myhub")
ws = ml_client.workspaces.get()

# Basic managed VNet configuration
ws.managed_network = ManagedNetwork(isolation_mode=IsolationMode.ALLOW_ONLY_APPROVED_OUTBOUND)

# Append some rules
ws.managed_network.outbound_rules = []
# Example private endpoint outbound to a blob
rule_name = "myrule"
service_resource_id = "/subscriptions/<SUBSCRIPTION_ID>/resourceGroups/<RESOURCE_GROUP>/providers/Microsoft.Storage/storageAccounts/<STORAGE_ACCOUNT_NAME>"
subresource_target = "blob"
spark_enabled = True
ws.managed_network.outbound_rules.append(
    PrivateEndpointDestination(
        name=rule_name, 
        service_resource_id=service_resource_id, 
        subresource_target=subresource_target, 
        spark_enabled=spark_enabled
    )
)

# Example service tag rule
rule_name = "datafactory"
service_tag = "DataFactory"
protocol = "TCP"
port_ranges = "80, 8080-8089"
ws.managed_network.outbound_rules.append(
    ServiceTagDestination(
        name=rule_name, 
        service_tag=service_tag, 
        protocol=protocol, 
        port_ranges=port_ranges
    )
)

# Example FQDN rule
ws.managed_network.outbound_rules.append(
    FqdnDestination(
        name="fqdnrule", 
        destination="pypi.org"
    )
)

# Update the hub
ml_client.workspaces.begin_update(ws)
Update an existing hub:
The following example demonstrates how to create a managed virtual network for an existing Azure Machine Learning hub namedmyhub. The example also adds several outbound rules for the managed virtual network:
myhub
myrule- Adds a private endpoint for an Azure Blob store.
myrule
datafactory- Adds a service tag rule to communicate with Azure Data Factory.
datafactory
Tip
Adding an outbound for a service tag or FQDN is only valid when the managed VNet is configured toIsolationMode.ALLOW_ONLY_APPROVED_OUTBOUND.
IsolationMode.ALLOW_ONLY_APPROVED_OUTBOUND
# Get the existing hub
ml_client = MLClient(DefaultAzureCredential(), subscription_id, resource_group, "myhub")
ws = ml_client.workspaces.get()

# Basic managed VNet configuration
ws.managed_network = ManagedNetwork(isolation_mode=IsolationMode.ALLOW_ONLY_APPROVED_OUTBOUND)

# Append some rules
ws.managed_network.outbound_rules = []
# Example private endpoint outbound to a blob
rule_name = "myrule"
service_resource_id = "/subscriptions/<SUBSCRIPTION_ID>/resourceGroups/<RESOURCE_GROUP>/providers/Microsoft.Storage/storageAccounts/<STORAGE_ACCOUNT_NAME>"
subresource_target = "blob"
spark_enabled = True
ws.managed_network.outbound_rules.append(
    PrivateEndpointDestination(
        name=rule_name, 
        service_resource_id=service_resource_id, 
        subresource_target=subresource_target, 
        spark_enabled=spark_enabled
    )
)

# Example service tag rule
rule_name = "datafactory"
service_tag = "DataFactory"
protocol = "TCP"
port_ranges = "80, 8080-8089"
ws.managed_network.outbound_rules.append(
    ServiceTagDestination(
        name=rule_name, 
        service_tag=service_tag, 
        protocol=protocol, 
        port_ranges=port_ranges
    )
)

# Example FQDN rule
ws.managed_network.outbound_rules.append(
    FqdnDestination(
        name="fqdnrule", 
        destination="pypi.org"
    )
)

# Update the hub
ml_client.workspaces.begin_update(ws)
# Get the existing hub
ml_client = MLClient(DefaultAzureCredential(), subscription_id, resource_group, "myhub")
ws = ml_client.workspaces.get()

# Basic managed VNet configuration
ws.managed_network = ManagedNetwork(isolation_mode=IsolationMode.ALLOW_ONLY_APPROVED_OUTBOUND)

# Append some rules
ws.managed_network.outbound_rules = []
# Example private endpoint outbound to a blob
rule_name = "myrule"
service_resource_id = "/subscriptions/<SUBSCRIPTION_ID>/resourceGroups/<RESOURCE_GROUP>/providers/Microsoft.Storage/storageAccounts/<STORAGE_ACCOUNT_NAME>"
subresource_target = "blob"
spark_enabled = True
ws.managed_network.outbound_rules.append(
    PrivateEndpointDestination(
        name=rule_name, 
        service_resource_id=service_resource_id, 
        subresource_target=subresource_target, 
        spark_enabled=spark_enabled
    )
)

# Example service tag rule
rule_name = "datafactory"
service_tag = "DataFactory"
protocol = "TCP"
port_ranges = "80, 8080-8089"
ws.managed_network.outbound_rules.append(
    ServiceTagDestination(
        name=rule_name, 
        service_tag=service_tag, 
        protocol=protocol, 
        port_ranges=port_ranges
    )
)

# Example FQDN rule
ws.managed_network.outbound_rules.append(
    FqdnDestination(
        name="fqdnrule", 
        destination="pypi.org"
    )
)

# Update the hub
ml_client.workspaces.begin_update(ws)
Manually provision a managed VNet
The managed virtual network is automatically provisioned when you create a compute instance. When you rely on automatic provisioning, it can take around30 minutesto create the first compute instance as it is also provisioning the network. If you configured FQDN outbound rules (only available with allow only approved mode), the first FQDN rule adds around10 minutesto the provisioning time. If you have a large set of outbound rules to be provisioned in the managed network, it can take longer for provisioning to complete. The increased provisioning time can cause your first compute instance creation to time out.
To reduce the wait time and avoid potential timeout errors, we recommend manually provisioning the managed network. Then wait until the provisioning completes before you create a compute instance.
Alternatively, you can use theprovision_network_nowflag to provision the managed network as part of hub creation.
provision_network_now
Note
To create an online deployment, you must manually provision the managed network, or create a compute instance first. Creating a compute instance automatically provision it.
Azure portal
Azure CLI
Python SDK
During hub creation, selectProvision managed network proactively at creationto provision the managed network. Charges are incurred from network resources, such as private endpoints, once the virtual network is provisioned. This configuration option is only available during workspace creation.
The following example shows how to provision a managed virtual network during hub creation.
az ml workspace create -n myworkspace -g my_resource_group --kind hub --managed-network AllowInternetOutbound --provision-network-now true
az ml workspace create -n myworkspace -g my_resource_group --kind hub --managed-network AllowInternetOutbound --provision-network-now true
The following example shows how to provision a managed virtual network.
az ml workspace provision-network -g my_resource_group -n my_ai_hub_name
az ml workspace provision-network -g my_resource_group -n my_ai_hub_name
To verify that the provisioning completed, use the following command:
az ml workspace show -n my_ai_hub_name -g my_resource_group --query managed_network
az ml workspace show -n my_ai_hub_name -g my_resource_group --query managed_network
The following example shows how to provision a managed virtual network during hub creation.
az ml workspace create -n myworkspace -g my_resource_group --managed-network AllowInternetOutbound --provision-network-now true
az ml workspace create -n myworkspace -g my_resource_group --managed-network AllowInternetOutbound --provision-network-now true
The following example shows how to provision a managed virtual network:
# Connect to a workspace named "myworkspace"
ml_client = MLClient(DefaultAzureCredential(), subscription_id, resource_group, workspace_name="myAIHubName")

provision_network_result = ml_client.workspaces.begin_provision_network(workspace_name=ai_hub_name).result()
# Connect to a workspace named "myworkspace"
ml_client = MLClient(DefaultAzureCredential(), subscription_id, resource_group, workspace_name="myAIHubName")

provision_network_result = ml_client.workspaces.begin_provision_network(workspace_name=ai_hub_name).result()
To verify the AI provisioning, useml_client.workspaces.get()to get the AI Hub information. Themanaged_networkproperty contains the status of the managed network.
ml_client.workspaces.get()
managed_network
ws = ml_client.workspaces.get()
print(ws.managed_network.status)
ws = ml_client.workspaces.get()
print(ws.managed_network.status)
Manage outbound rules
Azure portal
Azure CLI
Python SDK
Sign in to theAzure portal, and select the hub that you want to enable managed virtual network isolation for.
SelectNetworking. TheAzure AI Outbound accesssection allows you to manage outbound rules.
Toaddanoutbound rule, selectAdd user-defined outbound rulesfrom theNetworkingtab. From theAzure AI outbound rulessidebar, provide the following information:
Toaddanoutbound rule, selectAdd user-defined outbound rulesfrom theNetworkingtab. From theAzure AI outbound rulessidebar, provide the following information:
Toenableordisablea rule, use the toggle in theActivecolumn.
Toenableordisablea rule, use the toggle in theActivecolumn.
Todeletean outbound rule, selectdeletefor the rule.
Todeletean outbound rule, selectdeletefor the rule.
To list the managed virtual network outbound rules for a hub, use the following command:
az ml workspace outbound-rule list --workspace-name myhub --resource-group rg
az ml workspace outbound-rule list --workspace-name myhub --resource-group rg
To view the details of a managed virtual network outbound rule, use the following command:
az ml workspace outbound-rule show --rule rule-name --workspace-name myhub --resource-group rg
az ml workspace outbound-rule show --rule rule-name --workspace-name myhub --resource-group rg
To remove an outbound rule from the managed virtual network, use the following command:
az ml workspace outbound-rule remove --rule rule-name --workspace-name myhub --resource-group rg
az ml workspace outbound-rule remove --rule rule-name --workspace-name myhub --resource-group rg
The following example demonstrates how to manage outbound rules for a hub namedmyhub:
myhub
# Connect to the hub
ml_client = MLClient(DefaultAzureCredential(), subscription_id, resource_group, workspace_name="myhub")

# Specify the rule name
rule_name = "<some-rule-name>"

# Get a rule by name
rule = ml_client._workspace_outbound_rules.get(resource_group, ws_name, rule_name)

# List rules for a hub
rule_list = ml_client._workspace_outbound_rules.list(resource_group, ws_name)

# Delete a rule from a hub
ml_client._workspace_outbound_rules.begin_remove(resource_group, ws_name, rule_name).result()
# Connect to the hub
ml_client = MLClient(DefaultAzureCredential(), subscription_id, resource_group, workspace_name="myhub")

# Specify the rule name
rule_name = "<some-rule-name>"

# Get a rule by name
rule = ml_client._workspace_outbound_rules.get(resource_group, ws_name, rule_name)

# List rules for a hub
rule_list = ml_client._workspace_outbound_rules.list(resource_group, ws_name)

# Delete a rule from a hub
ml_client._workspace_outbound_rules.begin_remove(resource_group, ws_name, rule_name).result()
List of required rules
Tip
These  rules are automatically added to the managed VNet.
Private endpoints:
When the isolation mode for the managed virtual network isAllow internet outbound, private endpoint outbound rules are automatically created as required rules from the managed virtual network for the hub and associated resourceswith public network access disabled(Key Vault, Storage Account, Container Registry, hub).
Allow internet outbound
When the isolation mode for the managed virtual network isAllow only approved outbound, private endpoint outbound rules are automatically created as required rules from the managed virtual network for the hub and associated resourcesregardless of public network access mode for those resources(Key Vault, Storage Account, Container Registry, hub).
Allow only approved outbound
For Azure AI Foundry to run with private networking, there are a set of required service tags. There are no alternatives to replacing required service tags. The following table describes each required service tag and its purpose within Azure AI Foundry.
AzureMachineLearning
AzureMachineLearning
AzureActiveDirectory
BatchNodeManagement.region
AzureResourceManager
AzureFrontDoor.FirstParty
MicrosoftContainerRegistry
AzureMonitor
VirtualNetwork
List of scenario specific outbound rules
Scenario: Access public machine learning packages
To allow installation ofPython packages for training and deployment, add outboundFQDNrules to allow traffic to the following host names:
Note
This isn't a complete list of the hosts required for all Python resources on the internet, only the most commonly used. For example, if you need access to a GitHub repository or other host, you must identify and add the required hosts for that scenario.
anaconda.com
*.anaconda.com
*.anaconda.org
pypi.org
*.pythonhosted.org
pytorch.org
*.pytorch.org
*.tensorflow.org
Scenario: Use Visual Studio Code
Visual Studio Code relies on specific hosts and ports to establish a remote connection.
The hosts in this section are used to install Visual Studio Code packages to establish a remote connection between Visual Studio Code and the compute instances for your project.
Note
This isn't a complete list of the hosts required for all Visual Studio Code resources on the internet, only the most commonly used. For example, if you need access to a GitHub repository or other host, you must identify and add the required hosts for that scenario. For a complete list of host names, seeNetwork Connections in Visual Studio Code.
*.vscode.dev
*.vscode-unpkg.net
*.vscode-cdn.net
*.vscodeexperiments.azureedge.net
default.exp-tas.com
code.visualstudio.com
update.code.visualstudio.com
*.vo.msecnd.net
marketplace.visualstudio.com
vscode.blob.core.windows.net
*.gallerycdn.vsassets.io
vscode.download.prss.microsoft.com
You must allow network traffic to ports 8704 to 8710. The VS Code server dynamically selects the first available port within this range.
Scenario: Use HuggingFace models
If you plan to useHuggingFace modelswith the hub, add outboundFQDNrules to allow traffic to the following hosts:
docker.io
*.docker.io
*.docker.com
production.cloudflare.docker.com
cnd.auth0.com
cdn-lfs.huggingface.co
Scenario: Curated by Azure AI
These models involve dynamic installation of dependencies at runtime, and require outboundFQDNrules to allow traffic to the following hosts:
*.anaconda.org
*.anaconda.com
anaconda.com
pypi.org
*.pythonhosted.org
*.pytorch.org
pytorch.org
Private endpoints
Private endpoints are currently supported for the following Azure services:
Azure AI Foundry hub
Azure AI Search
Azure AI services
Azure API Management
Azure Container Registry
Azure Cosmos DB (all sub resource types)
Azure Data Factory
Azure Database for MariaDB
Azure Database for MySQL
Azure Database for PostgreSQL Single Server
Azure Database for PostgreSQL Flexible Server
Azure Databricks
Azure Event Hubs
Azure Key Vault
Azure Machine Learning
Azure Machine Learning registries
Azure Redis Cache
Azure SQL Server
Azure Storage (all sub resource types)
When you create a private endpoint, you provide theresource typeandsubresourcethat the endpoint connects to. Some resources have multiple types and subresources. For more information, seewhat is a private endpoint.
When you create a private endpoint for hub dependency resources, such as Azure Storage, Azure Container Registry, and Azure Key Vault, the resource can be in a different Azure subscription. However, the resource must be in the same tenant as the hub.
A private endpoint is automatically created for a connection if the target resource is an Azure resource listed previously. A valid target ID is expected for the private endpoint. A valid target ID for the connection can be the Azure Resource Manager ID of a parent resource. The target ID is also expected in the target of the connection or inmetadata.resourceid. For more on connections, seeHow to add a new connection in Azure AI Foundry portal.
metadata.resourceid
Important
As of April 30th 2025, the Azure AI Enterprise Network Connection Approver role must be assigned to the Azure AI Foundry hub's managed identity to approve private endpoints to securely access your Azure resources from the managed virtual network. This doesn't impact existing resources with approved private endpoints as the role is correctly assigned by the service. For new resources, ensure the role is assigned to the hub's managed identity. For Azure Data Factory, Azure Databricks, and Azure Function Apps, the Contributor role should instead be assigned to your hub's managed identity. This role assignment is applicable to both User-assigned identity and System-assigned identity workspaces.
Select an Azure Firewall version for allowed only approved outbound
An Azure Firewall is deployed if an FQDN outbound rule is created while in theallow only approved outboundmode. Charges for the Azure Firewall are included in your billing. By default, aStandardversion of AzureFirewall is created. Optionally, you can select to use aBasicversion. You can change the firewall version used as needed. To figure out which version is best for you, visitChoose the right Azure Firewall version.
Important
The firewall isn't created until you add an outbound FQDN rule. For more information on pricing, seeAzure Firewall pricingand view prices for thestandardversion.
Use the following tabs to learn how to select the firewall version for your managed virtual network.
Azure portal
Azure CLI
Python SDK
After selecting the allow only approved outbound mode, an option to select the Azure Firewall version (SKU) appears. SelectStandardto use the standard version orBasicto use the basic version. SelectSaveto save your configuration.
To configure the firewall version from the CLI, use a YAML file and specify thefirewall_sku. The following example demonstrates a YAML file that sets the firewall SKU tobasic:
firewall_sku
basic
name: test-ws
resource_group: test-rg
location: eastus2 
managed_network:
  isolation_mode: allow_only_approved_outbound
  outbound_rules:
  - category: required
    destination: 'contoso.com'
    name: contosofqdn
    type: fqdn
  firewall_sku: basic
tags: {}
name: test-ws
resource_group: test-rg
location: eastus2 
managed_network:
  isolation_mode: allow_only_approved_outbound
  outbound_rules:
  - category: required
    destination: 'contoso.com'
    name: contosofqdn
    type: fqdn
  firewall_sku: basic
tags: {}
To configure the firewall version from the Python SDK, set thefirewall_skuproperty of theManagedNetworkobject. The following example demonstrates how to set the firewall SKU tobasic:
firewall_sku
ManagedNetwork
basic
network = ManagedNetwork(isolation_mode=IsolationMode.ALLOW_INTERNET_OUTBOUND,
                         firewall_sku='basic')
network = ManagedNetwork(isolation_mode=IsolationMode.ALLOW_INTERNET_OUTBOUND,
                         firewall_sku='basic')
Pricing
The hub managed virtual network feature is free. However, you're charged for the following resources that are used by the managed virtual network:
Azure Private Link - Private endpoints used to secure communications between the managed virtual network and Azure resources relies on Azure Private Link. For more information on pricing, seeAzure Private Link pricing.
Azure Private Link - Private endpoints used to secure communications between the managed virtual network and Azure resources relies on Azure Private Link. For more information on pricing, seeAzure Private Link pricing.
FQDN outbound rules - FQDN outbound rules are implemented using Azure Firewall. If you use outbound FQDN rules, charges for Azure Firewall are included in your billing. A standard version of Azure Firewall is used by default. For information on selecting the basic version, seeSelect an Azure Firewall version. Azure Firewall is provisioned per hub.ImportantThe firewall isn't created until you add an outbound FQDN rule. If you don't use FQDN rules, you won't be charged for Azure Firewall. For more information on pricing, seeAzure Firewall pricing.
FQDN outbound rules - FQDN outbound rules are implemented using Azure Firewall. If you use outbound FQDN rules, charges for Azure Firewall are included in your billing. A standard version of Azure Firewall is used by default. For information on selecting the basic version, seeSelect an Azure Firewall version. Azure Firewall is provisioned per hub.
Important
The firewall isn't created until you add an outbound FQDN rule. If you don't use FQDN rules, you won't be charged for Azure Firewall. For more information on pricing, seeAzure Firewall pricing.
Related content
Create Azure AI Foundry hub and project using the SDK
Access on-premises resources from Azure AI Foundry
Feedback
Was this page helpful?
Additional resources