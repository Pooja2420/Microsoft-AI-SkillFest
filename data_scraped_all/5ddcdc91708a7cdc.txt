Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Modernizing the UI â VSTS Sprint 136 Update
Article
2022-10-04
11 contributors
In this article
In theSprint 136 Updateof Visual Studio Team Services (VSTS), we are introducing some new and exciting design changes. You can preview a new experience in theBuild hubandTest tab. TheQueries hubis now generally available. Also, you can try a preview of thenew navigation experiencewith thenew Work hubs.
There are a number of other features across Work, Build, Release, Test, and Reporting. Check out theFeatureslist below for more.
Next steps
Read about the new features below and head over to VSTS to try them for yourself.
Go to VSTS
Whatâs new in VSTS
Features
Navigation
Preview our new navigation
Work
New Work hubs
Queries hub generally available
Easily find existing work items in linking and mention experiences
Build and Release
New build results page
Pass environment variables to tasks
Ignore a release gate for a deployment
Set a variable at release time
Organize your release definitions in folders
Use improved Windows remote PowerShell based tasks
GitHub artifacts show associated commits deployed in a release
Package
Use upstream sources in legacy feeds
Use arbitrary public npm feeds as upstream sources
Test
Improved experiences in the Test tab
Reporting
Exclude items completed before a certain date in analytics views
Easily navigate to dashboards
Authentication
Get notified for PAT expirations
Navigation
Preview our new navigation
Important
To use this capability, you must have theNew Navigationpreview featureenabled on your profile or account.
Over the next couple weeks, the public preview of our new navigation will be rolling out and available to everyone that uses VSTS. Once itâs available in your account, a feature announcement banner will show and you can turn it on for any project using the Preview Features panel. Read ourblog postfor more details about the design refresh and why weâre doing it.

Work
New Work hubs
Important
To use this capability, you must have theNew Navigationpreview featureenabled on your profile or account.
Along with the public preview of our new navigation, weâre also introducing the new Work hubs. Here, youâll find favorites and quick search support for all your boards, backlogs, and sprints as well as new features such as Sprint Planning. See theNew Work Hubs poston the Microsoft DevOps Blog for more information.

Queries hub generally available
While the newQuerieshub was in preview, we worked to respond to your feedback. We are now excited for the experience to become available for everyone. The hub streamlines many of the existing queries features from the old hub with a more modern look and feel as well as provides new capabilities to make it easier to get to the queries that are important to you. Some highlights of the new experience include:
Directory pages with last modified by information and the ability to search for queries
Breadcrumb with unique URLs for folders to bookmark important groups of queries
Quick access to your favorite queries from the results page
Read more about these exciting updates on ourDevOps blog.
Easily find existing work items in linking and mention experiences
When you want to link two existing work items together, you can now easily find the item that is important to you using our new work item search control. The query selector has been replaced with inline suggestions based on your recently accessed work items, as well as an entry point to search for a specific work item by ID or title.

Build and Release
New build results page
Important
To use this capability, you must have theNew build result pagepreview featureenabled on your profile or account.
In TFS 2015 we rolled out a new build system, enabling you to drag and drop scripts and a growing library of open-sourced tasks. We've gradually improved the editor experience, and today we're refreshing the experience for viewing a build.
When you go to your build results, youâll have clearer insight into the logs, issues, commits, and work items that make up your build. This is the first step in our design update so send us your thoughts.

Pass environment variables to tasks
CI/CD task authors can set a new property,showEnvironmentVariables, in the task.json to pass environment variables to tasks. When you do so, an extra control is rendered on the task in the build editor. This is available for thePowershell,Cmd, andBashtasks.

This enables two scenarios:
A task requires an environment variable with case-preserved in the variable name. For instance, in the above example, the environment variable passed along to the task would be âfooâ and not âFOOâ.
It allows secrets values to be passed in a safe manner to the scripts. This is preferred to passing the secrets as arguments to the scripts since the operating system on the agent may log invocation of processes including their arguments.
Ignore a release gate for a deployment
Important
To use this capability, you must have theNew release progress viewspreview featureenabled on your profile or account.
Release gates enable automatic evaluation of health criteria before a release is promoted to the next environment. By default, the release pipeline progresses only when all gates are healthy at the same time. In certain situations, such as when expediting a release or after manually checking health, an approver may want to ignore a gate and allow the release to progress even if that gate has yet to evaluate as healthy. Therelease gatesdocumentation for more information.

Set a variable at release time
In a release definition, you can now choose the variables you would like to set when you create the release.

The value provided for the variable when the release is created is only used for that release. This feature will help you avoid multiple steps for Create-in-Draft, update the variables in draft, and trigger the release with the variable.

Organize your release definitions in folders
Important
To use this capability, you must have theNew Releases Hubpreview featureenabled on your profile or account.
Organizing your release definitions just got simpler and easier. You can now create folders and move your definitions within them. Security can be also be managed directly at the folder level. Folders can be viewed in theReleases* hub (it will show up next to theReleaseshub when you opt-in).

Use improved Windows remote PowerShell based tasks
New and improved Windows remote PowerShell based tasks are available. These improvements include several performance fixes and support live logs and console output commands, such as Write-Host and Write-Output.
PowerShell on Target task (version: 3.*): You can add inline script, modify PSSession options, control "ErrorActionPreference", and fail on standard error.
Azure File Copy task (version: 2.*): Ships with the latest AzCopy (v7.1.0) that addresses aGitHub issue.
GitHub artifacts show associated commits deployed in a release
In order to enhance end-to-end traceability, you can see all the commits that were deployed to an environment for GitHub repositories, as a part of a specific release.

Package
Use upstream sources in legacy feeds
Until now, legacy feeds could not use the nuget.org upstream source or take advantage of improvements made to the npmjs.com upstream source. With this update, you can upgrade a legacy feed and use those features. Look for the banner above your feedâs packages for more information, including behavior changes you should be aware of before upgrading.
Use arbitrary public npm feeds as upstream sources
Previously, you had been able to use npmjs.com, and other VSTS feeds, as npm upstream sources. With this update, you can also use arbitrary public feeds (e.g. a MyGet feed) as npm upstream sources.
Test
Improved experiences in the Test tab
Important
Enable theNew build hubandNew release progress viewspreview featuresto use these new capabilities.
Along with the newBuildshub and newReleaseprogress views, a modern experience for theTesttab is now available. This gives you rich in-context test information forBuildsandRelease. The new experience provides an in-progress test view, full page debugging experience, in context test history, reporting aborted test execution, and run level summary.

Tests, such as integration and functional tests, can run for a long time so itâs important to see test execution at any given time. With the In-Progress Test View, you no longer have to wait for test execution to complete to know the test outcome. Results are available in near real-time as they are run, helping you to take actions faster. You can debug a failure or abort, file a bug or abort the pipeline. The feature is currently available for both build and release pipeline usingVS Test Taskin Multi Agent phase, usingPublish Test Results Taskor publishing test results using API(s). In the future we plan to extend this experience for test execution using Single Agent.
The view below shows the In-Progress Test summary in the new release progress view, reporting total test count and number of test failures at a given point in time.

By clicking the In-Progress Test summary above, you can view the detailed test summary along with failed or aborted test information in theTesttab. The test summary refreshes at a periodic interval with the ability to refresh the detail view on demand, based on the availability of new results.

Error messages and stack traces are lengthy in nature and need enough real estate to view the details during debugging. To have an immersive debugging experience, you can now expand the test or test run view to full page view, while still being able to perform the required in context operations like bug creation or requirement association for the current test result.

Historically, teams would have to go toRunshub to view the history of a test result. With the new experience, we bring the test history right in context within theTesttab for build and release. The test history information is provided in a progressive manner starting with the current build definition or environment for the selected test, followed by other branches and environments for the build and release respectively.

Test execution can abort due to multiple reasons such as bad test code, source under test, and environmental issues. Irrespective of the reason for the abort, it is important for you to diagnose the behavior and identify the root cause. You can now view the aborted tests and test runs, alongside the completed runs in theTesttab. The feature is currently available for both build and release pipeline usingVS Test Taskin Multi Agent phase or publishing test results using API(s). In the future we plan to extend this experience for test execution using Single Agent.

Reporting
Exclude items completed before a certain date in analytics views
TheAnalytics servicestores all work item history, including work items that are closed. Customers often donât want to report on older, closed work items. We have updatedAnalytics viewsto let you exclude work items that were completed before a specific date. This greatly decreases the amount of data loaded into Power BI. It also makes advanced calculations, liketime in state, much more performant. You set this option on theHistorytab.

Easily navigate to dashboards
You can now easily navigate to other dashboards that belong to your team! While the new dashboard experience was in preview, we worked to respond to your biggest piece of feedback around losing the ability to quickly switch between the dashboards. The dashboard picker has now been updated to make it easier to get to the dashboards you care about. The updated picker now contains two pivots:MineandAll. TheMinepivot makes it easy to find the teams that you belong to and their corresponding dashboards, as well as showing you the dashboards that you have favorited. TheAllpivot, continues to show you all of the dashboards within the project.
Favorites are at the top.

Scroll down to see your teamâs dashboards.

See all dashboards in the project.

Authentication
Get notified for PAT expirations
When a Personal Access Token (PAT) is nearing expiration, youâll get an email notification giving you the ability to immediately take action and extend the lifetime of the PAT so that your tools and processes will go on uninterrupted.
How to provide feedback
We would love to hear what you think about these features. Use the feedback menu to report a problem or provide a suggestion.

You can also get advice and your questions answered by the community onStack Overflow.
Thanks,
Jeremy Epling
Feedback
Was this page helpful?
Additional resources