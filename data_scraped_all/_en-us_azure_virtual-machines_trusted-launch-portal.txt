Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Deploy a virtual machine with Trusted Launch enabled
Article
2024-08-22
18 contributors
In this article
Applies to:âï¸ Linux VMs âï¸ Windows VMs âï¸ Flexible scale sets âï¸ Uniform scale sets.
Trusted Launchis a way to improve the security ofGeneration 2virtual machines (VMs). Trusted Launch protects against advanced and persistent attack techniques by combining infrastructure technologies like virtual Trusted Platform Module (vTPM) and secure boot.
Prerequisites
We recommend that youonboard your subscription to Microsoft Defender for Cloudif it isn't already. Defender for Cloud has a free tier, which offers useful insights for various Azure and hybrid resources. With the absence of Defender for Cloud, Trusted Launch VM users can't monitorboot integrityof VM.
We recommend that youonboard your subscription to Microsoft Defender for Cloudif it isn't already. Defender for Cloud has a free tier, which offers useful insights for various Azure and hybrid resources. With the absence of Defender for Cloud, Trusted Launch VM users can't monitorboot integrityof VM.
Assign Azure policy initiatives to your subscription. These policy initiatives need to be assigned only once per subscription. Policies will help deploy and audit for Trusted Launch VMs while automatically installing all required extensions on all supported VMs.Configure the Trusted Launch VMs'built-in policy initiative.Configure prerequisites to enable Guest Attestation on Trusted Launch-enabled VMs.Configure machines to automatically install the Azure Monitor and Azure Security agents on VMs.
Assign Azure policy initiatives to your subscription. These policy initiatives need to be assigned only once per subscription. Policies will help deploy and audit for Trusted Launch VMs while automatically installing all required extensions on all supported VMs.
Configure the Trusted Launch VMs'built-in policy initiative.
Configure prerequisites to enable Guest Attestation on Trusted Launch-enabled VMs.
Configure machines to automatically install the Azure Monitor and Azure Security agents on VMs.
Allow the service tagAzureAttestationin network security group outbound rules to allow traffic for Azure Attestation. For more information, seeVirtual network service tags.
Allow the service tagAzureAttestationin network security group outbound rules to allow traffic for Azure Attestation. For more information, seeVirtual network service tags.
AzureAttestation
Make sure that the firewall policies allow access to*.attest.azure.net.
Make sure that the firewall policies allow access to*.attest.azure.net.
*.attest.azure.net
Note
If you're using a Linux image and anticipate that the VM might have kernel drivers either unsigned or not signed by the Linux distro vendor, you might want to consider turning off secure boot. In the Azure portal, on theCreate a virtual machinepage for theSecurity typeparameter withTrusted Launch Virtual Machinesselected, selectConfigure security featuresand clear theEnable secure bootcheckbox. In the Azure CLI, PowerShell, or SDK, set the secure boot parameter tofalse.
Security type
false
Deploy a Trusted Launch VM
Create a VM with Trusted Launch enabled. Choose one of the following options.
Portal
CLI
PowerShell
Template
Sign in to the Azureportal.
Sign in to the Azureportal.
Search forVirtual Machines.
Search forVirtual Machines.
UnderServices, selectVirtual machines.
UnderServices, selectVirtual machines.
On theVirtual machinespage, selectAdd, and then selectVirtual machine.
On theVirtual machinespage, selectAdd, and then selectVirtual machine.
UnderProject details, make sure the correct subscription is selected.
UnderProject details, make sure the correct subscription is selected.
UnderResource group, selectCreate new. Enter a name for your resource group or select an existing resource group from the dropdown list.
UnderResource group, selectCreate new. Enter a name for your resource group or select an existing resource group from the dropdown list.
UnderInstance details, enter a name for the VM name and choose a region that supportsTrusted Launch.
UnderInstance details, enter a name for the VM name and choose a region that supportsTrusted Launch.
ForSecurity type, selectTrusted launch virtual machines. When the optionsSecure boot,vTPM, andIntegrity Monitoringappear, select the appropriate options for your deployment. For more information, seeTrusted Launch-enabled security features.
ForSecurity type, selectTrusted launch virtual machines. When the optionsSecure boot,vTPM, andIntegrity Monitoringappear, select the appropriate options for your deployment. For more information, seeTrusted Launch-enabled security features.

UnderImage, select an image fromRecommended Gen 2 images compatible with Trusted launch. For a list, seeTrusted Launch.TipIf you don't see the Gen2 version of the image that you want in the dropdown list, selectSee all images. Then change theSecurity typefilter toTrusted Launch.
UnderImage, select an image fromRecommended Gen 2 images compatible with Trusted launch. For a list, seeTrusted Launch.
Tip
If you don't see the Gen2 version of the image that you want in the dropdown list, selectSee all images. Then change theSecurity typefilter toTrusted Launch.
Select a VM size that supports Trusted Launch. For more information, see the list ofsupported sizes.
Select a VM size that supports Trusted Launch. For more information, see the list ofsupported sizes.
Fill in theAdministrator accountinformation and thenInbound port rules.
Fill in theAdministrator accountinformation and thenInbound port rules.
At the bottom of the page, selectReview + Create.
At the bottom of the page, selectReview + Create.
On theCreate a virtual machinepage, you can see the information about the VM you're about to deploy. After validation shows as passed, selectCreate.
On theCreate a virtual machinepage, you can see the information about the VM you're about to deploy. After validation shows as passed, selectCreate.

It takes a few minutes for your VM to be deployed.
Make sure that you're running the latest version of the Azure CLI.
Sign in to Azure by usingaz login.az login
Sign in to Azure by usingaz login.
az login
az login
az login
Create a VM with Trusted Launch.az group create -n myresourceGroup -l eastus 

az vm create \
   --resource-group myResourceGroup \
   --name myVM \
   --image Canonical:UbuntuServer:18_04-lts-gen2:latest \
   --admin-username azureuser \
   --generate-ssh-keys \
   --security-type TrustedLaunch \
   --enable-secure-boot true \ 
   --enable-vtpm true
Create a VM with Trusted Launch.
az group create -n myresourceGroup -l eastus 

az vm create \
   --resource-group myResourceGroup \
   --name myVM \
   --image Canonical:UbuntuServer:18_04-lts-gen2:latest \
   --admin-username azureuser \
   --generate-ssh-keys \
   --security-type TrustedLaunch \
   --enable-secure-boot true \ 
   --enable-vtpm true
az group create -n myresourceGroup -l eastus 

az vm create \
   --resource-group myResourceGroup \
   --name myVM \
   --image Canonical:UbuntuServer:18_04-lts-gen2:latest \
   --admin-username azureuser \
   --generate-ssh-keys \
   --security-type TrustedLaunch \
   --enable-secure-boot true \ 
   --enable-vtpm true
For existing VMs, you can enable or disable secure boot and vTPM settings. Updating the VM with secure boot and vTPM settings triggers auto-reboot.az vm update \
   --resource-group myResourceGroup \
   --name myVM \
   --enable-secure-boot true \
   --enable-vtpm true
For existing VMs, you can enable or disable secure boot and vTPM settings. Updating the VM with secure boot and vTPM settings triggers auto-reboot.
az vm update \
   --resource-group myResourceGroup \
   --name myVM \
   --enable-secure-boot true \
   --enable-vtpm true
az vm update \
   --resource-group myResourceGroup \
   --name myVM \
   --enable-secure-boot true \
   --enable-vtpm true
For more information about installing boot integrity monitoring through the Guest Attestation extension, seeBoot integrity.
To provision a VM with Trusted Launch, it first needs to be enabled with theTrustedLaunchparameter by using theSet-AzVmSecurityProfilecmdlet. Then you can use theSet-AzVmUeficmdlet to set the vTPM and Secure Boot configuration. Use the following snippet as a quick start. Remember to replace the values in this example with your own.
TrustedLaunch
Set-AzVmSecurityProfile
Set-AzVmUefi
$rgName = "myResourceGroup"
$location = "West US"
$vmName = "myTrustedVM"
$vmSize = Standard_B2s
$publisher = "MicrosoftWindowsServer"
$offer = "WindowsServer"
$sku = "2019-datacenter-gensecond"
$version = latest
$cred = Get-Credential `
   -Message "Enter a username and password for the virtual machine."

$vm = New-AzVMConfig -VMName $vmName -VMSize $vmSize 

$vm = Set-AzVMOperatingSystem `
   -VM $vm -Windows `
   -ComputerName $vmName `
   -Credential $cred `
   -ProvisionVMAgent `
   -EnableAutoUpdate 

$vm = Add-AzVMNetworkInterface -VM $vm `
   -Id $NIC.Id 

$vm = Set-AzVMSourceImage -VM $vm `
   -PublisherName $publisher `
   -Offer $offer `
   -Skus $sku `
   -Version $version 

$vm = Set-AzVMOSDisk -VM $vm `
   -StorageAccountType "StandardSSD_LRS" `
   -CreateOption "FromImage" 

$vm = Set-AzVmSecurityProfile -VM $vm `
   -SecurityType "TrustedLaunch" 

$vm = Set-AzVmUefi -VM $vm `
   -EnableVtpm $true `
   -EnableSecureBoot $true 

New-AzVM -ResourceGroupName $rgName -Location $location -VM $vm
$rgName = "myResourceGroup"
$location = "West US"
$vmName = "myTrustedVM"
$vmSize = Standard_B2s
$publisher = "MicrosoftWindowsServer"
$offer = "WindowsServer"
$sku = "2019-datacenter-gensecond"
$version = latest
$cred = Get-Credential `
   -Message "Enter a username and password for the virtual machine."

$vm = New-AzVMConfig -VMName $vmName -VMSize $vmSize 

$vm = Set-AzVMOperatingSystem `
   -VM $vm -Windows `
   -ComputerName $vmName `
   -Credential $cred `
   -ProvisionVMAgent `
   -EnableAutoUpdate 

$vm = Add-AzVMNetworkInterface -VM $vm `
   -Id $NIC.Id 

$vm = Set-AzVMSourceImage -VM $vm `
   -PublisherName $publisher `
   -Offer $offer `
   -Skus $sku `
   -Version $version 

$vm = Set-AzVMOSDisk -VM $vm `
   -StorageAccountType "StandardSSD_LRS" `
   -CreateOption "FromImage" 

$vm = Set-AzVmSecurityProfile -VM $vm `
   -SecurityType "TrustedLaunch" 

$vm = Set-AzVmUefi -VM $vm `
   -EnableVtpm $true `
   -EnableSecureBoot $true 

New-AzVM -ResourceGroupName $rgName -Location $location -VM $vm
You can deploy Trusted Launch VMs by using a quickstart template.


Deploy a Trusted Launch VM from an Azure Compute Gallery image
Azure Trusted Launch VMssupport the creation and sharing of custom images by using Azure Compute Gallery. There are two types of images that you can create, based on the security types of the image:
Recommended:Trusted Launch VM supported (TrustedLaunchSupported) imagesare images where the source doesn't have VM Guest state information and can be used to create eitherGeneration 2 VMsorTrusted Launch VMs.
TrustedLaunchSupported
Trusted Launch VM (TrustedLaunch) imagesare images where the source usually hasVM Guest State informationand can be used to create onlyTrusted Launch VMs.
TrustedLaunch
Trusted Launch VM supported images
For the following image sources, the security type on the image definition should be set toTrustedLaunchsupported:
TrustedLaunchsupported
Gen2 operating system (OS) disk VHD
Gen2 Managed Image
Gen2 Gallery Image version
No VM Guest State information can be included in the image source.
You can use the resulting image version to create either Azure Gen2 VMs or Trusted Launch VMs.
These images can be shared by usingAzure Compute Gallery - Direct Shared GalleryandAzure Compute Gallery - Community Gallery.
Note
The OS disk VHD, Managed Image, or Gallery Image version should be created from aGen2 image that's compatible with Trusted Launch VMs.
Portal
CLI
PowerShell
Sign in to theAzure portal.
Search for and selectVM image versionsin the search bar.
On theVM image versionspage, selectCreate.
On theCreate VM image versionpage, on theBasicstab:Select the Azure subscription.Select an existing resource group or create a new resource group.Select the Azure region.Enter an image version number.ForSource, select eitherStorage Blobs (VHD)orManaged Imageor anotherVM Image Version.If you selectedStorage Blobs (VHD), enter an OS disk VHD (without the VM Guest state). Make sure to use a Gen2 VHD.If you selectedManaged Image, select an existing managed image of a Gen2 VM.If you selectedVM Image Version, select an existing Gallery Image version of a Gen2 VM.ForTarget Azure compute gallery, select or create a gallery to share the image.ForOperating system state, select eitherGeneralizedorSpecializeddepending on your use case. If you're using a managed image as the source, always selectGeneralized. If you're using a storage blob (VHD) and want to selectGeneralized, follow the steps togeneralize a Linux VHDorgeneralize a Windows VHDbefore you continue. If you're using an existing VM image version, select eitherGeneralizedorSpecializedbased on what's used in the source VM image definition.ForTarget VM Image Definition, selectCreate new.On theCreate a VM image definitionpane, enter a name for the definition. Make sure the security type is set toTrustedlaunch Supported. Enter the publisher, offer, and SKU information. Then selectOK.
Select the Azure subscription.
Select an existing resource group or create a new resource group.
Select the Azure region.
Enter an image version number.
ForSource, select eitherStorage Blobs (VHD)orManaged Imageor anotherVM Image Version.
If you selectedStorage Blobs (VHD), enter an OS disk VHD (without the VM Guest state). Make sure to use a Gen2 VHD.
If you selectedManaged Image, select an existing managed image of a Gen2 VM.
If you selectedVM Image Version, select an existing Gallery Image version of a Gen2 VM.
ForTarget Azure compute gallery, select or create a gallery to share the image.
ForOperating system state, select eitherGeneralizedorSpecializeddepending on your use case. If you're using a managed image as the source, always selectGeneralized. If you're using a storage blob (VHD) and want to selectGeneralized, follow the steps togeneralize a Linux VHDorgeneralize a Windows VHDbefore you continue. If you're using an existing VM image version, select eitherGeneralizedorSpecializedbased on what's used in the source VM image definition.
ForTarget VM Image Definition, selectCreate new.
On theCreate a VM image definitionpane, enter a name for the definition. Make sure the security type is set toTrustedlaunch Supported. Enter the publisher, offer, and SKU information. Then selectOK.
On theReplicationtab, enter the replica count and target regions for image replication, if necessary.
On theEncryptiontab, enter SSE encryption-related information, if necessary.
SelectReview + Create.
After the configuration is successfully validated, selectCreateto finish creating the image.
After the image version is created, selectCreate VM.
On theCreate a virtual machinepage, underResource group, selectCreate new. Enter a name for your resource group or select an existing resource group from the dropdown list.
UnderInstance details, enter a name for the VM name and choose a region that supportsTrusted Launch.
ForSecurity type, selectTrusted launch virtual machines. TheSecure BootandvTPMcheckboxes are enabled by default.
Fill in theAdministrator accountinformation and thenInbound port rules.
On the validation page, review the details of the VM.
After the validation succeeds, selectCreateto finish creating the VM.
Make sure that you're running the latest version of the Azure CLI.
Sign in to Azure by usingaz login.az login
Sign in to Azure by usingaz login.
az login
az login
az login
Create an image definition with theTrustedLaunchSupportedsecurity type.az sig image-definition create --resource-group MyResourceGroup --location eastus \ 
--gallery-name MyGallery --gallery-image-definition MyImageDef \ 
--publisher TrustedLaunchPublisher --offer TrustedLaunchOffer --sku TrustedLaunchSku \ 
--os-type Linux --os-state Generalized \ 
--hyper-v-generation V2 \ 
--features SecurityType=TrustedLaunchSupported
Create an image definition with theTrustedLaunchSupportedsecurity type.
TrustedLaunchSupported
az sig image-definition create --resource-group MyResourceGroup --location eastus \ 
--gallery-name MyGallery --gallery-image-definition MyImageDef \ 
--publisher TrustedLaunchPublisher --offer TrustedLaunchOffer --sku TrustedLaunchSku \ 
--os-type Linux --os-state Generalized \ 
--hyper-v-generation V2 \ 
--features SecurityType=TrustedLaunchSupported
az sig image-definition create --resource-group MyResourceGroup --location eastus \ 
--gallery-name MyGallery --gallery-image-definition MyImageDef \ 
--publisher TrustedLaunchPublisher --offer TrustedLaunchOffer --sku TrustedLaunchSku \ 
--os-type Linux --os-state Generalized \ 
--hyper-v-generation V2 \ 
--features SecurityType=TrustedLaunchSupported
Use an OS disk VHD to create an image version. Ensure that the Linux VHD was generalized before you upload it to an Azure Storage account blob by using the steps inPrepare Linux for imaging in Azure.az sig image-version create --resource-group MyResourceGroup \
--gallery-name MyGallery --gallery-image-definition MyImageDef \
--gallery-image-version 1.0.0 \
--os-vhd-storage-account /subscriptions/00000000-0000-0000-0000-00000000xxxx/resourceGroups/imageGroups/providers/Microsoft.Storage/storageAccounts/mystorageaccount \
--os-vhd-uri https://mystorageaccount.blob.core.windows.net/container/path_to_vhd_file
Use an OS disk VHD to create an image version. Ensure that the Linux VHD was generalized before you upload it to an Azure Storage account blob by using the steps inPrepare Linux for imaging in Azure.
az sig image-version create --resource-group MyResourceGroup \
--gallery-name MyGallery --gallery-image-definition MyImageDef \
--gallery-image-version 1.0.0 \
--os-vhd-storage-account /subscriptions/00000000-0000-0000-0000-00000000xxxx/resourceGroups/imageGroups/providers/Microsoft.Storage/storageAccounts/mystorageaccount \
--os-vhd-uri https://mystorageaccount.blob.core.windows.net/container/path_to_vhd_file
az sig image-version create --resource-group MyResourceGroup \
--gallery-name MyGallery --gallery-image-definition MyImageDef \
--gallery-image-version 1.0.0 \
--os-vhd-storage-account /subscriptions/00000000-0000-0000-0000-00000000xxxx/resourceGroups/imageGroups/providers/Microsoft.Storage/storageAccounts/mystorageaccount \
--os-vhd-uri https://mystorageaccount.blob.core.windows.net/container/path_to_vhd_file
Create a Trusted Launch VM from the preceding image version.adminUsername=linuxvm
az vm create --resource-group MyResourceGroup \
    --name myTrustedLaunchVM \
    --image "/subscriptions/00000000-0000-0000-0000-00000000xxxx/resourceGroups/MyResourceGroup/providers/Microsoft.Compute/galleries/MyGallery/images/MyImageDef" \
    --size Standard_D2s_v5 \
    --security-type TrustedLaunch \
    --enable-secure-boot true \ 
    --enable-vtpm true \
    --admin-username $adminUsername \
    --generate-ssh-keys
Create a Trusted Launch VM from the preceding image version.
adminUsername=linuxvm
az vm create --resource-group MyResourceGroup \
    --name myTrustedLaunchVM \
    --image "/subscriptions/00000000-0000-0000-0000-00000000xxxx/resourceGroups/MyResourceGroup/providers/Microsoft.Compute/galleries/MyGallery/images/MyImageDef" \
    --size Standard_D2s_v5 \
    --security-type TrustedLaunch \
    --enable-secure-boot true \ 
    --enable-vtpm true \
    --admin-username $adminUsername \
    --generate-ssh-keys
adminUsername=linuxvm
az vm create --resource-group MyResourceGroup \
    --name myTrustedLaunchVM \
    --image "/subscriptions/00000000-0000-0000-0000-00000000xxxx/resourceGroups/MyResourceGroup/providers/Microsoft.Compute/galleries/MyGallery/images/MyImageDef" \
    --size Standard_D2s_v5 \
    --security-type TrustedLaunch \
    --enable-secure-boot true \ 
    --enable-vtpm true \
    --admin-username $adminUsername \
    --generate-ssh-keys
Create an image definition with theTrustedLaunchSupportedsecurity type.$rgName = "MyResourceGroup"
$galleryName = "MyGallery"
$galleryImageDefinitionName = "MyImageDef"
$location = "eastus"
$publisherName = "TrustedlaunchPublisher"
$offerName = "TrustedlaunchOffer"
$skuName = "TrustedlaunchSku"
$description = "My gallery"
$SecurityType = @{Name='SecurityType';Value='TrustedLaunchSupported'}
$features = @($SecurityType)
New-AzGalleryImageDefinition -ResourceGroupName $rgName -GalleryName $galleryName -Name $galleryImageDefinitionName -Location $location -Publisher $publisherName -Offer $offerName -Sku $skuName -HyperVGeneration "V2" -OsState "Generalized" -OsType "Windows" -Description $description -Feature $features
Create an image definition with theTrustedLaunchSupportedsecurity type.
TrustedLaunchSupported
$rgName = "MyResourceGroup"
$galleryName = "MyGallery"
$galleryImageDefinitionName = "MyImageDef"
$location = "eastus"
$publisherName = "TrustedlaunchPublisher"
$offerName = "TrustedlaunchOffer"
$skuName = "TrustedlaunchSku"
$description = "My gallery"
$SecurityType = @{Name='SecurityType';Value='TrustedLaunchSupported'}
$features = @($SecurityType)
New-AzGalleryImageDefinition -ResourceGroupName $rgName -GalleryName $galleryName -Name $galleryImageDefinitionName -Location $location -Publisher $publisherName -Offer $offerName -Sku $skuName -HyperVGeneration "V2" -OsState "Generalized" -OsType "Windows" -Description $description -Feature $features
$rgName = "MyResourceGroup"
$galleryName = "MyGallery"
$galleryImageDefinitionName = "MyImageDef"
$location = "eastus"
$publisherName = "TrustedlaunchPublisher"
$offerName = "TrustedlaunchOffer"
$skuName = "TrustedlaunchSku"
$description = "My gallery"
$SecurityType = @{Name='SecurityType';Value='TrustedLaunchSupported'}
$features = @($SecurityType)
New-AzGalleryImageDefinition -ResourceGroupName $rgName -GalleryName $galleryName -Name $galleryImageDefinitionName -Location $location -Publisher $publisherName -Offer $offerName -Sku $skuName -HyperVGeneration "V2" -OsState "Generalized" -OsType "Windows" -Description $description -Feature $features
To create an image version, you can use an existing Gen2 Gallery Image version, which was generalized during creation.$rgName = "MyResourceGroup"
$galleryName = "MyGallery"
$galleryImageDefinitionName = "MyImageDef"
$location = "eastus"
$galleryImageVersionName = "1.0.0"
$sourceImageId = "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myVMRG/providers/Microsoft.Compute/galleries/MyGallery/images/Gen2VMImageDef/versions/0.0.1"
New-AzGalleryImageVersion -ResourceGroupName $rgName -GalleryName $galleryName -GalleryImageDefinitionName $galleryImageDefinitionName -Name $galleryImageVersionName -Location $location -SourceImageId $sourceImageId
To create an image version, you can use an existing Gen2 Gallery Image version, which was generalized during creation.
$rgName = "MyResourceGroup"
$galleryName = "MyGallery"
$galleryImageDefinitionName = "MyImageDef"
$location = "eastus"
$galleryImageVersionName = "1.0.0"
$sourceImageId = "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myVMRG/providers/Microsoft.Compute/galleries/MyGallery/images/Gen2VMImageDef/versions/0.0.1"
New-AzGalleryImageVersion -ResourceGroupName $rgName -GalleryName $galleryName -GalleryImageDefinitionName $galleryImageDefinitionName -Name $galleryImageVersionName -Location $location -SourceImageId $sourceImageId
$rgName = "MyResourceGroup"
$galleryName = "MyGallery"
$galleryImageDefinitionName = "MyImageDef"
$location = "eastus"
$galleryImageVersionName = "1.0.0"
$sourceImageId = "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myVMRG/providers/Microsoft.Compute/galleries/MyGallery/images/Gen2VMImageDef/versions/0.0.1"
New-AzGalleryImageVersion -ResourceGroupName $rgName -GalleryName $galleryName -GalleryImageDefinitionName $galleryImageDefinitionName -Name $galleryImageVersionName -Location $location -SourceImageId $sourceImageId
Create a Trusted Launch VM from the preceding image version.$rgName = "MyResourceGroup"
$galleryName = "MyGallery"
$galleryImageDefinitionName = "MyImageDef"
$location = "eastus"
$vmName = "myVMfromImage"
$vmSize = "Standard_D2s_v5"
$imageDefinition = Get-AzGalleryImageDefinition `
   -GalleryName $galleryName `
   -ResourceGroupName $rgName `
   -Name $galleryImageDefinitionName
$cred = Get-Credential `
   -Message "Enter a username and password for the virtual machine"
# Network pieces
$subnetConfig = New-AzVirtualNetworkSubnetConfig `
   -Name mySubnet `
   -AddressPrefix 192.168.1.0/24
$vnet = New-AzVirtualNetwork `
   -ResourceGroupName $rgName `
   -Location $location `
   -Name MYvNET `
   -AddressPrefix 192.168.0.0/16 `
   -Subnet $subnetConfig
$pip = New-AzPublicIpAddress `
   -ResourceGroupName $rgName `
   -Location $location `
  -Name "mypublicdns$(Get-Random)" `
  -AllocationMethod Static `
  -IdleTimeoutInMinutes 4
$nsgRuleRDP = New-AzNetworkSecurityRuleConfig `
   -Name myNetworkSecurityGroupRuleRDP  `
   -Protocol Tcp `
  -Direction Inbound `
   -Priority 1000 `
   -SourceAddressPrefix * `
   -SourcePortRange * `
   -DestinationAddressPrefix * `
   -DestinationPortRange 3389 `
   -Access Deny
$nsg = New-AzNetworkSecurityGroup `
   -ResourceGroupName $rgName `
   -Location $location `
  -Name myNetworkSecurityGroup `
  -SecurityRules $nsgRuleRDP
$nic = New-AzNetworkInterface `
   -Name myNic `
   -ResourceGroupName $rgName `
   -Location $location `
  -SubnetId $vnet.Subnets[0].Id `
  -PublicIpAddressId $pip.Id `
  -NetworkSecurityGroupId $nsg.Id
$vmâ¯=â¯New-AzVMConfigâ¯-vmNameâ¯$vmNameâ¯-vmSize $vmSize | `
      Set-AzVMOperatingSystem -Windows -ComputerName $vmName -Credential $cred | `
      Set-AzVMSourceImage -Id $imageDefinition.Id | `
      Add-AzVMNetworkInterface -Id $nic.Id
$vmâ¯=â¯Set-AzVMSecurityProfile -SecurityType "TrustedLaunch" -VM $vm
$vmâ¯=â¯Set-AzVmUefiâ¯-VMâ¯$vmâ¯`
   -EnableVtpmâ¯$trueâ¯`
   -EnableSecureBootâ¯$true 
New-AzVM `
   -ResourceGroupName $rgName `
   -Location $location `
   -VM $vm
Create a Trusted Launch VM from the preceding image version.
$rgName = "MyResourceGroup"
$galleryName = "MyGallery"
$galleryImageDefinitionName = "MyImageDef"
$location = "eastus"
$vmName = "myVMfromImage"
$vmSize = "Standard_D2s_v5"
$imageDefinition = Get-AzGalleryImageDefinition `
   -GalleryName $galleryName `
   -ResourceGroupName $rgName `
   -Name $galleryImageDefinitionName
$cred = Get-Credential `
   -Message "Enter a username and password for the virtual machine"
# Network pieces
$subnetConfig = New-AzVirtualNetworkSubnetConfig `
   -Name mySubnet `
   -AddressPrefix 192.168.1.0/24
$vnet = New-AzVirtualNetwork `
   -ResourceGroupName $rgName `
   -Location $location `
   -Name MYvNET `
   -AddressPrefix 192.168.0.0/16 `
   -Subnet $subnetConfig
$pip = New-AzPublicIpAddress `
   -ResourceGroupName $rgName `
   -Location $location `
  -Name "mypublicdns$(Get-Random)" `
  -AllocationMethod Static `
  -IdleTimeoutInMinutes 4
$nsgRuleRDP = New-AzNetworkSecurityRuleConfig `
   -Name myNetworkSecurityGroupRuleRDP  `
   -Protocol Tcp `
  -Direction Inbound `
   -Priority 1000 `
   -SourceAddressPrefix * `
   -SourcePortRange * `
   -DestinationAddressPrefix * `
   -DestinationPortRange 3389 `
   -Access Deny
$nsg = New-AzNetworkSecurityGroup `
   -ResourceGroupName $rgName `
   -Location $location `
  -Name myNetworkSecurityGroup `
  -SecurityRules $nsgRuleRDP
$nic = New-AzNetworkInterface `
   -Name myNic `
   -ResourceGroupName $rgName `
   -Location $location `
  -SubnetId $vnet.Subnets[0].Id `
  -PublicIpAddressId $pip.Id `
  -NetworkSecurityGroupId $nsg.Id
$vmâ¯=â¯New-AzVMConfigâ¯-vmNameâ¯$vmNameâ¯-vmSize $vmSize | `
      Set-AzVMOperatingSystem -Windows -ComputerName $vmName -Credential $cred | `
      Set-AzVMSourceImage -Id $imageDefinition.Id | `
      Add-AzVMNetworkInterface -Id $nic.Id
$vmâ¯=â¯Set-AzVMSecurityProfile -SecurityType "TrustedLaunch" -VM $vm
$vmâ¯=â¯Set-AzVmUefiâ¯-VMâ¯$vmâ¯`
   -EnableVtpmâ¯$trueâ¯`
   -EnableSecureBootâ¯$true 
New-AzVM `
   -ResourceGroupName $rgName `
   -Location $location `
   -VM $vm
$rgName = "MyResourceGroup"
$galleryName = "MyGallery"
$galleryImageDefinitionName = "MyImageDef"
$location = "eastus"
$vmName = "myVMfromImage"
$vmSize = "Standard_D2s_v5"
$imageDefinition = Get-AzGalleryImageDefinition `
   -GalleryName $galleryName `
   -ResourceGroupName $rgName `
   -Name $galleryImageDefinitionName
$cred = Get-Credential `
   -Message "Enter a username and password for the virtual machine"
# Network pieces
$subnetConfig = New-AzVirtualNetworkSubnetConfig `
   -Name mySubnet `
   -AddressPrefix 192.168.1.0/24
$vnet = New-AzVirtualNetwork `
   -ResourceGroupName $rgName `
   -Location $location `
   -Name MYvNET `
   -AddressPrefix 192.168.0.0/16 `
   -Subnet $subnetConfig
$pip = New-AzPublicIpAddress `
   -ResourceGroupName $rgName `
   -Location $location `
  -Name "mypublicdns$(Get-Random)" `
  -AllocationMethod Static `
  -IdleTimeoutInMinutes 4
$nsgRuleRDP = New-AzNetworkSecurityRuleConfig `
   -Name myNetworkSecurityGroupRuleRDP  `
   -Protocol Tcp `
  -Direction Inbound `
   -Priority 1000 `
   -SourceAddressPrefix * `
   -SourcePortRange * `
   -DestinationAddressPrefix * `
   -DestinationPortRange 3389 `
   -Access Deny
$nsg = New-AzNetworkSecurityGroup `
   -ResourceGroupName $rgName `
   -Location $location `
  -Name myNetworkSecurityGroup `
  -SecurityRules $nsgRuleRDP
$nic = New-AzNetworkInterface `
   -Name myNic `
   -ResourceGroupName $rgName `
   -Location $location `
  -SubnetId $vnet.Subnets[0].Id `
  -PublicIpAddressId $pip.Id `
  -NetworkSecurityGroupId $nsg.Id
$vmâ¯=â¯New-AzVMConfigâ¯-vmNameâ¯$vmNameâ¯-vmSize $vmSize | `
      Set-AzVMOperatingSystem -Windows -ComputerName $vmName -Credential $cred | `
      Set-AzVMSourceImage -Id $imageDefinition.Id | `
      Add-AzVMNetworkInterface -Id $nic.Id
$vmâ¯=â¯Set-AzVMSecurityProfile -SecurityType "TrustedLaunch" -VM $vm
$vmâ¯=â¯Set-AzVmUefiâ¯-VMâ¯$vmâ¯`
   -EnableVtpmâ¯$trueâ¯`
   -EnableSecureBootâ¯$true 
New-AzVM `
   -ResourceGroupName $rgName `
   -Location $location `
   -VM $vm
Trusted Launch VM images
The security type on the image definition should be set toTrustedLaunchfor the following image sources:
TrustedLaunch
Trusted Launch VM capture
Managed OS disk
Managed OS disk snapshot
You can use the resulting image version to create Azure Trusted Launch VMs only.
Portal
CLI
PowerShell
Sign in to the Azureportal.
To create an Azure Compute Gallery Image from a VM, open an existing Trusted Launch VM and selectCapture.
On theCreate an Imagepage, allow the image to be shared to the gallery as a VM image version. Creation of managed images isn't supported for Trusted Launch VMs.
Create a new target Azure Compute Gallery or select an existing gallery.
Select theOperating system stateas eitherGeneralizedorSpecialized. If you want to create a generalized image, ensure that yougeneralize the VM to remove machine-specific informationbefore you select this option. If Bitlocker-based encryption is enabled on your Trusted Launch Windows VM, you might not be able to generalize the same.
Create a new image definition by providing a name, publisher, offer, and SKU details.Security typefor the image definition should already be set toTrusted launch.
Provide a version number for the image version.
Modify replication options, if necessary.
At the bottom of theCreate an Imagepage, selectReview + Create. After validation shows as passed, selectCreate.
After the image version is created, go to the image version directly. Alternatively, you can go to the required image version through the image definition.
On theVM image versionpage, select+ Create VMto go to theCreate a virtual machinepage.
On theCreate a virtual machinepage, underResource group, selectCreate new. Enter a name for your resource group or select an existing resource group from the dropdown list.
UnderInstance details, enter a name for the VM name and choose a region that supportsTrusted Launch.
The image and the security type are already populated based on the selected image version. TheSecure BootandvTPMcheckboxes are enabled by default.
Fill in theAdministrator accountinformation and thenInbound port rules.
At the bottom of the page, selectReview + Create.
On the validation page, review the details of the VM.
After the validation succeeds, selectCreateto finish creating the VM.
If you want to use either a managed disk or a managed disk snapshot as a source of the image version (instead of a Trusted Launch VM), follow these steps.
Sign in to theAzure portal.
Search forVM Image Versionsand selectCreate.
Provide the subscription, resource group, region, and image version number.
Select the source asDisks and/or Snapshots.
Select the OS disk as a managed disk or a managed disk snapshot from the dropdown list.
Select aTarget Azure Compute Galleryto create and share the image. If no gallery exists, create a new gallery.
Select theOperating system stateas eitherGeneralizedorSpecialized. If you want to create a generalized image, ensure that you generalize the disk or snapshot to remove machine-specific information.
For theTarget VM Image DefinitionselectCreate new. In the window that opens, select an image definition name and ensure thatSecurity typeis set toTrusted launch. Provide the publisher, offer, and SKU information and selectOK.
TheReplicationtab can be used to set the replica count and target regions for image replication, if required.
TheEncryptiontab can also be used to provide SSE encryption-related information, if required.
SelectCreateon theReview + createtab to create the image.
After the image version is successfully created, select+ Create VMto go to theCreate a virtual machinepage.
Follow steps 12 to 18 as mentioned earlier to create a Trusted Launch VM by using this image version.
Make sure that you're running the latest version of the Azure CLI.
Sign in to Azure by usingaz login.az login
Sign in to Azure by usingaz login.
az login
az login
az login
Create an image definition with theTrustedLaunchsecurity type.az sig image-definition create --resource-group MyResourceGroup --location eastus \ 
--gallery-name MyGallery --gallery-image-definition MyImageDef \ 
--publisher TrustedLaunchPublisher --offer TrustedLaunchOffer --sku TrustedLaunchSku \ 
--os-type Linux --os-state Generalized \ 
--hyper-v-generation V2 \ 
--features SecurityType=TrustedLaunch
Create an image definition with theTrustedLaunchsecurity type.
TrustedLaunch
az sig image-definition create --resource-group MyResourceGroup --location eastus \ 
--gallery-name MyGallery --gallery-image-definition MyImageDef \ 
--publisher TrustedLaunchPublisher --offer TrustedLaunchOffer --sku TrustedLaunchSku \ 
--os-type Linux --os-state Generalized \ 
--hyper-v-generation V2 \ 
--features SecurityType=TrustedLaunch
az sig image-definition create --resource-group MyResourceGroup --location eastus \ 
--gallery-name MyGallery --gallery-image-definition MyImageDef \ 
--publisher TrustedLaunchPublisher --offer TrustedLaunchOffer --sku TrustedLaunchSku \ 
--os-type Linux --os-state Generalized \ 
--hyper-v-generation V2 \ 
--features SecurityType=TrustedLaunch
To create an image version, you can capture an existing Linux-based Trusted Launch VM.Generalize the Trusted Launch VMbefore you create the image version.az sig image-version create --resource-group MyResourceGroup \
--gallery-name MyGallery --gallery-image-definition MyImageDef \
--gallery-image-version 1.0.0 \
--managed-image /subscriptions/00000000-0000-0000-0000-00000000xxxx/resourceGroups/MyResourceGroup/providers/Microsoft.Compute/virtualMachines/myVMIf a managed disk or a managed disk snapshot needs to be used as the image source for the image version, replace--managed-imagein the preceding command with--os-snapshotand provide the disk or the snapshot resource name.
To create an image version, you can capture an existing Linux-based Trusted Launch VM.Generalize the Trusted Launch VMbefore you create the image version.
az sig image-version create --resource-group MyResourceGroup \
--gallery-name MyGallery --gallery-image-definition MyImageDef \
--gallery-image-version 1.0.0 \
--managed-image /subscriptions/00000000-0000-0000-0000-00000000xxxx/resourceGroups/MyResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM
az sig image-version create --resource-group MyResourceGroup \
--gallery-name MyGallery --gallery-image-definition MyImageDef \
--gallery-image-version 1.0.0 \
--managed-image /subscriptions/00000000-0000-0000-0000-00000000xxxx/resourceGroups/MyResourceGroup/providers/Microsoft.Compute/virtualMachines/myVM
If a managed disk or a managed disk snapshot needs to be used as the image source for the image version, replace--managed-imagein the preceding command with--os-snapshotand provide the disk or the snapshot resource name.
--managed-image
--os-snapshot
Create a Trusted Launch VM from the preceding image version.adminUsername=linuxvm
az vm create --resource-group MyResourceGroup \
    --name myTrustedLaunchVM \
    --image "/subscriptions/00000000-0000-0000-0000-00000000xxxx/resourceGroups/MyResourceGroup/providers/Microsoft.Compute/galleries/MyGallery/images/MyImageDef" \
    --size Standard_D2s_v5 \
    --security-type TrustedLaunch \
    --enable-secure-boot true \ 
    --enable-vtpm true \
    --admin-username $adminUsername \
    --generate-ssh-keys
Create a Trusted Launch VM from the preceding image version.
adminUsername=linuxvm
az vm create --resource-group MyResourceGroup \
    --name myTrustedLaunchVM \
    --image "/subscriptions/00000000-0000-0000-0000-00000000xxxx/resourceGroups/MyResourceGroup/providers/Microsoft.Compute/galleries/MyGallery/images/MyImageDef" \
    --size Standard_D2s_v5 \
    --security-type TrustedLaunch \
    --enable-secure-boot true \ 
    --enable-vtpm true \
    --admin-username $adminUsername \
    --generate-ssh-keys
adminUsername=linuxvm
az vm create --resource-group MyResourceGroup \
    --name myTrustedLaunchVM \
    --image "/subscriptions/00000000-0000-0000-0000-00000000xxxx/resourceGroups/MyResourceGroup/providers/Microsoft.Compute/galleries/MyGallery/images/MyImageDef" \
    --size Standard_D2s_v5 \
    --security-type TrustedLaunch \
    --enable-secure-boot true \ 
    --enable-vtpm true \
    --admin-username $adminUsername \
    --generate-ssh-keys
Create an image definition with theTrustedLaunchsecurity type.$rgName = "MyResourceGroup"
$galleryName = "MyGallery"
$galleryImageDefinitionName = "MyImageDef"
$location = "eastus"
$publisherName = "TrustedlaunchPublisher"
$offerName = "TrustedlaunchOffer"
$skuName = "TrustedlaunchSku"
$description = "My gallery"
$SecurityType = @{Name='SecurityType';Value='TrustedLaunch'}
$features = @($SecurityType)
New-AzGalleryImageDefinition -ResourceGroupName $rgName -GalleryName $galleryName -Name $galleryImageDefinitionName -Location $location -Publisher $publisherName -Offer $offerName -Sku $skuName -HyperVGeneration "V2" -OsState "Generalized" -OsType "Windows" -Description $description -Feature $features
Create an image definition with theTrustedLaunchsecurity type.
TrustedLaunch
$rgName = "MyResourceGroup"
$galleryName = "MyGallery"
$galleryImageDefinitionName = "MyImageDef"
$location = "eastus"
$publisherName = "TrustedlaunchPublisher"
$offerName = "TrustedlaunchOffer"
$skuName = "TrustedlaunchSku"
$description = "My gallery"
$SecurityType = @{Name='SecurityType';Value='TrustedLaunch'}
$features = @($SecurityType)
New-AzGalleryImageDefinition -ResourceGroupName $rgName -GalleryName $galleryName -Name $galleryImageDefinitionName -Location $location -Publisher $publisherName -Offer $offerName -Sku $skuName -HyperVGeneration "V2" -OsState "Generalized" -OsType "Windows" -Description $description -Feature $features
$rgName = "MyResourceGroup"
$galleryName = "MyGallery"
$galleryImageDefinitionName = "MyImageDef"
$location = "eastus"
$publisherName = "TrustedlaunchPublisher"
$offerName = "TrustedlaunchOffer"
$skuName = "TrustedlaunchSku"
$description = "My gallery"
$SecurityType = @{Name='SecurityType';Value='TrustedLaunch'}
$features = @($SecurityType)
New-AzGalleryImageDefinition -ResourceGroupName $rgName -GalleryName $galleryName -Name $galleryImageDefinitionName -Location $location -Publisher $publisherName -Offer $offerName -Sku $skuName -HyperVGeneration "V2" -OsState "Generalized" -OsType "Windows" -Description $description -Feature $features
To create an image version, you can capture an existing Windows-based Trusted Launch VM.Generalize the Trusted Launch VMbefore you create the image version.$rgName = "MyResourceGroup"
$galleryName = "MyGallery"
$galleryImageDefinitionName = "MyImageDef"
$location = "eastus"
$galleryImageVersionName = "1.0.0"
$sourceImageId = "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myVMRG/providers/Microsoft.Compute/virtualMachines/myVM"
New-AzGalleryImageVersion -ResourceGroupName $rgName -GalleryName $galleryName -GalleryImageDefinitionName $galleryImageDefinitionName -Name $galleryImageVersionName -Location $location -SourceImageId $sourceImageId
To create an image version, you can capture an existing Windows-based Trusted Launch VM.Generalize the Trusted Launch VMbefore you create the image version.
$rgName = "MyResourceGroup"
$galleryName = "MyGallery"
$galleryImageDefinitionName = "MyImageDef"
$location = "eastus"
$galleryImageVersionName = "1.0.0"
$sourceImageId = "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myVMRG/providers/Microsoft.Compute/virtualMachines/myVM"
New-AzGalleryImageVersion -ResourceGroupName $rgName -GalleryName $galleryName -GalleryImageDefinitionName $galleryImageDefinitionName -Name $galleryImageVersionName -Location $location -SourceImageId $sourceImageId
$rgName = "MyResourceGroup"
$galleryName = "MyGallery"
$galleryImageDefinitionName = "MyImageDef"
$location = "eastus"
$galleryImageVersionName = "1.0.0"
$sourceImageId = "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myVMRG/providers/Microsoft.Compute/virtualMachines/myVM"
New-AzGalleryImageVersion -ResourceGroupName $rgName -GalleryName $galleryName -GalleryImageDefinitionName $galleryImageDefinitionName -Name $galleryImageVersionName -Location $location -SourceImageId $sourceImageId
Create a Trusted Launch VM from the preceding image version.$rgName = "MyResourceGroup"
$galleryName = "MyGallery"
$galleryImageDefinitionName = "MyImageDef"
$location = "eastus"
$vmName = "myVMfromImage"
$vmSize = "Standard_D2s_v5"
$imageDefinition = Get-AzGalleryImageDefinition `
   -GalleryName $galleryName `
   -ResourceGroupName $rgName `
   -Name $galleryImageDefinitionName
$cred = Get-Credential `
   -Message "Enter a username and password for the virtual machine"
# Network pieces
$subnetConfig = New-AzVirtualNetworkSubnetConfig `
   -Name mySubnet `
   -AddressPrefix 192.168.1.0/24
$vnet = New-AzVirtualNetwork `
   -ResourceGroupName $rgName `
   -Location $location `
   -Name MYvNET `
   -AddressPrefix 192.168.0.0/16 `
   -Subnet $subnetConfig
$pip = New-AzPublicIpAddress `
   -ResourceGroupName $rgName `
   -Location $location `
  -Name "mypublicdns$(Get-Random)" `
  -AllocationMethod Static `
  -IdleTimeoutInMinutes 4
$nsgRuleRDP = New-AzNetworkSecurityRuleConfig `
   -Name myNetworkSecurityGroupRuleRDP  `
   -Protocol Tcp `
  -Direction Inbound `
   -Priority 1000 `
   -SourceAddressPrefix * `
   -SourcePortRange * `
   -DestinationAddressPrefix * `
   -DestinationPortRange 3389 `
   -Access Deny
$nsg = New-AzNetworkSecurityGroup `
   -ResourceGroupName $rgName `
   -Location $location `
  -Name myNetworkSecurityGroup `
  -SecurityRules $nsgRuleRDP
$nic = New-AzNetworkInterface `
   -Name myNic `
   -ResourceGroupName $rgName `
   -Location $location `
  -SubnetId $vnet.Subnets[0].Id `
  -PublicIpAddressId $pip.Id `
  -NetworkSecurityGroupId $nsg.Id
$vm = New-AzVMConfig -vmName $vmName -vmSize $vmSize | `
      Set-AzVMOperatingSystem -Windows -ComputerName $vmName -Credential $cred | `
      Set-AzVMSourceImage -Id $imageDefinition.Id | `
      Add-AzVMNetworkInterface -Id $nic.Id
$vm = Set-AzVMSecurityProfile -SecurityType "TrustedLaunch" -VM $vm
$vm = Set-AzVmUefi -VM $vm `
   -EnableVtpm $true `
   -EnableSecureBoot $true 
New-AzVM `
   -ResourceGroupName $rgName `
   -Location $location `
   -VM $vm
Create a Trusted Launch VM from the preceding image version.
$rgName = "MyResourceGroup"
$galleryName = "MyGallery"
$galleryImageDefinitionName = "MyImageDef"
$location = "eastus"
$vmName = "myVMfromImage"
$vmSize = "Standard_D2s_v5"
$imageDefinition = Get-AzGalleryImageDefinition `
   -GalleryName $galleryName `
   -ResourceGroupName $rgName `
   -Name $galleryImageDefinitionName
$cred = Get-Credential `
   -Message "Enter a username and password for the virtual machine"
# Network pieces
$subnetConfig = New-AzVirtualNetworkSubnetConfig `
   -Name mySubnet `
   -AddressPrefix 192.168.1.0/24
$vnet = New-AzVirtualNetwork `
   -ResourceGroupName $rgName `
   -Location $location `
   -Name MYvNET `
   -AddressPrefix 192.168.0.0/16 `
   -Subnet $subnetConfig
$pip = New-AzPublicIpAddress `
   -ResourceGroupName $rgName `
   -Location $location `
  -Name "mypublicdns$(Get-Random)" `
  -AllocationMethod Static `
  -IdleTimeoutInMinutes 4
$nsgRuleRDP = New-AzNetworkSecurityRuleConfig `
   -Name myNetworkSecurityGroupRuleRDP  `
   -Protocol Tcp `
  -Direction Inbound `
   -Priority 1000 `
   -SourceAddressPrefix * `
   -SourcePortRange * `
   -DestinationAddressPrefix * `
   -DestinationPortRange 3389 `
   -Access Deny
$nsg = New-AzNetworkSecurityGroup `
   -ResourceGroupName $rgName `
   -Location $location `
  -Name myNetworkSecurityGroup `
  -SecurityRules $nsgRuleRDP
$nic = New-AzNetworkInterface `
   -Name myNic `
   -ResourceGroupName $rgName `
   -Location $location `
  -SubnetId $vnet.Subnets[0].Id `
  -PublicIpAddressId $pip.Id `
  -NetworkSecurityGroupId $nsg.Id
$vm = New-AzVMConfig -vmName $vmName -vmSize $vmSize | `
      Set-AzVMOperatingSystem -Windows -ComputerName $vmName -Credential $cred | `
      Set-AzVMSourceImage -Id $imageDefinition.Id | `
      Add-AzVMNetworkInterface -Id $nic.Id
$vm = Set-AzVMSecurityProfile -SecurityType "TrustedLaunch" -VM $vm
$vm = Set-AzVmUefi -VM $vm `
   -EnableVtpm $true `
   -EnableSecureBoot $true 
New-AzVM `
   -ResourceGroupName $rgName `
   -Location $location `
   -VM $vm
$rgName = "MyResourceGroup"
$galleryName = "MyGallery"
$galleryImageDefinitionName = "MyImageDef"
$location = "eastus"
$vmName = "myVMfromImage"
$vmSize = "Standard_D2s_v5"
$imageDefinition = Get-AzGalleryImageDefinition `
   -GalleryName $galleryName `
   -ResourceGroupName $rgName `
   -Name $galleryImageDefinitionName
$cred = Get-Credential `
   -Message "Enter a username and password for the virtual machine"
# Network pieces
$subnetConfig = New-AzVirtualNetworkSubnetConfig `
   -Name mySubnet `
   -AddressPrefix 192.168.1.0/24
$vnet = New-AzVirtualNetwork `
   -ResourceGroupName $rgName `
   -Location $location `
   -Name MYvNET `
   -AddressPrefix 192.168.0.0/16 `
   -Subnet $subnetConfig
$pip = New-AzPublicIpAddress `
   -ResourceGroupName $rgName `
   -Location $location `
  -Name "mypublicdns$(Get-Random)" `
  -AllocationMethod Static `
  -IdleTimeoutInMinutes 4
$nsgRuleRDP = New-AzNetworkSecurityRuleConfig `
   -Name myNetworkSecurityGroupRuleRDP  `
   -Protocol Tcp `
  -Direction Inbound `
   -Priority 1000 `
   -SourceAddressPrefix * `
   -SourcePortRange * `
   -DestinationAddressPrefix * `
   -DestinationPortRange 3389 `
   -Access Deny
$nsg = New-AzNetworkSecurityGroup `
   -ResourceGroupName $rgName `
   -Location $location `
  -Name myNetworkSecurityGroup `
  -SecurityRules $nsgRuleRDP
$nic = New-AzNetworkInterface `
   -Name myNic `
   -ResourceGroupName $rgName `
   -Location $location `
  -SubnetId $vnet.Subnets[0].Id `
  -PublicIpAddressId $pip.Id `
  -NetworkSecurityGroupId $nsg.Id
$vm = New-AzVMConfig -vmName $vmName -vmSize $vmSize | `
      Set-AzVMOperatingSystem -Windows -ComputerName $vmName -Credential $cred | `
      Set-AzVMSourceImage -Id $imageDefinition.Id | `
      Add-AzVMNetworkInterface -Id $nic.Id
$vm = Set-AzVMSecurityProfile -SecurityType "TrustedLaunch" -VM $vm
$vm = Set-AzVmUefi -VM $vm `
   -EnableVtpm $true `
   -EnableSecureBoot $true 
New-AzVM `
   -ResourceGroupName $rgName `
   -Location $location `
   -VM $vm
Trusted Launch built-in policies
To help users adopt Trusted Launch, Azure policies are available to help resource owners adopt Trusted Launch. The main objective is to help convert Generation 1 and 2 VMs that are Trusted Launch capable.
TheVirtual machine should have Trusted launch enabledsingle policy checks if the VM is currently enabled with Trusted Launch security configurations. TheDisks and OS supported for Trusted launchpolicy checks if previously created VMs have thecapable Generation 2 OS and VM sizeto deploy a Trusted Launch VM.
These two policies come together to make the Trusted Launch policy initiative. This initiative enables you to group several related policy definitions to simplify assignments and management resources to include Trusted Launch configuration.
To learn more and start deploying, seeTrusted Launch built-in policies.
Verify or update your settings
For VMs created with Trusted Launch enabled, you can view the Trusted Launch configuration by going to theOverviewpage for the VM in the Azure portal. ThePropertiestab shows the status of Trusted Launch features.

To change the Trusted Launch configuration, on the left menu, underSettings, selectConfiguration. In theSecurity typesection, you can enable or disableSecure Boot,vTPM, andIntegrity monitoring. SelectSaveat the top of the page when you're finished.

If the VM is running, you receive a message that the VM will restart. SelectYesand then wait for the VM to restart for changes to take effect.
Related content
Learn more aboutTrusted Launchandboot integrity monitoringVMs.
Feedback
Was this page helpful?
Additional resources