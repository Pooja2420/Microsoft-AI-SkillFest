Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Deploy resources with ARM templates and Azure portal
Article
2024-03-20
5 contributors
In this article
Learn how to use theAzure portalwithAzure Resource Manager templates (ARM templates)to deploy your Azure resources. To learn about managing your resources, seeManage Azure resources by using the Azure portal.
Deploying Azure resources by using the Azure portal usually involves two steps:
Create a resource group.
Deploy resources to the resource group.
Also, you can create a customized ARM template to deploy Azure resources.
This article shows both methods.
Create a resource group
To create a new resource group, selectResource groupsfrom theAzure portal.
To create a new resource group, selectResource groupsfrom theAzure portal.

Under Resource groups, selectAdd.
Under Resource groups, selectAdd.

Select or enter the following property values:Subscription: Select an Azure subscription.Resource group: Give the resource group a name.Region: Specify an Azure location. This location is where the resource group stores metadata about the resources. For compliance reasons, you may want to specify where that metadata is stored. In general, we recommend that you specify a location where most of your resources will be. Using the same location can simplify your template.
Select or enter the following property values:
Subscription: Select an Azure subscription.
Resource group: Give the resource group a name.
Region: Specify an Azure location. This location is where the resource group stores metadata about the resources. For compliance reasons, you may want to specify where that metadata is stored. In general, we recommend that you specify a location where most of your resources will be. Using the same location can simplify your template.

SelectReview + create.
SelectReview + create.
Review the values, and then selectCreate.
Review the values, and then selectCreate.
SelectRefreshbefore you can see the new resource group in the list.
SelectRefreshbefore you can see the new resource group in the list.
Deploy resources to a resource group
After you create a resource group, you can deploy resources to the group from the Marketplace. The Marketplace provides pre-defined solutions for common scenarios.
To start a deployment, selectCreate a resourcefrom theAzure portal.
To start a deployment, selectCreate a resourcefrom theAzure portal.

Find the type of resource you would like to deploy. The resources are organized in categories. If you don't see the particular solution you would like to deploy, you can search the Marketplace for it. The following screenshot shows that Ubuntu Server is selected.
Find the type of resource you would like to deploy. The resources are organized in categories. If you don't see the particular solution you would like to deploy, you can search the Marketplace for it. The following screenshot shows that Ubuntu Server is selected.

Depending on the type of selected resource, you have a collection of relevant properties to set before deployment. For all types, you must select a destination resource group. The following image shows how to create a Linux virtual machine and deploy it to the resource group you created.You can decide to create a resource group when deploying your resources. SelectCreate newand give the resource group a name.
Depending on the type of selected resource, you have a collection of relevant properties to set before deployment. For all types, you must select a destination resource group. The following image shows how to create a Linux virtual machine and deploy it to the resource group you created.

You can decide to create a resource group when deploying your resources. SelectCreate newand give the resource group a name.
Your deployment begins. The deployment could take several minutes. Some resources take longer time than other resources. When the deployment has finished, you see a notification. SelectGo to resourceto open
Your deployment begins. The deployment could take several minutes. Some resources take longer time than other resources. When the deployment has finished, you see a notification. SelectGo to resourceto open

After deploying your resources, you can add more resources to the resource group by selectingAdd.
After deploying your resources, you can add more resources to the resource group by selectingAdd.

Although you didn't see it, the portal used an ARM template to deploy the resources you selected. You can find the template from the deployment history. For more information, seeExport template after deployment.
Deploy resources from custom template
If you want to execute a deployment but not use any of the templates in the Marketplace, you can create a customized template that defines the infrastructure for your solution. To learn about creating templates, seeUnderstand the structure and syntax of ARM templates.
Note
The portal interface doesn't support referencing asecret from a Key Vault. Instead, usePowerShellorAzure CLIto deploy your template locally or from an external URI.
To deploy a customized template through the portal, selectCreate a resource, search fortemplate. and then selectTemplate deployment.
To deploy a customized template through the portal, selectCreate a resource, search fortemplate. and then selectTemplate deployment.

SelectCreate.
SelectCreate.
You see several options for creating a template:Build your own template in editor: Create your own template in the portal template editor.Common templates: Select from common solutions.Load a GitHub quickstart template: Select fromquickstart templates.This tutorial provides the instruction for loading a quickstart template.
You see several options for creating a template:
Build your own template in editor: Create your own template in the portal template editor.
Common templates: Select from common solutions.
Load a GitHub quickstart template: Select fromquickstart templates.

This tutorial provides the instruction for loading a quickstart template.
UnderLoad a GitHub quickstart template, type or selectstorage-account-create.You have two options:Select template: deploy the template.Edit template: edit the quickstart template before you deploy it.
UnderLoad a GitHub quickstart template, type or selectstorage-account-create.
You have two options:
Select template: deploy the template.
Edit template: edit the quickstart template before you deploy it.
SelectEdit templateto explore the portal template editor. The template is loaded in the editor. Notice there are two parameters:storageAccountTypeandlocation.
SelectEdit templateto explore the portal template editor. The template is loaded in the editor. Notice there are two parameters:storageAccountTypeandlocation.
storageAccountType
location

Make a minor change to the template. For example, update thestorageAccountNamevariable to:"storageAccountName": "[format('azstore{0}', uniquestring(resourceGroup().id))]"
Make a minor change to the template. For example, update thestorageAccountNamevariable to:
storageAccountName
"storageAccountName": "[format('azstore{0}', uniquestring(resourceGroup().id))]"
"storageAccountName": "[format('azstore{0}', uniquestring(resourceGroup().id))]"
SelectSave. Now you see the portal template deployment interface. Notice the two parameters that you defined in the template.
SelectSave. Now you see the portal template deployment interface. Notice the two parameters that you defined in the template.
Enter or select the property values:Subscription: Select an Azure subscription.Resource group: SelectCreate newand give a name.Location: Select an Azure location.Storage Account Type: Use the default value. The camel-cased parameter name,storageAccountType, defined in the template is turned into a space-separated string when displayed on the portal.Location: Use the default value.I agree to the terms and conditions stated above: (select)
Enter or select the property values:
Subscription: Select an Azure subscription.
Resource group: SelectCreate newand give a name.
Location: Select an Azure location.
Storage Account Type: Use the default value. The camel-cased parameter name,storageAccountType, defined in the template is turned into a space-separated string when displayed on the portal.
Location: Use the default value.
I agree to the terms and conditions stated above: (select)
SelectPurchase.
SelectPurchase.
Next steps
To troubleshoot deployment errors, seeView deployment operations.
To export a template from a deployment or resource group, seeExport ARM templates.
Feedback
Was this page helpful?
Additional resources