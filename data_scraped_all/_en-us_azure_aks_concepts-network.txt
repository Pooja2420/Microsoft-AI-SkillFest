Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Networking concepts for applications in Azure Kubernetes Service (AKS)
Article
2024-12-17
30 contributors
In this article
In a container-based, microservices approach to application development, application components work together to process their tasks. Kubernetes provides various resources enabling this cooperation:
You can connect to and expose applications internally or externally.
You can build highly available applications by load balancing your applications.
You can restrict the flow of network traffic into or between pods and nodes to improve security.
You can configure Ingress traffic for SSL/TLS termination or routing of multiple components for your more complex applications.
This article introduces the core concepts that provide networking to your applications in AKS:
Azure virtual networks
Network policies
Kubernetes networking basics
Kubernetes employs a virtual networking layer to manage access within and between your applications or their components:
Kubernetes nodes and virtual network: Kubernetes nodes are connected to a virtual network. This setup enables pods (basic units of deployment in Kubernetes) to have both inbound and outbound connectivity.
Kubernetes nodes and virtual network: Kubernetes nodes are connected to a virtual network. This setup enables pods (basic units of deployment in Kubernetes) to have both inbound and outbound connectivity.
Kube-proxy component: kube-proxy runs on each node and is responsible for providing the necessary network features.
Kube-proxy component: kube-proxy runs on each node and is responsible for providing the necessary network features.
Regarding specific Kubernetes functionalities:
Load balancer: You can use a load balancer to distribute network traffic evenly across various resources.
Ingress controllers: These facilitate Layer 7 routing, which is essential for directing application traffic.
Egress traffic control: Kubernetes allows you to manage and control outbound traffic from cluster nodes.
Network policies: These policies enable security measures and filtering for network traffic in pods.
In the context of the Azure platform:
Azure streamlines virtual networking for AKS (Azure Kubernetes Service) clusters.
Creating a Kubernetes load balancer on Azure simultaneously sets up the corresponding Azure load balancer resource.
As you open network ports to pods, Azure automatically configures the necessary network security group rules.
Azure can also manage external DNS configurations for HTTP application routing as new Ingress routes are established.
Azure virtual networks
In AKS, you can deploy a cluster that uses one of the following network models:
Overlay network model: Overlay networking is the most common networking model used in Kubernetes. Pods are given an IP address from a private, logically separate CIDR from the Azure virtual network subnet where AKS nodes are deployed. This model enables simpler, improved scalability when compared to the flat network model.
Flat network model: A flat network model in AKS assigns IP addresses to pods from a subnet from the same Azure virtual network as the AKS nodes. Any traffic leaving your clusters isn't SNAT'd, and the pod IP address is directly exposed to the destination. This model can be useful for scenarios like exposing pod IP addresses to external services.
For more information on networking models in AKS, seeCNI Networking in AKS.
Control outbound (egress) traffic
AKS clusters are deployed on a virtual network and have outbound dependencies on services outside of that virtual network, which are almost entirely defined with fully qualified domain names (FQDNs). AKS provides several outbound configuration options which allow you to customize the way in which these external resources are accessed.
For more information on the supported AKS cluster outbound configuration types, seeCustomize cluster egress with outbound types in Azure Kubernetes Service (AKS).
By default, AKS clusters have unrestricted outbound (egress) Internet access, which allows the nodes and services you run to access external resources as needed. If desired, you can restrict outbound traffic.
For more information on how to restrict outbound traffic from you cluster seeControl egress traffic for cluster nodes in AKS.
Network security groups
A network security group filters traffic for VMs like the AKS nodes. As you create Services, such as aLoadBalancer, the Azure platform automatically configures any necessary network security group rules.
You don't need to manually configure network security group rules to filter traffic for pods in an AKS cluster. You can define any required ports and forwarding as part of your Kubernetes Service manifests and let the Azure platform create or update the appropriate rules.
You can also use network policies to automatically apply traffic filter rules to pods.
For more information, seeHow network security groups filter network traffic.
Network policies
By default, all pods in an AKS cluster can send and receive traffic without limitations. For improved security, define rules that control the flow of traffic, like:
Back-end applications are only exposed to required frontend services.
Database components are only accessible to the application tiers that connect to them.
Network policy is a Kubernetes feature available in AKS that lets you control the traffic flow between pods. You can allow or deny traffic to the pod based on settings such as assigned labels, namespace, or traffic port. While network security groups are better for AKS nodes, network policies are a more suited, cloud-native way to control the flow of traffic for pods. As pods are dynamically created in an AKS cluster, required network policies can be automatically applied.
For more information, seeSecure traffic between pods using network policies in Azure Kubernetes Service (AKS).
Next steps
To get started with AKS networking, create and configure an AKS cluster with your own IP address ranges usingAzure CNI OverlayorAzure CNI.
For associated best practices, seeBest practices for network connectivity and security in AKS.
For more information on core Kubernetes and AKS concepts, see the following articles:
Kubernetes / AKS clusters and workloads
Kubernetes / AKS access and identity
Kubernetes / AKS security
Kubernetes / AKS storage
Kubernetes / AKS scale
Azure Kubernetes Service

Additional resources