Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
API gateway in Azure API Management
Article
2024-10-03
8 contributors
In this article
APPLIES TO: All API Management tiers
This article provides information about the roles and features of the API Managementgatewaycomponent and compares the gateways you can deploy.
Related information:
For an overview of API Management scenarios, components, and concepts, seeWhat is Azure API Management?
For an overview of API Management scenarios, components, and concepts, seeWhat is Azure API Management?
For more information about the API Management service tiers and features, see:API Management tiersFeature-based comparison of the Azure API Management tiers.
For more information about the API Management service tiers and features, see:
API Management tiers
Feature-based comparison of the Azure API Management tiers.
Role of the gateway
The API Managementgateway(also calleddata planeorruntime) is the service component that's responsible for proxying API requests, applying policies, and collecting telemetry.
Specifically, the gateway:
Acts as a facade to backend services by accepting API calls and routing them to appropriate backends
VerifiesAPI keysand other credentials such asJWT tokens and certificatespresented with requests
Enforcesusage quotas and rate limits
Optionally transforms requests and responses as specified inpolicy statements
If configured,caches responsesto improve response latency and minimize the load on backend services
Emits logs, metrics, and traces formonitoring, reporting, and troubleshooting
Note
All requests to the API Management gateway, including those rejected by policy configurations, count toward configured rate limits, quotas, and billing limits if applied in the service tier.
Managed and self-hosted
API Management offers both managed and self-hosted gateways:
Managed- The managed gateway is the default gateway component that is deployed in Azure for every API Management instance in every service tier. A standalone managed gateway can also be associated with aworkspacein an API Management instance. With the managed gateway, all API traffic flows through Azure regardless of where backends implementing the APIs are hosted.NoteBecause of differences in the underlying service architecture, the gateways provided in the different API Management service tiers have some differences in capabilities. For details, see the sectionFeature comparison: Managed versus self-hosted gateways.
Managed- The managed gateway is the default gateway component that is deployed in Azure for every API Management instance in every service tier. A standalone managed gateway can also be associated with aworkspacein an API Management instance. With the managed gateway, all API traffic flows through Azure regardless of where backends implementing the APIs are hosted.
Note
Because of differences in the underlying service architecture, the gateways provided in the different API Management service tiers have some differences in capabilities. For details, see the sectionFeature comparison: Managed versus self-hosted gateways.
Self-hosted- Theself-hosted gatewayis an optional, containerized version of the default managed gateway that is available in select service tiers. It's useful for hybrid and multicloud scenarios where there's a requirement to run the gateways off of Azure in the same environments where API backends are hosted. The self-hosted gateway enables customers with hybrid IT infrastructure to manage APIs hosted on-premises and across clouds from a single API Management service in Azure.The self-hosted gateway ispackagedas a Linux-based Docker container and is commonly deployed to Kubernetes, including toAzure Kubernetes ServiceandAzure Arc-enabled Kubernetes.Each self-hosted gateway is associated with aGatewayresource in a cloud-based API Management instance from which it receives configuration updates and communicates status.
Self-hosted- Theself-hosted gatewayis an optional, containerized version of the default managed gateway that is available in select service tiers. It's useful for hybrid and multicloud scenarios where there's a requirement to run the gateways off of Azure in the same environments where API backends are hosted. The self-hosted gateway enables customers with hybrid IT infrastructure to manage APIs hosted on-premises and across clouds from a single API Management service in Azure.
The self-hosted gateway ispackagedas a Linux-based Docker container and is commonly deployed to Kubernetes, including toAzure Kubernetes ServiceandAzure Arc-enabled Kubernetes.
The self-hosted gateway ispackagedas a Linux-based Docker container and is commonly deployed to Kubernetes, including toAzure Kubernetes ServiceandAzure Arc-enabled Kubernetes.
Each self-hosted gateway is associated with aGatewayresource in a cloud-based API Management instance from which it receives configuration updates and communicates status.
Each self-hosted gateway is associated with aGatewayresource in a cloud-based API Management instance from which it receives configuration updates and communicates status.
Feature comparison: Managed versus self-hosted gateways
The following tables compare features available in the following API Management gateways:
Classic- the managed gateway available in the Developer, Basic, Standard, and Premium service tiers (formerly grouped asdedicatedtiers)
V2- the managed gateway available in the Basic v2, Standard v2, and Premium v2 tiers
Consumption- the managed gateway available in the Consumption tier
Self-hosted- the optional self-hosted gateway available in select service tiers
Workspace- the managed gateway available in aworkspacein select service tiers
Note
Some features of managed and self-hosted gateways are supported only in certainservice tiersor with certaindeployment environmentsfor self-hosted gateways.
For the current supported features of the self-hosted gateway, ensure that you have upgraded to the latest major version of the self-hosted gatewaycontainer image.
See also self-hosted gatewaylimitations.
Infrastructure
1Depends on how the gateway is deployed, but is the responsibility of the customer.2Connectivity to the self-hosted gateway v2configuration endpointrequires DNS resolution of the endpoint hostname.3Two zones are enabled by default; not configurable.4CA root certificates for self-hosted gateway are managed separately per gateway5Client protocol needs to be enabled.
Backend APIs
1Synthetic GraphQL subscriptions (preview) aren't supported.
Policies
Managed and self-hosted gateways support all availablepoliciesin policy definitions with the following exceptions. See the policy reference for details about each policy.
1Configured policies that aren't supported by the self-hosted gateway are skipped during policy execution.2The quota by key policy isn't available in the v2 tiers.3The rate limit by key, quota by key, and Azure OpenAI token limit policies aren't available in the Consumption tier.4Rate limit counts in a self-hosted gateway can be configured to synchronize locally (among gateway instances across cluster nodes), for example, through Helm chart deployment for Kubernetes or using the Azure portaldeployment templates. However, rate limit counts don't synchronize with other gateway resources configured in the API Management instance, including the managed gateway in the cloud.Learn more
Monitoring
For details about monitoring options, seeObservability in Azure API Management.
1The v2 tiers support Azure Monitor-based analytics.2Gateway usesAzure Application Insight's built-in memory bufferand does not provide delivery guarantees.3The self-hosted gateway currently doesn't send resource logs (diagnostic logs) to Azure Monitor. Optionallysend metricsto Azure Monitor, orconfigure and persist logs locallywhere the self-hosted gateway is deployed.
Authentication and authorization
Managed and self-hosted gateways support all availableAPI authentication and authorization optionswith the following exceptions.
Gateway throughput and scaling
Important
Throughput is affected by the number and rate of concurrent client connections, the kind and number of configured policies, payload sizes, backend API performance, and other factors. Self-hosted gateway throughput is also dependent on the compute capacity (CPU and memory) of the host where it runs. Perform gateway load testing using anticipated production conditions to determine expected throughput accurately.
Managed gateway
For estimated maximum gateway throughput in the API Management service tiers, seeAPI Management pricing.
Important
Throughput figures are presented for information only and must not be relied upon for capacity and budget planning. SeeAPI Management pricingfor details.
Classic tiersScale gateway capacity by adding and removing scaleunits, or upgrade the service tier. (Scaling not available in the Developer tier.)In the Basic, Standard, and Premium tiers, optionally configureAzure Monitor autoscale.In the Premium tier, optionally add and distribute gateway capacity across multipleregions.
Classic tiers
Scale gateway capacity by adding and removing scaleunits, or upgrade the service tier. (Scaling not available in the Developer tier.)
In the Basic, Standard, and Premium tiers, optionally configureAzure Monitor autoscale.
In the Premium tier, optionally add and distribute gateway capacity across multipleregions.
v2 tiersScale gateway capacity by adding and removing scaleunits, or upgrade the service tier.
v2 tiers
Scale gateway capacity by adding and removing scaleunits, or upgrade the service tier.
Consumption tierAPI Management instances in the Consumption tier scale automatically based on the traffic.
Consumption tier
API Management instances in the Consumption tier scale automatically based on the traffic.
Self-hosted gateway
In environments such asKubernetes, add multiple gateway replicas to handle expected usage.
Optionallyconfigure autoscalingto meet traffic demands.
Workspace gateway
Scale capacity by adding and removing scaleunitsin the workspace gateway.
Related content
Lear more about:
API Management in a Hybrid and multicloud World
Capacity metricfor scaling decisions
Observability capabilitiesin API Management
AI gateway capabilitiesin API Management
Feedback
Was this page helpful?
Additional resources