Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Manage service connections
Article
2024-10-22
45 contributors
In this article
Azure DevOps Services | Azure DevOps Server 2022 - Azure DevOps Server 2019
This article covers service connections in Azure Pipelines. Service connections are authenticated connections between Azure Pipelines and external or remote services that you use to execute tasks in a job.
For example, your pipelines might use the following categories of service connections:
Azure subscriptions, to use for Azure Web Site Deployment tasks.
Different build servers or file servers, such as a standard GitHub Enterprise Server service connection to a GitHub repository.
Online continuous integration environments, such as a Jenkins service connection for continuous integration of Git repositories.
Services installed on remote computers, such as an Azure Resource Manager service connection to an Azure virtual machine with a managed service identity.
External services, such as a service connection to a Docker registry, Kubernetes cluster, or Maven repository.
The first part of this article explains how to create, view, edit, and use service connections. The second part of the article provides a reference toAzure Pipelines service connection types.
Prerequisites
An Azure DevOps project and pipeline.
The appropriate assigned user roles to create, view, use, or manage a service connection. For more information, seeService connection permissions.
Create a service connection
To create a service connection for Azure Pipelines:
In your Azure DevOps project, selectProject settings>Service connections.
In your Azure DevOps project, selectProject settings>Service connections.
SelectNew service connection, select the type of service connection that you need, and then selectNext.
SelectNew service connection, select the type of service connection that you need, and then selectNext.
Choose an authentication method, and then selectNext.
Choose an authentication method, and then selectNext.
Enter the parameters for the service connection. The parameters vary based on theservice connection typeand authentication method.Depending on the service connection type and authentication method, there might be a link toVerifythe connection. The validation link uses a REST call to the external service with the information that you entered, and indicates whether the call succeeded.
Enter the parameters for the service connection. The parameters vary based on theservice connection typeand authentication method.
Depending on the service connection type and authentication method, there might be a link toVerifythe connection. The validation link uses a REST call to the external service with the information that you entered, and indicates whether the call succeeded.
Enter aService connection nameto use for the service connection in task properties.
Enter aService connection nameto use for the service connection in task properties.
Optionally, enter aDescription.
Optionally, enter aDescription.
SelectGrant access permission to all pipelinesto allow all pipelines to use this connection.If you don't select this option, you must later explicitlyauthorize each pipeline to use the service connection.
SelectGrant access permission to all pipelinesto allow all pipelines to use this connection.
If you don't select this option, you must later explicitlyauthorize each pipeline to use the service connection.
SelectSaveorVerify and save.
SelectSaveorVerify and save.
The following example shows an Azure Resource Manager connection to an Azure subscription. You use theService connection nameas theMyAzureSubscription1or equivalent subscription name value in pipeline tasks.
MyAzureSubscription1

To create a service connection for Azure Pipelines:
In your Azure DevOps project, selectProject settings>Service connections.
In your Azure DevOps project, selectProject settings>Service connections.
SelectNew service connection, select the type of service connection that you need, and then selectNext.
SelectNew service connection, select the type of service connection that you need, and then selectNext.
Choose an authentication method, and then selectNext.
Choose an authentication method, and then selectNext.
Enter the parameters for the service connection. The parameters vary based on theservice connection typeand authentication method.Depending on the service connection type and authentication method, there might be a link toVerifythe connection. The validation link uses a REST call to the external service with the information that you entered, and indicates whether the call succeeded.
Enter the parameters for the service connection. The parameters vary based on theservice connection typeand authentication method.
Depending on the service connection type and authentication method, there might be a link toVerifythe connection. The validation link uses a REST call to the external service with the information that you entered, and indicates whether the call succeeded.
Enter aService connection nameto use for the service connection in task properties.
Enter aService connection nameto use for the service connection in task properties.
Optionally, enter aDescription.
Optionally, enter aDescription.
SelectGrant access permission to all pipelinesto allow all pipelines to use this connection.If you don't select this option, you must later explicitlyauthorize each pipeline to use the service connection.
SelectGrant access permission to all pipelinesto allow all pipelines to use this connection.
If you don't select this option, you must later explicitlyauthorize each pipeline to use the service connection.
SelectSaveorVerify and save.
SelectSaveorVerify and save.
The following example shows an Azure Resource Manager connection to an Azure subscription. You use theService connection nameas theazureSubscriptionor equivalent subscription name value in pipeline tasks.
azureSubscription

View a service connection
To view information about a service connection, from your project selectProject settings>Service connections, and select the service connection that you want to view.
TheOverviewtab shows the details of the service connection, such as connection type, creator, and authentication type.
TheOverviewtab shows the details of the service connection, such as connection type, creator, and authentication type.

TheUsage historytab shows details about historical usage of the service connection.
TheUsage historytab shows details about historical usage of the service connection.

TheApprovals and checkstab shows theapprovals and checksthat allow a pipeline stage to use the service connection. To add approvals and checks, select the+symbol orAdd new.
TheApprovals and checkstab shows theapprovals and checksthat allow a pipeline stage to use the service connection. To add approvals and checks, select the+symbol orAdd new.

Edit a service connection
To edit service connection properties, selectEditon the service connection page. The parameters that you can edit depend on the service connection type and authentication method.
To edit service connection properties, selectEditon the service connection page. The parameters that you can edit depend on the service connection type and authentication method.
You can also selectSecurityorDeleteon theMore optionsmenu. For more information about managing security permissions, seeSet service connection permissions.
You can also selectSecurityorDeleteon theMore optionsmenu. For more information about managing security permissions, seeSet service connection permissions.
To edit existing approvals and checks, select from theMore optionsmenu next to the approval on theApprovals and checkstab.
To edit existing approvals and checks, select from theMore optionsmenu next to the approval on theApprovals and checkstab.

Use a service connection
To use the service connection in pipelines:
For YAML pipelines, use the connection name in your code as theazureSubscriptionor other connection name value.
For YAML pipelines, use the connection name in your code as theazureSubscriptionor other connection name value.
azureSubscription


For Classic pipelines, select the connection name in theAzure subscriptionor other connection name setting in your pipeline task.
For Classic pipelines, select the connection name in theAzure subscriptionor other connection name setting in your pipeline task.

Authorize pipelines
To authorize all pipelines to use the service connection, select theAllow all pipelines to use this connectionoption in the connection properties.
To authorize all pipelines to use the service connection, select theAllow all pipelines to use this connectionoption in the connection properties.
To authorize a single pipeline to use the service connection:SelectRun pipelineon the pipeline page to queue a manual build.The messageThis pipeline needs permission to access a resource before this run can continueappears. SelectViewnext to the message.On theWaiting for reviewscreen, selectPermit, and on the confirmation screen, selectPermitagain.This action explicitly adds the pipeline as an authorized user of the service connection.
To authorize a single pipeline to use the service connection:
SelectRun pipelineon the pipeline page to queue a manual build.
The messageThis pipeline needs permission to access a resource before this run can continueappears. SelectViewnext to the message.
On theWaiting for reviewscreen, selectPermit, and on the confirmation screen, selectPermitagain.
This action explicitly adds the pipeline as an authorized user of the service connection.
Common service connection types
Azure Pipelines supports the following service connection types by default. You can also create your owncustom service connections.
Azure Classic service connection
Use the following parameters to define and secure a connection to a Microsoft Azure subscription, using Azure credentials or an Azure management certificate.
For certificate authentication, selectVerifyto validate your connection information.
If your subscription is defined in anAzure Government Cloud, ensure your application meets the relevant compliance requirements before you configure a service connection.
Azure Repos
Connect to an Azure DevOps organization or project collection using basic or token-based authentication.
Use the following parameters to define and secure a connection to another Azure DevOps organization.
SelectVerifyto validate your connection information.
For more information, seeAuthenticate access with personal access tokens for Azure DevOps.
Azure Resource Manager service connection
For information about creating a service connection to an Azure Resource Manager service, seeConnect to Azure by using an Azure Resource Manager service connection.
Azure Service Bus service connection
For enhanced security, use thePublish To Azure Service Bus v2 taskinstead of an Azure Service Bus service connection to send a message to Azure Service Bus. This version of the task supports Microsoft Entra ID and workload identity federation.
Bitbucket Cloud service connection
Use OAuth withGrant authorizationor a username and password withBasic Authenticationto define a connection to Bitbucket Cloud. For pipelines to keep working, your repository access must remain active.
SelectVerifyorAuthorizeto validate your connection information.
Cargo service connection
Use the following parameters to define and secure a connection to aCargoartifact repository.
https://crates.io
Chef service connection
Use the following parameters to define and secure a connection to aChefautomation server.
Docker Host service connection
Use the following parameters to define and secure a connection to a Docker host.
For more information about protecting your connection to the Docker host, seeProtect the Docker daemon socket.
Docker Registry service connection
You can create a service connection to a Docker container registry.
Select the registry type:
Docker Hub
Others
Azure Container Registry
Docker Hub
Others
Enter the following parameters to define a connection to aDocker Hubregistry orOthers.
You can selectVerifyto verify your credentials before entering the rest of the parameters.
Azure Container Registry is not available in Azure DevOps Server.
You can connect to an Azure Container Registry using either aService Principal,Managed Identity, orWorkload Identity federationAuthentication Type.
Enter the following parameters to define a connection to an Azure Container Registry using a service principal.
Enter the following parameters to define a connection to an Azure Container Registry using aManaged Service Identity.
Enter the following parameters to define a connection to an Azure Container Registry usingWorkload Identity federation.
Generic service connection
Use the following parameters to define and secure a connection to any generic type of service or application.
GitHub service connection
Use the following parameters to define a connection to a GitHub repository.
Tip
There's a specific service connection forOther Git serversandGitHub Enterprise Server connections.
Note
If you selectGrant authorizationfor theChoose authorizationoption, the dialog shows anAuthorizebutton that opens the GitHub signing page. If you selectPersonal access token, paste it into theTokentextbox. The dialog shows the recommended scopes for the token:repo, user, admin:repo_hook. For more information, seeCreate an access token for command line useThen, complete the following steps to register your GitHub account in your profile.
Open yourUser settingsfrom your account name at the right of the Azure Pipelines page heading.
ChoosePersonal access tokens.
SelectAddand enter the information required to create the token.
For more information, seeArtifact sources - version control.
GitHub Enterprise Server service connection
Use the following parameters to define a connection to a GitHub Enterprise repository.
Tip
There's a specific service connection forOther Git serversandstandard GitHub service connections.
Note
If you selectPersonal access token(PAT) you must paste the PAT into theTokentextbox. The dialog shows the recommended scopes for the token:repo, user, admin:repo_hook. For more information, seeCreate an access token for command line useThen, complete the following steps to register your GitHub account in your profile.
Open yourUser settingsfrom your account name at the right of the Azure Pipelines page heading.
ChoosePersonal access tokens.
SelectAddand enter the information required to create the token.
Incoming WebHook service connection
Use the following parameters to create an incoming Webhook service connection.
Jenkins service connection
Use the following parameters to define a connection to the Jenkins service.
You can selectVerifyto verify your credentials before entering the rest of the parameters.
For more information, seeAzure Pipelines Integration with JenkinsandArtifact sources - Jenkins.
Jira service connection
Use the following parameters to define a connection to the Jira service.
Kubernetes service connection
Use the following parameters when you define a connection to a Kubernetes cluster. Choose theAuthentication methodfrom the following options:
Kubeconfig
Service account
Azure subscription
Note
User certificates issued by Azure Kubernetes Service are valid for two years. If you choose to use kubeconfig, you will need to reconfigure service connections after two years.
To get user certificate issued by Azure Kubernetes Service from current context, use the command:kubectl config view --raw -o jsonpath="{.users[?(@.name contains clusterUser_.*_$(kubectl config current-context))].user.client-certificate-data}" | base64 -dTo check when user certificate will expire, use the command:cat <cert_file> | openssl x509 -enddate -noout -in -
kubectl config view --raw -o jsonpath="{.users[?(@.name contains clusterUser_.*_$(kubectl config current-context))].user.client-certificate-data}" | base64 -d
cat <cert_file> | openssl x509 -enddate -noout -in -
Use the following command to fetch the Server URL.
kubectl config view --minify -o 'jsonpath={.clusters[0].cluster.server}'
kubectl config view --minify -o 'jsonpath={.clusters[0].cluster.server}'
Use the following sequence of commands to fetch the Secret object required to connect and authenticate with the cluster.
kubectl get serviceAccounts <service-account-name> -n <namespace> -o 'jsonpath={.secrets[*].name}'
kubectl get serviceAccounts <service-account-name> -n <namespace> -o 'jsonpath={.secrets[*].name}'
In the following command, replace theservice-account-secret-namewith the output of the previous command.
service-account-secret-name
kubectl get secret <service-account-secret-name> -n <namespace> -o json
kubectl get secret <service-account-secret-name> -n <namespace> -o json
Copy and paste the Secret object fetched in YAML form into the Secret text-field.
Note
When using the service account option,ensure that a RoleBinding exists, which grants permissions in theeditClusterRoleto the desired service account. This is needed so that the service account can be used by Azure Pipelines for creating objects in the chosen namespace.
edit
ClusterRole
For an Azure RBAC enabled cluster, a ServiceAccount gets created in the chosen namespace along with RoleBinding object, so that the created ServiceAccount can do actions only on the chosen namespace.
For an Azure RBAC disabled cluster, a ServiceAccount gets created in the chosen namespace, but, the created ServiceAccount has cluster-wide privileges (across namespaces).
Note
This option lists all the subscriptions the service connection creator has access toacross different Azure tenants. If you can't see subscriptions from other Azure tenants, check your Microsoft Entra permissions in those tenants.
Maven service connection
Use the following parameters when you define and secure a connection to a Maven repository.
npm service connection
Use the following parameters when you define and secure a connection to an npm server.
NuGet service connection
Use the following parameters when you define and secure a connection to a NuGet server.
To configure NuGet to authenticate with Azure Artifacts and other NuGet repositories, seeNuGet Authenticate.
Other Git service connection
Use the following parameters to define and secure a connection to an external Git repository server.
There's a specific service connection forGitHubandGitHub Enterprise Server.
For more information, seeArtifact sources.
Python package download service connection
Use the following parameters when you define and secure a connection to a Python repository for downloading Python packages.
Python package upload service connection
Use the following parameters when you define and secure a connection to a Python repository for uploading Python packages.
Service Fabric service connection
When creating a service connection to a Service Fabric cluster, you have three options for the authentication method:Certificate based,Microsoft Entra credential, orWindows security using gMSA.
[System.Convert]::ToBase64String([System.IO.File]::ReadAllBytes("C:\path\to\certificate.pfx"))
[System.Convert]::ToBase64String([System.IO.File]::ReadAllBytes("C:\path\to\certificate.pfx"))
SSH service connection
Use the following parameters when you define and secure a connection to a remote host using Secure Shell (SSH).
For more information, seeSSH taskandCopy files over SSH.
Subversion service connection
Use the following parameters when you define and secure a connection to the Subversion repository.
You can find the realm name in a few ways:
If you access the repository via HTTP or HTTPS: Open the repo in a web browser without saved credentials. It uses the realm name in the authentication dialog.
If you access the repository via HTTP or HTTPS: Open the repo in a web browser without saved credentials. It uses the realm name in the authentication dialog.
Use the svn command line. If you stored the credentials, run For example,svn info https://svnserver/repo. The realm name is displayed when it asks you to enter a password.
Use the svn command line. If you stored the credentials, run For example,svn info https://svnserver/repo. The realm name is displayed when it asks you to enter a password.
svn info https://svnserver/repo
If you stored the credentials to access the repository, look for the realm name in one of the files in the Subversion authentication cache section of your user profile. For example,~/.subversion/auth/svn/simpleorC:\Users\yourname\Application Data\Subversion\auth\svn.simple.
If you stored the credentials to access the repository, look for the realm name in one of the files in the Subversion authentication cache section of your user profile. For example,~/.subversion/auth/svn/simpleorC:\Users\yourname\Application Data\Subversion\auth\svn.simple.
Visual Studio App Center service connection
Use the following parameters when you define and secure a connection to Visual Studio App Center.
Extensions for other service connections
Other service connection types and tasks can be installed as extensions. See the following examples of service connections available through extensions:
System Center Virtual Machine Manager (SCVMM) Integration.
Connect to an SCVMM server to provision virtual machines and do actions on them such as:Managing checkpointsStarting and stopping virtual machines (VMs)Running PowerShell scripts
System Center Virtual Machine Manager (SCVMM) Integration.
Connect to an SCVMM server to provision virtual machines and do actions on them such as:
Managing checkpoints
Starting and stopping virtual machines (VMs)
Running PowerShell scripts
VMware Resource Deployment.
Connect to a VMware vCenter Server from Visual Studio Team Services or Team Foundation Server to provision, start, stop, or snapshot VMware virtual machines.
VMware Resource Deployment.
Connect to a VMware vCenter Server from Visual Studio Team Services or Team Foundation Server to provision, start, stop, or snapshot VMware virtual machines.
Power Platform Build Tools.
Use Microsoft Power Platform Build Tools to automate common build and deployment tasks related to apps built onMicrosoft Power Platform. After you install the extension, thePower Platformservice connection type has the following properties.ParameterDescriptionConnection NameRequired. The name you use to refer to this service connection in task properties.Server URLRequired. The URL of the Power Platform instance. Example:https://contoso.crm4.dynamics.comTenant IDRequired. Tenant ID (also called directory ID in Azure portal) to authenticate to. Refer tohttps://aka.ms/buildtools-spnfor a script that shows Tenant ID and configures Application ID and associated Client Secret. The application user must also becreated in CDSApplication IDRequired. Azure Application ID to authenticate with.Client secret of Application IDRequired. Client secret of the Service Principal associated to above Application ID used to prove identity.
Power Platform Build Tools.
Use Microsoft Power Platform Build Tools to automate common build and deployment tasks related to apps built onMicrosoft Power Platform. After you install the extension, thePower Platformservice connection type has the following properties.
https://contoso.crm4.dynamics.com
You can also create your owncustom service connections.
FAQs and Troubleshoot service connections
Q: How does Azure DevOps ensure efficient usage of Entra ID resources?
Azure DevOps may internally cache Entra ID access tokens issued for target identities in service connections that use Entra ID authentication, such asAzure Resource ManagerandDocker Registry. This helps prevent Entra ID throttling, which can occur due to a high number of server task executions and other actions that require Azure DevOps to authenticate with Entra ID to serve the request. Caching applies only to internal flows where the token is never exposed to the user. If you receive an Entra ID token - for example in your pipeline script - it will always be freshly issued. Modifying the service connection invalidates its token cache and temporarily disables caching for this service endpoint. If you're experiencing any issue due to the staleness of the token following changes made in Entra ID, wait for an hour or try updating the corresponding service endpoint.
Help and support
Exploretroubleshooting tips.
Get advice onStack Overflow.
Post your questions, search for answers, or suggest a feature in theAzure DevOps Developer Community.
Getsupport for Azure DevOps.
Feedback
Was this page helpful?
Additional resources