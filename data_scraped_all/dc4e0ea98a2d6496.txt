Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Configure Application Gateway with a frontend public IPv6 address using the Azure portal
Article
2024-04-04
3 contributors
In this article
Azure Application Gatewaysupports dual stack (IPv4 and IPv6) frontend connections from clients. To use IPv6 frontend connectivity, you need to create a new Application Gateway. Currently you canât upgrade existing IPv4 only Application Gateways to dual stack (IPv4 and IPv6) Application Gateways. Also, currently backend IPv6 addresses aren't supported.
In this article, you use the Azure portal to create an IPv6 Azure Application Gateway and test it to ensure it works correctly. You assign listeners to ports, create rules, and add resources to a backend pool. For the sake of simplicity, a simple setup is used with two public frontend IP addresses (IPv4 and IPv6), a basic listener to host a single site on the application gateway, a basic request routing rule, and two virtual machines (VMs) in the backend pool.
To support IPv6 connectivity, you must create a dual stack VNet. This dual stack VNet has subnets for both IPv4 and IPv6. Azure VNets alreadyprovide dual-stack capability.
For more information about the components of an application gateway, seeApplication gateway components.
Overview
The Azure portal is used to create an IPv6 Azure Application Gateway. Testing is performed to verify it works correctly.
You learn how to:
Set up adual-stack network
Create an application gateway withIPv6 frontend
Create a virtual machine and install IIS fortesting
You can also complete this quickstart usingAzure PowerShell.
Regions and availability
The IPv6 Application Gateway is available to all public cloud regions where Application Gateway v2 SKU is supported. It's also available inMicrosoft Azure operated by 21VianetandAzure Government
Limitations
Only v2 SKU supports a frontend with both IPv4 and IPv6 addresses
IPv6 backends are currently not supported
IPv6 private Link is currently not supported
IPv6-only Application Gateway is currently not supported. Application Gateway must be dual stack (IPv6 and IPv4)
Application Gateway Ingress Controller (AGIC) doesn't support IPv6 configuration
Existing IPv4 application gateways can't be upgraded to dual stack application gateways
WAF custom rules with an IPv6 match condition are not currently supported
Prerequisites
An Azure account with an active subscription is required.  If you don't already have an account, you cancreate an account for free.
Sign in to theAzure portalwith your Azure account.
Create an application gateway
Create the application gateway using the tabs on theCreate application gatewaypage.
On the Azure portal menu or from theHomepage, selectCreate a resource.
UnderCategories, selectNetworkingand then selectApplication Gatewayin thePopular Azure serviceslist.
Basics tab
On theBasicstab, enter the following values for the application gateway settings:Subscription: Select your subscription. For example,_mysubscription.Resource group: Select a resource group. If one doesn't exist, selectCreate newto create it. For example,myresourcegroupAG.Application gateway name: Enter a name for the application gateway.  For example,myappgw.IP address type: SelectDual stack (IPv4 & IPv6).
On theBasicstab, enter the following values for the application gateway settings:
Subscription: Select your subscription. For example,_mysubscription.
Subscription: Select your subscription. For example,_mysubscription.
Resource group: Select a resource group. If one doesn't exist, selectCreate newto create it. For example,myresourcegroupAG.
Resource group: Select a resource group. If one doesn't exist, selectCreate newto create it. For example,myresourcegroupAG.
Application gateway name: Enter a name for the application gateway.  For example,myappgw.
Application gateway name: Enter a name for the application gateway.  For example,myappgw.
IP address type: SelectDual stack (IPv4 & IPv6).
IP address type: SelectDual stack (IPv4 & IPv6).

Configure virtual network: For Azure to communicate between the resources that you create, a dual stack virtual network is needed. You can either create a new dual stack virtual network or choose an existing dual stack network. In this example, you create a new dual stack virtual network at the same time that you create the application gateway.Application Gateway instances are created in separate subnets. One dual-stack subnet and one IPv4-only are created in this example: The IPv4 and IPv6 subnets (provisioned as one dual-stack subnet) are assigned to the application gateway. The IPv4 subnet is for the backend servers.NoteVirtual network service endpoint policiesare currently not supported in an Application Gateway subnet.UnderConfigure virtual network, create a new virtual network by selectingCreate new. In theCreate virtual networkpane, enter the following values to create the virtual network and two subnets:Name: Enter a name for the virtual network. For example,myVNet.Subnet name(Application Gateway subnet): TheSubnetsgrid shows a subnet nameddefault. Change the name of this subnet tomyAGSubnet.Address range- The default IPv4 address ranges for the VNet and the subnet are 10.0.0.0/16 and 10.0.0.0/24, respectively. The default IPv6 address ranges for the VNet and the subnet are ace:cab:deca::/48 and ace:cab:deca::/64, respectively. If you see different default values, you might have an existing subnet that overlaps with these ranges.NoteThe application gateway subnet can contain only application gateways. No other resources are allowed.SelectOKto close theCreate virtual networkwindow and save the new virtual network and subnet settings.
Configure virtual network: For Azure to communicate between the resources that you create, a dual stack virtual network is needed. You can either create a new dual stack virtual network or choose an existing dual stack network. In this example, you create a new dual stack virtual network at the same time that you create the application gateway.
Application Gateway instances are created in separate subnets. One dual-stack subnet and one IPv4-only are created in this example: The IPv4 and IPv6 subnets (provisioned as one dual-stack subnet) are assigned to the application gateway. The IPv4 subnet is for the backend servers.
Note
Virtual network service endpoint policiesare currently not supported in an Application Gateway subnet.UnderConfigure virtual network, create a new virtual network by selectingCreate new. In theCreate virtual networkpane, enter the following values to create the virtual network and two subnets:
Name: Enter a name for the virtual network. For example,myVNet.
Subnet name(Application Gateway subnet): TheSubnetsgrid shows a subnet nameddefault. Change the name of this subnet tomyAGSubnet.
Address range- The default IPv4 address ranges for the VNet and the subnet are 10.0.0.0/16 and 10.0.0.0/24, respectively. The default IPv6 address ranges for the VNet and the subnet are ace:cab:deca::/48 and ace:cab:deca::/64, respectively. If you see different default values, you might have an existing subnet that overlaps with these ranges.

Note
The application gateway subnet can contain only application gateways. No other resources are allowed.
SelectOKto close theCreate virtual networkwindow and save the new virtual network and subnet settings.
SelectNext: Frontends.
SelectNext: Frontends.
Frontends tab
On theFrontendstab, verifyFrontend IP address typeis set toPublic.ImportantFor the Application Gateway v2 SKU, there must be aPublicfrontend IP configuration. A private IPv6 frontend IP configuration (Only ILB mode) is currently not supported for the IPv6 Application Gateway.
On theFrontendstab, verifyFrontend IP address typeis set toPublic.
Important
For the Application Gateway v2 SKU, there must be aPublicfrontend IP configuration. A private IPv6 frontend IP configuration (Only ILB mode) is currently not supported for the IPv6 Application Gateway.
SelectAdd newfor thePublic IP address, enter a name for the public IP address, and selectOK. For example,myAGPublicIPAddress.NoteIPv6 Application Gateway supports up to 4 frontend IP addresses: two IPv4 addresses (Public and Private) and two IPv6 addresses (Public and Private)
SelectAdd newfor thePublic IP address, enter a name for the public IP address, and selectOK. For example,myAGPublicIPAddress.

Note
IPv6 Application Gateway supports up to 4 frontend IP addresses: two IPv4 addresses (Public and Private) and two IPv6 addresses (Public and Private)
SelectNext: Backends.
SelectNext: Backends.
Backends tab
The backend pool is used to route requests to the backend servers that serve the request. Backend pools can be composed of NICs, Virtual Machine Scale Sets, public IP addresses, internal IP addresses, fully qualified domain names (FQDN), and multitenant backends like Azure App Service. In this example, you create an empty backend pool with your application gateway and then add backend targets to the backend pool.
On theBackendstab, selectAdd a backend pool.
On theBackendstab, selectAdd a backend pool.
In theAdd a backend poolpane, enter the following values to create an empty backend pool:Name: Enter a name for the backend pool. For example,myBackendPool.Add backend pool without targets: SelectYesto create a backend pool with no targets. Backend targets are added after creating the application gateway.
In theAdd a backend poolpane, enter the following values to create an empty backend pool:
Name: Enter a name for the backend pool. For example,myBackendPool.
Add backend pool without targets: SelectYesto create a backend pool with no targets. Backend targets are added after creating the application gateway.
SelectAddto save the backend pool configuration and return to theBackendstab.
SelectAddto save the backend pool configuration and return to theBackendstab.

On theBackendstab, selectNext: Configuration.
On theBackendstab, selectNext: Configuration.
Configuration tab
On theConfigurationtab, the frontend and backend pool are connected with a routing rule.
UnderRouting rules, selectAdd a routing rule.
UnderRouting rules, selectAdd a routing rule.
In theAdd a routing rulepane, enter the following values:Rule name: Enter a name for the rule. For example,myRoutingRule.Priority: Enter a value between 1 and 20000, where 1 represents highest priority and 20000 represents lowest. For example, enter a priority of100.
In theAdd a routing rulepane, enter the following values:
Rule name: Enter a name for the rule. For example,myRoutingRule.
Priority: Enter a value between 1 and 20000, where 1 represents highest priority and 20000 represents lowest. For example, enter a priority of100.
A routing rule requires a listener. On theListenertab, enter the following values:Listener name: Enter a name for the listener. For example,myListener.Frontend IP: SelectPublic IPv6.Accept the default values for the other settings on theListenertab and then select theBackend targetstab.
A routing rule requires a listener. On theListenertab, enter the following values:
Listener name: Enter a name for the listener. For example,myListener.
Listener name: Enter a name for the listener. For example,myListener.
Frontend IP: SelectPublic IPv6.Accept the default values for the other settings on theListenertab and then select theBackend targetstab.
Frontend IP: SelectPublic IPv6.
Accept the default values for the other settings on theListenertab and then select theBackend targetstab.

On theBackend targetstab, select your backend pool for theBackend target. For example,myBackendPool.
On theBackend targetstab, select your backend pool for theBackend target. For example,myBackendPool.
For theBackend setting, selectAdd new. The backend setting determines the behavior of the routing rule. In theAdd backend settingpane, enter a backend settings name. For example,myBackendSetting.
For theBackend setting, selectAdd new. The backend setting determines the behavior of the routing rule. In theAdd backend settingpane, enter a backend settings name. For example,myBackendSetting.
Accept the default values for other settings and then selectAdd.
Accept the default values for other settings and then selectAdd.

In theAdd a routing rulepane, selectAddto save the routing rule and return to theConfigurationtab.
In theAdd a routing rulepane, selectAddto save the routing rule and return to theConfigurationtab.

SelectNext: Tags, selectNext: Review + create, and then selectCreate. Deployment of the application gateway takes a few minutes.
SelectNext: Tags, selectNext: Review + create, and then selectCreate. Deployment of the application gateway takes a few minutes.
Assign a DNS name to the frontend IPv6 address
A DNS name makes testing easier for the IPv6 application gateway. You can assign a public DNS name using your own domain and registrar, or you can create a name in azure.com. To assign a name in azure.com:
From the Azure portal Home page, search forPublic IP addresses.
From the Azure portal Home page, search forPublic IP addresses.
SelectMyAGPublicIPv6Address.
SelectMyAGPublicIPv6Address.
UnderSettings, selectConfiguration.
UnderSettings, selectConfiguration.
UnderDNS name label (optional), enter a name. For example,myipv6appgw.
UnderDNS name label (optional), enter a name. For example,myipv6appgw.
SelectSave.
SelectSave.
Copy the FQDN to a text editor for access later. In the following example, the FQDN ismyipv6appgw.westcentralus.cloudapp.azure.com.
Copy the FQDN to a text editor for access later. In the following example, the FQDN ismyipv6appgw.westcentralus.cloudapp.azure.com.

Add a backend subnet
A backend IPv4 subnet is required for the backend targets. The backend subnet is IPv4-only.
On the portal Home page, search for Virtual Networks and select theMyVNetvirtual network.
On the portal Home page, search for Virtual Networks and select theMyVNetvirtual network.
Next toAddress space, select10.0.0.0/16.
Next toAddress space, select10.0.0.0/16.
UnderSettings, selectSubnets.
UnderSettings, selectSubnets.
Select+ Subnetto add a new subnet.
Select+ Subnetto add a new subnet.
UnderName, enterMyBackendSubnet.
UnderName, enterMyBackendSubnet.
The default address space is10.0.1.0/24. SelectSaveto accept this and all other default settings.
The default address space is10.0.1.0/24. SelectSaveto accept this and all other default settings.

Add backend targets
Next, a backend target is added to test the application gateway:
OneVM is created:myVMand used as a backend target. You can also use existing virtual machines if they're available.
IIS is installedon the virtual machine to verify that the application gateway was created successfully.
The backend server (VM) isadded to the backend pool.
Note
Only one virtual machine is deployed here as backend target because we are only testing connectivity. You can add multiple virtual machines if you also wish to test load balancing.
Create a virtual machine
Application Gateway can route traffic to any type of virtual machine used in the backend pool. A Windows Server 2019 Datacenter virtual machine is used in this example.
On the Azure portal menu or from theHomepage, selectCreate a resource.
SelectWindows Server 2019 Datacenterin thePopularlist. TheCreate a virtual machinepage appears.
Enter the following values on theBasicstab:Resource group: SelectmyResourceGroupAG.Virtual machine name: EntermyVM.Region: Select the same region where you created the application gateway.Username: Enter a name for the administrator user name.Password: Enter a password.Public inbound ports:None.
Resource group: SelectmyResourceGroupAG.
Virtual machine name: EntermyVM.
Region: Select the same region where you created the application gateway.
Username: Enter a name for the administrator user name.
Password: Enter a password.
Public inbound ports:None.
Accept the other defaults and then selectNext: Disks.
Accept theDiskstab defaults and then selectNext: Networking.
Next toVirtual network, verify thatmyVNetis selected.
Next toSubnet, verify thatmyBackendSubnetis selected.
Next toPublic IP, selectNone.
SelectNext: Management,Next: Monitoring, and then next toBoot diagnosticsselectDisable.
SelectReview + create.
On theReview + createtab, review the settings, correct any validation errors, and then selectCreate.
Wait for the virtual machine creation to complete before continuing.
Install IIS for testing
In this example, you install IIS on the virtual machines to verify Azure created the application gateway successfully.
Open Azure PowerShell.SelectCloud Shellfrom the top navigation bar of the Azure portal and then selectPowerShellfrom the drop-down list.
Open Azure PowerShell.
SelectCloud Shellfrom the top navigation bar of the Azure portal and then selectPowerShellfrom the drop-down list.
Run the following command to install IIS on the virtual machine. Change theLocationparameter if necessary:Set-AzVMExtension `
  -ResourceGroupName myResourceGroupAG `
  -ExtensionName IIS `
  -VMName myVM `
  -Publisher Microsoft.Compute `
  -ExtensionType CustomScriptExtension `
  -TypeHandlerVersion 1.4 `
  -SettingString '{"commandToExecute":"powershell Add-WindowsFeature Web-Server; powershell Add-Content -Path \"C:\\inetpub\\wwwroot\\Default.htm\" -Value $($env:computername)"}' `
  -Location WestCentralUSSee the following example:
Run the following command to install IIS on the virtual machine. Change theLocationparameter if necessary:
Set-AzVMExtension `
  -ResourceGroupName myResourceGroupAG `
  -ExtensionName IIS `
  -VMName myVM `
  -Publisher Microsoft.Compute `
  -ExtensionType CustomScriptExtension `
  -TypeHandlerVersion 1.4 `
  -SettingString '{"commandToExecute":"powershell Add-WindowsFeature Web-Server; powershell Add-Content -Path \"C:\\inetpub\\wwwroot\\Default.htm\" -Value $($env:computername)"}' `
  -Location WestCentralUS
Set-AzVMExtension `
  -ResourceGroupName myResourceGroupAG `
  -ExtensionName IIS `
  -VMName myVM `
  -Publisher Microsoft.Compute `
  -ExtensionType CustomScriptExtension `
  -TypeHandlerVersion 1.4 `
  -SettingString '{"commandToExecute":"powershell Add-WindowsFeature Web-Server; powershell Add-Content -Path \"C:\\inetpub\\wwwroot\\Default.htm\" -Value $($env:computername)"}' `
  -Location WestCentralUS
See the following example:

Add backend servers to backend pool
On the Azure portal menu, selectApplication gatewaysor search for and select *Application gateways. Then selectmyAppGateway.
On the Azure portal menu, selectApplication gatewaysor search for and select *Application gateways. Then selectmyAppGateway.
UnderSettings, selectBackend poolsand then selectmyBackendPool.
UnderSettings, selectBackend poolsand then selectmyBackendPool.
UnderBackend targets,Target type, selectVirtual machinefrom the drop-down list.
UnderBackend targets,Target type, selectVirtual machinefrom the drop-down list.
UnderTarget, select themyVMnetwork interface from the drop-down list.
UnderTarget, select themyVMnetwork interface from the drop-down list.

SelectSave.
SelectSave.
Wait for the deployment to complete before proceeding to the next step. Deployment takes a few minutes.
Wait for the deployment to complete before proceeding to the next step. Deployment takes a few minutes.
Test the application gateway
IIS isn't required to create the application gateway. It's installed here to verify that you're able to successfully connect to the IPv6 interface of the application gateway.
Previously, we assigned the DNS namemyipv6appgw.westcentralus.cloudapp.azure.comto the public IPv6 address of the application gateway. To test this connection:
Paste the DNS name into the address bar of your browser to connect to it.
Paste the DNS name into the address bar of your browser to connect to it.
Check the response. A valid response ofmyVMverifies that the application gateway was successfully created and can successfully connect with the backend.ImportantIf the connection to the DNS name or IPv6 address fails, it might be because you can't browse IPv6 addresses from your device. To check if this is your problem, also test the IPv4 address of the application gateway. If the IPv4 address connects successfully, then it's likely you don't have a public IPv6 address assigned to your device. If this is the case, you can try testing the connection with adual-stack VM.
Check the response. A valid response ofmyVMverifies that the application gateway was successfully created and can successfully connect with the backend.

Important
If the connection to the DNS name or IPv6 address fails, it might be because you can't browse IPv6 addresses from your device. To check if this is your problem, also test the IPv4 address of the application gateway. If the IPv4 address connects successfully, then it's likely you don't have a public IPv6 address assigned to your device. If this is the case, you can try testing the connection with adual-stack VM.
Clean up resources
When you no longer need the resources that you created with the application gateway, delete the resource group. When you delete the resource group, you also remove the application gateway and all the related resources.
To delete the resource group:
On the Azure portal menu, selectResource groupsor search for and selectResource groups.
On theResource groupspage, search formyResourceGroupAGin the list, then select it.
On theResource group page, selectDelete resource group.
EntermyResourceGroupAGunderTYPE THE RESOURCE GROUP NAMEand then selectDelete
Next steps
What is Azure Application Gateway v2?
Feedback
Was this page helpful?
Additional resources