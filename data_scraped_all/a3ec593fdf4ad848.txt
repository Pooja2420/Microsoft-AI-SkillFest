Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Tutorial: Monitor published APIs
Article
2024-11-01
16 contributors
In this article
APPLIES TO: All API Management tiers
With Azure Monitor, you can visualize, query, route, archive, and take actions on the metrics or logs coming from your Azure API Management service. For an overview of Azure Monitor for API Management, seeMonitor API Management.
Note
Currently, this feature isn't available inworkspaces.
In this tutorial, you learn how to:
View metrics of your API
Set up an alert rule
View activity logs
Enable and view resource logs
Note
API Management supports a range of additional tools to observe APIs, includingbuilt-in analyticsand integration withApplication Insights.Learn more
Prerequisites
Learn theAzure API Management terminology.
Complete the following quickstart:Create an Azure API Management instance.
Also, complete the following tutorial:Import and publish your first API.
View metrics of your APIs
API Management emitsmetricsevery minute, giving you near real-time visibility into the state and health of your APIs. The following are the most frequently used metrics. For a list of all available metrics, seeMetrics.
Capacity- helps you make decisions about upgrading/downgrading your API Management services. The metric is emitted per minute and reflects the estimated gateway capacity at the time of reporting. The metric ranges from 0-100 calculated based on gateway resources such as CPU and memory utilization and other factors.TipIn thev2 service tiers, API Management has replaced the capacity metric with separate CPU and memory utilization metrics. These metrics can also be used for scaling decisions and troubleshooting.Learn more
Capacity- helps you make decisions about upgrading/downgrading your API Management services. The metric is emitted per minute and reflects the estimated gateway capacity at the time of reporting. The metric ranges from 0-100 calculated based on gateway resources such as CPU and memory utilization and other factors.
Tip
In thev2 service tiers, API Management has replaced the capacity metric with separate CPU and memory utilization metrics. These metrics can also be used for scaling decisions and troubleshooting.Learn more
Requests- helps you analyze API traffic going through your API Management services. The metric is emitted per minute and reports the number of gateway requests with dimensions. Filter requests by response codes, location, hostname, and errors.
Requests- helps you analyze API traffic going through your API Management services. The metric is emitted per minute and reports the number of gateway requests with dimensions. Filter requests by response codes, location, hostname, and errors.
Important
The following metrics have been retired: Total Gateway Requests, Successful Gateway Requests, Unauthorized Gateway Requests, Failed Gateway Requests, Other Gateway Requests. Please migrate to the Requests metric which provides closely similar functionality.

To access metrics:
In theAzure portal, navigate to your API Management instance. On theOverviewpage, on theMonitortab, review key metrics for your APIs.
In theAzure portal, navigate to your API Management instance. On theOverviewpage, on theMonitortab, review key metrics for your APIs.
To investigate metrics in detail, selectMonitoring>Metricsfrom the left menu.
To investigate metrics in detail, selectMonitoring>Metricsfrom the left menu.

From the drop-down, select metrics you're interested in. For example,Requests.
From the drop-down, select metrics you're interested in. For example,Requests.
The chart shows the total number of API calls. Adjust the time range to focus on periods of interest.
The chart shows the total number of API calls. Adjust the time range to focus on periods of interest.
You can filter the chart using the dimensions of theRequestsmetric. For example, selectAdd filter, selectBackend Response Code Category, enter500as the value. The chart shows the number of requests failed in the API backend.
You can filter the chart using the dimensions of theRequestsmetric. For example, selectAdd filter, selectBackend Response Code Category, enter500as the value. The chart shows the number of requests failed in the API backend.
500
Set up an alert rule
You can receivealertsbased on metrics and activity logs. In Azure Monitor,configure an alert ruleto perform an action when it triggers. Common actions include:
Send an email notification
Call a webhook
Invoke an Azure Logic App
To configure an example alert rule based on a request metric:
In theAzure portal, navigate to your API Management instance.
In theAzure portal, navigate to your API Management instance.
SelectMonitoring>Alertsfrom the left menu.
SelectMonitoring>Alertsfrom the left menu.

Select+ Create>Alert rule.
Select+ Create>Alert rule.
On theConditiontab:InSignal name, selectRequests.InAlert logic, review or modify the default values for the alert. For example, update the staticThreshold, which is the number of occurrences after which the alert should be triggered.InSplit by dimensions, inDimension name, selectGateway Response Code Category.InDimension values, select4xx, for client errors such as unauthorized or invalid requests. If the dimension value doesn't appear, selectAdd custom valueand enter4xx.InWhen to evaluate, accept the default settings, or select other settings to configure how often the rule runs. SelectNext.
On theConditiontab:
InSignal name, selectRequests.
InAlert logic, review or modify the default values for the alert. For example, update the staticThreshold, which is the number of occurrences after which the alert should be triggered.
InSplit by dimensions, inDimension name, selectGateway Response Code Category.
InDimension values, select4xx, for client errors such as unauthorized or invalid requests. If the dimension value doesn't appear, selectAdd custom valueand enter4xx.
InWhen to evaluate, accept the default settings, or select other settings to configure how often the rule runs. SelectNext.

On theActionstab, select or create one or moreaction groupsto notify users about the alert and take an action. For example, create a new action group to send a notification email toadmin@contoso.com. For detailed steps, seeCreate and manage action groups in the Azure portal.
On theActionstab, select or create one or moreaction groupsto notify users about the alert and take an action. For example, create a new action group to send a notification email toadmin@contoso.com. For detailed steps, seeCreate and manage action groups in the Azure portal.
admin@contoso.com

On theDetailstab ofCreate an alert rule, enter a name and description of the alert rule and select the severity level.
On theDetailstab ofCreate an alert rule, enter a name and description of the alert rule and select the severity level.
Optionally configure the remaining settings. Then, on theReview + createtab, selectCreate.
Optionally configure the remaining settings. Then, on theReview + createtab, selectCreate.
Optionally test the alert rule by using an HTTP client to simulate a request that triggers the alert. For example, run the following command in a terminal, substituting the API Management hostname with the hostname of your API Management instance:curl GET https://contoso.azure-api.net/non-existent-endpoint HTTP/1.1An alert triggers based on the evaluation period, and it will send email to admin@contoso.com.Alerts also appear on theAlertspage for the API Management instance.
Optionally test the alert rule by using an HTTP client to simulate a request that triggers the alert. For example, run the following command in a terminal, substituting the API Management hostname with the hostname of your API Management instance:
curl GET https://contoso.azure-api.net/non-existent-endpoint HTTP/1.1
curl GET https://contoso.azure-api.net/non-existent-endpoint HTTP/1.1
An alert triggers based on the evaluation period, and it will send email to admin@contoso.com.
Alerts also appear on theAlertspage for the API Management instance.

Activity logs
Activity logs provide insight into the operations on your API Management services. Using activity logs, you can determine the "what, who, and when" for any write operations (PUT, POST, DELETE) taken on your API Management services.
Note
Activity logs do not include read (GET) operations or operations performed in the Azure portal.
You can access activity logs in your API Management service, or access logs of all your Azure resources in Azure Monitor.

To view the activity log:
In theAzure portal, navigate to your API Management instance.
In theAzure portal, navigate to your API Management instance.
SelectActivity log.
SelectActivity log.

Select the desired filtering scope and thenApply.
Select the desired filtering scope and thenApply.
Resource logs
Resource logs (Azure Monitor logs) provide rich information about API Management operations and errors that are important for auditing and troubleshooting purposes. When enabled through a diagnostic setting, the logs collect information about the API requests that are received and processed by the API Management gateway.
Note
The Consumption tier doesn't support the collection of resource logs.
To configure resource logs:
In theAzure portal, navigate to your API Management instance.
In theAzure portal, navigate to your API Management instance.
SelectMonitoring>Diagnostic settings.
SelectMonitoring>Diagnostic settings.

Select+ Add diagnostic setting.
Select+ Add diagnostic setting.
Select the logs or metrics that you want to collect.You have several options about where to send the logs and metrics. For example, archive resource logs along with metrics to a storage account, stream them to an event hub, or send them to a Log Analytics workspace.TipIf you select a Log Analytics workspace, you can choose to store the data in the resource-specific ApiManagementGatewayLogs table or store in the general AzureDiagnostics table. We recommend using the resource-specific table for log destinations that support it.Learn more
Select the logs or metrics that you want to collect.
You have several options about where to send the logs and metrics. For example, archive resource logs along with metrics to a storage account, stream them to an event hub, or send them to a Log Analytics workspace.
Tip
If you select a Log Analytics workspace, you can choose to store the data in the resource-specific ApiManagementGatewayLogs table or store in the general AzureDiagnostics table. We recommend using the resource-specific table for log destinations that support it.Learn more
After configuring details for the log destination or destinations, selectSave.
After configuring details for the log destination or destinations, selectSave.
Note
Adding a diagnostic setting object might result in a failure if theMinApiVersion propertyof your API Management service is set to any API version higher than 2022-09-01-preview.
For more information, seeCreate diagnostic settings to send platform logs and metrics to different destinations.
View logs and metrics in Azure Monitor
If you enable collection of logs or metrics in a Log Analytics workspace, it can take a few minutes for data to appear in Azure Monitor.
To view the data:
In theAzure portal, navigate to your API Management instance.
In theAzure portal, navigate to your API Management instance.
SelectLogsfrom the left menu.
SelectLogsfrom the left menu.

Run queries to view the data. Severalsample queriesare provided, or run your own. For example, the following query retrieves the most recent 24 hours of data from the ApiManagementGatewayLogs table:ApiManagementGatewayLogs
| where TimeGenerated > ago(1d)
Run queries to view the data. Severalsample queriesare provided, or run your own. For example, the following query retrieves the most recent 24 hours of data from the ApiManagementGatewayLogs table:
ApiManagementGatewayLogs
| where TimeGenerated > ago(1d)
ApiManagementGatewayLogs
| where TimeGenerated > ago(1d)

For more information about using resource logs for API Management, see:
Log Analytics tutorial.
Log Analytics tutorial.
Overview of log queries in Azure Monitor.
Overview of log queries in Azure Monitor.
API Management resource log schema reference.
API Management resource log schema reference.
Modify API logging settings
By default, when you create a diagnostic setting to enable collection of resource logs, logging is enabled for all APIs, with default settings. You can adjust the logging settings for all APIs, or override them for individual APIs. For example, adjust the sampling rate or the verbosity of the data, enable logging of headers or request or response payloads, or disable logging for some APIs.
For details about the logging settings, seeDiagnostic logging settings reference.
To configure logging settings for all APIs:
In the left menu of your API Management instance, selectAPIs>APIs>All APIs.
Select theSettingstab from the top bar.
Scroll down to theDiagnostic Logssection, and select theAzure Monitortab.
Review the settings and make changes if needed. SelectSave.
To configure logging settings for a specific API:
In the left menu of your API Management instance, selectAPIs>APIsand then the name of the API.
Select theSettingstab from the top bar.
Scroll down to theDiagnostic Logssection, and select theAzure Monitortab.
Review the settings and make changes if needed. SelectSave.
Important
If enabled, logged request or response payloads can be up to 8,192 bytes. API Management also enforces a 32 KB limit for a diagnostic log entry sent to Azure Monitor, which includes the payloads and other attributes such as status codes, headers, and timestamps. If the combined size of the attributes exceeds 32 KB, API Management trims the entry by removing all body and trace content.
Next steps
In this tutorial, you learned how to:
View metrics of your API
Set up an alert rule
View activity logs
Enable and view resource logs
Advance to the next tutorial:
Trace calls
Feedback
Was this page helpful?
Additional resources