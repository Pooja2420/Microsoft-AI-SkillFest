Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
What is Azure Batch?
Article
2025-03-14
18 contributors
In this article
Use Azure Batch to run large-scale parallel and high-performance computing (HPC) batch jobs efficiently in Azure. Azure Batch creates and manages a pool of compute nodes (virtual machines), installs the applications you want to run, and schedules jobs to run on the nodes. There's no cluster or job scheduler software to install, manage, or scale. Instead, you useBatch APIs and tools, command-line scripts, or the Azure portal to configure, manage, and monitor your jobs.
Developers can use Batch as a platform service to build SaaS applications or client apps where large-scale execution is required. For example, you can build a service with Batch to run a Monte Carlo risk simulation for a financial services company, or a service to process many images.
There is no additional charge for using Batch. You only pay for the underlying resources consumed, such as the virtual machines, storage, and networking.
For a comparison between Batch and other HPC solution options in Azure, seeHigh Performance Computing (HPC) on Azure.
Run parallel workloads
Batch works well with intrinsically parallel (also known as "embarrassingly parallel") workloads. These workloads have applications which can run independently, with each instance completing part of the work. When the applications are executing, they might access some common data, but they don't communicate with other instances of the application. Intrinsically parallel workloads can therefore run at a large scale, determined by the amount of compute resources available to run applications simultaneously.
Some examples of intrinsically parallel workloads you can bring to Batch:
Financial risk modeling using Monte Carlo simulations
VFX and 3D image rendering
Image analysis and processing
Media transcoding
Genetic sequence analysis
Optical character recognition (OCR)
Data ingestion, processing, and ETL operations
Software test execution
You can also use Batch torun tightly coupled workloads, where the applications you run need to communicate with each other, rather than running independently. Tightly coupled applications normally use the Message Passing Interface (MPI) API. You can run your tightly coupled workloads with Batch usingMicrosoft MPIor Intel MPI. Improve application performance with specializedHPCandGPU-optimizedVM sizes.
Some examples of tightly coupled workloads:
Finite element analysis
Fluid dynamics
Multi-node AI training
Many tightly coupled jobs can be run in parallel using Batch. For example, you can perform multiple simulations of a liquid flowing through a pipe with varying pipe widths.
Additional Batch capabilities
Batch supports large-scalerendering workloadswith rendering tools including Autodesk Maya, 3ds Max, Arnold, and V-Ray.
You can also run Batch jobs as part of a larger Azure workflow to transform data, managed by tools such asAzure Data Factory.
How it works
A common scenario for Batch involves scaling out intrinsically parallel work, such as the rendering of images for 3D scenes, on a pool of compute nodes. This pool can be your "render farm" that provides tens, hundreds, or even thousands of cores to your rendering job.
The following diagram shows steps in a common Batch workflow, with a client application or hosted service using Batch to run a parallel workload.

Keep in mind that the workflow described above is just one way to use Batch, and there are many other features and options. For example, you can executemultiple tasks in parallelon each compute node. Or you can usejob preparation and completion tasksto prepare the nodes for your jobs, then clean up afterward.
SeeBatch service workflow and resourcesfor an overview of features such as pools, nodes, jobs, and tasks. Also see the latestBatch service updates.
In-region data residency
Azure Batch does not move or store customer data out of the region in which it is deployed.
Next steps
Get started with Azure Batch with one of these quickstarts:
Run your first Batch job with the Azure CLI
Run your first Batch job with the Azure portal
Run your first Batch job using the .NET API
Run your first Batch job using the Python API
Create a Batch account using ARM templates
Feedback
Was this page helpful?
Additional resources