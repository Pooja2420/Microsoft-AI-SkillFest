Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Manage your IoT solution
Article
2025-01-30
2 contributors
In this article
This overview introduces the key concepts around the options to manage an Azure IoT solution. Each section includes links to content that provides further detail and guidance.
Edge-based solution
Cloud-based solution
The following diagram shows a high-level view of the components in a typicaledge-based IoT solution. This article focuses on the areas relevant to managing an edge-based IoT solution:

The following diagram shows a high-level view of the components in a typicalcloud-based IoT solution. This article focuses on the areas relevant to managing a cloud-based IoT solution:

There are many options for managing your IoT solution including the Azure portal, PowerShell, and ARM templates. This article summarizes the main options.
To learn about securing your IoT solution, seeSecure your IoT solution.
Monitoring
Edge-based solution
Cloud-based solution
Solution monitoring in an edge-based solution involves monitoring both your edge and cloud environments. Azure IoT Operations observability capabilities let you monitor your edge environment using cloud-based tools enabling end-to-end monitoring of your IoT solution.
To learn more, seeDeploy observability resources and set up logs.
While there are tools specifically formonitoring devicesin your IoT solution, you also need to be able to monitor the health of your IoT services:
To learn more about the Azure Monitor service, seeAzure Monitor overview.
Azure portal
The Azure portal offers a consistent GUI environment for managing your Azure IoT services. For example, you can use the portal to:
Edge-based solution
Cloud-based solution
ARM templates and Bicep
To implement infrastructure as code for your Azure IoT solutions, use Azure Resource Manager templates (ARM templates). The template is a JavaScript Object Notation (JSON) file that defines the infrastructure and configuration for your project. Bicep is a language that offers the same capabilities as ARM templates but with a syntax that's easier to use.
For example, you can use ARM templates or Bicep to:
Edge-based solution
Cloud-based solution
For ARM templates and Bicep reference documentation, see:
IoT Operations
IoT Operations MQTT broker
IoT Operations data flows
For ARM templates and Bicep reference documentation, see:
IoT Hub
DPS
Device update for IoT Hub
IoT Central
CLI
Use CLI tools such as the Azure CLI or PowerShell to automate the management of your IoT solution:
Edge-based solution
Cloud-based solution
Azure CLI
For Azure CLI reference documentation, seeaz iot ops.
az iot ops
PowerShell
For PowerShell reference documentation, see:
Az.IotHubmodule
Az.IotCentralmodule
PowerShell functions for IoT Edge for Linux on Windows
Azure CLI
Use the Azure CLI to automate the management of your IoT solution. For example, you can use the Azure CLI to:
For Azure CLI reference documentation, see:
az iot hub
az iot hub
az iot device(IoT Hub)
az iot device
az iot edge
az iot edge
az iot dps
az iot dps
az iot central
az iot central
az iot du(Azure Device Update)
az iot du
az dt(Azure Digital Twins)
az dt
Azure DevOps tools
Use Azure DevOps tools to automate the management of your IoT solution. For example, you can use Azure DevOps tools to enable:
Continuous integration and continuous deployment to Azure IoT Edge devices
Integration of IoT Central with Azure Pipelines for CI/CD
Related content
Security best practices for IoT solutions
IoT solution scalability, high availability, and disaster recovery
Choose an Azure IoT service
Feedback
Was this page helpful?
Additional resources