Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
ArchiveFiles@2 - Archive files v2 task
Article
2025-03-20
3 contributors
In this article
Archive files using compression formats such as .7z, .tar, .gz, and .zip.
Syntax
# Archive files v2
# Compress files into .7z, .tar.gz, or .zip.
- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(Build.BinariesDirectory)' # string. Required. Root folder or file to archive. Default: $(Build.BinariesDirectory).
    #includeRootFolder: true # boolean. Prepend root folder name to archive paths. Default: true.
  # Archive
    archiveType: 'zip' # 'zip' | '7z' | 'tar' | 'wim'. Required. Archive type. Default: zip.
    #sevenZipCompression: 'normal' # 'ultra' | 'maximum' | 'normal' | 'fast' | 'fastest' | 'none'. Optional. Use when archiveType = 7z. 7z compression. Default: normal.
    #tarCompression: 'gz' # 'gz' | 'bz2' | 'xz' | 'none'. Optional. Use when archiveType = tar. Tar compression. Default: gz.
    archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip' # string. Required. Archive file to create. Default: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip.
    #replaceExistingArchive: true # boolean. Replace existing archive. Default: true.
    #verbose: false # boolean. Force verbose output. Default: false.
    #quiet: false # boolean. Force quiet output. Default: false.
# Archive files v2
# Compress files into .7z, .tar.gz, or .zip.
- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(Build.BinariesDirectory)' # string. Required. Root folder or file to archive. Default: $(Build.BinariesDirectory).
    #includeRootFolder: true # boolean. Prepend root folder name to archive paths. Default: true.
  # Archive
    archiveType: 'zip' # 'zip' | '7z' | 'tar' | 'wim'. Required. Archive type. Default: zip.
    #sevenZipCompression: 'normal' # 'ultra' | 'maximum' | 'normal' | 'fast' | 'fastest' | 'none'. Optional. Use when archiveType = 7z. 7z compression. Default: normal.
    #tarCompression: 'gz' # 'gz' | 'bz2' | 'xz' | 'none'. Optional. Use when archiveType = tar. Tar compression. Default: gz.
    archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip' # string. Required. Archive file to create. Default: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip.
    #replaceExistingArchive: true # boolean. Replace existing archive. Default: true.
    #verbose: false # boolean. Force verbose output. Default: false.
    #quiet: false # boolean. Force quiet output. Default: false.
# Archive files v2
# Compress files into .7z, .tar.gz, or .zip.
- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(Build.BinariesDirectory)' # string. Required. Root folder or file to archive. Default: $(Build.BinariesDirectory).
    #includeRootFolder: true # boolean. Prepend root folder name to archive paths. Default: true.
  # Archive
    archiveType: 'zip' # 'zip' | '7z' | 'tar' | 'wim'. Required. Archive type. Default: zip.
    #sevenZipCompression: '5' # 'ultra' | 'maximum' | 'normal' | 'fast' | 'fastest' | 'none'. Optional. Use when archiveType = 7z. 7z compression. Default: 5.
    #tarCompression: 'gz' # 'gz' | 'bz2' | 'xz' | 'none'. Optional. Use when archiveType = tar. Tar compression. Default: gz.
    archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip' # string. Required. Archive file to create. Default: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip.
    #replaceExistingArchive: true # boolean. Replace existing archive. Default: true.
    #verbose: false # boolean. Force verbose output. Default: false.
    #quiet: false # boolean. Force quiet output. Default: false.
# Archive files v2
# Compress files into .7z, .tar.gz, or .zip.
- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(Build.BinariesDirectory)' # string. Required. Root folder or file to archive. Default: $(Build.BinariesDirectory).
    #includeRootFolder: true # boolean. Prepend root folder name to archive paths. Default: true.
  # Archive
    archiveType: 'zip' # 'zip' | '7z' | 'tar' | 'wim'. Required. Archive type. Default: zip.
    #sevenZipCompression: '5' # 'ultra' | 'maximum' | 'normal' | 'fast' | 'fastest' | 'none'. Optional. Use when archiveType = 7z. 7z compression. Default: 5.
    #tarCompression: 'gz' # 'gz' | 'bz2' | 'xz' | 'none'. Optional. Use when archiveType = tar. Tar compression. Default: gz.
    archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip' # string. Required. Archive file to create. Default: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip.
    #replaceExistingArchive: true # boolean. Replace existing archive. Default: true.
    #verbose: false # boolean. Force verbose output. Default: false.
    #quiet: false # boolean. Force quiet output. Default: false.
Inputs
rootFolderOrFile-Root folder or file to archivestring. Required. Default value:$(Build.BinariesDirectory).
rootFolderOrFile
string
$(Build.BinariesDirectory)
Name of the root folder or the file path to files to add to the archive. For folders, everything in the named folder is added to the archive.
includeRootFolder-Prepend root folder name to archive pathsboolean. Default value:true.
includeRootFolder
boolean
true
Prepends the root folder name to file paths in the archive. Otherwise, all file paths will start one level lower.
For example, if the root folder is:/home/user/output/classes/and the file path:com/acme/Main.class. The resulting archive will contain:classes/com/acme/Main.class. Otherwise, the resulting archive will contain:com/acme/Main.class.
/home/user/output/classes/
com/acme/Main.class
classes/com/acme/Main.class
com/acme/Main.class
archiveType-Archive typestring. Required. Allowed values:zip,7z,tar,wim. Default value:zip.
archiveType
string
zip
7z
tar
wim
zip
Specifies a compression format.  Valid formats include:
zip- Default. Choose this format for all zip compatible types such as .zip, .jar, .war, .ear
zip
7z- 7-Zip format, (.7z)
7z
tar- tar format, use for compressed tars including .tar.gz, .tar.bz2, .tar.xz
tar
wim- wim format, .wim
wim
Example, to create an archive namedfoo.jar:
foo.jar
Select compression formatzip
zip
Specify the name of the archive file to create:foo.jar
foo.jar
sevenZipCompression-7z compressionstring. Optional. Use whenarchiveType = 7z. Allowed values:ultra,maximum,normal,fast,fastest,none. Default value:normal.
sevenZipCompression
string
archiveType = 7z
ultra
maximum
normal
fast
fastest
none
normal
Set compression level orNoneto create an uncompressed .7z file.
None
sevenZipCompression-7z compressionstring. Optional. Use whenarchiveType = 7z. Allowed values:ultra,maximum,normal,fast,fastest,none. Default value:5.
sevenZipCompression
string
archiveType = 7z
ultra
maximum
normal
fast
fastest
none
5
Set a compression format orNoneto create an uncompressed .7z file.
None
tarCompression-Tar compressionstring. Optional. Use whenarchiveType = tar. Allowed values:gz,bz2,xz,none. Default value:gz.
tarCompression
string
archiveType = tar
gz
bz2
xz
none
gz
Set a compression format or chooseNoneto create an uncompressed .tar file.
None
gz- Default format for gzip compression (.tar.gz, .tar.tgz, .taz)
gz
bz2- bzip2 compression (.tar.bz2, .tz2, .tbz2)
bz2
xz- xz compression (.tar.xz, .txz)
xz
archiveFile-Archive file to createstring. Required. Default value:$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip.
archiveFile
string
$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
Specify the name of the archive file to create.  For example, to createfoo.tgz:
foo.tgz
Set archive type:tar
tar
Set tar compression:gz
gz
replaceExistingArchive-Replace existing archiveboolean. Default value:true.
replaceExistingArchive
boolean
true
By default, overwrites an existing archive. Otherwise, when set tofalse, uncompressed tar files are added to the existing archive.
false
Supported file formats that can be added to an existing archive:
zip
zip
7z
7z
tar- Only uncompressed
tar
wim
wim
verbose-Force verbose outputboolean. Default value:false.
verbose
boolean
false
If set to true, forces tools to use verbose output. Overrides the 'quiet' setting.
quiet-Force quiet outputboolean. Default value:false.
quiet
boolean
false
If set totrue, forces tools to use quiet output. Theverbosesetting (or equivalent) can override this setting.
true
verbose
Task control options
All tasks have control options in addition to their task inputs. For more information, seeControl options and common task properties.
Output variables
None.
Remarks
Use this task to create an archive file from a source folder.
Standard archive formats are supported including .zip, .jar, .war, .ear, .tar, .7z, and more.
Requirements
Feedback
Was this page helpful?
Additional resources