Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
AzureRmWebAppDeployment@3 - Azure App Service deploy v3 task
Article
2025-03-28
4 contributors
In this article
Use this task to deploy to Azure App Service a web, mobile, or API app using Docker, Java, .NET, .NET Core, Node.js, PHP, Python, or Ruby.
This version of the task is deprecated; useAzureRmWebAppDeployment@4to take advantage of the latest features likeWorkload identity federation.
Note
UseAzureFunctionApp@1to deploy Azure Functions apps.
Use this task to deploy to Azure App Service a web, mobile, or API app using Docker, Java, .NET, .NET Core, Node.js, PHP, Python, or Ruby.
Note
UseAzureFunctionApp@1to deploy Azure Functions apps.
Syntax
# Azure App Service deploy v3
# Deploy to Azure App Service a web, mobile, or API app using Docker, Java, .NET, .NET Core, Node.js, PHP, Python, or Ruby.
- task: AzureRmWebAppDeployment@3
  inputs:
    azureSubscription: # string. Alias: ConnectedServiceName. Required. Azure subscription. 
    appType: 'app' # 'app' | 'applinux' | 'functionapp' | 'api' | 'mobileapp'. Alias: WebAppKind. Required. App type. Default: app.
    WebAppName: # string. Required. App Service name. 
    #DeployToSlotFlag: false # boolean. Optional. Use when WebAppKind != "". Deploy to slot. Default: false.
    #ResourceGroupName: # string. Required when DeployToSlotFlag = true. Resource group. 
    #SlotName: # string. Required when DeployToSlotFlag = true. Slot. 
    #ImageSource: 'Registry' # 'Registry' | 'Builtin'. Optional. Use when WebAppKind = applinux || WebAppKind = linux. Image Source. Default: Registry.
    #AzureContainerRegistry: # string. Required when ImageSource = AzureContainerRegistry. Registry. 
    #AzureContainerRegistryLoginServer: # string. Optional. Use when ImageSource = invalidimagesource. Registry Login Server Name. 
    #AzureContainerRegistryImage: # string. Required when ImageSource = AzureContainerRegistry. Image. 
    #AzureContainerRegistryTag: # string. Optional. Use when ImageSource = AzureContainerRegistry. Tag. 
    #DockerRepositoryAccess: 'public' # 'private' | 'public'. Required when ImageSource = invalidImage. Repository Access. Default: public.
    #dockerRegistryConnection: # string. Alias: RegistryConnectedServiceName. Required when DockerRepositoryAccess = private || ImageSource = PrivateRegistry. Registry Connection. 
    #PrivateRegistryImage: # string. Required when ImageSource = PrivateRegistry. Image. 
    #PrivateRegistryTag: # string. Optional. Use when ImageSource = PrivateRegistry. Tag. 
    #DockerNamespace: # string. Required when WebAppKind != app && WebAppKind != functionapp && WebAppKind != api && WebAppKind != mobileapp && ImageSource  = Registry. Registry or Namespace. 
    #DockerRepository: # string. Required when WebAppKind != app && WebAppKind != functionapp && WebAppKind != api && WebAppKind != mobileapp && ImageSource  = Registry. Image. 
    #DockerImageTag: # string. Optional. Use when WebAppKind != app && WebAppKind != functionapp && WebAppKind != api && WebAppKind != mobileapp && ImageSource  = Registry. Tag. 
    #VirtualApplication: # string. Optional. Use when WebAppKind != linux && WebAppKind != applinux && WebAppKind != "". Virtual application. 
    #Package: '$(System.DefaultWorkingDirectory)/**/*.zip' # string. Required when WebAppKind != linux && WebAppKind != applinux &&  WebAppKind != "". Package or folder. Default: $(System.DefaultWorkingDirectory)/**/*.zip.
    #packageForLinux: '$(System.DefaultWorkingDirectory)/**/*.zip' # string. Alias: BuiltinLinuxPackage. Required when WebAppKind != app && WebAppKind != functionapp && WebAppKind != api && WebAppKind != mobileapp && ImageSource = Builtin. Package or folder. Default: $(System.DefaultWorkingDirectory)/**/*.zip.
    #RuntimeStack: # string. Required when WebAppKind != app && WebAppKind != functionapp && WebAppKind != api && WebAppKind != mobileapp && ImageSource = Builtin. Runtime Stack. 
    #StartupCommand: # string. Optional. Use when WebAppKind = applinux || WebAppKind = linux. Startup command. 
  # Output
    #WebAppUri: # string. Optional. Use when WebAppKind != "". App Service URL. 
  # Post Deployment Action
    #ScriptType: # 'Inline Script' | 'File Path'. Optional. Use when WebAppKind != "". Deployment script type. 
    #InlineScript: ':: You can provide your deployment commands here. One command per line.' # string. Required when ScriptType == Inline Script && WebAppKind != "". Inline Script. Default: :: You can provide your deployment commands here. One command per line..
    #ScriptPath: # string. Required when ScriptType == File Path && WebAppKind != "". Deployment script path. 
  # File Transforms & Variable Substitution Options
    #GenerateWebConfig: false # boolean. Optional. Use when WebAppKind != linux && WebAppKind != applinux && WebAppKind != "" && Package NotEndsWith .war. Generate Web.config. Default: false.
    #WebConfigParameters: # string. Required when GenerateWebConfig == true && WebAppKind != linux && WebAppKind != applinux && WebAppKind != "" && Package NotEndsWith .war. Web.config parameters. 
    #enableXmlTransform: false # boolean. Alias: XmlTransformation. Optional. Use when WebAppKind != linux && WebAppKind != applinux && WebAppKind != "" && Package NotEndsWith .war. XML transformation. Default: false.
    #enableXmlVariableSubstitution: false # boolean. Alias: XmlVariableSubstitution. Optional. Use when WebAppKind != linux && WebAppKind != applinux && WebAppKind != "" && Package NotEndsWith .war. XML variable substitution. Default: false.
    #JSONFiles: # string. Optional. Use when WebAppKind != linux && WebAppKind != applinux && WebAppKind != "" && Package NotEndsWith .war. JSON variable substitution. 
  # Application and Configuration Settings
    #AppSettings: # string. App settings. 
    #ConfigurationSettings: # string. Configuration settings. 
  # Additional Deployment Options
    #TakeAppOfflineFlag: false # boolean. Optional. Use when WebAppKind != linux && WebAppKind != applinux && WebAppKind != "". Take App Offline. Default: false.
    #UseWebDeploy: false # boolean. Optional. Use when WebAppKind != linux && WebAppKind != applinux && WebAppKind != "". Publish using Web Deploy. Default: false.
    #SetParametersFile: # string. Optional. Use when UseWebDeploy == true && WebAppKind != linux && WebAppKind != applinux && WebAppKind != "". SetParameters file. 
    #RemoveAdditionalFilesFlag: false # boolean. Optional. Use when UseWebDeploy == true && WebAppKind != linux && WebAppKind != applinux && WebAppKind != "". Remove additional files at destination. Default: false.
    #ExcludeFilesFromAppDataFlag: false # boolean. Optional. Use when UseWebDeploy == true && WebAppKind != linux && WebAppKind != applinux && WebAppKind != "". Exclude files from the App_Data folder. Default: false.
    #AdditionalArguments: # string. Optional. Use when UseWebDeploy == true && WebAppKind != linux && WebAppKind != applinux && WebAppKind != "". Additional arguments. 
    #RenameFilesFlag: false # boolean. Optional. Use when UseWebDeploy == true && WebAppKind != linux && WebAppKind != applinux && WebAppKind != "". Rename locked files. Default: false.
# Azure App Service deploy v3
# Deploy to Azure App Service a web, mobile, or API app using Docker, Java, .NET, .NET Core, Node.js, PHP, Python, or Ruby.
- task: AzureRmWebAppDeployment@3
  inputs:
    azureSubscription: # string. Alias: ConnectedServiceName. Required. Azure subscription. 
    appType: 'app' # 'app' | 'applinux' | 'functionapp' | 'api' | 'mobileapp'. Alias: WebAppKind. Required. App type. Default: app.
    WebAppName: # string. Required. App Service name. 
    #DeployToSlotFlag: false # boolean. Optional. Use when WebAppKind != "". Deploy to slot. Default: false.
    #ResourceGroupName: # string. Required when DeployToSlotFlag = true. Resource group. 
    #SlotName: # string. Required when DeployToSlotFlag = true. Slot. 
    #ImageSource: 'Registry' # 'Registry' | 'Builtin'. Optional. Use when WebAppKind = applinux || WebAppKind = linux. Image Source. Default: Registry.
    #AzureContainerRegistry: # string. Required when ImageSource = AzureContainerRegistry. Registry. 
    #AzureContainerRegistryLoginServer: # string. Optional. Use when ImageSource = invalidimagesource. Registry Login Server Name. 
    #AzureContainerRegistryImage: # string. Required when ImageSource = AzureContainerRegistry. Image. 
    #AzureContainerRegistryTag: # string. Optional. Use when ImageSource = AzureContainerRegistry. Tag. 
    #DockerRepositoryAccess: 'public' # 'private' | 'public'. Required when ImageSource = invalidImage. Repository Access. Default: public.
    #dockerRegistryConnection: # string. Alias: RegistryConnectedServiceName. Required when DockerRepositoryAccess = private || ImageSource = PrivateRegistry. Registry Connection. 
    #PrivateRegistryImage: # string. Required when ImageSource = PrivateRegistry. Image. 
    #PrivateRegistryTag: # string. Optional. Use when ImageSource = PrivateRegistry. Tag. 
    #DockerNamespace: # string. Required when WebAppKind != app && WebAppKind != functionapp && WebAppKind != api && WebAppKind != mobileapp && ImageSource  = Registry. Registry or Namespace. 
    #DockerRepository: # string. Required when WebAppKind != app && WebAppKind != functionapp && WebAppKind != api && WebAppKind != mobileapp && ImageSource  = Registry. Image. 
    #DockerImageTag: # string. Optional. Use when WebAppKind != app && WebAppKind != functionapp && WebAppKind != api && WebAppKind != mobileapp && ImageSource  = Registry. Tag. 
    #VirtualApplication: # string. Optional. Use when WebAppKind != linux && WebAppKind != applinux && WebAppKind != "". Virtual application. 
    #Package: '$(System.DefaultWorkingDirectory)/**/*.zip' # string. Required when WebAppKind != linux && WebAppKind != applinux &&  WebAppKind != "". Package or folder. Default: $(System.DefaultWorkingDirectory)/**/*.zip.
    #packageForLinux: '$(System.DefaultWorkingDirectory)/**/*.zip' # string. Alias: BuiltinLinuxPackage. Required when WebAppKind != app && WebAppKind != functionapp && WebAppKind != api && WebAppKind != mobileapp && ImageSource = Builtin. Package or folder. Default: $(System.DefaultWorkingDirectory)/**/*.zip.
    #RuntimeStack: # string. Required when WebAppKind != app && WebAppKind != functionapp && WebAppKind != api && WebAppKind != mobileapp && ImageSource = Builtin. Runtime Stack. 
    #StartupCommand: # string. Optional. Use when WebAppKind = applinux || WebAppKind = linux. Startup command. 
  # Output
    #WebAppUri: # string. Optional. Use when WebAppKind != "". App Service URL. 
  # Post Deployment Action
    #ScriptType: # 'Inline Script' | 'File Path'. Optional. Use when WebAppKind != "". Deployment script type. 
    #InlineScript: ':: You can provide your deployment commands here. One command per line.' # string. Required when ScriptType == Inline Script && WebAppKind != "". Inline Script. Default: :: You can provide your deployment commands here. One command per line..
    #ScriptPath: # string. Required when ScriptType == File Path && WebAppKind != "". Deployment script path. 
  # File Transforms & Variable Substitution Options
    #GenerateWebConfig: false # boolean. Optional. Use when WebAppKind != linux && WebAppKind != applinux && WebAppKind != "" && Package NotEndsWith .war. Generate Web.config. Default: false.
    #WebConfigParameters: # string. Required when GenerateWebConfig == true && WebAppKind != linux && WebAppKind != applinux && WebAppKind != "" && Package NotEndsWith .war. Web.config parameters. 
    #enableXmlTransform: false # boolean. Alias: XmlTransformation. Optional. Use when WebAppKind != linux && WebAppKind != applinux && WebAppKind != "" && Package NotEndsWith .war. XML transformation. Default: false.
    #enableXmlVariableSubstitution: false # boolean. Alias: XmlVariableSubstitution. Optional. Use when WebAppKind != linux && WebAppKind != applinux && WebAppKind != "" && Package NotEndsWith .war. XML variable substitution. Default: false.
    #JSONFiles: # string. Optional. Use when WebAppKind != linux && WebAppKind != applinux && WebAppKind != "" && Package NotEndsWith .war. JSON variable substitution. 
  # Application and Configuration Settings
    #AppSettings: # string. App settings. 
    #ConfigurationSettings: # string. Configuration settings. 
  # Additional Deployment Options
    #TakeAppOfflineFlag: false # boolean. Optional. Use when WebAppKind != linux && WebAppKind != applinux && WebAppKind != "". Take App Offline. Default: false.
    #UseWebDeploy: false # boolean. Optional. Use when WebAppKind != linux && WebAppKind != applinux && WebAppKind != "". Publish using Web Deploy. Default: false.
    #SetParametersFile: # string. Optional. Use when UseWebDeploy == true && WebAppKind != linux && WebAppKind != applinux && WebAppKind != "". SetParameters file. 
    #RemoveAdditionalFilesFlag: false # boolean. Optional. Use when UseWebDeploy == true && WebAppKind != linux && WebAppKind != applinux && WebAppKind != "". Remove additional files at destination. Default: false.
    #ExcludeFilesFromAppDataFlag: false # boolean. Optional. Use when UseWebDeploy == true && WebAppKind != linux && WebAppKind != applinux && WebAppKind != "". Exclude files from the App_Data folder. Default: false.
    #AdditionalArguments: # string. Optional. Use when UseWebDeploy == true && WebAppKind != linux && WebAppKind != applinux && WebAppKind != "". Additional arguments. 
    #RenameFilesFlag: false # boolean. Optional. Use when UseWebDeploy == true && WebAppKind != linux && WebAppKind != applinux && WebAppKind != "". Rename locked files. Default: false.
Inputs
azureSubscription-Azure subscriptionInput alias:ConnectedServiceName.string. Required.
azureSubscription
ConnectedServiceName
string
Specify the Azure Resource Manager subscription for the deployment.
appType-App typeInput alias:WebAppKind.string. Required. Allowed values:app(Web App),applinux(Linux Web App),functionapp(Function App (Not Recommended, Use Azure Functions Task)),api(API App),mobileapp(Mobile App). Default value:app.
appType
WebAppKind
string
app
applinux
functionapp
api
mobileapp
app
Specify the type of web app to deploy.
Note: Specify Linux Web App for built-in platform images or custom container image deployments.
appType-App typeInput alias:WebAppKind.string. Required. Allowed values:app(Web App),applinux(Linux Web App),functionapp(Function App),api(API App),mobileapp(Mobile App). Default value:app.
appType
WebAppKind
string
app
applinux
functionapp
api
mobileapp
app
Specify the type of web app to deploy.
Note: Specify Linux Web App for built-in platform images or custom container image deployments.
WebAppName-App Service namestring. Required.
WebAppName
string
Specify the name of an existing Azure App Service. App services based on the selected app type will only be listed when using the task assistant.
DeployToSlotFlag-Deploy to slotboolean. Optional. Use whenWebAppKind != "". Default value:false.
DeployToSlotFlag
boolean
WebAppKind != ""
false
Use this option to deploy to an existing slot other than the Production slot. If this option is not selected, then the Azure App Service will be deployed to the Production slot.
ResourceGroupName-Resource groupstring. Required whenDeployToSlotFlag = true.
ResourceGroupName
string
DeployToSlotFlag = true
Specify the Azure Resource group that contains the Azure App Service specified above.
SlotName-Slotstring. Required whenDeployToSlotFlag = true.
SlotName
string
DeployToSlotFlag = true
Specify an existing slot other than the Production slot.
ImageSource-Image Sourcestring. Optional. Use whenWebAppKind = applinux || WebAppKind = linux. Allowed values:Registry(Container Registry),Builtin(Built-in Image). Default value:Registry.
ImageSource
string
WebAppKind = applinux || WebAppKind = linux
Registry
Builtin
Registry
App Service on Linux offers two different options to publish your application:
Custom image deployment or app deployment with a built-in platform image.
AzureContainerRegistry-Registrystring. Required whenImageSource = AzureContainerRegistry.
AzureContainerRegistry
string
ImageSource = AzureContainerRegistry
A globally unique top-level domain name for your specific registry.
Note: A fully qualified image name will be of the format:<registry>/<repository>:<tag>. For example,myregistry.azurecr.io/nginx:latest.
<registry>
<repository>
<tag>
myregistry.azurecr.io
nginx:latest
AzureContainerRegistryLoginServer-Registry Login Server Namestring. Optional. Use whenImageSource = invalidimagesource.
AzureContainerRegistryLoginServer
string
ImageSource = invalidimagesource
Specify an Azure container registry login server name.
AzureContainerRegistryImage-Imagestring. Required whenImageSource = AzureContainerRegistry.
AzureContainerRegistryImage
string
ImageSource = AzureContainerRegistry
The name of the repository where the container images are stored.
Note: A fully qualified image name will be of the format:<registry>/<repository>:<tag>. For example,myregistry.azurecr.io/nginx:latest.
<registry>
<repository>
<tag>
myregistry.azurecr.io
nginx
latest
AzureContainerRegistryTag-Tagstring. Optional. Use whenImageSource = AzureContainerRegistry.
AzureContainerRegistryTag
string
ImageSource = AzureContainerRegistry
This is the mechanism that registries use to give Docker images a version.
Note: A fully qualified image name will be of the format:<registry>/<repository>:<tag>. For example,myregistry.azurecr.io/nginx:latest.
<registry>
<repository>
<tag>
myregistry.azurecr.io
nginx
latest
DockerRepositoryAccess-Repository Accessstring. Required whenImageSource = invalidImage. Allowed values:private,public. Default value:public.
DockerRepositoryAccess
string
ImageSource = invalidImage
private
public
public
Specify the Docker repository access.
dockerRegistryConnection-Registry ConnectionInput alias:RegistryConnectedServiceName.string. Required whenDockerRepositoryAccess = private || ImageSource = PrivateRegistry.
dockerRegistryConnection
RegistryConnectedServiceName
string
DockerRepositoryAccess = private || ImageSource = PrivateRegistry
Specify the registry connection.
PrivateRegistryImage-Imagestring. Required whenImageSource = PrivateRegistry.
PrivateRegistryImage
string
ImageSource = PrivateRegistry
The name of the repository where the container images are stored.
Note: A fully qualified image name will be of the format:<registry><repository>:<tag>. For example,myregistry.azurecr.io/nginx:latest.
<registry>
<repository>
<tag>
myregistry.azurecr.io
nginx
latest
PrivateRegistryTag-Tagstring. Optional. Use whenImageSource = PrivateRegistry.
PrivateRegistryTag
string
ImageSource = PrivateRegistry
Tags are the mechanism that registries use to give Docker images a version.
Note: A fully qualified image name will be of the format: '<registry>/<repository>:<tag>'. For example,myregistry.azurecr.io/nginx:latest.
<registry>
<repository>
<tag>
myregistry.azurecr.io
nginx
latest
DockerNamespace-Registry or Namespacestring. Required whenWebAppKind != app && WebAppKind != functionapp && WebAppKind != api && WebAppKind != mobileapp && ImageSource  = Registry.
DockerNamespace
string
WebAppKind != app && WebAppKind != functionapp && WebAppKind != api && WebAppKind != mobileapp && ImageSource  = Registry
A globally unique top-level domain name for your specific registry or namespace.
Note: A fully qualified image name will be of the format:<registry or namespace>/<repository>:<tag>. For example,myregistry.azurecr.io/nginx:latest.
<registry or namespace>
<repository>
<tag>
myregistry.azurecr.io
nginx
latest
DockerRepository-Imagestring. Required whenWebAppKind != app && WebAppKind != functionapp && WebAppKind != api && WebAppKind != mobileapp && ImageSource  = Registry.
DockerRepository
string
WebAppKind != app && WebAppKind != functionapp && WebAppKind != api && WebAppKind != mobileapp && ImageSource  = Registry
The name of the repository where the container images are stored.
Note: A fully qualified image name will be of the format: '<registry or namespace>/<repository>:<tag>. For example,myregistry.azurecr.io/nginx:latest.
<registry or namespace>
<repository>
<tag>
myregistry.azurecr.io
nginx
latest
DockerImageTag-Tagstring. Optional. Use whenWebAppKind != app && WebAppKind != functionapp && WebAppKind != api && WebAppKind != mobileapp && ImageSource  = Registry.
DockerImageTag
string
WebAppKind != app && WebAppKind != functionapp && WebAppKind != api && WebAppKind != mobileapp && ImageSource  = Registry
This is the mechanism that registries use to give Docker images a version.
Note: A fully qualified image name will be of the format: '<registry or namespace>/<repository>:<tag>'. For example,myregistry.azurecr.io/nginx:latest.
<registry or namespace>
<repository>
<tag>
myregistry.azurecr.io
nginx
latest
VirtualApplication-Virtual applicationstring. Optional. Use whenWebAppKind != linux && WebAppKind != applinux && WebAppKind != "".
VirtualApplication
string
WebAppKind != linux && WebAppKind != applinux && WebAppKind != ""
Specify the name of the Virtual Application that has been configured in the Azure portal. The option is not required for deployments to the App Service root.
Package-Package or folderstring. Required whenWebAppKind != linux && WebAppKind != applinux &&  WebAppKind != "". Default value:$(System.DefaultWorkingDirectory)/**/*.zip.
Package
string
WebAppKind != linux && WebAppKind != applinux &&  WebAppKind != ""
$(System.DefaultWorkingDirectory)/**/*.zip
The file path to the package or a folder containing app service contents generated by MSBuild or a compressed zip or war file.
Variables areBuildandRelease.Wildcardsare supported.
For example,$(System.DefaultWorkingDirectory)/\*\*/\*.zipor$(System.DefaultWorkingDirectory)/\*\*/\*.war.
$(System.DefaultWorkingDirectory)/\*\*/\*.zip
$(System.DefaultWorkingDirectory)/\*\*/\*.war
packageForLinux-Package or folderInput alias:BuiltinLinuxPackage.string. Required whenWebAppKind != app && WebAppKind != functionapp && WebAppKind != api && WebAppKind != mobileapp && ImageSource = Builtin. Default value:$(System.DefaultWorkingDirectory)/**/*.zip.
packageForLinux
BuiltinLinuxPackage
string
WebAppKind != app && WebAppKind != functionapp && WebAppKind != api && WebAppKind != mobileapp && ImageSource = Builtin
$(System.DefaultWorkingDirectory)/**/*.zip
The file path to the package or a folder containing app service contents generated by MSBuild or a compressed zip or war file.
Variables areBuildandRelease.Wildcardsare supported.
For example,$(System.DefaultWorkingDirectory)/\*\*/\*.zipor$(System.DefaultWorkingDirectory)/\*\*/\*.war.
$(System.DefaultWorkingDirectory)/\*\*/\*.zip
$(System.DefaultWorkingDirectory)/\*\*/\*.war
RuntimeStack-Runtime Stackstring. Required whenWebAppKind != app && WebAppKind != functionapp && WebAppKind != api && WebAppKind != mobileapp && ImageSource = Builtin.
RuntimeStack
string
WebAppKind != app && WebAppKind != functionapp && WebAppKind != api && WebAppKind != mobileapp && ImageSource = Builtin
Specify the framework and version.
StartupCommand-Startup commandstring. Optional. Use whenWebAppKind = applinux || WebAppKind = linux.
StartupCommand
string
WebAppKind = applinux || WebAppKind = linux
Specify the startup command.
WebAppUri-App Service URLstring. Optional. Use whenWebAppKind != "".
WebAppUri
string
WebAppKind != ""
Specify a name for the output variable that is generated for the URL of the Azure App Service. The variable can be used in subsequent tasks.
ScriptType-Deployment script typestring. Optional. Use whenWebAppKind != "". Allowed values:Inline Script,File Path(Script File Path).
ScriptType
string
WebAppKind != ""
Inline Script
File Path
Customizes the deployment by providing a script that will run on the Azure App service once the task has completed the deployment successfully . For example, this can restore packages for Node, PHP, and Python applications. Learn more aboutAzure App Service Deployment.
InlineScript-Inline Scriptstring. Required whenScriptType == Inline Script && WebAppKind != "". Default value::: You can provide your deployment commands here. One command per line..
InlineScript
string
ScriptType == Inline Script && WebAppKind != ""
:: You can provide your deployment commands here. One command per line.
ScriptPath-Deployment script pathstring. Required whenScriptType == File Path && WebAppKind != "".
ScriptPath
string
ScriptType == File Path && WebAppKind != ""
GenerateWebConfig-Generate Web.configboolean. Optional. Use whenWebAppKind != linux && WebAppKind != applinux && WebAppKind != "" && Package NotEndsWith .war. Default value:false.
GenerateWebConfig
boolean
WebAppKind != linux && WebAppKind != applinux && WebAppKind != "" && Package NotEndsWith .war
false
A standardWeb.configwill be generated and deployed to Azure App Service if the application does not have one. The values inweb.configcan be edited and vary based on the application framework. For example, for thenode.jsapplication,web.configwill have startup file andiis_nodemodule values. Learn more aboutAzure App Service Deployment.
Web.config
web.config
node.js
web.config
iis_node
WebConfigParameters-Web.config parametersstring. Required whenGenerateWebConfig == true && WebAppKind != linux && WebAppKind != applinux && WebAppKind != "" && Package NotEndsWith .war.
WebConfigParameters
string
GenerateWebConfig == true && WebAppKind != linux && WebAppKind != applinux && WebAppKind != "" && Package NotEndsWith .war
Edits values like startup files in the generatedweb.configfile. This edit feature is only for the generatedweb.config. Learn more aboutAzure App Service Deployment.
web.config
web.config
AppSettings-App settingsstring.
AppSettings
string
Edits web app application settings following the syntax -key value . Values containing spaces should be enclosed in double quotes.
Examples:-Port 5000-RequestTimeout 5000-WEBSITE_TIME_ZONE"Eastern Standard Time".
-Port 5000
-RequestTimeout 5000
-WEBSITE_TIME_ZONE
"Eastern Standard Time"
ConfigurationSettings-Configuration settingsstring.
ConfigurationSettings
string
Edits web app configuration settings following the syntax-keyvalue. Values containing spaces should be enclosed in double quotes.
-key
Examples:-phpVersion 5.6-linuxFxVersion: node|6.11.
-phpVersion 5.6
-linuxFxVersion: node|6.11
TakeAppOfflineFlag-Take App Offlineboolean. Optional. Use whenWebAppKind != linux && WebAppKind != applinux && WebAppKind != "". Default value:false.
TakeAppOfflineFlag
boolean
WebAppKind != linux && WebAppKind != applinux && WebAppKind != ""
false
Use this option to take the Azure App Service offline by placing anapp_offline.htmfile in the root directory of the App Service before the sync operation begins. The file will be removed after the sync operation completes successfully.
app_offline.htm
UseWebDeploy-Publish using Web Deployboolean. Optional. Use whenWebAppKind != linux && WebAppKind != applinux && WebAppKind != "". Default value:false.
UseWebDeploy
boolean
WebAppKind != linux && WebAppKind != applinux && WebAppKind != ""
false
Publish using Web Deployoptions are supported only when using Windows agent. On other platforms, the task relies onKudu REST APIsto deploy the Azure App Service, and following options are not supported.
Publish using Web Deploy
SetParametersFile-SetParameters filestring. Optional. Use whenUseWebDeploy == true && WebAppKind != linux && WebAppKind != applinux && WebAppKind != "".
SetParametersFile
string
UseWebDeploy == true && WebAppKind != linux && WebAppKind != applinux && WebAppKind != ""
The location of theSetParameters.xmlfile to use.
SetParameters.xml
RemoveAdditionalFilesFlag-Remove additional files at destinationboolean. Optional. Use whenUseWebDeploy == true && WebAppKind != linux && WebAppKind != applinux && WebAppKind != "". Default value:false.
RemoveAdditionalFilesFlag
boolean
UseWebDeploy == true && WebAppKind != linux && WebAppKind != applinux && WebAppKind != ""
false
Use this option to delete files on the Azure App Service that have no matching files in the App Service package or folder.
Note: This will also remove all files related to any extension installed on this Azure App Service. To prevent this, select theExclude files from App_Data foldercheckbox.
Exclude files from App_Data folder
ExcludeFilesFromAppDataFlag-Exclude files from the App_Data folderboolean. Optional. Use whenUseWebDeploy == true && WebAppKind != linux && WebAppKind != applinux && WebAppKind != "". Default value:false.
ExcludeFilesFromAppDataFlag
boolean
UseWebDeploy == true && WebAppKind != linux && WebAppKind != applinux && WebAppKind != ""
false
Use this option to prevent files in theApp_Datafolder from being deployed to/deleted from the Azure App Service.
App_Data
AdditionalArguments-Additional argumentsstring. Optional. Use whenUseWebDeploy == true && WebAppKind != linux && WebAppKind != applinux && WebAppKind != "".
AdditionalArguments
string
UseWebDeploy == true && WebAppKind != linux && WebAppKind != applinux && WebAppKind != ""
The additional Web Deploy arguments following the syntax-key:value.
-key:value
These will be applied when deploying the Azure App Service. Examples:-disableLink:AppPoolExtension-disableLink:ContentExtension.
-disableLink:AppPoolExtension
-disableLink:ContentExtension
See more examples ofWeb Deploy Operation Settings.
RenameFilesFlag-Rename locked filesboolean. Optional. Use whenUseWebDeploy == true && WebAppKind != linux && WebAppKind != applinux && WebAppKind != "". Default value:false.
RenameFilesFlag
boolean
UseWebDeploy == true && WebAppKind != linux && WebAppKind != applinux && WebAppKind != ""
false
Use this option to enable msdeploy flagMSDEPLOY_RENAME_LOCKED_FILES=1in Azure App Service application settings. The option enables msdeploy to rename locked files that are locked during app deployment.
MSDEPLOY_RENAME_LOCKED_FILES=1
enableXmlTransform-XML transformationInput alias:XmlTransformation.boolean. Optional. Use whenWebAppKind != linux && WebAppKind != applinux && WebAppKind != "" && Package NotEndsWith .war. Default value:false.
enableXmlTransform
XmlTransformation
boolean
WebAppKind != linux && WebAppKind != applinux && WebAppKind != "" && Package NotEndsWith .war
false
The config transforms will be run for*.Release.configand*.<EnvironmentName>.configon the*.config file.
*.Release.config
*.<EnvironmentName>.config
*.config file
Config transforms will be run prior to the Variable Substitution.
XML transformations are supported only for Windows platform.
enableXmlVariableSubstitution-XML variable substitutionInput alias:XmlVariableSubstitution.boolean. Optional. Use whenWebAppKind != linux && WebAppKind != applinux && WebAppKind != "" && Package NotEndsWith .war. Default value:false.
enableXmlVariableSubstitution
XmlVariableSubstitution
boolean
WebAppKind != linux && WebAppKind != applinux && WebAppKind != "" && Package NotEndsWith .war
false
Variables defined in the build or release pipeline will be matched against thekeyornameentries in theappSettings,applicationSettings, andconnectionStringssections of any config file andparameters.xml. Variable Substitution is run after config transforms.
key
name
appSettings
applicationSettings
connectionStrings
parameters.xml
Note: If the same variables are defined in the release pipeline and in the environment, then the environment variables will supersede the release pipeline variables.
JSONFiles-JSON variable substitutionstring. Optional. Use whenWebAppKind != linux && WebAppKind != applinux && WebAppKind != "" && Package NotEndsWith .war.
JSONFiles
string
WebAppKind != linux && WebAppKind != applinux && WebAppKind != "" && Package NotEndsWith .war
Provides a new lines-separated list of JSON files to substitute the variable values. Files names are to be provided relative to the root folder.
To substitute JSON variables that are nested or hierarchical, specify them usingJSONPathexpressions.
JSONPath
For example, to replace the value ofConnectionStringin the sample below, you need to define a variable asData.DefaultConnection.ConnectionStringin the build/release pipeline (or the release pipelineâs environment).
ConnectionString
Data.DefaultConnection.ConnectionString
{
  "Data": {
    "DefaultConnection": {
      "ConnectionString": "Server=(localdb)\SQLEXPRESS;Database=MyDB;Trusted_Connection=True"
    }
  }
}
{
  "Data": {
    "DefaultConnection": {
      "ConnectionString": "Server=(localdb)\SQLEXPRESS;Database=MyDB;Trusted_Connection=True"
    }
  }
}
Variable Substitution is run after configuration transforms.
Note: pipeline variables are excluded in substitution.
Task control options
All tasks have control options in addition to their task inputs. For more information, seeControl options and common task properties.
Output variables
None.
Remarks
There is a newer version of this task available. For more information, seeAzureRmWebAppDeployment@4.
Troubleshooting
The Azure App Service deploy task supports connecting to Microsoft Azure with an ARM service connection using Microsoft Entra ID, unless the following three conditions are present:
You are using Web Deploy package format on a Windows agent
Your agent is running with an older version ofmsdeploy.exe(for example when using thewindows-2019hosted agent image)
Basic authentication is disabled for your Azure App Service
If these three conditions are present, you will receive an error likeApp Service is configured to not use basic authentication. This requires Web Deploy msdeploy.exe version 7.1.7225.2108 or higher. You need a version of Visual Studio that includes an updated version of msdeploy.exe. For more information, visit https://aka.ms/azdo-webapp-msdeploy.
App Service is configured to not use basic authentication. This requires Web Deploy msdeploy.exe version 7.1.7225.2108 or higher. You need a version of Visual Studio that includes an updated version of msdeploy.exe. For more information, visit https://aka.ms/azdo-webapp-msdeploy.
To resolve this issue, you can choose from the following options, in order of preference.
Update the agent image. If you are using hosted agents, move fromwindows-2019towindows-2022(orwindows-latest). If you are using self-hosted agents, install Visual Studio 2022 on the agent to get a newer version ofmsdeploy.exe.
If you are dependent on an older agent image and can't update the agent for your pipeline, consider splitting the job so that the Azure App Service deploy task runs onwindows-2022(orwindows-latest).
If neither of these options is possible, you canenable basic authenticationfor your Azure App Service.
Requirements
Feedback
Was this page helpful?
Additional resources