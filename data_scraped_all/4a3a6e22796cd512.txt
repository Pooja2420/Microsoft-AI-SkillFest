Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Quickstart: Set and retrieve a secret from Azure Key Vault using PowerShell
Article
2024-08-27
4 contributors
In this article
Azure Key Vault is a cloud service that works as a secure secrets store. You can securely store keys, passwords, certificates, and other secrets. For more information on Key Vault, you may review theOverview. In this quickstart, you use Azure PowerShell to create a key vault. You then store a secret in the newly created vault.
If you don't have an Azure subscription, create afree accountbefore you begin.
Azure Cloud Shell
Azure hosts Azure Cloud Shell, an interactive shell environment that you can use through your browser. You can use either Bash or PowerShell with Cloud Shell to work with Azure services. You can use the Cloud Shell preinstalled commands to run the code in this article, without having to install anything on your local environment.
To start Azure Cloud Shell:
To use Azure Cloud Shell:
Start Cloud Shell.
Start Cloud Shell.
Select theCopybutton on a code block (or command block) to copy the code or command.
Select theCopybutton on a code block (or command block) to copy the code or command.
Paste the code or command into the Cloud Shell session by selectingCtrl+Shift+Von Windows and Linux, or by selectingCmd+Shift+Von macOS.
Paste the code or command into the Cloud Shell session by selectingCtrl+Shift+Von Windows and Linux, or by selectingCmd+Shift+Von macOS.
SelectEnterto run the code or command.
SelectEnterto run the code or command.
If you choose to install and use PowerShell locally, this tutorial requires Azure PowerShell module version 5.0.0 or later. TypeGet-InstalledModule -Name Azto find the version. If you need to upgrade, seeHow to install Azure PowerShell. If you are running PowerShell locally, you also need to runConnect-AzAccountto create a connection with Azure.
Get-InstalledModule -Name Az
Connect-AzAccount
Connect-AzAccount
Connect-AzAccount
Create a resource group
A resource group is a logical container into which Azure resources are deployed and managed. Use the Azure PowerShellNew-AzResourceGroupcmdlet to create a resource group namedmyResourceGroupin theeastuslocation.
New-AzResourceGroup -Name "myResourceGroup" -Location "EastUS"
New-AzResourceGroup -Name "myResourceGroup" -Location "EastUS"
Create a key vault
Use the Azure PowerShellNew-AzKeyVaultcmdlet to create a Key Vault in the resource group from the previous step. You need to provide some information:
Key vault name: A string of 3 to 24 characters that can contain only numbers (0-9), letters (a-z, A-Z), and hyphens (-)ImportantEach key vault must have a unique name. Replace <your-unique-keyvault-name> with the name of your key vault in the following examples.
Key vault name: A string of 3 to 24 characters that can contain only numbers (0-9), letters (a-z, A-Z), and hyphens (-)
Important
Each key vault must have a unique name. Replace <your-unique-keyvault-name> with the name of your key vault in the following examples.
Resource group name:myResourceGroup.
Resource group name:myResourceGroup.
The location:EastUS.
The location:EastUS.
New-AzKeyVault -Name "<your-unique-keyvault-name>" -ResourceGroupName "myResourceGroup" -Location "EastUS"
New-AzKeyVault -Name "<your-unique-keyvault-name>" -ResourceGroupName "myResourceGroup" -Location "EastUS"
The output of this cmdlet shows properties of the newly created key vault. Take note of these two properties:
Vault Name: The name you provided to the -Name parameter.
Vault URI: In the example, this URI is https://<your-unique-keyvault-name>.vault.azure.net/. Applications that use your vault through its REST API must use this URI.
At this point, your Azure account is the only one authorized to perform any operations on this new vault.
Give your user account permissions to manage secrets in Key Vault
To gain permissions to your key vault throughRole-Based Access Control (RBAC), assign a role to your "User Principal Name" (UPN) using the Azure PowerShell cmdletNew-AzRoleAssignment.
New-AzRoleAssignment -SignInName "<upn>" -RoleDefinitionName "Key Vault Secrets Officer" -Scope "/subscriptions/<subscription-id>/resourceGroups/<resource-group-name>/providers/Microsoft.KeyVault/vaults/<your-unique-keyvault-name>"
New-AzRoleAssignment -SignInName "<upn>" -RoleDefinitionName "Key Vault Secrets Officer" -Scope "/subscriptions/<subscription-id>/resourceGroups/<resource-group-name>/providers/Microsoft.KeyVault/vaults/<your-unique-keyvault-name>"
Replace <upn>, <subscription-id>, <resource-group-name> and <your-unique-keyvault-name> with your actual values. Your UPN will typically be in the format of an email address (e.g., username@domain.com).
Adding a secret to Key Vault
To add a secret to the vault, you just need to take a couple of steps. In this case, you add a password that could be used by an application. The password is calledExamplePasswordand stores the value ofhVFkk965BuUvin it.
First, run the following command and enter the valuehVFkk965BuUvwhen prompted to convert it to a secure string:
$secretvalue = Read-Host -Prompt 'Enter the example password' -AsSecureString
$secretvalue = Read-Host -Prompt 'Enter the example password' -AsSecureString
Then, use the Azure PowerShellSet-AzKeyVaultSecretcmdlet to create a secret in Key Vault calledExamplePasswordwith the valuehVFkk965BuUv:
$secret = Set-AzKeyVaultSecret -VaultName "<your-unique-keyvault-name>" -Name "ExamplePassword" -SecretValue $secretvalue
$secret = Set-AzKeyVaultSecret -VaultName "<your-unique-keyvault-name>" -Name "ExamplePassword" -SecretValue $secretvalue
Retrieve a secret from Key Vault
To view the value contained in the secret as plain text, use the Azure PowerShellGet-AzKeyVaultSecretcmdlet:
$secret = Get-AzKeyVaultSecret -VaultName "<your-unique-keyvault-name>" -Name "ExamplePassword" -AsPlainText
$secret = Get-AzKeyVaultSecret -VaultName "<your-unique-keyvault-name>" -Name "ExamplePassword" -AsPlainText
Now, you have created a Key Vault, stored a secret, and retrieved it.
Clean up resources
Other quickstarts and tutorials in this collection build upon this quickstart. If you plan to continue on to work with other quickstarts and tutorials, you may want to leave these resources in place.
When no longer needed, you can use theRemove-AzResourceGroupcommand to remove the resource group, Key Vault, and all related resources.
Remove-AzResourceGroup -Name myResourceGroup
Remove-AzResourceGroup -Name myResourceGroup
Next steps
In this quickstart, you created a Key Vault and stored a secret in it. To learn more about Key Vault and how to integrate it with your applications, continue on to the articles below.
Read anOverview of Azure Key Vault
Learn how tostore multiline secrets in Key Vault
See the reference for theAzure PowerShell Key Vault cmdlets
Review theKey Vault security overview
Feedback
Was this page helpful?
Additional resources