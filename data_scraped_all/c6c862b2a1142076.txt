Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Integrate IMS programs on IBM mainframes with Standard workflows in Azure Logic Apps
Article
2025-04-08
2 contributors
In this article
Applies to:Azure Logic Apps (Standard)
To access and run IBM mainframe apps on Information Management System (IMS) systems from Standard workflows in Azure Logic Apps, you can use theIMS Program Callbuilt-in, service provider-based connector. IMS provides a Transaction Program (TP) Monitor with an integrated Transaction Manager (TM) and hierarchical database. The connector communicates with IBM IMS transaction programs by using IMS Connect, which is an IMS TM network component. This component provides high performance communications for IMS systems between one or more TCP/IP clients and one or more IMS systems. The IMS connector is available in all Azure Logic Apps regions except for Azure Government and Microsoft Azure operated by 21Vianet.
This article describes the following aspects about the IMS connector:
Scenarios for using the IMS connector in Azure Logic Apps
Prerequisites and setup for using the IMS connector
Steps for adding IMS connector actions to your Standard logic app workflow
Review the connector usage scenarios
IMS systems were one of the first mission-critical systems to run on mainframes. MicrosoftHost Integration Server (HIS)provides connectivity to IMS systems by following two models: IMS Connect and APPC LU6.2. Customers have used the HIS Transaction Integrator to integrate their IMS systems with Windows on-premises for many years. TheIMS Program Callconnector uses the IMS Connect model to interact with IMS transaction programs through TCP/IP.
The following diagram shows how the IMS connector interacts with an IBM mainframe system:

To extend these hybrid cloud scenarios, the IMS connector in a Standard workflow works with theHIS Designer for Logic Apps, which you can use to create aprogram definitionorprogram mapof the mainframe transaction program. For this task, the HIS Designer converts that information into metadata that the IMS connector uses when running an action in your workflow.
After you generate the metadata file as a Host Integration Designer XML (HIDX) file from the HIS Designer, you can add that file as a map artifact to your Standard logic app resource. That way, your workflow can access your app's metadata when you add an IMS connector action. The connector reads the metadata file from your logic app resource, and dynamically presents the parameters to use with the IMS connector in your workflow. You can then provide parameters to the host application, and the connector returns the results to your workflow. As a result, you can integrate your legacy apps with Azure, Microsoft, other apps, services, and systems that Azure Logic Apps supports.
Connector technical reference
Currently, one operation is available for the IMS connector:Call an IMS program. The following table summarizes the usage for this action:
This operation also includes advanced parameters, which appear after you select a method, for you to select and use with the selected method. These parameters vary based on your HIDX file and the method that you select.
Prerequisites
An Azure account and subscription. If you don't have an Azure subscription,sign up for a free Azure account.
An Azure account and subscription. If you don't have an Azure subscription,sign up for a free Azure account.
Access to the mainframe that hosts the IMS system.
Access to the mainframe that hosts the IMS system.
The Host Integration Designer XML (HIDX) file that provides the necessary metadata for theIMS Program Callconnector to execute your mainframe program.To create this HIDX file,download and install the Host Integration Server (HIS) Designer for Azure Logic Apps. The only prerequisite isMicrosoft .NET Framework 4.8.To invoke a mainframe program, your workflow needs to understand the mainframe program's type, parameters, and return values. The IMS connector manages the process and data conversions. These conversions provide input data from the workflow to the mainframe program and send any output data generated from the mainframe program to the workflow. The connector also provides tabular data definition and code page translation. For this process, Azure Logic Apps requires that you provide this information as metadata.To create this metadata, use theHIS Designer for Logic Apps. With this tool, you can manually create the methods, parameters, and return values that you can use in your workflow. The tool also allows you to import COBOL or RPG program definitions (copybooks) that provide this information.The tool generates a Host Integration Designer XML (HIDX) file that provides the necessary metadata for the connector. If you're using HIS, you can use the HIS Transaction Integrator (TI) Designer to create the HIDX file.
The Host Integration Designer XML (HIDX) file that provides the necessary metadata for theIMS Program Callconnector to execute your mainframe program.
To create this HIDX file,download and install the Host Integration Server (HIS) Designer for Azure Logic Apps. The only prerequisite isMicrosoft .NET Framework 4.8.
To invoke a mainframe program, your workflow needs to understand the mainframe program's type, parameters, and return values. The IMS connector manages the process and data conversions. These conversions provide input data from the workflow to the mainframe program and send any output data generated from the mainframe program to the workflow. The connector also provides tabular data definition and code page translation. For this process, Azure Logic Apps requires that you provide this information as metadata.
To create this metadata, use theHIS Designer for Logic Apps. With this tool, you can manually create the methods, parameters, and return values that you can use in your workflow. The tool also allows you to import COBOL or RPG program definitions (copybooks) that provide this information.
The tool generates a Host Integration Designer XML (HIDX) file that provides the necessary metadata for the connector. If you're using HIS, you can use the HIS Transaction Integrator (TI) Designer to create the HIDX file.
The Standard logic app workflow to use for integrating with the IMS system.The IMS connector doesn't have triggers, so use any trigger to start your workflow, such as theRecurrencetrigger orRequesttrigger. You can then add the IMS connector actions. To get started, create a blank workflow in your Standard logic app resource.
The Standard logic app workflow to use for integrating with the IMS system.
The IMS connector doesn't have triggers, so use any trigger to start your workflow, such as theRecurrencetrigger orRequesttrigger. You can then add the IMS connector actions. To get started, create a blank workflow in your Standard logic app resource.
Limitations
Currently, the IMS connector requires that you upload your HIDX file directly to your Standard logic app resource, not an integration account.
Define and generate metadata
After you download and install the HIS Designer for Azure Logic Apps, followthese steps to generate the HIDX file from the metadata artifact.
Upload the HIDX file
For your workflow to use the HIDX file, follow these steps:
Go to the folder where you saved your HIDX file, and copy the file.
Go to the folder where you saved your HIDX file, and copy the file.
In theAzure portal,upload the HIDX file as a map to your Standard logic app resource.
In theAzure portal,upload the HIDX file as a map to your Standard logic app resource.
Continue to the next section toadd an IMS action to your workflow.
Continue to the next section toadd an IMS action to your workflow.
Later in this article, when you add anIMS Program Callconnector action to your workflow for the first time, a prompt asks you to create a connection between your workflow and the mainframe system. After you create the connection, you can select your previously added HIDX file, the method to run, and the parameters to use.
Add an IMS action
Follow these steps to add an IMS action and configure the necessary parameters:
In theAzure portal, open your Standard logic app resource and workflow in the designer.
In theAzure portal, open your Standard logic app resource and workflow in the designer.
If you don't have a trigger to start your workflow, followthese steps to add the trigger that you want.This example continues with theRequesttrigger namedWhen a HTTP request is received:
If you don't have a trigger to start your workflow, followthese steps to add the trigger that you want.
This example continues with theRequesttrigger namedWhen a HTTP request is received:

To add an IMS connector action, followthese steps to add theIMS Program Callbuilt-in connector action namedCall an IMS Program.
To add an IMS connector action, followthese steps to add theIMS Program Callbuilt-in connector action namedCall an IMS Program.
After the connection details pane appears, provide the following information:ParameterRequiredValueDescriptionConnection NameYes<connection-name>The name for your connection.The IMS System IDYes<IMS-system-ID>The name of the IMS system where the IMS Connect model directs incoming requests.ITOC Exit NameNo<ITOC-exit-name>The name for the exit routine that IMS uses to handle incoming requests.MFS Mod NameNo<MFS-Mod-Name>The name associated with the outbound IMS message output descriptor.Use the HWSO1 Security ExitNoTrue or falseDirect the server to use the HWSO1 security exit.Server certificate common nameNo<server-cert-common-name>The name of the Transport Security layer (TLS) certificate to use.Code PageNo<code-page>The code page number to use for converting text.PasswordNo<password>The optional user password for connection authentication.Port NumberYes<port-number>The port number to use for connection authentication.Server NameYes<server-name>The server name.TimeoutNo<time-out>The time-out period in seconds while waiting for responses from the server.User NameNo<user-Name>The optional username for connection authentication.Use TLSNoTrue or falseSecure the connection with Transport Security Layer (TLS).Validate Server certificateNoTrue or falseValidate the server's certificate.For example:
After the connection details pane appears, provide the following information:
For example:

When you're done, selectCreate New.
When you're done, selectCreate New.
After the action details pane appears, in theParameterssection, provide the required information:ParameterRequiredValueDescriptionHIDX NameYes<HIDX-file-name>Select the IMS HIDX file that you want to use.Method NameYes<method-name>Select the method in the HIDX file that you want to use.Advanced parametersNoVariesThis list appears after you select a method so that you can add other parameters to use with the selected method. The available parameters vary based on your HIDX file and the method that you select.For example:Select HIDX file and methodSelect advanced parameters
After the action details pane appears, in theParameterssection, provide the required information:
For example:
Select HIDX file and method

Select advanced parameters

When you're done, save your workflow. On the designer toolbar, selectSave.
When you're done, save your workflow. On the designer toolbar, selectSave.
Test your workflow
Follow these steps to check your workflow and confirm the outputs:
To run your workflow, on the designer toolbar, selectRun>Run.After your workflow finishes running, the workflow's run history appears. Successful steps show check marks, while unsuccessful steps show an exclamation point (!).
To run your workflow, on the designer toolbar, selectRun>Run.
After your workflow finishes running, the workflow's run history appears. Successful steps show check marks, while unsuccessful steps show an exclamation point (!).
To review the inputs and outputs for each step, expand that step.
To review the inputs and outputs for each step, expand that step.
To review the outputs, selectSee raw outputs.
To review the outputs, selectSee raw outputs.
Related content
Check workflow status, view run history, and set up alerts in Azure Logic Apps
View metrics for workflow health and performance in Azure Logic Apps
Monitor and collect diagnostic data for workflows in Azure Logic Apps
Enable and view enhanced telemetry in Application Insights for Standard workflows in Azure Logic Apps
Feedback
Was this page helpful?
Additional resources