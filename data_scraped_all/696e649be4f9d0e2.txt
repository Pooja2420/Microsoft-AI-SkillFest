Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Using Azure CDN with CORS
Article
2025-03-31
15 contributors
In this article
Important
Azure CDN Standard from Microsoft (classic) will be retired onSeptember 30, 2027. To avoid any service disruption, it's important that youmigrate your Azure CDN Standard from Microsoft (classic) profilesto Azure Front Door Standard or Premium tier by September 30, 2027. For more information, seeAzure CDN Standard from Microsoft (classic) retirement.
Azure CDN from Edgio was retired onJanuary 15, 2025. For more information, seeAzure CDN from Edgio retirement FAQ.
What is CORS?
CORS (cross-origin resource sharing) is an HTTP feature that enables a web application running under one domain to access resources in another domain. In order to reduce the possibility of cross-site scripting attacks, all modern web browsers implement a security restriction known assame-origin policy. This restriction prevents a web page from calling APIs in a different domain. CORS provides a secure way to allow one origin (the origin domain) to call APIs in another origin.
How it works
There are two types of CORS requests,simple requestsandcomplex requests.
For simple requests:
The browser sends the CORS request with an extraOriginHTTP request header. The value of the request header is the origin that served the parent page, which is defined as the combination ofprotocol,domain,andport.When a page from HTTPS://www.contoso.com attempts to access a user's data in the fabrikam.com origin, the following request header would be sent to fabrikam.com:Origin: https://www.contoso.com
The browser sends the CORS request with an extraOriginHTTP request header. The value of the request header is the origin that served the parent page, which is defined as the combination ofprotocol,domain,andport.When a page from HTTPS://www.contoso.com attempts to access a user's data in the fabrikam.com origin, the following request header would be sent to fabrikam.com:
Origin: https://www.contoso.com
Origin: https://www.contoso.com
The server might respond with any of the following headers:AnAccess-Control-Allow-Originheader in its response indicating which origin site is allowed. For example:Access-Control-Allow-Origin: https://www.contoso.comAn HTTP error code such as 403 if the server doesn't allow the cross-origin request after checking the Origin headerAnAccess-Control-Allow-Originheader with a wildcard that allows all origins:Access-Control-Allow-Origin: *
The server might respond with any of the following headers:
AnAccess-Control-Allow-Originheader in its response indicating which origin site is allowed. For example:Access-Control-Allow-Origin: https://www.contoso.com
AnAccess-Control-Allow-Originheader in its response indicating which origin site is allowed. For example:
Access-Control-Allow-Origin: https://www.contoso.com
Access-Control-Allow-Origin: https://www.contoso.com
An HTTP error code such as 403 if the server doesn't allow the cross-origin request after checking the Origin header
An HTTP error code such as 403 if the server doesn't allow the cross-origin request after checking the Origin header
AnAccess-Control-Allow-Originheader with a wildcard that allows all origins:Access-Control-Allow-Origin: *
AnAccess-Control-Allow-Originheader with a wildcard that allows all origins:
Access-Control-Allow-Origin: *
Access-Control-Allow-Origin: *
For complex requests:
A complex request is a CORS request where the browser is required to send apreflight request(that is, a preliminary probe) before sending the actual CORS request. The preflight request asks the server permission if the original CORS request can proceed and is anOPTIONSrequest to the same URL.
OPTIONS
Tip
For more details on CORS flows and common pitfalls, view theGuide to CORS for REST APIs.
Wildcard or single origin scenarios
CORS on Azure CDN works automatically without extra configurations when theAccess-Control-Allow-Originheader is set to wildcard (*) or a single origin. CDN cache the first response and subsequent requests use the same header.
If requests have already been made to the CDN prior to CORS being set on your origin, you need to purge content on your endpoint content to reload the content with theAccess-Control-Allow-Originheader.
Feedback
Was this page helpful?
Additional resources