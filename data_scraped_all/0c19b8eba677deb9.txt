Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Increase IOPS and throughput limits for Azure Premium SSDs and Standard SSD/HDDs
Article
2025-04-14
5 contributors
In this article
The Input/Output Operations Per Second (IOPS) and throughput limits for Azure Premium solid-state drives (SSD), Standard SSDs, and Standard hard disk drives (HDD) that are 513 GiB and larger can be increased by enabling performance plus. Enabling performance plus improves the experience for workloads that require high IOPS and throughput, such as database and transactional workloads. There's no extra charge for enabling performance plus on a disk.
Once enabled, the IOPS and throughput limits for an eligible disk increase to the higher maximum limits. To see the new IOPS and throughput limits for eligible disks, consult the columns that begin with "*Expanded" in theScalability and performance targets for VM disksarticle.
Limitations
Can only be enabled on Standard HDD, Standard SSD, and Premium SSD managed disks that are 513 GiB or larger
Can only be enabled on new disksTo work around this, create a snapshot of your disk, then create a new disk from the snapshot
To work around this, create a snapshot of your disk, then create a new disk from the snapshot
Not supported for disks recovered with Azure Site Recovery
Prerequisites
Either use the Azure Cloud Shell to run your commands or install a version of theAzure PowerShell module9.5 or newer, or a version of theAzure CLIthat is 2.44.0 or newer.
Enable performance plus
You need to create a new disk to use performance plus. The following scripts show how to create a disk with performance plus enabled and, if desired, attach it to a VM. The commands have been organized into self-contained steps for reliability.
Azure CLI
Azure PowerShell
Azure portal
Create a resource group
This step creates a resource group with a unique name.
export RANDOM_SUFFIX=$(openssl rand -hex 3)
export MY_RG="PerfPlusRG$RANDOM_SUFFIX"
export REGION="WestUS2"
az group create -g $MY_RG -l $REGION
export RANDOM_SUFFIX=$(openssl rand -hex 3)
export MY_RG="PerfPlusRG$RANDOM_SUFFIX"
export REGION="WestUS2"
az group create -g $MY_RG -l $REGION
Results:
{
  "id": "/subscriptions/xxxxx/resourceGroups/PerfPlusRGxxx",
  "location": "WestUS2",
  "name": "PerfPlusRGxxx",
  "properties": {
    "provisioningState": "Succeeded"
  }
}
{
  "id": "/subscriptions/xxxxx/resourceGroups/PerfPlusRGxxx",
  "location": "WestUS2",
  "name": "PerfPlusRGxxx",
  "properties": {
    "provisioningState": "Succeeded"
  }
}
Create a new disk with performance plus enabled
This step creates a new disk of 513 GiB (or larger) with performance plus enabled using a valid SKU value.
export MY_DISK="PerfPlusDisk$RANDOM_SUFFIX"
export SKU="Premium_LRS"
export DISK_SIZE=513
az disk create -g $MY_RG -n $MY_DISK --size-gb $DISK_SIZE --sku $SKU -l $REGION --performance-plus true
export MY_DISK="PerfPlusDisk$RANDOM_SUFFIX"
export SKU="Premium_LRS"
export DISK_SIZE=513
az disk create -g $MY_RG -n $MY_DISK --size-gb $DISK_SIZE --sku $SKU -l $REGION --performance-plus true
Results:
{
  "id": "/subscriptions/xxxxx/resourceGroups/PerfPlusRGxxx/providers/Microsoft.Compute/disks/PerfPlusDiskxxx",
  "location": "WestUS2",
  "name": "PerfPlusDiskxxx",
  "properties": {
    "provisioningState": "Succeeded",
    "diskSizeGb": 513,
    "sku": "Premium_LRS",
    "performancePlus": true
  },
  "type": "Microsoft.Compute/disks"
}
{
  "id": "/subscriptions/xxxxx/resourceGroups/PerfPlusRGxxx/providers/Microsoft.Compute/disks/PerfPlusDiskxxx",
  "location": "WestUS2",
  "name": "PerfPlusDiskxxx",
  "properties": {
    "provisioningState": "Succeeded",
    "diskSizeGb": 513,
    "sku": "Premium_LRS",
    "performancePlus": true
  },
  "type": "Microsoft.Compute/disks"
}
Attempt to attach the disk to a VM
This optional step attempts to attach the disk to an existing VM. It first checks if the VM exists and then proceeds accordingly.
export MY_VM="NonExistentVM"
if az vm show -g $MY_RG -n $MY_VM --query "name" --output tsv >/dev/null 2>&1; then
    az vm disk attach --vm-name $MY_VM --name $MY_DISK --resource-group $MY_RG 
else
    echo "VM $MY_VM not found. Skipping disk attachment."
fi
export MY_VM="NonExistentVM"
if az vm show -g $MY_RG -n $MY_VM --query "name" --output tsv >/dev/null 2>&1; then
    az vm disk attach --vm-name $MY_VM --name $MY_DISK --resource-group $MY_RG 
else
    echo "VM $MY_VM not found. Skipping disk attachment."
fi
Results:
VM NonExistentVM not found. Skipping disk attachment.
VM NonExistentVM not found. Skipping disk attachment.
Create a new disk from an existing disk or snapshot with performance plus enabled
This series of steps creates a separate resource group and then creates a new disk from an existing disk or snapshot. Replace the SOURCE_URI with a valid source blob URI that belongs to the same region (WestUS2) as the disk.
export RANDOM_SUFFIX=$(openssl rand -hex 3)
export MY_MIG_RG="PerfPlusMigrRG$RANDOM_SUFFIX"
export REGION="WestUS2"
az group create -g $MY_MIG_RG -l $REGION
export RANDOM_SUFFIX=$(openssl rand -hex 3)
export MY_MIG_RG="PerfPlusMigrRG$RANDOM_SUFFIX"
export REGION="WestUS2"
az group create -g $MY_MIG_RG -l $REGION
Results:
{
  "id": "/subscriptions/xxxxx/resourceGroups/PerfPlusMigrRGxxx",
  "location": "WestUS2",
  "name": "PerfPlusMigrRGxxx",
  "properties": {
    "provisioningState": "Succeeded"
  }
}
{
  "id": "/subscriptions/xxxxx/resourceGroups/PerfPlusMigrRGxxx",
  "location": "WestUS2",
  "name": "PerfPlusMigrRGxxx",
  "properties": {
    "provisioningState": "Succeeded"
  }
}
# Create a snapshot from the original disk
export MY_SNAPSHOT_NAME="PerfPlusSnapshot$RANDOM_SUFFIX"
echo "Creating snapshot from original disk..."
az snapshot create \
  --name $MY_SNAPSHOT_NAME \
  --resource-group $MY_RG \
  --source $MY_DISK

# Get the snapshot ID for use as source
SNAPSHOT_ID=$(az snapshot show \
  --name $MY_SNAPSHOT_NAME \
  --resource-group $MY_RG \
  --query id \
  --output tsv)

echo "Using snapshot ID: $SNAPSHOT_ID"

# Create the new disk using the snapshot as source
export MY_MIG_DISK="PerfPlusMigrDisk$RANDOM_SUFFIX"
export SKU="Premium_LRS"
export DISK_SIZE=513

az disk create \
  --name $MY_MIG_DISK \
  --resource-group $MY_MIG_RG \
  --size-gb $DISK_SIZE \
  --performance-plus true \
  --sku $SKU \
  --source $SNAPSHOT_ID \
  --location $REGION
# Create a snapshot from the original disk
export MY_SNAPSHOT_NAME="PerfPlusSnapshot$RANDOM_SUFFIX"
echo "Creating snapshot from original disk..."
az snapshot create \
  --name $MY_SNAPSHOT_NAME \
  --resource-group $MY_RG \
  --source $MY_DISK

# Get the snapshot ID for use as source
SNAPSHOT_ID=$(az snapshot show \
  --name $MY_SNAPSHOT_NAME \
  --resource-group $MY_RG \
  --query id \
  --output tsv)

echo "Using snapshot ID: $SNAPSHOT_ID"

# Create the new disk using the snapshot as source
export MY_MIG_DISK="PerfPlusMigrDisk$RANDOM_SUFFIX"
export SKU="Premium_LRS"
export DISK_SIZE=513

az disk create \
  --name $MY_MIG_DISK \
  --resource-group $MY_MIG_RG \
  --size-gb $DISK_SIZE \
  --performance-plus true \
  --sku $SKU \
  --source $SNAPSHOT_ID \
  --location $REGION
Results:
{
  "id": "/subscriptions/xxxxx/resourceGroups/PerfPlusMigrRGxxx/providers/Microsoft.Compute/disks/PerfPlusMigrDiskxxx",
  "location": "WestUS2",
  "name": "PerfPlusMigrDiskxxx",
  "properties": {
    "provisioningState": "Succeeded",
    "diskSizeGb": 513,
    "sku": "Premium_LRS",
    "performancePlus": true,
    "source": "https://examplestorageaccount.blob.core.windows.net/snapshots/sample-westus2.vhd"
  },
  "type": "Microsoft.Compute/disks"
}
{
  "id": "/subscriptions/xxxxx/resourceGroups/PerfPlusMigrRGxxx/providers/Microsoft.Compute/disks/PerfPlusMigrDiskxxx",
  "location": "WestUS2",
  "name": "PerfPlusMigrDiskxxx",
  "properties": {
    "provisioningState": "Succeeded",
    "diskSizeGb": 513,
    "sku": "Premium_LRS",
    "performancePlus": true,
    "source": "https://examplestorageaccount.blob.core.windows.net/snapshots/sample-westus2.vhd"
  },
  "type": "Microsoft.Compute/disks"
}
Create a resource group
This step creates a resource group with a unique name.
$RANDOM_SUFFIX = (New-Guid).Guid.Substring(0,6)
$myRG = "PerfPlusRG$RANDOM_SUFFIX"
$region = "WestUS2"
New-AzResourceGroup -Name $myRG -Location $region
$RANDOM_SUFFIX = (New-Guid).Guid.Substring(0,6)
$myRG = "PerfPlusRG$RANDOM_SUFFIX"
$region = "WestUS2"
New-AzResourceGroup -Name $myRG -Location $region
Results:
{
  "ResourceGroupName": "PerfPlusRGxxx",
  "Location": "WestUS2",
  "ProvisioningState": "Succeeded"
}
{
  "ResourceGroupName": "PerfPlusRGxxx",
  "Location": "WestUS2",
  "ProvisioningState": "Succeeded"
}
Create a new disk with performance plus enabled
This step creates a new disk with performance plus enabled using a valid SKU value.
$myDisk = "PerfPlusDisk$RANDOM_SUFFIX"
$sku = "Premium_LRS"
$size = 513
$diskConfig = New-AzDiskConfig -Location $region -CreateOption Empty -DiskSizeGB $size -SkuName $sku -PerformancePlus $true 
$dataDisk = New-AzDisk -ResourceGroupName $myRG -DiskName $myDisk -Disk $diskConfig
$myDisk = "PerfPlusDisk$RANDOM_SUFFIX"
$sku = "Premium_LRS"
$size = 513
$diskConfig = New-AzDiskConfig -Location $region -CreateOption Empty -DiskSizeGB $size -SkuName $sku -PerformancePlus $true 
$dataDisk = New-AzDisk -ResourceGroupName $myRG -DiskName $myDisk -Disk $diskConfig
Results:
{
  "ResourceGroup": "PerfPlusRGxxx",
  "Name": "PerfPlusDiskxxx",
  "Location": "WestUS2",
  "Sku": "Premium_LRS",
  "DiskSizeGB": 513,
  "PerformancePlus": true,
  "ProvisioningState": "Succeeded"
}
{
  "ResourceGroup": "PerfPlusRGxxx",
  "Name": "PerfPlusDiskxxx",
  "Location": "WestUS2",
  "Sku": "Premium_LRS",
  "DiskSizeGB": 513,
  "PerformancePlus": true,
  "ProvisioningState": "Succeeded"
}
Attempt to attach the disk to a VM
This optional step checks whether the specified VM exists before attempting the disk attachment.
$myVM = "NonExistentVM"
if (Get-AzVM -ResourceGroupName $myRG -Name $myVM -ErrorAction SilentlyContinue) {
    Add-AzVMDataDisk -VMName $myVM -ResourceGroupName $myRG -DiskName $myDisk -Lun 0 -CreateOption Empty -ManagedDiskId $dataDisk.Id
} else {
    Write-Output "VM $myVM not found. Skipping disk attachment."
}
$myVM = "NonExistentVM"
if (Get-AzVM -ResourceGroupName $myRG -Name $myVM -ErrorAction SilentlyContinue) {
    Add-AzVMDataDisk -VMName $myVM -ResourceGroupName $myRG -DiskName $myDisk -Lun 0 -CreateOption Empty -ManagedDiskId $dataDisk.Id
} else {
    Write-Output "VM $myVM not found. Skipping disk attachment."
}
Results:
VM NonExistentVM not found. Skipping disk attachment.
VM NonExistentVM not found. Skipping disk attachment.
Create a new disk from an existing disk or snapshot with performance plus enabled
This series of steps creates a separate resource group and then creates a new disk from an existing disk or snapshot. Replace the $sourceURI with a valid source blob URI that belongs to the same region (WestUS2) as the disk.
$RANDOM_SUFFIX = (New-Guid).Guid.Substring(0,6)
$myMigrRG = "PerfPlusMigrRG$RANDOM_SUFFIX"
$region = "WestUS2"
New-AzResourceGroup -Name $myMigrRG -Location $region
$RANDOM_SUFFIX = (New-Guid).Guid.Substring(0,6)
$myMigrRG = "PerfPlusMigrRG$RANDOM_SUFFIX"
$region = "WestUS2"
New-AzResourceGroup -Name $myMigrRG -Location $region
Results:
{
  "ResourceGroupName": "PerfPlusMigrRGxxx",
  "Location": "WestUS2",
  "ProvisioningState": "Succeeded"
}
{
  "ResourceGroupName": "PerfPlusMigrRGxxx",
  "Location": "WestUS2",
  "ProvisioningState": "Succeeded"
}
$myDisk = "PerfPlusMigrDisk$RANDOM_SUFFIX"
$sku = "Premium_LRS"
$size = 513
$sourceURI = "https://examplestorageaccount.blob.core.windows.net/snapshots/sample-westus2.vhd"  # Replace with a valid source blob URI in WestUS2
$diskConfig = New-AzDiskConfig -Location $region -CreateOption Copy -DiskSizeGB $size -SkuName $sku -PerformancePlus $true -SourceResourceID $sourceURI
$dataDisk = New-AzDisk -ResourceGroupName $myMigrRG -DiskName $myDisk -Disk $diskConfig
$myDisk = "PerfPlusMigrDisk$RANDOM_SUFFIX"
$sku = "Premium_LRS"
$size = 513
$sourceURI = "https://examplestorageaccount.blob.core.windows.net/snapshots/sample-westus2.vhd"  # Replace with a valid source blob URI in WestUS2
$diskConfig = New-AzDiskConfig -Location $region -CreateOption Copy -DiskSizeGB $size -SkuName $sku -PerformancePlus $true -SourceResourceID $sourceURI
$dataDisk = New-AzDisk -ResourceGroupName $myMigrRG -DiskName $myDisk -Disk $diskConfig
Results:
{
  "ResourceGroup": "PerfPlusMigrRGxxx",
  "Name": "PerfPlusMigrDiskxxx",
  "Location": "WestUS2",
  "Sku": "Premium_LRS",
  "DiskSizeGB": 513,
  "PerformancePlus": true,
  "SourceResourceID": "https://examplestorageaccount.blob.core.windows.net/snapshots/sample-westus2.vhd",
  "ProvisioningState": "Succeeded"
}
{
  "ResourceGroup": "PerfPlusMigrRGxxx",
  "Name": "PerfPlusMigrDiskxxx",
  "Location": "WestUS2",
  "Sku": "Premium_LRS",
  "DiskSizeGB": 513,
  "PerformancePlus": true,
  "SourceResourceID": "https://examplestorageaccount.blob.core.windows.net/snapshots/sample-westus2.vhd",
  "ProvisioningState": "Succeeded"
}
This optional step verifies the existence of the specified VM before attempting disk attachment.
$myVM = "NonExistentVM"
if (Get-AzVM -ResourceGroupName $myMigrRG -Name $myVM -ErrorAction SilentlyContinue) {
    Add-AzVMDataDisk -VMName $myVM -ResourceGroupName $myMigrRG -DiskName $myDisk -Lun 0 -CreateOption Empty -ManagedDiskId $dataDisk.Id
} else {
    Write-Output "VM $myVM not found. Skipping disk attachment."
}
$myVM = "NonExistentVM"
if (Get-AzVM -ResourceGroupName $myMigrRG -Name $myVM -ErrorAction SilentlyContinue) {
    Add-AzVMDataDisk -VMName $myVM -ResourceGroupName $myMigrRG -DiskName $myDisk -Lun 0 -CreateOption Empty -ManagedDiskId $dataDisk.Id
} else {
    Write-Output "VM $myVM not found. Skipping disk attachment."
}
Results:
VM NonExistentVM not found. Skipping disk attachment.
VM NonExistentVM not found. Skipping disk attachment.
Create a new disk with performance plus enabled
Sign in to theAzure portal.
Search for and navigate toDisksand create a new disk.
OnBasics, fill out the required fields.
Select theSource typethat you'd like.
Then selectChange sizeand select the disk type you'd like and choose a size larger than 513 GiB.
Proceed toAdvancedand select the checkbox next toEnable performance plus.
SelectReview + createand then deploy your disk.

Feedback
Was this page helpful?
Additional resources