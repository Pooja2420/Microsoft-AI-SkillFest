Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Make outbound connections through a shared private link
Article
2025-02-07
19 contributors
In this article
This article explains how to configure private, outbound calls from Azure AI Search to an Azure resource that runs within an Azure virtual network.
Setting up a private connection allows a search service to connect to a virtual network IP address instead of a port that's open to the internet. The object created for the connection is called ashared private link. On the connection, the search service uses the shared private link internally to reach an Azure resource inside the network boundary.
Shared private link is a premium feature that's billed by usage. When you set up a shared private link, charges for the private endpoint are added to your Azure invoice. As you use the shared private link, data transfer rates for inbound and outbound access are also invoiced. For details, seeAzure Private Link pricing.
Note
If you're setting up a private indexer connection to a SQL Managed Instance, seethis articleinstead for steps specific to that resource type.
When to use a shared private link
Azure AI Search makes outbound calls to other Azure resources in the following scenarios:
Indexer or query connections to Azure OpenAI, Azure AI Vision, or the Azure AI Foundry model catalog for vectorization
Indexer connections to supported data sources
Indexer (skillset) connections to Azure Storage for caching enrichments, debug session sate, or writing to a knowledge store
Indexer (skillset) connections to Azure AI services for billing purposes
Encryption key requests to Azure Key Vault
Custom skill requests to Azure Functions or similar resource
Shared private links only work for Azure-to-Azure connections. If you're connecting to OpenAI or another external model, the connection must be over the public internet.
Shared private links are for operations and data accessed through aprivate endpointfor Azure resources or clients that run in an Azure virtual network.
A shared private link is:
Created using Azure AI Search tooling, APIs, or SDKs
Approved by the Azure resource owner
Used internally by Azure AI Search on a private connection to a specific Azure resource
Only your search service can use the private links that it creates, and there can be only one shared private link created on your service for each resource and subresource combination.
Once you set up the private link, it's used automatically whenever the search service connects to that resource. You don't need to modify the connection string or alter the client you're using to issue the requests, although the device used for the connection must connect using an authorized IP in the Azure resource's firewall.
There are two scenarios for usingAzure Private Linkand Azure AI Search together.
Scenario one: create a shared private link when anoutbound(indexer) connection to Azure requires a private connection.
Scenario one: create a shared private link when anoutbound(indexer) connection to Azure requires a private connection.
Scenario two:configure search for a privateinboundconnectionfrom clients that run in a virtual network.
Scenario two:configure search for a privateinboundconnectionfrom clients that run in a virtual network.
Scenario one is covered in this article.
While both scenarios have a dependency on Azure Private Link, they're independent. You can create a shared private link without having to configure your own search service for a private endpoint.
Limitations
When evaluating shared private links for your scenario, remember these constraints.
Several of the resource types used in a shared private link are in preview. If you're connecting to a preview resource (Azure Database for MySQL or Azure SQL Managed Instance), use a preview version of the Management REST API to create the shared private link. These versions include2020-08-01-preview,2021-04-01-preview,2024-03-01-preview,2024-06-01-preview, and2025-02-01-preview. We recommend the latest preview API.
Several of the resource types used in a shared private link are in preview. If you're connecting to a preview resource (Azure Database for MySQL or Azure SQL Managed Instance), use a preview version of the Management REST API to create the shared private link. These versions include2020-08-01-preview,2021-04-01-preview,2024-03-01-preview,2024-06-01-preview, and2025-02-01-preview. We recommend the latest preview API.
2020-08-01-preview
2021-04-01-preview
2024-03-01-preview
2024-06-01-preview
2025-02-01-preview
Indexer execution must use theprivate execution environmentthat's specific to your search service. Private endpoint connections aren't supported from the multitenant content processing environment. The configuration setting for this requirement is covered in this article.
Indexer execution must use theprivate execution environmentthat's specific to your search service. Private endpoint connections aren't supported from the multitenant content processing environment. The configuration setting for this requirement is covered in this article.
Review shared private linkresource limits for each tier.
Review shared private linkresource limits for each tier.
Prerequisites
A supported Azure resource, configured to run in a virtual network.
A supported Azure resource, configured to run in a virtual network.
An Azure AI Search service with tier and region requirements, by workload:WorkloadTier requirementsRegion requirementsService creation requirementsIndexers without skillsetsBasic and higherNoneNoneSkillsets with embedding skills (integrated vectorization)Basic and higherHigh capacity regionsAfter April 3, 2024Skillsets using otherbuilt-inor custom skillsStandard 2 (S2) and higherNoneAfter April 3, 2024
An Azure AI Search service with tier and region requirements, by workload:
Permissions on both Azure AI Search and the Azure resource:ResourcePermissionsAzure AI SearchMicrosoft.Search/searchServices/sharedPrivateLinkResources/writeMicrosoft.Search/searchServices/sharedPrivateLinkResources/readMicrosoft.Search/searchServices/sharedPrivateLinkResources/operationStatuses/readOther Azure resourcePermission to approve private endpoint connections. For example, on Azure Storage, you needMicrosoft.Storage/storageAccounts/privateEndpointConnectionsApproval/action.
Permissions on both Azure AI Search and the Azure resource:
Microsoft.Search/searchServices/sharedPrivateLinkResources/write
Microsoft.Search/searchServices/sharedPrivateLinkResources/read
Microsoft.Search/searchServices/sharedPrivateLinkResources/operationStatuses/read
Microsoft.Storage/storageAccounts/privateEndpointConnectionsApproval/action

Supported resource types
You can create a shared private link for the following resources.
blob
table
dfs
file
Sql
sqlServer
vault
mysqlServer
sites
managedInstance
openai_account
cognitiveservices_account
1If Azure Storage and Azure AI Search are in the same region, the connection to storage is made over the Microsoft backbone network, which means a shared private link is redundant for this configuration. However, if you already set up a private endpoint for Azure Storage, you should also set up a shared private link or the connection is refused on the storage side. Also, if you're using multiple storage formats for various scenarios in search, make sure to create a separate shared private link for each subresource.
2TheMicrosoft.DocumentDB/databaseAccountsresource type is used for indexer connections to Azure Cosmos DB for NoSQL. The provider name and group ID are case-sensitive.
Microsoft.DocumentDB/databaseAccounts
3TheMicrosoft.Sql/serversresource type is used for connections to Azure SQL database. There's currently no support for a shared private link to Azure Synapse SQL.
Microsoft.Sql/servers
4TheMicrosoft.Web/sitesresource type is used for App service and Azure functions. In the context of Azure AI Search, an Azure function is the more likely scenario. An Azure function is commonly used for hosting the logic of a custom skill. Azure Function has Consumption, Premium, and DedicatedApp Service hosting plans. TheApp Service Environment (ASE),Azure Kubernetes Service (AKS)andAzure API Managementaren't supported at this time.
Microsoft.Web/sites
5SeeCreate a shared private link for a SQL Managed Instancefor instructions.
6TheMicrosoft.CognitiveServices/accountsresource type is used for vectorizer and indexer connections to Azure OpenAI embedding models when implementingintegrated Vectorization. As of November 19, 2024, there's now support for shared private link to embedding models in the Azure AI Foundry model catalog or to the Azure AI Vision multimodal API.
Microsoft.CognitiveServices/accounts
7Shared private link for Azure OpenAI is only supported in public cloud andMicrosoft Azure Government. Other cloud offerings don't have support for shared private links foropenai_accountGroup ID.
openai_account
8Shared private links are now supported (as of November 2024) for connections to Azure AI services multi-service accounts. Azure AI Search connects to Azure AI services multi-service forbilling purposes. These connections can now be private through a shared private link. Shared private link is only supported when configuringa managed identity (keyless configuration)in the skillset definition.
1 - Create a shared private link
Use the Azure portal, Management REST API, the Azure CLI, or Azure PowerShell to create a shared private link.
Here are a few tips:
Give the private link a meaningful name. In the Azure PaaS resource, a shared private link appears alongside other private endpoints. A name like "shared-private-link-for-search" can remind you how it's used.
When you complete the steps in this section, you have a shared private link that's provisioned in a pending state.It takes several minutes to create the link. Once it's created, the resource owner must approve the request before it's operational.
Azure portal
REST API
PowerShell
Azure CLI
Sign in to theAzure portalandfind your search service.
Sign in to theAzure portalandfind your search service.
UnderSettingson the left pane, selectNetworking.
UnderSettingson the left pane, selectNetworking.
On theShared Private Accesspage, select+ Add Shared Private Access.
On theShared Private Accesspage, select+ Add Shared Private Access.
Select eitherConnect to an Azure resource in my directoryorConnect to an Azure resource by resource ID.
Select eitherConnect to an Azure resource in my directoryorConnect to an Azure resource by resource ID.
If you select the first option (recommended), the Azure portal helps you pick the appropriate Azure resource and fills in other properties, such as the group ID of the resource and the resource type.
If you select the first option (recommended), the Azure portal helps you pick the appropriate Azure resource and fills in other properties, such as the group ID of the resource and the resource type.

If you select the second option, enter the Azure resource ID manually and choose the appropriate group ID from the list at the beginning of this article.
If you select the second option, enter the Azure resource ID manually and choose the appropriate group ID from the list at the beginning of this article.

Confirm the provisioning status is "Updating".
Confirm the provisioning status is "Updating".

Once the resource is successfully created, the provisioning state of the resource changes to "Succeeded".
Once the resource is successfully created, the provisioning state of the resource changes to "Succeeded".

Note
Preview API versions are required for group IDs that are in preview. The following resource types are in preview:managedInstance,mySqlServer,sites.
managedInstance
mySqlServer
sites
While tools like Azure portal, Azure PowerShell, or the Azure CLI have built-in mechanisms for account sign-in, a REST client  needs to provide a bearer token that allows your request to go through.
Because it's easy and quick, this section uses Azure CLI steps for getting a bearer token. For more durable approaches, seeManage with REST.
Open a command line and runaz loginfor Azure sign-in.
Open a command line and runaz loginfor Azure sign-in.
az login
Show the active account and subscription. Verify that this subscription is the same one that has the Azure PaaS resource for which you're creating the shared private link.az account showChange the subscription if it's not the right one:az account set --subscription {{Azure PaaS subscription ID}}
Show the active account and subscription. Verify that this subscription is the same one that has the Azure PaaS resource for which you're creating the shared private link.
az account show
az account show
Change the subscription if it's not the right one:
az account set --subscription {{Azure PaaS subscription ID}}
az account set --subscription {{Azure PaaS subscription ID}}
Create a bearer token, and then copy the entire token (everything between the quotation marks).az account get-access-token
Create a bearer token, and then copy the entire token (everything between the quotation marks).
az account get-access-token
az account get-access-token
Switch to a REST client and set up aGET Shared Private Link Resource. Review existing shared private links to ensure you're not duplicating a link. There can be only one shared private link for each resource and subresource combination.@subscriptionId = PASTE-HERE
@rg-name = PASTE-HERE
@service-name = PASTE-HERE
@token = PASTE-TOKEN-HERE

GET https://https://management.azure.com/subscriptions/{{subscriptionId}}/resourceGroups/{{rg-name}}/providers/Microsoft.Search/searchServices/{{service-name}}/sharedPrivateLinkResources?api-version=2023-11-01 HTTP/1.1
  Content-type: application/json
  Authorization: Bearer {{token}}
Switch to a REST client and set up aGET Shared Private Link Resource. Review existing shared private links to ensure you're not duplicating a link. There can be only one shared private link for each resource and subresource combination.
@subscriptionId = PASTE-HERE
@rg-name = PASTE-HERE
@service-name = PASTE-HERE
@token = PASTE-TOKEN-HERE

GET https://https://management.azure.com/subscriptions/{{subscriptionId}}/resourceGroups/{{rg-name}}/providers/Microsoft.Search/searchServices/{{service-name}}/sharedPrivateLinkResources?api-version=2023-11-01 HTTP/1.1
  Content-type: application/json
  Authorization: Bearer {{token}}
@subscriptionId = PASTE-HERE
@rg-name = PASTE-HERE
@service-name = PASTE-HERE
@token = PASTE-TOKEN-HERE

GET https://https://management.azure.com/subscriptions/{{subscriptionId}}/resourceGroups/{{rg-name}}/providers/Microsoft.Search/searchServices/{{service-name}}/sharedPrivateLinkResources?api-version=2023-11-01 HTTP/1.1
  Content-type: application/json
  Authorization: Bearer {{token}}
Send the request. You should get a list of all shared private link resources that exist for your search service. Make sure there's no existing shared private link for the resource and subresource combination.
Send the request. You should get a list of all shared private link resources that exist for your search service. Make sure there's no existing shared private link for the resource and subresource combination.
Formulate a PUT request toCreate or Update Shared Private Linkfor the Azure PaaS resource.PUT https://https://management.azure.com/subscriptions/{{subscriptionId}}/resourceGroups/{{rg-name}}/providers/Microsoft.Search/searchServices/{{service-name}}/sharedPrivateLinkResources/{{shared-private-link-name}}?api-version=2023-11-01 HTTP/1.1
  Content-type: application/json
  Authorization: Bearer {{token}}

{
    "properties":
     {
        "groupID": "blob",
        "privateLinkResourceId": "/subscriptions/{{subscriptionId}}/resourceGroups/{{rg-name}}/providers/Microsoft.Storage/storageAccounts/{{storage-account-name}}",
        "provisioningState": "",
        "requestMessage": "Please approve this request.",
        "resourceRegion": "",
        "status": ""
     }
}If the Azure PaaS resource is in a different subscription, use the Azure CLI to change the subscription, and then get a bearer token that is valid for that subscription:az account set --subscription {{Azure PaaS subscription ID}}

az account get-access-token
Formulate a PUT request toCreate or Update Shared Private Linkfor the Azure PaaS resource.
PUT https://https://management.azure.com/subscriptions/{{subscriptionId}}/resourceGroups/{{rg-name}}/providers/Microsoft.Search/searchServices/{{service-name}}/sharedPrivateLinkResources/{{shared-private-link-name}}?api-version=2023-11-01 HTTP/1.1
  Content-type: application/json
  Authorization: Bearer {{token}}

{
    "properties":
     {
        "groupID": "blob",
        "privateLinkResourceId": "/subscriptions/{{subscriptionId}}/resourceGroups/{{rg-name}}/providers/Microsoft.Storage/storageAccounts/{{storage-account-name}}",
        "provisioningState": "",
        "requestMessage": "Please approve this request.",
        "resourceRegion": "",
        "status": ""
     }
}
PUT https://https://management.azure.com/subscriptions/{{subscriptionId}}/resourceGroups/{{rg-name}}/providers/Microsoft.Search/searchServices/{{service-name}}/sharedPrivateLinkResources/{{shared-private-link-name}}?api-version=2023-11-01 HTTP/1.1
  Content-type: application/json
  Authorization: Bearer {{token}}

{
    "properties":
     {
        "groupID": "blob",
        "privateLinkResourceId": "/subscriptions/{{subscriptionId}}/resourceGroups/{{rg-name}}/providers/Microsoft.Storage/storageAccounts/{{storage-account-name}}",
        "provisioningState": "",
        "requestMessage": "Please approve this request.",
        "resourceRegion": "",
        "status": ""
     }
}
If the Azure PaaS resource is in a different subscription, use the Azure CLI to change the subscription, and then get a bearer token that is valid for that subscription:
az account set --subscription {{Azure PaaS subscription ID}}

az account get-access-token
az account set --subscription {{Azure PaaS subscription ID}}

az account get-access-token
Send the request. To check the status, rerun the first GET Shared Private Link request to monitor the provisioning state as it transitions from updating to succeeded.
Send the request. To check the status, rerun the first GET Shared Private Link request to monitor the provisioning state as it transitions from updating to succeeded.
SeeManage with PowerShellfor instructions on getting started.
First, useGet-AzSearchSharedPrivateLinkResourceto review any existing shared private links to ensure you're not duplicating a link. There can be only one shared private link for each resource and subresource combination.
Get-AzSearchSharedPrivateLinkResource -ResourceGroupName <search-service-resource-group-name> -ServiceName <search-service-name>
Get-AzSearchSharedPrivateLinkResource -ResourceGroupName <search-service-resource-group-name> -ServiceName <search-service-name>
UseNew-AzSearchSharedPrivateLinkResourceto create a shared private link, substituting valid values for the placeholders. This example is for blob storage.
New-AzSearchSharedPrivateLinkResource -ResourceGroupName <search-service-resource-group-name> -ServiceName <search-service-name> -Name <spl-name> -PrivateLinkResourceId /subscriptions/<alphanumeric-subscription-ID>/resourceGroups/<storage-resource-group-name>/providers/Microsoft.Storage/storageAccounts/myBlobStorage -GroupId blob -RequestMessage "Please approve"
New-AzSearchSharedPrivateLinkResource -ResourceGroupName <search-service-resource-group-name> -ServiceName <search-service-name> -Name <spl-name> -PrivateLinkResourceId /subscriptions/<alphanumeric-subscription-ID>/resourceGroups/<storage-resource-group-name>/providers/Microsoft.Storage/storageAccounts/myBlobStorage -GroupId blob -RequestMessage "Please approve"
Rerun the first request to monitor the provisioning state as it transitions from updating to succeeded.
SeeManage with the Azure CLIfor instructions on getting started.
First, useaz-search-shared-private-link-resource listto review any existing shared private links to ensure you're not duplicating a link. There can be only one shared private link for each resource and subresource combination.
az search shared-private-link-resource list --service-name {{your-search-service-name}} --resource-group {{your-search-service-resource-group}}
az search shared-private-link-resource list --service-name {{your-search-service-name}} --resource-group {{your-search-service-resource-group}}
Useaz-search-shared-private-link-resource createfor the next step. This example is for Azure Cosmos DB for NoSQL.
The syntax is case-sensitive, so make sure that the group ID isSqland the provider name isMicrosoft.DocumentDB.
Sql
Microsoft.DocumentDB
az search shared-private-link-resource create --name {{your-shared-private-link-name}} --service-name {{your-search-service-name}} --resource-group {{your-search-service-resource-group}} --group-id Sql --resource-id "/subscriptions/{{your-subscription-ID}}/{{your-cosmos-db-resource-group}}/providers/Microsoft.DocumentDB/databaseAccounts/{{your-cosmos-db-account-name}}"
az search shared-private-link-resource create --name {{your-shared-private-link-name}} --service-name {{your-search-service-name}} --resource-group {{your-search-service-resource-group}} --group-id Sql --resource-id "/subscriptions/{{your-subscription-ID}}/{{your-cosmos-db-resource-group}}/providers/Microsoft.DocumentDB/databaseAccounts/{{your-cosmos-db-account-name}}"
Rerun the first request to monitor the provisioning state as it transitions from updating to succeeded.
Shared private link creation workflow
A202 Acceptedresponse is returned on success. The process of creating an outbound private endpoint is a long-running (asynchronous) operation. It involves deploying the following resources:
202 Accepted
A private endpoint, allocated with a private IP address in a"Pending"state. The private IP address is obtained from the address space that's allocated to the virtual network of the execution environment for the search service-specific private indexer. Upon approval of the private endpoint, any communication from Azure AI Search to the Azure resource originates from the private IP address and a secure private link channel.
A private endpoint, allocated with a private IP address in a"Pending"state. The private IP address is obtained from the address space that's allocated to the virtual network of the execution environment for the search service-specific private indexer. Upon approval of the private endpoint, any communication from Azure AI Search to the Azure resource originates from the private IP address and a secure private link channel.
"Pending"
A private DNS zone for the type of resource, based on the group ID. By deploying this resource, you ensure that any DNS lookup to the private resource utilizes the IP address that's associated with the private endpoint.
A private DNS zone for the type of resource, based on the group ID. By deploying this resource, you ensure that any DNS lookup to the private resource utilizes the IP address that's associated with the private endpoint.
2 - Approve the private endpoint connection
Approval of the private endpoint connection is granted on the Azure PaaS side. Explicit approval by the resource owner is required. The following steps cover approval using the Azure portal, but here are some links to approve the connection programmatically from the Azure PaaS side:
On Azure Storage, usePrivate Endpoint Connections - Put
On Azure Cosmos DB, usePrivate Endpoint Connections - Create Or Update
On Azure OpenAI, usePrivate Endpoint Connections - Create Or Update
Using the Azure portal, perform the following steps:
Open theNetworkingpage of the Azure PaaS resource.text
Open theNetworkingpage of the Azure PaaS resource.text
Find the section that lists the private endpoint connections. The following example is for a storage account.
Find the section that lists the private endpoint connections. The following example is for a storage account.

Select the connection, and then selectApprove. It can take a few minutes for the status to be updated in the Azure portal.
Select the connection, and then selectApprove. It can take a few minutes for the status to be updated in the Azure portal.

After the private endpoint is approved, Azure AI Search creates the necessary DNS zone mappings in the DNS zone that's created for it.
Although the private endpoint link on theNetworkingpage is active, it won't resolve.

Selecting the link produces an error. A status message of"The access token is from the wrong issuer"andmust match the tenant associated with this subscriptionappears because the backend private endpoint resource is provisioned by Microsoft in a Microsoft-managed tenant, while the linked resource (Azure AI Search) is in your tenant. It's by design you can't access the private endpoint resource by selecting the private endpoint connection link.
"The access token is from the wrong issuer"
must match the tenant associated with this subscription
Follow the instructions in the next section to check the status of your shared private link.
3 - Check shared private link status
On the Azure AI Search side, you can confirm request approval by revisiting the Shared Private Access page of the search serviceNetworkingpage. Connection state should be approved.

Alternatively, you can also obtain connection state by using theShared Private Link Resources - Get.
az rest --method get --uri https://management.azure.com/subscriptions/aaaa0a0a-bb1b-cc2c-dd3d-eeeeee4e4e4e/resourceGroups/contoso/providers/Microsoft.Search/searchServices/contoso-search/sharedPrivateLinkResources/blob-pe?api-version=2024-07-01
az rest --method get --uri https://management.azure.com/subscriptions/aaaa0a0a-bb1b-cc2c-dd3d-eeeeee4e4e4e/resourceGroups/contoso/providers/Microsoft.Search/searchServices/contoso-search/sharedPrivateLinkResources/blob-pe?api-version=2024-07-01
This would return a JSON, where the connection state shows up as "status" under the "properties" section. Following is an example for a storage account.
{
      "name": "blob-pe",
      "properties": {
        "privateLinkResourceId": "/subscriptions/aaaa0a0a-bb1b-cc2c-dd3d-eeeeee4e4e4e/resourceGroups/contoso/providers/Microsoft.Storage/storageAccounts/contoso-storage",
        "groupId": "blob",
        "requestMessage": "please approve",
        "status": "Approved",
        "resourceRegion": null,
        "provisioningState": "Succeeded"
      }
}
{
      "name": "blob-pe",
      "properties": {
        "privateLinkResourceId": "/subscriptions/aaaa0a0a-bb1b-cc2c-dd3d-eeeeee4e4e4e/resourceGroups/contoso/providers/Microsoft.Storage/storageAccounts/contoso-storage",
        "groupId": "blob",
        "requestMessage": "please approve",
        "status": "Approved",
        "resourceRegion": null,
        "provisioningState": "Succeeded"
      }
}
If the provisioning state (properties.provisioningState) of the resource is "Succeeded" and connection state(properties.status) is "Approved", it means that the shared private link resource is functional and the indexer can be configured to communicate over the private endpoint.
properties.provisioningState
properties.status
4 - Configure the indexer to run in the private environment
Indexer executionoccurs in either a private environment that's specific to the search service, or a multitenant environment that's used internally to offload expensive skillset processing for multiple customers.
The execution environment is transparent, but once you start building firewall rules or establishing private connections, you must take indexer execution into account. For a private connection, configure indexer execution to always run in the private environment.
This step shows you how to configure the indexer to run in the private environment using the REST API. You can also set the execution environment using the JSON editor in the Azure portal.
Note
You can perform this step before the private endpoint connection is approved. However, until the private endpoint connection shows as approved, any existing indexer that tries to communicate with a secure resource (such as the storage account) will end up in a transient failure state and new indexers will fail to be created.
Create the data source definition, index, and skillset (if you're using one) as you would normally. There are no properties in any of these definitions that vary when using a shared private endpoint.
Create the data source definition, index, and skillset (if you're using one) as you would normally. There are no properties in any of these definitions that vary when using a shared private endpoint.
Create an indexerthat points to the data source, index, and skillset that you created in the preceding step. In addition, force the indexer to run in the private execution environment by setting the indexerexecutionEnvironmentconfiguration property toprivate.{
    "name": "indexer",
    "dataSourceName": "blob-datasource",
    "targetIndexName": "index",
    "parameters": {
        "configuration": {
            "executionEnvironment": "private"
        }
    },
    "fieldMappings": []
}
Create an indexerthat points to the data source, index, and skillset that you created in the preceding step. In addition, force the indexer to run in the private execution environment by setting the indexerexecutionEnvironmentconfiguration property toprivate.
executionEnvironment
private
{
    "name": "indexer",
    "dataSourceName": "blob-datasource",
    "targetIndexName": "index",
    "parameters": {
        "configuration": {
            "executionEnvironment": "private"
        }
    },
    "fieldMappings": []
}
{
    "name": "indexer",
    "dataSourceName": "blob-datasource",
    "targetIndexName": "index",
    "parameters": {
        "configuration": {
            "executionEnvironment": "private"
        }
    },
    "fieldMappings": []
}
After the indexer is created successfully, it should connect to the Azure resource over the private endpoint connection. You can monitor the status of the indexer by using theIndexer Status API.
Note
If you already have existing indexers, you can update them via thePUT APIby setting theexecutionEnvironmenttoprivateor using the JSON editor in the Azure portal.
executionEnvironment
private
5 - Test the shared private link
If you haven't done so already, verify that your Azure PaaS resource refuses connections from the public internet. If connections are accepted, review the DNS settings in theNetworkingpage of your Azure PaaS resource.
If you haven't done so already, verify that your Azure PaaS resource refuses connections from the public internet. If connections are accepted, review the DNS settings in theNetworkingpage of your Azure PaaS resource.
Choose a tool that can invoke an outbound request scenario, such as an indexer connection to a private endpoint. An easy choice is using theImport datawizard, but you can also try a REST client and REST APIs for more precision. Assuming that your search service isn't also configured for a private connection, the REST client connection to search can be over the public internet.
Choose a tool that can invoke an outbound request scenario, such as an indexer connection to a private endpoint. An easy choice is using theImport datawizard, but you can also try a REST client and REST APIs for more precision. Assuming that your search service isn't also configured for a private connection, the REST client connection to search can be over the public internet.
Set the connection string to the private Azure PaaS resource. The format of the connection string doesn't change for shared private link. The search service invokes the shared private link internally.For indexer workloads, the connection string is in the data source definition. An example of a data source might look like this:{
   "name": "my-blob-ds",
   "type": "azureblob",
   "subtype": null,
   "credentials": {
     "connectionString": "DefaultEndpointsProtocol=https;AccountName=<YOUR-STORAGE-ACCOUNT>;AccountKey=..."
   }
Set the connection string to the private Azure PaaS resource. The format of the connection string doesn't change for shared private link. The search service invokes the shared private link internally.
For indexer workloads, the connection string is in the data source definition. An example of a data source might look like this:
{
   "name": "my-blob-ds",
   "type": "azureblob",
   "subtype": null,
   "credentials": {
     "connectionString": "DefaultEndpointsProtocol=https;AccountName=<YOUR-STORAGE-ACCOUNT>;AccountKey=..."
   }
{
   "name": "my-blob-ds",
   "type": "azureblob",
   "subtype": null,
   "credentials": {
     "connectionString": "DefaultEndpointsProtocol=https;AccountName=<YOUR-STORAGE-ACCOUNT>;AccountKey=..."
   }
For indexer workloads, remember to set the execution environment in the indexer definition. An example of an indexer definition might look like this:"name": "indexer",
"dataSourceName": "my-blob-ds",
"targetIndexName": "my-index",
"parameters": {
   "configuration": {
       "executionEnvironment": "private"
       }
   },
"fieldMappings": []
}
For indexer workloads, remember to set the execution environment in the indexer definition. An example of an indexer definition might look like this:
"name": "indexer",
"dataSourceName": "my-blob-ds",
"targetIndexName": "my-index",
"parameters": {
   "configuration": {
       "executionEnvironment": "private"
       }
   },
"fieldMappings": []
}
"name": "indexer",
"dataSourceName": "my-blob-ds",
"targetIndexName": "my-index",
"parameters": {
   "configuration": {
       "executionEnvironment": "private"
       }
   },
"fieldMappings": []
}
Run the indexer. If the indexer execution succeeds and the search index is populated, the shared private link is working.
Run the indexer. If the indexer execution succeeds and the search index is populated, the shared private link is working.
Troubleshooting
If your indexer creation fails with "Data source credentials are invalid," check the approval status of the shared private link before debugging the connection. If the status isApproved, check theproperties.provisioningStateproperty. If it'sIncomplete, there might be a problem with underlying dependencies. In this case, reissue thePUTrequest to re-create the shared private link. You might also need to repeat the approval step.
If your indexer creation fails with "Data source credentials are invalid," check the approval status of the shared private link before debugging the connection. If the status isApproved, check theproperties.provisioningStateproperty. If it'sIncomplete, there might be a problem with underlying dependencies. In this case, reissue thePUTrequest to re-create the shared private link. You might also need to repeat the approval step.
Approved
properties.provisioningState
Incomplete
PUT
If indexers fail consistently or intermittently, check theexecutionEnvironmentpropertyon the indexer. The value should be set toprivate. If you didn't set this property, and indexer runs succeeded in the past, it's because the search service used a private environment of its own accord. A search service moves processing out of the multitenant environment if the system is under load.
If indexers fail consistently or intermittently, check theexecutionEnvironmentpropertyon the indexer. The value should be set toprivate. If you didn't set this property, and indexer runs succeeded in the past, it's because the search service used a private environment of its own accord. A search service moves processing out of the multitenant environment if the system is under load.
executionEnvironment
private
If you get an error when creating a shared private link, checkservice limitsto verify that you're under the quota for your tier.
If you get an error when creating a shared private link, checkservice limitsto verify that you're under the quota for your tier.
Next steps
Learn more about private endpoints and other secure connection methods:
Troubleshoot issues with shared private link resources
What are private endpoints?
DNS configurations needed for private endpoints
Indexer access to content protected by Azure network security features
Feedback
Was this page helpful?
Additional resources