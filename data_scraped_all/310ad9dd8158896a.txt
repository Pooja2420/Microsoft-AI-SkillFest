Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Collect diagnostic logs for Azure Local (preview)
Article
2025-04-14
4 contributors
In this article
Applies to: Azure Local 2311.2 and later
This article describes how to collect diagnostic logs for Azure Local and send them to Microsoft via the Azure portal or PowerShell. These diagnostic logs help identify and fix any issues with your Azure Local solution.
Important
This feature is currently in PREVIEW.
See theSupplemental Terms of Use for Microsoft Azure Previewsfor legal terms that apply to Azure features that are in beta, preview, or otherwise not yet released into general availability.
About on-demand log collection
On-demand log collection refers to the process of manually gathering and sending diagnostic logs to Microsoft. These logs are stored in the Kusto database, where Microsoft Support can access them to help resolve your reported issues. The collected diagnostic data is retained for up to 30 days and is managed according to Microsoftâsstandard privacy practices.
When to use on-demand log collection
You can perform on-demand log collection in the following scenarios:
When Microsoft Support requests logs for an open case.
When a system is connected and registered.
When observability components are operational and installed.
When a system is only partially registered.
For issues unrelated to registration failures.
To explore additional log collection methods in Azure Local and understand when to use them, seeDiagnostics.
Prerequisites
Before you collect on-demand logs, you must complete the following prerequisites:
You must have access to an Azure Local instance that is deployed and registered.
You must have installed theAzureEdgeTelemetryAndDiagnosticsextension to collect telemetry and diagnostics information from your Azure Local instance. For information about the extension, seeAzure Local telemetry and diagnostics extension overview.
AzureEdgeTelemetryAndDiagnostics
Collect logs for Azure Local
You can perform on-demand log collection using any of the following methods:
(Recommended) The Azure portal. Use this method when you want to collect and send logs at the system level.
(Recommended) The Azure portal. Use this method when you want to collect and send logs at the system level.
PowerShell. Use this method if you want to collect logs based on specific parameters. You have the option to save logs to an SMB share, send supplementary logs, or send logs for specific roles only.
PowerShell. Use this method if you want to collect logs based on specific parameters. You have the option to save logs to an SMB share, send supplementary logs, or send logs for specific roles only.
Keep in mind the following information before you start log collection:
The time required for log collection depends on the time range you specify. The longer the time range, the more time it'll take for log collection. Therefore, we recommend limiting the time range to only the logs you need.
Log collections longer than 24 hours aren't supported.
Attempting multiple log collections simultaneously will result in a failure.
Azure portal (recommended)
PowerShell
Follow these steps to collect diagnostic logs for your Azure Local instance via the Azure portal:
Inthe Azure portal, go to the Azure Local instance resource.
Inthe Azure portal, go to the Azure Local instance resource.
In the left pane, underSettings, selectDiagnostics and Remote Support.
In the left pane, underSettings, selectDiagnostics and Remote Support.
To collect and send logs now, selectSend logs.
To collect and send logs now, selectSend logs.

In theSend diagnostic logs to Microsoftpane, select theLog start timeandLog end time, and then select theCollect and upload logsbutton.You get a notification that it can take up to 30 minutes to collect diagnostic logs.
In theSend diagnostic logs to Microsoftpane, select theLog start timeandLog end time, and then select theCollect and upload logsbutton.

You get a notification that it can take up to 30 minutes to collect diagnostic logs.
TheLog activitytable shows the status of log collections. For more details on a specific log collection, select the link underTime collectedand review the details in theLog detailpane. If you encounter an issue and need help from Microsoft Support, they might request theCorrelation IDto locate the logs.
TheLog activitytable shows the status of log collections. For more details on a specific log collection, select the link underTime collectedand review the details in theLog detailpane. If you encounter an issue and need help from Microsoft Support, they might request theCorrelation IDto locate the logs.

To use PowerShell for log collection, run theSend-DiagnosticDatacmdlet from any node within the Azure Local instance. This cmdlet temporarily copies the logs locally. The copied logs are parsed, sent to Microsoft, and then deleted from your system.
Send-DiagnosticData
Here are some important points to consider when collecting logs using PowerShell:
The completion time of theSend-DiagnosticDatacmdlet varies depending on factors, such as the roles for which logs are being collected, the time duration specified, and the number of nodes in your Azure Local environment.
Send-DiagnosticData
If you don't specify any parameters, theSend-DiagnosticDatacmdlet collects data from all nodes for the previous one-hour duration.
Send-DiagnosticData
Here's the syntax ofSend-DiagnosticData:
Send-DiagnosticData
Send-DiagnosticData [[-FilterByRole] <string[]>] [[-FromDate] <datetime>] [[-ToDate] <datetime>] [[-CollectSddc] <bool>] [<CommonParameters>]
Send-DiagnosticData [[-FilterByRole] <string[]>] [[-FromDate] <datetime>] [[-ToDate] <datetime>] [[-CollectSddc] <bool>] [<CommonParameters>]
For reference information onSend-DiagnosticData, see theSend-DiagnosticDatacommand referencesection later in this article.
Send-DiagnosticData
Send-DiagnosticData
Examples and sample outputs
Here are some example commands with sample outputs that show how to use theSend-DiagnosticDatacmdlet with different parameters.
Send-DiagnosticData
Send diagnostics data with date filtering
In this example, you send diagnostics data with date filtering for log files for the past two hours:
Send-DiagnosticData -FromDate (Get-Date).AddHours(-2) -ToDate (Get-Date)
Send-DiagnosticData -FromDate (Get-Date).AddHours(-2) -ToDate (Get-Date)
Here's a sample output of this command:
PS C:\CloudDeployment\logs> Send-DiagnosticData -FromDate (Get-Date).AddHours(-2) -ToDate (Get-Date)
Converting FromDate and ToDate to UTC
FromDate in UTC is now 12/04/2023 19:14:18. ToDate in UTC is now 12/04/2023 21:14:18
The correlation Id is <Correlation-ID>. This is used to query for this log collection in the diagnostic pipeline.
Provide the below information to the customer support engineer working on your case.
AEORegion: eastus
AEODeviceARMResourceUri: /Subscriptions/<Subscription-ID>/resourceGroups/EDGECI-REGISTRATION/providers/Microsoft.AzureStackHCI/clusters/<cluster-name>
AEOClusterNodeArcResourceUri: /subscriptions/<Subscription-ID>/resourceGroups/EDGECI-REGISTRATION/providers/Microsoft.HybridCompute/machines/<v-host-name>
CorrelationId: <Correlation-ID>
Observability Agent is running.
Successfully submitted on-demand. Log collection Job Id: <Job-ID>. This is used to track the log collection with Get-LogCollectionHistory.
Current log collection status: Running
Waiting for log collection to complete... 
==== CUT ==================== CUT =======
Log collection ended with status: Succeeded
PS C:\CloudDeployment\logs>
PS C:\CloudDeployment\logs> Send-DiagnosticData -FromDate (Get-Date).AddHours(-2) -ToDate (Get-Date)
Converting FromDate and ToDate to UTC
FromDate in UTC is now 12/04/2023 19:14:18. ToDate in UTC is now 12/04/2023 21:14:18
The correlation Id is <Correlation-ID>. This is used to query for this log collection in the diagnostic pipeline.
Provide the below information to the customer support engineer working on your case.
AEORegion: eastus
AEODeviceARMResourceUri: /Subscriptions/<Subscription-ID>/resourceGroups/EDGECI-REGISTRATION/providers/Microsoft.AzureStackHCI/clusters/<cluster-name>
AEOClusterNodeArcResourceUri: /subscriptions/<Subscription-ID>/resourceGroups/EDGECI-REGISTRATION/providers/Microsoft.HybridCompute/machines/<v-host-name>
CorrelationId: <Correlation-ID>
Observability Agent is running.
Successfully submitted on-demand. Log collection Job Id: <Job-ID>. This is used to track the log collection with Get-LogCollectionHistory.
Current log collection status: Running
Waiting for log collection to complete... 
==== CUT ==================== CUT =======
Log collection ended with status: Succeeded
PS C:\CloudDeployment\logs>
Send diagnostic data for specified roles
In this example, you send diagnostic data with role filtering for BareMetal and ECE:
Send-DiagnosticData -FilterByRole BareMetal, ECE âCollectSddc $false
Send-DiagnosticData -FilterByRole BareMetal, ECE âCollectSddc $false
Here's a sample output of this command:
PS C:\Users\docsuser> Send-DiagnosticData -FilterByRole BareMetal, ECE âCollectSddc $false
FromDate parameter not specified. Setting to default value 12/04/2023 20:41:21
ToDate parameter not specified. Setting to default value 12/04/2023 21:41:21
Converting FromDate and ToDate to UTC
FromDate in UTC is now 12/04/2023 20:41:21. ToDate in UTC is now 12/04/2023 21:41:21
The correlation Id is <Correlation-ID>. This is used to query for this log collection in the diagnostic pipeline.
Provide the below information to the customer support engineer working on your case.
AEORegion: eastus
AEODeviceARMResourceUri: /Subscriptions/<Subscription-ID>/resourceGroups/EDGECI-REGISTRATION/providers/Microsoft.AzureStackHCI/clusters/cluster-e5c7b2aa9a36490f9567b432a0eb51f1
AEOClusterNodeArcResourceUri: /subscriptions/<Subscription-ID>/resourceGroups/EDGECI-REGISTRATION/providers/Microsoft.HybridCompute/machines/v-Host1
CorrelationId: <Correlation-ID>
Observability Agent is running.
Successfully submitted on-demand. Log collection Job Id: <Job-ID>. This is used to track the log collection with Get-LogCollectionHistory.
Current log collection status: Running
Waiting for log collection to complete... 
==== CUT ==================== CUT =======
Log collection ended with status: Succeeded
PS C:\Users\docsuser>
PS C:\Users\docsuser> Send-DiagnosticData -FilterByRole BareMetal, ECE âCollectSddc $false
FromDate parameter not specified. Setting to default value 12/04/2023 20:41:21
ToDate parameter not specified. Setting to default value 12/04/2023 21:41:21
Converting FromDate and ToDate to UTC
FromDate in UTC is now 12/04/2023 20:41:21. ToDate in UTC is now 12/04/2023 21:41:21
The correlation Id is <Correlation-ID>. This is used to query for this log collection in the diagnostic pipeline.
Provide the below information to the customer support engineer working on your case.
AEORegion: eastus
AEODeviceARMResourceUri: /Subscriptions/<Subscription-ID>/resourceGroups/EDGECI-REGISTRATION/providers/Microsoft.AzureStackHCI/clusters/cluster-e5c7b2aa9a36490f9567b432a0eb51f1
AEOClusterNodeArcResourceUri: /subscriptions/<Subscription-ID>/resourceGroups/EDGECI-REGISTRATION/providers/Microsoft.HybridCompute/machines/v-Host1
CorrelationId: <Correlation-ID>
Observability Agent is running.
Successfully submitted on-demand. Log collection Job Id: <Job-ID>. This is used to track the log collection with Get-LogCollectionHistory.
Current log collection status: Running
Waiting for log collection to complete... 
==== CUT ==================== CUT =======
Log collection ended with status: Succeeded
PS C:\Users\docsuser>
Get a history of log collection
You can get a history of all the log collections that you've performed. This history helps you learn about the kinds of log collections, the sizes of log collections, the times when logs were collected, and the methods of log collection.
To get a history of log collections for the last 90 days, enter:
Get-LogCollectionHistoryâ¯â¯
Get-LogCollectionHistoryâ¯â¯
Here's a sample output of theGet-LogCollectionHistorycmdlet. Thedatetimeparameters are in the UTC timezone.
Get-LogCollectionHistory
datetime
PS C:\CloudDeployment\logs> Get-LogCollectionHistory
Name                           Value
----                           -----
TimeCollected                  9/29/2022 5:08:14 PM +00:00
Status                         Succeeded
CollectionFromDate             9/29/2022 4:07:57 PM +00:00
CollectionToDate               9/29/2022 5:07:57 PM +00:00
LogCollectionId                fdcd94c8-1bd2-4ec6-8612-c92d5abd9a84
Type                           OnDemand
LogUploadSizeMb                1598
UploadNumberOfFiles            1924
Directory
Location
Error
----------                     ---------------------------------------------------------
TimeCollected                  9/27/2022 11:57:25 PM +00:00
Status                         Succeeded
CollectionFromDate             9/27/2022 9:57:16 PM +00:00
CollectionToDate               9/27/2022 11:57:16 PM +00:00
LogCollectionId                f3d8dcc6-901e-4c72-a3cc-210055e6f198
Type                           OnDemand
LogUploadSizeMb                1069
UploadNumberOfFiles            1941
Directory
Location
Error
PS C:\CloudDeployment\logs>
PS C:\CloudDeployment\logs> Get-LogCollectionHistory
Name                           Value
----                           -----
TimeCollected                  9/29/2022 5:08:14 PM +00:00
Status                         Succeeded
CollectionFromDate             9/29/2022 4:07:57 PM +00:00
CollectionToDate               9/29/2022 5:07:57 PM +00:00
LogCollectionId                fdcd94c8-1bd2-4ec6-8612-c92d5abd9a84
Type                           OnDemand
LogUploadSizeMb                1598
UploadNumberOfFiles            1924
Directory
Location
Error
----------                     ---------------------------------------------------------
TimeCollected                  9/27/2022 11:57:25 PM +00:00
Status                         Succeeded
CollectionFromDate             9/27/2022 9:57:16 PM +00:00
CollectionToDate               9/27/2022 11:57:16 PM +00:00
LogCollectionId                f3d8dcc6-901e-4c72-a3cc-210055e6f198
Type                           OnDemand
LogUploadSizeMb                1069
UploadNumberOfFiles            1941
Directory
Location
Error
PS C:\CloudDeployment\logs>
Save logs to a local file share
You can store diagnostic logs on a local Server Message Block (SMB) share if you have network issues or prefer to save data locally instead of sending it to Azure.
Follow these steps to save logs to a local share:
Run the following command to create a share:New-SMBShare -Name <share-name> -Path <path-to-share> -FullAccess Users -ChangeAccess 'Server Operators'
Run the following command to create a share:
New-SMBShare -Name <share-name> -Path <path-to-share> -FullAccess Users -ChangeAccess 'Server Operators'
New-SMBShare -Name <share-name> -Path <path-to-share> -FullAccess Users -ChangeAccess 'Server Operators'
Run the following commands to create PSCredentials to the share:$user = "<username>"
$pass = "<password>"
$sec=ConvertTo-SecureString -String $pass -AsPlainText -Force
$shareCredential = New-Object System.Management.Automation.PSCredential ($user, $sec)
Run the following commands to create PSCredentials to the share:
$user = "<username>"
$pass = "<password>"
$sec=ConvertTo-SecureString -String $pass -AsPlainText -Force
$shareCredential = New-Object System.Management.Automation.PSCredential ($user, $sec)
$user = "<username>"
$pass = "<password>"
$sec=ConvertTo-SecureString -String $pass -AsPlainText -Force
$shareCredential = New-Object System.Management.Automation.PSCredential ($user, $sec)
Run the following command on each node of the system to collect logs and save them locally:Send-DiagnosticData -SaveToPath <path to share> -ShareCredential $shareCredentialIf you have outbound connectivity from the SMB share where you saved the logs, you can run the following command to send the logs to Microsoft:Send-DiagnosticData NoLogCollection -SupplementaryLogs <path-to-share> -ShareCredentail $shareCredential
Run the following command on each node of the system to collect logs and save them locally:
Send-DiagnosticData -SaveToPath <path to share> -ShareCredential $shareCredential
Send-DiagnosticData -SaveToPath <path to share> -ShareCredential $shareCredential
If you have outbound connectivity from the SMB share where you saved the logs, you can run the following command to send the logs to Microsoft:
Send-DiagnosticData NoLogCollection -SupplementaryLogs <path-to-share> -ShareCredentail $shareCredential
Send-DiagnosticData NoLogCollection -SupplementaryLogs <path-to-share> -ShareCredentail $shareCredential
Send-DiagnosticDatacommand reference
Send-DiagnosticData
This section provides reference information onSend-DiagnosticData, including its parameters, syntax, and usage examples.
Send-DiagnosticData
FromDate and ToDate
These parameters enable you to collect logs for a specific time period.
Syntax
Send-DiagnosticData [[-FilterByRole] <string[]>] [[-FromDate] <datetime>] [[-ToDate] <datetime>] [[-CollectSddc] <bool>]  [<CommonParameters>]
Send-DiagnosticData [[-FilterByRole] <string[]>] [[-FromDate] <datetime>] [[-ToDate] <datetime>] [[-CollectSddc] <bool>]  [<CommonParameters>]
Example
$fromDate = Get-Date -Date "11/30/2023 18:35:00"
$toDate = Get-Date -Date "11/30/2023 19:35:00"
Send-DiagnosticData âFromDate $fromDate âToDate $toDate
$fromDate = Get-Date -Date "11/30/2023 18:35:00"
$toDate = Get-Date -Date "11/30/2023 19:35:00"
Send-DiagnosticData âFromDate $fromDate âToDate $toDate
Extension version
All
FilterByRole
This parameter lets you choose which rolesâ logs you want to collect. You can specify multiple roles. For a list of available roles on which you can filter logs, seeRoles available for filtering logs.
Syntax
Send-DiagnosticData [[-FilterByRole] <string[]>]
Send-DiagnosticData [[-FilterByRole] <string[]>]
Example
Send-DiagnosticData âFilterByRole âALMâ -CollectSddc $false
Send-DiagnosticData âFilterByRole âALMâ -CollectSddc $false
Extension version
All
CollectSddc
Determines whether to include or exclude software-defined data center (SDDC) logs. By default, SDDC logs are included. Set it to $false if you want to exclude them. For more information about using SDDC diagnostic tools, seeCollect diagnostic data for systems.
Syntax
Send-DiagnosticData [-CollectSddc <bool>]
Send-DiagnosticData [-CollectSddc <bool>]
Example
Send-DiagnosticData âCollectSddc $false
Send-DiagnosticData âCollectSddc $false
Extension version
All
BypassObsAgent
When bypassing the observability agent, logs are collected only on the node where the log collection was initiated. No record of the collection is kept in the history.
Syntax
Send-DiagnosticData [-BypassObsAgent]
Send-DiagnosticData [-BypassObsAgent]
Example
Send-DiagnosticData âBypassObsAgent
Send-DiagnosticData âBypassObsAgent
Extension version
All
SaveToPath
This parameter allows you to save the diagnostic logs to a specified path on the host machine, rather than transmitting them to Microsoft.
Syntax
Send-DiagnosticData -SaveToPath <string> [-FilterByRole <string[]>] [-FromDate <datetime>] [-ToDate <datetime>] [-CollectSddc <bool>] [-SupplementaryLogs <string>] [-ShareCredential <pscredential>] [-BypassObsAgent]  [<CommonParameters>]
Send-DiagnosticData -SaveToPath <string> [-FilterByRole <string[]>] [-FromDate <datetime>] [-ToDate <datetime>] [-CollectSddc <bool>] [-SupplementaryLogs <string>] [-ShareCredential <pscredential>] [-BypassObsAgent]  [<CommonParameters>]
Examples
You can provide either a share path or an output path on the host to theSaveToPathparameter.
SaveToPath
Send-DiagnosticData âSaveToPath <output path>
Send-DiagnosticData âSaveToPath <output path>
Send-DiagnosticData âSaveToPath <share path>
Send-DiagnosticData âSaveToPath <share path>
If youâre using a share path that isn't mapped, you must also use the-ShareCredentialparameter.
-ShareCredential
Send-DiagnosticData âSaveToPath <share path> -ShareCredential <credentials for share path>
Send-DiagnosticData âSaveToPath <share path> -ShareCredential <credentials for share path>
You can useSaveToPathwith other parameters, such asFilterByRole,FromDate,ToDate,CollectSddc,SupplementaryLogs,ShareCredential, andBypassObsAgent.
SaveToPath
FilterByRole
FromDate
ToDate
CollectSddc
SupplementaryLogs
ShareCredential
BypassObsAgent
Send-DiagnosticData âSaveToPath <output path> -FIlterByRole <role>
Send-DiagnosticData âSaveToPath <output path> -FIlterByRole <role>
Extension version
Versions 1.0.2.0 and above
NoLogCollection
TheNoLogCollectionswitch parameter allows you to send an ad-hoc set of logs to Microsoft. When using this parameter, consider the following details:
NoLogCollection
You can combine theSupplementaryLogs,ShareCredential, andBypassObsAgentparameters with theNoLogCollectionparameter.
SupplementaryLogs
ShareCredential
BypassObsAgent
NoLogCollection
TheSupplementaryLogsparameter is mandatory when usingNoLogCollection. It specifies the path to the logs that need to be sent to Microsoft.
SupplementaryLogs
NoLogCollection
You have the flexibility to pass either a share path or an output path on the host to theSupplementaryLogsparameter. If youâre using an unmapped share path, you must also use the-ShareCredentialparameter.
SupplementaryLogs
-ShareCredential
Syntax
Send-DiagnosticData -SupplementaryLogs <string> -NoLogCollection [-ShareCredential <pscredential>] [-BypassObsAgent]  [<CommonParameters>]
Send-DiagnosticData -SupplementaryLogs <string> -NoLogCollection [-ShareCredential <pscredential>] [-BypassObsAgent]  [<CommonParameters>]
Examples
UseâNoLogCollectionwith the mandatorySupplementaryLogsparameter:
âNoLogCollection
SupplementaryLogs
Send-DiagnosticData âNoLogCollection âSupplementaryPath <output path>
Send-DiagnosticData âNoLogCollection âSupplementaryPath <output path>
UseâNoLogCollectionwith unmapped share path:
âNoLogCollection
Send-DiagnosticData âNoLogCollection âSupplementaryPath <share path>
-ShareCredential <credential to share path>
Send-DiagnosticData âNoLogCollection âSupplementaryPath <share path>
-ShareCredential <credential to share path>
Extension version
Versions 1.0.2.0 and above
SupplementaryLogs
The SupplementaryLogs parameter allows you to send ad-hoc logs to Microsoft.
Syntax
You can use it in the following ways:
WithSaveToPath. In this scenario, both diagnostic logs and ad-hoc logs are collected and saved to a specified path.
SaveToPath
Send-DiagnosticData [-SupplementaryLogs <string>] -SaveToPath <path>
Send-DiagnosticData [-SupplementaryLogs <string>] -SaveToPath <path>
WithNoLogCollection. Here, only ad-hoc logs are collected and sent to Microsoft. No diagnostic logs are collected.
NoLogCollection
Send-DiagnosticData -SupplementaryLogs <string> -NoLogCollection
Send-DiagnosticData -SupplementaryLogs <string> -NoLogCollection
WithoutSaveToPathorNoLogCollection. This means that both diagnostic logs and ad-hoc logs are collected and sent to Microsoft.
SaveToPath
NoLogCollection
Send-DiagnosticData [-SupplementaryLogs <string>]
Send-DiagnosticData [-SupplementaryLogs <string>]
When collecting both diagnostic and ad-hoc logs, you can use theSupplementaryLogsparameter with other parameters such asFilterByRole,FromDate,ToDate, andCollectSddc.
SupplementaryLogs
FilterByRole
FromDate
ToDate
CollectSddc
Examples
WithoutSaveToPathorNoLogCollection:
SaveToPath
NoLogCollection
Send-DiagnosticData âSupplementaryLogs <path to adhoc logs to collect>
Send-DiagnosticData âSupplementaryLogs <path to adhoc logs to collect>
WithSaveToPath:
SaveToPath
Send-DiagnosticData âSaveToPath <path> -SupplementaryLogs <path to adhoc logs to collect>
Send-DiagnosticData âSaveToPath <path> -SupplementaryLogs <path to adhoc logs to collect>
WithNoLogCollection:
NoLogCollection
Send-DiagnosticData âNoLogCollection âSupplementaryLogs <path to adhoc logs to collect>
Send-DiagnosticData âNoLogCollection âSupplementaryLogs <path to adhoc logs to collect>
Extension version
Versions 1.0.2.0 and above
ShareCredential
This parameter provides the flexibility to either collect logs and save them to a share path or directly send logs from a share path to Microsoft.
Syntax
Save logs to a path:
Send-DiagnosticData [-ShareCredential <pscredential>] -SaveToPath <path>
Send-DiagnosticData [-ShareCredential <pscredential>] -SaveToPath <path>
Send logs on a share path to Microsoft:
Send-DiagnosticData [-ShareCredential <pscredential>] -SupplementaryLogs <path> -NoLogCollection;
Send-DiagnosticData [-ShareCredential <pscredential>] -SupplementaryLogs <path> -NoLogCollection;
Examples
Save logs to a path:
Send-DiagnosticData âSaveToPath <share path> -ShareCredential <credential to share path>
Send-DiagnosticData âSaveToPath <share path> -ShareCredential <credential to share path>
Send logs on a share path to Microsoft:
Send-DiagnosticData âNoLogCollection âSupplementaryLogs <share path> âShareCredential <credential to the share path>
Send-DiagnosticData âNoLogCollection âSupplementaryLogs <share path> âShareCredential <credential to the share path>
Extension version
All
(Plan to deprecate) ToSMBShare
This parameter allows you to save logs either to an output path or a share path. If you were using a share path that wasn't mapped, you needed to use theShareCredentialparameter as well. Since this parameter will be removed in future versions of the extension, use the-SaveToPathparameter instead.
ShareCredential
-SaveToPath
Syntax
Send-DiagnosticData âToSMBShare âSharePath <path> [-ShareCredential <pscredential>]
Send-DiagnosticData âToSMBShare âSharePath <path> [-ShareCredential <pscredential>]
Examples
Save logs to an output path or share path:
Send-DiagnosticData âToSMBShare âSharePath <output path or share path>
Send-DiagnosticData âToSMBShare âSharePath <output path or share path>
Save logs to a share path that's not mapped:
Send-DiagnosticData âToSMBShare âSharePath <share path> -ShareCredential <credential for the share path>
Send-DiagnosticData âToSMBShare âSharePath <share path> -ShareCredential <credential for the share path>
Extension version
Initially accessible across all versions, however, this parameter will eventually be limited to Versions 0.1.42 and earlier.
(Plan to deprecate) FromSMBShare
This parameter allows you to send logs from an output path or share path directly to Microsoft. If you were using a share path that wasn't mapped, you needed to use theShareCredentialparameter as well. Since this parameter will be removed in future versions of the extension, use the-NoLogCollectionparameter instead.
ShareCredential
-NoLogCollection
Syntax
Send-DiagnosticData âFromSMBShare âSharePath <path> [-ShareCredential <pscredential>]
Send-DiagnosticData âFromSMBShare âSharePath <path> [-ShareCredential <pscredential>]
Examples
Send-DiagnosticData âFromSMBShare âSharePath <output path or share path>
Send-DiagnosticData âFromSMBShare âSharePath <output path or share path>
Send-DiagnosticData âFromSMBShare âSharePath <share path>
Send-DiagnosticData âFromSMBShare âSharePath <share path>
Extension version
Initially accessible across all versions, however, this parameter will eventually be limited to Versions 0.1.42 and earlier.
(Plan to deprecate) SharePath
The SharePath parameter can be used for one of the following purposes:
Save diagnostic logs to a share path or output path.
Send logs to Microsoft from a share path or output path. If you're using a share path and the share path isn't mapped, then theShareCredentialparameter must also be used.
ShareCredential
Since this parameter will be removed in future versions of the extension, use theâSaveToPathto save logs to a path, orâSupplementaryLogswhen sending ad-hoc logs to Microsoft instead.
âSaveToPath
âSupplementaryLogs
Syntax
Send-DiagnosticData âToSMBShare âSharePath <path> [-ShareCredential <pscredential>];
Send-DiagnosticData âToSMBShare âSharePath <path> [-ShareCredential <pscredential>];
Send-DiagnosticData âFromSMBShare âSharePath <path> [-ShareCredential <pscredential>];
Send-DiagnosticData âFromSMBShare âSharePath <path> [-ShareCredential <pscredential>];
Examples
Send-DiagnosticData âToSMBShare âSharePath <output path or share path>
Send-DiagnosticData âToSMBShare âSharePath <output path or share path>
Send-DiagnosticData âToSMBShare âSharePath <share path> -ShareCredential <credential for the share path>
Send-DiagnosticData âToSMBShare âSharePath <share path> -ShareCredential <credential for the share path>
Send-DiagnosticData âFromSMBShare âSharePath <output path or share path>
Send-DiagnosticData âFromSMBShare âSharePath <output path or share path>
Send-DiagnosticData âFromSMBShare âSharePath <share path>
Send-DiagnosticData âFromSMBShare âSharePath <share path>
Extension version
Initially accessible across all versions, however, this parameter will eventually be limited to Versions 0.1.42 and earlier.
Roles available for filtering logs
The following roles are available for filtering by theFilterByRoleparameter. The available roles may be different in a future release.
Test-Observability
TelemetryAndDiagnostics
UpdateService
OsUpdate
Update Service
OsUpdate
URP
Provide required information in a support case
If you encounter an issue and need help from Microsoft Support, they might ask for specific information to locate your logs.
Azure portal
PowerShell
Follow these steps to provide the required information in the Azure portal:
In theDiagnosticstab, underLog activity, select the link underTime collectedfor the relevant log collection.
In theDiagnosticstab, underLog activity, select the link underTime collectedfor the relevant log collection.
In theLog detailpane, note the value ofCorrelation ID, and share it with Microsoft Support for troubleshooting purposes.
In theLog detailpane, note the value ofCorrelation ID, and share it with Microsoft Support for troubleshooting purposes.

When you useSend-DiagnosticDatato collect logs, it also provides key details in its output that you need to share with Microsoft Support. After you collect logs, they're sent to the Kusto database. Microsoft Support can then use the information provided to locate your logs in Kusto and help you in resolving the reported issue.
Send-DiagnosticData
When requested, share the following information with Microsoft Support. Get this information from theSend-DiagnosticDataoutput.
Send-DiagnosticData
AEORegion: The location where your device is registered.
AEORegion
AEODeviceARMResourceUri: A unique identifier to locate the resource, for example:/subscriptions/<subscription GUID>/resourceGroups/<Name of Resource group>/providers/Microsoft.AzureStackHCI/clusters/<Name of Cluster>.
AEODeviceARMResourceUri
/subscriptions/<subscription GUID>/resourceGroups/<Name of Resource group>/providers/Microsoft.AzureStackHCI/clusters/<Name of Cluster>
AEOClusterNodeArcResourceUri: A unique identifier to locate the ARC resource, for example:/subscriptions/<subscription GUID>/resourceGroups/<Name of Resource group>/providers/Microsoft.HybridCompute/Machines/<machine name>.
AEOClusterNodeArcResourceUri
/subscriptions/<subscription GUID>/resourceGroups/<Name of Resource group>/providers/Microsoft.HybridCompute/Machines/<machine name>
CorrelationId: A unique identifier to locate the logs.
CorrelationId
Next steps
Contact Microsoft Support.
Feedback
Was this page helpful?
Additional resources