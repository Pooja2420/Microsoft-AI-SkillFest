Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
What is Azure Table storage?
Article
2022-11-29
8 contributors
In this article
Tip
The content in this article applies to the original Azure Table storage. However, the same concepts apply to the newer Azure Cosmos DB for Table, which offers higher performance and availability, global distribution, and automatic secondary indexes. It is also available in a consumption-basedserverlessmode. There are somefeature differencesbetween Table API in Azure Cosmos DB and Azure Table storage. For more information, seeAzure Cosmos DB for Table. For ease of development, we now provide a unifiedAzure Tables SDKthat can be used to target both Azure Table storage and Azure Cosmos DB for Table.
Azure Table storage is a service that stores non-relational structured data (also known as structured NoSQL data) in the cloud, providing a key/attribute store with a schemaless design. Because Table storage is schemaless, it's easy to adapt your data as the needs of your application evolve. Access to Table storage data is fast and cost-effective for many types of applications, and is typically lower in cost than traditional SQL for similar volumes of data.
You can use Table storage to store flexible datasets like user data for web applications, address books, device information, or other types of metadata your service requires. You can store any number of entities in a table, and a storage account may contain any number of tables, up to the capacity limit of the storage account.
What is Table storage
Azure Table storage stores large amounts of structured data. The service is a NoSQL datastore which accepts authenticated calls from inside and outside the Azure cloud. Azure tables are ideal for storing structured, non-relational data. Common uses of Table storage include:
Storing TBs of structured data capable of serving web scale applications
Storing datasets that don't require complex joins, foreign keys, or stored procedures and can be denormalized for fast access
Quickly querying data using a clustered index
Accessing data using the OData protocol and LINQ queries with WCF Data Service .NET Libraries
You can use Table storage to store and query huge sets of structured, non-relational data, and your tables will scale as demand increases.
Table storage concepts
Table storage contains the following components:

URL format:Azure Table Storage accounts use this format:http://<storage account>.table.core.windows.net/<table>You can address Azure tables directly using this address with the OData protocol. For more information, seeOData.org.
URL format:Azure Table Storage accounts use this format:http://<storage account>.table.core.windows.net/<table>
http://<storage account>.table.core.windows.net/<table>
You can address Azure tables directly using this address with the OData protocol. For more information, seeOData.org.
Accounts:All access to Azure Storage is done through a storage account. For more information about storage accounts, seeStorage account overview.All access to Azure Cosmos DB is done through an Azure Cosmos DB for Table account. For more information, seeCreate an Azure Cosmos DB for Table account.
Accounts:All access to Azure Storage is done through a storage account. For more information about storage accounts, seeStorage account overview.
All access to Azure Cosmos DB is done through an Azure Cosmos DB for Table account. For more information, seeCreate an Azure Cosmos DB for Table account.
Table: A table is a collection of entities. Tables don't enforce a schema on entities, which means a single table can contain entities that have different sets of properties.
Table: A table is a collection of entities. Tables don't enforce a schema on entities, which means a single table can contain entities that have different sets of properties.
Entity: An entity is a set of properties, similar to a database row. An entity in Azure Storage can be up to 1MB in size. An entity in Azure Cosmos DB can be up to 2MB in size.
Entity: An entity is a set of properties, similar to a database row. An entity in Azure Storage can be up to 1MB in size. An entity in Azure Cosmos DB can be up to 2MB in size.
Properties: A property is a name-value pair. Each entity can include up to 252 properties to store data. Each entity also has three system properties that specify a partition key, a row key, and a timestamp. Entities with the same partition key can be queried more quickly, and inserted/updated in atomic operations. An entity's row key is its unique identifier within a partition.
Properties: A property is a name-value pair. Each entity can include up to 252 properties to store data. Each entity also has three system properties that specify a partition key, a row key, and a timestamp. Entities with the same partition key can be queried more quickly, and inserted/updated in atomic operations. An entity's row key is its unique identifier within a partition.
For details about naming tables and properties, seeUnderstanding the Table Service Data Model.
Next steps
Microsoft Azure Storage Exploreris a free, standalone app from Microsoft that enables you to work visually with Azure Storage data on Windows, macOS, and Linux.
Microsoft Azure Storage Exploreris a free, standalone app from Microsoft that enables you to work visually with Azure Storage data on Windows, macOS, and Linux.
Get started with Azure Table Storage in .NET
Get started with Azure Table Storage in .NET
View the Table service reference documentation for complete details about available APIs:Storage Client Library for .NET referenceREST API reference
View the Table service reference documentation for complete details about available APIs:
Storage Client Library for .NET reference
Storage Client Library for .NET reference
REST API reference
REST API reference
Feedback
Was this page helpful?
Additional resources