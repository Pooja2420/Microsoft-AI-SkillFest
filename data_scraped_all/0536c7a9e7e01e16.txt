Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Microsoft.Security connectors
Article
2024-12-09
2 contributors
In this article
Latest
2020-01-01-preview
Bicep resource definition
The connectors resource type can be deployed with operations that target:
Subscription- Seesubscription deployment commands
For a list of changed properties in each API version, seechange log.
Resource format
To create a Microsoft.Security/connectors resource, add the following Bicep to your template.
resource symbolicname 'Microsoft.Security/connectors@2020-01-01-preview' = {
  name: 'string'
  properties: {
    authenticationDetails: {
      authenticationType: 'string'
      // For remaining properties, see AuthenticationDetailsProperties objects
    }
    hybridComputeSettings: {
      autoProvision: 'string'
      proxyServer: {
        ip: 'string'
        port: 'string'
      }
      region: 'string'
      resourceGroupName: 'string'
      servicePrincipal: {
        applicationId: 'string'
        secret: 'string'
      }
    }
  }
}
resource symbolicname 'Microsoft.Security/connectors@2020-01-01-preview' = {
  name: 'string'
  properties: {
    authenticationDetails: {
      authenticationType: 'string'
      // For remaining properties, see AuthenticationDetailsProperties objects
    }
    hybridComputeSettings: {
      autoProvision: 'string'
      proxyServer: {
        ip: 'string'
        port: 'string'
      }
      region: 'string'
      resourceGroupName: 'string'
      servicePrincipal: {
        applicationId: 'string'
        secret: 'string'
      }
    }
  }
}
AuthenticationDetailsProperties objects
Set theauthenticationTypeproperty to specify the type of object.
ForawsAssumeRole, use:
{
  authenticationType: 'awsAssumeRole'
  awsAssumeRoleArn: 'string'
  awsExternalId: 'string'
}
{
  authenticationType: 'awsAssumeRole'
  awsAssumeRoleArn: 'string'
  awsExternalId: 'string'
}
ForawsCreds, use:
{
  authenticationType: 'awsCreds'
  awsAccessKeyId: 'string'
  awsSecretAccessKey: 'string'
}
{
  authenticationType: 'awsCreds'
  awsAccessKeyId: 'string'
  awsSecretAccessKey: 'string'
}
ForgcpCredentials, use:
{
  authenticationType: 'gcpCredentials'
  authProviderX509CertUrl: 'string'
  authUri: 'string'
  clientEmail: 'string'
  clientId: 'string'
  clientX509CertUrl: 'string'
  organizationId: 'string'
  privateKey: 'string'
  privateKeyId: 'string'
  projectId: 'string'
  tokenUri: 'string'
  type: 'string'
}
{
  authenticationType: 'gcpCredentials'
  authProviderX509CertUrl: 'string'
  authUri: 'string'
  clientEmail: 'string'
  clientId: 'string'
  clientX509CertUrl: 'string'
  organizationId: 'string'
  privateKey: 'string'
  privateKeyId: 'string'
  projectId: 'string'
  tokenUri: 'string'
  type: 'string'
}
Property Values
AuthenticationDetailsProperties
AwAssumeRoleAuthenticationDetailsProperties
AwsCredsAuthenticationDetailsProperties
ConnectorSettingProperties
GcpCredentialsDetailsProperties
HybridComputeSettingsProperties
Microsoft.Security/connectors
ProxyServerProperties
ServicePrincipalProperties
ARM template resource definition
The connectors resource type can be deployed with operations that target:
Subscription- Seesubscription deployment commands
For a list of changed properties in each API version, seechange log.
Resource format
To create a Microsoft.Security/connectors resource, add the following JSON to your template.
{
  "type": "Microsoft.Security/connectors",
  "apiVersion": "2020-01-01-preview",
  "name": "string",
  "properties": {
    "authenticationDetails": {
      "authenticationType": "string"
      // For remaining properties, see AuthenticationDetailsProperties objects
    },
    "hybridComputeSettings": {
      "autoProvision": "string",
      "proxyServer": {
        "ip": "string",
        "port": "string"
      },
      "region": "string",
      "resourceGroupName": "string",
      "servicePrincipal": {
        "applicationId": "string",
        "secret": "string"
      }
    }
  }
}
{
  "type": "Microsoft.Security/connectors",
  "apiVersion": "2020-01-01-preview",
  "name": "string",
  "properties": {
    "authenticationDetails": {
      "authenticationType": "string"
      // For remaining properties, see AuthenticationDetailsProperties objects
    },
    "hybridComputeSettings": {
      "autoProvision": "string",
      "proxyServer": {
        "ip": "string",
        "port": "string"
      },
      "region": "string",
      "resourceGroupName": "string",
      "servicePrincipal": {
        "applicationId": "string",
        "secret": "string"
      }
    }
  }
}
AuthenticationDetailsProperties objects
Set theauthenticationTypeproperty to specify the type of object.
ForawsAssumeRole, use:
{
  "authenticationType": "awsAssumeRole",
  "awsAssumeRoleArn": "string",
  "awsExternalId": "string"
}
{
  "authenticationType": "awsAssumeRole",
  "awsAssumeRoleArn": "string",
  "awsExternalId": "string"
}
ForawsCreds, use:
{
  "authenticationType": "awsCreds",
  "awsAccessKeyId": "string",
  "awsSecretAccessKey": "string"
}
{
  "authenticationType": "awsCreds",
  "awsAccessKeyId": "string",
  "awsSecretAccessKey": "string"
}
ForgcpCredentials, use:
{
  "authenticationType": "gcpCredentials",
  "authProviderX509CertUrl": "string",
  "authUri": "string",
  "clientEmail": "string",
  "clientId": "string",
  "clientX509CertUrl": "string",
  "organizationId": "string",
  "privateKey": "string",
  "privateKeyId": "string",
  "projectId": "string",
  "tokenUri": "string",
  "type": "string"
}
{
  "authenticationType": "gcpCredentials",
  "authProviderX509CertUrl": "string",
  "authUri": "string",
  "clientEmail": "string",
  "clientId": "string",
  "clientX509CertUrl": "string",
  "organizationId": "string",
  "privateKey": "string",
  "privateKeyId": "string",
  "projectId": "string",
  "tokenUri": "string",
  "type": "string"
}
Property Values
AuthenticationDetailsProperties
AwAssumeRoleAuthenticationDetailsProperties
AwsCredsAuthenticationDetailsProperties
ConnectorSettingProperties
GcpCredentialsDetailsProperties
HybridComputeSettingsProperties
Microsoft.Security/connectors
ProxyServerProperties
ServicePrincipalProperties
Usage Examples
Terraform (AzAPI provider) resource definition
The connectors resource type can be deployed with operations that target:
Subscription
For a list of changed properties in each API version, seechange log.
Resource format
To create a Microsoft.Security/connectors resource, add the following Terraform to your template.
resource "azapi_resource" "symbolicname" {
  type = "Microsoft.Security/connectors@2020-01-01-preview"
  name = "string"
  body = {
    properties = {
      authenticationDetails = {
        authenticationType = "string"
        // For remaining properties, see AuthenticationDetailsProperties objects
      }
      hybridComputeSettings = {
        autoProvision = "string"
        proxyServer = {
          ip = "string"
          port = "string"
        }
        region = "string"
        resourceGroupName = "string"
        servicePrincipal = {
          applicationId = "string"
          secret = "string"
        }
      }
    }
  }
}
resource "azapi_resource" "symbolicname" {
  type = "Microsoft.Security/connectors@2020-01-01-preview"
  name = "string"
  body = {
    properties = {
      authenticationDetails = {
        authenticationType = "string"
        // For remaining properties, see AuthenticationDetailsProperties objects
      }
      hybridComputeSettings = {
        autoProvision = "string"
        proxyServer = {
          ip = "string"
          port = "string"
        }
        region = "string"
        resourceGroupName = "string"
        servicePrincipal = {
          applicationId = "string"
          secret = "string"
        }
      }
    }
  }
}
AuthenticationDetailsProperties objects
Set theauthenticationTypeproperty to specify the type of object.
ForawsAssumeRole, use:
{
  authenticationType = "awsAssumeRole"
  awsAssumeRoleArn = "string"
  awsExternalId = "string"
}
{
  authenticationType = "awsAssumeRole"
  awsAssumeRoleArn = "string"
  awsExternalId = "string"
}
ForawsCreds, use:
{
  authenticationType = "awsCreds"
  awsAccessKeyId = "string"
  awsSecretAccessKey = "string"
}
{
  authenticationType = "awsCreds"
  awsAccessKeyId = "string"
  awsSecretAccessKey = "string"
}
ForgcpCredentials, use:
{
  authenticationType = "gcpCredentials"
  authProviderX509CertUrl = "string"
  authUri = "string"
  clientEmail = "string"
  clientId = "string"
  clientX509CertUrl = "string"
  organizationId = "string"
  privateKey = "string"
  privateKeyId = "string"
  projectId = "string"
  tokenUri = "string"
  type = "string"
}
{
  authenticationType = "gcpCredentials"
  authProviderX509CertUrl = "string"
  authUri = "string"
  clientEmail = "string"
  clientId = "string"
  clientX509CertUrl = "string"
  organizationId = "string"
  privateKey = "string"
  privateKeyId = "string"
  projectId = "string"
  tokenUri = "string"
  type = "string"
}
Property Values
AuthenticationDetailsProperties
AwAssumeRoleAuthenticationDetailsProperties
AwsCredsAuthenticationDetailsProperties
ConnectorSettingProperties
GcpCredentialsDetailsProperties
HybridComputeSettingsProperties
Microsoft.Security/connectors
ProxyServerProperties
ServicePrincipalProperties
Feedback
Was this page helpful?
Additional resources