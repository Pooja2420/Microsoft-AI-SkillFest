Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Work tracking, process, and project limits
Article
2025-03-05
15 contributors
In this article
Azure DevOps Services | Azure DevOps Server 2022 - Azure DevOps Server 2019
This article defines operational and object limits placed on work tracking operations and work tracking customization. In addition to the specified hard limits on specific objects, some practical limits apply. When you customize work item types (WITs), consider the limits placed on objects.
Work items and queries
When you define work items or running queries, keep the following operational limits in mind:
The REST API for Azure DevOps Services enforces a work item revision limit of 10,000 updates. This limit restricts updates made through the REST API, but updates from the web portal aren't affected.
The default maximum attachment size is 4 MB. You canchange the maximum size up to 2 GB.
To improve query performance, seeDefine a query/Best practices.
Backlogs, boards, dashboards, and teams
When you work with teams, work item tags, backlogs, and boards, the following operational display and object limits apply.
Each backlog can display up to 10,000 work items. This limit applies to what the backlog can display, not to the number of work items you can define, as there's no specific limit. If your backlog exceeds this limit, consider adding a team and moving some work items to the new team's backlog.
Tip
If you're approaching the dashboards limits, see the following steps to manage and clean up your dashboards:
Review usage:Identify dashboards that are no longer in use or are duplicates. You can do this by checking the last accessed date or by consulting with team members.
Consolidate dashboards:Combine similar dashboards to reduce the total number. This can be done by adding multiple widgets to a single dashboard.
Archive old dashboards:If certain dashboards are no longer needed but you want to keep the data, consider exporting the data and archiving the dashboards.
Use the Object Limit Tracker feature:Provides real-time visibility into resource usage, including dashboards. This feature can help youproactively manage your limits and avoid potential issues.
Completed or closed work items don't display on backlogs and boards once theirChanged Dateis older than a year. You can still list these items using a query. To make them show up on a backlog or board, make a minor change to reset the display clock.
Avoid nesting backlog items of the same type. For more information, seeFix reordering and nesting issues.
Avoid assigning the same area paths to more than one team. For more information, seeLimitations of multi-team board views.
By default, work item limits might be set to lower values initially.
When you work with teams, work item tags, backlogs, and boards, the following operational limits apply. Default and maximum limits.
Each backlog can display up to 999 work items. If your backlog exceeds this limit, consider creating a team and moving some of the work items to the new team's backlog.
Avoid nesting backlog items of the same type. For more information, seeFix reordering and nesting issues.
Avoid assigning the same area paths to multiple teams. For more information, seeLimitations of multi-team board views.
For the On-premises XML process model, you can modify the backlog and Taskboard limits by editing theProcessConfiguration.xmlfile. For details, seeProcess configuration XML element reference.
ProcessConfiguration.xml
GitHub integration
If youintegrate your project with GitHub, the following limits apply.
Projects
Azure DevOps Services limits each organization to 1,000 projects per organization, an increase over the previous limit of 300 projects.
Note
Above 300 projects, certain experiences, like connecting to a project from Visual Studio, might degrade. For on-premises Azure DevOps Server, there are no hard limits, but performance issues may arise as the number of projects nears 300. When migrating to Azure DevOps Services, observe the maximum limit of 1,000 projects. If your collection exceeds this limit, split the collection or delete older projects.
For more information, seeMigrate data from Azure DevOps Server to Azure DevOps Services.
Process customization
Many limits are imposed on the number of objects you can define for a process. For more information, seeCustomize your work tracking experience.
The following table lists the maximum number of objects you can define for the Inheritance and Hosted XML process models. While these limits are hard limits, practical limits might also apply.
For other restrictions and conformance requirements of the Hosted XML process model, seeCustomize a process when using Hosted XML.
Note
For the Hosted XML process model, you can define approximately 10,000 items across all global lists specified in all WITs.
The following table lists the maximum number of objects you can define for the Inheritance and On-premises XML process models. While these limits are hard limits, practical limits might also apply.
Note
For the On-premises XML process model, you can define an approximate total of 10K items for all global lists specified across all WITs.
Practical limits
To minimize performance issues, we recommend following this guidance:
Limit the number of custom fields you define. All custom fields contribute to the total allowed for a process, collection, or organization. You can specify different behaviors, such as rules and picklists, for the same field in different WITs.
Limit the number of rules you define for a WIT. While you can create multiple rules for a WIT, other rules can negatively affect performance when users add or modify work items. When users save work items, the system validates all rules associated with the fields for that work item type. In some cases, the rule validation expression might be too complex for SQL to evaluate efficiently.
Limit the number of custom WITs you define.
Limit the number of custom fields you define. All custom fields contribute to the total allowed for a process, collection, or organization. You can specify different behaviors, such as rules and picklists, for the same field in different WITs.
Limit the number of rules you define for a WIT. While you can create multiple rules for a WIT, other rules can negatively affect performance when users add or modify work items. When users save work items, the system validates all rules associated with the fields for that work item type. In some cases, the rule validation expression might be too complex for SQL to evaluate efficiently.
Limit the number of custom WITs you define.
Limit the number of reportable fields you define. Reportable fields can affect the performance of your data warehouse.
Note
Work Item Rules Validation Exceeds SQL Limits: A single SQL expression is defined per project to validate work items whenever they are created or updated. This expression grows with the number of rules specified for all work item types in the project. Each behavioral qualifier for a field increases the number of sub-expressions. Nested rules, rules that apply only on a transition, or rules conditioned on the value of another field add more conditions to an IF statement. Once the expression reaches a certain size or complexity, SQL can no longer evaluate it and generates an error. To resolve this error, remove some WITs or eliminate some rules.
Rate limits
To reduce costs and enhance scalability and performance, Azure DevOps Services, like many Software-as-a-Service solutions, uses multi-tenancy. To ensure good performance and minimize the risk of outages, Azure DevOps Services limits the resources individuals can consume and the number of requests they can make to certain commands. When these limits are exceeded, subsequent requests might be delayed or blocked.
Most rate limits are reached through REST API calls or nonoptimized queries. For more information, seeRate limitsandBest practices (to avoid hitting rate limits).
Migrate and import limits
When migrating from on-premises to Azure DevOps Services, you might encounter several size limits, including:
Database size exceeding the recommended size
Largest table size exceeding the recommended size
Database metadata size exceeding the supported size
For more information, seeMigrate data from Azure DevOps Server to Azure DevOps ServicesandTroubleshoot import and migration errors.
Related articles
Learn about process customization and inherited processes
Create an inheritance process
Follow best practices
Adhere to naming restrictions and conventions
Customize your work tracking experience
Learn about process customization and inherited processes
Customize on-premises XML processes
Understand rules and rule evaluation
Follow naming restrictions and conventions
Related resources
Tags Manager
WIQL Editor
Feedback
Was this page helpful?
Additional resources