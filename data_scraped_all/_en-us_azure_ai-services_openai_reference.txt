Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Azure OpenAI Service REST API reference
Article
2025-01-29
24 contributors
In this article
This article provides details on the inference REST API endpoints for Azure OpenAI.
API specs
Managing and interacting with Azure OpenAI models and resources is divided across three primary API surfaces:
Control plane
Data plane - authoring
Data plane - inference
Each API surface/specification encapsulates a different set of Azure OpenAI capabilities. Each API has its own unique set of preview and stable/generally available (GA) API releases. Preview releases currently tend to follow a monthly cadence.
2024-06-01-preview
2024-10-01
2025-03-01-preview
2024-10-21
2025-03-01-preview
2024-10-21
Authentication
Azure OpenAI provides two methods for authentication. You can use  either API Keys or Microsoft Entra ID.
API Key authentication: For this type of authentication, all API requests must include the API Key in theapi-keyHTTP header. TheQuickstartprovides guidance for how to make calls with this type of authentication.
API Key authentication: For this type of authentication, all API requests must include the API Key in theapi-keyHTTP header. TheQuickstartprovides guidance for how to make calls with this type of authentication.
api-key
Microsoft Entra ID authentication: You can authenticate an API call using a Microsoft Entra token. Authentication tokens are included in a request as theAuthorizationheader. The token provided must be preceded byBearer, for exampleBearer YOUR_AUTH_TOKEN. You can read our how-to guide onauthenticating with Microsoft Entra ID.
Microsoft Entra ID authentication: You can authenticate an API call using a Microsoft Entra token. Authentication tokens are included in a request as theAuthorizationheader. The token provided must be preceded byBearer, for exampleBearer YOUR_AUTH_TOKEN. You can read our how-to guide onauthenticating with Microsoft Entra ID.
Authorization
Bearer
Bearer YOUR_AUTH_TOKEN
REST API versioning
The service APIs are versioned using theapi-versionquery parameter. All versions follow the YYYY-MM-DD date structure. For example:
api-version
POST https://YOUR_RESOURCE_NAME.openai.azure.com/openai/deployments/YOUR_DEPLOYMENT_NAME/chat/completions?api-version=2024-06-01
POST https://YOUR_RESOURCE_NAME.openai.azure.com/openai/deployments/YOUR_DEPLOYMENT_NAME/chat/completions?api-version=2024-06-01
Data plane inference
The rest of the article covers the latest GA release of the Azure OpenAI data plane inference specification,2024-10-21.
2024-10-21
If you're looking for documentation on the latest preview API release, refer to thelatest preview data plane inference API
Completions
POST https://{endpoint}/openai/deployments/{deployment-id}/completions?api-version=2024-10-21
POST https://{endpoint}/openai/deployments/{deployment-id}/completions?api-version=2024-10-21
Creates a completion for the provided prompt, parameters, and chosen model.
URI Parameters
https://aoairesource.openai.azure.com
Request Header
Request Body
Content-Type: application/json
best_of
n
best_of
n
best_of
n
max_tokens
stop
{"50256": -100}
logprobs
logprobs
logprob
logprobs+1
logprobs
max_tokens
max_tokens
stop
seed
system_fingerprint
data: [DONE]
gpt-3.5-turbo-instruct
top_p
temperature
Responses
Status Code:200
Description: OK
Status Code:default
Description: Service unavailable
Examples
Example
Creates a completion for the provided prompt, parameters, and chosen model.
POST https://{endpoint}/openai/deployments/{deployment-id}/completions?api-version=2024-10-21

{
 "prompt": [
  "tell me a joke about mango"
 ],
 "max_tokens": 32,
 "temperature": 1.0,
 "n": 1
}
POST https://{endpoint}/openai/deployments/{deployment-id}/completions?api-version=2024-10-21

{
 "prompt": [
  "tell me a joke about mango"
 ],
 "max_tokens": 32,
 "temperature": 1.0,
 "n": 1
}
Responses:
Status Code: 200
{
  "body": {
    "id": "cmpl-7QmVI15qgYVllxK0FtxVGG6ywfzaq",
    "created": 1686617332,
    "choices": [
      {
        "text": "es\n\nWhat do you call a mango who's in charge?\n\nThe head mango.",
        "index": 0,
        "finish_reason": "stop",
        "logprobs": null
      }
    ],
    "usage": {
      "completion_tokens": 20,
      "prompt_tokens": 6,
      "total_tokens": 26
    }
  }
}
{
  "body": {
    "id": "cmpl-7QmVI15qgYVllxK0FtxVGG6ywfzaq",
    "created": 1686617332,
    "choices": [
      {
        "text": "es\n\nWhat do you call a mango who's in charge?\n\nThe head mango.",
        "index": 0,
        "finish_reason": "stop",
        "logprobs": null
      }
    ],
    "usage": {
      "completion_tokens": 20,
      "prompt_tokens": 6,
      "total_tokens": 26
    }
  }
}
Embeddings
POST https://{endpoint}/openai/deployments/{deployment-id}/embeddings?api-version=2024-10-21
POST https://{endpoint}/openai/deployments/{deployment-id}/embeddings?api-version=2024-10-21
Get a vector representation of a given input that can be easily consumed by machine learning models and algorithms.
URI Parameters
https://aoairesource.openai.azure.com
Request Header
Request Body
Content-Type: application/json
text-embedding-ada-002
float
base64
float
text-embedding-3
Responses
Properties for usage
Status Code:200
Description: OK
Examples
Example
Return the embeddings for a given prompt.
POST https://{endpoint}/openai/deployments/{deployment-id}/embeddings?api-version=2024-10-21

{
 "input": [
  "this is a test"
 ]
}
POST https://{endpoint}/openai/deployments/{deployment-id}/embeddings?api-version=2024-10-21

{
 "input": [
  "this is a test"
 ]
}
Responses:
Status Code: 200
{
  "body": {
    "data": [
      {
        "index": 0,
        "embedding": [
          -0.012838088,
          -0.007421397,
          -0.017617522,
          -0.028278312,
          -0.018666342,
          0.01737855,
          -0.01821495,
          -0.006950092,
          -0.009937238,
          -0.038580645,
          0.010674067,
          0.02412286,
          -0.013647936,
          0.013189907,
          0.0021125758,
          0.012406612,
          0.020790534,
          0.00074595667,
          0.008397198,
          -0.00535031,
          0.008968075,
          0.014351576,
          -0.014086051,
          0.015055214,
          -0.022211088,
          -0.025198232,
          0.0065186154,
          -0.036350243,
          0.009180495,
          -0.009698266,
          0.009446018,
          -0.008463579,
          -0.0040426035,
          -0.03443847,
          -0.00091273896,
          -0.0019217303,
          0.002349888,
          -0.021560553,
          0.016515596,
          -0.015572986,
          0.0038666942,
          -8.432463e-05
        ]
      }
    ],
    "usage": {
      "prompt_tokens": 4,
      "total_tokens": 4
    }
  }
}
{
  "body": {
    "data": [
      {
        "index": 0,
        "embedding": [
          -0.012838088,
          -0.007421397,
          -0.017617522,
          -0.028278312,
          -0.018666342,
          0.01737855,
          -0.01821495,
          -0.006950092,
          -0.009937238,
          -0.038580645,
          0.010674067,
          0.02412286,
          -0.013647936,
          0.013189907,
          0.0021125758,
          0.012406612,
          0.020790534,
          0.00074595667,
          0.008397198,
          -0.00535031,
          0.008968075,
          0.014351576,
          -0.014086051,
          0.015055214,
          -0.022211088,
          -0.025198232,
          0.0065186154,
          -0.036350243,
          0.009180495,
          -0.009698266,
          0.009446018,
          -0.008463579,
          -0.0040426035,
          -0.03443847,
          -0.00091273896,
          -0.0019217303,
          0.002349888,
          -0.021560553,
          0.016515596,
          -0.015572986,
          0.0038666942,
          -8.432463e-05
        ]
      }
    ],
    "usage": {
      "prompt_tokens": 4,
      "total_tokens": 4
    }
  }
}
Chat completions
POST https://{endpoint}/openai/deployments/{deployment-id}/chat/completions?api-version=2024-10-21
POST https://{endpoint}/openai/deployments/{deployment-id}/chat/completions?api-version=2024-10-21
Creates a completion for the chat message
URI Parameters
https://aoairesource.openai.azure.com
Request Header
Request Body
Content-Type: application/json
top_p
temperature
data: [DONE]
content
message
logprobs
true
n
1
gpt-3.5-turbo-1106
{ "type": "json_schema", "json_schema": {...} }
{ "type": "json_object" }
finish_reason="length"
max_tokens
seed
system_fingerprint
none
auto
required
{"type": "function", "function": {"name": "my_function"}}
none
auto
tool_choice
none
auto
{"name": "my_function"}
none
auto
tools
Responses
Status Code:200
Description: OK
Status Code:default
Description: Service unavailable
Examples
Example
Creates a completion for the provided prompt, parameters, and chosen model.
POST https://{endpoint}/openai/deployments/{deployment-id}/chat/completions?api-version=2024-10-21

{
 "messages": [
  {
   "role": "system",
   "content": "you are a helpful assistant that talks like a pirate"
  },
  {
   "role": "user",
   "content": "can you tell me how to care for a parrot?"
  }
 ]
}
POST https://{endpoint}/openai/deployments/{deployment-id}/chat/completions?api-version=2024-10-21

{
 "messages": [
  {
   "role": "system",
   "content": "you are a helpful assistant that talks like a pirate"
  },
  {
   "role": "user",
   "content": "can you tell me how to care for a parrot?"
  }
 ]
}
Responses:
Status Code: 200
{
  "body": {
    "id": "chatcmpl-7R1nGnsXO8n4oi9UPz2f3UHdgAYMn",
    "created": 1686676106,
    "choices": [
      {
        "index": 0,
        "finish_reason": "stop",
        "message": {
          "role": "assistant",
          "content": "Ahoy matey! So ye be wantin' to care for a fine squawkin' parrot, eh? Well, shiver me timbers, let ol' Cap'n Assistant share some wisdom with ye! Here be the steps to keepin' yer parrot happy 'n healthy:\n\n1. Secure a sturdy cage: Yer parrot be needin' a comfortable place to lay anchor! Be sure ye get a sturdy cage, at least double the size of the bird's wingspan, with enough space to spread their wings, yarrrr!\n\n2. Perches 'n toys: Aye, parrots need perches of different sizes, shapes, 'n textures to keep their feet healthy. Also, a few toys be helpin' to keep them entertained 'n their minds stimulated, arrrh!\n\n3. Proper grub: Feed yer feathered friend a balanced diet of high-quality pellets, fruits, 'n veggies to keep 'em strong 'n healthy. Give 'em fresh water every day, or ye\u00e2\u20ac\u2122ll have a scurvy bird on yer hands!\n\n4. Cleanliness: Swab their cage deck! Clean their cage on a regular basis: fresh water 'n food daily, the floor every couple of days, 'n a thorough scrubbing ev'ry few weeks, so the bird be livin' in a tidy haven, arrhh!\n\n5. Socialize 'n train: Parrots be a sociable lot, arrr! Exercise 'n interact with 'em daily to create a bond 'n maintain their mental 'n physical health. Train 'em with positive reinforcement, treat 'em kindly, yarrr!\n\n6. Proper rest: Yer parrot be needin' \u00e2\u20ac\u2122bout 10-12 hours o' sleep each night. Cover their cage 'n let them slumber in a dim, quiet quarter for a proper night's rest, ye scallywag!\n\n7. Keep a weather eye open for illness: Birds be hidin' their ailments, arrr! Be watchful for signs of sickness, such as lethargy, loss of appetite, puffin' up, or change in droppings, and make haste to a vet if need be.\n\n8. Provide fresh air 'n avoid toxins: Parrots be sensitive to draft and pollutants. Keep yer quarters well ventilated, but no drafts, arrr! Be mindful of toxins like Teflon fumes, candles, or air fresheners.\n\nSo there ye have it, me hearty! With proper care 'n commitment, yer parrot will be squawkin' \"Yo-ho-ho\" for many years to come! Good luck, sailor, and may the wind be at yer back!"
        }
      }
    ],
    "usage": {
      "completion_tokens": 557,
      "prompt_tokens": 33,
      "total_tokens": 590
    }
  }
}
{
  "body": {
    "id": "chatcmpl-7R1nGnsXO8n4oi9UPz2f3UHdgAYMn",
    "created": 1686676106,
    "choices": [
      {
        "index": 0,
        "finish_reason": "stop",
        "message": {
          "role": "assistant",
          "content": "Ahoy matey! So ye be wantin' to care for a fine squawkin' parrot, eh? Well, shiver me timbers, let ol' Cap'n Assistant share some wisdom with ye! Here be the steps to keepin' yer parrot happy 'n healthy:\n\n1. Secure a sturdy cage: Yer parrot be needin' a comfortable place to lay anchor! Be sure ye get a sturdy cage, at least double the size of the bird's wingspan, with enough space to spread their wings, yarrrr!\n\n2. Perches 'n toys: Aye, parrots need perches of different sizes, shapes, 'n textures to keep their feet healthy. Also, a few toys be helpin' to keep them entertained 'n their minds stimulated, arrrh!\n\n3. Proper grub: Feed yer feathered friend a balanced diet of high-quality pellets, fruits, 'n veggies to keep 'em strong 'n healthy. Give 'em fresh water every day, or ye\u00e2\u20ac\u2122ll have a scurvy bird on yer hands!\n\n4. Cleanliness: Swab their cage deck! Clean their cage on a regular basis: fresh water 'n food daily, the floor every couple of days, 'n a thorough scrubbing ev'ry few weeks, so the bird be livin' in a tidy haven, arrhh!\n\n5. Socialize 'n train: Parrots be a sociable lot, arrr! Exercise 'n interact with 'em daily to create a bond 'n maintain their mental 'n physical health. Train 'em with positive reinforcement, treat 'em kindly, yarrr!\n\n6. Proper rest: Yer parrot be needin' \u00e2\u20ac\u2122bout 10-12 hours o' sleep each night. Cover their cage 'n let them slumber in a dim, quiet quarter for a proper night's rest, ye scallywag!\n\n7. Keep a weather eye open for illness: Birds be hidin' their ailments, arrr! Be watchful for signs of sickness, such as lethargy, loss of appetite, puffin' up, or change in droppings, and make haste to a vet if need be.\n\n8. Provide fresh air 'n avoid toxins: Parrots be sensitive to draft and pollutants. Keep yer quarters well ventilated, but no drafts, arrr! Be mindful of toxins like Teflon fumes, candles, or air fresheners.\n\nSo there ye have it, me hearty! With proper care 'n commitment, yer parrot will be squawkin' \"Yo-ho-ho\" for many years to come! Good luck, sailor, and may the wind be at yer back!"
        }
      }
    ],
    "usage": {
      "completion_tokens": 557,
      "prompt_tokens": 33,
      "total_tokens": 590
    }
  }
}
Example
Creates a completion based on Azure Search data and system-assigned managed identity.
POST https://{endpoint}/openai/deployments/{deployment-id}/chat/completions?api-version=2024-10-21

{
 "messages": [
  {
   "role": "user",
   "content": "can you tell me how to care for a dog?"
  }
 ],
 "data_sources": [
  {
   "type": "azure_search",
   "parameters": {
    "endpoint": "https://your-search-endpoint.search.windows.net/",
    "index_name": "{index name}",
    "authentication": {
     "type": "system_assigned_managed_identity"
    }
   }
  }
 ]
}
POST https://{endpoint}/openai/deployments/{deployment-id}/chat/completions?api-version=2024-10-21

{
 "messages": [
  {
   "role": "user",
   "content": "can you tell me how to care for a dog?"
  }
 ],
 "data_sources": [
  {
   "type": "azure_search",
   "parameters": {
    "endpoint": "https://your-search-endpoint.search.windows.net/",
    "index_name": "{index name}",
    "authentication": {
     "type": "system_assigned_managed_identity"
    }
   }
  }
 ]
}
Responses:
Status Code: 200
{
  "body": {
    "id": "chatcmpl-7R1nGnsXO8n4oi9UPz2f3UHdgAYMn",
    "created": 1686676106,
    "choices": [
      {
        "index": 0,
        "finish_reason": "stop",
        "message": {
          "role": "assistant",
          "content": "Content of the completion [doc1].",
          "context": {
            "citations": [
              {
                "content": "Citation content.",
                "title": "Citation Title",
                "filepath": "contoso.txt",
                "url": "https://contoso.blob.windows.net/container/contoso.txt",
                "chunk_id": "0"
              }
            ],
            "intent": "dog care"
          }
        }
      }
    ],
    "usage": {
      "completion_tokens": 557,
      "prompt_tokens": 33,
      "total_tokens": 590
    }
  }
}
{
  "body": {
    "id": "chatcmpl-7R1nGnsXO8n4oi9UPz2f3UHdgAYMn",
    "created": 1686676106,
    "choices": [
      {
        "index": 0,
        "finish_reason": "stop",
        "message": {
          "role": "assistant",
          "content": "Content of the completion [doc1].",
          "context": {
            "citations": [
              {
                "content": "Citation content.",
                "title": "Citation Title",
                "filepath": "contoso.txt",
                "url": "https://contoso.blob.windows.net/container/contoso.txt",
                "chunk_id": "0"
              }
            ],
            "intent": "dog care"
          }
        }
      }
    ],
    "usage": {
      "completion_tokens": 557,
      "prompt_tokens": 33,
      "total_tokens": 590
    }
  }
}
Example
Creates a completion based on Azure Search vector data, previous assistant message and user-assigned managed identity.
POST https://{endpoint}/openai/deployments/{deployment-id}/chat/completions?api-version=2024-10-21

{
 "messages": [
  {
   "role": "user",
   "content": "can you tell me how to care for a cat?"
  },
  {
   "role": "assistant",
   "content": "Content of the completion [doc1].",
   "context": {
    "intent": "cat care"
   }
  },
  {
   "role": "user",
   "content": "how about dog?"
  }
 ],
 "data_sources": [
  {
   "type": "azure_search",
   "parameters": {
    "endpoint": "https://your-search-endpoint.search.windows.net/",
    "authentication": {
     "type": "user_assigned_managed_identity",
     "managed_identity_resource_id": "/subscriptions/{subscription-id}/resourceGroups/{resource-group}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{resource-name}"
    },
    "index_name": "{index name}",
    "query_type": "vector",
    "embedding_dependency": {
     "type": "deployment_name",
     "deployment_name": "{embedding deployment name}"
    },
    "in_scope": true,
    "top_n_documents": 5,
    "strictness": 3,
    "role_information": "You are an AI assistant that helps people find information.",
    "fields_mapping": {
     "content_fields_separator": "\\n",
     "content_fields": [
      "content"
     ],
     "filepath_field": "filepath",
     "title_field": "title",
     "url_field": "url",
     "vector_fields": [
      "contentvector"
     ]
    }
   }
  }
 ]
}
POST https://{endpoint}/openai/deployments/{deployment-id}/chat/completions?api-version=2024-10-21

{
 "messages": [
  {
   "role": "user",
   "content": "can you tell me how to care for a cat?"
  },
  {
   "role": "assistant",
   "content": "Content of the completion [doc1].",
   "context": {
    "intent": "cat care"
   }
  },
  {
   "role": "user",
   "content": "how about dog?"
  }
 ],
 "data_sources": [
  {
   "type": "azure_search",
   "parameters": {
    "endpoint": "https://your-search-endpoint.search.windows.net/",
    "authentication": {
     "type": "user_assigned_managed_identity",
     "managed_identity_resource_id": "/subscriptions/{subscription-id}/resourceGroups/{resource-group}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{resource-name}"
    },
    "index_name": "{index name}",
    "query_type": "vector",
    "embedding_dependency": {
     "type": "deployment_name",
     "deployment_name": "{embedding deployment name}"
    },
    "in_scope": true,
    "top_n_documents": 5,
    "strictness": 3,
    "role_information": "You are an AI assistant that helps people find information.",
    "fields_mapping": {
     "content_fields_separator": "\\n",
     "content_fields": [
      "content"
     ],
     "filepath_field": "filepath",
     "title_field": "title",
     "url_field": "url",
     "vector_fields": [
      "contentvector"
     ]
    }
   }
  }
 ]
}
Responses:
Status Code: 200
{
  "body": {
    "id": "chatcmpl-7R1nGnsXO8n4oi9UPz2f3UHdgAYMn",
    "created": 1686676106,
    "choices": [
      {
        "index": 0,
        "finish_reason": "stop",
        "message": {
          "role": "assistant",
          "content": "Content of the completion [doc1].",
          "context": {
            "citations": [
              {
                "content": "Citation content 2.",
                "title": "Citation Title 2",
                "filepath": "contoso2.txt",
                "url": "https://contoso.blob.windows.net/container/contoso2.txt",
                "chunk_id": "0"
              }
            ],
            "intent": "dog care"
          }
        }
      }
    ],
    "usage": {
      "completion_tokens": 557,
      "prompt_tokens": 33,
      "total_tokens": 590
    }
  }
}
{
  "body": {
    "id": "chatcmpl-7R1nGnsXO8n4oi9UPz2f3UHdgAYMn",
    "created": 1686676106,
    "choices": [
      {
        "index": 0,
        "finish_reason": "stop",
        "message": {
          "role": "assistant",
          "content": "Content of the completion [doc1].",
          "context": {
            "citations": [
              {
                "content": "Citation content 2.",
                "title": "Citation Title 2",
                "filepath": "contoso2.txt",
                "url": "https://contoso.blob.windows.net/container/contoso2.txt",
                "chunk_id": "0"
              }
            ],
            "intent": "dog care"
          }
        }
      }
    ],
    "usage": {
      "completion_tokens": 557,
      "prompt_tokens": 33,
      "total_tokens": 590
    }
  }
}
Example
Creates a completion for the provided Azure Cosmos DB.
POST https://{endpoint}/openai/deployments/{deployment-id}/chat/completions?api-version=2024-10-21

{
 "messages": [
  {
   "role": "user",
   "content": "can you tell me how to care for a dog?"
  }
 ],
 "data_sources": [
  {
   "type": "azure_cosmos_db",
   "parameters": {
    "authentication": {
     "type": "connection_string",
     "connection_string": "mongodb+srv://rawantest:{password}$@{cluster-name}.mongocluster.cosmos.azure.com/?tls=true&authMechanism=SCRAM-SHA-256&retrywrites=false&maxIdleTimeMS=120000"
    },
    "database_name": "vectordb",
    "container_name": "azuredocs",
    "index_name": "azuredocindex",
    "embedding_dependency": {
     "type": "deployment_name",
     "deployment_name": "{embedding deployment name}"
    },
    "fields_mapping": {
     "content_fields": [
      "content"
     ],
     "vector_fields": [
      "contentvector"
     ]
    }
   }
  }
 ]
}
POST https://{endpoint}/openai/deployments/{deployment-id}/chat/completions?api-version=2024-10-21

{
 "messages": [
  {
   "role": "user",
   "content": "can you tell me how to care for a dog?"
  }
 ],
 "data_sources": [
  {
   "type": "azure_cosmos_db",
   "parameters": {
    "authentication": {
     "type": "connection_string",
     "connection_string": "mongodb+srv://rawantest:{password}$@{cluster-name}.mongocluster.cosmos.azure.com/?tls=true&authMechanism=SCRAM-SHA-256&retrywrites=false&maxIdleTimeMS=120000"
    },
    "database_name": "vectordb",
    "container_name": "azuredocs",
    "index_name": "azuredocindex",
    "embedding_dependency": {
     "type": "deployment_name",
     "deployment_name": "{embedding deployment name}"
    },
    "fields_mapping": {
     "content_fields": [
      "content"
     ],
     "vector_fields": [
      "contentvector"
     ]
    }
   }
  }
 ]
}
Responses:
Status Code: 200
{
  "body": {
    "id": "chatcmpl-7R1nGnsXO8n4oi9UPz2f3UHdgAYMn",
    "created": 1686676106,
    "choices": [
      {
        "index": 0,
        "finish_reason": "stop",
        "message": {
          "role": "assistant",
          "content": "Content of the completion [doc1].",
          "context": {
            "citations": [
              {
                "content": "Citation content.",
                "title": "Citation Title",
                "filepath": "contoso.txt",
                "url": "https://contoso.blob.windows.net/container/contoso.txt",
                "chunk_id": "0"
              }
            ],
            "intent": "dog care"
          }
        }
      }
    ],
    "usage": {
      "completion_tokens": 557,
      "prompt_tokens": 33,
      "total_tokens": 590
    }
  }
}
{
  "body": {
    "id": "chatcmpl-7R1nGnsXO8n4oi9UPz2f3UHdgAYMn",
    "created": 1686676106,
    "choices": [
      {
        "index": 0,
        "finish_reason": "stop",
        "message": {
          "role": "assistant",
          "content": "Content of the completion [doc1].",
          "context": {
            "citations": [
              {
                "content": "Citation content.",
                "title": "Citation Title",
                "filepath": "contoso.txt",
                "url": "https://contoso.blob.windows.net/container/contoso.txt",
                "chunk_id": "0"
              }
            ],
            "intent": "dog care"
          }
        }
      }
    ],
    "usage": {
      "completion_tokens": 557,
      "prompt_tokens": 33,
      "total_tokens": 590
    }
  }
}
Transcriptions - Create
POST https://{endpoint}/openai/deployments/{deployment-id}/audio/transcriptions?api-version=2024-10-21
POST https://{endpoint}/openai/deployments/{deployment-id}/audio/transcriptions?api-version=2024-10-21
Transcribes audio into the input language.
URI Parameters
https://aoairesource.openai.azure.com
Request Header
Request Body
Content-Type: multipart/form-data
Responses
Status Code:200
Description: OK
Examples
Example
Gets transcribed text and associated metadata from provided spoken audio data.
POST https://{endpoint}/openai/deployments/{deployment-id}/audio/transcriptions?api-version=2024-10-21
POST https://{endpoint}/openai/deployments/{deployment-id}/audio/transcriptions?api-version=2024-10-21
Responses:
Status Code: 200
{
  "body": {
    "text": "A structured object when requesting json or verbose_json"
  }
}
{
  "body": {
    "text": "A structured object when requesting json or verbose_json"
  }
}
Example
Gets transcribed text and associated metadata from provided spoken audio data.
POST https://{endpoint}/openai/deployments/{deployment-id}/audio/transcriptions?api-version=2024-10-21

"---multipart-boundary\nContent-Disposition: form-data; name=\"file\"; filename=\"file.wav\"\nContent-Type: application/octet-stream\n\nRIFF..audio.data.omitted\n---multipart-boundary--"
POST https://{endpoint}/openai/deployments/{deployment-id}/audio/transcriptions?api-version=2024-10-21

"---multipart-boundary\nContent-Disposition: form-data; name=\"file\"; filename=\"file.wav\"\nContent-Type: application/octet-stream\n\nRIFF..audio.data.omitted\n---multipart-boundary--"
Responses:
Status Code: 200
{
  "type": "string",
  "example": "plain text when requesting text, srt, or vtt"
}
{
  "type": "string",
  "example": "plain text when requesting text, srt, or vtt"
}
Translations - Create
POST https://{endpoint}/openai/deployments/{deployment-id}/audio/translations?api-version=2024-10-21
POST https://{endpoint}/openai/deployments/{deployment-id}/audio/translations?api-version=2024-10-21
Transcribes and translates input audio into English text.
URI Parameters
https://aoairesource.openai.azure.com
Request Header
Request Body
Content-Type: multipart/form-data
Responses
Status Code:200
Description: OK
Examples
Example
Gets English language transcribed text and associated metadata from provided spoken audio data.
POST https://{endpoint}/openai/deployments/{deployment-id}/audio/translations?api-version=2024-10-21

"---multipart-boundary\nContent-Disposition: form-data; name=\"file\"; filename=\"file.wav\"\nContent-Type: application/octet-stream\n\nRIFF..audio.data.omitted\n---multipart-boundary--"
POST https://{endpoint}/openai/deployments/{deployment-id}/audio/translations?api-version=2024-10-21

"---multipart-boundary\nContent-Disposition: form-data; name=\"file\"; filename=\"file.wav\"\nContent-Type: application/octet-stream\n\nRIFF..audio.data.omitted\n---multipart-boundary--"
Responses:
Status Code: 200
{
  "body": {
    "text": "A structured object when requesting json or verbose_json"
  }
}
{
  "body": {
    "text": "A structured object when requesting json or verbose_json"
  }
}
Example
Gets English language transcribed text and associated metadata from provided spoken audio data.
POST https://{endpoint}/openai/deployments/{deployment-id}/audio/translations?api-version=2024-10-21

"---multipart-boundary\nContent-Disposition: form-data; name=\"file\"; filename=\"file.wav\"\nContent-Type: application/octet-stream\n\nRIFF..audio.data.omitted\n---multipart-boundary--"
POST https://{endpoint}/openai/deployments/{deployment-id}/audio/translations?api-version=2024-10-21

"---multipart-boundary\nContent-Disposition: form-data; name=\"file\"; filename=\"file.wav\"\nContent-Type: application/octet-stream\n\nRIFF..audio.data.omitted\n---multipart-boundary--"
Responses:
Status Code: 200
{
  "type": "string",
  "example": "plain text when requesting text, srt, or vtt"
}
{
  "type": "string",
  "example": "plain text when requesting text, srt, or vtt"
}
Image generation
POST https://{endpoint}/openai/deployments/{deployment-id}/images/generations?api-version=2024-10-21
POST https://{endpoint}/openai/deployments/{deployment-id}/images/generations?api-version=2024-10-21
Generates a batch of images from a text caption on a given dall-e model deployment
URI Parameters
https://aoairesource.openai.azure.com
Request Header
Request Body
Content-Type: application/json
Responses
Status Code:200
Description: Ok
Status Code:default
Description: An error occurred.
Examples
Example
Creates images given a prompt.
POST https://{endpoint}/openai/deployments/{deployment-id}/images/generations?api-version=2024-10-21

{
 "prompt": "In the style of WordArt, Microsoft Clippy wearing a cowboy hat.",
 "n": 1,
 "style": "natural",
 "quality": "standard"
}
POST https://{endpoint}/openai/deployments/{deployment-id}/images/generations?api-version=2024-10-21

{
 "prompt": "In the style of WordArt, Microsoft Clippy wearing a cowboy hat.",
 "n": 1,
 "style": "natural",
 "quality": "standard"
}
Responses:
Status Code: 200
{
  "body": {
    "created": 1698342300,
    "data": [
      {
        "revised_prompt": "A vivid, natural representation of Microsoft Clippy wearing a cowboy hat.",
        "prompt_filter_results": {
          "sexual": {
            "severity": "safe",
            "filtered": false
          },
          "violence": {
            "severity": "safe",
            "filtered": false
          },
          "hate": {
            "severity": "safe",
            "filtered": false
          },
          "self_harm": {
            "severity": "safe",
            "filtered": false
          },
          "profanity": {
            "detected": false,
            "filtered": false
          }
        },
        "url": "https://dalletipusw2.blob.core.windows.net/private/images/e5451cc6-b1ad-4747-bd46-b89a3a3b8bc3/generated_00.png?se=2023-10-27T17%3A45%3A09Z&...",
        "content_filter_results": {
          "sexual": {
            "severity": "safe",
            "filtered": false
          },
          "violence": {
            "severity": "safe",
            "filtered": false
          },
          "hate": {
            "severity": "safe",
            "filtered": false
          },
          "self_harm": {
            "severity": "safe",
            "filtered": false
          }
        }
      }
    ]
  }
}
{
  "body": {
    "created": 1698342300,
    "data": [
      {
        "revised_prompt": "A vivid, natural representation of Microsoft Clippy wearing a cowboy hat.",
        "prompt_filter_results": {
          "sexual": {
            "severity": "safe",
            "filtered": false
          },
          "violence": {
            "severity": "safe",
            "filtered": false
          },
          "hate": {
            "severity": "safe",
            "filtered": false
          },
          "self_harm": {
            "severity": "safe",
            "filtered": false
          },
          "profanity": {
            "detected": false,
            "filtered": false
          }
        },
        "url": "https://dalletipusw2.blob.core.windows.net/private/images/e5451cc6-b1ad-4747-bd46-b89a3a3b8bc3/generated_00.png?se=2023-10-27T17%3A45%3A09Z&...",
        "content_filter_results": {
          "sexual": {
            "severity": "safe",
            "filtered": false
          },
          "violence": {
            "severity": "safe",
            "filtered": false
          },
          "hate": {
            "severity": "safe",
            "filtered": false
          },
          "self_harm": {
            "severity": "safe",
            "filtered": false
          }
        }
      }
    ]
  }
}
Components
errorResponse
errorBase
error
innerError
Inner error with additional details.
innerErrorCode
Error codes for the inner error object.
Description: Error codes for the inner error object.
Type: string
Default:
Enum Name: InnerErrorCode
Enum Values:
dalleErrorResponse
dalleError
dalleInnerError
Inner error with additional details.
contentFilterResultBase
contentFilterSeverityResult
contentFilterDetectedResult
contentFilterDetectedWithCitationResult
Properties for citation
contentFilterResultsBase
Information about the content filtering results.
contentFilterPromptResults
Information about the content filtering category (hate, sexual, violence, self_harm), if it has been detected, as well as the severity level (very_low, low, medium, high-scale that determines the intensity and risk level of harmful content) and if it has been filtered or not. Information about jailbreak content and profanity, if it has been detected, and if it has been filtered or not. And information about customer blocklist, if it has been filtered and its id.
contentFilterChoiceResults
Information about the content filtering category (hate, sexual, violence, self_harm), if it has been detected, as well as the severity level (very_low, low, medium, high-scale that determines the intensity and risk level of harmful content) and if it has been filtered or not. Information about third party text and profanity, if it has been detected, and if it has been filtered or not. And information about customer blocklist, if it has been filtered and its id.
promptFilterResult
Content filtering results for a single prompt in the request.
promptFilterResults
Content filtering results for zero or more prompts in the request. In a streaming request, results for different prompts may arrive at different times or in different orders.
No properties defined for this component.
dalleContentFilterResults
Information about the content filtering results.
dalleFilterResults
Information about the content filtering category (hate, sexual, violence, self_harm), if it has been detected, as well as the severity level (very_low, low, medium, high-scale that determines the intensity and risk level of harmful content) and if it has been filtered or not. Information about jailbreak content and profanity, if it has been detected, and if it has been filtered or not. And information about customer blocklist, if it has been filtered and its id.
chatCompletionsRequestCommon
top_p
temperature
data: [DONE]
max_completion_tokens
createCompletionRequest
best_of
n
best_of
n
best_of
n
max_tokens
stop
{"50256": -100}
logprobs
logprobs
logprob
logprobs+1
logprobs
max_tokens
max_tokens
stop
seed
system_fingerprint
data: [DONE]
gpt-3.5-turbo-instruct
top_p
temperature
createCompletionResponse
Represents a completion response from the API. Note: both the streamed and nonstreamed response objects share the same shape (unlike the chat endpoint).
seed
createChatCompletionRequest
top_p
temperature
data: [DONE]
content
message
logprobs
true
n
1
gpt-3.5-turbo-1106
{ "type": "json_schema", "json_schema": {...} }
{ "type": "json_object" }
finish_reason="length"
max_tokens
seed
system_fingerprint
none
auto
required
{"type": "function", "function": {"name": "my_function"}}
none
auto
tool_choice
none
auto
{"name": "my_function"}
none
auto
tools
chatCompletionFunctions
parameters
chatCompletionFunctionCallOption
Specifying a particular function via{"name": "my_function"}forces the model to call that function.
{"name": "my_function"}
chatCompletionRequestMessage
This component can be one of the following:
chatCompletionRequestSystemMessage
system
chatCompletionRequestUserMessage
user
chatCompletionRequestAssistantMessage
tool_calls
function_call
assistant
tool_calls
Properties for function_call
chatCompletionRequestToolMessage
tool
chatCompletionRequestFunctionMessage
function
chatCompletionRequestSystemMessageContentPart
This component can be one of the following:
chatCompletionRequestUserMessageContentPart
This component can be one of the following:
chatCompletionRequestAssistantMessageContentPart
This component can be one of the following:
chatCompletionRequestToolMessageContentPart
This component can be one of the following:
chatCompletionRequestMessageContentPartText
chatCompletionRequestMessageContentPartImage
Properties for image_url
chatCompletionRequestMessageContentPartRefusal
azureChatExtensionConfiguration
A representation of configuration data for a single Azure OpenAI chat extension. This will be used by a chat
completions request that should use Azure OpenAI chat extensions to augment the response behavior.
The use of this configuration is compatible only with Azure OpenAI.
azureChatExtensionType
A representation of configuration data for a single Azure OpenAI chat extension. This will be used by a chat
completions request that should use Azure OpenAI chat extensions to augment the response behavior.
The use of this configuration is compatible only with Azure OpenAI.
Description:   A representation of configuration data for a single Azure OpenAI chat extension. This will be used by a chat completions request that should use Azure OpenAI chat extensions to augment the response behavior. The use of this configuration is compatible only with Azure OpenAI.
Type: string
Default:
Enum Name: AzureChatExtensionType
Enum Values:
azureSearchChatExtensionConfiguration
A specific representation of configurable options for Azure Search when using it as an Azure OpenAI chat
extension.
azureSearchChatExtensionParameters
Parameters for Azure Search when used as an Azure OpenAI chat extension.
azureSearchIndexFieldMappingOptions
Optional settings to control how fields are processed when using a configured Azure Search resource.
azureSearchQueryType
The type of Azure Search retrieval query that should be executed when using it as an Azure OpenAI chat extension.
Description: The type of Azure Search retrieval query that should be executed when using it as an Azure OpenAI chat extension.
Type: string
Default:
Enum Name: AzureSearchQueryType
Enum Values:
azureCosmosDBChatExtensionConfiguration
A specific representation of configurable options for Azure Cosmos DB when using it as an Azure OpenAI chat
extension.
azureCosmosDBChatExtensionParameters
Parameters to use when configuring Azure OpenAI On Your Data chat extensions when using Azure Cosmos DB for
MongoDB vCore.
azureCosmosDBFieldMappingOptions
Optional settings to control how fields are processed when using a configured Azure Cosmos DB resource.
onYourDataAuthenticationOptions
The authentication options for Azure OpenAI On Your Data.
onYourDataAuthenticationType
The authentication types supported with Azure OpenAI On Your Data.
Description: The authentication types supported with Azure OpenAI On Your Data.
Type: string
Default:
Enum Name: OnYourDataAuthenticationType
Enum Values:
onYourDataApiKeyAuthenticationOptions
The authentication options for Azure OpenAI On Your Data when using an API key.
onYourDataConnectionStringAuthenticationOptions
The authentication options for Azure OpenAI On Your Data when using a connection string.
onYourDataSystemAssignedManagedIdentityAuthenticationOptions
The authentication options for Azure OpenAI On Your Data when using a system-assigned managed identity.
onYourDataUserAssignedManagedIdentityAuthenticationOptions
The authentication options for Azure OpenAI On Your Data when using a user-assigned managed identity.
onYourDataVectorizationSource
An abstract representation of a vectorization source for Azure OpenAI On Your Data with vector search.
onYourDataVectorizationSourceType
Represents the available sources Azure OpenAI On Your Data can use to configure vectorization of data for use with
vector search.
Description: Represents the available sources Azure OpenAI On Your Data can use to configure vectorization of data for use withvector search.
Type: string
Default:
Enum Name: OnYourDataVectorizationSourceType
Enum Values:
onYourDataDeploymentNameVectorizationSource
The details of a vectorization source, used by Azure OpenAI On Your Data when applying vector search, that is based
on an internal embeddings model deployment name in the same Azure OpenAI resource.
onYourDataEndpointVectorizationSource
The details of a vectorization source, used by Azure OpenAI On Your Data when applying vector search, that is based
on a public Azure OpenAI endpoint call for embeddings.
azureChatExtensionsMessageContext
A representation of the additional context information available when Azure OpenAI chat extensions are involved
in the generation of a corresponding chat completions response. This context information is only populated when
using an Azure OpenAI request configured to use a matching extension.
citation
citation information for a chat completions response message.
chatCompletionMessageToolCall
function
Properties for function
toolCallType
The type of the tool call, in this casefunction.
function
Description: The type of the tool call, in this casefunction.
function
Type: string
Default:
Enum Name: ToolCallType
Enum Values:
chatCompletionRequestMessageTool
chatCompletionRequestMessageFunction
function
createChatCompletionResponse
Represents a chat completion response returned by model, based on the provided input.
n
seed
chat.completion
createChatCompletionStreamResponse
Represents a streamed chunk of a chat completion response returned by model, based on the provided input.
n
seed
chat.completion.chunk
chatCompletionStreamResponseDelta
A chat completion delta generated by streamed model responses.
tool_calls
Properties for function_call
chatCompletionMessageToolCallChunk
function
Properties for function
chatCompletionStreamOptions
Options for streaming response. Only set this when you setstream: true.
stream: true
data: [DONE]
usage
choices
usage
chatCompletionChoiceLogProbs
Log probability information for the choice.
chatCompletionTokenLogprob
null
top_logprobs
chatCompletionResponseMessage
A chat completion message generated by the model.
tool_calls
chatCompletionResponseMessageRole
The role of the author of the response message.
Description: The role of the author of the response message.
Type: string
Default:
Enum Values:
assistant
chatCompletionToolChoiceOption
Controls which (if any) tool is called by the model.nonemeans the model won't call any tool and instead generates a message.automeans the model can pick between generating a message or calling one or more tools.requiredmeans the model must call one or more tools. Specifying a particular tool via{"type": "function", "function": {"name": "my_function"}}forces the model to call that tool.noneis the default when no tools are present.autois the default if tools are present.
none
auto
required
{"type": "function", "function": {"name": "my_function"}}
none
auto
This component can be one of the following:
chatCompletionNamedToolChoice
Specifies a tool the model should use. Use to force the model to call a specific function.
function
Properties for function
ParallelToolCalls
Whether to enable parallel function calling during tool use.
No properties defined for this component.
chatCompletionMessageToolCalls
The tool calls generated by the model, such as function calls.
No properties defined for this component.
chatCompletionFunctionCall
Deprecated and replaced bytool_calls. The name and arguments of a function that should be called, as generated by the model.
tool_calls
completionUsage
Usage statistics for the completion request.
Properties for completion_tokens_details
chatCompletionTool
function
FunctionParameters
The parameters the functions accepts, described as a JSON Schema object.See the guidefor examples, and theJSON Schema referencefor documentation about the format.
Omittingparametersdefines a function with an empty parameter list.
parameters
No properties defined for this component.
FunctionObject
parameters
parameters
strict
true
ResponseFormatText
text
ResponseFormatJsonObject
json_object
ResponseFormatJsonSchemaSchema
The schema for the response format, described as a JSON Schema object.
No properties defined for this component.
ResponseFormatJsonSchema
json_schema
Properties for json_schema
schema
strict
true
chatCompletionChoiceCommon
createTranslationRequest
Translation request.
audioResponse
Translation or transcription response when response_format was json
audioVerboseResponse
Translation or transcription response when response_format was verbose_json
audioResponseFormat
Defines the format of the output.
Description: Defines the format of the output.
Type: string
Default:
Enum Values:
json
text
srt
verbose_json
vtt
createTranscriptionRequest
Transcription request.
audioSegment
Transcription or translation segment.
no speech
imageQuality
The quality of the image that will be generated.
Description: The quality of the image that will be generated.
Type: string
Default: standard
Enum Name: Quality
Enum Values:
imagesResponseFormat
The format in which the generated images are returned.
Description: The format in which the generated images are returned.
Type: string
Default: url
Enum Name: ImagesResponseFormat
Enum Values:
imageSize
The size of the generated images.
Description: The size of the generated images.
Type: string
Default: 1024x1024
Enum Name: Size
Enum Values:
imageStyle
The style of the generated images.
Description: The style of the generated images.
Type: string
Default: vivid
Enum Name: Style
Enum Values:
imageGenerationsRequest
generateImagesResponse
imageResult
The image url or encoded image if successful, and an error otherwise.
Completions extensions
Completions extensions aren't part of the latest GA version of the Azure OpenAI data plane inference spec.
Chatmessage
The Chat message object isn't part of the latest GA version of the Azure OpenAI data plane inference spec.
Text to speech (Preview)
Is not currently part of the latest Azure OpenAI GA version of the Azure OpenAI data plane inference spec. Refer to the latestpreviewversion for this capability.
Next steps
Learn aboutModels, and fine-tuning with the REST API.
Learn more about theunderlying models that power Azure OpenAI.
Feedback
Was this page helpful?
Additional resources