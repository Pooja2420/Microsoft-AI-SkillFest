Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Test virtual machine network throughput by using NTTTCP
Article
2025-04-15
21 contributors
In this article
This article describes how to use the free NTTTCP tool from Microsoft to test network bandwidth and throughput performance on Azure Windows or Linux virtual machines (VMs). A tool like NTTTCP targets the network for testing and minimizes the use of other resources that could affect performance.
Prerequisites
An Azure account with an active subscription.Create an account for free.
Two Windows or Linux virtual machines in Azure.Create a Windows virtual machineorcreate a Linux virtual machine.To test throughput, you need two VMs of the same size to function assenderandreceiver. The two VMs should be in the sameproximity placement grouporavailability set, so you can use their internal IP addresses and exclude load balancers from the test.Note the number of VM cores and the receiver VM IP address for the commands. Both the sender and receiver commands use the receiver's IP address.
To test throughput, you need two VMs of the same size to function assenderandreceiver. The two VMs should be in the sameproximity placement grouporavailability set, so you can use their internal IP addresses and exclude load balancers from the test.
Note the number of VM cores and the receiver VM IP address for the commands. Both the sender and receiver commands use the receiver's IP address.
Note
Testing by using a virtual IP is possible, but is beyond the scope of this article.
Examples used in this article
Test throughput with Windows VMs or Linux VMs
You can test throughput from Windows VMs by usingNTTTCPor from Linux VMs by usingNTTTCP-for-Linux.
Windows
Linux
Prepare VMs and install NTTTCP-for-Windows
On both the sender and receiver VMs,download the latest version of NTTTCPinto a separate folder likec:\tools.
On both the sender and receiver VMs,download the latest version of NTTTCPinto a separate folder likec:\tools.
Open the Windows command line and navigate to the folder where you downloadedntttcp.exe.
Open the Windows command line and navigate to the folder where you downloadedntttcp.exe.
On the receiver VM, create a Windows Firewallallowrule to allow the NTTTCP traffic to arrive. It's easier to allownttcp.exeby name than to allow specific inbound TCP ports. Run the following command, replacingc:\toolswith your download path forntttcp.exeif different.netsh advfirewall firewall add rule program=c:\tools\ntttcp.exe name="ntttcp" protocol=any dir=in action=allow enable=yes profile=ANY
On the receiver VM, create a Windows Firewallallowrule to allow the NTTTCP traffic to arrive. It's easier to allownttcp.exeby name than to allow specific inbound TCP ports. Run the following command, replacingc:\toolswith your download path forntttcp.exeif different.
allow
c:\tools
netsh advfirewall firewall add rule program=c:\tools\ntttcp.exe name="ntttcp" protocol=any dir=in action=allow enable=yes profile=ANY
netsh advfirewall firewall add rule program=c:\tools\ntttcp.exe name="ntttcp" protocol=any dir=in action=allow enable=yes profile=ANY
To confirm your configuration, use the following commands to test a single Transfer Control Protocol (TCP) stream for 10 seconds on the receiver and sender virtual machines:Receiver VMntttcp -r -m [<number of VM cores> x 2],*,<receiver IP address> -t 10 -P 1ntttcp -r -m 4,*,10.0.0.5 -t 10 -P 1Sender VMntttcp -s -m [<number of VM cores> x 2],*,<receiver IP address> -t 10 -P 1ntttcp -s -m 4,*,10.0.0.5 -t 10 -P 1NoteUse the preceding commands only to test configuration.TipWhen you run the test for the first time to verify setup, use a short test duration to get quick feedback. Once you verify the tool is working, extend the test duration to 300 seconds for the most accurate results.
To confirm your configuration, use the following commands to test a single Transfer Control Protocol (TCP) stream for 10 seconds on the receiver and sender virtual machines:
Receiver VM
ntttcp -r -m [<number of VM cores> x 2],*,<receiver IP address> -t 10 -P 1
ntttcp -r -m [<number of VM cores> x 2],*,<receiver IP address> -t 10 -P 1
ntttcp -r -m 4,*,10.0.0.5 -t 10 -P 1
ntttcp -r -m 4,*,10.0.0.5 -t 10 -P 1
Sender VM
ntttcp -s -m [<number of VM cores> x 2],*,<receiver IP address> -t 10 -P 1
ntttcp -s -m [<number of VM cores> x 2],*,<receiver IP address> -t 10 -P 1
ntttcp -s -m 4,*,10.0.0.5 -t 10 -P 1
ntttcp -s -m 4,*,10.0.0.5 -t 10 -P 1
Note
Use the preceding commands only to test configuration.
Tip
When you run the test for the first time to verify setup, use a short test duration to get quick feedback. Once you verify the tool is working, extend the test duration to 300 seconds for the most accurate results.
Run throughput tests
Run the test for 300 seconds, or five minutes, on both the sender and receiver VMs. The sender and receiver must specify the same test duration for the-tparameter.
-t
On the receiver VM, run the following command, replacing the<number of VM cores>, and<receiver IP address>placeholders with your own values.ntttcp -r -m [<number of VM cores> x 2],*,<receiver IP address> -t 300ntttcp -r -m 4,*,10.0.0.5 -t 300
On the receiver VM, run the following command, replacing the<number of VM cores>, and<receiver IP address>placeholders with your own values.
<number of VM cores>
<receiver IP address>
ntttcp -r -m [<number of VM cores> x 2],*,<receiver IP address> -t 300
ntttcp -r -m [<number of VM cores> x 2],*,<receiver IP address> -t 300
ntttcp -r -m 4,*,10.0.0.5 -t 300
ntttcp -r -m 4,*,10.0.0.5 -t 300
On the sender VM, run the following command. The sender and receiver commands differ only in the-sor-rparameter that designates the sender or receiver VM.ntttcp -s -m [<number of VM cores> x 2],*,<receiver IP address> -t 300ntttcp -s -m 4,*,10.0.0.5 -t 300
On the sender VM, run the following command. The sender and receiver commands differ only in the-sor-rparameter that designates the sender or receiver VM.
-s
-r
ntttcp -s -m [<number of VM cores> x 2],*,<receiver IP address> -t 300
ntttcp -s -m [<number of VM cores> x 2],*,<receiver IP address> -t 300
ntttcp -s -m 4,*,10.0.0.5 -t 300
ntttcp -s -m 4,*,10.0.0.5 -t 300
Wait for the results.
Wait for the results.
When the test is complete, the output should be similar as the following example:
C:\tools>ntttcp -s -m 4,*,10.0.0.5 -t 300
Copyright Version 5.39
Network activity progressing...


Thread  Time(s) Throughput(KB/s) Avg B / Compl
======  ======= ================ =============
     0  300.006        29617.328     65536.000
     1  300.006        29267.468     65536.000
     2  300.006        28978.834     65536.000
     3  300.006        29016.806     65536.000


#####  Totals:  #####


   Bytes(MEG)    realtime(s) Avg Frame Size Throughput(MB/s)
================ =========== ============== ================
    34243.000000     300.005       1417.829          114.141


Throughput(Buffers/s) Cycles/Byte       Buffers
===================== =========== =============
             1826.262       7.036    547888.000


DPCs(count/s) Pkts(num/DPC)   Intr(count/s) Pkts(num/intr)
============= ============= =============== ==============
     4218.744         1.708        6055.769          1.190


Packets Sent Packets Received Retransmits Errors Avg. CPU %
============ ================ =========== ====== ==========
    25324915          2161992       60412      0     15.075
C:\tools>ntttcp -s -m 4,*,10.0.0.5 -t 300
Copyright Version 5.39
Network activity progressing...


Thread  Time(s) Throughput(KB/s) Avg B / Compl
======  ======= ================ =============
     0  300.006        29617.328     65536.000
     1  300.006        29267.468     65536.000
     2  300.006        28978.834     65536.000
     3  300.006        29016.806     65536.000


#####  Totals:  #####


   Bytes(MEG)    realtime(s) Avg Frame Size Throughput(MB/s)
================ =========== ============== ================
    34243.000000     300.005       1417.829          114.141


Throughput(Buffers/s) Cycles/Byte       Buffers
===================== =========== =============
             1826.262       7.036    547888.000


DPCs(count/s) Pkts(num/DPC)   Intr(count/s) Pkts(num/intr)
============= ============= =============== ==============
     4218.744         1.708        6055.769          1.190


Packets Sent Packets Received Retransmits Errors Avg. CPU %
============ ================ =========== ====== ==========
    25324915          2161992       60412      0     15.075
Prepare VMs and install NTTTCP-for-Linux
To measure throughput from Linux machines, useNTTTCP-for-Linux.
Prepare both the sender and receiver VMs for NTTTCP-for-Linux by running the following commands, depending on your distro:ForUbuntu, installbuild-essentialandgit.sudo apt-get update
sudo apt-get -y install build-essential
sudo apt-get -y install gitForSUSE, installgit-core,gcc, andmake.sudo zypper in -y git-core gcc make
Prepare both the sender and receiver VMs for NTTTCP-for-Linux by running the following commands, depending on your distro:
ForUbuntu, installbuild-essentialandgit.sudo apt-get update
sudo apt-get -y install build-essential
sudo apt-get -y install git
ForUbuntu, installbuild-essentialandgit.
build-essential
git
sudo apt-get update
sudo apt-get -y install build-essential
sudo apt-get -y install git
sudo apt-get update
sudo apt-get -y install build-essential
sudo apt-get -y install git
ForSUSE, installgit-core,gcc, andmake.sudo zypper in -y git-core gcc make
ForSUSE, installgit-core,gcc, andmake.
git-core
gcc
make
sudo zypper in -y git-core gcc make
sudo zypper in -y git-core gcc make
Make and install NTTTCP-for-Linux.git clone https://github.com/Microsoft/ntttcp-for-linux
cd ntttcp-for-linux/src
sudo make && sudo make install
Make and install NTTTCP-for-Linux.
git clone https://github.com/Microsoft/ntttcp-for-linux
cd ntttcp-for-linux/src
sudo make && sudo make install
git clone https://github.com/Microsoft/ntttcp-for-linux
cd ntttcp-for-linux/src
sudo make && sudo make install
Run throughput tests
Run the NTTTCP test for 300 seconds, or five minutes, on both the sender VM and the receiver VM. The sender and receiver must specify the same test duration for the-tparameter. Test duration defaults to 60 seconds if you don't specify a time parameter.
-t
On the receiver VM, run the following command:ntttcp -r -m 4,*,10.0.0.5 -t 300
On the receiver VM, run the following command:
ntttcp -r -m 4,*,10.0.0.5 -t 300
ntttcp -r -m 4,*,10.0.0.5 -t 300
On the sender VM, run the following command. This example shows a sender command for a receiver IP address of10.0.0.5.ntttcp -s -m 4,*,10.0.0.5 -t 300
On the sender VM, run the following command. This example shows a sender command for a receiver IP address of10.0.0.5.
10.0.0.5
ntttcp -s -m 4,*,10.0.0.5 -t 300
ntttcp -s -m 4,*,10.0.0.5 -t 300
When the test is complete, the output should be similar as the following example:
azureuser@vm-3:~/ntttcp-for-linux/src$ ntttcp -s -m 4,*,10.0.0.5 -t 300
NTTTCP for Linux 1.4.0
---------------------------------------------------------
23:59:01 INFO: 4 threads created
23:59:01 INFO: 4 connections created in 1933 microseconds
23:59:01 INFO: Network activity progressing...
00:04:01 INFO: Test run completed.
00:04:01 INFO: Test cycle finished.
00:04:01 INFO: 4 connections tested
00:04:01 INFO: #####  Totals:  #####
00:04:01 INFO: test duration:300.00 seconds
00:04:01 INFO: total bytes:35750674432
00:04:01 INFO:  throughput:953.35Mbps
00:04:01 INFO:  retrans segs:13889
00:04:01 INFO: cpu cores:2
00:04:01 INFO:  cpu speed:2793.437MHz
00:04:01 INFO:  user:0.16%
00:04:01 INFO:  system:1.60%
00:04:01 INFO:  idle:98.07%
00:04:01 INFO:  iowait:0.05%
00:04:01 INFO:  softirq:0.12%
00:04:01 INFO:  cycles/byte:0.91
00:04:01 INFO: cpu busy (all):3.96%
---------------------------------------------------------
azureuser@vm-3:~/ntttcp-for-linux/src$ ntttcp -s -m 4,*,10.0.0.5 -t 300
NTTTCP for Linux 1.4.0
---------------------------------------------------------
23:59:01 INFO: 4 threads created
23:59:01 INFO: 4 connections created in 1933 microseconds
23:59:01 INFO: Network activity progressing...
00:04:01 INFO: Test run completed.
00:04:01 INFO: Test cycle finished.
00:04:01 INFO: 4 connections tested
00:04:01 INFO: #####  Totals:  #####
00:04:01 INFO: test duration:300.00 seconds
00:04:01 INFO: total bytes:35750674432
00:04:01 INFO:  throughput:953.35Mbps
00:04:01 INFO:  retrans segs:13889
00:04:01 INFO: cpu cores:2
00:04:01 INFO:  cpu speed:2793.437MHz
00:04:01 INFO:  user:0.16%
00:04:01 INFO:  system:1.60%
00:04:01 INFO:  idle:98.07%
00:04:01 INFO:  iowait:0.05%
00:04:01 INFO:  softirq:0.12%
00:04:01 INFO:  cycles/byte:0.91
00:04:01 INFO: cpu busy (all):3.96%
---------------------------------------------------------
Test throughput between a Windows VM and a Linux VM
To run NTTTCP throughput tests between a Windows VM and a Linux VM, enable no-sync mode by using the-nsflag on Windows or the-Nflag on Linux.
-ns
-N
Windows
Linux
To test with the Windows VM as the receiver, run the following command:
ntttcp -r -m [<number of VM cores> x 2],*,<Linux VM IP address> -t 300
ntttcp -r -m [<number of VM cores> x 2],*,<Linux VM IP address> -t 300
To test with the Windows VM as the sender, run the following command:
ntttcp -s -m [<number of VM cores> x 2],*,<Linux VM IP address> -ns -t 300
ntttcp -s -m [<number of VM cores> x 2],*,<Linux VM IP address> -ns -t 300
To test with the Linux VM as the receiver, run the following command:
ntttcp -r -m [<number of VM cores> x 2],*,<Windows VM IP address> -t 300
ntttcp -r -m [<number of VM cores> x 2],*,<Windows VM IP address> -t 300
To test with the Linux VM as the sender, run the following command:
ntttcp -s -m [<number of VM cores> x 2],*,<Windows VM IP address> -N -t 300
ntttcp -s -m [<number of VM cores> x 2],*,<Windows VM IP address> -N -t 300
Next steps
Optimize network throughput for Azure virtual machines.
Optimize network throughput for Azure virtual machines.
Virtual machine network bandwidth.
Virtual machine network bandwidth.
Test VM network latency
Test VM network latency
Azure Virtual Network frequently asked questions (FAQ)
Azure Virtual Network frequently asked questions (FAQ)
Feedback
Was this page helpful?
Additional resources