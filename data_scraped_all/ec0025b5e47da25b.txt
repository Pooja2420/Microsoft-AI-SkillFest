Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Microsoft.Insights actionGroups
Article
2024-12-09
2 contributors
In this article
Latest
2024-10-01-preview
2023-09-01-preview
2023-01-01
2022-06-01
2022-04-01
2021-09-01
2019-06-01
2019-03-01
2018-09-01
2018-03-01
2017-04-01
Remarks
For guidance on deploying monitoring solutions, seeCreate monitoring resources by using Bicep.
Bicep resource definition
The actionGroups resource type can be deployed with operations that target:
Resource groups- Seeresource group deployment commands
For a list of changed properties in each API version, seechange log.
Resource format
To create a Microsoft.Insights/actionGroups resource, add the following Bicep to your template.
resource symbolicname 'Microsoft.Insights/actionGroups@2024-10-01-preview' = {
  identity: {
    type: 'string'
    userAssignedIdentities: {
      {customized property}: {}
    }
  }
  location: 'string'
  name: 'string'
  properties: {
    armRoleReceivers: [
      {
        name: 'string'
        roleId: 'string'
        useCommonAlertSchema: bool
      }
    ]
    automationRunbookReceivers: [
      {
        automationAccountId: 'string'
        isGlobalRunbook: bool
        managedIdentity: 'string'
        name: 'string'
        runbookName: 'string'
        serviceUri: 'string'
        useCommonAlertSchema: bool
        webhookResourceId: 'string'
      }
    ]
    azureAppPushReceivers: [
      {
        emailAddress: 'string'
        name: 'string'
      }
    ]
    azureFunctionReceivers: [
      {
        functionAppResourceId: 'string'
        functionName: 'string'
        httpTriggerUrl: 'string'
        managedIdentity: 'string'
        name: 'string'
        useCommonAlertSchema: bool
      }
    ]
    emailReceivers: [
      {
        emailAddress: 'string'
        name: 'string'
        useCommonAlertSchema: bool
      }
    ]
    enabled: bool
    eventHubReceivers: [
      {
        eventHubName: 'string'
        eventHubNameSpace: 'string'
        managedIdentity: 'string'
        name: 'string'
        subscriptionId: 'string'
        tenantId: 'string'
        useCommonAlertSchema: bool
      }
    ]
    groupShortName: 'string'
    incidentReceivers: [
      {
        connection: {
          id: 'string'
          name: 'string'
        }
        incidentManagementService: 'string'
        mappings: {
          {customized property}: 'string'
        }
        name: 'string'
      }
    ]
    itsmReceivers: [
      {
        connectionId: 'string'
        name: 'string'
        region: 'string'
        ticketConfiguration: 'string'
        workspaceId: 'string'
      }
    ]
    logicAppReceivers: [
      {
        callbackUrl: 'string'
        managedIdentity: 'string'
        name: 'string'
        resourceId: 'string'
        useCommonAlertSchema: bool
      }
    ]
    smsReceivers: [
      {
        countryCode: 'string'
        name: 'string'
        phoneNumber: 'string'
      }
    ]
    voiceReceivers: [
      {
        countryCode: 'string'
        name: 'string'
        phoneNumber: 'string'
      }
    ]
    webhookReceivers: [
      {
        identifierUri: 'string'
        managedIdentity: 'string'
        name: 'string'
        objectId: 'string'
        serviceUri: 'string'
        tenantId: 'string'
        useAadAuth: bool
        useCommonAlertSchema: bool
      }
    ]
  }
  tags: {
    {customized property}: 'string'
  }
}
resource symbolicname 'Microsoft.Insights/actionGroups@2024-10-01-preview' = {
  identity: {
    type: 'string'
    userAssignedIdentities: {
      {customized property}: {}
    }
  }
  location: 'string'
  name: 'string'
  properties: {
    armRoleReceivers: [
      {
        name: 'string'
        roleId: 'string'
        useCommonAlertSchema: bool
      }
    ]
    automationRunbookReceivers: [
      {
        automationAccountId: 'string'
        isGlobalRunbook: bool
        managedIdentity: 'string'
        name: 'string'
        runbookName: 'string'
        serviceUri: 'string'
        useCommonAlertSchema: bool
        webhookResourceId: 'string'
      }
    ]
    azureAppPushReceivers: [
      {
        emailAddress: 'string'
        name: 'string'
      }
    ]
    azureFunctionReceivers: [
      {
        functionAppResourceId: 'string'
        functionName: 'string'
        httpTriggerUrl: 'string'
        managedIdentity: 'string'
        name: 'string'
        useCommonAlertSchema: bool
      }
    ]
    emailReceivers: [
      {
        emailAddress: 'string'
        name: 'string'
        useCommonAlertSchema: bool
      }
    ]
    enabled: bool
    eventHubReceivers: [
      {
        eventHubName: 'string'
        eventHubNameSpace: 'string'
        managedIdentity: 'string'
        name: 'string'
        subscriptionId: 'string'
        tenantId: 'string'
        useCommonAlertSchema: bool
      }
    ]
    groupShortName: 'string'
    incidentReceivers: [
      {
        connection: {
          id: 'string'
          name: 'string'
        }
        incidentManagementService: 'string'
        mappings: {
          {customized property}: 'string'
        }
        name: 'string'
      }
    ]
    itsmReceivers: [
      {
        connectionId: 'string'
        name: 'string'
        region: 'string'
        ticketConfiguration: 'string'
        workspaceId: 'string'
      }
    ]
    logicAppReceivers: [
      {
        callbackUrl: 'string'
        managedIdentity: 'string'
        name: 'string'
        resourceId: 'string'
        useCommonAlertSchema: bool
      }
    ]
    smsReceivers: [
      {
        countryCode: 'string'
        name: 'string'
        phoneNumber: 'string'
      }
    ]
    voiceReceivers: [
      {
        countryCode: 'string'
        name: 'string'
        phoneNumber: 'string'
      }
    ]
    webhookReceivers: [
      {
        identifierUri: 'string'
        managedIdentity: 'string'
        name: 'string'
        objectId: 'string'
        serviceUri: 'string'
        tenantId: 'string'
        useAadAuth: bool
        useCommonAlertSchema: bool
      }
    ]
  }
  tags: {
    {customized property}: 'string'
  }
}
Property Values
ActionGroup
ArmRoleReceiver
AutomationRunbookReceiver
AzureAppPushReceiver
AzureFunctionReceiver
AzureResourceTags
EmailReceiver
EventHubReceiver
IncidentReceiver
IncidentReceiverMappings
IncidentServiceConnection
ItsmReceiver
LogicAppReceiver
ManagedServiceIdentity
Microsoft.Insights/actionGroups
SmsReceiver
UserAssignedIdentities
UserAssignedIdentity
VoiceReceiver
WebhookReceiver
Usage Examples
Azure Verified Modules
The followingAzure Verified Modulescan be used to deploy this resource type.
Azure Quickstart Samples
The followingAzure Quickstart templatescontain Bicep samples for deploying this resource type.
ARM template resource definition
The actionGroups resource type can be deployed with operations that target:
Resource groups- Seeresource group deployment commands
For a list of changed properties in each API version, seechange log.
Resource format
To create a Microsoft.Insights/actionGroups resource, add the following JSON to your template.
{
  "type": "Microsoft.Insights/actionGroups",
  "apiVersion": "2024-10-01-preview",
  "name": "string",
  "identity": {
    "type": "string",
    "userAssignedIdentities": {
      "{customized property}": {
      }
    }
  },
  "location": "string",
  "properties": {
    "armRoleReceivers": [
      {
        "name": "string",
        "roleId": "string",
        "useCommonAlertSchema": "bool"
      }
    ],
    "automationRunbookReceivers": [
      {
        "automationAccountId": "string",
        "isGlobalRunbook": "bool",
        "managedIdentity": "string",
        "name": "string",
        "runbookName": "string",
        "serviceUri": "string",
        "useCommonAlertSchema": "bool",
        "webhookResourceId": "string"
      }
    ],
    "azureAppPushReceivers": [
      {
        "emailAddress": "string",
        "name": "string"
      }
    ],
    "azureFunctionReceivers": [
      {
        "functionAppResourceId": "string",
        "functionName": "string",
        "httpTriggerUrl": "string",
        "managedIdentity": "string",
        "name": "string",
        "useCommonAlertSchema": "bool"
      }
    ],
    "emailReceivers": [
      {
        "emailAddress": "string",
        "name": "string",
        "useCommonAlertSchema": "bool"
      }
    ],
    "enabled": "bool",
    "eventHubReceivers": [
      {
        "eventHubName": "string",
        "eventHubNameSpace": "string",
        "managedIdentity": "string",
        "name": "string",
        "subscriptionId": "string",
        "tenantId": "string",
        "useCommonAlertSchema": "bool"
      }
    ],
    "groupShortName": "string",
    "incidentReceivers": [
      {
        "connection": {
          "id": "string",
          "name": "string"
        },
        "incidentManagementService": "string",
        "mappings": {
          "{customized property}": "string"
        },
        "name": "string"
      }
    ],
    "itsmReceivers": [
      {
        "connectionId": "string",
        "name": "string",
        "region": "string",
        "ticketConfiguration": "string",
        "workspaceId": "string"
      }
    ],
    "logicAppReceivers": [
      {
        "callbackUrl": "string",
        "managedIdentity": "string",
        "name": "string",
        "resourceId": "string",
        "useCommonAlertSchema": "bool"
      }
    ],
    "smsReceivers": [
      {
        "countryCode": "string",
        "name": "string",
        "phoneNumber": "string"
      }
    ],
    "voiceReceivers": [
      {
        "countryCode": "string",
        "name": "string",
        "phoneNumber": "string"
      }
    ],
    "webhookReceivers": [
      {
        "identifierUri": "string",
        "managedIdentity": "string",
        "name": "string",
        "objectId": "string",
        "serviceUri": "string",
        "tenantId": "string",
        "useAadAuth": "bool",
        "useCommonAlertSchema": "bool"
      }
    ]
  },
  "tags": {
    "{customized property}": "string"
  }
}
{
  "type": "Microsoft.Insights/actionGroups",
  "apiVersion": "2024-10-01-preview",
  "name": "string",
  "identity": {
    "type": "string",
    "userAssignedIdentities": {
      "{customized property}": {
      }
    }
  },
  "location": "string",
  "properties": {
    "armRoleReceivers": [
      {
        "name": "string",
        "roleId": "string",
        "useCommonAlertSchema": "bool"
      }
    ],
    "automationRunbookReceivers": [
      {
        "automationAccountId": "string",
        "isGlobalRunbook": "bool",
        "managedIdentity": "string",
        "name": "string",
        "runbookName": "string",
        "serviceUri": "string",
        "useCommonAlertSchema": "bool",
        "webhookResourceId": "string"
      }
    ],
    "azureAppPushReceivers": [
      {
        "emailAddress": "string",
        "name": "string"
      }
    ],
    "azureFunctionReceivers": [
      {
        "functionAppResourceId": "string",
        "functionName": "string",
        "httpTriggerUrl": "string",
        "managedIdentity": "string",
        "name": "string",
        "useCommonAlertSchema": "bool"
      }
    ],
    "emailReceivers": [
      {
        "emailAddress": "string",
        "name": "string",
        "useCommonAlertSchema": "bool"
      }
    ],
    "enabled": "bool",
    "eventHubReceivers": [
      {
        "eventHubName": "string",
        "eventHubNameSpace": "string",
        "managedIdentity": "string",
        "name": "string",
        "subscriptionId": "string",
        "tenantId": "string",
        "useCommonAlertSchema": "bool"
      }
    ],
    "groupShortName": "string",
    "incidentReceivers": [
      {
        "connection": {
          "id": "string",
          "name": "string"
        },
        "incidentManagementService": "string",
        "mappings": {
          "{customized property}": "string"
        },
        "name": "string"
      }
    ],
    "itsmReceivers": [
      {
        "connectionId": "string",
        "name": "string",
        "region": "string",
        "ticketConfiguration": "string",
        "workspaceId": "string"
      }
    ],
    "logicAppReceivers": [
      {
        "callbackUrl": "string",
        "managedIdentity": "string",
        "name": "string",
        "resourceId": "string",
        "useCommonAlertSchema": "bool"
      }
    ],
    "smsReceivers": [
      {
        "countryCode": "string",
        "name": "string",
        "phoneNumber": "string"
      }
    ],
    "voiceReceivers": [
      {
        "countryCode": "string",
        "name": "string",
        "phoneNumber": "string"
      }
    ],
    "webhookReceivers": [
      {
        "identifierUri": "string",
        "managedIdentity": "string",
        "name": "string",
        "objectId": "string",
        "serviceUri": "string",
        "tenantId": "string",
        "useAadAuth": "bool",
        "useCommonAlertSchema": "bool"
      }
    ]
  },
  "tags": {
    "{customized property}": "string"
  }
}
Property Values
ActionGroup
ArmRoleReceiver
AutomationRunbookReceiver
AzureAppPushReceiver
AzureFunctionReceiver
AzureResourceTags
EmailReceiver
EventHubReceiver
IncidentReceiver
IncidentReceiverMappings
IncidentServiceConnection
ItsmReceiver
LogicAppReceiver
ManagedServiceIdentity
Microsoft.Insights/actionGroups
SmsReceiver
UserAssignedIdentities
UserAssignedIdentity
VoiceReceiver
WebhookReceiver
Usage Examples
Azure Quickstart Templates
The followingAzure Quickstart templatesdeploy this resource type.
Terraform (AzAPI provider) resource definition
The actionGroups resource type can be deployed with operations that target:
Resource groups
For a list of changed properties in each API version, seechange log.
Resource format
To create a Microsoft.Insights/actionGroups resource, add the following Terraform to your template.
resource "azapi_resource" "symbolicname" {
  type = "Microsoft.Insights/actionGroups@2024-10-01-preview"
  name = "string"
  identity = {
    type = "string"
    userAssignedIdentities = {
      {customized property} = {
      }
    }
  }
  location = "string"
  tags = {
    {customized property} = "string"
  }
  body = {
    properties = {
      armRoleReceivers = [
        {
          name = "string"
          roleId = "string"
          useCommonAlertSchema = bool
        }
      ]
      automationRunbookReceivers = [
        {
          automationAccountId = "string"
          isGlobalRunbook = bool
          managedIdentity = "string"
          name = "string"
          runbookName = "string"
          serviceUri = "string"
          useCommonAlertSchema = bool
          webhookResourceId = "string"
        }
      ]
      azureAppPushReceivers = [
        {
          emailAddress = "string"
          name = "string"
        }
      ]
      azureFunctionReceivers = [
        {
          functionAppResourceId = "string"
          functionName = "string"
          httpTriggerUrl = "string"
          managedIdentity = "string"
          name = "string"
          useCommonAlertSchema = bool
        }
      ]
      emailReceivers = [
        {
          emailAddress = "string"
          name = "string"
          useCommonAlertSchema = bool
        }
      ]
      enabled = bool
      eventHubReceivers = [
        {
          eventHubName = "string"
          eventHubNameSpace = "string"
          managedIdentity = "string"
          name = "string"
          subscriptionId = "string"
          tenantId = "string"
          useCommonAlertSchema = bool
        }
      ]
      groupShortName = "string"
      incidentReceivers = [
        {
          connection = {
            id = "string"
            name = "string"
          }
          incidentManagementService = "string"
          mappings = {
            {customized property} = "string"
          }
          name = "string"
        }
      ]
      itsmReceivers = [
        {
          connectionId = "string"
          name = "string"
          region = "string"
          ticketConfiguration = "string"
          workspaceId = "string"
        }
      ]
      logicAppReceivers = [
        {
          callbackUrl = "string"
          managedIdentity = "string"
          name = "string"
          resourceId = "string"
          useCommonAlertSchema = bool
        }
      ]
      smsReceivers = [
        {
          countryCode = "string"
          name = "string"
          phoneNumber = "string"
        }
      ]
      voiceReceivers = [
        {
          countryCode = "string"
          name = "string"
          phoneNumber = "string"
        }
      ]
      webhookReceivers = [
        {
          identifierUri = "string"
          managedIdentity = "string"
          name = "string"
          objectId = "string"
          serviceUri = "string"
          tenantId = "string"
          useAadAuth = bool
          useCommonAlertSchema = bool
        }
      ]
    }
  }
}
resource "azapi_resource" "symbolicname" {
  type = "Microsoft.Insights/actionGroups@2024-10-01-preview"
  name = "string"
  identity = {
    type = "string"
    userAssignedIdentities = {
      {customized property} = {
      }
    }
  }
  location = "string"
  tags = {
    {customized property} = "string"
  }
  body = {
    properties = {
      armRoleReceivers = [
        {
          name = "string"
          roleId = "string"
          useCommonAlertSchema = bool
        }
      ]
      automationRunbookReceivers = [
        {
          automationAccountId = "string"
          isGlobalRunbook = bool
          managedIdentity = "string"
          name = "string"
          runbookName = "string"
          serviceUri = "string"
          useCommonAlertSchema = bool
          webhookResourceId = "string"
        }
      ]
      azureAppPushReceivers = [
        {
          emailAddress = "string"
          name = "string"
        }
      ]
      azureFunctionReceivers = [
        {
          functionAppResourceId = "string"
          functionName = "string"
          httpTriggerUrl = "string"
          managedIdentity = "string"
          name = "string"
          useCommonAlertSchema = bool
        }
      ]
      emailReceivers = [
        {
          emailAddress = "string"
          name = "string"
          useCommonAlertSchema = bool
        }
      ]
      enabled = bool
      eventHubReceivers = [
        {
          eventHubName = "string"
          eventHubNameSpace = "string"
          managedIdentity = "string"
          name = "string"
          subscriptionId = "string"
          tenantId = "string"
          useCommonAlertSchema = bool
        }
      ]
      groupShortName = "string"
      incidentReceivers = [
        {
          connection = {
            id = "string"
            name = "string"
          }
          incidentManagementService = "string"
          mappings = {
            {customized property} = "string"
          }
          name = "string"
        }
      ]
      itsmReceivers = [
        {
          connectionId = "string"
          name = "string"
          region = "string"
          ticketConfiguration = "string"
          workspaceId = "string"
        }
      ]
      logicAppReceivers = [
        {
          callbackUrl = "string"
          managedIdentity = "string"
          name = "string"
          resourceId = "string"
          useCommonAlertSchema = bool
        }
      ]
      smsReceivers = [
        {
          countryCode = "string"
          name = "string"
          phoneNumber = "string"
        }
      ]
      voiceReceivers = [
        {
          countryCode = "string"
          name = "string"
          phoneNumber = "string"
        }
      ]
      webhookReceivers = [
        {
          identifierUri = "string"
          managedIdentity = "string"
          name = "string"
          objectId = "string"
          serviceUri = "string"
          tenantId = "string"
          useAadAuth = bool
          useCommonAlertSchema = bool
        }
      ]
    }
  }
}
Property Values
ActionGroup
ArmRoleReceiver
AutomationRunbookReceiver
AzureAppPushReceiver
AzureFunctionReceiver
AzureResourceTags
EmailReceiver
EventHubReceiver
IncidentReceiver
IncidentReceiverMappings
IncidentServiceConnection
ItsmReceiver
LogicAppReceiver
ManagedServiceIdentity
Microsoft.Insights/actionGroups
SmsReceiver
UserAssignedIdentities
UserAssignedIdentity
VoiceReceiver
WebhookReceiver
Feedback
Was this page helpful?
Additional resources