Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Enable monitoring for Kubernetes clusters
Article
2024-09-22
18 contributors
In this article
This article describes how to enable complete monitoring of your Kubernetes clusters using the following Azure Monitor features:
Managed Prometheusfor metric collection
Container insightsfor log collection
Managed Grafanafor visualization.
Using the Azure portal, you can enable all of the features at the same time. You can also enable them individually by using the Azure CLI, Azure Resource Manager template, Terraform, or Azure Policy. Each of these methods is described in this article.
Important
Kubernetes clusters generate a lot of log data, which can result in significant costs if you aren't selective about the logs that you collect. Before you enable monitoring for your cluster, see the following articles to ensure that your environment is optimized for cost and that you limit your log collection to only the data that you require:
Configure data collection and cost optimization in Container insights using data collection ruleDetails on customizing log collection once you've enabled monitoring, including using preset cost optimization configurations.
Best practices for monitoring Kubernetes with Azure MonitorBest practices for monitoring Kubernetes clusters organized by the five pillars of theAzure Well-Architected Framework, including cost optimization.
Cost optimization in Azure MonitorBest practices for configuring all features of Azure Monitor to optimize your costs and limit the amount of data that you collect.
Supported clusters
This article provides onboarding guidance for the following types of clusters. Any differences in the process for each type are noted in the relevant sections.
Azure Kubernetes clusters (AKS)
Arc-enabled Kubernetes clusters
Prerequisites
Permissions
You require at leastContributoraccess to the cluster for onboarding.
You requireMonitoring ReaderorMonitoring Contributorto view data after monitoring is enabled.
Managed Prometheus prerequisites
The cluster must usemanaged identity authentication.
The following resource providers must be registered in the subscription of the cluster and the Azure Monitor workspace:Microsoft.ContainerServiceMicrosoft.InsightsMicrosoft.AlertsManagementMicrosoft.MonitorThe following resource providers must be registered in the subscription of the Grafana workspace subscription:Microsoft.Dashboard
Microsoft.ContainerService
Microsoft.Insights
Microsoft.AlertsManagement
Microsoft.Monitor
The following resource providers must be registered in the subscription of the Grafana workspace subscription:Microsoft.Dashboard
Microsoft.Dashboard
Arc-Enabled Kubernetes clusters prerequisites
Verify thefirewall requirementsin addition to theAzure Arc-enabled Kubernetes network requirements.
If you previously installed monitoring for AKS, ensure that you havedisabled monitoringbefore proceeding to avoid issues during the extension install.
If you previously installed monitoring on a cluster using a script without cluster extensions, follow the instructions atDisable monitoring of your Kubernetes clusterto delete this Helm chart.
Note
The Managed Prometheus Arc-Enabled Kubernetes extension does not support the following configurations:
Red Hat Openshift distributions, including Azure Red Hat OpenShift (ARO)
Windows nodes
Workspaces
The following table describes the workspaces that are required to support Managed Prometheus and Container insights. You can create each workspace as part of the onboarding process or use an existing workspace. SeeDesign a Log Analytics workspace architecturefor guidance on how many workspaces to create and where they should be placed.
Contributor
Owner
Monitoring Reader
Enable Prometheus and Grafana
Use one of the following methods to enable scraping of Prometheus metrics from your cluster and enable Managed Grafana to visualize the metrics. SeeLink a Grafana workspacefor options to connect your Azure Monitor workspace and Azure Managed Grafana workspace.
Note
If the deployment is done using an ARM, Bicep or Terraform template or Azure Policy, and you are not using the provided examples, ensure that the Data Collection Endpoints, Data Collection Rules and the Data Collection Rule Associations are namedMSProm-<Location of Azure Monitor Workspace>-<Name of cluster resource>. Failure to do so will result in the onboarding process not completing successfully.
MSProm-<Location of Azure Monitor Workspace>-<Name of cluster resource>
Note
If you have a single Azure Monitor Resource that is private-linked, then Prometheus enablement won't work if the AKS cluster and Azure Monitor Workspace are in different regions.
The configuration needed for the Prometheus add-on isn't available cross region because of the private link constraint.
To resolve this, create a new DCE in the cluster location and a new DCRA (association) in the same cluster region. Associate the new DCE with the cluster and name the new association (DCRA) as configurationAccessEndpoint.
For full instructions on how to configure the DCEs associated with your Azure Monitor workspace to use a Private Link for data ingestion, seeEnable private link for Kubernetes monitoring in Azure Monitor.
CLI
Azure Resource Manager
Terraform
Azure Policy
Enable with CLI
If you don't specify an existing Azure Monitor workspace in the following commands, the default workspace for the resource group will be used. If a default workspace doesn't already exist in the cluster's region, one with a name in the formatDefaultAzureMonitorWorkspace-<mapped_region>will be created in a resource group with the nameDefaultRG-<cluster_region>.
DefaultAzureMonitorWorkspace-<mapped_region>
DefaultRG-<cluster_region>
Az CLI version of 2.49.0 or higher is required.
The aks-preview extension must beuninstalled from AKS clustersby using the commandaz extension remove --name aks-preview.
az extension remove --name aks-preview
The k8s-extension extension must be installed using the commandaz extension add --name k8s-extension.
az extension add --name k8s-extension
The k8s-extension version 1.4.1 or higher is required.
Each of the commands for AKS and Arc-Enabled Kubernetes allow the following optional parameters. The parameter name is different for each, but their use is the same.
--ksm-metric-annotations-allow-list
--AzureMonitorMetrics.KubeStateMetrics.MetricAnnotationsAllowList
kube_resource_annotations
*
pods=[kubernetes.io/team,...],namespaces=[kubernetes.io/team],...
--ksm-metric-labels-allow-list
--AzureMonitorMetrics.KubeStateMetrics.MetricLabelsAllowlist
*
pods=[app],namespaces=[k8s-label-1,k8s-label-n,...],...
--enable-windows-recording-rules
Use the-enable-azure-monitor-metricsoptionaz aks createoraz aks update(depending whether you're creating a new cluster or updating an existing cluster) to install the metrics add-on that scrapes Prometheus metrics.
-enable-azure-monitor-metrics
az aks create
az aks update
### Use default Azure Monitor workspace
az aks create/update --enable-azure-monitor-metrics --name <cluster-name> --resource-group <cluster-resource-group>

### Use existing Azure Monitor workspace
az aks create/update --enable-azure-monitor-metrics --name <cluster-name> --resource-group <cluster-resource-group> --azure-monitor-workspace-resource-id <workspace-name-resource-id>

### Use an existing Azure Monitor workspace and link with an existing Grafana workspace
az aks create/update --enable-azure-monitor-metrics --name <cluster-name> --resource-group <cluster-resource-group> --azure-monitor-workspace-resource-id <azure-monitor-workspace-name-resource-id> --grafana-resource-id  <grafana-workspace-name-resource-id>

### Use optional parameters
az aks create/update --enable-azure-monitor-metrics --name <cluster-name> --resource-group <cluster-resource-group> --ksm-metric-labels-allow-list "namespaces=[k8s-label-1,k8s-label-n]" --ksm-metric-annotations-allow-list "pods=[k8s-annotation-1,k8s-annotation-n]"
### Use default Azure Monitor workspace
az aks create/update --enable-azure-monitor-metrics --name <cluster-name> --resource-group <cluster-resource-group>

### Use existing Azure Monitor workspace
az aks create/update --enable-azure-monitor-metrics --name <cluster-name> --resource-group <cluster-resource-group> --azure-monitor-workspace-resource-id <workspace-name-resource-id>

### Use an existing Azure Monitor workspace and link with an existing Grafana workspace
az aks create/update --enable-azure-monitor-metrics --name <cluster-name> --resource-group <cluster-resource-group> --azure-monitor-workspace-resource-id <azure-monitor-workspace-name-resource-id> --grafana-resource-id  <grafana-workspace-name-resource-id>

### Use optional parameters
az aks create/update --enable-azure-monitor-metrics --name <cluster-name> --resource-group <cluster-resource-group> --ksm-metric-labels-allow-list "namespaces=[k8s-label-1,k8s-label-n]" --ksm-metric-annotations-allow-list "pods=[k8s-annotation-1,k8s-annotation-n]"
### Use default Azure Monitor workspace
az k8s-extension create --name azuremonitor-metrics --cluster-name <cluster-name> --resource-group <resource-group> --cluster-type connectedClusters --extension-type Microsoft.AzureMonitor.Containers.Metrics

## Use existing Azure Monitor workspace
az k8s-extension create --name azuremonitor-metrics --cluster-name <cluster-name> --resource-group <resource-group> --cluster-type connectedClusters --extension-type Microsoft.AzureMonitor.Containers.Metrics --configuration-settings azure-monitor-workspace-resource-id=<workspace-name-resource-id>

### Use an existing Azure Monitor workspace and link with an existing Grafana workspace
az k8s-extension create --name azuremonitor-metrics --cluster-name <cluster-name> --resource-group <resource-group> --cluster-type connectedClusters --extension-type Microsoft.AzureMonitor.Containers.Metrics --configuration-settings azure-monitor-workspace-resource-id=<workspace-name-resource-id> grafana-resource-id=<grafana-workspace-name-resource-id>

### Use optional parameters
az k8s-extension create --name azuremonitor-metrics --cluster-name <cluster-name> --resource-group <resource-group> --cluster-type connectedClusters --extension-type Microsoft.AzureMonitor.Containers.Metrics --configuration-settings azure-monitor-workspace-resource-id=<workspace-name-resource-id> grafana-resource-id=<grafana-workspace-name-resource-id> AzureMonitorMetrics.KubeStateMetrics.MetricAnnotationsAllowList="pods=[k8s-annotation-1,k8s-annotation-n]" AzureMonitorMetrics.KubeStateMetrics.MetricLabelsAllowlist "namespaces=[k8s-label-1,k8s-label-n]"
### Use default Azure Monitor workspace
az k8s-extension create --name azuremonitor-metrics --cluster-name <cluster-name> --resource-group <resource-group> --cluster-type connectedClusters --extension-type Microsoft.AzureMonitor.Containers.Metrics

## Use existing Azure Monitor workspace
az k8s-extension create --name azuremonitor-metrics --cluster-name <cluster-name> --resource-group <resource-group> --cluster-type connectedClusters --extension-type Microsoft.AzureMonitor.Containers.Metrics --configuration-settings azure-monitor-workspace-resource-id=<workspace-name-resource-id>

### Use an existing Azure Monitor workspace and link with an existing Grafana workspace
az k8s-extension create --name azuremonitor-metrics --cluster-name <cluster-name> --resource-group <resource-group> --cluster-type connectedClusters --extension-type Microsoft.AzureMonitor.Containers.Metrics --configuration-settings azure-monitor-workspace-resource-id=<workspace-name-resource-id> grafana-resource-id=<grafana-workspace-name-resource-id>

### Use optional parameters
az k8s-extension create --name azuremonitor-metrics --cluster-name <cluster-name> --resource-group <resource-group> --cluster-type connectedClusters --extension-type Microsoft.AzureMonitor.Containers.Metrics --configuration-settings azure-monitor-workspace-resource-id=<workspace-name-resource-id> grafana-resource-id=<grafana-workspace-name-resource-id> AzureMonitorMetrics.KubeStateMetrics.MetricAnnotationsAllowList="pods=[k8s-annotation-1,k8s-annotation-n]" AzureMonitorMetrics.KubeStateMetrics.MetricLabelsAllowlist "namespaces=[k8s-label-1,k8s-label-n]"
The following additional optional parameters are available for Azure Arc-enabled clusters:
ClusterDistribution
Azure.Cluster.Distribution
CloudEnvironment
Azure.Cluster.Cloud
MountCATrustAnchorsDirectory
true
MountUbuntuCACertDirectory
true
aks_edge
Enable with ARM templates
The Azure Monitor workspace and Azure Managed Grafana instance must already be created.
The template must be deployed in the same resource group as the Azure Managed Grafana instance.
If the Azure Managed Grafana instance is in a subscription other than the Azure Monitor workspace subscription, register the Azure Monitor workspace subscription with theMicrosoft.Dashboardresource provider using the guidance atRegister resource provider.
Microsoft.Dashboard
Users with theUser Access Administratorrole in the subscription of the AKS cluster can enable theMonitoring Readerrole directly by deploying the template.
User Access Administrator
Monitoring Reader
Note
Currently in Bicep, there's no way to explicitly scope theMonitoring Readerrole assignment on a string parameter "resource ID" for an Azure Monitor workspace like in an ARM template. Bicep expects a value of typeresource | tenant. There is also no REST APIspecfor an Azure Monitor workspace.
Monitoring Reader
resource | tenant
Therefore, the default scoping for theMonitoring Readerrole is on the resource group. The role is applied on the same Azure Monitor workspace by inheritance, which is the expected behavior. After you deploy this Bicep template, the Grafana instance is givenMonitoring Readerpermissions for all the Azure Monitor workspaces in that resource group.
Monitoring Reader
Monitoring Reader
If the Azure Managed Grafana instance is already linked to an Azure Monitor workspace, then you must include this list in the template. On theOverviewpage for the Azure Managed Grafana instance in the Azure portal, selectJSON view, and copy the value ofazureMonitorWorkspaceIntegrationswhich will look similar to the sample below. If it doesn't exist, then the instance hasn't been linked with any Azure Monitor workspace.
azureMonitorWorkspaceIntegrations
"properties": {
    "grafanaIntegrations": {
        "azureMonitorWorkspaceIntegrations": [
            {
                "azureMonitorWorkspaceResourceId": "full_resource_id_1"
            },
            {
                "azureMonitorWorkspaceResourceId": "full_resource_id_2"
            }
        ]
    }
}
"properties": {
    "grafanaIntegrations": {
        "azureMonitorWorkspaceIntegrations": [
            {
                "azureMonitorWorkspaceResourceId": "full_resource_id_1"
            },
            {
                "azureMonitorWorkspaceResourceId": "full_resource_id_2"
            }
        ]
    }
}
Download the required files for the type of Kubernetes cluster you're working with.AKS cluster ARMTemplate file:https://aka.ms/azureprometheus-enable-arm-templateParameter file:https://aka.ms/azureprometheus-enable-arm-template-parametersAKS cluster BicepTemplate file:https://aka.ms/azureprometheus-enable-bicep-templateParameter file:https://aka.ms/azureprometheus-enable-bicep-template-parametersDCRA module:https://aka.ms/nested_azuremonitormetrics_dcra_clusterResourceIdProfile module:https://aka.ms/nested_azuremonitormetrics_profile_clusterResourceIdAzure Managed Grafana Role Assignment module:https://aka.ms/nested_grafana_amw_role_assignmentArc-Enabled cluster ARMTemplate file:https://aka.ms/azureprometheus-arc-arm-templateParameter file:https://aka.ms/azureprometheus-arc-arm-template-parameters
Download the required files for the type of Kubernetes cluster you're working with.
AKS cluster ARM
Template file:https://aka.ms/azureprometheus-enable-arm-template
Parameter file:https://aka.ms/azureprometheus-enable-arm-template-parameters
AKS cluster Bicep
Template file:https://aka.ms/azureprometheus-enable-bicep-template
Parameter file:https://aka.ms/azureprometheus-enable-bicep-template-parameters
DCRA module:https://aka.ms/nested_azuremonitormetrics_dcra_clusterResourceId
Profile module:https://aka.ms/nested_azuremonitormetrics_profile_clusterResourceId
Azure Managed Grafana Role Assignment module:https://aka.ms/nested_grafana_amw_role_assignment
Arc-Enabled cluster ARM
Template file:https://aka.ms/azureprometheus-arc-arm-template
Parameter file:https://aka.ms/azureprometheus-arc-arm-template-parameters
Edit the following values in the parameter file. The same set of values are used for both the ARM and Bicep templates. Retrieve the resource ID of the resources from theJSON Viewof theirOverviewpage.ParameterValueazureMonitorWorkspaceResourceIdResource ID for the Azure Monitor workspace. Retrieve from theJSON viewon theOverviewpage for the Azure Monitor workspace.azureMonitorWorkspaceLocationLocation of the Azure Monitor workspace. Retrieve from theJSON viewon theOverviewpage for the Azure Monitor workspace.clusterResourceIdResource ID for the AKS cluster. Retrieve from theJSON viewon theOverviewpage for the cluster.clusterLocationLocation of the AKS cluster. Retrieve from theJSON viewon theOverviewpage for the cluster.metricLabelsAllowlistComma-separated list of Kubernetes labels keys to be used in the resource's labels metric.metricAnnotationsAllowListComma-separated list of more Kubernetes label keys to be used in the resource's annotations metric.grafanaResourceIdResource ID for the managed Grafana instance. Retrieve from theJSON viewon theOverviewpage for the Grafana instance.grafanaLocationLocation for the managed Grafana instance. Retrieve from theJSON viewon theOverviewpage for the Grafana instance.grafanaSkuSKU for the managed Grafana instance. Retrieve from theJSON viewon theOverviewpage for the Grafana instance. Use thesku.name.
Edit the following values in the parameter file. The same set of values are used for both the ARM and Bicep templates. Retrieve the resource ID of the resources from theJSON Viewof theirOverviewpage.
azureMonitorWorkspaceResourceId
azureMonitorWorkspaceLocation
clusterResourceId
clusterLocation
metricLabelsAllowlist
metricAnnotationsAllowList
grafanaResourceId
grafanaLocation
grafanaSku
Open the template file and update thegrafanaIntegrationsproperty at the end of the file with the values that you retrieved from the Grafana instance. This will look similar to the following samples. In these samples,full_resource_id_1andfull_resource_id_2were already in the Azure Managed Grafana resource JSON. The finalazureMonitorWorkspaceResourceIdentry is already in the template and is used to link to the Azure Monitor workspace resource ID provided in the parameters file.ARM{
    "type": "Microsoft.Dashboard/grafana",
    "apiVersion": "2022-08-01",
    "name": "[split(parameters('grafanaResourceId'),'/')[8]]",
    "sku": {
        "name": "[parameters('grafanaSku')]"
    },
    "location": "[parameters('grafanaLocation')]",
    "properties": {
        "grafanaIntegrations": {
        "azureMonitorWorkspaceIntegrations": [
            {
                "azureMonitorWorkspaceResourceId": "full_resource_id_1"
            },
            {
                "azureMonitorWorkspaceResourceId": "full_resource_id_2"
            },
            {
                "azureMonitorWorkspaceResourceId": "[parameters('azureMonitorWorkspaceResourceId')]"
            }
        ]
        }
    }
}Bicepresource grafanaResourceId_8 'Microsoft.Dashboard/grafana@2022-08-01' = {
        name: split(grafanaResourceId, '/')[8]
        sku: {
            name: grafanaSku
        }
        identity: {
            type: 'SystemAssigned'
        }
        location: grafanaLocation
        properties: {
            grafanaIntegrations: {
                azureMonitorWorkspaceIntegrations: [
                    {
                        azureMonitorWorkspaceResourceId: 'full_resource_id_1'
                    }
                    {
                        azureMonitorWorkspaceResourceId: 'full_resource_id_2'
                    }
                    {
                        azureMonitorWorkspaceResourceId: azureMonitorWorkspaceResourceId
                    }
                ]
            }
        }
    }
Open the template file and update thegrafanaIntegrationsproperty at the end of the file with the values that you retrieved from the Grafana instance. This will look similar to the following samples. In these samples,full_resource_id_1andfull_resource_id_2were already in the Azure Managed Grafana resource JSON. The finalazureMonitorWorkspaceResourceIdentry is already in the template and is used to link to the Azure Monitor workspace resource ID provided in the parameters file.
grafanaIntegrations
full_resource_id_1
full_resource_id_2
azureMonitorWorkspaceResourceId
ARM
{
    "type": "Microsoft.Dashboard/grafana",
    "apiVersion": "2022-08-01",
    "name": "[split(parameters('grafanaResourceId'),'/')[8]]",
    "sku": {
        "name": "[parameters('grafanaSku')]"
    },
    "location": "[parameters('grafanaLocation')]",
    "properties": {
        "grafanaIntegrations": {
        "azureMonitorWorkspaceIntegrations": [
            {
                "azureMonitorWorkspaceResourceId": "full_resource_id_1"
            },
            {
                "azureMonitorWorkspaceResourceId": "full_resource_id_2"
            },
            {
                "azureMonitorWorkspaceResourceId": "[parameters('azureMonitorWorkspaceResourceId')]"
            }
        ]
        }
    }
}
{
    "type": "Microsoft.Dashboard/grafana",
    "apiVersion": "2022-08-01",
    "name": "[split(parameters('grafanaResourceId'),'/')[8]]",
    "sku": {
        "name": "[parameters('grafanaSku')]"
    },
    "location": "[parameters('grafanaLocation')]",
    "properties": {
        "grafanaIntegrations": {
        "azureMonitorWorkspaceIntegrations": [
            {
                "azureMonitorWorkspaceResourceId": "full_resource_id_1"
            },
            {
                "azureMonitorWorkspaceResourceId": "full_resource_id_2"
            },
            {
                "azureMonitorWorkspaceResourceId": "[parameters('azureMonitorWorkspaceResourceId')]"
            }
        ]
        }
    }
}
Bicep
resource grafanaResourceId_8 'Microsoft.Dashboard/grafana@2022-08-01' = {
        name: split(grafanaResourceId, '/')[8]
        sku: {
            name: grafanaSku
        }
        identity: {
            type: 'SystemAssigned'
        }
        location: grafanaLocation
        properties: {
            grafanaIntegrations: {
                azureMonitorWorkspaceIntegrations: [
                    {
                        azureMonitorWorkspaceResourceId: 'full_resource_id_1'
                    }
                    {
                        azureMonitorWorkspaceResourceId: 'full_resource_id_2'
                    }
                    {
                        azureMonitorWorkspaceResourceId: azureMonitorWorkspaceResourceId
                    }
                ]
            }
        }
    }
resource grafanaResourceId_8 'Microsoft.Dashboard/grafana@2022-08-01' = {
        name: split(grafanaResourceId, '/')[8]
        sku: {
            name: grafanaSku
        }
        identity: {
            type: 'SystemAssigned'
        }
        location: grafanaLocation
        properties: {
            grafanaIntegrations: {
                azureMonitorWorkspaceIntegrations: [
                    {
                        azureMonitorWorkspaceResourceId: 'full_resource_id_1'
                    }
                    {
                        azureMonitorWorkspaceResourceId: 'full_resource_id_2'
                    }
                    {
                        azureMonitorWorkspaceResourceId: azureMonitorWorkspaceResourceId
                    }
                ]
            }
        }
    }
Deploy the template with the parameter file by using any valid method for deploying Resource Manager templates. For examples of different methods, seeDeploy the sample templates.
Deploy the template with the parameter file by using any valid method for deploying Resource Manager templates. For examples of different methods, seeDeploy the sample templates.
Enable with Terraform
The Azure Monitor workspace and Azure Managed Grafana workspace must already be created.
The template needs to be deployed in the same resource group as the Azure Managed Grafana workspace.
Users with the User Access Administrator role in the subscription of the AKS cluster can enable the Monitoring Reader role directly by deploying the template.
If the Azure Managed Grafana instance is in a subscription other than the Azure Monitor Workspaces subscription, register the Azure Monitor Workspace subscription with theMicrosoft.Dashboardresource provider by followingthis documentation.
Microsoft.Dashboard
On theOverviewpage for the Azure Managed Grafana instance in the Azure portal, selectJSON view.
If you're using an existing Azure Managed Grafana instance that's already linked to an Azure Monitor workspace, you need the list of Grafana integrations. Copy the value of theazureMonitorWorkspaceIntegrationsfield. If it doesn't exist, the instance hasn't been linked with any Azure Monitor workspace. Update theazure_monitor_workspace_integrationsblock inmain.tfwith the list of grafana integrations.
azureMonitorWorkspaceIntegrations
azure_monitor_workspace_integrations
main.tf
azure_monitor_workspace_integrations {
    resource_id  = var.monitor_workspace_id[var.monitor_workspace_id1, var.monitor_workspace_id2]
  }
azure_monitor_workspace_integrations {
    resource_id  = var.monitor_workspace_id[var.monitor_workspace_id1, var.monitor_workspace_id2]
  }
If you're deploying a new AKS cluster using Terraform with managed Prometheus addon enabled, follow these steps:
Download all files underAddonTerraformTemplate.
Edit the variables in variables.tf file with the correct parameter values.
Runterraform init -upgradeto initialize the Terraform deployment.
terraform init -upgrade
Runterraform plan -out main.tfplanto initialize the Terraform deployment.
terraform plan -out main.tfplan
Runterraform apply main.tfplanto apply the execution plan to your cloud infrastructure.
terraform apply main.tfplan
Note: Pass the variables forannotations_allowedandlabels_allowedkeys in main.tf only when those values exist. These are optional blocks.
annotations_allowed
labels_allowed
Note
Edit the main.tf file appropriately before running the terraform template. Add in any existing azure_monitor_workspace_integrations values to the grafana resource before running the template. Else, older values get deleted and replaced with what is there in the template during deployment. Users with 'User Access Administrator' role in the subscription  of the AKS cluster can enable 'Monitoring Reader' role directly by deploying the template. Edit the grafanaSku parameter if you're using a nonstandard SKU and finally run this template in the Grafana Resource's resource group.
Enable with Azure Policy
Download Azure Policy template and parameter files.Template file:https://aka.ms/AddonPolicyMetricsProfileParameter file:https://aka.ms/AddonPolicyMetricsProfile.parameters
Download Azure Policy template and parameter files.
Template file:https://aka.ms/AddonPolicyMetricsProfile
Parameter file:https://aka.ms/AddonPolicyMetricsProfile.parameters
Create the policy definition using the following CLI command:az policy definition create --name "Prometheus Metrics addon" --display-name "Prometheus Metrics addon" --mode Indexed --metadata version=1.0.0 category=Kubernetes --rules AddonPolicyMetricsProfile.rules.json --params AddonPolicyMetricsProfile.parameters.json
Create the policy definition using the following CLI command:
az policy definition create --name "Prometheus Metrics addon" --display-name "Prometheus Metrics addon" --mode Indexed --metadata version=1.0.0 category=Kubernetes --rules AddonPolicyMetricsProfile.rules.json --params AddonPolicyMetricsProfile.parameters.json
az policy definition create --name "Prometheus Metrics addon" --display-name "Prometheus Metrics addon" --mode Indexed --metadata version=1.0.0 category=Kubernetes --rules AddonPolicyMetricsProfile.rules.json --params AddonPolicyMetricsProfile.parameters.json
After you create the policy definition, in the Azure portal, selectPolicyand thenDefinitions. Select the policy definition you created.
After you create the policy definition, in the Azure portal, selectPolicyand thenDefinitions. Select the policy definition you created.
SelectAssignand fill in the details on theParameterstab. SelectReview + Create.
SelectAssignand fill in the details on theParameterstab. SelectReview + Create.
If you want to apply the policy to an existing cluster, create aRemediation taskfor that cluster resource fromPolicy Assignment.
If you want to apply the policy to an existing cluster, create aRemediation taskfor that cluster resource fromPolicy Assignment.
After the policy is assigned to the subscription, whenever you create a new cluster without Prometheus enabled, the policy will run and deploy to enable Prometheus monitoring.
Enable Container insights
Use one of the following methods to enable Container insights on your cluster. Once this is complete, seeConfigure agent data collection for Container insightsto customize your configuration to ensure that you aren't collecting more data than you require.
Note
If you have a single Azure Monitor Resource that is private-linked, then Container insights enablement will not work through the Azure Portal.
For full instructions on how to configure Container insights with Private Link, seeEnable private link for Kubernetes monitoring in Azure Monitor.
CLI
Azure Resource Manager
Terraform
Azure Policy
Use one of the following commands to enable monitoring of your AKS and Arc-enabled clusters. If you don't specify an existing Log Analytics workspace, the default workspace for the resource group will be used. If a default workspace doesn't already exist in the cluster's region, one will be created with a name in the formatDefaultWorkspace-<GUID>-<Region>.
DefaultWorkspace-<GUID>-<Region>
Azure CLI version 2.43.0 or higher
Managed identity authentication is default in CLI version 2.49.0 or higher.
Azure k8s-extension version 1.3.7 or higher
Managed identity authentication is the default in k8s-extension version 1.43.0 or higher.
Managed identity authentication is not supported for Arc-enabled Kubernetes clusters with ARO (Azure Red Hat Openshift) or Windows nodes. Use legacy authentication.
For CLI version 2.54.0 or higher, the logging schema will be configured toContainerLogV2usingConfigMap.
Note
You can enable theContainerLogV2schema for a cluster either using the cluster's Data Collection Rule (DCR) or ConfigMap. If both settings are enabled, the ConfigMap will take precedence. Stdout and stderr logs will only be ingested to the ContainerLog table when both the DCR and ConfigMap are explicitly set to off.
### Use default Log Analytics workspace
az aks enable-addons --addon monitoring --name <cluster-name> --resource-group <cluster-resource-group-name>

### Use existing Log Analytics workspace
az aks enable-addons --addon monitoring --name <cluster-name> --resource-group <cluster-resource-group-name> --workspace-resource-id <workspace-resource-id>

### Use legacy authentication
az aks enable-addons --addon monitoring --name <cluster-name> --resource-group <cluster-resource-group-name> --workspace-resource-id <workspace-resource-id> --enable-msi-auth-for-monitoring false
### Use default Log Analytics workspace
az aks enable-addons --addon monitoring --name <cluster-name> --resource-group <cluster-resource-group-name>

### Use existing Log Analytics workspace
az aks enable-addons --addon monitoring --name <cluster-name> --resource-group <cluster-resource-group-name> --workspace-resource-id <workspace-resource-id>

### Use legacy authentication
az aks enable-addons --addon monitoring --name <cluster-name> --resource-group <cluster-resource-group-name> --workspace-resource-id <workspace-resource-id> --enable-msi-auth-for-monitoring false
Example
az aks enable-addons --addon monitoring --name "my-cluster" --resource-group "my-resource-group" --workspace-resource-id "/subscriptions/my-subscription/resourceGroups/my-resource-group/providers/Microsoft.OperationalInsights/workspaces/my-workspace"
az aks enable-addons --addon monitoring --name "my-cluster" --resource-group "my-resource-group" --workspace-resource-id "/subscriptions/my-subscription/resourceGroups/my-resource-group/providers/Microsoft.OperationalInsights/workspaces/my-workspace"
### Use default Log Analytics workspace
az k8s-extension create --name azuremonitor-containers --cluster-name <cluster-name> --resource-group <resource-group> --cluster-type connectedClusters --extension-type Microsoft.AzureMonitor.Containers

### Use existing Log Analytics workspace
az k8s-extension create --name azuremonitor-containers --cluster-name <cluster-name> --resource-group <resource-group> --cluster-type connectedClusters --extension-type Microsoft.AzureMonitor.Containers --configuration-settings logAnalyticsWorkspaceResourceID=<workspace-resource-id>

### Use managed identity authentication (default as k8s-extension version 1.43.0)
az k8s-extension create --name azuremonitor-containers --cluster-name <cluster-name> --resource-group <resource-group> --cluster-type connectedClusters --extension-type Microsoft.AzureMonitor.Containers --configuration-settings amalogs.useAADAuth=true

### Use advanced configuration settings
az k8s-extension create --name azuremonitor-containers --cluster-name <cluster-name> --resource-group <resource-group> --cluster-type connectedClusters --extension-type Microsoft.AzureMonitor.Containers --configuration-settings  amalogs.resources.daemonset.limits.cpu=150m amalogs.resources.daemonset.limits.memory=600Mi amalogs.resources.deployment.limits.cpu=1 amalogs.resources.deployment.limits.memory=750Mi

### With custom mount path for container stdout & stderr logs
### Custom mount path not required for Azure Stack Edge version > 2318. Custom mount path must be /home/data/docker for Azure Stack Edge cluster with version <= 2318
az k8s-extension create --name azuremonitor-containers --cluster-name <cluster-name> --resource-group <resource-group> --cluster-type connectedClusters --extension-type Microsoft.AzureMonitor.Containers --configuration-settings amalogs.logsettings.custommountpath=<customMountPath>
### Use default Log Analytics workspace
az k8s-extension create --name azuremonitor-containers --cluster-name <cluster-name> --resource-group <resource-group> --cluster-type connectedClusters --extension-type Microsoft.AzureMonitor.Containers

### Use existing Log Analytics workspace
az k8s-extension create --name azuremonitor-containers --cluster-name <cluster-name> --resource-group <resource-group> --cluster-type connectedClusters --extension-type Microsoft.AzureMonitor.Containers --configuration-settings logAnalyticsWorkspaceResourceID=<workspace-resource-id>

### Use managed identity authentication (default as k8s-extension version 1.43.0)
az k8s-extension create --name azuremonitor-containers --cluster-name <cluster-name> --resource-group <resource-group> --cluster-type connectedClusters --extension-type Microsoft.AzureMonitor.Containers --configuration-settings amalogs.useAADAuth=true

### Use advanced configuration settings
az k8s-extension create --name azuremonitor-containers --cluster-name <cluster-name> --resource-group <resource-group> --cluster-type connectedClusters --extension-type Microsoft.AzureMonitor.Containers --configuration-settings  amalogs.resources.daemonset.limits.cpu=150m amalogs.resources.daemonset.limits.memory=600Mi amalogs.resources.deployment.limits.cpu=1 amalogs.resources.deployment.limits.memory=750Mi

### With custom mount path for container stdout & stderr logs
### Custom mount path not required for Azure Stack Edge version > 2318. Custom mount path must be /home/data/docker for Azure Stack Edge cluster with version <= 2318
az k8s-extension create --name azuremonitor-containers --cluster-name <cluster-name> --resource-group <resource-group> --cluster-type connectedClusters --extension-type Microsoft.AzureMonitor.Containers --configuration-settings amalogs.logsettings.custommountpath=<customMountPath>
See theresource requests and limits section of Helm chartfor the available configuration settings.
Example
az k8s-extension create --name azuremonitor-containers --cluster-name "my-cluster" --resource-group "my-resource-group" --cluster-type connectedClusters --extension-type Microsoft.AzureMonitor.Containers --configuration-settings logAnalyticsWorkspaceResourceID="/subscriptions/my-subscription/resourceGroups/my-resource-group/providers/Microsoft.OperationalInsights/workspaces/my-workspace"
az k8s-extension create --name azuremonitor-containers --cluster-name "my-cluster" --resource-group "my-resource-group" --cluster-type connectedClusters --extension-type Microsoft.AzureMonitor.Containers --configuration-settings logAnalyticsWorkspaceResourceID="/subscriptions/my-subscription/resourceGroups/my-resource-group/providers/Microsoft.OperationalInsights/workspaces/my-workspace"
Arc-enabled cluster with forward proxy
If the cluster is configured with a forward proxy, then proxy settings are automatically applied to the extension. In the case of a cluster with AMPLS + proxy, proxy config should be ignored. Onboard the extension with the configuration settingamalogs.ignoreExtensionProxySettings=true.
amalogs.ignoreExtensionProxySettings=true
az k8s-extension create --name azuremonitor-containers --cluster-name <cluster-name> --resource-group <resource-group> --cluster-type connectedClusters --extension-type Microsoft.AzureMonitor.Containers --configuration-settings amalogs.ignoreExtensionProxySettings=true
az k8s-extension create --name azuremonitor-containers --cluster-name <cluster-name> --resource-group <resource-group> --cluster-type connectedClusters --extension-type Microsoft.AzureMonitor.Containers --configuration-settings amalogs.ignoreExtensionProxySettings=true
Arc-enabled cluster with ARO or OpenShift or Windows nodes
Managed identity authentication is not supported for Arc-enabled Kubernetes clusters with ARO (Azure Red Hat OpenShift) or OpenShift or Windows nodes. Use legacy authentication by specifyingamalogs.useAADAuth=falseas in the following example.
amalogs.useAADAuth=false
az k8s-extension create --name azuremonitor-containers --cluster-name <cluster-name> --resource-group <resource-group> --cluster-type connectedClusters --extension-type Microsoft.AzureMonitor.Containers --configuration-settings amalogs.useAADAuth=false
az k8s-extension create --name azuremonitor-containers --cluster-name <cluster-name> --resource-group <resource-group> --cluster-type connectedClusters --extension-type Microsoft.AzureMonitor.Containers --configuration-settings amalogs.useAADAuth=false
Delete extension instance
The following command only deletes the extension instance, but doesn't delete the Log Analytics workspace. The data in the Log Analytics resource is left intact.
az k8s-extension delete --name azuremonitor-containers --cluster-type connectedClusters --cluster-name <cluster-name> --resource-group <resource-group>
az k8s-extension delete --name azuremonitor-containers --cluster-type connectedClusters --cluster-name <cluster-name> --resource-group <resource-group>
Both ARM and Bicep templates are provided in this section.
The template must be deployed in the same resource group as the cluster.
Download and edit template and parameter fileAKS cluster ARMTemplate file:https://aka.ms/aks-enable-monitoring-msi-onboarding-template-fileParameter file:https://aka.ms/aks-enable-monitoring-msi-onboarding-template-parameter-fileAKS  cluster BicepTemplate file (Syslog):https://aka.ms/enable-monitoring-msi-syslog-bicep-templateParameter file (No Syslog):https://aka.ms/enable-monitoring-msi-syslog-bicep-parametersTemplate file (No Syslog):https://aka.ms/enable-monitoring-msi-bicep-templateParameter file (No Syslog):https://aka.ms/enable-monitoring-msi-bicep-parametersArc-enabled cluster ARMTemplate file:https://aka.ms/arc-k8s-azmon-extension-msi-arm-templateParameter file:https://aka.ms/arc-k8s-azmon-extension-msi-arm-template-paramsTemplate file (legacy authentication):https://aka.ms/arc-k8s-azmon-extension-arm-templateParameter file (legacy authentication):https://aka.ms/arc-k8s-azmon-extension-arm-template-params
Download and edit template and parameter file
AKS cluster ARM
Template file:https://aka.ms/aks-enable-monitoring-msi-onboarding-template-file
Parameter file:https://aka.ms/aks-enable-monitoring-msi-onboarding-template-parameter-file
AKS  cluster Bicep
Template file (Syslog):https://aka.ms/enable-monitoring-msi-syslog-bicep-template
Parameter file (No Syslog):https://aka.ms/enable-monitoring-msi-syslog-bicep-parameters
Template file (No Syslog):https://aka.ms/enable-monitoring-msi-bicep-template
Parameter file (No Syslog):https://aka.ms/enable-monitoring-msi-bicep-parameters
Arc-enabled cluster ARM
Template file:https://aka.ms/arc-k8s-azmon-extension-msi-arm-template
Parameter file:https://aka.ms/arc-k8s-azmon-extension-msi-arm-template-params
Template file (legacy authentication):https://aka.ms/arc-k8s-azmon-extension-arm-template
Parameter file (legacy authentication):https://aka.ms/arc-k8s-azmon-extension-arm-template-params
Edit the following values in the parameter file. The same set of values are used for both the ARM and Bicep templates. Retrieve the resource ID of the resources from theJSON Viewof theirOverviewpage.ParameterDescriptionAKS:aksResourceIdArc:clusterResourceIdResource ID of the cluster.AKS:aksResourceLocationArc:clusterRegionLocation of the cluster.AKS:workspaceResourceIdArc:workspaceResourceIdResource ID of the Log Analytics workspace.Arc:workspaceRegionRegion of the Log Analytics workspace.Arc:workspaceDomainDomain of the Log Analytics workspace.opinsights.azure.comfor Azure public cloudopinsights.azure.usfor AzureUSGovernment.AKS:resourceTagValuesTag values specified for the existing Container insights extension data collection rule (DCR) of the cluster and the name of the DCR. The name will beMSCI-<clusterName>-<clusterRegion>and this resource created in an AKS clusters resource group. For first time onboarding, you can set arbitrary tag values.
Edit the following values in the parameter file. The same set of values are used for both the ARM and Bicep templates. Retrieve the resource ID of the resources from theJSON Viewof theirOverviewpage.
aksResourceId
clusterResourceId
aksResourceLocation
clusterRegion
workspaceResourceId
workspaceResourceId
workspaceRegion
workspaceDomain
opinsights.azure.com
opinsights.azure.us
resourceTagValues
MSCI-<clusterName>-<clusterRegion>
Deploy the template with the parameter file by using any valid method for deploying Resource Manager templates. For examples of different methods, seeDeploy the sample templates.
Deploy the template with the parameter file by using any valid method for deploying Resource Manager templates. For examples of different methods, seeDeploy the sample templates.
Download Terraform template file depending on whether you want to enable Syslog collection.Sysloghttps://aka.ms/enable-monitoring-msi-syslog-terraformNo Sysloghttps://aka.ms/enable-monitoring-msi-terraform
Download Terraform template file depending on whether you want to enable Syslog collection.
Syslog
https://aka.ms/enable-monitoring-msi-syslog-terraform
No Syslog
https://aka.ms/enable-monitoring-msi-terraform
Adjust theazurerm_kubernetes_clusterresource inmain.tfbased on your cluster settings.
Adjust theazurerm_kubernetes_clusterresource inmain.tfbased on your cluster settings.
azurerm_kubernetes_cluster
Update parameters invariables.tfto replace values in "<>"ParameterDescriptionaks_resource_group_nameUse the values on the AKS Overview page for the resource group.resource_group_locationUse the values on the AKS Overview page for the resource group.cluster_nameDefine the cluster name that you would like to create.workspace_resource_idUse the resource ID of your Log Analytics workspace.workspace_regionUse the location of your Log Analytics workspace.resource_tag_valuesMatch the existing tag values specified for the existing Container insights extension data collection rule (DCR) of the cluster and the name of the DCR. The name will matchMSCI-<clusterName>-<clusterRegion>and this resource is created in the same resource group as the AKS clusters. For first time onboarding, you can set the arbitrary tag values.enabledContainerLogV2Set this parameter value to be true to use the default recommended ContainerLogV2.Cost optimization parametersRefer toData collection parameters
Update parameters invariables.tfto replace values in "<>"
aks_resource_group_name
resource_group_location
cluster_name
workspace_resource_id
workspace_region
resource_tag_values
MSCI-<clusterName>-<clusterRegion>
enabledContainerLogV2
Runterraform init -upgradeto initialize the Terraform deployment.
Runterraform init -upgradeto initialize the Terraform deployment.
terraform init -upgrade
Runterraform plan -out main.tfplanto initialize the Terraform deployment.
Runterraform plan -out main.tfplanto initialize the Terraform deployment.
terraform plan -out main.tfplan
Runterraform apply main.tfplanto apply the execution plan to your cloud infrastructure.
Runterraform apply main.tfplanto apply the execution plan to your cloud infrastructure.
terraform apply main.tfplan
Import the existing cluster resource first with the command:terraform import azurerm_kubernetes_cluster.k8s <aksResourceId>
terraform import azurerm_kubernetes_cluster.k8s <aksResourceId>
Add the oms_agent add-on profile to the existing azurerm_kubernetes_cluster resource.oms_agent {
    log_analytics_workspace_id = var.workspace_resource_id
    msi_auth_for_monitoring_enabled = true
  }
oms_agent {
    log_analytics_workspace_id = var.workspace_resource_id
    msi_auth_for_monitoring_enabled = true
  }
oms_agent {
    log_analytics_workspace_id = var.workspace_resource_id
    msi_auth_for_monitoring_enabled = true
  }
Copy the DCR and DCRA resources from the Terraform templates
Runterraform plan -out main.tfplanand make sure the change is adding the oms_agent property. Note: If theazurerm_kubernetes_clusterresource defined is different during terraform plan, the existing cluster will get destroyed and recreated.
terraform plan -out main.tfplan
azurerm_kubernetes_cluster
Runterraform apply main.tfplanto apply the execution plan to your cloud infrastructure.
terraform apply main.tfplan
Tip
Edit themain.tffile appropriately before running the terraform template
main.tf
Data will start flowing after 10 minutes since the cluster needs to be ready first
WorkspaceID needs to match the format/subscriptions/aaaa0a0a-bb1b-cc2c-dd3d-eeeeee4e4e4e/resourceGroups/example-resource-group/providers/Microsoft.OperationalInsights/workspaces/workspaceValue
/subscriptions/aaaa0a0a-bb1b-cc2c-dd3d-eeeeee4e4e4e/resourceGroups/example-resource-group/providers/Microsoft.OperationalInsights/workspaces/workspaceValue
If resource group already exists, runterraform import azurerm_resource_group.rg /subscriptions/<Subscription_ID>/resourceGroups/<Resource_Group_Name>before terraform plan
terraform import azurerm_resource_group.rg /subscriptions/<Subscription_ID>/resourceGroups/<Resource_Group_Name>
From theDefinitionstab of thePolicymenu in the Azure portal, create a policy definition with the following details.Definition location: Azure subscription where the policy definition should be stored.Name: AKS-Monitoring-AddonDescription: Azure custom policy to enable the Monitoring Add-on onto Azure Kubernetes clusters.Category: SelectUse existingand thenKubernetesfrom the dropdown list.Policy rule: Replace the existing sample JSON with the contents ofhttps://aka.ms/aks-enable-monitoring-custom-policy.
From theDefinitionstab of thePolicymenu in the Azure portal, create a policy definition with the following details.
Definition location: Azure subscription where the policy definition should be stored.
Name: AKS-Monitoring-Addon
Description: Azure custom policy to enable the Monitoring Add-on onto Azure Kubernetes clusters.
Category: SelectUse existingand thenKubernetesfrom the dropdown list.
Policy rule: Replace the existing sample JSON with the contents ofhttps://aka.ms/aks-enable-monitoring-custom-policy.
Select the new policy definitionAKS Monitoring Addon.
Select the new policy definitionAKS Monitoring Addon.
SelectAssignand specify aScopeof where the policy should be assigned.
SelectAssignand specify aScopeof where the policy should be assigned.
SelectNextand provide the resource ID of the Log Analytics workspace.
SelectNextand provide the resource ID of the Log Analytics workspace.
Create a remediation task if you want to apply the policy to existing AKS clusters in the selected scope.
Create a remediation task if you want to apply the policy to existing AKS clusters in the selected scope.
SelectReview + createto create the policy assignment.
SelectReview + createto create the policy assignment.
Download Azure Policy template and parameter files.Template file:https://aka.ms/enable-monitoring-msi-azure-policy-templateParameter file:https://aka.ms/enable-monitoring-msi-azure-policy-parameters
Download Azure Policy template and parameter files.
Template file:https://aka.ms/enable-monitoring-msi-azure-policy-template
Parameter file:https://aka.ms/enable-monitoring-msi-azure-policy-parameters
Create the policy definition using the following CLI command:az policy definition create --name "AKS-Monitoring-Addon-MSI" --display-name "AKS-Monitoring-Addon-MSI" --mode Indexed --metadata version=1.0.0 category=Kubernetes --rules azure-policy.rules.json --params azure-policy.parameters.json
Create the policy definition using the following CLI command:
az policy definition create --name "AKS-Monitoring-Addon-MSI" --display-name "AKS-Monitoring-Addon-MSI" --mode Indexed --metadata version=1.0.0 category=Kubernetes --rules azure-policy.rules.json --params azure-policy.parameters.json
az policy definition create --name "AKS-Monitoring-Addon-MSI" --display-name "AKS-Monitoring-Addon-MSI" --mode Indexed --metadata version=1.0.0 category=Kubernetes --rules azure-policy.rules.json --params azure-policy.parameters.json
Create the policy definition using the following CLI command:az policy assignment create --name aks-monitoring-addon --policy "AKS-Monitoring-Addon-MSI" --assign-identity --identity-scope /subscriptions/<subscriptionId> --role Contributor --scope /subscriptions/<subscriptionId> --location <location> --role Contributor --scope /subscriptions/<subscriptionId> -p "{ \"workspaceResourceId\": { \"value\":  \"/subscriptions/<subscriptionId>/resourcegroups/<resourceGroupName>/providers/microsoft.operationalinsights/workspaces/<workspaceName>\" } }"
Create the policy definition using the following CLI command:
az policy assignment create --name aks-monitoring-addon --policy "AKS-Monitoring-Addon-MSI" --assign-identity --identity-scope /subscriptions/<subscriptionId> --role Contributor --scope /subscriptions/<subscriptionId> --location <location> --role Contributor --scope /subscriptions/<subscriptionId> -p "{ \"workspaceResourceId\": { \"value\":  \"/subscriptions/<subscriptionId>/resourcegroups/<resourceGroupName>/providers/microsoft.operationalinsights/workspaces/<workspaceName>\" } }"
az policy assignment create --name aks-monitoring-addon --policy "AKS-Monitoring-Addon-MSI" --assign-identity --identity-scope /subscriptions/<subscriptionId> --role Contributor --scope /subscriptions/<subscriptionId> --location <location> --role Contributor --scope /subscriptions/<subscriptionId> -p "{ \"workspaceResourceId\": { \"value\":  \"/subscriptions/<subscriptionId>/resourcegroups/<resourceGroupName>/providers/microsoft.operationalinsights/workspaces/<workspaceName>\" } }"
After the policy is assigned to the subscription, whenever you create a new cluster without Prometheus enabled, the policy will run and deploy to enable Prometheus monitoring.
Enable full monitoring with Azure portal
New AKS cluster (Prometheus, Container insights, and Grafana)
When you create a new AKS cluster in the Azure portal, you can enable Prometheus, Container insights, and Grafana from theMonitoringtab. Make sure that you check theEnable Container Logs,Enable Prometheus metrics, andEnable Grafanacheckboxes.

Existing cluster (Prometheus, Container insights, and Grafana)
Navigate to your cluster in the Azure portal.
Navigate to your cluster in the Azure portal.
In the service menu, underMonitoring, selectInsights>Configure monitoring.
In the service menu, underMonitoring, selectInsights>Configure monitoring.
Container insights is already enabled. Select theEnable Prometheus metricsandEnable Grafanacheckboxes. If you have existing Azure Monitor workspace and Grafana workspace, then they're selected for you.
Container insights is already enabled. Select theEnable Prometheus metricsandEnable Grafanacheckboxes. If you have existing Azure Monitor workspace and Grafana workspace, then they're selected for you.
SelectAdvanced settingsif you want to select alternate workspaces or create new ones. TheCost presetssetting allows you to modify the default collection details to reduce your monitoring costs. SeeEnable cost optimization settings in Container insightsfor details.
SelectAdvanced settingsif you want to select alternate workspaces or create new ones. TheCost presetssetting allows you to modify the default collection details to reduce your monitoring costs. SeeEnable cost optimization settings in Container insightsfor details.
SelectConfigure.
SelectConfigure.
Existing cluster (Prometheus only)
Navigate to your cluster in the Azure portal.
Navigate to your cluster in the Azure portal.
In the service menu, underMonitoring, selectInsights>Configure monitoring.
In the service menu, underMonitoring, selectInsights>Configure monitoring.
Select theEnable Prometheus metricscheckbox.
Select theEnable Prometheus metricscheckbox.
SelectAdvanced settingsif you want to select alternate workspaces or create new ones. TheCost presetssetting allows you to modify the default collection details to reduce your monitoring costs.
SelectAdvanced settingsif you want to select alternate workspaces or create new ones. TheCost presetssetting allows you to modify the default collection details to reduce your monitoring costs.
SelectConfigure.
SelectConfigure.
Enable Windows metrics collection (preview)
Note
There is no CPU/Memory limit in windows-exporter-daemonset.yaml so it may over-provision the Windows nodesFor more details seeResource reservation
As you deploy workloads, set resource memory and CPU limits on containers. This also subtracts from NodeAllocatable and helps the cluster-wide scheduler in determining which pods to place on which nodes.
Scheduling pods without limits may over-provision the Windows nodes and in extreme cases can cause the nodes to become unhealthy.
As of version 6.4.0-main-02-22-2023-3ee44b9e of the Managed Prometheus addon container (prometheus_collector), Windows metric collection has been enabled for AKS clusters. Onboarding to the Azure Monitor Metrics add-on enables the Windows DaemonSet pods to start running on your node pools. Both Windows Server 2019 and Windows Server 2022 are supported. Follow these steps to enable the pods to collect metrics from your Windows node pools.
Manually install windows-exporter on AKS nodes to access Windows metrics by deploying thewindows-exporter-daemonset YAMLfile. Enable the following collectors:[defaults]containermemoryprocesscpu_infoFor more collectors, please seePrometheus exporter for Windows metrics.Deploy thewindows-exporter-daemonset YAMLfile. Note that if there are any taints applied in the node, you will need to apply the appropriate tolerations.kubectl apply -f windows-exporter-daemonset.yaml
Manually install windows-exporter on AKS nodes to access Windows metrics by deploying thewindows-exporter-daemonset YAMLfile. Enable the following collectors:
[defaults]
[defaults]
container
container
memory
memory
process
process
cpu_info
cpu_info
For more collectors, please seePrometheus exporter for Windows metrics.
Deploy thewindows-exporter-daemonset YAMLfile. Note that if there are any taints applied in the node, you will need to apply the appropriate tolerations.
kubectl apply -f windows-exporter-daemonset.yaml
kubectl apply -f windows-exporter-daemonset.yaml
Apply theama-metrics-settings-configmapto your cluster. Set thewindowsexporterandwindowskubeproxyBooleans totrue. For more information, seeMetrics add-on settings configmap.
Apply theama-metrics-settings-configmapto your cluster. Set thewindowsexporterandwindowskubeproxyBooleans totrue. For more information, seeMetrics add-on settings configmap.
windowsexporter
windowskubeproxy
true
Enable the recording rules that are required for the out-of-the-box dashboards:If onboarding using the CLI, include the option--enable-windows-recording-rules.If onboarding using an ARM template, Bicep, or Azure Policy, setenableWindowsRecordingRulestotruein the parameters file.If the cluster is already onboarded, usethis ARM templateandthis parameter fileto create the rule groups. This will add the required recording rules and is not an ARM operation on the cluster and does not impact current monitoring state of the cluster.
Enable the recording rules that are required for the out-of-the-box dashboards:
If onboarding using the CLI, include the option--enable-windows-recording-rules.
--enable-windows-recording-rules
If onboarding using an ARM template, Bicep, or Azure Policy, setenableWindowsRecordingRulestotruein the parameters file.
enableWindowsRecordingRules
true
If the cluster is already onboarded, usethis ARM templateandthis parameter fileto create the rule groups. This will add the required recording rules and is not an ARM operation on the cluster and does not impact current monitoring state of the cluster.
Verify deployment
Use thekubectl command line toolto verify that the agent is deployed properly.
Managed Prometheus
Verify that the DaemonSet was deployed properly on the Linux node pools
kubectl get ds ama-metrics-node --namespace=kube-system
kubectl get ds ama-metrics-node --namespace=kube-system
The number of pods should be equal to the number of Linux nodes on the cluster. The output should resemble the following example:
User@aksuser:~$ kubectl get ds ama-metrics-node --namespace=kube-system
NAME               DESIRED   CURRENT   READY   UP-TO-DATE   AVAILABLE   NODE SELECTOR   AGE
ama-metrics-node   1         1         1       1            1           <none>          10h
User@aksuser:~$ kubectl get ds ama-metrics-node --namespace=kube-system
NAME               DESIRED   CURRENT   READY   UP-TO-DATE   AVAILABLE   NODE SELECTOR   AGE
ama-metrics-node   1         1         1       1            1           <none>          10h
Verify that Windows nodes were deployed properly
kubectl get ds ama-metrics-win-node --namespace=kube-system
kubectl get ds ama-metrics-win-node --namespace=kube-system
The number of pods should be equal to the number of Windows nodes on the cluster. The output should resemble the following example:
User@aksuser:~$ kubectl get ds ama-metrics-node --namespace=kube-system
NAME                   DESIRED   CURRENT   READY   UP-TO-DATE   AVAILABLE   NODE SELECTOR   AGE
ama-metrics-win-node   3         3         3       3            3           <none>          10h
User@aksuser:~$ kubectl get ds ama-metrics-node --namespace=kube-system
NAME                   DESIRED   CURRENT   READY   UP-TO-DATE   AVAILABLE   NODE SELECTOR   AGE
ama-metrics-win-node   3         3         3       3            3           <none>          10h
Verify that the two ReplicaSets were deployed for Prometheus
kubectl get rs --namespace=kube-system
kubectl get rs --namespace=kube-system
The output should resemble the following example:
User@aksuser:~$kubectl get rs --namespace=kube-system
NAME                            DESIRED   CURRENT   READY   AGE
ama-metrics-5c974985b8          1         1         1       11h
ama-metrics-ksm-5fcf8dffcd      1         1         1       11h
User@aksuser:~$kubectl get rs --namespace=kube-system
NAME                            DESIRED   CURRENT   READY   AGE
ama-metrics-5c974985b8          1         1         1       11h
ama-metrics-ksm-5fcf8dffcd      1         1         1       11h
Container insights
Verify that the DaemonSets were deployed properly on the Linux node pools
kubectl get ds ama-logs --namespace=kube-system
kubectl get ds ama-logs --namespace=kube-system
The number of pods should be equal to the number of Linux nodes on the cluster. The output should resemble the following example:
User@aksuser:~$ kubectl get ds ama-logs --namespace=kube-system
NAME       DESIRED   CURRENT   READY     UP-TO-DATE   AVAILABLE   NODE SELECTOR   AGE
ama-logs   2         2         2         2            2           <none>          1d
User@aksuser:~$ kubectl get ds ama-logs --namespace=kube-system
NAME       DESIRED   CURRENT   READY     UP-TO-DATE   AVAILABLE   NODE SELECTOR   AGE
ama-logs   2         2         2         2            2           <none>          1d
Verify that Windows nodes were deployed properly
kubectl get ds ama-logs-windows --namespace=kube-system
kubectl get ds ama-logs-windows --namespace=kube-system
The number of pods should be equal to the number of Windows nodes on the cluster. The output should resemble the following example:
User@aksuser:~$ kubectl get ds ama-logs-windows --namespace=kube-system
NAME                   DESIRED   CURRENT   READY     UP-TO-DATE   AVAILABLE   NODE SELECTOR     AGE
ama-logs-windows           2         2         2         2            2       <none>            1d
User@aksuser:~$ kubectl get ds ama-logs-windows --namespace=kube-system
NAME                   DESIRED   CURRENT   READY     UP-TO-DATE   AVAILABLE   NODE SELECTOR     AGE
ama-logs-windows           2         2         2         2            2       <none>            1d
Verify deployment of the Container insights solution
kubectl get deployment ama-logs-rs --namespace=kube-system
kubectl get deployment ama-logs-rs --namespace=kube-system
The output should resemble the following example:
User@aksuser:~$ kubectl get deployment ama-logs-rs --namespace=kube-system
NAME          READY   UP-TO-DATE   AVAILABLE   AGE
ama-logs-rs   1/1     1            1           24d
User@aksuser:~$ kubectl get deployment ama-logs-rs --namespace=kube-system
NAME          READY   UP-TO-DATE   AVAILABLE   AGE
ama-logs-rs   1/1     1            1           24d
View configuration with CLI
Use theaks showcommand to find out whether the solution is enabled, the Log Analytics workspace resource ID, and summary information about the cluster.
aks show
az aks show --resource-group <resourceGroupofAKSCluster> --name <nameofAksCluster>
az aks show --resource-group <resourceGroupofAKSCluster> --name <nameofAksCluster>
The command will return JSON-formatted information about the solution. TheaddonProfilessection should include information on theomsagentas in the following example:
addonProfiles
omsagent
"addonProfiles": {
    "omsagent": {
        "config": {
            "logAnalyticsWorkspaceResourceID": "/subscriptions/aaaa0a0a-bb1b-cc2c-dd3d-eeeeee4e4e4e/resourcegroups/my-resource-group/providers/microsoft.operationalinsights/workspaces/my-workspace",
            "useAADAuth": "true"
        },
        "enabled": true,
        "identity": null
    },
}
"addonProfiles": {
    "omsagent": {
        "config": {
            "logAnalyticsWorkspaceResourceID": "/subscriptions/aaaa0a0a-bb1b-cc2c-dd3d-eeeeee4e4e4e/resourcegroups/my-resource-group/providers/microsoft.operationalinsights/workspaces/my-workspace",
            "useAADAuth": "true"
        },
        "enabled": true,
        "identity": null
    },
}
Resources provisioned
When you enable monitoring, the following resources are created in your subscription:
MSCI-<aksclusterregion>-<clustername>
MSPROM-<aksclusterregion>-<clustername>
MSPROM-<aksclusterregion>-<clustername>
When you create a new Azure Monitor workspace, the following additional resources are created as part of it
<azuremonitor-workspace-name>
<azuremonitor-workspace-name>
Differences between Windows and Linux clusters
The main differences in monitoring a Windows Server cluster compared to a Linux cluster include:
Windows doesn't have a Memory RSS metric. As a result, it isn't available for Windows nodes and containers. TheWorking Setmetric is available.
Disk storage capacity information isn't available for Windows nodes.
Only pod environments are monitored, not Docker environments.
With the preview release, a maximum of 30 Windows Server containers are supported. This limitation doesn't apply to Linux containers.
Note
Container insights support for the Windows Server 2022 operating system is in preview.
The containerized Linux agent (replicaset pod) makes API calls to all the Windows nodes on Kubelet secure port (10250) within the cluster to collect node and container performance-related metrics. Kubelet secure port (:10250) should be opened in the cluster's virtual network for both inbound and outbound for Windows node and container performance-related metrics collection to work.
If you have a Kubernetes cluster with Windows nodes, review and configure the network security group and network policies to make sure the Kubelet secure port (:10250) is open for both inbound and outbound in the cluster's virtual network.
Next steps
If you experience issues while you attempt to onboard the solution, review theTroubleshooting guide.
With monitoring enabled to collect health and resource utilization of your AKS cluster and workloads running on them, learnhow to useContainer insights.
Feedback
Was this page helpful?
Additional resources