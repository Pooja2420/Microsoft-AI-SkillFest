Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Service Bus and reliability
Article
2025-03-13
6 contributors
In this article
Fully manage enterprise message brokering with message queues and publish-subscribe topics used inAzure Service Bus. This service stores messages in abroker(for example, aqueue) until the consuming party is ready to receive the messages.
Benefits include:
Load-balancing across competing workers.
Safely routing and transferring data and control across service, and application boundaries.
Coordinating transactional work that requires a high-degree of reliability.
For more information about using Service Bus, referenceAzure Service Bus Messaging. Learn how to set up messaging that connects applications and services across on-premises and cloud environments.
To understand how Service Bus contributes to a reliable workload, reference the following topics:
Asynchronous messaging patterns and high availability
Azure Service Bus Geo-disaster recovery
Handling outages and disasters
Availability zones
Note
Previously it was required to set the propertyzoneRedundanttotrueto enable availability zones, however this behavior has changed to enable availability zones by default. Existing namespaces are being migrated to availability zones where possible, and the propertyzoneRedundantis being deprecated. The propertyzoneRedundantmight still show asfalse, even when availability zones has been enabled.
zoneRedundant
true
zoneRedundant
zoneRedundant
false
The following sections are specific to Azure Service Bus and reliability:
Design considerations
Configuration checklist
Recommended configuration options
Source artifacts
Design considerations
Maximize reliability with an Azure Service Bus uptime SLA. Properly configured applications can send or receive messages, or do other operations on a deployed Queue or Topic. For more information, reference theService Bus SLA.
Other design considerations include:
Express Entities
Partitioned queues and topics
Besides the documentation onService Bus Premium and Standard messaging tiers, the following features are only available on the Premium Stock Keeping Unit (SKU):
Dedicated resources.
Virtual network integration: Limits the networks that can connect to the Service Bus instance. Requires Service Endpoints to be enabled on the subnet. There are Trusted Microsoft services that are not supported when implementing Virtual Networks(for example, integration with Event Grid). For more information, referenceAllow access to Azure Service Bus namespace from specific virtual networks.
Private endpoints.
IP Filtering/Firewall: Restrict connections to only definedIPv4addresses orIPv4address ranges.
IPv4
IPv4
Event Grid integration:Available event types.
Scale messaging units.
Geo-Disaster Recovery(paired namespace).
Geo-Replication(full data replication across regions).
CMK (Customer Managed Key): Azure Service Bus encrypts data at rest and automatically decrypts it when accessed, but customers can also bring their own customer-managed key.
When deploying Service Bus with Geo-disaster recovery and in availability zones, the Service Level Operation (SLO) increases dramatically, but does not change the uptime SLA.
Checklist
Have you configured Azure Service Bus with reliability in mind?
Evaluate Premium tier benefits of Azure Service Bus.
Ensure thatService Bus Messaging Exceptionsare handled properly.
Connect to Service Bus with the Advanced Messaging Queue Protocol (AMQP) and use Service Endpoints or Private Endpoints when possible.
Review theBest Practices for performance improvements using Service Bus Messaging.
Implement geo-replication on the sender and receiver side to protect against outages and disasters.
Configure Geo-Disaster.
If you need mission-critical messaging with queues and topics, Service Bus Premium is recommended with Geo-Disaster Recovery.
Implement high availability for the Service Bus namespace.
Ensure related messages are delivered in guaranteed order.
Evaluate different Java Messaging Service (JMS) features through the JMS API.
Use .NET Nuget packages to communicate with Service Bus messaging entities.
Implement resilience for transient fault handling when sending or receiving messages.
Implement auto-scaling of messaging units.
Configuration recommendations
Consider the following recommendations to optimize reliability when configuring Azure Service Bus:
Microsoft.Azure.ServiceBus
Windows.Azure.ServiceBus
AMQP
Source artifacts
To identify premium Service Bus Instances that are not using private endpoints, use the following query:Resources
| where
  type == 'microsoft.servicebus/namespaces'
| where
  sku.tier == 'Premium'
  and isempty(properties.privateEndpointConnections)
To identify premium Service Bus Instances that are not using private endpoints, use the following query:
Resources
| where
  type == 'microsoft.servicebus/namespaces'
| where
  sku.tier == 'Premium'
  and isempty(properties.privateEndpointConnections)
Resources
| where
  type == 'microsoft.servicebus/namespaces'
| where
  sku.tier == 'Premium'
  and isempty(properties.privateEndpointConnections)
To identify Service Bus Instances that are not on the premium tier, use the following query:Resources
| where
  type == 'microsoft.servicebus/namespaces'
| where
  sku.tier != 'Premium'
To identify Service Bus Instances that are not on the premium tier, use the following query:
Resources
| where
  type == 'microsoft.servicebus/namespaces'
| where
  sku.tier != 'Premium'
Resources
| where
  type == 'microsoft.servicebus/namespaces'
| where
  sku.tier != 'Premium'
Next step
Service Bus and operational excellence
Feedback
Was this page helpful?
Additional resources