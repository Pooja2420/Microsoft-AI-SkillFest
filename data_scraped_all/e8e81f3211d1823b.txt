Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Get started with Git in Azure Repos
Article
2024-07-24
13 contributors
In this article
Azure DevOps Services | Azure DevOps Server 2022 - Azure DevOps Server 2019
Visual Studio 2019 | Visual Studio 2022
Get started with developing your code using Azure Repos and Git repositories. You can use Visual Studio or Git commands to clone a repository, define local branches, commit and push changes, and sync with others. If you need to create or import a repository, seeCreate a new Git repo in your projectorImport a Git repository.
Note
This article describes how to use Visual Studio to manage Azure Repos Git repositories. Using similar procedures, you can use Visual Studio to manage GitHub repositories. To clone a GitHub repository, get the URL as described inCloning a repository.
For an overview of the Git workflow, seeAzure Repos Git tutorial.
Note
Visual Studio 2019 version 16.8 and later versions provide a new Git menu for managing the Git workflow with less context switching than Team Explorer. Procedures provided in this article under the Visual Studio tab provide information for using the Git experience as well as Team Explorer. For more information, seeSide-by-side comparison of Git and Team Explorer.

Prerequisites
Note
In public projects, users withStakeholderaccess have full access to Azure Repos, including viewing, cloning, and contributing to code.
For more information about permissions and access, seeDefault Git repository and branch permissionsandAbout access levels.

Get your code
You canclonea remote Git repository to create a local copy of it. Cloning creates both a copy of the source code for you to work with and version control information so Git can manage the source code.
If you prefer to create a local repository without cloning, seeCreate a new Git repo. After creating your local repository you can proceed tocommit,share, andsyncyour work.
Visual Studio 2022
Visual Studio 2019 - Git menu
Visual Studio 2019 - Team Explorer
Git Command Line
Visual Studio 2022 provides a Git version control experience by using theGitmenu,Git Changes, and through context menus inSolution Explorer. Visual Studio 2019 version 16.8 also offers theTeam ExplorerGit user interface. For more information, see theVisual Studio 2019 - Team Explorertab.
From theGitmenu on the menu bar, chooseClone Repository...
From theGitmenu on the menu bar, chooseClone Repository...

In theClone a repositorywindow, enter the remote repo location and the folder path for the cloned repo. If you don't know the remote repo location, selectAzure DevOpsfromBrowse a repositoryoptions.
In theClone a repositorywindow, enter the remote repo location and the folder path for the cloned repo. If you don't know the remote repo location, selectAzure DevOpsfromBrowse a repositoryoptions.

SelectClone. After youâve cloned a Git repository, Visual Studio detects the repository and adds it to your list of Local Repositories in the Git menu.
SelectClone. After youâve cloned a Git repository, Visual Studio detects the repository and adds it to your list of Local Repositories in the Git menu.

Note
With Azure DevOps Services, the format for the project URL isdev.azure.com/{your organization}/{your project}. However, the previous format that references thevisualstudio.comformat is still supported. For more information, seeIntroducing Azure DevOps, Switch existing organizations to use the new domain name URL.
dev.azure.com/{your organization}/{your project}
visualstudio.com
Visual Studio 2019 provides a Git version control experience by using theGitmenu,Git Changes, and through context menus inSolution Explorer.
From theGitmenu on the menu bar, chooseClone Repository...
From theGitmenu on the menu bar, chooseClone Repository...

In theClone a repositorywindow, enter the remote repo location and the folder path for the cloned repo. If you don't know the remote repo location, selectAzure DevOpsfromBrowse a repositoryoptions.
In theClone a repositorywindow, enter the remote repo location and the folder path for the cloned repo. If you don't know the remote repo location, selectAzure DevOpsfromBrowse a repositoryoptions.

SelectClone. After youâve cloned a Git repository, Visual Studio detects the repository and adds it to your list of Local Repositories in the Git menu.
SelectClone. After youâve cloned a Git repository, Visual Studio detects the repository and adds it to your list of Local Repositories in the Git menu.

Note
With Azure DevOps Services, the format for the project URL isdev.azure.com/{your organization}/{your project}. However, the previous format that references thevisualstudio.comformat is still supported. For more information, seeIntroducing Azure DevOps, Switch existing organizations to use the new domain name URL.
dev.azure.com/{your organization}/{your project}
visualstudio.com
Visual Studio 2019 version 16.8 and later versions provides a Git version control experience while maintaining theTeam ExplorerGit user interface. You can exercise Git features from either interface interchangeably.
Note
One advantage of connecting to a project throughTeam Exploreris you gain access to the Work Items hub. For an overview ofTeam Explorerfeatures, seeNavigate in Visual Studio Team Explorer.
InTeam Explorer, selectConnectto open theConnectpage, and then chooseManage Connections>Connect to Project.
InTeam Explorer, selectConnectto open theConnectpage, and then chooseManage Connections>Connect to Project.

In theConnect to a Projectwindow, choose the repo you want to clone and selectClone. If you don't see your repo, selectAdd Azure DevOps Serverto add a server that hosts a repo. You can filter the list to find your repo.
In theConnect to a Projectwindow, choose the repo you want to clone and selectClone. If you don't see your repo, selectAdd Azure DevOps Serverto add a server that hosts a repo. You can filter the list to find your repo.

Verify the location for the cloned repo on your computer, and then selectClone.
Verify the location for the cloned repo on your computer, and then selectClone.
Note
With Azure DevOps Services, the format for the project URL isdev.azure.com/{your organization}/{your project}. However, the previous format that references thevisualstudio.comformat is still supported. For more information, seeIntroducing Azure DevOps, Switch existing organizations to use the new domain name URL.
dev.azure.com/{your organization}/{your project}
visualstudio.com
Download and install Gitand theGit Credential Managerfor your platform.
Download and install Gitand theGit Credential Managerfor your platform.
Open the Azure DevOps Services web portal in your browser by going tohttps://<your account name>.visualstudio.com.
Open the Azure DevOps Services web portal in your browser by going tohttps://<your account name>.visualstudio.com.
https://<your account name>.visualstudio.com
Open the Azure DevOps Services web portal in your browser by navigating tohttps://<your account name>.visualstudio.comand find your Git repository. Copy the clone URL from theClonepop-up.NoteWith Azure DevOps Services, the format for the project URL isdev.azure.com/{your organization}/{your project}. However, the previous format that references thevisualstudio.comformat is still supported. For more information, seeIntroducing Azure DevOps, Switch existing organizations to use the new domain name URL.
Open the Azure DevOps Services web portal in your browser by navigating tohttps://<your account name>.visualstudio.comand find your Git repository. Copy the clone URL from theClonepop-up.
https://<your account name>.visualstudio.com

Note
With Azure DevOps Services, the format for the project URL isdev.azure.com/{your organization}/{your project}. However, the previous format that references thevisualstudio.comformat is still supported. For more information, seeIntroducing Azure DevOps, Switch existing organizations to use the new domain name URL.
dev.azure.com/{your organization}/{your project}
visualstudio.com
At the command prompt, go to the folder where you want the code stored on your local computer.
At the command prompt, go to the folder where you want the code stored on your local computer.
From the command prompt, rungit clonefollowed by the clone URL, as shown in the following example.> git clone https://dev.azure.com/fabrikam-fiber/_git/FabrikamFiberGit downloads and creates your own copy of the code in a new folder for you.
From the command prompt, rungit clonefollowed by the clone URL, as shown in the following example.
git clone
> git clone https://dev.azure.com/fabrikam-fiber/_git/FabrikamFiber
> git clone https://dev.azure.com/fabrikam-fiber/_git/FabrikamFiber
Git downloads and creates your own copy of the code in a new folder for you.

Commit your work
Gitbranchesisolate your changes from other work in the project.
The recommendedGit workflowis to use a new branch for every feature or fix you work on.
You makecommitsin your local Git repository to save your changes on that branch.
Visual Studio 2022
Visual Studio 2019 - Git menu
Visual Studio 2019 - Team Explorer
Git Command Line
From theGitmenu on the menu bar, chooseNew Branch...to open theCreate a new branchwindow.
From theGitmenu on the menu bar, chooseNew Branch...to open theCreate a new branchwindow.

In theCreate a new branchwindow, enter a descriptive branch name to let others know what work the branch contains. By default, Visual Studio creates your new branch from the current branch. TheCheckout branchcheckbox automatically switches you to the newly created branch. SelectCreate.
In theCreate a new branchwindow, enter a descriptive branch name to let others know what work the branch contains. By default, Visual Studio creates your new branch from the current branch. TheCheckout branchcheckbox automatically switches you to the newly created branch. SelectCreate.

Add a README.md file to your cloned repo. In Solution Explorer, you can browse the repo contents usingFolder Viewor open Visual Studio solutions in the repo. Git tracks changes made both inside and outside of Visual Studio.
Add a README.md file to your cloned repo. In Solution Explorer, you can browse the repo contents usingFolder Viewor open Visual Studio solutions in the repo. Git tracks changes made both inside and outside of Visual Studio.
When you're satisfied with your changes, save them in Git using a commit. In theGit Changeswindow, enter a message that describes the changes, and then selectCommit All.Commit Allcommits unstaged changes and skips the staging area. You can choose to stage all files before committing by selecting the stage all + (plus) button at the top of the Changes section in theGit Changeswindow.Select the commit information link to get further details about the commit.
When you're satisfied with your changes, save them in Git using a commit. In theGit Changeswindow, enter a message that describes the changes, and then selectCommit All.Commit Allcommits unstaged changes and skips the staging area. You can choose to stage all files before committing by selecting the stage all + (plus) button at the top of the Changes section in theGit Changeswindow.

Select the commit information link to get further details about the commit.

Note
If you have multiple files and you don't want to commit them all, you can right-click each file and chooseStage. When you've staged all the files you'd like to commit, selectCommit Staged.Commit StagedreplacesCommit Allwhen you manually stage your changes.

From theGitmenu on the menu bar, chooseNew Branch...to open theCreate a new branchwindow.
From theGitmenu on the menu bar, chooseNew Branch...to open theCreate a new branchwindow.

In theCreate a new branchwindow, enter a descriptive branch name to let others know what work the branch contains. By default, Visual Studio creates your new branch from the current branch. TheCheckout branchcheckbox automatically switches you to the newly created branch. SelectCreate.
In theCreate a new branchwindow, enter a descriptive branch name to let others know what work the branch contains. By default, Visual Studio creates your new branch from the current branch. TheCheckout branchcheckbox automatically switches you to the newly created branch. SelectCreate.

Add a README.md file to your cloned repo. In Solution Explorer, you can browse the repo contents usingFolder Viewor open Visual Studio solutions in the repo. Git tracks changes made both inside and outside of Visual Studio.
Add a README.md file to your cloned repo. In Solution Explorer, you can browse the repo contents usingFolder Viewor open Visual Studio solutions in the repo. Git tracks changes made both inside and outside of Visual Studio.
When you're satisfied with your changes, save them in Git using a commit. In theGit Changeswindow, enter a message that describes the changes, and then selectCommit All.Commit Allcommits unstaged changes and skips the staging area. You can choose to stage all files before committing by selecting the stage all + (plus) button at the top of the Changes section in theGit Changeswindow.Select the commit information link to get further details about the commit.
When you're satisfied with your changes, save them in Git using a commit. In theGit Changeswindow, enter a message that describes the changes, and then selectCommit All.Commit Allcommits unstaged changes and skips the staging area. You can choose to stage all files before committing by selecting the stage all + (plus) button at the top of the Changes section in theGit Changeswindow.

Select the commit information link to get further details about the commit.

Note
If you have multiple files and you don't want to commit them all, you can right-click each file and chooseStage. When you've staged all the files you'd like to commit, selectCommit Staged.Commit StagedreplacesCommit Allwhen you manually stage your changes.

InTeam Explorer, select theHomebutton and chooseBranches.
InTeam Explorer, select theHomebutton and chooseBranches.

Right-click the default branch, often namedmain, and then chooseNew Local Branch From...
Right-click the default branch, often namedmain, and then chooseNew Local Branch From...
main

Enter a descriptive branch name to let others know what work the branch contains. SelectCreate Branch.
Enter a descriptive branch name to let others know what work the branch contains. SelectCreate Branch.

Add an README.md file to your cloned repo. From theHomeview ofTeam Explorer, you can browse the repo contents usingShow Folder Viewor open Visual Studio solutions in the repo. Git tracks changes made both inside and outside of Visual Studio.
Add an README.md file to your cloned repo. From theHomeview ofTeam Explorer, you can browse the repo contents usingShow Folder Viewor open Visual Studio solutions in the repo. Git tracks changes made both inside and outside of Visual Studio.
When you're satisfied with your changes, save them in Git using a commit. Open theChangesview ofTeam Explorerby selecting theHomebutton and choosingChanges.
When you're satisfied with your changes, save them in Git using a commit. Open theChangesview ofTeam Explorerby selecting theHomebutton and choosingChanges.

Enter a message that describes the commit, and then selectCommit All.
Enter a message that describes the commit, and then selectCommit All.

Note
If you have multiple files and you don't want to commit them all, you can right-click each file and chooseStage. When you've staged all the files you'd like to commit, selectCommit Staged.Commit StagedreplacesCommit Allwhen you manually stage your changes.

Create a branch where you make your changes to the code. If you're collaborating with someone using a branch they've created, you can skip to the followinggit checkoutstep.> git branch ReadMeFixChoose a descriptive branch name for your work to remind you and others what kind of work is in the branch.
Create a branch where you make your changes to the code. If you're collaborating with someone using a branch they've created, you can skip to the followinggit checkoutstep.
git checkout
> git branch ReadMeFix
> git branch ReadMeFix
Choose a descriptive branch name for your work to remind you and others what kind of work is in the branch.
Check out your branch so you can start working in it.> git checkout ReadMeFixYou can also use thecheckoutcommand to start working on a branch that other team members are already working in.
Check out your branch so you can start working in it.
> git checkout ReadMeFix
> git checkout ReadMeFix
You can also use thecheckoutcommand to start working on a branch that other team members are already working in.
checkout
Make changes by using your favorite tools on the code.
Make changes by using your favorite tools on the code.
When you're satisfied with the changes, even if you aren't ready to share the work, save them in Git using a commit. Your changes won't be shared until you push them, as described in the following section.> git commit -a -m "Descriptive message"This command saves your changes locally to a newcommitin Git. Make sure to give the commit a short message that describes your changes after-m.
When you're satisfied with the changes, even if you aren't ready to share the work, save them in Git using a commit. Your changes won't be shared until you push them, as described in the following section.
> git commit -a -m "Descriptive message"
> git commit -a -m "Descriptive message"
This command saves your changes locally to a newcommitin Git. Make sure to give the commit a short message that describes your changes after-m.
-m

Share your changes
After you've added one or more commits to a branch and you're ready to share those changes with others,pushyour commits so others can see them.
Once you've pushed your commits, you can create apull request. A pull request lets others know you'd like to have your changes reviewed. After approval, a pull request typically adds your changes to the default branch of the remote repository.
Visual Studio 2022
Visual Studio 2019 - Git menu
Visual Studio 2019 - Team Explorer
Git Command Line
In theGit Changeswindow, select the up-arrow push button to push your commit.Or, you can push your changes from theGit Repositorywindow. To open theGit Repositorywindow, select the outgoing / incoming link in theGit Changeswindow.Or, you can push your changes from theGitmenu on the menu bar.
In theGit Changeswindow, select the up-arrow push button to push your commit.

Or, you can push your changes from theGit Repositorywindow. To open theGit Repositorywindow, select the outgoing / incoming link in theGit Changeswindow.

Or, you can push your changes from theGitmenu on the menu bar.

Create a pull request so that others can review your changes. If you've just pushed your changes from theGit Changeswindow, you can select theCreate a Pull Requestlink to open a web browser where you can create a new pull request in the Azure Repos web portal.Or, if you've just pushed your changes from theGit Repositorywindow, you can select theCreate a Pull Request linkat the top of that window.Or, you can right-click any branch in theGit Repositorywindow and selectCreate Pull Request.
Create a pull request so that others can review your changes. If you've just pushed your changes from theGit Changeswindow, you can select theCreate a Pull Requestlink to open a web browser where you can create a new pull request in the Azure Repos web portal.

Or, if you've just pushed your changes from theGit Repositorywindow, you can select theCreate a Pull Request linkat the top of that window.

Or, you can right-click any branch in theGit Repositorywindow and selectCreate Pull Request.

When the pull request opens in the Azure Repos web portal, verify your source and destination branches. In this example, we want to merge commits from theadd-readme-filebranch into themainbranch. Enter a title and optional description, specify any reviewers, optionally associate any work items, and then selectCreate.
add-readme-file
main

For more information on pull requests, see thePull requesttutorial.
In theGit Changeswindow, select the up-arrow push button to push your commit.Or, you can push your changes from theGit Repositorywindow. To open theGit Repositorywindow, select the outgoing / incoming link in theGit Changeswindow.Or, you can push your changes from theGitmenu on the menu bar.
In theGit Changeswindow, select the up-arrow push button to push your commit.

Or, you can push your changes from theGit Repositorywindow. To open theGit Repositorywindow, select the outgoing / incoming link in theGit Changeswindow.

Or, you can push your changes from theGitmenu on the menu bar.

Create a pull request so that others can review your changes. If you've just pushed your changes from theGit Changeswindow, you can select theCreate a Pull Requestlink to open a web browser where you can create a new pull request in the Azure Repos web portal.Or, if you've just pushed your changes from theGit Repositorywindow, you can select theCreate a Pull Request linkat the top of that window.Or, you can right-click any branch in theGit Repositorywindow and selectCreate Pull Request.
Create a pull request so that others can review your changes. If you've just pushed your changes from theGit Changeswindow, you can select theCreate a Pull Requestlink to open a web browser where you can create a new pull request in the Azure Repos web portal.

Or, if you've just pushed your changes from theGit Repositorywindow, you can select theCreate a Pull Request linkat the top of that window.

Or, you can right-click any branch in theGit Repositorywindow and selectCreate Pull Request.

When the pull request opens in the Azure Repos web portal, verify your source and destination branches. In this example, we want to merge commits from theadd-readme-filebranch into themainbranch. Enter a title and optional description, specify any reviewers, optionally associate any work items, and then selectCreate.
add-readme-file
main

For more information on pull requests, see thePull requesttutorial.
InTeam Explorer, selectHomeand then chooseSyncto openSynchronization.You can also go to theSynchronizationview fromChangesby choosingSyncimmediately after making a commit.
InTeam Explorer, selectHomeand then chooseSyncto openSynchronization.

You can also go to theSynchronizationview fromChangesby choosingSyncimmediately after making a commit.

In theSynchronizationview, choosePushto upload your commit to the remote repo. If this is your first push to the repo, you'll see the message:The current branch does not track a remote branch..., which lets you know that your commit was pushed to a new branch on the remote repo and that future commits pushed from the current branch will be uploaded to that remote branch.
In theSynchronizationview, choosePushto upload your commit to the remote repo. If this is your first push to the repo, you'll see the message:The current branch does not track a remote branch..., which lets you know that your commit was pushed to a new branch on the remote repo and that future commits pushed from the current branch will be uploaded to that remote branch.
The current branch does not track a remote branch...

Create a pull request so that others can review your changes. OpenPull RequestsinTeam Explorerby selectingHomeand choosingPull Requests.
Create a pull request so that others can review your changes. OpenPull RequestsinTeam Explorerby selectingHomeand choosingPull Requests.

InPull Requests, you can view pull requests opened by you, assigned to you, and you can create new pull requests. SelectNew Pull Requestto open a web browser where you can create a new pull request in the Azure Repos web portal.
InPull Requests, you can view pull requests opened by you, assigned to you, and you can create new pull requests. SelectNew Pull Requestto open a web browser where you can create a new pull request in the Azure Repos web portal.

When the pull request opens in the Azure Repos web portal, verify your source and destination branches. In this example, we want to merge commits from theadd-readme-filebranch into themainbranch. Enter a title and optional description, specify any reviewers, optionally associate any work items, and then selectCreate.
add-readme-file
main

For more information on pull requests, see thePull requesttutorial.
Push your branch so that others can see the changes you've saved.> git push -u origin ReadMeFix
Push your branch so that others can see the changes you've saved.
> git push -u origin ReadMeFix
> git push -u origin ReadMeFix
Open the project in the web portal and browse to your repository under theCodetab. SelectCreate a pull requestto create a pull request for the branch that you pushed.
Open the project in the web portal and browse to your repository under theCodetab. SelectCreate a pull requestto create a pull request for the branch that you pushed.

Verify your branches. In this example, we want to merge the commits from theReadMeFixbranch into themainbranch. Enter a title and optional description, specify any reviewers, optionally associate any work items, and selectCreate.
Verify your branches. In this example, we want to merge the commits from theReadMeFixbranch into themainbranch. Enter a title and optional description, specify any reviewers, optionally associate any work items, and selectCreate.
ReadMeFix
main

Once the changes are approved, complete the pull request.
A complete pull request adds your changes from the branch into the main branch of the code.For more information on pull requests, see thepull requesttutorial.
Once the changes are approved, complete the pull request.
A complete pull request adds your changes from the branch into the main branch of the code.
For more information on pull requests, see thepull requesttutorial.

Sync with others
You can keep your local branches in sync with their remote counterparts bypullingcommits created by others. Although Git is good at merging incoming changes with your changes, sometimes you might have toresolve a merge conflict. While you're working on your feature branch, it's a good idea to periodically switch to yourmainbranch and pull new commits to keep it current with the remotemainbranch.
main
main
Visual Studio 2022
Visual Studio 2019 - Git menu
Visual Studio 2019 - Team Explorer
Git Command Line
In theGit Changeswindow, you can keep your local branch current with its remote counterpart by using theFetch,Pull,Push, andSyncbuttons.

From left to right in the previous screenshot, the button controls are:
Fetchdownloads remote commits that aren't in your local branch, but doesn't merge them.
Pullperforms a fetch and then merges the downloaded commits into your local branch.
Pushuploads your unpushed commits to the remote repository, which adds them to the corresponding remote branch.
Syncperforms aPullthen aPush.
You can also selectFetch,Pull,Push, andSyncfrom the Git menu.

In theGit Changeswindow, you can keep your local branch current with its remote counterpart by using theFetch,Pull,Push, andSyncbuttons.

From left to right in the previous screenshot, the button controls are:
Fetchdownloads remote commits that aren't in your local branch, but doesn't merge them.
Pullperforms a fetch and then merges the downloaded commits into your local branch.
Pushuploads your unpushed commits to the remote repository, which adds them to the corresponding remote branch.
Syncperforms aPullthen aPush.
You can also selectFetch,Pull,Push, andSyncfrom the Git menu.

InTeam Explorer, selectHomeand chooseSyncto openSynchronization.
InTeam Explorer, selectHomeand chooseSyncto openSynchronization.

You can download the latest changes to your branch using thePulllink. There are twoPulllinks, one near the top and one in theIncoming Commitssection. You can use either because they both do the same thing.
You can download the latest changes to your branch using thePulllink. There are twoPulllinks, one near the top and one in theIncoming Commitssection. You can use either because they both do the same thing.

Switch to the branch where you want to download the changes others have made.> git checkout ReadMeFixIn this example, you pull changes made by others on your team to theReadMeFixbranch to your local copy of the branch.
Switch to the branch where you want to download the changes others have made.
> git checkout ReadMeFix
> git checkout ReadMeFix
In this example, you pull changes made by others on your team to theReadMeFixbranch to your local copy of the branch.
ReadMeFix
Pull the changes made by others to your local branch.> git pullGit downloads the changes and merges them with your own changes into your local branch.
Pull the changes made by others to your local branch.
> git pull
> git pull
Git downloads the changes and merges them with your own changes into your local branch.
Related articles
Frequently Asked Git Questions
Git experience in Visual Studio
Side-by-side comparison of Git and Team Explorer
Feedback
Was this page helpful?
Additional resources