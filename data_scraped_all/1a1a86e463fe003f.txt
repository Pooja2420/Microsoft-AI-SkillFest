Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Translator v3.0
Article
2025-04-14
2 contributors
In this article
What's new?
Version 3.0 of the Translator provides a modern JSON-based Web API. It improves usability and performance by consolidating existing features into fewer operations and it provides new features.
Transliteration to convert text in one language from one script to another script.
Translation to multiple languages in one request.
Language detection, translation, and transliteration in one request.
Dictionary to look up alternative translations of a term, to find back-translations and examples showing terms used in context.
More informative language detection results.
Base URLs
Requests to Translator are, in most cases, handled by the datacenter that is closest to where the request originated. If there's a datacenter failure when using the global endpoint, the request may be routed outside of the geography.
To force the request to be handled within a specific geography, use the desired geographical endpoint. All requests are processed among the datacenters within the geography.
âï¸ Feature:Translator Text
api.cognitive.microsofttranslator.com
api-nam.cognitive.microsofttranslator.com
api-apc.cognitive.microsofttranslator.com
api-eur.cognitive.microsofttranslator.com
Customers with a resource located in Switzerland North or Switzerland West can ensure that their Text API requests are served within Switzerland. To ensure that requests are handled in Switzerland, create the Translator resource in theResource regionSwitzerland NorthorSwitzerland West, then use the resource's custom endpoint in your API requests.
Resource region
Switzerland North
Switzerland West
For example: If you create a Translator resource in Azure portal withResource regionasSwitzerland Northand your resource name ismy-swiss-n, then your custom endpoint ishttps&#8203;://my-swiss-n.cognitiveservices.azure.com. And a sample request to translate is:
Resource region
Switzerland North
my-swiss-n
https&#8203;://my-swiss-n.cognitiveservices.azure.com
// Pass secret key and region using headers to a custom endpoint
curl -X POST "https://my-swiss-n.cognitiveservices.azure.com/translator/text/v3.0/translate?to=fr" \
-H "Ocp-Apim-Subscription-Key: xxx" \
-H "Ocp-Apim-Subscription-Region: switzerlandnorth" \
-H "Content-Type: application/json" \
-d "[{'Text':'Hello'}]" -v
// Pass secret key and region using headers to a custom endpoint
curl -X POST "https://my-swiss-n.cognitiveservices.azure.com/translator/text/v3.0/translate?to=fr" \
-H "Ocp-Apim-Subscription-Key: xxx" \
-H "Ocp-Apim-Subscription-Region: switzerlandnorth" \
-H "Content-Type: application/json" \
-d "[{'Text':'Hello'}]" -v
Custom Translator isn't currently available in Switzerland.
Authentication
Subscribe to Translator ormulti-servicein Azure AI services, and use your key (available in the Azure portal) to authenticate.
There are three headers that you can use to authenticate your subscription. This table describes how each is used:
Bearer <token>
Secret key
The first option is to authenticate using theOcp-Apim-Subscription-Keyheader. Add theOcp-Apim-Subscription-Key: <YOUR_SECRET_KEY>header to your request.
Ocp-Apim-Subscription-Key
Ocp-Apim-Subscription-Key: <YOUR_SECRET_KEY>
When you use aglobal translator resource, you need to include one header to call the Translator.
Here's an example request to call the Translator using the global translator resource
// Pass secret key using headers
curl -X POST "https://api.cognitive.microsofttranslator.com/translate?api-version=3.0&to=es" \
     -H "Ocp-Apim-Subscription-Key:<your-key>" \
     -H "Content-Type: application/json" \
     -d "[{'Text':'Hello, what is your name?'}]"
// Pass secret key using headers
curl -X POST "https://api.cognitive.microsofttranslator.com/translate?api-version=3.0&to=es" \
     -H "Ocp-Apim-Subscription-Key:<your-key>" \
     -H "Content-Type: application/json" \
     -d "[{'Text':'Hello, what is your name?'}]"
When you use aregional translator resource,
there are two headers that you need to call the Translator.
Here's an example request to call the Translator using the regional translator resource
// Pass secret key and region using headers
curl -X POST "https://api.cognitive.microsofttranslator.com/translate?api-version=3.0&to=es" \
     -H "Ocp-Apim-Subscription-Key:<your-key>" \
     -H "Ocp-Apim-Subscription-Region:<your-region>" \
     -H "Content-Type: application/json" \
     -d "[{'Text':'Hello, what is your name?'}]"
// Pass secret key and region using headers
curl -X POST "https://api.cognitive.microsofttranslator.com/translate?api-version=3.0&to=es" \
     -H "Ocp-Apim-Subscription-Key:<your-key>" \
     -H "Ocp-Apim-Subscription-Region:<your-region>" \
     -H "Content-Type: application/json" \
     -d "[{'Text':'Hello, what is your name?'}]"
A multi-service resource allows you to use a single API key to authenticate requests for multiple services.
When you use a multi-service secret key, you must include two authentication headers with your request. There are two headers that you need to call the Translator.
Region is required for the multi-service Text API subscription. The region you select is the only region that you can use for text translation when using the multi-service key. It must be the same region you selected when you signed up for your multi-service subscription through the Azure portal.
If you pass the secret key in the query string with the parameterSubscription-Key, then you must specify the region with query parameterSubscription-Region.
Subscription-Key
Subscription-Region
Authenticating with an access token
Alternatively, you can exchange your secret key for an access token. This token is included with each request as theAuthorizationheader. To obtain an authorization token, make aPOSTrequest to the following URL:
Authorization
POST
https://api.cognitive.microsoft.com/sts/v1.0/issueToken
https://<your-region>.api.cognitive.microsoft.com/sts/v1.0/issueToken
Here are example requests to obtain a token given a secret key for a global resource:
// Pass secret key using header
curl --header 'Ocp-Apim-Subscription-Key: <your-key>' --data "" 'https://api.cognitive.microsoft.com/sts/v1.0/issueToken'

// Pass secret key using query string parameter
curl --data "" 'https://api.cognitive.microsoft.com/sts/v1.0/issueToken?Subscription-Key=<your-key>'
// Pass secret key using header
curl --header 'Ocp-Apim-Subscription-Key: <your-key>' --data "" 'https://api.cognitive.microsoft.com/sts/v1.0/issueToken'

// Pass secret key using query string parameter
curl --data "" 'https://api.cognitive.microsoft.com/sts/v1.0/issueToken?Subscription-Key=<your-key>'
And here are example requests to obtain a token given a secret key for a regional resource located in Central US:
// Pass secret key using header
curl --header "Ocp-Apim-Subscription-Key: <your-key>" --data "" "https://centralus.api.cognitive.microsoft.com/sts/v1.0/issueToken"

// Pass secret key using query string parameter
curl --data "" "https://centralus.api.cognitive.microsoft.com/sts/v1.0/issueToken?Subscription-Key=<your-key>"
// Pass secret key using header
curl --header "Ocp-Apim-Subscription-Key: <your-key>" --data "" "https://centralus.api.cognitive.microsoft.com/sts/v1.0/issueToken"

// Pass secret key using query string parameter
curl --data "" "https://centralus.api.cognitive.microsoft.com/sts/v1.0/issueToken?Subscription-Key=<your-key>"
A successful request returns the encoded access token as plain text in the response body. The valid token is passed to the Translator service as a bearer token in the Authorization.
Authorization: Bearer <Base64-access_token>
Authorization: Bearer <Base64-access_token>
An authentication token is valid for 10 minutes. The token should be reused when making multiple calls to the Translator. However, if your program makes requests to the Translator over an extended period of time, then your program must request a new access token at regular intervals (for example, every 8 minutes).

Authentication with Microsoft Entra ID
Translator v3.0 supports Microsoft Entra authentication, Microsoft's cloud-based identity and access management solution. Authorization headers enable the Translator service to validate that the requesting client is authorized to use the resource and to complete the request.
Prerequisites
A brief understanding of how toauthenticate with Microsoft Entra ID.
A brief understanding of how toauthenticate with Microsoft Entra ID.
A brief understanding of how toauthorize access to managed identities.
A brief understanding of how toauthorize access to managed identities.
Headers
The bearer token provides proof of authentication and validates the client's authorization to use the resource.
An authentication token is valid for 10 minutes and should be reused when making multiple calls to Translator.
This value is optional if the resource is global.
You find the Resource ID in the Azure portal atTranslator Resource  â Properties.
Resource ID format:/subscriptions/<subscriptionId>/resourceGroups/<resourceGroupName>/providers/Microsoft.CognitiveServices/accounts/<resourceName>/

Important
AssignCognitive Services Userrole to the service principal. By assigning this role, you're granting service principal access to the Translator resource.
Examples
// Using headers, pass a bearer token generated by Azure AD, resource ID, and the region.

curl -X POST "https://api.cognitive.microsofttranslator.com/translate?api-version=3.0&to=es" \
     -H "Authorization: Bearer <Base64-access_token>"\
     -H "Ocp-Apim-ResourceId: <Resource ID>" \
     -H "Ocp-Apim-Subscription-Region: <your-region>" \
     -H "Content-Type: application/json" \
     -data-raw "[{'Text':'Hello, friend.'}]"
// Using headers, pass a bearer token generated by Azure AD, resource ID, and the region.

curl -X POST "https://api.cognitive.microsofttranslator.com/translate?api-version=3.0&to=es" \
     -H "Authorization: Bearer <Base64-access_token>"\
     -H "Ocp-Apim-ResourceId: <Resource ID>" \
     -H "Ocp-Apim-Subscription-Region: <your-region>" \
     -H "Content-Type: application/json" \
     -data-raw "[{'Text':'Hello, friend.'}]"
// Using headers, pass a bearer token generated by Azure AD.

curl -X POST https://<your-custom-domain>.cognitiveservices.azure.com/translator/text/v3.0/translate?api-version=3.0&to=es \
     -H "Authorization: Bearer <Base64-access_token>"\
     -H "Content-Type: application/json" \
     -data-raw "[{'Text':'Hello, friend.'}]"
// Using headers, pass a bearer token generated by Azure AD.

curl -X POST https://<your-custom-domain>.cognitiveservices.azure.com/translator/text/v3.0/translate?api-version=3.0&to=es \
     -H "Authorization: Bearer <Base64-access_token>"\
     -H "Content-Type: application/json" \
     -data-raw "[{'Text':'Hello, friend.'}]"
Examples using managed identities
Translator v3.0 also supports authorizing access to managed identities. If a managed identity is enabled for a translator resource, you can pass the bearer token generated by managed identity in the request header.
// Using headers, pass a bearer token generated either by Azure AD or Managed Identities, resource ID, and the region.

curl -X POST https://api.cognitive.microsofttranslator.com/translate?api-version=3.0&to=es \
     -H "Authorization: Bearer <Base64-access_token>"\
     -H "Ocp-Apim-ResourceId: <Resource ID>" \
     -H "Ocp-Apim-Subscription-Region: <your-region>" \
     -H "Content-Type: application/json" \
     -data-raw "[{'Text':'Hello, friend.'}]"
// Using headers, pass a bearer token generated either by Azure AD or Managed Identities, resource ID, and the region.

curl -X POST https://api.cognitive.microsofttranslator.com/translate?api-version=3.0&to=es \
     -H "Authorization: Bearer <Base64-access_token>"\
     -H "Ocp-Apim-ResourceId: <Resource ID>" \
     -H "Ocp-Apim-Subscription-Region: <your-region>" \
     -H "Content-Type: application/json" \
     -data-raw "[{'Text':'Hello, friend.'}]"
//Using headers, pass a bearer token generated by Managed Identities.

curl -X POST https://<your-custom-domain>.cognitiveservices.azure.com/translator/text/v3.0/translate?api-version=3.0&to=es \
     -H "Authorization: Bearer <Base64-access_token>"\
     -H "Content-Type: application/json" \
     -data-raw "[{'Text':'Hello, friend.'}]"
//Using headers, pass a bearer token generated by Managed Identities.

curl -X POST https://<your-custom-domain>.cognitiveservices.azure.com/translator/text/v3.0/translate?api-version=3.0&to=es \
     -H "Authorization: Bearer <Base64-access_token>"\
     -H "Content-Type: application/json" \
     -data-raw "[{'Text':'Hello, friend.'}]"
Virtual Network support
The Translator service is now available with Virtual Network (VNET) capabilities in all regions of the Azure public cloud. To enable Virtual Network,SeeConfiguring Azure AI services virtual networks.
VNET
Once you turn on this capability, you must use the custom endpoint to call the Translator. You can't use the global translator endpoint ("api.cognitive.microsofttranslator.com") and you can't authenticate with an access token.
You can find the custom endpoint after you create atranslator resourceand allow access from selected networks and private endpoints.
Navigate to your Translator resource in the Azure portal.
Navigate to your Translator resource in the Azure portal.
SelectNetworkingfrom theResource Managementsection.
SelectNetworkingfrom theResource Managementsection.
Under theFirewalls and virtual networkstab, chooseSelected Networks and Private Endpoints.
Under theFirewalls and virtual networkstab, chooseSelected Networks and Private Endpoints.

SelectSaveto apply your changes.
SelectSaveto apply your changes.
SelectKeys and Endpointfrom theResource Managementsection.
SelectKeys and Endpointfrom theResource Managementsection.
Select theVirtual Networktab.
Select theVirtual Networktab.
Listed there are the endpoints for Text translation and Document translation.
Listed there are the endpoints for Text translation and Document translation.

global
Here's an example request to call the Translator using the custom endpoint
// Pass secret key and region using headers
curl -X POST "https://<your-custom-domain>.cognitiveservices.azure.com/translator/text/v3.0/translate?api-version=3.0&to=es" \
     -H "Ocp-Apim-Subscription-Key:<your-key>" \
     -H "Ocp-Apim-Subscription-Region:<your-region>" \
     -H "Content-Type: application/json" \
     -d "[{'Text':'Hello, what is your name?'}]"
// Pass secret key and region using headers
curl -X POST "https://<your-custom-domain>.cognitiveservices.azure.com/translator/text/v3.0/translate?api-version=3.0&to=es" \
     -H "Ocp-Apim-Subscription-Key:<your-key>" \
     -H "Ocp-Apim-Subscription-Region:<your-region>" \
     -H "Content-Type: application/json" \
     -d "[{'Text':'Hello, what is your name?'}]"
Errors
A standard error response is a JSON object with name/value pair namederror. The value is also a JSON object with properties:
error
code: A server-defined error code.
code
message: A string giving a human-readable representation of the error.
message
For example, a customer with a free trial subscription would receive the following error once the free quota is exhausted:
{
  "error": {
    "code":403001,
    "message":"The operation isn't allowed because the subscription has exceeded its free quota."
    }
}
{
  "error": {
    "code":403001,
    "message":"The operation isn't allowed because the subscription has exceeded its free quota."
    }
}
The error code is a 6-digit number combining the 3-digit HTTP status code followed by a 3-digit number to further categorize the error. Common error codes are:
Metrics
Metrics allow you to view the translator usage and availability information in Azure portal. For more information, seeData and platform metrics.

This table lists available metrics with description of how they're used to monitor translation API calls.
Feedback
Was this page helpful?
Additional resources