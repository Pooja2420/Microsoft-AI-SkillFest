Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Automatically purge images from an Azure container registry
Article
2024-09-19
12 contributors
In this article
When you use an Azure container registry as part of a development workflow, the registry can quickly fill up with images or other artifacts that aren't needed after a short period. You might want to delete all tags that are older than a certain duration or match a specified name filter. To delete multiple artifacts quickly, this article introduces theacr purgecommand you can run as an on-demand orscheduledACR Task.
acr purge
Theacr purgecommand is currently distributed in a public container image (mcr.microsoft.com/acr/acr-cli:0.14), built from source code in theacr-clirepo in GitHub.acr purgeis currently in preview.
acr purge
mcr.microsoft.com/acr/acr-cli:0.14
acr purge
You can use the Azure Cloud Shell or a local installation of the Azure CLI to run the ACR task examples in this article. If you'd like to use it locally, version 2.0.76 or later is required. Runaz --versionto find the version. If you need to install or upgrade, seeInstall Azure CLI.
az --version
Warning
Use theacr purgecommand with caution--deleted image data is UNRECOVERABLE. If you have systems that pull images by manifest digest (as opposed to image name), you should not purge untagged images. Deleting untagged images will prevent those systems from pulling the images from your registry. Instead of pulling by manifest, consider adopting aunique taggingscheme, arecommended best practice.
acr purge
If you want to delete single image tags or manifests using Azure CLI commands, seeDelete container images in Azure Container Registry.
Use the purge command
Theacr purgecontainer command deletes images by tag in a repository that match a name filter and that are older than a specified duration. By default, only tag references are deleted, not the underlyingmanifestsand layer data. The command has an option to also delete manifests.
acr purge
Note
acr purgedoes not delete an image tag or repository where thewrite-enabledattribute is set tofalse. For information, seeLock a container image in an Azure container registry.
acr purge
write-enabled
false
acr purgeis designed to run as a container command in anACR Task, so that it authenticates automatically with the registry where the task runs and performs actions there. The task examples in this article use theacr purgecommandaliasin place of a fully qualified container image command.
acr purge
acr purge
Important
The standard command to execute theacr purgeisaz acr run --registry <YOUR_REGISTRY> --cmd 'acr purge --optional parameter' /dev/null.
acr purge
az acr run --registry <YOUR_REGISTRY> --cmd 'acr purge --optional parameter' /dev/null
We recommend running the completeacr purgecommand to use the ACR Purge. For example, run theacr purge --helpasaz acr run --registry <YOUR_REGISTRY> --cmd 'acr purge --help' /dev/null.
acr purge
acr purge --help
az acr run --registry <YOUR_REGISTRY> --cmd 'acr purge --help' /dev/null
At a minimum, specify the following when you runacr purge:
acr purge
--filter- A repository nameregular expressionand a tag nameregular expressionto filter images in the registry. Examples:--filter "hello-world:.*"matches all tags in thehello-worldrepository,--filter "hello-world:^1.*"matches tags beginning with1in thehello-worldrepository, and--filter ".*/cache:.*"matches all tags in the repositories ending in/cache. You can also pass multiple--filterparameters.
--filter
--filter "hello-world:.*"
hello-world
--filter "hello-world:^1.*"
1
hello-world
--filter ".*/cache:.*"
/cache
--filter
--ago- A Go-styleduration stringto indicate a duration beyond which images are deleted. The duration consists of a sequence of one or more decimal numbers, each with a unit suffix. Valid time units include "d" for days, "h" for hours, and "m" for minutes. For example,--ago 2d3h6mselects all filtered images last modified more than two days, 3 hours, and 6 minutes ago, and--ago 1.5hselects images last modified more than 1.5 hours ago.
--ago
--ago 2d3h6m
--ago 1.5h
acr purgesupports several optional parameters. The following two are used in examples in this article:
acr purge
--untagged- Specifies that all manifests that don't have associated tags (untagged manifests) are deleted. This parameter also deletes untagged manifests in addition to tags that are already being deleted. Remove all tags associated with a manifest to purge it; only then you can purge a tag free manifest using--untagged.
--untagged
--untagged
--dry-run- Specifies that no data is deleted, but the output is the same as if the command is run without this flag. This parameter is useful for testing a purge command to make sure it does not inadvertently delete data you intend to preserve.
--dry-run
--keep- Specifies that the latest x number of to-be-deleted tags are retained. The latest tags are determined by the last modified time of the tag.
--keep
--concurrency- Specifies a number of purge tasks to process concurrently. A default value is used if this parameter is not provided.
--concurrency
Note
The--untaggedfilter doesn't respond to the--agofilter.
For additional parameters, runacr purge --help.
--untagged
--ago
acr purge --help
acr purgesupports other features of ACR Tasks commands includingrun variablesandtask run logsthat are streamed and also saved for later retrieval.
acr purge
Run in an on-demand task
The following example uses theaz acr runcommand to run theacr purgecommand on-demand. This example deletes all image tags and manifests in thehello-worldrepository inmyregistrythat were modified more than 1 day ago and all untagged manifests. The container command is passed using an environment variable. The task runs without a source context.
acr purge
hello-world
# Environment variable for container command line
PURGE_CMD="acr purge --filter 'hello-world:.*' \
  --untagged --ago 1d"

az acr run \
  --cmd "$PURGE_CMD" \
  --registry myregistry \
  /dev/null
# Environment variable for container command line
PURGE_CMD="acr purge --filter 'hello-world:.*' \
  --untagged --ago 1d"

az acr run \
  --cmd "$PURGE_CMD" \
  --registry myregistry \
  /dev/null
Run in a scheduled task
The following example uses theaz acr task createcommand to create a dailyscheduled ACR task. The task purges tags modified more than 7 days ago in thehello-worldrepository. The container command is passed using an environment variable. The task runs without a source context.
hello-world
# Environment variable for container command line
PURGE_CMD="acr purge --filter 'hello-world:.*' \
  --ago 7d"

az acr task create --name purgeTask \
  --cmd "$PURGE_CMD" \
  --schedule "0 0 * * *" \
  --registry myregistry \
  --context /dev/null
# Environment variable for container command line
PURGE_CMD="acr purge --filter 'hello-world:.*' \
  --ago 7d"

az acr task create --name purgeTask \
  --cmd "$PURGE_CMD" \
  --schedule "0 0 * * *" \
  --registry myregistry \
  --context /dev/null
Run theaz acr task showcommand to see that the timer trigger is configured.
Purge large numbers of tags and manifests
Purging a large number of tags and manifests could take several minutes or longer. To purge thousands of tags and manifests, the command might need to run longer than the default timeout time of 600 seconds for an on-demand task, or 3600 seconds for a scheduled task. If the timeout time is exceeded, only a subset of tags and manifests are deleted. To ensure that a large-scale purge is complete, pass the--timeoutparameter to increase the value.
--timeout
For example, the following on-demand task sets a timeout time of 3600 seconds (1 hour):
# Environment variable for container command line
PURGE_CMD="acr purge --filter 'hello-world:.*' \
  --ago 1d --untagged"

az acr run \
  --cmd "$PURGE_CMD" \
  --registry myregistry \
  --timeout 3600 \
  /dev/null
# Environment variable for container command line
PURGE_CMD="acr purge --filter 'hello-world:.*' \
  --ago 1d --untagged"

az acr run \
  --cmd "$PURGE_CMD" \
  --registry myregistry \
  --timeout 3600 \
  /dev/null
Example: Scheduled purge of multiple repositories in a registry
This example walks through usingacr purgeto periodically clean up multiple repositories in a registry. For example, you might have a development pipeline that pushes images to thesamples/devimage1andsamples/devimage2repositories. You periodically import development images into a production repository for your deployments, so you no longer need the development images. On a weekly basis, you purge thesamples/devimage1andsamples/devimage2repositories, in preparation for the coming week's work.
acr purge
samples/devimage1
samples/devimage2
samples/devimage1
samples/devimage2
Preview the purge
Before deleting data, we recommend running an on-demand purge task using the--dry-runparameter. This option allows you to see the tags and manifests that the command will purge, without removing any data.
--dry-run
In the following example, the filter in each repository selects all tags. The--ago 0dparameter matches images of all ages in the repositories that match the filters. Modify the selection criteria as needed for your scenario. The--untaggedparameter indicates to delete manifests in addition to tags. The container command is passed to theaz acr runcommand using an environment variable.
--ago 0d
--untagged
# Environment variable for container command line
PURGE_CMD="acr purge \
  --filter 'samples/devimage1:.*' --filter 'samples/devimage2:.*' \
  --ago 0d --untagged --dry-run"

az acr run \
  --cmd "$PURGE_CMD" \
  --registry myregistry \
  /dev/null
# Environment variable for container command line
PURGE_CMD="acr purge \
  --filter 'samples/devimage1:.*' --filter 'samples/devimage2:.*' \
  --ago 0d --untagged --dry-run"

az acr run \
  --cmd "$PURGE_CMD" \
  --registry myregistry \
  /dev/null
Review the command output to see the tags and manifests that match the selection parameters. Because the command is run with--dry-run, no data is deleted.
--dry-run
Sample output:
[...]
Deleting tags for repository: samples/devimage1
myregistry.azurecr.io/samples/devimage1:232889b
myregistry.azurecr.io/samples/devimage1:a21776a
Deleting manifests for repository: samples/devimage1
myregistry.azurecr.io/samples/devimage1@sha256:81b6f9c92844bbbb5d0a101b22f7c2a7949e40f8ea90c8b3bc396879d95e788b
myregistry.azurecr.io/samples/devimage1@sha256:3ded859790e68bd02791a972ab0bae727231dc8746f233a7949e40f8ea90c8b3
Deleting tags for repository: samples/devimage2
myregistry.azurecr.io/samples/devimage2:5e788ba
myregistry.azurecr.io/samples/devimage2:f336b7c
Deleting manifests for repository: samples/devimage2
myregistry.azurecr.io/samples/devimage2@sha256:8d2527cde610e1715ad095cb12bc7ed169b60c495e5428eefdf336b7cb7c0371
myregistry.azurecr.io/samples/devimage2@sha256:ca86b078f89607bc03ded859790e68bd02791a972ab0bae727231dc8746f233a

Number of deleted tags: 4
Number of deleted manifests: 4
[...]
[...]
Deleting tags for repository: samples/devimage1
myregistry.azurecr.io/samples/devimage1:232889b
myregistry.azurecr.io/samples/devimage1:a21776a
Deleting manifests for repository: samples/devimage1
myregistry.azurecr.io/samples/devimage1@sha256:81b6f9c92844bbbb5d0a101b22f7c2a7949e40f8ea90c8b3bc396879d95e788b
myregistry.azurecr.io/samples/devimage1@sha256:3ded859790e68bd02791a972ab0bae727231dc8746f233a7949e40f8ea90c8b3
Deleting tags for repository: samples/devimage2
myregistry.azurecr.io/samples/devimage2:5e788ba
myregistry.azurecr.io/samples/devimage2:f336b7c
Deleting manifests for repository: samples/devimage2
myregistry.azurecr.io/samples/devimage2@sha256:8d2527cde610e1715ad095cb12bc7ed169b60c495e5428eefdf336b7cb7c0371
myregistry.azurecr.io/samples/devimage2@sha256:ca86b078f89607bc03ded859790e68bd02791a972ab0bae727231dc8746f233a

Number of deleted tags: 4
Number of deleted manifests: 4
[...]
Schedule the purge
After you've verified the dry run, create a scheduled task to automate the purge. The following example schedules a weekly task on Sunday at 1:00 UTC to run the previous purge command:
# Environment variable for container command line
PURGE_CMD="acr purge \
  --filter 'samples/devimage1:.*' --filter 'samples/devimage2:.*' \
  --ago 0d --untagged"

az acr task create --name weeklyPurgeTask \
  --cmd "$PURGE_CMD" \
  --schedule "0 1 * * Sun" \
  --registry myregistry \
  --context /dev/null
# Environment variable for container command line
PURGE_CMD="acr purge \
  --filter 'samples/devimage1:.*' --filter 'samples/devimage2:.*' \
  --ago 0d --untagged"

az acr task create --name weeklyPurgeTask \
  --cmd "$PURGE_CMD" \
  --schedule "0 1 * * Sun" \
  --registry myregistry \
  --context /dev/null
Run theaz acr task showcommand to see that the timer trigger is configured.
Next steps
Learn about other options todelete image datain Azure Container Registry.
For more information about image storage, seeContainer image storage in Azure Container Registry.
Feedback
Was this page helpful?
Additional resources