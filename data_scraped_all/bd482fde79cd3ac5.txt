Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Migration guide: SQL Server to SQL Server on Azure Virtual Machines
Article
2025-01-08
2 contributors
In this article
Applies to:SQL Server on Azure Virtual Machines
In this guide, you learnhow to migrateyour user databases from SQL Server to an instance of SQL Server on Azure Virtual Machines by tools and techniques based on your requirements.
Completepre-migrationsteps before continuing.
Migrate
After you complete the steps for thepre-migrationâ¯stage, you're ready to migrate the user databases and components. Migrate your databases by using your preferredmigration method.
The following sections provide options for performing a migration in order of preference:
backup and restore
detach and attach from a URL
convert to a VM, upload to a URL, and deploy as a new VM
log shipping
ship a hard drive
migrate using the Azure SQL migration extension for Azure Data Studio with minimal downtime
migrate objects outside user databases
Detach and attach from a URL
Detach your database and log files and transfer them toAzure Blob storage. Then attach the database from the URL on your Azure VM. Use this method if you want the physical database files to reside in Blob storage, which might be useful for very large databases. Use the following general steps to migrate a user database using this manual method:
Detach the database files from the on-premises database instance.
Copy the detached database files into Azure Blob storage using theAzCopy command-line utility.
Attach the database files from the Azure URL to the SQL Server instance in the Azure VM.
Backup and restore
To perform a standard migration by using backup and restore:
Set up connectivity to SQL Server on Azure Virtual Machines based on your requirements. For more information, seeConnect to a SQL Server virtual machine on Azure.
Pause or stop any applications that are using databases intended for migration.
Ensure user databases are inactive by usingsingle user mode.
Perform a full database backup to an on-premises location.
Copy your on-premises backup files to your VM by using a remote desktop,Azure Data Explorer, or theAzCopy command-line utility. (Greater than 2-TB backups are recommended.)
Restore full database backups to the SQL Server on Azure Virtual Machines.
Convert to a VM, upload to a URL, and deploy as a new VM
Use this method to migrate all system and user databases in an on-premises SQL Server instance to an Azure virtual machine. Use the following general steps to migrate an entire SQL Server instance using this manual method:
Convert physical or virtual machines to Hyper-V VHDs.
Upload VHD files to Azure Storage by using theAdd-AzureVHD cmdlet.
Deploy a new virtual machine by using the uploaded VHD.
Note
To migrate an entire application, consider usingAzure Site Recovery.
Log shipping
Log shipping replicates transactional log files from on-premises on to an instance of SQL Server on an Azure VM. This option provides minimal downtime during failover and has less configuration overhead than setting up an Always On availability group.
For more information, seeLog Shipping Tables and Stored Procedures.
Ship a hard drive
Use theWindows Import/Export Service methodto transfer large amounts of file data to Azure Blob storage in situations where uploading over the network is prohibitively expensive or not feasible. With this service, you send one or more hard drives containing that data to an Azure data center where your data will be uploaded to your storage account.
Migrate using the Azure SQL migration extension for Azure Data Studio (minimal downtime)
To perform a minimal downtime migration using Azure Data Studio, follow the high level steps below. For a detailed step-by-step tutorial, seeTutorial: Migrate SQL Server to SQL Server on Azure Virtual Machines with DMS:
Download and installAzure Data Studioand theAzure SQL migration extension.
Launch the Migrate to Azure SQL wizard in the extension in Azure Data Studio.
Select databases for assessment and view migration readiness or issues (if any). Additionally, collect performance data and get right-sized Azure recommendation.
Select your Azure account and your target SQL Server on Azure Machine from your subscription.
Select the location of your database backups. Your database backups can either be located on an on-premises network share or in an Azure Blob Storage container.
Create a new Azure Database Migration Service using the wizard in Azure Data Studio. If you have previously created an Azure Database Migration Service using Azure Data Studio, you can reuse the same if desired.
Optional: If your backups are on an on-premises network share, download and installself-hosted integration runtimeon a machine that can connect to source SQL Server and the location containing the backup files.
Start the database migration and monitor the progress in Azure Data Studio. You can also monitor the progress under the Azure Database Migration Service resource in Azure portal.
Complete the cutover.Stop all incoming transactions to the source database.Make application configuration changes to point to the target database in SQL Server on Azure Virtual Machine.Take any tail log backups for the source database in the backup location specified.Ensure all database backups have the status Restored in the monitoring details page.SelectComplete cutoverin the monitoring details page.
Stop all incoming transactions to the source database.
Make application configuration changes to point to the target database in SQL Server on Azure Virtual Machine.
Take any tail log backups for the source database in the backup location specified.
Ensure all database backups have the status Restored in the monitoring details page.
SelectComplete cutoverin the monitoring details page.
Migrate objects outside user databases
More SQL Server objects might be required for the seamless operation of your user databases post migration.
The following table provides a list of components and recommended migration methods that can be completed before or after migration of your user databases.
tempdb
tempdb
tempdb
Post-migration
After you successfully complete the migration stage, you need to complete a series of post-migration tasks to ensure that everything is functioning as smoothly and efficiently as possible.
Remediate applications
After the data is migrated to the target environment, all the applications that formerly consumed the source need to start consuming the target. Accomplishing this task might require changes to the applications in some cases.
Apply any fixes recommended by Data Migration Assistant to user databases. You need to script these fixes to ensure consistency and allow for automation.
Perform tests
The test approach to database migration consists of the following activities:
Develop validation tests: To test the database migration, you need to use SQL queries. Create validation queries to run against both the source and target databases. Your validation queries should cover the scope you've defined.
Set up a test environment: The test environment should contain a copy of the source database and the target database. Be sure to isolate the test environment.
Run validation tests: Run validation tests against the source and the target, and then analyze the results.
Run performance tests: Run performance tests against the source and target, and then analyze and compare the results.
Optimize
The post-migration phase is crucial for reconciling any data accuracy issues, verifying completeness, and addressing potential performance issues with the workload.
For more information about these issues and the steps to mitigate them, see:
Post-migration validation and optimization guide
Checklist: Best practices for SQL Server on Azure VMs
Azure cost optimization center
Related content
Azure global infrastructure center
Services and tools available for data migration scenarios
What is Azure SQL?
What is SQL Server on Azure Windows Virtual Machines?
Azure Total Cost of Ownership (TCO) Calculator
Cloud Adoption Framework for Azure
Best practices for costing and sizing workloads for migration to Azure
Change the license model for a SQL virtual machine in Azure
Extend support for SQL Server with Azure
Feedback
Was this page helpful?
Additional resources