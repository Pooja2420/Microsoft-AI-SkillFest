Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Customize node configuration for Azure Kubernetes Service (AKS) node pools
Article
2025-01-24
23 contributors
In this article
Customizing your node configuration allows you to adjust operating system (OS) settings or kubelet parameters to match the needs of your workloads. When you create an AKS cluster or add a node pool to your cluster, you can customize a subset of commonly used OS and kubelet settings. To configure settings beyond this subset, you canuse a daemon set to customize your needed configurations without losing AKS support for your nodes.
Create an AKS cluster with a customized node configuration
Create config files
OS and kubelet configuration changes require you to create a new configuration file with the parameters and your desired settings. If a value for a parameter is not specified, then the value will be set to the default.
Linux node pools
Windows node pools
Create alinuxkubeletconfig.jsonfile with the following contents:
linuxkubeletconfig.json
{
 "cpuManagerPolicy": "static",
 "cpuCfsQuota": true,
 "cpuCfsQuotaPeriod": "200ms",
 "imageGcHighThreshold": 90,
 "imageGcLowThreshold": 70,
 "topologyManagerPolicy": "best-effort",
 "allowedUnsafeSysctls": [
  "kernel.msg*",
  "net.*"
],
 "failSwapOn": false
}
{
 "cpuManagerPolicy": "static",
 "cpuCfsQuota": true,
 "cpuCfsQuotaPeriod": "200ms",
 "imageGcHighThreshold": 90,
 "imageGcLowThreshold": 70,
 "topologyManagerPolicy": "best-effort",
 "allowedUnsafeSysctls": [
  "kernel.msg*",
  "net.*"
],
 "failSwapOn": false
}
Note
Windows kubelet custom configuration only supports the parametersimageGcHighThreshold,imageGcLowThreshold,containerLogMaxSizeMB, andcontainerLogMaxFiles.
imageGcHighThreshold
imageGcLowThreshold
containerLogMaxSizeMB
containerLogMaxFiles
Create awindowskubeletconfig.jsonfile with the following contents:
windowskubeletconfig.json
{
 "imageGcHighThreshold": 90,
 "imageGcLowThreshold": 70,
 "containerLogMaxSizeMB": 20,
 "containerLogMaxFiles": 6
}
{
 "imageGcHighThreshold": 90,
 "imageGcLowThreshold": 70,
 "containerLogMaxSizeMB": 20,
 "containerLogMaxFiles": 6
}
Linux node pools
Windows node pools
Create alinuxosconfig.jsonfile with the following contents:
linuxosconfig.json
{
 "transparentHugePageEnabled": "madvise",
 "transparentHugePageDefrag": "defer+madvise",
 "swapFileSizeMB": 1500,
 "sysctls": {
  "netCoreSomaxconn": 163849,
  "netIpv4TcpTwReuse": true,
  "netIpv4IpLocalPortRange": "32000 60000"
 }
}
{
 "transparentHugePageEnabled": "madvise",
 "transparentHugePageDefrag": "defer+madvise",
 "swapFileSizeMB": 1500,
 "sysctls": {
  "netCoreSomaxconn": 163849,
  "netIpv4TcpTwReuse": true,
  "netIpv4IpLocalPortRange": "32000 60000"
 }
}
Not currently supported.
Create a new cluster using custom configuration files
When creating a new cluster, you can use the customized configuration files created in the previous steps to specify the kubelet configuration, OS configuration, or both.
Note
If you specify a configuration when creating a cluster, only the nodes in the initial node pool will have that configuration applied. Any settings not configured in the JSON file will retain the default value.CustomLinuxOsConfigisn't supported for OS type: Windows.
CustomLinuxOsConfig
Create a new cluster using custom configuration files using theaz aks createcommand and specifying your configuration files. The following example command creates a new cluster with the custom./linuxkubeletconfig.jsonand./linuxosconfig.jsonfiles:
az aks create
./linuxkubeletconfig.json
./linuxosconfig.json
az aks create --name myAKSCluster --resource-group myResourceGroup --kubelet-config ./linuxkubeletconfig.json --linux-os-config ./linuxosconfig.json
az aks create --name myAKSCluster --resource-group myResourceGroup --kubelet-config ./linuxkubeletconfig.json --linux-os-config ./linuxosconfig.json
Add a node pool using custom configuration files
When adding a node pool to a cluster, you can use the customized configuration file created in the previous step to specify the kubelet configuration.CustomKubeletConfigis supported for Linux and Windows node pools.
CustomKubeletConfig
Note
When you add a Linux node pool to an existing cluster, you can specify the kubelet configuration, OS configuration, or both. When you add a Windows node pool to an existing cluster, you can only specify the kubelet configuration. If you specify a configuration when adding a node pool, only the nodes in the new node pool will have that configuration applied. Any settings not configured in the JSON file will retain the default value.
Linux node pools
Windows node pools
az aks nodepool add --name mynodepool1 --cluster-name myAKSCluster --resource-group myResourceGroup --kubelet-config ./linuxkubeletconfig.json
az aks nodepool add --name mynodepool1 --cluster-name myAKSCluster --resource-group myResourceGroup --kubelet-config ./linuxkubeletconfig.json
az aks nodepool add --name mynp1 --cluster-name myAKSCluster --resource-group myResourceGroup --os-type Windows --kubelet-config ./windowskubeletconfig.json
az aks nodepool add --name mynp1 --cluster-name myAKSCluster --resource-group myResourceGroup --os-type Windows --kubelet-config ./windowskubeletconfig.json
Troubleshooting custom node configurations
Confirm settings have been applied
After you apply custom node configuration, you can confirm the settings have been applied to the nodes byconnecting to the hostand verifyingsysctlor configuration changes have been made on the filesystem.
sysctl
Custom node configuration supported parameters
Kubelet custom configuration
Kubelet custom configuration is supported for Linux and Windows node pools. Supported parameters differ and are documented below.
cpuManagerPolicy
cpuCfsQuota
cpuCfsQuotaPeriod
100ms
imageGcHighThreshold
imageGcLowThreshold
imageGcHighThreshold
topologyManagerPolicy
allowedUnsafeSysctls
kernel.shm*
kernel.msg*
kernel.sem
fs.mqueue.*
net.*
containerLogMaxSizeMB
containerLogMaxFiles
podMaxPids
seccompDefault
Unconfined
RuntimeDefault
Unconfined
RuntimeDefault
Unconfined
az feature register
imageGcHighThreshold
imageGcLowThreshold
imageGcHighThreshold
containerLogMaxSizeMB
containerLogMaxFiles
Linux custom OS configuration settings
Important
To simplify search and readability, the OS settings are displayed in this article by their name, but they should be added to the configuration JSON file or AKS API usingcamelCase capitalization convention.
For example, if you modify the 'vm.max_map_count setting', you should reformat to 'vmMaxMapCount' in the configuration JSON file.
File handle limits
When serving a lot of traffic, the traffic commonly comes from a large number of local files. You can adjust the below kernel settings and built-in limits to allow you to handle more, at the cost of some system memory.
fs.file-max
fs.inotify.max_user_watches
fs.aio-max-nr
fs.nr_open
Socket and network tuning
For agent nodes, which are expected to handle very large numbers of concurrent sessions, you can use the subset of TCP and network options below that you can tweak per node pool.
net.core.somaxconn
somaxconn
net.core.netdev_max_backlog
net.core.rmem_max
net.core.wmem_max
net.core.optmem_max
net.ipv4.tcp_max_syn_backlog
net.ipv4.tcp_max_tw_buckets
timewait
net.ipv4.tcp_fin_timeout
net.ipv4.tcp_keepalive_time
keepalive
keepalive
net.ipv4.tcp_keepalive_probes
keepalive
net.ipv4.tcp_keepalive_intvl
tcp_keepalive_probes
net.ipv4.tcp_tw_reuse
TIME-WAIT
net.ipv4.ip_local_port_range
net.ipv4.neigh.default.gc_thresh1
net.ipv4.neigh.default.gc_thresh2
net.ipv4.neigh.default.gc_thresh3
net.netfilter.nf_conntrack_max
nf_conntrack
nf_conntrack
nf_conntrack_max
nf_conntrack
net.netfilter.nf_conntrack_buckets
nf_conntrack
nf_conntrack
nf_conntrack_buckets
Worker limits
Like file descriptor limits, the number of workers or threads that a process can create are limited by both a kernel setting and user limits. The user limit on AKS is unlimited.
kernel.threads-max
kernel.threads-max
Virtual memory
The settings below can be used to tune the operation of the virtual memory (VM) subsystem of the Linux kernel and thewriteoutof dirty data to disk.
writeout
vm.max_map_count
malloc
mmap
mprotect
madvise
vm.vfs_cache_pressure
vm.swappiness
swapFileSizeMB
transparentHugePageEnabled
always
madvise
never
always
hugepages
mmap
hugepages
mmap
hugepages
MADV_HUGEPAGE madvise
transparentHugePageDefrag
always
defer
defer+madvise
madvise
never
madvise
hugepages
Next steps
Learnhow to configure your AKS cluster.
Learn howupgrade the node imagesin your cluster.
SeeUpgrade an Azure Kubernetes Service (AKS) clusterto learn how to upgrade your cluster to the latest version of Kubernetes.
See the list ofFrequently asked questions about AKSto find answers to some common AKS questions.
Azure Kubernetes Service

Additional resources