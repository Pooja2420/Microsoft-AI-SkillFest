Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Configure IoT Hub file uploads using PowerShell
Article
2023-03-16
17 contributors
In this article
Azure portal
PowerShell
CLI
This article shows you how to configure file uploads on your IoT hub using PowerShell.
To use thefile upload functionality in IoT Hub, you must first associate an Azure storage account and blob container with your IoT hub. IoT Hub automatically generates SAS URIs with write permissions to this blob container for devices to use when they upload files. In addition to the storage account and blob container, you can set the time-to-live for the SAS URI and configure settings for the optional file upload notifications that IoT Hub can deliver to backend services.
Note
We recommend that you use the Azure Az PowerShell module to interact with Azure. To get started, seeInstall Azure PowerShell. To learn how to migrate to the Az PowerShell module, seeMigrate Azure PowerShell from AzureRM to Az.
Prerequisites
An active Azure account. If you don't have an account, you can create afree accountin just a couple of minutes.
An active Azure account. If you don't have an account, you can create afree accountin just a couple of minutes.
An Azure IoT hub. If you don't have an IoT hub, you can use theNew-AzIoTHub cmdletto create one or follow the steps inCreate an IoT hub.
An Azure IoT hub. If you don't have an IoT hub, you can use theNew-AzIoTHub cmdletto create one or follow the steps inCreate an IoT hub.
An Azure storage account. If you don't have an Azure storage account, you can use theAzure Storage PowerShell cmdletsto create one or use the portal toCreate a storage account
An Azure storage account. If you don't have an Azure storage account, you can use theAzure Storage PowerShell cmdletsto create one or use the portal toCreate a storage account
Use the PowerShell environment inAzure Cloud Shell.
Use the PowerShell environment inAzure Cloud Shell.

If you prefer,installPowerShell locally.Install the Azure Az PowerShell module. (The module is installed by default in the Azure Cloud Shell PowerShell environment.)Sign in to PowerShell by using theConnect-AzAccountcommand.  To finish the authentication process, follow the steps displayed in your terminal.  For additional sign-in options, seeSign in with Azure PowerShell.
If you prefer,installPowerShell locally.
Install the Azure Az PowerShell module. (The module is installed by default in the Azure Cloud Shell PowerShell environment.)
Sign in to PowerShell by using theConnect-AzAccountcommand.  To finish the authentication process, follow the steps displayed in your terminal.  For additional sign-in options, seeSign in with Azure PowerShell.
Sign in and set your Azure account
Sign in to your Azure account and select your subscription. If you're using Azure Cloud Shell, you should be signed in already; however, you still might need to select your Azure subscription if you have multiple subscriptions.
At the PowerShell prompt, run theConnect-AzAccountcmdlet:Connect-AzAccount
At the PowerShell prompt, run theConnect-AzAccountcmdlet:
Connect-AzAccount
Connect-AzAccount
If you have multiple Azure subscriptions, signing in to Azure grants you access to all the Azure subscriptions associated with your credentials. Use theGet-AzSubscriptioncommand to list the Azure subscriptions available for you to use:Get-AzSubscriptionUse the following command to select the subscription that you want to use to run the commands to manage your IoT hub. You can use either the subscription name or ID from the output of the previous command:Select-AzSubscription `
    -Name "{your subscription name}"NoteTheSelect-AzSubscriptioncommand is an alias of theSelect-AzContextthat allows you to use the subscription name (Name) or subscription ID (Id) returned by theGet-AzSubscriptioncommand rather than the more complex context name required for theSelect-AzContextcommand.
If you have multiple Azure subscriptions, signing in to Azure grants you access to all the Azure subscriptions associated with your credentials. Use theGet-AzSubscriptioncommand to list the Azure subscriptions available for you to use:
Get-AzSubscription
Get-AzSubscription
Use the following command to select the subscription that you want to use to run the commands to manage your IoT hub. You can use either the subscription name or ID from the output of the previous command:
Select-AzSubscription `
    -Name "{your subscription name}"
Select-AzSubscription `
    -Name "{your subscription name}"
Note
TheSelect-AzSubscriptioncommand is an alias of theSelect-AzContextthat allows you to use the subscription name (Name) or subscription ID (Id) returned by theGet-AzSubscriptioncommand rather than the more complex context name required for theSelect-AzContextcommand.
Retrieve your storage account details
The following steps assume that you created your storage account using theResource Managerdeployment model, and not theClassicdeployment model.
To configure file uploads from your devices, you need the connection string for an Azure storage account. The storage account must be in the same subscription as your IoT hub. You also need the name of a blob container in the storage account. Use theGet-AzStorageAccountKeycommand to retrieve your storage account keys:
Get-AzStorageAccountKey `
  -Name {your storage account name} `
  -ResourceGroupName {your storage account resource group}
Get-AzStorageAccountKey `
  -Name {your storage account name} `
  -ResourceGroupName {your storage account resource group}
Make a note of thekey1storage account key value. You need it in the following steps.
You can either use an existing blob container for your file uploads or create new one:
To list the existing blob containers in your storage account, use theNew-AzStorageContextandGet-AzStorageContainercommands:$ctx = New-AzStorageContext `
    -StorageAccountName {your storage account name} `
    -StorageAccountKey {your storage account key}
Get-AzStorageContainer -Context $ctx
To list the existing blob containers in your storage account, use theNew-AzStorageContextandGet-AzStorageContainercommands:
$ctx = New-AzStorageContext `
    -StorageAccountName {your storage account name} `
    -StorageAccountKey {your storage account key}
Get-AzStorageContainer -Context $ctx
$ctx = New-AzStorageContext `
    -StorageAccountName {your storage account name} `
    -StorageAccountKey {your storage account key}
Get-AzStorageContainer -Context $ctx
To create a blob container in your storage account, use theNew-AzStorageContextandNew-AzStorageContainercommands:$ctx = New-AzStorageContext `
    -StorageAccountName {your storage account name} `
    -StorageAccountKey {your storage account key}
New-AzStorageContainer `
    -Name {your new container name} `
    -Permission Off `
    -Context $ctx
To create a blob container in your storage account, use theNew-AzStorageContextandNew-AzStorageContainercommands:
$ctx = New-AzStorageContext `
    -StorageAccountName {your storage account name} `
    -StorageAccountKey {your storage account key}
New-AzStorageContainer `
    -Name {your new container name} `
    -Permission Off `
    -Context $ctx
$ctx = New-AzStorageContext `
    -StorageAccountName {your storage account name} `
    -StorageAccountKey {your storage account key}
New-AzStorageContainer `
    -Name {your new container name} `
    -Permission Off `
    -Context $ctx
Configure your IoT hub
You can now configure your IoT hub toupload files to the IoT hubusing your storage account details.
The configuration requires the following values:
Storage container: A blob container in an Azure storage account in your current Azure subscription to associate with your IoT hub. You retrieved the necessary storage account information in the preceding section. IoT Hub automatically generates SAS URIs with write permissions to this blob container for devices to use when they upload files.
Storage container: A blob container in an Azure storage account in your current Azure subscription to associate with your IoT hub. You retrieved the necessary storage account information in the preceding section. IoT Hub automatically generates SAS URIs with write permissions to this blob container for devices to use when they upload files.
Receive notifications for uploaded files: Enable or disable file upload notifications.
Receive notifications for uploaded files: Enable or disable file upload notifications.
SAS TTL: This setting is the time-to-live of the SAS URIs returned to the device by IoT Hub. Set to one hour by default.
SAS TTL: This setting is the time-to-live of the SAS URIs returned to the device by IoT Hub. Set to one hour by default.
File notification settings default TTL: The time-to-live of a file upload notification before it's expired. Set to one day by default.
File notification settings default TTL: The time-to-live of a file upload notification before it's expired. Set to one day by default.
File notification maximum delivery count: The number of times the IoT Hub attempts to deliver a file upload notification. Set to 10 by default.
File notification maximum delivery count: The number of times the IoT Hub attempts to deliver a file upload notification. Set to 10 by default.
Use theSet-AzIotHubcommand to configure the file upload settings on your IoT hub:
Set-AzIotHub `
    -ResourceGroupName "{your iot hub resource group}" `
    -Name "{your iot hub name}" `
    -FileUploadNotificationTtl "01:00:00" `
    -FileUploadSasUriTtl "01:00:00" `
    -EnableFileUploadNotifications $true `
    -FileUploadStorageConnectionString "DefaultEndpointsProtocol=https;AccountName={your storage account name};AccountKey={your storage account key};EndpointSuffix=core.windows.net" `
    -FileUploadContainerName "{your blob container name}" `
    -FileUploadNotificationMaxDeliveryCount 10
Set-AzIotHub `
    -ResourceGroupName "{your iot hub resource group}" `
    -Name "{your iot hub name}" `
    -FileUploadNotificationTtl "01:00:00" `
    -FileUploadSasUriTtl "01:00:00" `
    -EnableFileUploadNotifications $true `
    -FileUploadStorageConnectionString "DefaultEndpointsProtocol=https;AccountName={your storage account name};AccountKey={your storage account key};EndpointSuffix=core.windows.net" `
    -FileUploadContainerName "{your blob container name}" `
    -FileUploadNotificationMaxDeliveryCount 10
Note
By default, IoT Hub authenticates with Azure Storage using the account key in the connection string. Authentication using either system-assigned or user-assigned managed identities is also available. Managed identities provide Azure services with an automatically managed identity in Microsoft Entra ID in a secure manner. To learn more, seeIoT Hub support for managed identities. Currently, there are not parameters on theSet-AzIotHubcommand to set the authentication type. Instead, you can use either theAzure portalorAzure CLI.
Next steps
Upload files from a device overview
IoT Hub support for managed identities
File upload how-to guides
Feedback
Was this page helpful?
Additional resources