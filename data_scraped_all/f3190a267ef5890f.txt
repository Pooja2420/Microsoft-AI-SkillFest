Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Choose a device communication protocol
Article
2025-03-24
14 contributors
In this article
IoT Hub allows devices to use the following protocols for device-side communications:
MQTT
MQTT over WebSockets
Advanced Message Queuing Protocol (AMQP)
AMQP over WebSockets
HTTPS
Note
IoT Hub provides limited feature support for MQTT. If your solution needs MQTT v3.1.1 or v5 support, seeOverview of the MQTT broker feature in Azure Event Grid. For more information, see theCompare MQTT support in IoT Hub and Event Gridsection ofCommunicate with an IoT hub using the MQTT protocol.
For information about how these protocols support specific IoT Hub features, seeDevice-to-cloud communications guidanceandCloud-to-device communications guidance.
The following table provides the high-level recommendations for your choice of protocol:
Consider the following points when you choose your protocol for device-side communications:
Cloud-to-device pattern. HTTPS doesn't have an efficient way to implement server push. As such, when you're using HTTPS, devices poll IoT Hub for cloud-to-device messages. This approach is inefficient for both the device and IoT Hub. Under current HTTPS guidelines, each device should poll for messages every 25 minutes or more. Issuing more HTTPS receives results in IoT Hub throttling the requests. MQTT and AMQP support server push when receiving cloud-to-device messages. They enable immediate pushes of messages from IoT Hub to the device. If delivery latency is a concern, MQTT or AMQP are the best protocols to use. For rarely connected devices, HTTPS works as well.
Cloud-to-device pattern. HTTPS doesn't have an efficient way to implement server push. As such, when you're using HTTPS, devices poll IoT Hub for cloud-to-device messages. This approach is inefficient for both the device and IoT Hub. Under current HTTPS guidelines, each device should poll for messages every 25 minutes or more. Issuing more HTTPS receives results in IoT Hub throttling the requests. MQTT and AMQP support server push when receiving cloud-to-device messages. They enable immediate pushes of messages from IoT Hub to the device. If delivery latency is a concern, MQTT or AMQP are the best protocols to use. For rarely connected devices, HTTPS works as well.
Field gateways. MQTT and HTTPS support only a single device identity (device ID plus credentials) per TLS connection. For this reason, these protocols aren't supported for field gateway scenarios that require multiplexing messages, using multiple device identities, across either a single connection or a pool of upstream connections to IoT Hub. Such gateways can use a protocol that supports multiple device identities per connection, like AMQP, for their upstream traffic.
Field gateways. MQTT and HTTPS support only a single device identity (device ID plus credentials) per TLS connection. For this reason, these protocols aren't supported for field gateway scenarios that require multiplexing messages, using multiple device identities, across either a single connection or a pool of upstream connections to IoT Hub. Such gateways can use a protocol that supports multiple device identities per connection, like AMQP, for their upstream traffic.
Low resource devices. The MQTT and HTTPS libraries have a smaller footprint than the AMQP libraries. As such, if the device provides limited resources (for example, less than 1 MB of RAM), these protocols might be the only protocol implementation available.
Low resource devices. The MQTT and HTTPS libraries have a smaller footprint than the AMQP libraries. As such, if the device provides limited resources (for example, less than 1 MB of RAM), these protocols might be the only protocol implementation available.
Network traversal. The standard AMQP protocol uses port 5671, and MQTT listens on port 8883. Use of these ports could cause problems in networks that are closed to non-HTTPS protocols. Use MQTT over WebSockets, AMQP over WebSockets, or HTTPS in this scenario.
Network traversal. The standard AMQP protocol uses port 5671, and MQTT listens on port 8883. Use of these ports could cause problems in networks that are closed to non-HTTPS protocols. Use MQTT over WebSockets, AMQP over WebSockets, or HTTPS in this scenario.
Payload size. MQTT and AMQP are binary protocols, which result in more compact payloads than HTTPS.
Payload size. MQTT and AMQP are binary protocols, which result in more compact payloads than HTTPS.
Warning
When devices use the HTTPS protocol, each device should poll for cloud-to-device messages no more than once every 25 minutes. In development, each device can poll more frequently, if desired.
Important
The following functionality for devices that use X.509 certificate authority (CA) authentication isn't yet generally available, andpreview mode must be enabled:
HTTPS, MQTT over WebSockets, and AMQP over WebSockets protocols.
File uploads (all protocols).
These features are generally available on devices that use X.509 thumbprint authentication.
Port numbers
Devices can communicate with IoT Hub in Azure using various protocols. Typically, the specific requirements of the solution determine the choice of protocol. The following table lists the outbound ports that must be open for a device to be able to use a specific protocol:
The IP address of an IoT hub is subject to change without notice. To learn how to mitigate the effects of IoT hub IP address changes on your IoT solution and devices, see theBest practicessection ofIoT Hub IP addresses.
Next steps
For more information about how IoT Hub implements the MQTT protocol, seeCommunicate with an IoT hub using the MQTT protocol.
Feedback
Was this page helpful?
Additional resources