Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Create node pools for a cluster in Azure Kubernetes Service (AKS)
Article
2024-08-01
14 contributors
In this article
In Azure Kubernetes Service (AKS), nodes of the same configuration are grouped together intonode pools. These node pools contain the underlying VMs that run your applications. When you create an AKS cluster, you define the initial number of nodes and their size (SKU), which creates asystem node pool.
To support applications that have different compute or storage demands, you can createuser node pools. System node pools serve the primary purpose of hosting critical system pods such as CoreDNS andkonnectivity. User node pools serve the primary purpose of hosting your application pods. For example, use more user node pools to provide GPUs for compute-intensive applications, or access to high-performance SSD storage. However, if you wish to have only one pool in your AKS cluster, you can schedule application pods on system node pools.
konnectivity
Note
This feature enables more control over creating and managing multiple node pools and requires separate commands forcreate/update/delete(CRUD) operations. Previously, cluster operations throughaz aks createoraz aks updateused the managedCluster API and were the only options to change your control plane and a single node pool. This feature exposes a separate operation set for agent pools through the agentPool API and requires use of theaz aks nodepoolcommand set to execute operations on an individual node pool.
az aks create
az aks update
az aks nodepool
This article shows you how to create one or more node pools in an AKS cluster.
Before you begin
You need the Azure CLI version 2.2.0 or later installed and configured. Runaz --versionto find the version. If you need to install or upgrade, seeInstall Azure CLI.
az --version
ReviewStorage options for applications in Azure Kubernetes Serviceto plan your storage configuration.
Limitations
The following limitations apply when you create AKS clusters that support multiple node pools:
SeeQuotas, virtual machine size restrictions, and region availability in Azure Kubernetes Service (AKS).
You can delete the system node pool if you have another system node pool to take its place in the AKS cluster. Otherwise, you cannot delete the system node pool.
System pools must contain at least one node, and user node pools may contain zero or more nodes.
The AKS cluster must use the Standard SKU load balancer to use multiple node pools. This feature isn't supported with Basic SKU load balancers.
The AKS cluster must use Virtual Machine Scale Sets for the nodes.
The name of a node pool may only contain lowercase alphanumeric characters and must begin with a lowercase letter.For Linux node pools, the length must be between 1-12 characters.For Windows node pools, the length must be between 1-6 characters.
For Linux node pools, the length must be between 1-12 characters.
For Windows node pools, the length must be between 1-6 characters.
All node pools must reside in the same virtual network.
When you create multiple node pools at cluster creation time, the Kubernetes versions for the node pools must match the version set for the control plane.
Create an AKS cluster
Important
If you run a single system node pool for your AKS cluster in a production environment, we recommend you use at least three nodes for the node pool. If one node goes down, the redundancy is compromised. You can mitigate this risk by having more system node pool nodes.
Create an Azure resource group using theaz group createcommand.az group create --name $RESOURCE_GROUP_NAME --location $LOCATION
Create an Azure resource group using theaz group createcommand.
az group create
az group create --name $RESOURCE_GROUP_NAME --location $LOCATION
az group create --name $RESOURCE_GROUP_NAME --location $LOCATION
Create an AKS cluster with a single node pool using theaz aks createcommand.az aks create \
    --resource-group $RESOURCE_GROUP_NAME \
    --name $CLUSTER_NAME \
    --vm-set-type VirtualMachineScaleSets \
    --node-count 2 \
    --location $LOCATION \
    --load-balancer-sku standard \
    --generate-ssh-keysIt takes a few minutes to create the cluster.
Create an AKS cluster with a single node pool using theaz aks createcommand.
az aks create
az aks create \
    --resource-group $RESOURCE_GROUP_NAME \
    --name $CLUSTER_NAME \
    --vm-set-type VirtualMachineScaleSets \
    --node-count 2 \
    --location $LOCATION \
    --load-balancer-sku standard \
    --generate-ssh-keys
az aks create \
    --resource-group $RESOURCE_GROUP_NAME \
    --name $CLUSTER_NAME \
    --vm-set-type VirtualMachineScaleSets \
    --node-count 2 \
    --location $LOCATION \
    --load-balancer-sku standard \
    --generate-ssh-keys
It takes a few minutes to create the cluster.
When the cluster is ready, get the cluster credentials using theaz aks get-credentialscommand.az aks get-credentials --resource-group $RESOURCE_GROUP_NAME --name $CLUSTER_NAME
When the cluster is ready, get the cluster credentials using theaz aks get-credentialscommand.
az aks get-credentials
az aks get-credentials --resource-group $RESOURCE_GROUP_NAME --name $CLUSTER_NAME
az aks get-credentials --resource-group $RESOURCE_GROUP_NAME --name $CLUSTER_NAME
Add a node pool
The cluster created in the previous step has a single node pool. In this section, we add a second node pool to the cluster.
Create a new node pool using theaz aks nodepool addcommand. The following example creates a node pool namedmynodepoolthat runsthreenodes:az aks nodepool add \
    --resource-group $RESOURCE_GROUP_NAME \
    --cluster-name $CLUSTER_NAME \
    --name $NODE_POOL_NAME \
    --node-count 3
Create a new node pool using theaz aks nodepool addcommand. The following example creates a node pool namedmynodepoolthat runsthreenodes:
az aks nodepool add
az aks nodepool add \
    --resource-group $RESOURCE_GROUP_NAME \
    --cluster-name $CLUSTER_NAME \
    --name $NODE_POOL_NAME \
    --node-count 3
az aks nodepool add \
    --resource-group $RESOURCE_GROUP_NAME \
    --cluster-name $CLUSTER_NAME \
    --name $NODE_POOL_NAME \
    --node-count 3
Check the status of your node pools using theaz aks node pool listcommand and specify your resource group and cluster name.az aks nodepool list --resource-group $RESOURCE_GROUP_NAME --cluster-name $CLUSTER_NAMEThe following example output showsmynodepoolhas been successfully created with three nodes. When the AKS cluster was created in the previous step, a defaultnodepool1was created with a node count of2.[
  {
    ...
    "count": 3,
    ...
    "name": "mynodepool",
    "orchestratorVersion": "1.15.7",
    ...
    "vmSize": "Standard_DS2_v2",
    ...
  },
  {
    ...
    "count": 2,
    ...
    "name": "nodepool1",
    "orchestratorVersion": "1.15.7",
    ...
    "vmSize": "Standard_DS2_v2",
    ...
  }
]
Check the status of your node pools using theaz aks node pool listcommand and specify your resource group and cluster name.
az aks node pool list
az aks nodepool list --resource-group $RESOURCE_GROUP_NAME --cluster-name $CLUSTER_NAME
az aks nodepool list --resource-group $RESOURCE_GROUP_NAME --cluster-name $CLUSTER_NAME
The following example output showsmynodepoolhas been successfully created with three nodes. When the AKS cluster was created in the previous step, a defaultnodepool1was created with a node count of2.
[
  {
    ...
    "count": 3,
    ...
    "name": "mynodepool",
    "orchestratorVersion": "1.15.7",
    ...
    "vmSize": "Standard_DS2_v2",
    ...
  },
  {
    ...
    "count": 2,
    ...
    "name": "nodepool1",
    "orchestratorVersion": "1.15.7",
    ...
    "vmSize": "Standard_DS2_v2",
    ...
  }
]
[
  {
    ...
    "count": 3,
    ...
    "name": "mynodepool",
    "orchestratorVersion": "1.15.7",
    ...
    "vmSize": "Standard_DS2_v2",
    ...
  },
  {
    ...
    "count": 2,
    ...
    "name": "nodepool1",
    "orchestratorVersion": "1.15.7",
    ...
    "vmSize": "Standard_DS2_v2",
    ...
  }
]
Azure Linux node pools
The Azure Linux container host for AKS is an open-source Linux distribution available as an AKS container host. It provides high reliability, security, and consistency. It only includes the minimal set of packages needed for running container workloads, which improve boot times and overall performance.
Add an Azure Linux node pool
Add an Azure Linux node pool into your existing cluster using theaz aks nodepool addcommand and specify--os-sku AzureLinux.az aks nodepool add \
    --resource-group $RESOURCE_GROUP_NAME \
    --cluster-name $CLUSTER_NAME \
    --name $AZ_LINUX_NODE_POOL_NAME \
    --os-sku AzureLinux
Add an Azure Linux node pool into your existing cluster using theaz aks nodepool addcommand and specify--os-sku AzureLinux.
az aks nodepool add
--os-sku AzureLinux
az aks nodepool add \
    --resource-group $RESOURCE_GROUP_NAME \
    --cluster-name $CLUSTER_NAME \
    --name $AZ_LINUX_NODE_POOL_NAME \
    --os-sku AzureLinux
az aks nodepool add \
    --resource-group $RESOURCE_GROUP_NAME \
    --cluster-name $CLUSTER_NAME \
    --name $AZ_LINUX_NODE_POOL_NAME \
    --os-sku AzureLinux
Migrate Ubuntu nodes to Azure Linux nodes
You can migrate your existing Ubuntu nodes to Azure Linux using one of the following methods:
Remove existing node pools and add new Azure Linux node pools.
In-place OS SKU migration.
Node pools with unique subnets
A workload may require splitting cluster nodes into separate pools for logical isolation. Separate subnets dedicated to each node pool in the cluster can help support this isolation, which can address requirements such as having noncontiguous virtual network address space to split across node pools.
Note
Make sure to use Azure CLI version2.35.0or later.
2.35.0
Limitations
All subnets assigned to node pools must belong to the same virtual network.
System pods must have access to all nodes and pods in the cluster to provide critical functionality, such as DNS resolution and tunneling kubectl logs/exec/port-forward proxy.
If you expand your VNET after creating the cluster, you must update your cluster before adding a subnet outside the original CIDR block. While AKS errors-out on the agent pool add, theaks-previewAzure CLI extension (version 0.5.66 and higher) now supports runningaz aks updatecommand with only the required-g <resourceGroup> -n <clusterName>arguments. This command performs an update operation without making any changes, which can recover a cluster stuck in a failed state.
aks-preview
az aks update
-g <resourceGroup> -n <clusterName>
In clusters with Kubernetes version less than 1.23.3, kube-proxy SNATs traffic from new subnets, which can cause Azure Network Policy to drop the packets.
Windows nodes SNAT traffic to the new subnets until the node pool is reimaged.
Internal load balancers default to one of the node pool subnets.
Add a node pool with a unique subnet
Add a node pool with a unique subnet into your existing cluster using theaz aks nodepool addcommand and specify the--vnet-subnet-id.az aks nodepool add \
    --resource-group $RESOURCE_GROUP_NAME \
    --cluster-name $CLUSTER_NAME \
    --name $NODE_POOL_NAME \
    --node-count 3 \
    --vnet-subnet-id $SUBNET_RESOURCE_ID
Add a node pool with a unique subnet into your existing cluster using theaz aks nodepool addcommand and specify the--vnet-subnet-id.
az aks nodepool add
--vnet-subnet-id
az aks nodepool add \
    --resource-group $RESOURCE_GROUP_NAME \
    --cluster-name $CLUSTER_NAME \
    --name $NODE_POOL_NAME \
    --node-count 3 \
    --vnet-subnet-id $SUBNET_RESOURCE_ID
az aks nodepool add \
    --resource-group $RESOURCE_GROUP_NAME \
    --cluster-name $CLUSTER_NAME \
    --name $NODE_POOL_NAME \
    --node-count 3 \
    --vnet-subnet-id $SUBNET_RESOURCE_ID
FIPS-enabled node pools
For more information on enabling Federal Information Process Standard (FIPS) for your AKS cluster, seeEnable Federal Information Process Standard (FIPS) for Azure Kubernetes Service (AKS) node pools.
Windows Server node pools withcontainerd
containerd
Beginning in Kubernetes version 1.20 and higher, you can specifycontainerdas the container runtime for Windows Server 2019 node pools. Starting with Kubernetes 1.23,containerdis the default and only container runtime for Windows.
containerd
containerd
Important
When usingcontainerdwith Windows Server 2019 node pools:
containerd
Both the control plane and Windows Server 2019 node pools must use Kubernetes version 1.20 or greater.
When you create or update a node pool to run Windows Server containers, the default value for--node-vm-sizeisStandard_D2s_v3, which was minimum recommended size for Windows Server 2019 node pools prior to Kubernetes version 1.20. The minimum recommended size for Windows Server 2019 node pools usingcontainerdisStandard_D4s_v3. When setting the--node-vm-sizeparameter, check the list ofrestricted VM sizes.
--node-vm-size
containerd
--node-vm-size
We recommended usingtaints or labelswith your Windows Server 2019 node pools runningcontainerdand tolerations or node selectors with your deployments to guarantee your workloads are scheduled correctly.
containerd
Add a Windows Server node pool withcontainerd
containerd
Add a Windows Server node pool withcontainerdinto your existing cluster using theaz aks nodepool add.NoteIf you don't specify theWindowsContainerRuntime=containerdcustom header, the node pool still usescontainerdas the container runtime by default.az aks nodepool add \
    --resource-group $RESOURCE_GROUP_NAME \
    --cluster-name $CLUSTER_NAME \
    --os-type Windows \
    --name $CONTAINER_D_NODE_POOL_NAME \
    --node-vm-size Standard_D4s_v3 \
    --kubernetes-version 1.20.5 \
    --aks-custom-headers WindowsContainerRuntime=containerd \
    --node-count 1
Add a Windows Server node pool withcontainerdinto your existing cluster using theaz aks nodepool add.
containerd
az aks nodepool add
Note
If you don't specify theWindowsContainerRuntime=containerdcustom header, the node pool still usescontainerdas the container runtime by default.
WindowsContainerRuntime=containerd
containerd
az aks nodepool add \
    --resource-group $RESOURCE_GROUP_NAME \
    --cluster-name $CLUSTER_NAME \
    --os-type Windows \
    --name $CONTAINER_D_NODE_POOL_NAME \
    --node-vm-size Standard_D4s_v3 \
    --kubernetes-version 1.20.5 \
    --aks-custom-headers WindowsContainerRuntime=containerd \
    --node-count 1
az aks nodepool add \
    --resource-group $RESOURCE_GROUP_NAME \
    --cluster-name $CLUSTER_NAME \
    --os-type Windows \
    --name $CONTAINER_D_NODE_POOL_NAME \
    --node-vm-size Standard_D4s_v3 \
    --kubernetes-version 1.20.5 \
    --aks-custom-headers WindowsContainerRuntime=containerd \
    --node-count 1
Upgrade a specific existing Windows Server node pool tocontainerd
containerd
Upgrade a specific node pool from Docker tocontainerdusing theaz aks nodepool upgradecommand.az aks nodepool upgrade \
    --resource-group $RESOURCE_GROUP_NAME \
    --cluster-name $CLUSTER_NAME \
    --name $CONTAINER_D_NODE_POOL_NAME \
    --kubernetes-version 1.20.7 \
    --aks-custom-headers WindowsContainerRuntime=containerd
Upgrade a specific node pool from Docker tocontainerdusing theaz aks nodepool upgradecommand.
containerd
az aks nodepool upgrade
az aks nodepool upgrade \
    --resource-group $RESOURCE_GROUP_NAME \
    --cluster-name $CLUSTER_NAME \
    --name $CONTAINER_D_NODE_POOL_NAME \
    --kubernetes-version 1.20.7 \
    --aks-custom-headers WindowsContainerRuntime=containerd
az aks nodepool upgrade \
    --resource-group $RESOURCE_GROUP_NAME \
    --cluster-name $CLUSTER_NAME \
    --name $CONTAINER_D_NODE_POOL_NAME \
    --kubernetes-version 1.20.7 \
    --aks-custom-headers WindowsContainerRuntime=containerd
Upgrade all existing Windows Server node pools tocontainerd
containerd
Upgrade all node pools from Docker tocontainerdusing theaz aks nodepool upgradecommand.az aks nodepool upgrade \
    --resource-group $RESOURCE_GROUP_NAME \
    --cluster-name $CLUSTER_NAME \
    --kubernetes-version 1.20.7 \
    --aks-custom-headers WindowsContainerRuntime=containerd
Upgrade all node pools from Docker tocontainerdusing theaz aks nodepool upgradecommand.
containerd
az aks nodepool upgrade
az aks nodepool upgrade \
    --resource-group $RESOURCE_GROUP_NAME \
    --cluster-name $CLUSTER_NAME \
    --kubernetes-version 1.20.7 \
    --aks-custom-headers WindowsContainerRuntime=containerd
az aks nodepool upgrade \
    --resource-group $RESOURCE_GROUP_NAME \
    --cluster-name $CLUSTER_NAME \
    --kubernetes-version 1.20.7 \
    --aks-custom-headers WindowsContainerRuntime=containerd
Node pools with Ephemeral OS disks
Add a node pool that uses Ephemeral OS disks to an existing cluster using theaz aks nodepool addcommand with the--node-osdisk-typeflag set toEphemeral.NoteYou can specify Ephemeral OS disks during cluster creation using the--node-osdisk-typeflag with theaz aks createcommand.If you want to create node pools with network-attached OS disks, you can do so by specifying--node-osdisk-type Managed.az aks nodepool add --name $EPHEMERAL_NODE_POOL_NAME --cluster-name $CLUSTER_NAME --resource-group $RESOURCE_GROUP_NAME -s Standard_DS3_v2 --node-osdisk-type Ephemeral
Add a node pool that uses Ephemeral OS disks to an existing cluster using theaz aks nodepool addcommand with the--node-osdisk-typeflag set toEphemeral.
az aks nodepool add
--node-osdisk-type
Ephemeral
Note
You can specify Ephemeral OS disks during cluster creation using the--node-osdisk-typeflag with theaz aks createcommand.
--node-osdisk-type
az aks create
If you want to create node pools with network-attached OS disks, you can do so by specifying--node-osdisk-type Managed.
--node-osdisk-type Managed
az aks nodepool add --name $EPHEMERAL_NODE_POOL_NAME --cluster-name $CLUSTER_NAME --resource-group $RESOURCE_GROUP_NAME -s Standard_DS3_v2 --node-osdisk-type Ephemeral
az aks nodepool add --name $EPHEMERAL_NODE_POOL_NAME --cluster-name $CLUSTER_NAME --resource-group $RESOURCE_GROUP_NAME -s Standard_DS3_v2 --node-osdisk-type Ephemeral
Important
With Ephemeral OS, you can deploy VMs and instance images up to the size of the VM cache. The default node OS disk configuration in AKS uses 128 GB, which means that you need a VM size that has a cache larger than 128 GB. The default Standard_DS2_v2 has a cache size of 86 GB, which isn't large enough. The Standard_DS3_v2 VM SKU has a cache size of 172 GB, which is large enough. You can also reduce the default size of the OS disk by using--node-osdisk-size, but keep in mind the minimum size for AKS images is 30 GB.
--node-osdisk-size
Delete a node pool
If you no longer need a node pool, you can delete it and remove the underlying VM nodes.
Caution
When you delete a node pool, AKS doesn't perform cordon and drain, and there are no recovery options for data loss that may occur when you delete a node pool. If pods can't be scheduled on other node pools, those applications become unavailable. Make sure you don't delete a node pool when in-use applications don't have data backups or the ability to run on other node pools in your cluster. To minimize the disruption of rescheduling pods currently running on the node pool you want to delete, perform a cordon and drain on all nodes in the node pool before deleting.
Delete a node pool using theaz aks nodepool deletecommand and specify the node pool name.az aks nodepool delete --resource-group $RESOURCE_GROUP_NAME --cluster-name $CLUSTER_NAME --name $NODE_POOL_NAME --no-waitIt takes a few minutes to delete the nodes and the node pool.
Delete a node pool using theaz aks nodepool deletecommand and specify the node pool name.
az aks nodepool delete
az aks nodepool delete --resource-group $RESOURCE_GROUP_NAME --cluster-name $CLUSTER_NAME --name $NODE_POOL_NAME --no-wait
az aks nodepool delete --resource-group $RESOURCE_GROUP_NAME --cluster-name $CLUSTER_NAME --name $NODE_POOL_NAME --no-wait
It takes a few minutes to delete the nodes and the node pool.
Next steps
In this article, you learned how to create multiple node pools in an AKS cluster. To learn about how to manage multiple node pools, seeManage multiple node pools for a cluster in Azure Kubernetes Service (AKS).
Azure Kubernetes Service

Additional resources