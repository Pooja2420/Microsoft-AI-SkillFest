Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Microsoft Entra SSO integration with a GitHub Enterprise Cloud Organization
Article
2025-03-25
37 contributors
In this article
In this article,  you learn how to integrate a GitHub Enterprise CloudOrganizationwith Microsoft Entra ID. When you integrate a GitHub Enterprise Cloud Organization with Microsoft Entra ID, you can:
Control in Microsoft Entra ID who has access to your GitHub Enterprise Cloud Organization.
Manage access to your GitHub Enterprise Cloud Organization in one central location.
Prerequisites
The scenario outlined in this article assumes that you already have the following prerequisites:
A Microsoft Entra user account with an active subscription. If you don't already have one, you canCreate an account for free.
One of the following roles:Application AdministratorCloud Application AdministratorApplication Owner.
Application Administrator
Cloud Application Administrator
Application Owner.
A GitHub organization created inGitHub Enterprise Cloud, which requires theGitHub Enterprise billing plan.
Scenario description
In this article,  you configure and test Microsoft Entra single sign-on in a test environment.
GitHub supportsSPinitiated SSO.
GitHub supportsSPinitiated SSO.
GitHub supportsAutomateduser provisioning (organization invitations).
GitHub supportsAutomateduser provisioning (organization invitations).
Adding GitHub from the gallery
To configure the integration of GitHub into Microsoft Entra ID, you need to add GitHub from the gallery to your list of managed SaaS apps.
Sign in to theMicrosoft Entra admin centeras at least aCloud Application Administrator.
Browse toEntra ID>Enterprise apps>New application.
In theAdd from the gallerysection, typeGitHubin the search box.
SelectGitHub Enterprise Cloud - Organizationfrom results panel and then add the app. Wait a few seconds while the app is added to your tenant.
Alternatively, you can also use theEnterprise App Configuration Wizard. In this wizard, you can add an application to your tenant, add users/groups to the app, assign roles, and walk through the SSO configuration as well.Learn more about Microsoft 365 wizards.

Configure and test Microsoft Entra SSO for GitHub
Configure and test Microsoft Entra SSO with GitHub using a test user calledB.Simon. For SSO to work, you need to establish a link relationship between a Microsoft Entra user and the related user in GitHub.
To configure and test Microsoft Entra SSO with GitHub, perform the following steps:
Configure Microsoft Entra SSO- to enable your users to use this feature.Create a Microsoft Entra test user- to test Microsoft Entra single sign-on with B.Simon.Assign the Microsoft Entra test user- to enable B.Simon to use Microsoft Entra single sign-on.
Create a Microsoft Entra test user- to test Microsoft Entra single sign-on with B.Simon.
Assign the Microsoft Entra test user- to enable B.Simon to use Microsoft Entra single sign-on.
Configure GitHub SSO- to configure the single sign-on settings on application side.Create GitHub test user- to have a counterpart of B.Simon in GitHub that's linked to the Microsoft Entra representation of user.
Create GitHub test user- to have a counterpart of B.Simon in GitHub that's linked to the Microsoft Entra representation of user.
Test SSO- to verify whether the configuration works.

Configure Microsoft Entra SSO
Follow these steps to enable Microsoft Entra SSO.
Sign in to theMicrosoft Entra admin centeras at least aCloud Application Administrator.
Sign in to theMicrosoft Entra admin centeras at least aCloud Application Administrator.
Browse toEntra ID>Enterprise apps>GitHub>Single sign-on.
Browse toEntra ID>Enterprise apps>GitHub>Single sign-on.
On theSelect a single sign-on methodpage, selectSAML.
On theSelect a single sign-on methodpage, selectSAML.
On theSet up single sign-on with SAMLpage, select the pencil icon forBasic SAML Configurationto edit the settings.
On theSet up single sign-on with SAMLpage, select the pencil icon forBasic SAML Configurationto edit the settings.

On theBasic SAML Configurationsection, enter the values for the following fields:a. In theIdentifier (Entity ID)text box, type a URL using the following pattern:https://github.com/orgs/<Organization ID>b. In theReply URLtext box, type a URL using the following pattern:https://github.com/orgs/<Organization ID>/saml/consumec. In theSign on URLtext box, type a URL using the following pattern:https://github.com/orgs/<Organization ID>/ssoNotePlease note that these aren't the real values. You have to update these values with the actual Identifier,Reply URL and Sign on URL. Here we suggest you to use the unique value of string in the Identifier. Go to GitHub Admin section to retrieve these values.
On theBasic SAML Configurationsection, enter the values for the following fields:
a. In theIdentifier (Entity ID)text box, type a URL using the following pattern:https://github.com/orgs/<Organization ID>
https://github.com/orgs/<Organization ID>
b. In theReply URLtext box, type a URL using the following pattern:https://github.com/orgs/<Organization ID>/saml/consume
https://github.com/orgs/<Organization ID>/saml/consume
c. In theSign on URLtext box, type a URL using the following pattern:https://github.com/orgs/<Organization ID>/sso
https://github.com/orgs/<Organization ID>/sso
Note
Please note that these aren't the real values. You have to update these values with the actual Identifier,Reply URL and Sign on URL. Here we suggest you to use the unique value of string in the Identifier. Go to GitHub Admin section to retrieve these values.
Your GitHub application expects the SAML assertions in a specific format, which requires you to add custom attribute mappings to your SAML token attributes configuration. The following screenshot shows the list of default attributes, whereasUnique User Identifier (Name ID)is mapped withuser.userprincipalname. GitHub application expectsUnique User Identifier (Name ID)to be mapped withuser.mail, so you need to edit the attribute mapping by selectingEditicon and change the attribute mapping.
Your GitHub application expects the SAML assertions in a specific format, which requires you to add custom attribute mappings to your SAML token attributes configuration. The following screenshot shows the list of default attributes, whereasUnique User Identifier (Name ID)is mapped withuser.userprincipalname. GitHub application expectsUnique User Identifier (Name ID)to be mapped withuser.mail, so you need to edit the attribute mapping by selectingEditicon and change the attribute mapping.

On theSet up Single Sign-On with SAMLpage, in theSAML Signing Certificatesection, selectDownloadto download theCertificate (Base64)from the given options as per your requirement and save it on your computer.
On theSet up Single Sign-On with SAMLpage, in theSAML Signing Certificatesection, selectDownloadto download theCertificate (Base64)from the given options as per your requirement and save it on your computer.

On theSet up GitHubsection, copy the appropriate URL(s) as per your requirement.
On theSet up GitHubsection, copy the appropriate URL(s) as per your requirement.


Create and assign Microsoft Entra test user
Follow the guidelines in thecreate and assign a user accountquickstart to create a test user account called B.Simon.
Configure GitHub SSO
In a different web browser window, sign into your GitHub organization site as an administrator.
In a different web browser window, sign into your GitHub organization site as an administrator.
Navigate toSettingsand selectSecurity.
Navigate toSettingsand selectSecurity.

Check theEnable SAML authenticationbox, revealing the Single Sign-on configuration fields, perform the following steps:a. Copysingle sign-on URLvalue and paste this value into theSign on URLtext box in theBasic SAML Configuration.b. Copyassertion consumer service URLvalue and paste this value into theReply URLtext box in theBasic SAML Configuration.
Check theEnable SAML authenticationbox, revealing the Single Sign-on configuration fields, perform the following steps:

a. Copysingle sign-on URLvalue and paste this value into theSign on URLtext box in theBasic SAML Configuration.
b. Copyassertion consumer service URLvalue and paste this value into theReply URLtext box in theBasic SAML Configuration.
Configure the following fields:a. In theSign on URLtextbox, pasteLogin URLvalue which you copied previously.b. In theIssuertextbox, pasteMicrosoft Entra Identifiervalue which you copied previously.c. Open the downloaded certificate from Azure portal in notepad, paste the content into thePublic Certificatetextbox.d. SelectEditicon to edit theSignature MethodandDigest MethodfromRSA-SHA1andSHA1toRSA-SHA256andSHA256as shown below.e. Update theassertion consumer service URL (Reply URL)from the default URL so that it the URL in GitHub matches the URL in the Azure app registration.
Configure the following fields:

a. In theSign on URLtextbox, pasteLogin URLvalue which you copied previously.
b. In theIssuertextbox, pasteMicrosoft Entra Identifiervalue which you copied previously.
c. Open the downloaded certificate from Azure portal in notepad, paste the content into thePublic Certificatetextbox.
d. SelectEditicon to edit theSignature MethodandDigest MethodfromRSA-SHA1andSHA1toRSA-SHA256andSHA256as shown below.
e. Update theassertion consumer service URL (Reply URL)from the default URL so that it the URL in GitHub matches the URL in the Azure app registration.

SelectTest SAML configurationto confirm that no validation failures or errors during SSO.
SelectTest SAML configurationto confirm that no validation failures or errors during SSO.

SelectSave
SelectSave
Note
Single sign-on in GitHub authenticates to a specific organization in GitHub and doesn't replace the authentication of GitHub itself. Therefore, if the user's github.com session has expired, you may be asked to authenticate with GitHub's ID/password during the single sign-on process.
Create GitHub test user
The objective of this section is to create a user called Britta Simon in GitHub. GitHub supports automatic user provisioning, which is by default enabled. You can find more detailshereon how to configure automatic user provisioning.
If you need to create user manually, perform following steps:
Log in to your GitHub company site as an administrator.
Log in to your GitHub company site as an administrator.
SelectPeople.
SelectPeople.

SelectInvite member.
SelectInvite member.

On theInvite memberdialog page, perform the following steps:a. In theEmailtextbox, type the email address of Britta Simon account.b. SelectSend Invitation.NoteThe Microsoft Entra account holder will receive an email and follow a link to confirm their account before it becomes active.
On theInvite memberdialog page, perform the following steps:
a. In theEmailtextbox, type the email address of Britta Simon account.

b. SelectSend Invitation.

Note
The Microsoft Entra account holder will receive an email and follow a link to confirm their account before it becomes active.
Test SSO
In this section, you test your Microsoft Entra single sign-on configuration with following options.
SelectTest this application, this option redirects to GitHub Sign-on URL where you can initiate the login flow.
SelectTest this application, this option redirects to GitHub Sign-on URL where you can initiate the login flow.
Go to GitHub Sign-on URL directly and initiate the login flow from there.
Go to GitHub Sign-on URL directly and initiate the login flow from there.
You can use Microsoft My Apps. When you select the GitHub tile in the My Apps, this option redirects to GitHub Sign-on URL. For more information about the My Apps, seeIntroduction to the My Apps.
You can use Microsoft My Apps. When you select the GitHub tile in the My Apps, this option redirects to GitHub Sign-on URL. For more information about the My Apps, seeIntroduction to the My Apps.
Related content
Once you configure GitHub you can enforce Session control, which protects exfiltration and infiltration of your organizationâs sensitive data in real time. Session control extends from Conditional Access.Learn how to enforce session control with Microsoft Defender for Cloud Apps.
Feedback
Was this page helpful?
Additional resources