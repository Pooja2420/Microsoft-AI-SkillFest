Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Deploy web apps to an IIS server on a Windows VM
Article
2024-08-27
4 contributors
In this article
Azure DevOps Services | Azure DevOps Server 2022 - Azure DevOps Server 2019
Learn how to use a Classic pipeline to deploy an ASP.NET Core or Node.js web app to an IIS web server virtual machine (VM) in a Windows deployment group.
Prerequisites
An Azure DevOps organization and project. To create an organization and project, seeCreate a new organizationorCreate a project in Azure DevOps.
.NET Core
Node
A Classic pipeline to build your project. For instructions, seeBuild .NET Core apps.
A configured IIS web server. For instructions, seeHost ASP.NET Core on Windows with IIS.
A Classic pipeline to build your project. For instructions, seeBuild Node.js apps.
A configured IIS web server. For instructions, seeHosting node.js applications in IIS on Windows.
Create a deployment group
A deployment group is a logical set of target machines that each have an Azure Pipelines deployment agent installed. Deployment groups make it easier to organize the servers that you want to use to host your app. Each machine interacts with Azure Pipelines to coordinate the deployment of your app.
To create the deployment group:
From your Azure DevOps project, selectPipelines>Deployment groupsfrom the left menu.
From your Azure DevOps project, selectPipelines>Deployment groupsfrom the left menu.
On theDeployment groupsscreen, selectNew, or selectAdd a deployment groupif this deployment group is the first one in the project.
On theDeployment groupsscreen, selectNew, or selectAdd a deployment groupif this deployment group is the first one in the project.
Enter aDeployment group nameand optionalDescription, and then selectCreate.
Enter aDeployment group nameand optionalDescription, and then selectCreate.
On the next screen, in the machine registration section, selectWindowsfor theType of target to register. A registration script is generated.
On the next screen, in the machine registration section, selectWindowsfor theType of target to register. A registration script is generated.
SelectUse a personal access token in the script for authentication. For more information, seeUse personal access tokens.
SelectUse a personal access token in the script for authentication. For more information, seeUse personal access tokens.
SelectCopy script to the clipboard.
SelectCopy script to the clipboard.

On each of your target VMs:
Use an account with administrative permissions to sign in to the VM.
Use an account with administrative permissions to sign in to the VM.
To register the machine and install the agent, open an Administrator PowerShell command prompt and run the script you copied.When you're prompted to configure optional tags for the agent, press Enter to skip. When you're prompted for the user account, press Enter to accept the defaults.NoteThe agent running the pipeline must have access to theC:\Windows\system32\inetsrv\directory. For more information, seeSecurity groups, service accounts, and permissions.
To register the machine and install the agent, open an Administrator PowerShell command prompt and run the script you copied.
When you're prompted to configure optional tags for the agent, press Enter to skip. When you're prompted for the user account, press Enter to accept the defaults.
Note
The agent running the pipeline must have access to theC:\Windows\system32\inetsrv\directory. For more information, seeSecurity groups, service accounts, and permissions.
After you set up a target server, the script should return the messageService vstsagent.{computer-name} started successfully.
Service vstsagent.{computer-name} started successfully
On theTargetstab of the Azure PipelinesDeployment groupspage, you can verify that the VMs are listed and the agents are running. Refresh the page if necessary.
Create a release pipeline
Deploy the artifacts from your build pipeline to your IIS server by using a release pipeline.
From your Azure DevOps project, selectPipelines>Releases, and then selectNew>New release pipeline.
From your Azure DevOps project, selectPipelines>Releases, and then selectNew>New release pipeline.
On theSelect a templatescreen, search for and selectIIS website deployment, and then selectApply.
On theSelect a templatescreen, search for and selectIIS website deployment, and then selectApply.

In your release pipeline, selectAdd an artifact.
In your release pipeline, selectAdd an artifact.
On theAdd an artifactscreen, selectBuild, select yourProjectand yourSource (build pipeline), and then selectAdd.
On theAdd an artifactscreen, selectBuild, select yourProjectand yourSource (build pipeline), and then selectAdd.
On the release pipeline screen, select theContinuous deployment triggericon in theArtifactssection.
On the release pipeline screen, select theContinuous deployment triggericon in theArtifactssection.
On theContinuous deploymentscreen, enable theContinuous deployment trigger,
On theContinuous deploymentscreen, enable theContinuous deployment trigger,
UnderBuild branch filters, add themainbuild branch as a filter.
UnderBuild branch filters, add themainbuild branch as a filter.
On the release pipeline screen, selectTasks, and then selectIIS Deployment.
On the release pipeline screen, selectTasks, and then selectIIS Deployment.
On the settings screen, underDeployment group, select the deployment group you created earlier.
On the settings screen, underDeployment group, select the deployment group you created earlier.
SelectSave.
SelectSave.

Deploy your app
FromPipelines>Releases, select the release pipeline you just created, and then selectCreate release.
Check that the artifact version you want to use is selected, and then selectCreate.
Select the release name link in the information bar messageRelease <release name link> has been queued.
SelectView logsto see the logs and agent output.
Related articles
Deploy from multiple branches
Deploy pull request artifacts
Feedback
Was this page helpful?
Additional resources