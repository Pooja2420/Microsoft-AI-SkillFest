Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Add or modify a work item type
Article
2025-01-09
11 contributors
In this article
Azure DevOps Server 2022 - Azure DevOps Server 2019
Your project contains a number of work item types, based on the process used to create your project, such asAgile,Basic,Scrum, orCMMI.  A work item type is the object you use totrack different types of work.
Note
For Azure DevOps Services or for project collections that use the Inherited process model, seeAdd and manage work item types.
You can modify an existing work item type or add a custom work item type based on your team's tracking requirements or workflow processes. The most common reasons to modify a work item type are to add or modify the set of fields or field rules, change the workflow, or customize the work item form.
SeeAdd or modify a fieldif you want to add a custom field or modify the field rules or attributes of an existing field.
Most work item type customizations are made to the work item type XML definition, however, other customization are made through the Process Configuration definition or through thewitadmincommand line tool.
Note
For Azure DevOps Services or for collections that use the Inherited process model, seeAdd and manage work item types.
Add or modify a field to an existing work item type
Add a custom work item type, modify a work item type
Change the workflow (states, reasons, transitions)
Modify the work item form
Specify the work item type color
Specify the work item type icon
Specify the workflow state color
Add or remove a work item type from the backlog or task board
Add a custom work item type to a backlog or board
Add a portfolio backlog
List work item types
Deactivate or disable a work item type
Rename a work item type
Delete a work item type
Prerequisites
To list work item types, have yourView project-level informationpermission for the project in the collection set toAllow.
To add or customize a work item type by customizing a process template, be a member of the Project Collection Administrators group or have yourEdit processpermission set toAllow.
To get added as an administrator, seeChange project collection-level permissions.
How do modifications to work item types affect existing work items?
The following table summarizes the effect on existing work items when you modify fields or work item type definitions.
If you want to completely remove the fields from the data store, usewitadmin deletefieldcommand line tool.
witadmin deletefield

Import and export work item type definition files
Note
If you use the Hosted XML process model, you need to import and export the process template used by your project. For details, seeCustomize the work item tracking web form.
If you don't have administration permissions for your project,get them.Open a Command Prompt window according to the instructions provided inwitAdmin: Customize and manage objects for tracking work. For example:
If you don't have administration permissions for your project,get them.

Open a Command Prompt window according to the instructions provided inwitAdmin: Customize and manage objects for tracking work. For example:


Export the work item type definition file where you want to modify or add a field. Specify the name of the work item type and a name for the file.witadmin exportwitd /collection:CollectionURL /p:ProjectName /n:TypeName /f:"DirectoryPath/FileName.xml"An example of aCollectionURLishttp://MyServer:8080/tfs/TeamProjectCollectionName.
Export the work item type definition file where you want to modify or add a field. Specify the name of the work item type and a name for the file.
witadmin exportwitd /collection:CollectionURL /p:ProjectName /n:TypeName /f:"DirectoryPath/FileName.xml"
witadmin exportwitd /collection:CollectionURL /p:ProjectName /n:TypeName /f:"DirectoryPath/FileName.xml"
An example of aCollectionURLishttp://MyServer:8080/tfs/TeamProjectCollectionName.
http://MyServer:8080/tfs/TeamProjectCollectionName
Edit the file. For details, seeIndex to XML element definitions.
Edit the file. For details, seeIndex to XML element definitions.
Import the definition file.witadmin importwitd /collection:CollectionURL /p:ProjectName /f:"DirectoryPath/FileName.xml"
Import the definition file.
witadmin importwitd /collection:CollectionURL /p:ProjectName /f:"DirectoryPath/FileName.xml"
witadmin importwitd /collection:CollectionURL /p:ProjectName /f:"DirectoryPath/FileName.xml"
Open the web portal or refresh the page to view the changes.For more information about usingwitadmin, seeImport, export, and manage work item types.
Open the web portal or refresh the page to view the changes.
For more information about usingwitadmin, seeImport, export, and manage work item types.
witadmin

Add or modify a work item type
To add a custom work item type or modify an existing work item type, you define or modify the XML definition file and then import it to your projectbased on the process model you use. You modify a work item type by specifying the elements defined within the three main sections of the definition file:FIELDS,WORKFLOW, andFORM.

The easiest way to add a new work item type is to copy an existing work item type and then modify the definition file.

Add or modify a field, field rule, label, or empty text
Any field that you want to use to track data must be added to the definition file. This is true for all but system fields (fields whose reference name start withSystem.). All System fields are defined for all work item types, whether or not you include them in the work item type definition. To learn more about each field, seeWork item field index.
You add fields and field rules to theFIELDSsection. For the field to appear on the work item form, you must also add it to theFORMsection of the definition.
For example, to add the work item ID to a form, specify the following XML syntax within theFORMsection.
FORM
<Control FieldName="System.ID" Type="FieldControl" Label="ID" LabelPosition="Left" />
<Control FieldName="System.ID" Type="FieldControl" Label="ID" LabelPosition="Left" />
To learn more about defining fields, seeAdd or modify a field.

Modify the workflow
STATESandREASONSsections within theWORKFLOWspecify the pick list values in theStateandReasonfields. They track the status of work items. TheTRANSITIONSsection specifies the valid transitions between states, as shown in the following illustration. You specify both forward and regressive transitions.

You change the workflow to accomplish the following objectives:
Add or remove a state, reason, or transition
Specify a value for field to be applied during a change in state, reason, or transition
Specify a customACTIONto automate field assignments based on a change in state, reason, or transition.
When you customize the workflow, follow these two steps:
Modify the WORKFLOW of the work item type definition.
Modify the WORKFLOW of the work item type definition.
Modify the process configuration to map new workflow states to metastates.This second step is required when you change the workflow for a work item type that appears on an Agile tool page. These work item types belong to either the Requirement or Task categories.
Modify the process configuration to map new workflow states to metastates.
This second step is required when you change the workflow for a work item type that appears on an Agile tool page. These work item types belong to either the Requirement or Task categories.

Workflow field rules
You can apply field rules when you change state, specify a reason, or during a workflow transition.
For example, by adding theEMPTYrule when the state is set to Active, you can automatically nullify the Closed Date and Closed By fields and make them read-only. This is useful when reactivating a work item from a closed state.
<STATE value="Active">
   <FIELDS>
. . .
      <FIELD refname="Microsoft.VSTS.Common.ClosedDate"><EMPTY/></FIELD>
      <FIELD refname="Microsoft.VSTS.Common.ClosedBy"><EMPTY/></FIELD>
   </FIELDS>
</STATE>
<STATE value="Active">
   <FIELDS>
. . .
      <FIELD refname="Microsoft.VSTS.Common.ClosedDate"><EMPTY/></FIELD>
      <FIELD refname="Microsoft.VSTS.Common.ClosedBy"><EMPTY/></FIELD>
   </FIELDS>
</STATE>
Apply workflow field rules to accomplish the following actions:
Qualify the value a field can have by specifyingCANNOTLOSEVALUE,EMPTY,FROZEN,NOTSAMEAS,READONLY, andREQUIRED
Copy a value into a field by usingCOPY,DEFAULT, andSERVERDEFAULT
Restrict who can modify a field
Enforce pattern matching on a string field by usingMATCH
Conditionally apply rules based on values in other fields usingWHEN,WHENNOT,WHENCHANGED, andWHENNOTCHANGED
Limit rules to apply to specific users or groups. Most rules support theforornotattributes to focus who the rule does and doesn't apply to.
For more information about applying workflow field rules, seeFIELD (Workflow) element referenceandRules and rule evaluation.

Customize the work item form
The following illustrations highlight the most common elements on work item forms. You can customize all of them except the title area and form controls. The elements you use to customize the form depend onwhether or not the new form has been enabled by your admin.

You can customize the form to accomplish the following objectives:
Add or modify a field
Change a field label
Rearrange fields
Add a group or page
Add a group
Add a custom control, group, or page
Add informational text or hyperlinks
Embed HTML text or display dynamic reports
Add a links-control page

Add or remove a work item type from the backlog or task board
The Agile planning toolsâproduct backlog, sprint backlog, and task board pagesâdisplay specific work item types based on the process template used to create your project. You can add or remove work item types to appear on these pages. For example, if your project uses Scrum work item types, both product backlog items and bugs appear on the backlog pages. However, if your project was created using the Agile, CMMI, or other process template, bugs don't appear on your backlog or task board.
For example, you can add bugs from the product backlog page.
To learn how to add or remove work item types from the backlog or task board, seeAdd a work item type to a backlog and board. To add a new work item type to support a portfolio backlog, seeAdd a portfolio backlog level.

Change the color, icon, or workflow state color of a work item type
In the web portal, work items appear in query results and on the backlog and board pages of the Agile tools. To change the color or icon associated with an existing work item type or add the color to use for a new work item type,edit the process configuration. To change the color for a workflow state, you alsoedit the process configuration.
Change the type of an existing work item
SeeBulk move work items and change the work item typefor the features available to you based on your platform.

Deactivate or disable a work item type
If you want to restrict creation of a specific work item type to a group of users,add the work item type to the Hidden Categories groupto prevent the majority of contributors from creating them. If you want to allow a group of users access, youcan create a hyperlink to a templatethat opens the work item form and share that link with those team members who you do want to create them.
Note
You can't add field rules to restrict the workflow as you can't apply rules to system fields.

Delete a work item type
To prevent team members from using a specific work item type to create a work item, you can remove it from the project. When you usewitadmin destroywitd*, you permanently remove all work items that were created using that work item type as well as the work item type itself. For example, if your team doesn't use "Impediment", you can delete the work item type labeled "Impediment" from the Fabrikam Web Site project.
witadmin destroywitd*
witadmin destroywitd /collection:"http://FabrikamPrime:8080/tfs/DefaultCollection" /p:"Fabrikam Web Site" /n:"Impediment"
witadmin destroywitd /collection:"http://FabrikamPrime:8080/tfs/DefaultCollection" /p:"Fabrikam Web Site" /n:"Impediment"
When you delete a work item type that belongs to a category, you must update the categories definition for the project to reflect the new name. For more information, seeImport, export, and manage work item typesandImport and export categories.

Rename a work item type
To rename an existing work item type usewitadmin renamewitd. For example, you can rename a work item type labeled "QoS Item" to "Service Agreement."
witadmin renamewitd
witadmin renamewitd /collection:"http://FabrikamPrime:8080/tfs/DefaultCollection" /p:"Fabrikam Web Site" /n:"QoS Item" /new:"Service Agreement"
witadmin renamewitd /collection:"http://FabrikamPrime:8080/tfs/DefaultCollection" /p:"Fabrikam Web Site" /n:"QoS Item" /new:"Service Agreement"
When you rename a work item type that belongs to a category, you have to update the categories definition for the project to reflect the new name. In particular, thebacklogs and boardswill not work until you update the categories definition.
For more information, seeImport, export, and manage work item typesandImport and export categories.
Related articles
This article addressed how to add and customize work item types for Hosted XML and On-premises XML process models. For information on adding and customizing work item types for the Inherited process model, seeCustomize a process.
Other related topics or resources:
Rules and rule evaluation
Guide to administrative tasks
ProcessConfiguration XML elements
witadmincommand-line tools
Customize the work tracking experience
Customize cards on boards
Feedback
Was this page helpful?
Additional resources