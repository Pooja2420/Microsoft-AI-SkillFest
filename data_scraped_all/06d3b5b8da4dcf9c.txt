Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Tutorial: Migrate Oracle WebLogic Server to Azure Virtual Machines with high availability and disaster recovery
Article
2024-12-23
6 contributors
In this article
This tutorial shows you a simple and effective way to implement high availability and disaster recovery (HA/DR) for Java using Oracle WebLogic Server (WLS) on Azure Virtual Machines (VMs). The solution illustrates how to achieve a low Recovery Time Objective (RTO) and Recovery Point Objective (RPO) using a simple database driven Jakarta EE application running on WLS. HA/DR is a complex topic, with many possible solutions. The best solution depends on your unique requirements. For other ways to implement HA/DR, see the resources at the end of this article.
In this tutorial, you learn how to:
Use Azure optimized best practices to achieve high availability and disaster recovery.
Set up a Microsoft Azure SQL Database failover group in paired regions.
Set up paired WLS clusters on Azure VMs.
Set up an Azure Traffic Manager.
Configure WLS clusters for high availability and disaster recovery.
Test failover from primary to secondary.
The following diagram illustrates the architecture you build:

Azure Traffic Manager checks the health of your regions and routes the traffic accordingly to the application tier. Both the primary region and the secondary region have a full deployment of the WLS cluster. However, only the primary region is actively servicing network requests from the users. The secondary region is passive and activated to receive traffic only when the primary region experiences a service disruption. Azure Traffic Manager uses the health check feature of the Azure Application Gateway to implement this conditional routing. The primary WLS cluster is running and the secondary cluster is shut down. The geo-failover RTO of the application tier depends on the time for starting VMs and running the secondary WLS cluster. The RPO depends on the Azure SQL Database because the data is persisted and replicated in the Azure SQL Database failover group.
The database tier consists of an Azure SQL Database failover group with a primary server and a secondary server. The primary server is in active read-write mode and connected to the primary WLS cluster. The secondary server is in passive ready-only mode and connected to the secondary WLS cluster. A geo-failover switches all secondary databases in the group to the primary role. For geo-failover RPO and RTO of Azure SQL Database, seeOverview of Business Continuity.
This article was written with the Azure SQL Database service because the article relies on the high availability (HA) features of that service. Other database choices are possible, but you must consider the HA features of whatever database you choose. For more information, including information on how to optimize the configuration of data sources for replication, seeConfiguring Data Sources for Oracle Fusion Middleware Active-Passive Deployment.
Prerequisites
An Azure subscription. If you don't have anAzure subscription, create afree accountbefore you begin.
Make sure you have either theOwnerrole or theContributorandUser Access Administratorroles in the subscription. You can verify the assignment by following the steps inList Azure role assignments using the Azure portal.
Owner
Contributor
User Access Administrator
Prepare a local machine with Windows, Linux, or macOS installed.
Install and set upGit.
Install a Java SE implementation, version 17 or later - for example,the Microsoft build of OpenJDK.
InstallMaven, version 3.9.3 or later.
Set up an Azure SQL Database failover group in paired regions
In this section, you create an Azure SQL Database failover group in paired regions for use with your WLS clusters and app. In a later section, you configure WLS to store its session data and transaction log (TLOG) data to this database. This practice is consistent with Oracle's Maximum Availability Architecture (MAA). This guidance provides an Azure adaptation for MAA. For more information on MAA, seeOracle Maximum Availability Architecture.
First, create the primary Azure SQL Database by following the Azure portal steps inQuickstart: Create a single database - Azure SQL Database. Follow the steps up to, but not including, the "Clean up resources" section. Use the following directions as you go through the article, then return to this article after you create and configure the Azure SQL Database:
When you reach the sectionCreate a single database, use the following steps:In step 4 for creating new resource group, save aside theResource group namevalue - for example,myResourceGroup.In step 5 for database name, save aside theDatabase namevalue - for example,mySampleDatabase.In step 6 for creating the server, use the following steps:Save aside the unique server name - for example,sqlserverprimary-ejb120623.ForLocation, select(US) East US.ForAuthentication method, selectUse SQL authentication.Save aside theServer admin loginvalue - for example,azureuser.Save aside thePasswordvalue.In step 8, forWorkload environment, selectDevelopment. Look at the description and consider other options for your workload.In step 11, forBackup storage redundancy, selectLocally-redundant backup storage. Consider other options for your backups. For more information, see theBackup storage redundancysection ofAutomated backups in Azure SQL Database.In step 14, in theFirewall rulesconfiguration, forAllow Azure services and resources to access this server, selectYes.
When you reach the sectionCreate a single database, use the following steps:
In step 4 for creating new resource group, save aside theResource group namevalue - for example,myResourceGroup.
In step 5 for database name, save aside theDatabase namevalue - for example,mySampleDatabase.
In step 6 for creating the server, use the following steps:Save aside the unique server name - for example,sqlserverprimary-ejb120623.ForLocation, select(US) East US.ForAuthentication method, selectUse SQL authentication.Save aside theServer admin loginvalue - for example,azureuser.Save aside thePasswordvalue.
Save aside the unique server name - for example,sqlserverprimary-ejb120623.
ForLocation, select(US) East US.
ForAuthentication method, selectUse SQL authentication.
Save aside theServer admin loginvalue - for example,azureuser.
Save aside thePasswordvalue.
In step 8, forWorkload environment, selectDevelopment. Look at the description and consider other options for your workload.
In step 11, forBackup storage redundancy, selectLocally-redundant backup storage. Consider other options for your backups. For more information, see theBackup storage redundancysection ofAutomated backups in Azure SQL Database.
In step 14, in theFirewall rulesconfiguration, forAllow Azure services and resources to access this server, selectYes.
When you reach the sectionQuery the database, use the following steps:In step 3, enter yourSQL authenticationserver admin sign-in information to sign in.NoteIf sign-in fails with an error message similar toClient with IP address 'xx.xx.xx.xx' is not allowed to access the server, selectAllowlist IP xx.xx.xx.xx on server <your-sqlserver-name>at the end of the error message. Wait until the server firewall rules complete updating, then selectOKagain.After you run the sample query in step 5, clear the editor and create tables.
When you reach the sectionQuery the database, use the following steps:
In step 3, enter yourSQL authenticationserver admin sign-in information to sign in.NoteIf sign-in fails with an error message similar toClient with IP address 'xx.xx.xx.xx' is not allowed to access the server, selectAllowlist IP xx.xx.xx.xx on server <your-sqlserver-name>at the end of the error message. Wait until the server firewall rules complete updating, then selectOKagain.
In step 3, enter yourSQL authenticationserver admin sign-in information to sign in.
Note
If sign-in fails with an error message similar toClient with IP address 'xx.xx.xx.xx' is not allowed to access the server, selectAllowlist IP xx.xx.xx.xx on server <your-sqlserver-name>at the end of the error message. Wait until the server firewall rules complete updating, then selectOKagain.
After you run the sample query in step 5, clear the editor and create tables.
After you run the sample query in step 5, clear the editor and create tables.
Enter the following query to create schema for TLOG.
create table TLOG_msp1_WLStore (ID DECIMAL(38) NOT NULL, TYPE DECIMAL(38) NOT NULL, HANDLE DECIMAL(38) NOT NULL, RECORD VARBINARY(MAX) NOT NULL, PRIMARY KEY (ID));
create table TLOG_msp2_WLStore (ID DECIMAL(38) NOT NULL, TYPE DECIMAL(38) NOT NULL, HANDLE DECIMAL(38) NOT NULL, RECORD VARBINARY(MAX) NOT NULL, PRIMARY KEY (ID));
create table TLOG_msp3_WLStore (ID DECIMAL(38) NOT NULL, TYPE DECIMAL(38) NOT NULL, HANDLE DECIMAL(38) NOT NULL, RECORD VARBINARY(MAX) NOT NULL, PRIMARY KEY (ID));
create table wl_servlet_sessions (wl_id VARCHAR(100) NOT NULL, wl_context_path VARCHAR(100) NOT NULL, wl_is_new CHAR(1), wl_create_time DECIMAL(20), wl_is_valid CHAR(1), wl_session_values VARBINARY(MAX), wl_access_time DECIMAL(20), wl_max_inactive_interval INTEGER, PRIMARY KEY (wl_id, wl_context_path));
create table TLOG_msp1_WLStore (ID DECIMAL(38) NOT NULL, TYPE DECIMAL(38) NOT NULL, HANDLE DECIMAL(38) NOT NULL, RECORD VARBINARY(MAX) NOT NULL, PRIMARY KEY (ID));
create table TLOG_msp2_WLStore (ID DECIMAL(38) NOT NULL, TYPE DECIMAL(38) NOT NULL, HANDLE DECIMAL(38) NOT NULL, RECORD VARBINARY(MAX) NOT NULL, PRIMARY KEY (ID));
create table TLOG_msp3_WLStore (ID DECIMAL(38) NOT NULL, TYPE DECIMAL(38) NOT NULL, HANDLE DECIMAL(38) NOT NULL, RECORD VARBINARY(MAX) NOT NULL, PRIMARY KEY (ID));
create table wl_servlet_sessions (wl_id VARCHAR(100) NOT NULL, wl_context_path VARCHAR(100) NOT NULL, wl_is_new CHAR(1), wl_create_time DECIMAL(20), wl_is_valid CHAR(1), wl_session_values VARBINARY(MAX), wl_access_time DECIMAL(20), wl_max_inactive_interval INTEGER, PRIMARY KEY (wl_id, wl_context_path));
After a successful run, you should see the messageQuery succeeded: Affected rows: 0.
These database tables are used for storing transaction log (TLOG) and session data for your WLS clusters and app. For more information, seeUsing a JDBC TLOG StoreandUsing a Database for Persistent Storage (JDBC Persistence).
Next, create an Azure SQL Database failover group by following the Azure portal steps inConfigure a failover group for Azure SQL Database. You just need the following sections:Create failover groupandTest planned failover. Use the following steps as you go through the article, then return to this article after you create and configure the Azure SQL Database failover group:
When you reach the sectionCreate failover group, use the following steps:In step 5 for creating the failover group, select the option to create a new secondary server and then use the following steps:Enter and save aside the failover group name - for example,failovergroupname-ejb120623.Enter and save aside the unique server name - for example,sqlserversecondary-ejb120623.Enter the same server admin and password as your primary server.ForLocation, select a different region than the one you used for the primary database.Make sureAllow Azure services to access serveris selected.In step 5 for configuring theDatabases within the group, select the database you created in the primary server - for example,mySampleDatabase.
When you reach the sectionCreate failover group, use the following steps:
In step 5 for creating the failover group, select the option to create a new secondary server and then use the following steps:Enter and save aside the failover group name - for example,failovergroupname-ejb120623.Enter and save aside the unique server name - for example,sqlserversecondary-ejb120623.Enter the same server admin and password as your primary server.ForLocation, select a different region than the one you used for the primary database.Make sureAllow Azure services to access serveris selected.
Enter and save aside the failover group name - for example,failovergroupname-ejb120623.
Enter and save aside the unique server name - for example,sqlserversecondary-ejb120623.
Enter the same server admin and password as your primary server.
ForLocation, select a different region than the one you used for the primary database.
Make sureAllow Azure services to access serveris selected.
In step 5 for configuring theDatabases within the group, select the database you created in the primary server - for example,mySampleDatabase.
After you complete all the steps in the sectionTest planned failover, keep the failover group page open and use it for the failover test of the WLS clusters later.
After you complete all the steps in the sectionTest planned failover, keep the failover group page open and use it for the failover test of the WLS clusters later.
Note
This article guides you to create an Azure SQL Database single database with SQL authentication for simplicity because the HA/DR setup this article focuses on is already very complex. A more secure practice is to useMicrosoft Entra authentication for Azure SQLfor authenticating the database server connection. For information on how to configure the database connection with Microsoft Entra authentication, seeConfigure passwordless database connections for Java apps on Oracle WebLogic Server.
Set up paired WLS clusters on Azure VMs
In this section, you create two WLS clusters on Azure VMs using theOracle WebLogic Server Cluster on Azure VMsoffer. The cluster in East US is primary and is configured as the active cluster later. The cluster in West US is secondary and is configured as the passive cluster later.
Set up the primary WLS cluster
First, open theOracle WebLogic Server Cluster on Azure VMsoffer in your browser and selectCreate. You should see theBasicspane of the offer.
Use the following steps to fill out theBasicspane:
Ensure that the value shown forSubscriptionis the same one that has the roles listed in the prerequisites section.
In theResource groupfield, selectCreate newand fill in a unique value for the resource group - for example,wls-cluster-eastus-ejb120623.
UnderInstance details, forRegion, selectEast US.
UnderCredentials for Virtual Machines and WebLogic, provide a password foradmin account of VMandWebLogic Administrator, respectively. Save aside the username and password forWebLogic Administrator. For better security, consider usingSSH Public Keyas the VM authentication type.
Leave the defaults for other fields.
SelectNextto go to theTLS/SSL Configurationpane.

Leave the defaults in theTLS/SSL Configurationpane, selectNextto go toAzure Application Gatewaypane, and then use the following steps.
ForConnect to Azure Application Gateway?, selectYes.
ForSelect desired TLS/SSL certificate option, selectGenerate a self-signed certificate.
SelectNextto go to theNetworkingpane.

You should see all fields pre-populated with the defaults in theNetworkingpane. Use the following steps to save the network configuration:
SelectEdit virtual network. Save aside the address space of the virtual network - for example,10.1.4.0/23.
SelectEdit virtual network. Save aside the address space of the virtual network - for example,10.1.4.0/23.

Selectwls-subnetto edit the subnet. UnderSubnet details, save aside the starting address and subnet size - for example,10.1.5.0and/28.
Selectwls-subnetto edit the subnet. UnderSubnet details, save aside the starting address and subnet size - for example,10.1.5.0and/28.
wls-subnet

If you make any modifications, save the changes.
If you make any modifications, save the changes.
Return toNetworkingpane.
Return toNetworkingpane.
SelectNextto go to theDatabasepane.
SelectNextto go to theDatabasepane.
The following steps show you how to fill out theDatabasepane:
ForConnect to database?, selectYes.
ForChoose database type, selectMicrosoft SQL Server (Support passwordless connection).
ForJNDI Name, enterjdbc/WebLogicCafeDB.
ForDataSource Connection String, replace the placeholders with the values you saved aside in the preceding section for the primary SQL Database - for example,jdbc:sqlserver://sqlserverprimary-ejb120623.database.windows.net:1433;database=mySampleDatabase.
ForGlobal transaction protocol, selectNone.
ForDatabase username, replace the placeholders with the values you saved aside in the preceding section for the primary SQL Database - for example,azureuser@sqlserverprimary-ejb120623.
Enter the server admin sign-in password that you saved aside previously forDatabase Password. Enter the same value forConfirm password.
Leave the defaults for the other fields.
SelectReview + create.
Wait untilRunning final validation...successfully completes, then selectCreate.

Note
This article guides you to connect to an Azure SQL Database with SQL authentication for simplicity because the HA/DR setup this article focuses on is already very complex. A more secure practice is to useMicrosoft Entra authentication for Azure SQLfor authenticating the database server connection. For information on how to configure the database connection with Microsoft Entra authentication, seeConfigure passwordless database connections for Java apps on Oracle WebLogic Server.
After a while, you should see theDeploymentpage whereDeployment is in progressis displayed.
Note
If you see any problems duringRunning final validation..., fix them and try again.
Depending on network conditions and other activity in your selected region, the deployment can take up to 50 minutes to complete. After that, you should see the textYour deployment is completedisplayed on the deployment page.
In the meantime, you can set up the secondary WLS cluster in parallel.
Set up the secondary WLS cluster
Follow the same steps in as in the sectionSet up the primary WLS clusterto set up the secondary WLS cluster in West US region, except for the following differences:
In theBasicspane, use the following steps:In theResource groupfield, selectCreate newand fill in a different unique value for the resource group - for example,wls-cluster-westtus-ejb120623.UnderInstance details, forRegion, selectWest US.
In theBasicspane, use the following steps:
In theResource groupfield, selectCreate newand fill in a different unique value for the resource group - for example,wls-cluster-westtus-ejb120623.
UnderInstance details, forRegion, selectWest US.
In theNetworkingpane, use the following steps:ForEdit virtual network, enter same address space of the virtual network as your primary WLS cluster - for example,10.1.4.0/23.NoteYou should see a warning message similar to the following one:Address space '10.1.4.0/23 (10.1.4.0 - 10.1.5.255)' overlaps with address space '10.1.4.0/23 (10.1.4.0 - 10.1.5.255)' of virtual network 'wls-vnet'. Virtual networks with overlapping address space cannot be peered. If you intend to peer these virtual networks, change address space '10.1.4.0/23 (10.1.4.0 - 10.1.5.255)'. You can ignore this message because you need two WLS clusters with the same network configuration.Forwls-subnet, enter same starting address and subnet size as your primary WLS cluster - for example,10.1.5.0and/28.
In theNetworkingpane, use the following steps:
ForEdit virtual network, enter same address space of the virtual network as your primary WLS cluster - for example,10.1.4.0/23.NoteYou should see a warning message similar to the following one:Address space '10.1.4.0/23 (10.1.4.0 - 10.1.5.255)' overlaps with address space '10.1.4.0/23 (10.1.4.0 - 10.1.5.255)' of virtual network 'wls-vnet'. Virtual networks with overlapping address space cannot be peered. If you intend to peer these virtual networks, change address space '10.1.4.0/23 (10.1.4.0 - 10.1.5.255)'. You can ignore this message because you need two WLS clusters with the same network configuration.
ForEdit virtual network, enter same address space of the virtual network as your primary WLS cluster - for example,10.1.4.0/23.
Note
You should see a warning message similar to the following one:Address space '10.1.4.0/23 (10.1.4.0 - 10.1.5.255)' overlaps with address space '10.1.4.0/23 (10.1.4.0 - 10.1.5.255)' of virtual network 'wls-vnet'. Virtual networks with overlapping address space cannot be peered. If you intend to peer these virtual networks, change address space '10.1.4.0/23 (10.1.4.0 - 10.1.5.255)'. You can ignore this message because you need two WLS clusters with the same network configuration.
Forwls-subnet, enter same starting address and subnet size as your primary WLS cluster - for example,10.1.5.0and/28.
Forwls-subnet, enter same starting address and subnet size as your primary WLS cluster - for example,10.1.5.0and/28.
wls-subnet
In theDatabasepane, use the following steps:ForDataSource Connection String, replace the placeholders with the values you saved aside in the preceding section for the secondary SQL Database - for example,jdbc:sqlserver://sqlserversecondary-ejb120623.database.windows.net:1433;database=mySampleDatabase.ForDatabase username, replace the placeholders with the values you saved aside in the preceding section for the secondary SQL Database - for example,azureuser@sqlserversecondary-ejb120623.
In theDatabasepane, use the following steps:
ForDataSource Connection String, replace the placeholders with the values you saved aside in the preceding section for the secondary SQL Database - for example,jdbc:sqlserver://sqlserversecondary-ejb120623.database.windows.net:1433;database=mySampleDatabase.
ForDatabase username, replace the placeholders with the values you saved aside in the preceding section for the secondary SQL Database - for example,azureuser@sqlserversecondary-ejb120623.
Mirror the network settings for the two clusters
During the phase of resuming pending transactions in the secondary WLS cluster after a failover, WLS checks the ownership of the TLOG store. To successfully pass the check, all managed servers in the secondary cluster must have same private IP address as the primary cluster.
This section shows you how to mirror the network settings from the primary cluster to the secondary cluster.
First, use the following steps to configure network settings for the primary cluster after its deployment completes:
InOverviewpane of theDeploymentpage, selectGo to resource group.
InOverviewpane of theDeploymentpage, selectGo to resource group.
Select the network interfaceadminVM_NIC_with_pub_ip.UnderSettings, selectIP configurations.Selectipconfig1.UnderPrivate IP address settings, selectStaticforAllocation. Save aside the private IP address.SelectSave.
Select the network interfaceadminVM_NIC_with_pub_ip.
adminVM_NIC_with_pub_ip
UnderSettings, selectIP configurations.
Selectipconfig1.
ipconfig1
UnderPrivate IP address settings, selectStaticforAllocation. Save aside the private IP address.
SelectSave.
Return to the resource group of the primary WLS cluster, then repeat step 3 for the network interfacesmspVM1_NIC_with_pub_ip,mspVM2_NIC_with_pub_ip, andmspVM3_NIC_with_pub_ip.
Return to the resource group of the primary WLS cluster, then repeat step 3 for the network interfacesmspVM1_NIC_with_pub_ip,mspVM2_NIC_with_pub_ip, andmspVM3_NIC_with_pub_ip.
mspVM1_NIC_with_pub_ip
mspVM2_NIC_with_pub_ip
mspVM3_NIC_with_pub_ip
Wait until all updates complete. You can select the notifications icon in the Azure portal to open theNotificationspane for status monitoring.
Wait until all updates complete. You can select the notifications icon in the Azure portal to open theNotificationspane for status monitoring.

Return to the resource group of the primary WLS cluster, then copy the name for the resource with typePrivate endpoint- for example,7e8c8bsaep. Use that name to find the remaining network interface - for example,7e8c8bsaep.nic.c0438c1a-1936-4b62-864c-6792eec3741a. Select it and follow the preceding steps to get its private IP address.
Return to the resource group of the primary WLS cluster, then copy the name for the resource with typePrivate endpoint- for example,7e8c8bsaep. Use that name to find the remaining network interface - for example,7e8c8bsaep.nic.c0438c1a-1936-4b62-864c-6792eec3741a. Select it and follow the preceding steps to get its private IP address.
Then, use the following steps to configure the network settings for the secondary cluster after its deployment completes:
In theOverviewpane of theDeploymentpage, selectGo to resource group.
In theOverviewpane of theDeploymentpage, selectGo to resource group.
For the network interfacesadminVM_NIC_with_pub_ip,mspVM1_NIC_with_pub_ip,mspVM2_NIC_with_pub_ip, andmspVM3_NIC_with_pub_ip, follow the preceding steps to update the private IP address allocation toStatic.
For the network interfacesadminVM_NIC_with_pub_ip,mspVM1_NIC_with_pub_ip,mspVM2_NIC_with_pub_ip, andmspVM3_NIC_with_pub_ip, follow the preceding steps to update the private IP address allocation toStatic.
adminVM_NIC_with_pub_ip
mspVM1_NIC_with_pub_ip
mspVM2_NIC_with_pub_ip
mspVM3_NIC_with_pub_ip
Wait until all updates complete.
Wait until all updates complete.
For the network interfacesmspVM1_NIC_with_pub_ip,mspVM2_NIC_with_pub_ip, andmspVM3_NIC_with_pub_ip, follow the preceding steps but update the private IP address to the same value used with the primary cluster. Wait until the current update of network interface completes before proceeding to next one.NoteYou can't change the private IP address of the network interface that is part of a private endpoint. To easily mirror the private IP addresses of network interfaces for managed servers, consider updating the private IP address foradminVM_NIC_with_pub_ipto an IP address that isn't used. Depending on the allocation of private IP addresses in your two clusters, you might need to update the private IP address in the primary cluster as well.
For the network interfacesmspVM1_NIC_with_pub_ip,mspVM2_NIC_with_pub_ip, andmspVM3_NIC_with_pub_ip, follow the preceding steps but update the private IP address to the same value used with the primary cluster. Wait until the current update of network interface completes before proceeding to next one.
mspVM1_NIC_with_pub_ip
mspVM2_NIC_with_pub_ip
mspVM3_NIC_with_pub_ip
Note
You can't change the private IP address of the network interface that is part of a private endpoint. To easily mirror the private IP addresses of network interfaces for managed servers, consider updating the private IP address foradminVM_NIC_with_pub_ipto an IP address that isn't used. Depending on the allocation of private IP addresses in your two clusters, you might need to update the private IP address in the primary cluster as well.
adminVM_NIC_with_pub_ip
The following table shows an example of mirroring the network settings for two clusters:
7e8c8bsaep.nic.c0438c1a-1936-4b62-864c-6792eec3741a
10.1.5.4
10.1.5.4
adminVM_NIC_with_pub_ip
10.1.5.7
10.1.5.7
mspVM1_NIC_with_pub_ip
10.1.5.5
10.1.5.5
mspVM2_NIC_with_pub_ip
10.1.5.8
10.1.5.9
mspVM3_NIC_with_pub_ip
10.1.5.6
10.1.5.6
1696b0saep.nic.2e19bf46-9799-4acc-b64b-a2cd2f7a4ee1
10.1.5.8
10.1.5.8
adminVM_NIC_with_pub_ip
10.1.5.5
10.1.5.4
mspVM1_NIC_with_pub_ip
10.1.5.7
10.1.5.5
mspVM2_NIC_with_pub_ip
10.1.5.6
10.1.5.9
mspVM3_NIC_with_pub_ip
10.1.5.4
10.1.5.6
Check the set of private IP addresses for all managed servers, which consists of the backend pool of the Azure Application Gateway you deployed in each cluster. If it's updated, use the following steps to update the Azure Application Gateway backend pool accordingly:
Open the resource group of the cluster.
Find the resourcemyAppGatewaywith the typeApplication gateway. Select it to open it.
In theSettingssection, selectBackend pools, then selectmyGatewayBackendPool.
myGatewayBackendPool
Change theBackend targetsvalues with the updated private IP address or addresses, then selectSave. Wait until it completes.
In theSettingssection, selectHealth probes, then selectHTTPhealthProbe.
Make sureI want to test the backend health before adding the health probeis selected, then selectTest. You should see that theStatusvalue of the backend poolmyGatewayBackendPoolis marked as healthy. If it isn't, check whether private IP addresses are updated as expected and the VMs are running, then test the health probe again. You must troubleshoot and resolve the issue before you continue.
myGatewayBackendPool
In the following example, the Azure Application Gateway backend pool for each cluster is updated:
myGatewayBackendPool
10.1.5.5
10.1.5.8
10.1.5.6
10.1.5.5
10.1.5.9
10.1.5.6
myGatewayBackendPool
10.1.5.7
10.1.5.6
10.1.5.4
10.1.5.5
10.1.5.9
10.1.5.6
To automate the network settings mirroring, consider using Azure CLI. For more information, seeGet started with Azure CLI.
Verify the deployments of the clusters
You deployed an Azure Application Gateway and a WLS admin server in each cluster. The Azure Application Gateway acts as load balancer for all managed servers in the cluster. The WLS admin server provides a web console for cluster configuration.
Use the following steps to verify whether the Azure Application Gateway and WLS admin console in each cluster work before moving to next step:
Return to theDeploymentpage, then selectOutputs.
Copy the value of the propertyappGatewayURL. Append the stringweblogic/readyand then open that URL in a new browser tab. You should see an empty page without any error message. If you don't, you must troubleshoot and resolve the issue before you continue.
Copy and save aside the value of the propertyadminConsole. Open it in a new browser tab. You should see the sign-in page of theWebLogic Server Administration Console. Sign in to the console with the user name and password for WebLogic administrator you saved aside previously. If you aren't able to sign in, you must troubleshoot and resolve the issue before you continue.
Use the following steps to get the IP address of the Azure Application Gateway for each cluster. You use these values when you set up the Azure Traffic Manager later.
Open the resource group where your cluster is deployed - for example, selectOverviewto switch back to the Overview pane of the deployment page. Then, selectGo to resource group.
Find the resourcegwipwith the typePublic IP address, then select it to open it. Look for theIP addressfield and save aside its value.
gwip
Set up an Azure Traffic Manager
In this section, you create an Azure Traffic Manager for distributing traffic to your public facing applications across the global Azure regions. The primary endpoint points to the Azure Application Gateway in the primary WLS cluster, and the secondary endpoint points to the Azure Application Gateway in the secondary WLS cluster.
Create an Azure Traffic Manager profile by followingQuickstart: Create a Traffic Manager profile using the Azure portal. Skip thePrerequisitessection. You just need the following sections:Create a Traffic Manager profile,Add Traffic Manager endpoints, andTest Traffic Manager profile. Use the following steps as you go through these sections, then return to this article after you create and configure the Azure Traffic Manager.
When you reach the sectionCreate a Traffic Manager profile, in step 2Create Traffic Manager profile, use the following steps:Save aside the unique Traffic Manager profile name forName- for example,tmprofile-ejb120623.Save aside the new resource group name forResource group- for example,myResourceGroupTM1.
When you reach the sectionCreate a Traffic Manager profile, in step 2Create Traffic Manager profile, use the following steps:
Save aside the unique Traffic Manager profile name forName- for example,tmprofile-ejb120623.
tmprofile-ejb120623
Save aside the new resource group name forResource group- for example,myResourceGroupTM1.
myResourceGroupTM1
When you reach the sectionAdd Traffic Manager endpoints, use the following steps:Perform this extra action after the stepSelect the profile from the search results.UnderSettings, selectConfiguration.ForDNS time to live (TTL), enter10.UnderEndpoint monitor settings, forPath, enter/weblogic/ready.UnderFast endpoint failover settings, use the following values:ForProbing internal, enter10.ForTolerated number of failures, enter3.ForProbe timeout,5.SelectSave. Wait until it completes.In step 4 for adding the primary endpointmyPrimaryEndpoint, use the following steps:ForTarget resource type, selectPublic IP address.Select theChoose public IP addressdropdown and enter the IP address of Application Gateway deployed in theEast USWLS cluster that you saved aside previously. You should see one entry matched. Select it forPublic IP address.In step 6 for adding a failover / secondary endpointmyFailoverEndpoint, use the following steps:ForTarget resource type, selectPublic IP address.Select theChoose public IP addressdropdown and enter the IP address of Application Gateway deployed in theWest US 2WLS cluster that you saved aside previously. You should see one entry matched. Select it forPublic IP address.Wait for a while. SelectRefreshuntil theMonitor statusvalue for both endpoints isOnline.
When you reach the sectionAdd Traffic Manager endpoints, use the following steps:
Perform this extra action after the stepSelect the profile from the search results.UnderSettings, selectConfiguration.ForDNS time to live (TTL), enter10.UnderEndpoint monitor settings, forPath, enter/weblogic/ready.UnderFast endpoint failover settings, use the following values:ForProbing internal, enter10.ForTolerated number of failures, enter3.ForProbe timeout,5.SelectSave. Wait until it completes.
Perform this extra action after the stepSelect the profile from the search results.
UnderSettings, selectConfiguration.
UnderSettings, selectConfiguration.
ForDNS time to live (TTL), enter10.
ForDNS time to live (TTL), enter10.
UnderEndpoint monitor settings, forPath, enter/weblogic/ready.
UnderEndpoint monitor settings, forPath, enter/weblogic/ready.
UnderFast endpoint failover settings, use the following values:ForProbing internal, enter10.ForTolerated number of failures, enter3.ForProbe timeout,5.
UnderFast endpoint failover settings, use the following values:
ForProbing internal, enter10.
ForTolerated number of failures, enter3.
ForProbe timeout,5.
SelectSave. Wait until it completes.
SelectSave. Wait until it completes.
In step 4 for adding the primary endpointmyPrimaryEndpoint, use the following steps:ForTarget resource type, selectPublic IP address.Select theChoose public IP addressdropdown and enter the IP address of Application Gateway deployed in theEast USWLS cluster that you saved aside previously. You should see one entry matched. Select it forPublic IP address.
In step 4 for adding the primary endpointmyPrimaryEndpoint, use the following steps:
myPrimaryEndpoint
ForTarget resource type, selectPublic IP address.
ForTarget resource type, selectPublic IP address.
Select theChoose public IP addressdropdown and enter the IP address of Application Gateway deployed in theEast USWLS cluster that you saved aside previously. You should see one entry matched. Select it forPublic IP address.
Select theChoose public IP addressdropdown and enter the IP address of Application Gateway deployed in theEast USWLS cluster that you saved aside previously. You should see one entry matched. Select it forPublic IP address.
In step 6 for adding a failover / secondary endpointmyFailoverEndpoint, use the following steps:ForTarget resource type, selectPublic IP address.Select theChoose public IP addressdropdown and enter the IP address of Application Gateway deployed in theWest US 2WLS cluster that you saved aside previously. You should see one entry matched. Select it forPublic IP address.
In step 6 for adding a failover / secondary endpointmyFailoverEndpoint, use the following steps:
myFailoverEndpoint
ForTarget resource type, selectPublic IP address.
ForTarget resource type, selectPublic IP address.
Select theChoose public IP addressdropdown and enter the IP address of Application Gateway deployed in theWest US 2WLS cluster that you saved aside previously. You should see one entry matched. Select it forPublic IP address.
Select theChoose public IP addressdropdown and enter the IP address of Application Gateway deployed in theWest US 2WLS cluster that you saved aside previously. You should see one entry matched. Select it forPublic IP address.
Wait for a while. SelectRefreshuntil theMonitor statusvalue for both endpoints isOnline.
Wait for a while. SelectRefreshuntil theMonitor statusvalue for both endpoints isOnline.
When you reach the sectionTest Traffic Manager profile, use the following steps:In sectionCheck the DNS name, in step 3, save aside the DNS name of your Traffic Manager profile - for example,http://tmprofile-ejb120623.trafficmanager.net.In sectionView Traffic Manager in action, use the following steps:In step 1 and 3, append/weblogic/readyto the DNS name of your Traffic Manager profile in your web browser - for example,http://tmprofile-ejb120623.trafficmanager.net/weblogic/ready. You should see an empty page without any error message.After completing all steps, make sure toenableyour primary endpoint by referencing step 2, but replaceDisabledwithEnabled. Then return toEndpointspage.
When you reach the sectionTest Traffic Manager profile, use the following steps:
In sectionCheck the DNS name, in step 3, save aside the DNS name of your Traffic Manager profile - for example,http://tmprofile-ejb120623.trafficmanager.net.
In sectionCheck the DNS name, in step 3, save aside the DNS name of your Traffic Manager profile - for example,http://tmprofile-ejb120623.trafficmanager.net.
http://tmprofile-ejb120623.trafficmanager.net
In sectionView Traffic Manager in action, use the following steps:In step 1 and 3, append/weblogic/readyto the DNS name of your Traffic Manager profile in your web browser - for example,http://tmprofile-ejb120623.trafficmanager.net/weblogic/ready. You should see an empty page without any error message.After completing all steps, make sure toenableyour primary endpoint by referencing step 2, but replaceDisabledwithEnabled. Then return toEndpointspage.
In sectionView Traffic Manager in action, use the following steps:
In step 1 and 3, append/weblogic/readyto the DNS name of your Traffic Manager profile in your web browser - for example,http://tmprofile-ejb120623.trafficmanager.net/weblogic/ready. You should see an empty page without any error message.
In step 1 and 3, append/weblogic/readyto the DNS name of your Traffic Manager profile in your web browser - for example,http://tmprofile-ejb120623.trafficmanager.net/weblogic/ready. You should see an empty page without any error message.
http://tmprofile-ejb120623.trafficmanager.net/weblogic/ready
After completing all steps, make sure toenableyour primary endpoint by referencing step 2, but replaceDisabledwithEnabled. Then return toEndpointspage.
After completing all steps, make sure toenableyour primary endpoint by referencing step 2, but replaceDisabledwithEnabled. Then return toEndpointspage.
Now you have both endpointsEnabledandOnlinein the Traffic Manager profile. Keep the page open and you use it for monitoring the endpoint status later.
Configure the WLS clusters for high availability and disaster recovery
In this section, you configure WLS clusters for high availability and disaster recovery.
Prepare the sample app
In this section, you build and package a sample CRUD Java/JakartaEE application that you later deploy and run on WLS clusters for failover testing.
The app uses WebLogic ServerJDBC session persistenceto store HTTP session data. The datasourcejdbc/WebLogicCafeDBstores the session data to enable failover and load balancing across a cluster of WebLogic Servers. It configures apersistence schemato persist application datacoffeein the same datasourcejdbc/WebLogicCafeDB.
jdbc/WebLogicCafeDB
coffee
jdbc/WebLogicCafeDB
Use the following steps to build and package the sample:
Use the following commands to clone the sample repository and check out the tag corresponding to this article:git clone https://github.com/Azure-Samples/azure-cafe.git
cd azure-cafe
git checkout 20231206If you see a message aboutDetached HEAD, it's safe to ignore.
Use the following commands to clone the sample repository and check out the tag corresponding to this article:
git clone https://github.com/Azure-Samples/azure-cafe.git
cd azure-cafe
git checkout 20231206
git clone https://github.com/Azure-Samples/azure-cafe.git
cd azure-cafe
git checkout 20231206
If you see a message aboutDetached HEAD, it's safe to ignore.
Detached HEAD
Use the following commands to navigate to the sample directory, and then compile and package the sample:cd weblogic-cafe
mvn clean package
Use the following commands to navigate to the sample directory, and then compile and package the sample:
cd weblogic-cafe
mvn clean package
cd weblogic-cafe
mvn clean package
When the package is successfully generated, you can find it at<parent-path-to-your-local-clone>/azure-cafe/weblogic-cafe/target/weblogic-cafe.war. If you don't see the package, you must troubleshoot and resolve the issue before you continue.
Deploy the sample app
Now use the following steps to deploy the sample app to the clusters, starting from the primary cluster:
Open theadminConsoleof the cluster in a new tab of your web browser. Sign in to the WebLogic Server Administration Console with the username and password of the WebLogic Administrator you saved aside previously.
LocateDomain structure>wlsd>Deploymentsin the navigation pane. SelectDeployments.
SelectLock & Edit>Install>Upload your file(s)>Choose File. Select theweblogic-cafe.warfile that you prepared previously.
SelectNext>Next>Next. Selectcluster1with optionAll servers in the clusterfor the deployment targets. SelectNext>Finish. SelectActivate Changes.
cluster1
Switch to theControltab and selectweblogic-cafefrom the deployments table. SelectStartwith the optionServicing all requests>Yes. Wait for a while and refresh the page until you see that the state of the deploymentweblogic-cafeisActive. Switch to theMonitoringtab and verify that the context root of the deployed application is/weblogic-cafe. Keep the WLS admin console open so you can use it later for further configuration.
Repeat the same steps in WebLogic Server Administration Console, but for the secondary cluster in the West US region.
Update the front end host
Use the following steps to make your WLS clusters aware of the Azure Traffic Manager. Because the Azure Traffic Manager is the entry point for user requests, update theFront Hostof the WebLogic Server cluster to the DNS name of the Traffic Manager profile, starting from the primary cluster.
Make sure you're signed in to WebLogic Server Administration Console.
Navigate toDomain structure>wlsd>Environment>Clustersin the navigation pane. SelectClusters.
Selectcluster1from the clusters table.
cluster1
SelectLock & Edit>HTTP. Remove the current value forFrontend Host, and enter the DNS name of the Traffic Manager profile you saved aside previously, without the leadinghttp://- for example,tmprofile-ejb120623.trafficmanager.net. SelectSave>Activate Changes.
Repeat the same steps in the WebLogic Server Administration Console, but for the secondary cluster in the West US region.
Configure the Transaction Log Store
Next, configure the JDBC Transaction Log Store for all managed servers of clusters, starting from the primary cluster. This practice is described inUsing Transaction Log Files to Recover Transactions.
Use the following steps on the primary WLS cluster in the US East region:
Make sure you're signed in to the WebLogic Server Administration Console.
Navigate toDomain structure>wlsd>Environment>Serversin the navigation pane. SelectServers.
You should see serversmsp1,msp2, andmsp3listed in the servers table.
Selectmsp1>Services>Lock & Edit. UnderTransaction Log Store, selectJDBC.
msp1
ForType>Data Source, selectjdbc/WebLogicCafeDB.
Confirm that the value forPrefix NameisTLOG_msp1_, which is the default value. If the value is different, change it toTLOG_msp1_.
SelectSave.
SelectServers>msp2, and repeat the same steps, except that the default value forPrefix NameisTLOG_msp2_.
SelectServers>msp3, and repeat the same steps, except that the default value forPrefix NameisTLOG_msp3_.
SelectActivate Changes.
Repeat the same steps in WebLogic Server Administration Console, but for the secondary cluster in the West US region.
Restart the managed servers of the primary cluster
Then, use the following steps to restart all the managed servers of the primary cluster for the changes to take effect:
Ensure that you're signed in to WebLogic Server Administration Console.
Navigate toDomain structure>wlsd>Environment>Serversin the navigation pane. SelectServers.
Select theControltab. Selectmsp1,msp2, andmsp3. SelectShutdownwith the optionWhen work completes>Yes. Select the refresh icon. Wait until theStatus of Last Actionvalue isTASK COMPLETED. You should see that theStatevalue for the selected servers isSHUTDOWN. Select the refresh icon again to stop status monitoring.
Selectmsp1,msp2, andmsp3again. SelectStart>Yes. Select the refresh icon. Wait until theStatus of Last Actionvalue isTASK COMPLETED. You should see that theStatevalue for the selected servers isRUNNING. Select the refresh icon again to stop status monitoring.
Stop the VMs in the secondary cluster
Now, use the following steps to stop all VMs in the secondary cluster to make it passive:
Open the Azure portal home in a new tab of your browser, then selectAll resources. In theFilter for any field...box, enter the resource group name where the secondary cluster is deployed - for example,wls-cluster-westus-ejb120623.
SelectType equals allto open theTypefilter. ForValue, enterVirtual machine. You should see one entry matched. Select it forValue. SelectApply. You should see 4 VMs listed, includingadminVM,mspVM1,mspVM2, andmspVM3.
Select to open each of the VMs. SelectStopand confirm for each VM.
Select the notifications icon from the Azure portal to open theNotificationspane.
Monitor the eventStopping virtual machinefor each VM until the value becomesSuccessfully stopped virtual machine. Keep the page open so you can use it for the failover test later.
Now, switch to the browser tab where you monitor the endpoints' status of the Traffic Manager. Refresh the page until you see that the endpointmyFailoverEndpointisDegradedand the endpointmyPrimaryEndpointisOnline.
Note
A production-ready HA/DR solution would probably want to achieve a lower RTO by leaving the VMs running but only stopping the WLS software running on the VMs. Then, in the event of failover, the VMs would already be running and the WLS software would take less time to start. This article chose to stop the VMs because the software deployed byOracle WebLogic Server Cluster on Azure VMsautomatically starts the WLS software when the VMs start.
Verify the app
Since the primary cluster is up and running, it acts as the active cluster and handles all user requests routed by your Traffic Manager profile.
Open the DNS name of your Azure Traffic Manager profile in a new tab of the browser, appending the context root/weblogic-cafeof the deployed app - for example,http://tmprofile-ejb120623.trafficmanager.net/weblogic-cafe. Create a new coffee with name and price - for example,Coffee 1with price10. This entry is persisted into both the application data table and the session table of the database. The UI that you see should be similar to the following screenshot:
http://tmprofile-ejb120623.trafficmanager.net/weblogic-cafe

If your UI doesn't look similar, troubleshoot and resolve the problem before you continue.
Keep the page open so you can use it for failover testing later.
Test failover from primary to secondary
To test failover, you manually fail your primary database server and cluster over to the secondary database server and cluster, and then fail back using the Azure portal in this section.
Failover to the secondary site
First, use the following steps to shut down the VMs in the primary cluster:
Find the name of your resource group where the primary WLS cluster is deployed - for example,wls-cluster-eastus-ejb120623. Then follow the steps in theStop VMs in the secondary clustersection, but change the target resource group to your primary WLS cluster, to stop all VMs in that cluster.
Switch to the browser tab of your Traffic Manager, refresh the page until you see that theMonitor statusvalue of the endpointmyPrimaryEndpointbecomesDegraded.
Switch to the browser tab of the sample app and refresh the page. You should see504 Gateway Time-outor502 Bad Gatewaybecause none of endpoints is accessible.
Next, use the following steps to failover the Azure SQL Database from the primary server to the secondary server:
Switch to the browser tab of your Azure SQL Database failover group.
SelectFailover>Yes.
Wait until it completes.
Then, use the following steps to start all servers in the secondary cluster:
Switch to the browser tab where you stopped all the VMs in the secondary cluster.
Select the VMadminVM. SelectStart.
adminVM
Monitor the eventStarting virtual machineforadminVMin theNotificationspane, and wait until the value becomesStarted virtual machine.
adminVM
Switch to the browser tab of the WebLogic Server Administration Console for the secondary cluster, then refresh the page until you see the welcome page for sign in.
Switch back to the browser tab where all the VMs in the secondary cluster are listed. For the VMsmspVM1,mspVM2, andmspVM3, select each one to open it and then selectStart.
mspVM1
mspVM2
mspVM3
For the VMsmspVM1,mspVM2, andmspVM3, monitor the eventStarting virtual machinein theNotificationspane, and wait until the values becomeStarted virtual machine.
mspVM1
mspVM2
mspVM3
Finally, use the following steps to verify the sample app after the endpointmyFailoverEndpointis in theOnlinestate:
myFailoverEndpoint
Switch to the browser tab of your Traffic Manager, then refresh the page until you see that theMonitor statusvalue of the endpointmyFailoverEndpointenters theOnlinestate.
Switch to the browser tab of your Traffic Manager, then refresh the page until you see that theMonitor statusvalue of the endpointmyFailoverEndpointenters theOnlinestate.
myFailoverEndpoint
Switch to the browser tab of the sample app and refresh the page. You should see the same data persisted in the application data table and the session table displayed in the UI, as shown in the following screenshot:If you don't observe this behavior, it might be because the Traffic Manager is taking time to update DNS to point to the failover site. The problem could also be that your browser cached the DNS name resolution result that points to the failed site. Wait for a while and refresh the page again.
Switch to the browser tab of the sample app and refresh the page. You should see the same data persisted in the application data table and the session table displayed in the UI, as shown in the following screenshot:

If you don't observe this behavior, it might be because the Traffic Manager is taking time to update DNS to point to the failover site. The problem could also be that your browser cached the DNS name resolution result that points to the failed site. Wait for a while and refresh the page again.
Note
A production-ready HA/DR solution would account for continually copying the WLS configuration from the primary to the secondary clusters on a regular schedule. For information on how to do this, see the references to the Oracle documentation at the end of this article.
To automate the failover, consider using alerts on Traffic Manager metrics and Azure Automation. For more information, see theAlerts on Traffic Manager metricssection ofTraffic Manager metrics and alertsandUse an alert to trigger an Azure Automation runbook.
Fail back to the primary site
Use the same steps in theFailover to the secondary sitesection to fail back to the primary site including database server and cluster, except for the following differences:
First, shut down the VMs in the secondary cluster. You should see that endpointmyFailoverEndpointbecomesDegraded.
Next, failover the Azure SQL Database from the secondary server to the primary server.
Then, start all servers in the primary cluster.
Finally, verify the sample app after the endpointmyPrimaryEndpointisOnline.
Clean up resources
If you're not going to continue to use the WLS clusters and other components, use the following steps to delete the resource groups to clean up the resources used in this tutorial:
Enter the resource group name of Azure SQL Database servers - for example,myResourceGroup- in the search box at the top of the Azure portal, and select the matched resource group from the search results.
myResourceGroup
SelectDelete resource group.
InEnter resource group name to confirm deletion, enter the resource group name.
SelectDelete.
Repeat steps 1-4 for the resource group of the Traffic Manager - for example,myResourceGroupTM1.
myResourceGroupTM1
Repeat steps 1-4 for the resource group of the primary WLS cluster - for example,wls-cluster-eastus-ejb120623.
wls-cluster-eastus-ejb120623
Repeat steps 1-4 for the resource group of the secondary WLS cluster - for example,wls-cluster-westus-ejb120623.
wls-cluster-westus-ejb120623
Next steps
In this tutorial, you set up an HA/DR solution consisting of an active-passive application infrastructure tier with an active-passive database tier, and in which both tiers span two geographically different sites. At the first site, both the application infrastructure tier and the database tier are active. At the second site, the secondary domain is shut down, and the secondary database is on standby.
Continue to explore the following references for more options to build HA/DR solutions and run WLS on Azure:
Disaster Recovery solutions for Oracle Fusion Middleware products
Azure reliability documentation
Build solutions for high availability
Automatic failover using Azure Traffic Manager
Learn more about Oracle WebLogic on Azure VMs
Learn more about Oracle WebLogic on AKS
Feedback
Was this page helpful?
Additional resources