Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Feed scopes: Project vs organization feeds
Article
2024-10-28
13 contributors
In this article
Azure DevOps Services | Azure DevOps Server 2022 - Azure DevOps Server 2019
Azure Artifacts enables developers to manage their dependencies from a single feed. A feed acts as an organizational space to host various types of packages, giving you control over who can access it, whether it's team members within your organization or even public users.
When creating a new feed in Azure Artifacts, you can choose to scope it to either a project or your organization, depending on your scenario. However, Azure Artifacts recommends scoping new feeds to a project. In this article, you'll learn about the key differences between the two types of feeds.
Create a feed
Sign in to your Azure DevOps organization and navigate to your project.
Sign in to your Azure DevOps organization and navigate to your project.
SelectArtifacts, and then selectCreate Feed.
SelectArtifacts, and then selectCreate Feed.
Provide aNamefor your feed, choose itsVisibilityto specify who can view your packages, and check theInclude packages from common public sourcescheckbox if you want to include packages from public sources such asnuget.org.
Provide aNamefor your feed, choose itsVisibilityto specify who can view your packages, and check theInclude packages from common public sourcescheckbox if you want to include packages from public sources such asnuget.org.
UnderScope, selectProjectto create a project-scoped feed, orOrganizationif you want an organization-scoped feed.
UnderScope, selectProjectto create a project-scoped feed, orOrganizationif you want an organization-scoped feed.
SelectCreatewhen you're done.
SelectCreatewhen you're done.

Note
Organization-scoped feeds cannot be converted to project-scoped feeds.
Project-scoped vs organization-scoped feeds
A project-scoped feed is scoped to a project instead of an organization. Here are the main differences between the two types of feeds:
https://pkgs.dev.azure.com/<ORG_NAME>/<PROJECT_NAME>/_packaging/<FEED_NAME>/nuget/v3/index.json
https://pkgs.dev.azure.com/<ORG_NAME>/_packaging/<FEED_NAME>/nuget/v3/index.json
Note
To add a feed from a different organization as an upstream source, the target feed owner must share the target view withAll feeds and people in organizations associated with my Microsoft Entra tenantby navigating toFeed Settings>Views> selecting the ellipsis button on the right for the specified view > then selectingEdit.
Tip
If you want to add an extra layer of security to your project-scoped feed and protect your feed's visibility, you can disable theAllow public projectspolicy from theOrganization Policy Settings.
Q&A
A: To make specific packages in your feed accessible to all users in your organization, create or select aviewthat contains the packages you want to share and  set its visibility toPeople in my organization.
Important
If a user has access to a specific view, they will still be able to view and download packages from that view even without feed-level permissions.
If you want to fully restrict access to your packages, ensure permissions are limited for both the feed and its views. SeeFeeds and views permissionsfor more details.
To allow a pipeline to access a project-scoped feed in a different project, you need to grant the pipeline access to both the project where the feed is scoped and to the feed itself.
Project permissions: navigate to the project hosting the feed, selectProject settings>Permissionsand then add your pipeline'sproject build serviceto the Contributors group or any group that grants contributor access.
Project permissions: navigate to the project hosting the feed, selectProject settings>Permissionsand then add your pipeline'sproject build serviceto the Contributors group or any group that grants contributor access.
Feed permissions: navigate to the feed you want to access, selectSettings>Feed permissions, and then add yourproject build serviceas aFeed and Upstream Reader (Collaborator). TheProject build serviceidentity is formatted as follows:[Project name] Build Service ([Organization name])(for example, FabrikamFiber Build Service (codesharing-demo)).
Feed permissions: navigate to the feed you want to access, selectSettings>Feed permissions, and then add yourproject build serviceas aFeed and Upstream Reader (Collaborator). TheProject build serviceidentity is formatted as follows:[Project name] Build Service ([Organization name])(for example, FabrikamFiber Build Service (codesharing-demo)).
[Project name] Build Service ([Organization name])
A: If your pipeline is failing to download an artifact from another project, ensure the following permissions are set for both the downstream project and the pipeline generating the artifact:
On the pipeline generating the artifact(upstream project): select the ellipsis for more options >Manage security> search for your downstream project's build service, then allow the following permissions:Update build information,View build pipeline, andView builds.
On the pipeline generating the artifact(upstream project): select the ellipsis for more options >Manage security> search for your downstream project's build service, then allow the following permissions:Update build information,View build pipeline, andView builds.
On the downstream project: navigate toProject Settings>Permissions>Users> search for your upstream project's name, then selectExpand search> select your upstream project's build service and enableView project-level information.
On the downstream project: navigate toProject Settings>Permissions>Users> search for your upstream project's name, then selectExpand search> select your upstream project's build service and enableView project-level information.
A: Yes, adding users to the Azure DevOps organization is still required for them to access the packages in the feed. You can add them asProject Collection Valid UsersfromOrganization Settings>Security>Permissions.
Related content
Configure feed permissions
Use feed views to share packages
Delete and recover packages
Feedback
Was this page helpful?
Additional resources