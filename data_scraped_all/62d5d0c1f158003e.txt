Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Reference an existing virtual network in an Azure scale set template
Article
2024-08-23
8 contributors
In this article
This article shows how to modify thebasic scale set templateto deploy into an existing virtual network instead of creating a new one.
Prerequisites
In a previous article we had created abasic scale set template. You will need that earlier template so that you can modify it to create a template that deploys a scale set into an existing virtual network.
Identify subnet
First, add asubnetIdparameter. This string is passed into the scale set configuration, allowing the scale set to identify the pre-created subnet to deploy virtual machines into. This string must be of the form:
subnetId
/subscriptions/<subscription-id>/resourceGroups/<resource-group-name>/providers/Microsoft.Network/virtualNetworks/<virtual-network-name>/subnets/<subnet-name>
/subscriptions/<subscription-id>/resourceGroups/<resource-group-name>/providers/Microsoft.Network/virtualNetworks/<virtual-network-name>/subnets/<subnet-name>
For instance, to deploy the scale set into an existing virtual network with namemyvnet, subnetmysubnet, resource groupmyrg, and subscription00000000-0000-0000-0000-000000000000, the subnetId would be:
myvnet
mysubnet
myrg
00000000-0000-0000-0000-000000000000
/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myrg/providers/Microsoft.Network/virtualNetworks/myvnet/subnets/mysubnet.
/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myrg/providers/Microsoft.Network/virtualNetworks/myvnet/subnets/mysubnet
},
      "adminPassword": {
        "type": "securestring"
+    },
+    "subnetId": {
+      "type": "string"
      }
    },
},
      "adminPassword": {
        "type": "securestring"
+    },
+    "subnetId": {
+      "type": "string"
      }
    },
Delete extra virtual network resource
Next, delete the virtual network resource from theresourcesarray, as you use an existing virtual network and don't need to deploy a new one.
resources
"variables": {},
    "resources": [
-    {
-      "type": "Microsoft.Network/virtualNetworks",
-      "name": "myVnet",
-      "location": "[resourceGroup().location]",
-      "apiVersion": "2018-11-01",
-      "properties": {
-        "addressSpace": {
-          "addressPrefixes": [
-            "10.0.0.0/16"
-          ]
-        },
-        "subnets": [
-          {
-            "name": "mySubnet",
-            "properties": {
-              "addressPrefix": "10.0.0.0/16"
-            }
-          }
-        ]
-      }
-    },
"variables": {},
    "resources": [
-    {
-      "type": "Microsoft.Network/virtualNetworks",
-      "name": "myVnet",
-      "location": "[resourceGroup().location]",
-      "apiVersion": "2018-11-01",
-      "properties": {
-        "addressSpace": {
-          "addressPrefixes": [
-            "10.0.0.0/16"
-          ]
-        },
-        "subnets": [
-          {
-            "name": "mySubnet",
-            "properties": {
-              "addressPrefix": "10.0.0.0/16"
-            }
-          }
-        ]
-      }
-    },
Remove dependency clause
The virtual network already exists before the template is deployed, so there is no need to specify adependsOnclause from the scale set to the virtual network. Delete the following lines:
dependsOn
{
        "type": "Microsoft.Compute/virtualMachineScaleSets",
        "name": "myScaleSet",
        "location": "[resourceGroup().location]",
        "apiVersion": "2019-03-01",
-      "dependsOn": [
-        "Microsoft.Network/virtualNetworks/myVnet"
-      ],
        "sku": {
          "name": "Standard_A1",
          "capacity": 2
{
        "type": "Microsoft.Compute/virtualMachineScaleSets",
        "name": "myScaleSet",
        "location": "[resourceGroup().location]",
        "apiVersion": "2019-03-01",
-      "dependsOn": [
-        "Microsoft.Network/virtualNetworks/myVnet"
-      ],
        "sku": {
          "name": "Standard_A1",
          "capacity": 2
Pass subnet parameter
Finally, pass in thesubnetIdparameter set by the user (instead of usingresourceIdto get the ID of a vnet in the same deployment, which is what the basic viable scale set template does).
subnetId
resourceId
"name": "myIpConfig",
                        "properties": {
                          "subnet": {
-                          "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', 'myVnet'), '/subnets/mySubnet')]"
+                          "id": "[parameters('subnetId')]"
                          }
                        }
                      }
"name": "myIpConfig",
                        "properties": {
                          "subnet": {
-                          "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', 'myVnet'), '/subnets/mySubnet')]"
+                          "id": "[parameters('subnetId')]"
                          }
                        }
                      }
Next steps
You can deploy the preceding template by following theAzure Resource Manager documentation.
You can start this tutorial series from thebasic scale set template article.
You can see how to modify thebasic scale set templatetodeploy the scale set into an existing virtual network.
You can see how to modify thebasic scale set templatetodeploy the scale set with a custom image.
You can see how to modify thebasic scale set templatetodeploy a Linux scale set with guest-based autoscale.
For more information about scale sets, refer to thescale set overview page.
Feedback
Was this page helpful?
Additional resources