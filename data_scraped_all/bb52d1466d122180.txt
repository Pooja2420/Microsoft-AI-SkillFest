Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Azure Cosmos DB for PostgreSQL compute and storage
Article
2024-08-14
3 contributors
In this article
APPLIES TO:Azure Cosmos DB for PostgreSQL (powered by theCitus database
extensionto PostgreSQL)
Compute resources are provided as vCores, which represent the logical CPU of
the underlying hardware. The storage size for provisioning refers to the
capacity available to the coordinator and worker nodes in your cluster. The
storage includes database files, temporary files, transaction logs, and the
Postgres server logs.
Multi-node cluster
You can select the compute and storage settings independently for worker nodes
and the coordinator node in a multi-node cluster.
The total amount of RAM in a single node is based on the
selected number of vCores.
The total amount of storage you provision also defines the I/O capacity
available to each worker and coordinator node.
For the entire cluster, the aggregated IOPS work out to the
following values:
Single node cluster
Single-node cluster resource options differ betweenburstable
computeand regular compute.
Burstable compute
Regular compute
â  1024 GiB and 2048 GiB are supported with 8 vCores or greater.
Maximum IOPS for your compute / storage configuration
Each compute configuration has an IOPS limit that depends on the number of vCores in a node. Make sure you select compute configuration for the coordinator and worker nodes in your cluster to fully utilize IOPS in the selected storage.
Worker nodes, per node
Coordinator and single node with regular compute
To put it another way, if you need 8 TiB of storage per node or more, make sure you select 16 vCores or more for the node's compute configuration. That would allow you to maximize IOPS usage provided by the selected storage.
Next steps
Learn how tocreate a cluster in the portal
Changecompute quotasfor a subscription and region
Feedback
Was this page helpful?
Additional resources