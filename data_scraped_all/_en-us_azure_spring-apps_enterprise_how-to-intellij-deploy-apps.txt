Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Deploy Spring Boot applications using IntelliJ
Article
2025-01-31
2 contributors
In this article
Note
TheBasic,Standard, andEnterpriseplans entered a retirement period on March 17, 2025. For more information, see theAzure Spring Apps retirement announcement.
TheStandard consumption and dedicatedplan entered a retirement period on September 30, 2024, with a complete shutdown by the end of March 2025. For more information, seeMigrate Azure Spring Apps Standard consumption and dedicated plan to Azure Container Apps.
This article applies to:â Java â C#
This article applies to:â Basic/Standard â Enterprise
The IntelliJ plug-in for Azure Spring Apps supports application deployment from IntelliJ IDEA.
Before running this example, you can try thebasic quickstart.
Prerequisites
IntelliJ IDEA, Community/Ultimate Edition, version 2020.x or higher
Install the plug-in
You can add the Azure Toolkit for IntelliJ IDEA 3.51.0 from the IntelliJPluginsUI.
Start IntelliJ. If you have opened a project previously, close the project to show the welcome dialog. SelectConfigurefrom link lower right, and then selectPluginsto open the plug-in configuration dialog, and selectInstall Plugins from disk.
Start IntelliJ. If you have opened a project previously, close the project to show the welcome dialog. SelectConfigurefrom link lower right, and then selectPluginsto open the plug-in configuration dialog, and selectInstall Plugins from disk.

Search for Azure Toolkit for IntelliJ. SelectInstall.
Search for Azure Toolkit for IntelliJ. SelectInstall.

SelectRestart IDE.
SelectRestart IDE.
Tutorial procedures
The following procedures deploy a Hello World application using IntelliJ IDEA.
Open the gs-spring-boot project
Deploy to Azure Spring Apps
Show streaming logs
Open gs-spring-boot project
Download and unzip the source repository for this tutorial, or clone it using the following Git command:git clone https://github.com/spring-guides/gs-spring-boot.git
Download and unzip the source repository for this tutorial, or clone it using the following Git command:git clone https://github.com/spring-guides/gs-spring-boot.git
git clone https://github.com/spring-guides/gs-spring-boot.git
Navigate to thegs-spring-boot\completefolder.
Navigate to thegs-spring-boot\completefolder.
Open IntelliJWelcomedialog, selectImport Projectto open the import wizard.
Open IntelliJWelcomedialog, selectImport Projectto open the import wizard.
Select thegs-spring-boot\completefolder.
Select thegs-spring-boot\completefolder.

Deploy to Azure Spring Apps
In order to deploy to Azure you must sign-in with your Azure account, and choose your subscription. For sign-in details, seeInstall and sign-in.
Right-click your project in IntelliJ project explorer, and selectAzure->Deploy to Azure Spring Apps.
Right-click your project in IntelliJ project explorer, and selectAzure->Deploy to Azure Spring Apps.

Accept the name for app in theNamefield.Namerefers to the configuration, not app name. Users don't usually need to change it.
Accept the name for app in theNamefield.Namerefers to the configuration, not app name. Users don't usually need to change it.
Accept the identifier from the project for theArtifact.
Accept the identifier from the project for theArtifact.
SelectApp:then click+to create an Azure Spring Apps instance.
SelectApp:then click+to create an Azure Spring Apps instance.

EnterApp name, then selectOK.
EnterApp name, then selectOK.

Start the deployment by selecting theRunbutton.
Start the deployment by selecting theRunbutton.

The plug-in will run the commandmvn packageon the project and then create the new app and deploy the jar generated by thepackagecommand.
The plug-in will run the commandmvn packageon the project and then create the new app and deploy the jar generated by thepackagecommand.
mvn package
package
If the app URL is not shown in the output window, get it from the Azure portal. Navigate from your resource group to the instance of Azure Spring Apps. Then selectApps. The running app will be listed. Select the app, then copy theURLorTest Endpoint.
If the app URL is not shown in the output window, get it from the Azure portal. Navigate from your resource group to the instance of Azure Spring Apps. Then selectApps. The running app will be listed. Select the app, then copy theURLorTest Endpoint.

Navigate to the URL or Test Endpoint in the browser.
Navigate to the URL or Test Endpoint in the browser.

Show streaming logs
To get the logs:
SelectAzure Explorer, thenSpring Apps.
SelectAzure Explorer, thenSpring Apps.
Right-click the running app.
Right-click the running app.
SelectStreaming Logfrom the drop-down list.
SelectStreaming Logfrom the drop-down list.

Select instance.
Select instance.

The streaming log will be visible in the output window.
The streaming log will be visible in the output window.

Next steps
Prepare Spring application for Azure Spring Apps
Learn more about Azure Toolkit for IntelliJ
Feedback
Was this page helpful?
Additional resources