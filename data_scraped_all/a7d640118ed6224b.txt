Choose an Azure compute service
Azure offers many ways to host your application code. The termcomputerefers to the hosting model for the resources that your application runs on. This article helps choose a compute service for your application.
Choose a candidate service
Use the following flowchart to select a candidate compute service.

Download a Visio fileof this decision tree.
This diagram refers to two migration strategies:
Lift and shift: A strategy for migrating a workload to the cloud without redesigning the application or making code changes. It's also calledrehosting. For more information, seeAzure migration and modernization center.
Cloud optimized: A strategy for migrating to the cloud by refactoring an application to take advantage of cloud-native features and capabilities.
The output from this flowchart is your starting point. Next, evaluate the service to see if it meets your needs.
This article includes several tables that can help you choose a service. The initial candidate from the flowchart might be unsuitable for your application or workload. In that case, expand your analysis to include other compute services.
If your application consists of multiple workloads, evaluate each workload separately. A complete solution can incorporate two or more compute services.
Understand the basic features
If you're not familiar with the Azure service selected in the previous section, see this overview documentation:
Azure Virtual Machines: A service where you deploy and manage virtual machines (VMs) inside an Azure virtual network.
Azure App Service: A managed service for hosting web apps, mobile app back ends, RESTful APIs, or automated business processes.
Azure Functions: A service that provides managed functions that run based on a variety of trigger types for event-driven applications.
Azure Kubernetes Service (AKS): A managed Kubernetes service for running containerized applications.
Azure Container Apps: A managed service built on Kubernetes, which simplifies the deployment of containerized applications in a serverless environment.
Azure Container Instances: This service is a fast and simple way to run a single container or group of containers in Azure. Azure Container Instances doesn't provide full container orchestration, but you can implement them without having to provision any VMs or adopt a higher-level service.
Azure Red Hat OpenShift: A fully managed OpenShift cluster for running containers in production with Kubernetes.
Azure Service Fabric: A distributed systems platform that can run in many environments, including Azure or on-premises.
Azure Batch: A managed service for running large-scale parallel and high-performance computing (HPC) applications.
Azure VMware Solution: A managed service for running VMware workloads natively on Azure.
Understand the hosting models
For hosting models, cloud services fall into three categories:
Infrastructure as a service (IaaS): Lets you provision VMs along with the associated networking and storage components. Then you can deploy whatever software and applications you want onto those VMs. This model is the closest to a traditional on-premises environment. Microsoft manages the infrastructure. You still manage the VMs.
Infrastructure as a service (IaaS): Lets you provision VMs along with the associated networking and storage components. Then you can deploy whatever software and applications you want onto those VMs. This model is the closest to a traditional on-premises environment. Microsoft manages the infrastructure. You still manage the VMs.
Platform as a service (PaaS): Provides a managed hosting environment where you can deploy your application without needing to manage VMs or networking resources. Azure App Service and Azure Container Apps are PaaS services.
Platform as a service (PaaS): Provides a managed hosting environment where you can deploy your application without needing to manage VMs or networking resources. Azure App Service and Azure Container Apps are PaaS services.
Functions as a service (FaaS): Lets you deploy your code to the service, which automatically runs it. Azure Functions is a FaaS service.NoteAzure Functions is anAzure serverlesscompute offering. To see how this service compares with other Azure serverless offerings, such as Logic Apps, which provides serverless workflows, seeChoose the right integration and automation services in Azure.
Functions as a service (FaaS): Lets you deploy your code to the service, which automatically runs it. Azure Functions is a FaaS service.
Note
Azure Functions is anAzure serverlesscompute offering. To see how this service compares with other Azure serverless offerings, such as Logic Apps, which provides serverless workflows, seeChoose the right integration and automation services in Azure.
There's a spectrum from IaaS to pure PaaS. For example, Azure VMs can automatically scale by using virtual machine scale sets. This capability isn't strictly a PaaS, but it's the type of management feature found in PaaS.
There's a tradeoff between control and ease of management. IaaS gives the most control, flexibility, and portability, but you have to provision, configure, and manage the VMs and network components you create. FaaS services automatically manage nearly all aspects of running an application. PaaS falls somewhere in between.
Notes
If you're using a Consumption plan. For an App Service plan, functions run on the VMs allocated for your App Service plan. SeeChoose the correct service plan for Azure Functions.
Higher service-level agreement (SLA) with two or more instances.
Recommended for production environments.
Can scale down to zero after job completes.
Three for primary nodes and three for worker nodes.
When usingDurable Functions.
Require minimum number ofthree nodes.
Networking
Notes
Requires App Service Environment.
UseAzure App Service Hybrid Connections.
Requires App Service plan orAzure Functions Premium plan.
DevOps
Notes
Options include IIS Express for ASP.NET or node.js (iisnode), PHP web server, Azure Toolkit for IntelliJ, and Azure Toolkit for Eclipse. App Service also supports remote debugging of deployed web app.
Scalability
Notes
SeeAutoscale pods.
SeeAutomatically scale a cluster to meet application demands on Azure Kubernetes Service.
SeeAzure subscription and service limits, quotas, and constraints.
SeeSet scaling rules in Azure Container Apps.
SeeScale a Azure VMware Solution.
SeeVMware NSX.
Availability
For guided learning on service guarantees, seeCore Cloud Services - Azure architecture and service guarantees.
Security
Review and understand the available security controls and visibility for each service:
Azure Windows virtual machine
Azure Linux virtual machine
Azure App Service
Azure Functions
Azure Kubernetes Service
Azure Container Instances
Azure Service Fabric
Azure Batch
Azure VMware Solution
Other criteria
Consider limits and cost
Along with the previous comparison tables, do a more detailed evaluation of the following aspects of the candidate service:
Service limits
Cost
SLA
Regional availability
Contributors
This article is maintained by Microsoft. It was originally written by the following contributors:
Ayobami Ayodeji| Senior Program Manager
Jelle Druyts| Principal Service Engineer
Martin Gjoshevski| Senior Service Engineer
Phil Huang| Senior Cloud Solution Architect
Julie Ng| Senior Service Engineer
Paolo Salvatori| Principal Service Engineer
To see nonpublic LinkedIn profiles, sign in to LinkedIn.
Next steps
Core Cloud Services - Azure compute options. This Learn module explores how compute services can solve common business needs.
Related resources
Choose an Azure compute option for microservices
Technology choices for Azure solutions