Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Assign Azure roles using the REST API
Article
2025-03-30
8 contributors
In this article
Azure role-based access control (Azure RBAC)is the authorization system you use to manage access to Azure resources. To grant access, you assign roles to users, groups, service principals, or managed identities at a particular scope. This article describes how to assign roles using the REST API.
Prerequisites
To assign Azure roles, you must have:
Microsoft.Authorization/roleAssignments/writepermissions, such asRole Based Access Control AdministratororUser Access Administrator
Microsoft.Authorization/roleAssignments/write
You must use the following versions:
2015-07-01or later to assign an Azure role
2015-07-01
2018-09-01-previewor later to assign an Azure role to a new service principal
2018-09-01-preview
For more information, seeAPI versions of Azure RBAC REST APIs.
Assign an Azure role
To assign a role, use theRole Assignments - CreateREST API and specify the security principal, role definition, and scope. To call this API, you must have access to theMicrosoft.Authorization/roleAssignments/writeaction, such asRole Based Access Control Administrator.
Microsoft.Authorization/roleAssignments/write
Use theRole Definitions - ListREST API or seeBuilt-in rolesto get the identifier for the role definition you want to assign.
Use theRole Definitions - ListREST API or seeBuilt-in rolesto get the identifier for the role definition you want to assign.
Use a GUID tool to generate a unique identifier that will be used for the role assignment identifier. The identifier has the format:00000000-0000-0000-0000-000000000000
Use a GUID tool to generate a unique identifier that will be used for the role assignment identifier. The identifier has the format:00000000-0000-0000-0000-000000000000
00000000-0000-0000-0000-000000000000
Start with the following request and body:PUT https://management.azure.com/{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentId}?api-version=2022-04-01{
  "properties": {
    "roleDefinitionId": "/{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}",
    "principalId": "{principalId}"
  }
}
Start with the following request and body:
PUT https://management.azure.com/{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentId}?api-version=2022-04-01
PUT https://management.azure.com/{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentId}?api-version=2022-04-01
{
  "properties": {
    "roleDefinitionId": "/{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}",
    "principalId": "{principalId}"
  }
}
{
  "properties": {
    "roleDefinitionId": "/{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}",
    "principalId": "{principalId}"
  }
}
Within the URI, replace{scope}with the scope for the role assignment.ScopeTypeproviders/Microsoft.Management/managementGroups/{groupId1}Management groupsubscriptions/{subscriptionId1}Subscriptionsubscriptions/{subscriptionId1}/resourceGroups/myresourcegroup1Resource groupsubscriptions/{subscriptionId1}/resourceGroups/myresourcegroup1/providers/microsoft.web/sites/mysite1ResourceIn the previous example, microsoft.web is a resource provider that refers to an App Service instance. Similarly, you can use any other resource providers and specify the scope. For more information, seeAzure Resource providers and typesand supportedAzure resource provider operations.
Within the URI, replace{scope}with the scope for the role assignment.
providers/Microsoft.Management/managementGroups/{groupId1}
subscriptions/{subscriptionId1}
subscriptions/{subscriptionId1}/resourceGroups/myresourcegroup1
subscriptions/{subscriptionId1}/resourceGroups/myresourcegroup1/providers/microsoft.web/sites/mysite1
In the previous example, microsoft.web is a resource provider that refers to an App Service instance. Similarly, you can use any other resource providers and specify the scope. For more information, seeAzure Resource providers and typesand supportedAzure resource provider operations.
Replace{roleAssignmentId}with the GUID identifier of the role assignment.
Replace{roleAssignmentId}with the GUID identifier of the role assignment.
Within the request body, replace{scope}with the same scope as in the URI.
Within the request body, replace{scope}with the same scope as in the URI.
Replace{roleDefinitionId}with the role definition identifier.
Replace{roleDefinitionId}with the role definition identifier.
Replace{principalId}with the object identifier of the user, group, or service principal that will be assigned the role.
Replace{principalId}with the object identifier of the user, group, or service principal that will be assigned the role.
The following request and body assigns theBackup Readerrole to a user at subscription scope:
PUT https://management.azure.com/subscriptions/{subscriptionId1}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentId1}?api-version=2022-04-01
PUT https://management.azure.com/subscriptions/{subscriptionId1}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentId1}?api-version=2022-04-01
{
  "properties": {
    "roleDefinitionId": "/subscriptions/{subscriptionId1}/providers/Microsoft.Authorization/roleDefinitions/a795c7a0-d4a2-40c1-ae25-d81f01202912",
    "principalId": "{objectId1}"
  }
}
{
  "properties": {
    "roleDefinitionId": "/subscriptions/{subscriptionId1}/providers/Microsoft.Authorization/roleDefinitions/a795c7a0-d4a2-40c1-ae25-d81f01202912",
    "principalId": "{objectId1}"
  }
}
The following shows an example of the output:
{
    "properties": {
        "roleDefinitionId": "/subscriptions/{subscriptionId1}/providers/Microsoft.Authorization/roleDefinitions/a795c7a0-d4a2-40c1-ae25-d81f01202912",
        "principalId": "{objectId1}",
        "principalType": "User",
        "scope": "/subscriptions/{subscriptionId1}",
        "condition": null,
        "conditionVersion": null,
        "createdOn": "2022-05-06T23:55:23.7679147Z",
        "updatedOn": "2022-05-06T23:55:23.7679147Z",
        "createdBy": null,
        "updatedBy": "{updatedByObjectId1}",
        "delegatedManagedIdentityResourceId": null,
        "description": null
    },
    "id": "/subscriptions/{subscriptionId1}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentId1}",
    "type": "Microsoft.Authorization/roleAssignments",
    "name": "{roleAssignmentId1}"
}
{
    "properties": {
        "roleDefinitionId": "/subscriptions/{subscriptionId1}/providers/Microsoft.Authorization/roleDefinitions/a795c7a0-d4a2-40c1-ae25-d81f01202912",
        "principalId": "{objectId1}",
        "principalType": "User",
        "scope": "/subscriptions/{subscriptionId1}",
        "condition": null,
        "conditionVersion": null,
        "createdOn": "2022-05-06T23:55:23.7679147Z",
        "updatedOn": "2022-05-06T23:55:23.7679147Z",
        "createdBy": null,
        "updatedBy": "{updatedByObjectId1}",
        "delegatedManagedIdentityResourceId": null,
        "description": null
    },
    "id": "/subscriptions/{subscriptionId1}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentId1}",
    "type": "Microsoft.Authorization/roleAssignments",
    "name": "{roleAssignmentId1}"
}
New service principal
If you create a new service principal and immediately try to assign a role to that service principal, that role assignment can fail in some cases. For example, if you create a new managed identity and then try to assign a role to that service principal, the role assignment might fail. The reason for this failure is likely a replication delay. The service principal is created in one region; however, the role assignment might occur in a different region that hasn't replicated the service principal yet.
To address this scenario, use theRole Assignments - CreateREST API and set theprincipalTypeproperty toServicePrincipal. You must also set theapiVersionto2018-09-01-previewor later.2022-04-01is the first stable version.
principalType
ServicePrincipal
apiVersion
2018-09-01-preview
2022-04-01
PUT https://management.azure.com/{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentId}?api-version=2022-04-01
PUT https://management.azure.com/{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentId}?api-version=2022-04-01
{
  "properties": {
    "roleDefinitionId": "/{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}",
    "principalId": "{principalId}",
    "principalType": "ServicePrincipal"
  }
}
{
  "properties": {
    "roleDefinitionId": "/{scope}/providers/Microsoft.Authorization/roleDefinitions/{roleDefinitionId}",
    "principalId": "{principalId}",
    "principalType": "ServicePrincipal"
  }
}
Next steps
List Azure role assignments using the REST API
Deploy resources with Resource Manager templates and Resource Manager REST API
Azure REST API Reference
Create or update Azure custom roles using the REST API
Feedback
Was this page helpful?
Additional resources