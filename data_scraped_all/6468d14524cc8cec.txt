Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Language role-based access control
Article
2024-11-21
7 contributors
In this article
Azure AI Language supports Azure role-based access control (Azure RBAC), an authorization system for managing individual access to Azure resources. Using Azure RBAC, you assign different team members different levels of permissions for your projects authoring resources. See theAzure RBAC documentationfor more information.

Enable Microsoft Entra authentication
To use Azure RBAC, you must enable Microsoft Entra authentication. You cancreate a new resource with a custom subdomainorcreate a custom subdomain for your existing resource.
Add role assignment to Language resource
Azure RBAC can be assigned to a Language resource. To grant access to an Azure resource, you add a role assignment.
In theAzure portal, selectAll services.
In theAzure portal, selectAll services.
SelectAzure AI services, and navigate to your specific Language resource.NoteYou can also set up Azure RBAC for whole resource groups, subscriptions, or management groups. Do this by selecting the desired scope level and then navigating to the desired item. For example, selectingResource groupsand then navigating to a specific resource group.
SelectAzure AI services, and navigate to your specific Language resource.
Note
You can also set up Azure RBAC for whole resource groups, subscriptions, or management groups. Do this by selecting the desired scope level and then navigating to the desired item. For example, selectingResource groupsand then navigating to a specific resource group.
SelectAccess control (IAM)on the left pane.
SelectAccess control (IAM)on the left pane.
SelectAdd, then selectAdd role assignment.
SelectAdd, then selectAdd role assignment.
On theRoletab on the next screen, select a role you want to add.
On theRoletab on the next screen, select a role you want to add.
On theMemberstab, select a user, group, service principal, or managed identity.
On theMemberstab, select a user, group, service principal, or managed identity.
On theReview + assigntab, selectReview + assignto assign the role.
On theReview + assigntab, selectReview + assignto assign the role.
Within a few minutes, the target will be assigned the selected role at the selected scope. For help with these steps, seeAssign Azure roles using the Azure portal.
Language role types
Use the following table to determine access needs for your Language projects.
These custom roles only apply to Language resources.
Note
All prebuilt capabilities are accessible to all roles
OwnerandContributorroles take priority over the custom language roles
Microsoft Entra ID is only used in case of custom Language roles
If you are assigned as aContributoron Azure, your role will be shown asOwnerin Language studio portal.
Cognitive Services Language Reader
A user that should only be validating and reviewing the Language apps, typically a tester to ensure the application is performing well before deploying the project. They may want to review the applicationâs assets to notify the app developers of any changes that need to be made, but do not have direct access to make them. Readers will have access to view the evaluation results.
Capabilities
API Access
Read
Test
All GET APIs under:
Language authoring conversational language understanding APIs
Language authoring text analysis APIs
Question answering projectsOnlyTriggerExportProjectJobPOST operation under:
TriggerExportProjectJob
Language authoring conversational language understanding export API
Language authoring text analysis export APIOnly Export POST operation under:
Question Answering ProjectsAll the Batch Testing Web APIs
*Language Runtime CLU APIs*Language Runtime Text Analysis APIs
Cognitive Services Language Writer
A user that is responsible for building and modifying an application, as a collaborator in a larger team. The collaborator can modify the Language apps in any way, train those changes, and validate/test those changes in the portal. However, this user shouldnât have access to deploying this application to the runtime, as they may accidentally reflect their changes in production. They also shouldnât be able to delete the application or alter its prediction resources and endpoint settings (assigning or unassigning prediction resources, making the endpoint public). This restricts this role from altering an application currently being used in production. They may also create new applications under this resource, but with the restrictions mentioned.
Capabilities
API Access
All functionalities under Cognitive Services Language Reader.
Ability to:
Train
Write
All APIs under Language reader
All POST, PUT and PATCH APIs under:
Language conversational language understanding APIs
Language text analysis APIs
question answering projectsExcept for
Delete deployment
Delete trained model
Delete Project
Deploy Model
Cognitive Services Language Owner
Note
If you are assigned as anOwnerandLanguage Owneryou will be shown asCognitive Services Language Ownerin Language studio portal.
These users are the gatekeepers for the Language applications in production environments. They should have full access to any of the underlying functions and thus can view everything in the application and have direct access to edit any changes for both authoring and runtime environments
Functionality
API Access
All functionalities under Cognitive Services Language Writer
Deploy
Delete
All APIs available under:
Language authoring conversational language understanding APIs
Language authoring text analysis APIs
question answering projects
Feedback
Was this page helpful?
Additional resources