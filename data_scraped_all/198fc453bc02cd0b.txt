Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Connect to Azure Blob Storage from workflows in Azure Logic Apps
Article
2024-01-18
13 contributors
In this article
Applies to:Azure Logic Apps (Consumption + Standard)
This how-to guide shows how to access your Azure Blob Storage account and container from a workflow in Azure Logic Apps using the Azure Blob Storage connector. This connector provides triggers and actions that your workflow can use for blob operations. You can then create automated workflows that run when triggered by events in your storage container or in other systems, and run actions to work with data in your storage container. For example, you can access and manage files stored as blobs in your Azure storage account.
You can connect to Azure Blob Storage from a workflow inLogic App (Consumption)andLogic App (Standard)resource types. You can use the connector with logic app workflows in multitenant Azure Logic Apps and single-tenant Azure Logic Apps. WithLogic App (Standard), you can use either theAzure Blobbuilt-inconnector operations or theAzure Blob Storagemanaged connector operations.
Connector technical reference
The Azure Blob Storage connector has different versions, based onlogic app type and host environment.
Limitations
Azure Blob Storagemanagedconnector actions can read or write files that are50 MB or smaller. To handle files larger than 50 MB but up to 1024 MB, Azure Blob Storage actions supportmessage chunking. The Blob Storage action namedGet blob contentimplicitly uses chunking.
Azure Blob Storagemanagedconnector actions can read or write files that are50 MB or smaller. To handle files larger than 50 MB but up to 1024 MB, Azure Blob Storage actions supportmessage chunking. The Blob Storage action namedGet blob contentimplicitly uses chunking.
While Azure Blob Storagemanagedandbuilt-intriggers don't support chunking, thebuilt-intriggers can handle files that are 50 MB or more. However, when amanagedtrigger requests file content, the trigger selects only files that are 50 MB or smaller. To get files larger than 50 MB, follow this pattern:Use a Blob trigger that returns file properties, such asWhen a blob is added or modified (properties only).Follow the trigger with the Azure Blob Storage managed connector action namedGet blob content, which reads the complete file and implicitly uses chunking.
While Azure Blob Storagemanagedandbuilt-intriggers don't support chunking, thebuilt-intriggers can handle files that are 50 MB or more. However, when amanagedtrigger requests file content, the trigger selects only files that are 50 MB or smaller. To get files larger than 50 MB, follow this pattern:
Use a Blob trigger that returns file properties, such asWhen a blob is added or modified (properties only).
Use a Blob trigger that returns file properties, such asWhen a blob is added or modified (properties only).
Follow the trigger with the Azure Blob Storage managed connector action namedGet blob content, which reads the complete file and implicitly uses chunking.
Follow the trigger with the Azure Blob Storage managed connector action namedGet blob content, which reads the complete file and implicitly uses chunking.
Azure Blob Storage trigger limitsThemanagedconnector trigger is limited to 30,000 blobs in the polling virtual folder.Thebuilt-inconnector trigger is limited to 10,000 blobs in the entire polling container.If the limit is exceeded, a new blob might not be able to trigger the workflow, so the trigger is skipped.
Azure Blob Storage trigger limits
Themanagedconnector trigger is limited to 30,000 blobs in the polling virtual folder.
Thebuilt-inconnector trigger is limited to 10,000 blobs in the entire polling container.
If the limit is exceeded, a new blob might not be able to trigger the workflow, so the trigger is skipped.
Prerequisites
An Azure account and subscription. If you don't have an Azure subscription,sign up for a free Azure account.
An Azure account and subscription. If you don't have an Azure subscription,sign up for a free Azure account.
AnAzure storage account and blob container
AnAzure storage account and blob container
The logic app workflow from where you want to access your Azure Storage account. To start your workflow with an Azure Blob trigger, you need a blank workflow. To use an Azure Blob action, start your workflow with any trigger.
The logic app workflow from where you want to access your Azure Storage account. To start your workflow with an Azure Blob trigger, you need a blank workflow. To use an Azure Blob action, start your workflow with any trigger.

Add a Blob trigger
A Consumption logic app workflow can use only the Azure Blob Storage managed connector. However, a Standard logic app workflow can use the Azure Blob Storage managed connector and the Azure blob built-in connector. Although both connector versions provide only one Blob trigger, the trigger name differs as follows, based on whether you're working with a Consumption or Standard workflow:
The following steps use the Azure portal, but with the appropriate Azure Logic Apps extension, you can also use the following tools to create logic app workflows:
Consumption logic app workflows:Visual Studio Code
Consumption logic app workflows:Visual Studio Code
Standard logic app workflows:Visual Studio Code
Standard logic app workflows:Visual Studio Code
Consumption
Standard
In theAzure portal, open your Consumption logic app and blank workflow in the designer.
In theAzure portal, open your Consumption logic app and blank workflow in the designer.
In the designer, under the search box, selectStandard, and thenfollow these general steps to add the Azure Blob Storage managed trigger you want.This example continues with the trigger namedWhen a blob is added or modified (properties only).
In the designer, under the search box, selectStandard, and thenfollow these general steps to add the Azure Blob Storage managed trigger you want.
This example continues with the trigger namedWhen a blob is added or modified (properties only).
If prompted, provide the following information for your connection to your storage account. When you're done, selectCreate.PropertyRequiredDescriptionConnection nameYesA name for your connectionAuthentication TypeYesTheauthentication typefor your storage account. For more information, reviewAuthentication types for triggers and actions that support authentication - Secure access and data.For example, this connection uses access key authentication and provides the access key value for the storage account along with the following property values:PropertyRequiredValueDescriptionAzure Storage Account nameYes, but only for access key authentication<storage-account-name>The name for the Azure storage account where your blob container exists.Note: To find the storage account name, open your storage account resource in the Azure portal. In the resource menu, underSecurity + networking, selectAccess keys. UnderStorage account name, copy and save the name.Azure Storage Account Access KeyYes,but only for access key authentication<storage-account-access-key>The access key for your Azure storage account.Note: To find the access key, open your storage account resource in the Azure portal. In the resource menu, underSecurity + networking, selectAccess keys>key1>Show. Copy and save the primary key value.
If prompted, provide the following information for your connection to your storage account. When you're done, selectCreate.
For example, this connection uses access key authentication and provides the access key value for the storage account along with the following property values:

After the trigger information box appears, provide the necessary information.For theContainerproperty value, select the folder icon to browse for your blob container. Or, enter the path manually using the syntax/<container-name>, for example:
After the trigger information box appears, provide the necessary information.
For theContainerproperty value, select the folder icon to browse for your blob container. Or, enter the path manually using the syntax/<container-name>, for example:

To add other properties available for this trigger, open theAdd new parameter list, and select the properties that you want.For more information, reviewAzure Blob Storage managed connector trigger properties.
To add other properties available for this trigger, open theAdd new parameter list, and select the properties that you want.
For more information, reviewAzure Blob Storage managed connector trigger properties.
Add any other actions that your workflow requires.
Add any other actions that your workflow requires.
When you're done, save your workflow. On the designer toolbar, selectSave.
When you're done, save your workflow. On the designer toolbar, selectSave.
The steps to add and use a Blob trigger differ based on whether you want to use the built-in connector or the managed, Azure-hosted connector.
Built-in trigger: Describes the steps to add the built-in trigger.
Built-in trigger: Describes the steps to add the built-in trigger.
Managed trigger: Describes the steps to add the managed trigger.
Managed trigger: Describes the steps to add the managed trigger.

In theAzure portal, open your Standard logic app and blank workflow in the designer.
In theAzure portal, open your Standard logic app and blank workflow in the designer.
In the designer,follow these general steps to find and add the Azure Blob Storage built-in trigger you want.This example continues with the trigger namedWhen a blob is added or updated.
In the designer,follow these general steps to find and add the Azure Blob Storage built-in trigger you want.
This example continues with the trigger namedWhen a blob is added or updated.
If prompted, provide the following information for your connection to your storage account. When you're done, selectCreate.PropertyRequiredDescriptionConnection nameYesA name for your connectionAuthentication typeYesTheauthentication typefor your storage account. For more information, reviewAuthentication types for triggers and actions that support authentication - Secure access and data.For example, this connection uses connection string authentication and provides the connection string value for the storage account:PropertyRequiredValueDescriptionStorage account connection stringYes,but only for connection string authentication<storage-account-connection-string>The connection string for your Azure storage account.Note: To find the connection string, open your storage account resource in the Azure portal. In the resource menu, underSecurity + networking, selectAccess keys>key1>Connection string>Show. Copy and save the connection string for the primary key.
If prompted, provide the following information for your connection to your storage account. When you're done, selectCreate.
For example, this connection uses connection string authentication and provides the connection string value for the storage account:

After the trigger information box appears, provide the necessary information.For theBlob pathproperty, enter the name of the folder that you want to monitor.To find the folder name, open your storage account in the Azure portal.In the navigation menu, underData Storage, selectContainers.Select your blob container. Find the name for the folder that you want to monitor.Return to the designer. In theBlob pathproperty, enter the path for the container, folder, or blob, based on whether you're checking for new blobs or changes to an existing blob. The syntax varies based on the check that you want to run and any filtering that you want to use:TaskPath syntaxCheck the root folder and its nested subfolders for a newly added blob.<container-name>Check the root folder for changes to a specific blob.<container-name>/<blob-name>.<blob-extension>Check the root folder for changes to any blobs with the same extension, for example,.txt.<container-name>/{name}.txtImportant: Make sure that you use{name}as a literal.Check the root folder for changes to any blobs with names starting with a specific string, for example,Sample-.<container-name>/Sample-{name}Important: Make sure that you use{name}as a literal.Check a subfolder for a newly added blob.<container-name>/<subfolder>/{blobname}.{blobextension}Important: Make sure that you use{blobname}.{blobextension}as a literal.Check a subfolder for changes to a specific blob.<container-name>/<subfolder>/<blob-name>.<blob-extension>For more syntax and filtering options, reviewAzure Blob storage trigger for Azure Functions.The following example shows a trigger setup that checks the root folder for a newly added blob:The following example shows a trigger setup that checks a subfolder for changes to an existing blob:
After the trigger information box appears, provide the necessary information.
For theBlob pathproperty, enter the name of the folder that you want to monitor.
To find the folder name, open your storage account in the Azure portal.
To find the folder name, open your storage account in the Azure portal.
In the navigation menu, underData Storage, selectContainers.
In the navigation menu, underData Storage, selectContainers.
Select your blob container. Find the name for the folder that you want to monitor.
Select your blob container. Find the name for the folder that you want to monitor.
Return to the designer. In theBlob pathproperty, enter the path for the container, folder, or blob, based on whether you're checking for new blobs or changes to an existing blob. The syntax varies based on the check that you want to run and any filtering that you want to use:TaskPath syntaxCheck the root folder and its nested subfolders for a newly added blob.<container-name>Check the root folder for changes to a specific blob.<container-name>/<blob-name>.<blob-extension>Check the root folder for changes to any blobs with the same extension, for example,.txt.<container-name>/{name}.txtImportant: Make sure that you use{name}as a literal.Check the root folder for changes to any blobs with names starting with a specific string, for example,Sample-.<container-name>/Sample-{name}Important: Make sure that you use{name}as a literal.Check a subfolder for a newly added blob.<container-name>/<subfolder>/{blobname}.{blobextension}Important: Make sure that you use{blobname}.{blobextension}as a literal.Check a subfolder for changes to a specific blob.<container-name>/<subfolder>/<blob-name>.<blob-extension>For more syntax and filtering options, reviewAzure Blob storage trigger for Azure Functions.The following example shows a trigger setup that checks the root folder for a newly added blob:The following example shows a trigger setup that checks a subfolder for changes to an existing blob:
Return to the designer. In theBlob pathproperty, enter the path for the container, folder, or blob, based on whether you're checking for new blobs or changes to an existing blob. The syntax varies based on the check that you want to run and any filtering that you want to use:
For more syntax and filtering options, reviewAzure Blob storage trigger for Azure Functions.
The following example shows a trigger setup that checks the root folder for a newly added blob:

The following example shows a trigger setup that checks a subfolder for changes to an existing blob:

Add any other actions that your workflow requires.
Add any other actions that your workflow requires.
When you're done, save your workflow. On the designer toolbar, selectSave.
When you're done, save your workflow. On the designer toolbar, selectSave.

In theAzure portal, open your Standard logic app and blank workflow in the designer.
In theAzure portal, open your Standard logic app and blank workflow in the designer.
In the designer,follow these general steps to find and add the Azure Blob Storage managed trigger you want.This example continues with the trigger namedWhen a blob is added or modified (properties only).
In the designer,follow these general steps to find and add the Azure Blob Storage managed trigger you want.
This example continues with the trigger namedWhen a blob is added or modified (properties only).
If prompted, provide the following information for your connection to your storage account. When you're done, selectCreate.PropertyRequiredDescriptionConnection nameYesA name for your connectionAuthentication TypeYesTheauthentication typefor your storage account. For more information, reviewAuthentication types for triggers and actions that support authentication - Secure access and data.For example, this connection uses access key authentication and provides the access key value for the storage account along with the following property values:PropertyRequiredValueDescriptionAzure Storage Account nameYes,but only for access key authentication<storage-account-name>The name for the Azure storage account where your blob container exists.Note: To find the storage account name, open your storage account resource in the Azure portal. In the resource menu, underSecurity + networking, selectAccess keys. UnderStorage account name, copy and save the name.Azure Storage Account Access KeyYes,but only for access key authentication<storage-account-access-key>The access key for your Azure storage account.Note: To find the access key, open your storage account resource in the Azure portal. In the resource menu, underSecurity + networking, selectAccess keys>key1>Show. Copy and save the primary key value.
If prompted, provide the following information for your connection to your storage account. When you're done, selectCreate.
For example, this connection uses access key authentication and provides the access key value for the storage account along with the following property values:

After the trigger information box appears, provide the necessary information.For theContainerproperty value, select the folder icon to browse for your blob storage container. Or, enter the path manually using the syntax/<container-name>, for example:
After the trigger information box appears, provide the necessary information.
For theContainerproperty value, select the folder icon to browse for your blob storage container. Or, enter the path manually using the syntax/<container-name>, for example:

To add other properties available for this trigger, open theAdd new parameter listand select those properties. For more information, reviewAzure Blob Storage managed connector trigger properties.
To add other properties available for this trigger, open theAdd new parameter listand select those properties. For more information, reviewAzure Blob Storage managed connector trigger properties.
Add any other actions that your workflow requires.
Add any other actions that your workflow requires.
When you're done, save your workflow. On the designer toolbar, selectSave.
When you're done, save your workflow. On the designer toolbar, selectSave.

Add a Blob action
A Consumption logic app workflow can use only the Azure Blob Storage managed connector. However, a Standard logic app workflow can use the Azure Blob Storage managed connector and the Azure blob built-in connector. Each version has multiple, but differently named actions. For example, both managed and built-in connector versions have their own actions to get file metadata and get file content.
Managed connector actions: These actions run in a Consumption or Standard workflow.
Managed connector actions: These actions run in a Consumption or Standard workflow.
Built-in connector actions: These actions run only in a Standard workflow.
Built-in connector actions: These actions run only in a Standard workflow.
The following steps use the Azure portal, but with the appropriate Azure Logic Apps extension, you can also use the following tools to build logic app workflows:
Consumption workflows:Visual Studio Code
Standard workflows:Visual Studio Code
Consumption
Standard
In theAzure portal, open your Consumption logic app and workflow in the designer.
In theAzure portal, open your Consumption logic app and workflow in the designer.
If your workflow is blank, add the trigger that your scenario requires.This example uses theRecurrencetrigger.
If your workflow is blank, add the trigger that your scenario requires.
This example uses theRecurrencetrigger.
In the designer,follow these general steps to find and add the Azure Blob Storage managed action you want.This example continues with the action namedGet blob content.
In the designer,follow these general steps to find and add the Azure Blob Storage managed action you want.
This example continues with the action namedGet blob content.
If prompted, provide the following information for your connection. When you're done, selectCreate.PropertyRequiredDescriptionConnection nameYesA name for your connectionAuthentication TypeYesTheauthentication typefor your storage account. For more information, reviewAuthentication types for triggers and actions that support authentication - Secure access and data.For example, this connection uses access key authentication and provides the access key value for the storage account along with the following property values:PropertyRequiredValueDescriptionAzure Storage Account nameYes,but only for access key authentication<storage-account-name>The name for the Azure storage account where your blob container exists.Note: To find the storage account name, open your storage account resource in the Azure portal. In the resource menu, underSecurity + networking, selectAccess keys. UnderStorage account name, copy and save the name.Azure Storage Account Access KeyYes,but only for access key authentication<storage-account-access-key>The access key for your Azure storage account.Note: To find the access key, open your storage account resource in the Azure portal. In the resource menu, underSecurity + networking, selectAccess keys>key1>Show. Copy and save the primary key value.
If prompted, provide the following information for your connection. When you're done, selectCreate.
For example, this connection uses access key authentication and provides the access key value for the storage account along with the following property values:

In the action information box, provide the necessary information.For example, in theGet blob contentaction, provide your storage account name. For theBlobproperty value, select the folder icon to browse for your storage container or folder. Or, enter the path manually.TaskBlob path syntaxGet the content from a specific blob in the root folder./<container-name>/<blob-name>Get the content from a specific blob in a subfolder./<container-name>/<subfolder>/<blob-name>The following example shows the action setup that gets the content from a blob in the root folder:The following example shows the action setup that gets the content from a blob in the subfolder:
In the action information box, provide the necessary information.
For example, in theGet blob contentaction, provide your storage account name. For theBlobproperty value, select the folder icon to browse for your storage container or folder. Or, enter the path manually.
The following example shows the action setup that gets the content from a blob in the root folder:

The following example shows the action setup that gets the content from a blob in the subfolder:

Add any other actions that your workflow requires.
Add any other actions that your workflow requires.
When you're done, save your workflow. On the designer toolbar, selectSave.
When you're done, save your workflow. On the designer toolbar, selectSave.
The steps to add and use an Azure Blob action differ based on whether you want to use the built-in connector or the managed, Azure-hosted connector.
Built-in action: Describes the steps to add a built-in action.
Built-in action: Describes the steps to add a built-in action.
Managed action: Describes the steps to add a managed action.
Managed action: Describes the steps to add a managed action.

In theAzure portal, open your Standard logic app and workflow in the designer.
In theAzure portal, open your Standard logic app and workflow in the designer.
If your workflow is blank, add the trigger that your scenario requires.This example uses theRecurrencetrigger.
If your workflow is blank, add the trigger that your scenario requires.
This example uses theRecurrencetrigger.
In the designer,follow these general steps to find and add the Azure Blob Storage built-in action you want.This example continues with the action namedRead blob content, which only reads the blob content. To later view the content, add a different action that creates a file with the blob content using another connector. For example, you can add a OneDrive action that creates a file based on the blob content.
In the designer,follow these general steps to find and add the Azure Blob Storage built-in action you want.
This example continues with the action namedRead blob content, which only reads the blob content. To later view the content, add a different action that creates a file with the blob content using another connector. For example, you can add a OneDrive action that creates a file based on the blob content.
If prompted, provide the following information for your connection to your storage account. When you're done, selectCreate.PropertyRequiredDescriptionConnection nameYesA name for your connectionAuthentication typeYesTheauthentication typefor your storage account. For more information, reviewAuthentication types for triggers and actions that support authentication - Secure access and data.For example, this connection uses connection string authentication and provides the connection string value for the storage account:PropertyRequiredValueDescriptionStorage account connection stringYes,but only for connection string authentication<storage-account-connection-string>The connection string for your Azure storage account.Note: To find the connection string, open your storage account resource in the Azure portal. In the resource menu, underSecurity + networking, selectAccess keys>key1>Connection string>Show. Copy and save the connection string for the primary key.
If prompted, provide the following information for your connection to your storage account. When you're done, selectCreate.
For example, this connection uses connection string authentication and provides the connection string value for the storage account:

In the action information box, provide the necessary information.For example, theRead blob contentaction requires the following property values:PropertyRequiredDescriptionContainer nameYesThe name for the storage container that you want to useBlob nameYesThe name or path for the blob that you want to useThe following example shows the information for a specific blob in the root folder:The following example shows the information for a specific blob in a subfolder:
In the action information box, provide the necessary information.
For example, theRead blob contentaction requires the following property values:
The following example shows the information for a specific blob in the root folder:

The following example shows the information for a specific blob in a subfolder:

Add any other actions that your workflow requires.
Add any other actions that your workflow requires.
When you're done, save your workflow. On the designer toolbar, selectSave.
When you're done, save your workflow. On the designer toolbar, selectSave.

In theAzure portal, open your Standard logic app and workflow in the designer.
In theAzure portal, open your Standard logic app and workflow in the designer.
If your workflow is blank, add the trigger that your scenario requires.This example starts with theRecurrencetrigger.
If your workflow is blank, add the trigger that your scenario requires.
This example starts with theRecurrencetrigger.
In the designer,follow these general steps to find and add the Azure Blob Storage managed action you want.This example continues with the action namedGet blob content.
In the designer,follow these general steps to find and add the Azure Blob Storage managed action you want.
This example continues with the action namedGet blob content.
If prompted, provide the following information for your connection to your storage account. When you're done, selectCreate.PropertyRequiredDescriptionConnection nameYesA name for your connectionAuthentication typeYesTheauthentication typefor your storage account. For more information, reviewAuthentication types for triggers and actions that support authentication - Secure access and data.For example, this connection uses access key authentication and provides the access key value for the storage account along with the following property values:PropertyRequiredValueDescriptionAzure Storage Account nameYes,but only for access key authentication<storage-account-name>The name for the Azure storage account where your blob container exists.Note: To find the storage account name, open your storage account resource in the Azure portal. In the resource menu, underSecurity + networking, selectAccess keys. UnderStorage account name, copy and save the name.Azure Storage Account Access KeyYes,but only for access key authentication<storage-account-access-key>The access key for your Azure storage account.Note: To find the access key, open your storage account resource in the Azure portal. In the resource menu, underSecurity + networking, selectAccess keys>key1>Show. Copy and save the primary key value.
If prompted, provide the following information for your connection to your storage account. When you're done, selectCreate.
For example, this connection uses access key authentication and provides the access key value for the storage account along with the following property values:

In the action information box, provide the necessary information.For example, in theGet blob contentaction, provide your storage account name. For theBlobproperty value, select the folder icon to browse for your storage container or folder. Or, enter the path manually.TaskBlob path syntaxGet the content from a specific blob in the root folder./<container-name>/<blob-name>Get the content from a specific blob in a subfolder./<container-name>/<subfolder>/<blob-name>The following example shows the action setup that gets the content from a blob in the root folder:The following example shows the action setup that gets the content from a blob in the subfolder:
In the action information box, provide the necessary information.
For example, in theGet blob contentaction, provide your storage account name. For theBlobproperty value, select the folder icon to browse for your storage container or folder. Or, enter the path manually.
The following example shows the action setup that gets the content from a blob in the root folder:

The following example shows the action setup that gets the content from a blob in the subfolder:

Add any other actions that your workflow requires.
Add any other actions that your workflow requires.
When you're done, save your workflow. On the designer toolbar, selectSave.
When you're done, save your workflow. On the designer toolbar, selectSave.
Access storage accounts behind firewalls
You can add network security to an Azure storage account byrestricting access with a firewall and firewall rules. However, this setup creates a challenge for Azure and other Microsoft services that need access to the storage account. Local communication in the data center abstracts the internal IP addresses, so just permitting traffic through IP addresses might not be enough to successfully allow communication across the firewall. Based on which Azure Blob Storage connector you use, the following options are available:
To access storage accounts behind firewalls using the Azure Blob Storage managed connector in Consumption logic apps, see the following documentation:Access storage accounts in same region with system-managed identitiesAccess storage accounts in other regions
To access storage accounts behind firewalls using the Azure Blob Storage managed connector in Consumption logic apps, see the following documentation:
Access storage accounts in same region with system-managed identities
Access storage accounts in same region with system-managed identities
Access storage accounts in other regions
Access storage accounts in other regions
To access storage accounts behind firewalls in Standard logic apps, review the following documentation:Azure Blob Storagebuilt-inconnector:Access storage accounts through virtual network integrationAzure Blob Storagemanagedconnector:Access storage accounts in other regions
To access storage accounts behind firewalls in Standard logic apps, review the following documentation:
Azure Blob Storagebuilt-inconnector:Access storage accounts through virtual network integration
Azure Blob Storagebuilt-inconnector:Access storage accounts through virtual network integration
Azure Blob Storagemanagedconnector:Access storage accounts in other regions
Azure Blob Storagemanagedconnector:Access storage accounts in other regions
Access storage accounts in other regions
If you don't use managed identity authentication, logic app workflows can't directly access storage accounts behind firewalls when both the logic app resource and storage account exist in the same region. As a workaround, put your logic app resource in a different region than your storage account. Then, give access to theoutbound IP addresses for the managed connectors in your region.
Note
This solution doesn't apply to the Azure Table Storage connector and Azure Queue Storage connector.
Instead, to access your Table Storage or Queue Storage,use the built-in HTTP trigger and action.
To add your outbound IP addresses to the storage account firewall, follow these steps:
Note themanaged connector outbound IP addressesfor your logic app resource's region.
Note themanaged connector outbound IP addressesfor your logic app resource's region.
In theAzure portal, find and open your storage account resource.
In theAzure portal, find and open your storage account resource.
On the storage account navigation menu, underSecurity + networking, selectNetworking.UnderAllow access from, selectSelected networks, which shows the relevant settings.UnderFirewall, add the IP addresses or ranges that need access. If you need to access the storage account from your computer, selectAdd your client IP address.When you're done, selectSave.
On the storage account navigation menu, underSecurity + networking, selectNetworking.
UnderAllow access from, selectSelected networks, which shows the relevant settings.
UnderAllow access from, selectSelected networks, which shows the relevant settings.
UnderFirewall, add the IP addresses or ranges that need access. If you need to access the storage account from your computer, selectAdd your client IP address.
UnderFirewall, add the IP addresses or ranges that need access. If you need to access the storage account from your computer, selectAdd your client IP address.

When you're done, selectSave.
When you're done, selectSave.
Access storage accounts through trusted virtual network
Your logic app and storage account exist in the same region.You can put your storage account in an Azure virtual network by creating a private endpoint, and then add that virtual network to the trusted virtual networks list. To give your logic app access to the storage account through atrusted virtual network, you need to create a Standard logic app, which can connect to resources in a virtual network.
Your logic app and storage account exist in the same region.
You can put your storage account in an Azure virtual network by creating a private endpoint, and then add that virtual network to the trusted virtual networks list. To give your logic app access to the storage account through atrusted virtual network, you need to create a Standard logic app, which can connect to resources in a virtual network.
Your logic app and storage account exist in different regions.Create a private endpoint on your storage account for access.
Your logic app and storage account exist in different regions.
Create a private endpoint on your storage account for access.
Access storage accounts through virtual network integration
Your logic app and storage account exist in the same region.You can put the storage account in an Azure virtual network by creating a private endpoint, and then add that virtual network to the trusted virtual networks list. To give your logic app access to the storage account, you have toSet up outbound traffic using virtual network integrationto enable connecting to resources in a virtual network. You can then add the virtual network to the storage account's trusted virtual networks list.
Your logic app and storage account exist in the same region.
You can put the storage account in an Azure virtual network by creating a private endpoint, and then add that virtual network to the trusted virtual networks list. To give your logic app access to the storage account, you have toSet up outbound traffic using virtual network integrationto enable connecting to resources in a virtual network. You can then add the virtual network to the storage account's trusted virtual networks list.
Your logic app and storage account exist in different regions.Create a private endpoint on your storage account for access.
Your logic app and storage account exist in different regions.
Create a private endpoint on your storage account for access.
Access Blob Storage in same region with system-managed identities
To connect to Azure Blob Storage in any region, you can usemanaged identities for authentication. You can create an exception that gives Microsoft trusted services, such as a managed identity, access to your storage account through a firewall.
Note
This solution doesn't apply to Standard logic apps. Even if you use a system-assigned managed identity with a Standard logic app,
the Azure Blob Storage managed connector can't connect to a storage account in the same region.
To use managed identities in your logic app to access Blob Storage, follow these steps:
Configure access to your storage account.
Configure access to your storage account.
Create a role assignment for your logic app.
Create a role assignment for your logic app.
Enable support for the managed identity in your logic app.
Enable support for the managed identity in your logic app.
Note
This solution has the following limitations:
To authenticate your storage account connection, you have to set up a system-assigned managed identity.
A user-assigned managed identity won't work.
To set up the exception and managed identity support, first configure appropriate access to your storage account:
In theAzure portal, find and open your storage account resource.
In theAzure portal, find and open your storage account resource.
On the storage account navigation menu, underSecurity + networking, selectNetworking.UnderAllow access from, selectSelected networks, which shows the relevant settings.If you need to access the storage account from your computer, underFirewall, selectAdd your client IP address.UnderExceptions, selectAllow trusted Microsoft services to access this storage account.When you're done, selectSave.
On the storage account navigation menu, underSecurity + networking, selectNetworking.
UnderAllow access from, selectSelected networks, which shows the relevant settings.
UnderAllow access from, selectSelected networks, which shows the relevant settings.
If you need to access the storage account from your computer, underFirewall, selectAdd your client IP address.
If you need to access the storage account from your computer, underFirewall, selectAdd your client IP address.
UnderExceptions, selectAllow trusted Microsoft services to access this storage account.
UnderExceptions, selectAllow trusted Microsoft services to access this storage account.

When you're done, selectSave.
When you're done, selectSave.
Note
If you receive a403 Forbiddenerror when you try to connect to the storage account from your workflow,
multiple possible causes exist. Try the following resolution before moving on to additional steps. First,
disable the settingAllow trusted Microsoft services to access this storage accountand save your changes.
Then, re-enable the setting, and save your changes again.

Next,enable managed identity supporton your logic app resource.
The following steps are the same for Consumption logic apps in multitenant environments and Standard logic apps in single-tenant environments.
In theAzure portal, open your logic app resource.
In theAzure portal, open your logic app resource.
On the logic app resource navigation menu, underSettings, selectIdentity.
On the logic app resource navigation menu, underSettings, selectIdentity.
On theSystem assignedpane, setStatustoOn, if not already enabled, selectSave, and confirm your changes. UnderPermissions, selectAzure role assignments.
On theSystem assignedpane, setStatustoOn, if not already enabled, selectSave, and confirm your changes. UnderPermissions, selectAzure role assignments.

On theAzure role assignmentspane, selectAdd role assignment.
On theAzure role assignmentspane, selectAdd role assignment.

On theAdd role assignmentspane, set up the new role assignment with the following values:PropertyValueDescriptionScope<resource-scope>The resource set where you want to apply the role assignment. For this example, selectStorage.Subscription<Azure-subscription>The Azure subscription for your storage account.Resource<storage-account-name>The name for the storage account that you want to access from your logic app workflow.Role<role-to-assign>The role that your scenario requires for your workflow to work with the resource. This example requiresStorage Blob Data Contributor, which allows read, write, and delete access to blob containers and date. For permissions details, move your mouse over the information icon next to a role in the drop-down menu.
On theAdd role assignmentspane, set up the new role assignment with the following values:

When you're done, selectSaveto finish creating the role assignment.
When you're done, selectSaveto finish creating the role assignment.

Next, complete the following steps:
If you have a blank workflow, add an Azure Blob Storage connector trigger. Otherwise, add an Azure Blob Storage connector action. Make sure that you create a new connection for the trigger or action, rather than use an existing connection.
If you have a blank workflow, add an Azure Blob Storage connector trigger. Otherwise, add an Azure Blob Storage connector action. Make sure that you create a new connection for the trigger or action, rather than use an existing connection.
Make sure that youset the authentication type to use the managed identity.
Make sure that youset the authentication type to use the managed identity.
After you configure the trigger or action, you can save the workflow and test the trigger or action.
After you configure the trigger or action, you can save the workflow and test the trigger or action.
Troubleshoot problems with accessing storage accounts
"This request is not authorized to perform this operation."The following error is a commonly reported problem that happens when your logic app and storage account exist in the same region. However, options are available to resolve this limitation as described in the section,Access storage accounts behind firewalls.{
   "status": 403,
   "message": "This request is not authorized to perform this operation.\\r\\nclientRequestId: a3da2269-7120-44b4-9fe5-ede7a9b0fbb8",
   "error": {
      "message": "This request is not authorized to perform this operation."
   },
   "source": "azureblob-ase.azconn-ase.p.azurewebsites.net"
}
"This request is not authorized to perform this operation."
The following error is a commonly reported problem that happens when your logic app and storage account exist in the same region. However, options are available to resolve this limitation as described in the section,Access storage accounts behind firewalls.
{
   "status": 403,
   "message": "This request is not authorized to perform this operation.\\r\\nclientRequestId: a3da2269-7120-44b4-9fe5-ede7a9b0fbb8",
   "error": {
      "message": "This request is not authorized to perform this operation."
   },
   "source": "azureblob-ase.azconn-ase.p.azurewebsites.net"
}
{
   "status": 403,
   "message": "This request is not authorized to perform this operation.\\r\\nclientRequestId: a3da2269-7120-44b4-9fe5-ede7a9b0fbb8",
   "error": {
      "message": "This request is not authorized to perform this operation."
   },
   "source": "azureblob-ase.azconn-ase.p.azurewebsites.net"
}
Application Insights errors
404and409errorsIf your Standard workflow uses an Azure Blob built-in action that adds a blob to your storage container, you might get404and409errors in Application Insights for failed requests. These errors are expected because the connector checks whether the blob file exists before adding the blob. The errors result when the file doesn't exist. Despite these errors, the built-in action successfully adds the blob.
404and409errors
If your Standard workflow uses an Azure Blob built-in action that adds a blob to your storage container, you might get404and409errors in Application Insights for failed requests. These errors are expected because the connector checks whether the blob file exists before adding the blob. The errors result when the file doesn't exist. Despite these errors, the built-in action successfully adds the blob.
Next steps
Managed connectors in Azure Logic Apps
Built-in connectors in Azure Logic Apps
Feedback
Was this page helpful?
Additional resources