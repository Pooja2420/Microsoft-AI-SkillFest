Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Use predefined variables
Article
2024-12-12
15 contributors
In this article
Azure DevOps Services | Azure DevOps Server 2022 - Azure DevOps Server 2019
Variables give you a convenient way to get key bits of data into various parts of your pipeline.
This is a list of predefined variables that are available for your use. There may be a few other predefined variables, but they're mostly for internal use.
These variables are automatically set by the system and read-only. (The exceptions are Build.Clean and System.Debug.)
In YAML pipelines, you can reference predefined variables as environment variables. For example, the variableBuild.ArtifactStagingDirectorybecomes the variableBUILD_ARTIFACTSTAGINGDIRECTORY.
Build.ArtifactStagingDirectory
BUILD_ARTIFACTSTAGINGDIRECTORY
For classic pipelines, you can userelease variablesin your deploy tasks to share the common information (for example, Environment Name, Resource Group, etc.).
Learn more aboutworking with variables.
Tip
You can askCopilotfor help with variables. To learn more, seeAsk Copilot to generate a stage with a condition based on variable values.
Build.Clean
This is a deprecated variable that modifies how the build agent cleans up source.
To learn how to clean up source, seeClean the local repo on the agent.
System.AccessToken
System.AccessTokenis a special variable that carries the security token used by the running build.
System.AccessToken
YAML
Classic
In YAML, you must explicitly mapSystem.AccessTokeninto the pipeline using a
variable. You can do this at the step or task level. For example, you can useSystem.AccessTokento authenticate with a container registry.
System.AccessToken
System.AccessToken
steps:
- task: Docker@2
  inputs:
    command: login
    containerRegistry: '<docker connection>'
  env:
    SYSTEM_ACCESSTOKEN: $(System.AccessToken)
steps:
- task: Docker@2
  inputs:
    command: login
    containerRegistry: '<docker connection>'
  env:
    SYSTEM_ACCESSTOKEN: $(System.AccessToken)
You can configure the default scope forSystem.AccessTokenusingbuild job authorization scope.
System.AccessToken
You can allow scripts and tasks to access System.AccessToken at the job level.
Navigate to the job
Navigate to the job
UnderAdditional options, check theAllow scripts to access the OAuth tokenbox.
UnderAdditional options, check theAllow scripts to access the OAuth tokenbox.
Checking this box also leaves the credential set in Git so that you can run
pushes and pulls in your scripts.
System.Debug
For more detailed logs to debug pipeline problems, defineSystem.Debugand set it totrue.
System.Debug
true
Edit your pipeline.
Edit your pipeline.
SelectVariables.
SelectVariables.
Add a new variable with the nameSystem.Debugand valuetrue.
Add a new variable with the nameSystem.Debugand valuetrue.
System.Debug
true

Save the new variable.
Save the new variable.
SettingSystem.Debugtotrueconfigures verbose logs for all runs. You can also configure verbose logs for a single run with theEnable system diagnosticscheckbox.
System.Debug
true
You can also setSystem.Debugtotrueas a variable in a pipeline or template.
System.Debug
true
variables:
  system.debug: 'true'
variables:
  system.debug: 'true'
WhenSystem.Debugis set totrue, an extra variable namedAgent.Diagnosticis set totrue. WhenAgent.Diagnosticistrue, the agent collects more logs that can be used for troubleshooting network issues for self-hosted agents. For more information, seeNetwork diagnostics for self-hosted agents.
System.Debug
true
Agent.Diagnostic
true
Agent.Diagnostic
true
Note
TheAgent.Diagnosticvariable is available withAgent v2.200.0and higher.
Agent.Diagnostic
For more information, seeReview logs to diagnose pipeline issues.

Agent variables (DevOps Services)
Note
You can use agent variables as environment variables in your scripts and as parameters in your build tasks.
You can't use them to customize the build number or to apply a version control label or tag.
Pipeline.Workspace
/home/vsts/work/1
c:\agent
Job
__default
Canceled
Canceled
Failed
Failed
Succeeded
Succeeded
SucceededWithIssues(partially successful)
SucceededWithIssues
Skipped(last job)
Skipped
AGENT_JOBSTATUS
agent.jobstatus
Windows_NT
Windows_NT
Darwin
Darwin
Linux
Linux
X86
X86
X64
X64
ARM
ARM
/home/vsts/work/_temp
PATH
c:\agent_work
Example ofAgent.ContainerMapping:
{
  "one_container": {
    "id": "bdbb357d73a0bd3550a1a5b778b62a4c88ed2051c7802a0659f1ff6e76910190"
  },
  "another_container": {
    "id": "82652975109ec494876a8ccbb875459c945982952e0a72ad74c91216707162bb"
  }
}
{
  "one_container": {
    "id": "bdbb357d73a0bd3550a1a5b778b62a4c88ed2051c7802a0659f1ff6e76910190"
  },
  "another_container": {
    "id": "82652975109ec494876a8ccbb875459c945982952e0a72ad74c91216707162bb"
  }
}
Build variables (DevOps Services)

When you use a variable in a template that isn't marked as available in templates, the variable doesn't render. The variable doesn't render because its value isn't accessible within the template's scope.
c:\agent_work\1\a
vstfs:///Build/Build/1430
c:\agent_work\1\b
displayName
Manual: A user manually queued the build.
Manual
IndividualCI:Continuous integration (CI)triggered by a Git push or a Team Foundation Version Control (TFVC) check-in.
IndividualCI
BatchedCI:Continuous integration (CI)triggered by a Git push or a TFVC check-in, and theBatch changeswas selected.
BatchedCI
Schedule:Scheduledtrigger.
Schedule
ValidateShelveset: A user manually queued the build of a specific TFVC shelveset.
ValidateShelveset
CheckInShelveset:Gated check-intrigger.
CheckInShelveset
PullRequest: A Git branch policy that requires a build triggers the build.
PullRequest
BuildCompletion:Another build triggersthe build.
BuildCompletion
ResourceTrigger:A resource triggeroranother build triggersthe build.
ResourceTrigger
c:\agent_work\1\s
If the checkout step for the self (primary) repository has no custom checkout path defined, or the checkout path is the multi-checkout default path$(Pipeline.Workspace)/s/&<RepoName>for the self repository, the value of this variable reverts to its default value, which is$(Pipeline.Workspace)/s.
$(Pipeline.Workspace)/s/&<RepoName>
$(Pipeline.Workspace)/s
If the checkout step for the self (primary) repository had a custom checkout path defined that is not its multi-checkout default path, this variable contains the exact path to the self repository.
TfsGit:TFS Git repository
TfsGit
TfsVersionControl:Team Foundation Version Control
TfsVersionControl
Git: Git repository hosted on an external server
Git
GitHub
GitHub
Svn: Subversion
Svn
c:\agent_work\12
8
ws_12_8
Git:https://fabrikamfiber@dev.azure.com/fabrikamfiber/_git/Scripts
TFVC:https://dev.azure.com/fabrikamfiber/
Git repo branch:refs/heads/main
refs/heads/main
Git repo pull request:refs/pull/1/merge
refs/pull/1/merge
TFVC repo branch:$/teamproject/main
$/teamproject/main
TFVC repo gated check-in:Gated_2016-06-06_05.20.51.4369;username@live.com
Gated_2016-06-06_05.20.51.4369;username@live.com
TFVC repo shelveset build:myshelveset;username@live.com
myshelveset;username@live.com
When a tag triggers your pipeline:refs/tags/your-tag-name
refs/tags/your-tag-name
/
_
Git repo branch, pull request, or tag: The last path segment in the ref. For example, inrefs/heads/mainthis value ismain. Inrefs/heads/feature/tools, this value istools. Inrefs/tags/your-tag-name, the value isyour_tag_name, with hyphens (-) replaced by underscores (_).
refs/heads/main
main
refs/heads/feature/tools
tools
refs/tags/your-tag-name
your_tag_name
-
_
TFVC repo branch: The last path segment in the root server path for the workspace. For example, in$/teamproject/mainthis value ismain.
$/teamproject/main
main
TFVC repo gated check-in or shelveset build is the name of the shelveset. For example,Gated_2016-06-06_05.20.51.4369;username@live.comormyshelveset;username@live.com.
Gated_2016-06-06_05.20.51.4369;username@live.com
myshelveset;username@live.com
c:\agent_work\1\s
$(Pipeline.Workspace)/s
$(Pipeline.Workspace)/s/<RepoName>
Git: ThecommitID.
TFVC: thechangeset.
Build.SourceVersionMessage
Build.SourceVersion
Build.SourceVersion
Microsoft.VisualStudio.Services.TFS
00000002-0000-8888-8000-000000000000
c:\agent_work\1\a
resources
resources
resources
resources
resources
c:\agent_work\1\TestResults
Pipeline variables
Agent.BuildDirectory
/home/vsts/work/1
Tip
If you're using classic release pipelines, you can useclassic releases and artifacts variablesto store and access data throughout your pipeline.
Deployment job variables
These variables are scoped to a specificDeployment joband is resolved only at job execution time.
smarthotel-dev
10
bookings
smarthotel-dev
4
canary
runOnce
rolling
PreIteration
Iteration
PostIteration
System variables
When you use a variable in a template that isn't marked as available in templates, the variable doesn't render. The variable doesn't render because its value isn't accessible within the template's scope.
https://dev.azure.com/fabrikamfiber/
c:\agent_work\1\s
build
deployment
gates
release
idToken
True
False
17
refs/heads/users/raisa/new-feature
https://dev.azure.com/ouraccount/_git/OurProject
refs/heads/main
main
https://dev.azure.com/fabrikamfiber/
True
Checks variables (DevOps Services)

$(Checks.StageAttempt)

Agent variables (DevOps Server 2022)
Note
You can use agent variables as environment variables in your scripts and as parameters in your build tasks.
You can't use them to customize the build number or to apply a version control label or tag.
Pipeline.Workspace
/home/vsts/work/1
c:\agent
Job
__default
Canceled
Canceled
Failed
Failed
Succeeded
Succeeded
SucceededWithIssues(partially successful)
SucceededWithIssues
Skipped(last job)
Skipped
AGENT_JOBSTATUS
agent.jobstatus
Windows_NT
Windows_NT
Darwin
Darwin
Linux
Linux
X86
X86
X64
X64
ARM
ARM
/home/vsts/work/_temp
PATH
c:\agent_work
Example ofAgent.ContainerMapping:
{
  "one_container": {
    "id": "bdbb357d73a0bd3550a1a5b778b62a4c88ed2051c7802a0659f1ff6e76910190"
  },
  "another_container": {
    "id": "82652975109ec494876a8ccbb875459c945982952e0a72ad74c91216707162bb"
  }
}
{
  "one_container": {
    "id": "bdbb357d73a0bd3550a1a5b778b62a4c88ed2051c7802a0659f1ff6e76910190"
  },
  "another_container": {
    "id": "82652975109ec494876a8ccbb875459c945982952e0a72ad74c91216707162bb"
  }
}
Build variables (DevOps Server 2022)

When you use a variable in a template that isn't marked as available in templates, the variable doesn't render. The variable doesn't render because its value isn't accessible within the template's scope.
c:\agent_work\1\a
vstfs:///Build/Build/1430
c:\agent_work\1\b
displayName
Manual: A user manually queued the build.
Manual
IndividualCI:Continuous integration (CI)triggered by a Git push or a TFVC check-in.
IndividualCI
BatchedCI:Continuous integration (CI)triggered by a Git push or a TFVC check-in, and theBatch changeswas selected.
BatchedCI
Schedule:Scheduledtrigger.
Schedule
ValidateShelveset: A user manually queued the build of a specific TFVC shelveset.
ValidateShelveset
CheckInShelveset:Gated check-intrigger.
CheckInShelveset
PullRequest: A Git branch policy that requires a build triggers the build.
PullRequest
BuildCompletion:another buildtriggers the build
BuildCompletion
ResourceTrigger: Aresource triggeroranother buildtriggers the build.
ResourceTrigger
c:\agent_work\1\s
If the checkout step for the self (primary) repository has no custom checkout path defined, or the checkout path is the multi-checkout default path$(Pipeline.Workspace)/s/<RepoName>for the self repository, the value of this variable reverts to its default value, which is$(Pipeline.Workspace)/s.
$(Pipeline.Workspace)/s/<RepoName>
$(Pipeline.Workspace)/s
If the checkout step for the self (primary) repository has a custom checkout path defined and it's not its multi-checkout default path, this variable contains the exact path to the self repository.
TfsGit:TFS Git repository
TfsGit
TfsVersionControl:Team Foundation Version Control(TFVC)
TfsVersionControl
Git: Git repository hosted on an external server
Git
GitHub
GitHub
Svn: Subversion
Svn
c:\agent_work\12
8
ws_12_8
Git:https://fabrikamfiber@dev.azure.com/fabrikamfiber/_git/Scripts
TFVC:https://dev.azure.com/fabrikamfiber/
Git repo branch:refs/heads/main
refs/heads/main
Git repo pull request:refs/pull/1/merge
refs/pull/1/merge
TFVC repo branch:$/teamproject/main
$/teamproject/main
TFVC repo gated check-in:Gated_2016-06-06_05.20.51.4369;username@live.com
Gated_2016-06-06_05.20.51.4369;username@live.com
TFVC repo shelveset build:myshelveset;username@live.com
myshelveset;username@live.com
When a tag triggers your pipeline:refs/tags/your-tag-name
refs/tags/your-tag-name
/
_
Git repo branch, pull request, or tag: The last path segment in the ref. For example, inrefs/heads/main, this value ismain. Inrefs/heads/feature/tools, this value istools. Inrefs/tags/your-tag-name, this value isyour-tag-name.
refs/heads/main
main
refs/heads/feature/tools
tools
refs/tags/your-tag-name
your-tag-name
TFVC repo branch: The last path segment in the root server path for the workspace. For example, in$/teamproject/main, this value ismain.
$/teamproject/main
main
TFVC repo gated check-in or shelveset build is the name of the shelveset. For example,Gated_2016-06-06_05.20.51.4369;username@live.comormyshelveset;username@live.com.
Gated_2016-06-06_05.20.51.4369;username@live.com
myshelveset;username@live.com
c:\agent_work\1\s
$(Pipeline.Workspace)/s
$(Pipeline.Workspace)/s/<RepoName>
Git: ThecommitID.
TFVC: thechangeset.
Build.SourceVersionMessage
Build.SourceVersion
Build.SourceVersion
c:\agent_work\1\a
resources
resources
resources
resources
resources
c:\agent_work\1\TestResults
Pipeline variables (DevOps Server 2022)

Agent.BuildDirectory
/home/vsts/work/1
Tip
If you're using classic release pipelines, you can useclassic releases and artifacts variablesto store and access data throughout your pipeline.
Deployment job variables (DevOps Server 2022)

These variables are scoped to a specificDeployment joband is resolved only at job execution time.
smarthotel-dev
10
bookings
smarthotel-dev
4
canary
runOnce
rolling
PreIteration
Iteration
PostIteration
System variables (DevOps Server 2022)

When you use a variable in a template that isn't marked as available in templates, the variable doesn't render. The variable doesn't render because its value isn't accessible within the template's scope.
https://dev.azure.com/fabrikamfiber/
c:\agent_work\1\s
build
deployment
gates
release
True
False
17
refs/heads/users/raisa/new-feature
https://dev.azure.com/ouraccount/_git/OurProject
refs/heads/main
main
https://dev.azure.com/fabrikamfiber/
True
Checks variables (DevOps Server 2022)

$(Checks.StageAttempt)

Agent variables (DevOps Server 2020)
Note
You can use agent variables as environment variables in your scripts and as parameters in your build tasks.
You can't use them to customize the build number or to apply a version control label or tag.
Pipeline.Workspace
/home/vsts/work/1
c:\agent
Job
_default
Canceled
Canceled
Failed
Failed
Succeeded
Succeeded
SucceededWithIssues(partially successful)
SucceededWithIssues
Skipped(last job)
Skipped
AGENT_JOBSTATUS
agent.jobstatus
Windows_NT
Windows_NT
Darwin
Darwin
Linux
Linux
X86
X86
X64
X64
ARM processor
ARM processor
/home/vsts/work/_temp
PATH
c:\agent_work
Build variables (DevOps Server 2020)

When you use a variable in a template that isn't marked as available in templates. The variable doesn't render because its value isn't accessible within the template's scope.
c:\agent_work\1\a
vstfs:///Build/Build/1430
c:\agent_work\1\b
Manual: A user manually queued the build.
Manual
IndividualCI:Continuous integration (CI)triggered by a Git push or a TFVC check-in.
IndividualCI
BatchedCI:Continuous integration (CI)triggered by a Git push or a TFVC check-in, and theBatch changeswas selected.
BatchedCI
Schedule:Scheduledtrigger.
Schedule
ValidateShelveset: A user manually queued the build of a specific TFVC shelveset.
ValidateShelveset
CheckInShelveset:Gated check-intrigger.
CheckInShelveset
PullRequest: A Git branch policy that requires a build triggers the build.
PullRequest
BuildCompletion:another buildtriggers the build
BuildCompletion
ResourceTrigger: Aresource triggeroranother buildtriggers the build.
ResourceTrigger
c:\agent_work\1\s
If the checkout step for the self (primary) repository has no custom checkout path defined, or the checkout path is the multi-checkout default path$(Pipeline.Workspace)/s/&lt;RepoName&gt;for the self repository, the value of this variable reverts to its default value, which is$(Pipeline.Workspace)/s.
$(Pipeline.Workspace)/s/&lt;RepoName&gt;
$(Pipeline.Workspace)/s
If the checkout step for the self (primary) repository has a custom checkout path defined and it's not its multi-checkout default path, this variable contains the exact path to the self repository.
TfsGit:TFS Git repository
TfsGit
TfsVersionControl:Team Foundation Version Control
TfsVersionControl
Git: Git repository hosted on an external server
Git
GitHub
GitHub
Svn: Subversion
Svn
c:\agent_work\12
8
ws_12_8
Git:https://dev.azure.com/fabrikamfiber/_git/Scripts
TFVC:https://dev.azure.com/fabrikamfiber/
Git repo branch:refs/heads/main
refs/heads/main
Git repo pull request:refs/pull/1/merge
refs/pull/1/merge
TFVC repo branch:$/teamproject/main
$/teamproject/main
TFVC repo gated check-in:Gated_2016-06-06_05.20.51.4369;username@live.com
Gated_2016-06-06_05.20.51.4369;username@live.com
TFVC repo shelveset build:myshelveset;username@live.com
myshelveset;username@live.com
When a tag triggers your pipeline:refs/tags/your-tag-name
refs/tags/your-tag-name
/
_
Git repo branch, pull request, or tag: The last path segment in the ref. For example, inrefs/heads/mainthis value ismain. Inrefs/heads/feature/tools, this value istools. Inrefs/tags/your-tag-name, this value isyour-tag-name.
refs/heads/main
main
refs/heads/feature/tools
tools
refs/tags/your-tag-name
your-tag-name
TFVC repo branch: The last path segment in the root server path for the workspace. For example, in$/teamproject/mainthis value ismain.
$/teamproject/main
main
TFVC repo gated check-in or shelveset build is the name of the shelveset. For example,Gated_2016-06-06_05.20.51.4369;username@live.comormyshelveset;username@live.com.
Gated_2016-06-06_05.20.51.4369;username@live.com
myshelveset;username@live.com
c:\agent_work\1\s
$(Pipeline.Workspace)/s
$(Pipeline.Workspace)/s/<RepoName>
Git: ThecommitID.
TFVC: thechangeset.
c:\agent_work\1\a
c:\agent_work\1\TestResults
Pipeline variables (DevOps Server 2020)

Agent.BuildDirectory
/home/vsts/work/1
Deployment job variables (DevOps Server 2020)

These variables are scoped to a specificDeployment joband is resolved only at job execution time.
smarthotel-dev
10
bookings
smarthotel-dev
4
System variables (DevOps Server 2020)

When you use a variable in a template that isn't marked as available in templates. The variable doesn't render because its value isn't accessible within the template's scope.
c:\agent_work\1\s
build
deployment
gates
release
True
False
17
refs/heads/users/raisa/new-feature
https://dev.azure.com/ouraccount/_git/OurProject
refs/heads/main
main
https://dev.azure.com/fabrikamfiber/
True

How are the identity variables set?
The value depends on what caused the build and are specific to Azure Repos repositories.
[DefaultCollection]\Project Collection Service Accounts
[DefaultCollection]\Project Collection Service Accounts
[DefaultCollection]\Project Collection Service Accounts
[DefaultCollection]\Project Collection Service Accounts
Ask Copilot to generate a stage with a condition based on variable values
UseCopilotto generate a stage with a condition determined by the value of a variable.
This example prompt defines a stage that runs whenAgent.JobStatusindicates that the previous stage ran successfully:
Agent.JobStatus
Create a new Azure DevOps stage that only runs whenAgent.JobStatusisSucceededorSucceededWithIssues.
Agent.JobStatus
Succeeded
SucceededWithIssues
You can customize the prompt to use values that meet your requirements. For example, you can ask for help creating a stage that only runs when a pipeline fails.
Note
GitHub Copilot is powered by AI, so surprises and mistakes are possible. Make sure to verify any generated code or suggestions. For more information about the general use of GitHub Copilot, product impact, human oversight, and privacy, seeGitHub Copilot FAQs.
Feedback
Was this page helpful?
Additional resources