Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
YAML schema reference for Azure Pipelines
Article
2025-03-20
1 contributor
In this article
The YAML schema reference for Azure Pipelines is a detailed reference for YAML pipelines that lists all supported YAML syntax and their available options.
To create a YAML pipeline, start with thepipelinedefinition. For more information about building YAML pipelines, seeCustomize your pipeline.
The YAML schema reference does not cover tasks. For more information about tasks, see theAzure Pipelines tasks index.
Definitions
pipelineA pipeline is one or more stages that describe a CI/CD process. The pipeline definition contains the documentation for root level properties likename.
name
extendsExtends a pipeline using a template.
jobsSpecifies the jobs that make up the work of a stage.
jobs.deploymentA deployment job is a special type of job. It's a collection of steps to run sequentially against the environment.
jobs.deployment.environmentTarget environment name and optionally a resource name to record the deployment history; format: environment-name.resource-name.
jobs.deployment.strategyExecution strategy for this deployment.
jobs.deployment.strategy.canaryCanary Deployment strategy.
jobs.deployment.strategy.rollingRolling Deployment strategy.
jobs.deployment.strategy.runOnceRunOnce Deployment strategy.
jobs.jobA job is a collection of steps run by an agent or on a server.
jobs.job.containerContainer resource name.
jobs.job.strategyExecution strategy for this job.
jobs.job.usesAny resources required by this job that are not already referenced.
jobs.templateA set of jobs defined in a template.
parametersSpecifies the runtime parameters passed to a pipeline.
parameters.parameterPipeline template parameters.
poolWhich pool to use for a job of the pipeline.
pool.demandsDemands (for a private pool).
prPull request trigger.
resourcesResources specifies builds, repositories, pipelines, and other resources used by the pipeline.
resources.buildsList of build resources referenced by the pipeline.
resources.builds.buildA build resource used to reference artifacts from a run.
resources.containersList of container images.
resources.containers.containerA container resource used to reference a container image.
resources.containers.container.triggerSpecify none to disable, true to trigger on all image tags, or use the full syntax as described in the following examples.
resources.packagesList of package resources.
resources.packages.packageA package resource used to reference a NuGet or npm GitHub package.
resources.pipelinesList of pipeline resources.
resources.pipelines.pipelineA pipeline resource.
resources.pipelines.pipeline.triggerSpecify none to disable, true to include all branches, or use the full syntax as described in the following examples.
resources.pipelines.pipeline.trigger.branchesBranches to include or exclude for triggering a run.
resources.repositoriesList of repository resources.
resources.repositories.repositoryA repository resource is used to reference an additional repository in your pipeline.
resources.webhooksList of webhooks.
resources.webhooks.webhookA webhook resource enables you to integrate your pipeline with an external service to automate the workflow.
resources.webhooks.webhook.filtersList of trigger filters.
resources.webhooks.webhook.filters.filterWebhook resource trigger filter.
schedulesThe schedules list specifies the scheduled triggers for the pipeline.
schedules.cronA scheduled trigger specifies a schedule on which branches are built.
stagesStages are a collection of related jobs.
stages.stageA stage is a collection of related jobs.
stages.templateYou can define a set of stages in one file and use it multiple times in other files.
stepsSteps are a linear sequence of operations that make up a job.
steps.bashRuns a script in Bash on Windows, macOS, and Linux.
steps.checkoutConfigure how the pipeline checks out source code.
steps.downloadDownloads artifacts associated with the current run or from another Azure Pipeline that is associated as a pipeline resource.
steps.downloadBuildDownloads build artifacts.
steps.getPackageDownloads a package from a package management feed in Azure Artifacts or Azure DevOps Server.
steps.powershellRuns a script using either Windows PowerShell (on Windows) or pwsh (Linux and macOS).
steps.publishPublishes (uploads) a file or folder as a pipeline artifact that other jobs and pipelines can consume.
steps.pwshRuns a script in PowerShell Core on Windows, macOS, and Linux.
steps.reviewAppDownloads creates a resource dynamically under a deploy phase provider.
steps.scriptRuns a script using cmd.exe on Windows and Bash on other platforms.
steps.taskRuns a task.
steps.templateDefine a set of steps in one file and use it multiple times in another file.
targetTasks run in an execution context, which is either the agent host or a container.
target.settableVariablesRestrictions on which variables that can be set.
triggerContinuous integration (push) trigger.
variablesDefine variables using name/value pairs.
variables.groupReference variables from a variable group.
variables.nameDefine variables using name and full syntax.
variables.templateDefine variables in a template.
Supporting definitions
Note
Supporting definitions are not intended for use directly in a pipeline. Supporting definitions are used only as part of other definitions, and are included here for reference.
deployHookUsed to run steps that deploy your application.
includeExcludeFiltersLists of items to include or exclude.
includeExcludeStringFiltersItems to include or exclude.
mountReadOnlyVolumes to mount read-only, the default is all false.
onFailureHookUsed to run steps for rollback actions or clean-up.
onSuccessHookUsed to run steps for rollback actions or clean-up.
onSuccessOrFailureHookUsed to run steps for rollback actions or clean-up.
postRouteTrafficHookUsed to run the steps after the traffic is routed. Typically, these tasks monitor the health of the updated version for defined interval.
preDeployHookUsed to run steps that initialize resources before application deployment starts.
routeTrafficHookUsed to run steps that serve the traffic to the updated version.
workspaceWorkspace options on the agent.
YAML schema documentation conventions
The YAML schema reference is a detailed reference guide to Azure Pipelines YAML pipelines.
It includes a catalog of all supported YAML capabilities and the available options.
Here are the syntax conventions used in the YAML schema reference.
To the left of:is a literal keyword used in pipeline definitions.
:
To the right of:is a data type.
The data type can be a primitive type likestringor a reference to a rich structure defined elsewhere in this reference.
:
The notation[datatype]indicates an array of the mentioned definition type.
For instance,[ string ]is an array of strings.
[
]
[ string ]
The notation{datatype:datatype}indicates a mapping of one data type to another.
For instance,{ string: string }is a mapping of strings to strings.
{
:
}
{ string: string }
The symbol|indicates there are multiple data types available for the keyword.
For instance,job | templatemeans either a job definition or a template reference is allowed.
|
job | template
See also
This reference covers the schema of an Azure Pipelines YAML file.
To learn the basics of YAML, seeLearn YAML in Y Minutes.
Azure Pipelines doesn't support all YAML features.
Unsupported features include anchors, complex keys, and sets.
Also, unlike standard YAML, Azure Pipelines depends on seeingstage,job,task, or a task shortcut likescriptas the first key in a mapping.
stage
job
task
script
Feedback
Was this page helpful?
Additional resources