Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Group and filter options in Cost analysis and budgets
Article
2025-04-02
7 contributors
In this article
Cost analysis has many grouping and filtering options. This article helps you understand when to use them.
To watch a video about grouping and filtering options, watch theCost Management reporting by dimensions and tagsvideo. To watch other videos, visit theCost Management YouTube channel.
Group and filter properties
The following table lists some of the most common grouping and filtering options available in Cost analysis and budgets. See the notes column to learn when to use them.
Some filters are only available to specific offers. For example, a billing profile isn't available for an enterprise agreement. For more information, seeSupported Microsoft Azure offers.
For more information about terms, seeUnderstand the terms used in the Azure usage and charges file.
Grouping SQL databases and elastic pools
Get an at-a-glance view of your total SQL costs by grouping SQL databases and elastic pools. They're shown under their parent server in the Resources view.
Understanding what you're being charged for can be complicated. The best place to start for many people is theResources view. It shows resources that are incurring cost. But even a straightforward list of resources can be hard to follow when a single deployment includes multiple, related resources. To help summarize your resource costs, we're trying to group related resources together. So, we're changing cost analysis to show child resources.
Many Azure services use nested or child resources. SQL servers have databases, storage accounts have containers, and virtual networks have subnets. Most of the child resources are only used to configure services, but sometimes the resources have their own usage and charges. SQL databases are perhaps the most common example.
SQL databases are deployed as part of a SQL server instance, but usage is tracked at the database level. Additionally, you might also have charges on the parent server, like for Microsoft Defender for Cloud. To get the total cost for your SQL deployment in classic cost analysis, you need to manually sum up the cost of the server and each individual database. As an example, you can see thetreyanalyticsengine / aepoolelastic pool in the following list and thetreyanalyticsengine / coreanalyticsserver under it. What you don't see is another database even lower in the list. You can imagine how troubling this situation would be when you need the total cost of a large server instance with many databases.
Here's an example showing the Cost by resource view where multiple related resource costs aren't grouped.

In the Resources view, the child resources are grouped together under their parent resource. The grouping shows a quick, at-a-glance view of your deployment and its total cost. Using the same subscription, you can now see all three charges grouped together under the server, offering a one-line summary for your total server costs.
Here's an example showing grouped resource costs in the Resources view.

You might also notice the change in row count. Classic cost analysis shows 53 rows where every resource is broken out on its own. The Resources view only shows 25 rows. The difference is that the individual resources are being grouped together, making it easier to get an at-a-glance cost summary.
In addition to SQL servers, you also see other services with child resources, like App Service, Synapse, and VNet gateways. Each is similarly shown grouped together in the Resources view.
Grouping SQL databases and elastic pools is available by default in the Resources view.

Group related resources in the Resources view
Group related resources, like disks under VMs or web apps under App Service plans, by adding acm-resource-parenttag to the child resources with a value of the parent resource ID. Wait 24 hours for tags to be available in usage and your resources are grouped. Leave feedback to let us know how we can improve this experience further for you.
cm-resource-parent
Some resources have related dependencies that aren't explicit children or nested under the logical parent in Azure Resource Manager. Examples include disks used by a virtual machine or web apps assigned to an App Service plan. Unfortunately, Cost Management isn't aware of these relationships and can't group them automatically. This feature uses tags to summarize the total cost of your related resources together. You see a single row with the parent resource. When you expand the parent resource, you see each linked resource listed individually with their respective cost.
As an example, let's say you have an Azure Virtual Desktop host pool configured with two VMs. Tagging the VMs and corresponding network/disk resources groups them under the host pool, giving you the total cost of the session host VMs in your host pool deployment. This example gets even more interesting if you want to also include the cost of any cloud solutions made available via your host pool.

Before you link resources together, think about how you'd like to see them grouped. You can only link a resource to one parent and cost analysis only supports one level of grouping today.
Once you know which resources you'd like to group, use the following steps to tag your resources:
Open the resource that you want to be the parent.
SelectPropertiesin the resource menu.
Find theResource IDproperty and copy its value.
OpenAll resourcesor the resource group that has the resources you want to link.
Select the checkboxes for every resource you want to link and then select theAssign tagscommand.
Specify a tag key ofcm-resource-parent(make sure it's typed correctly) and paste the resource ID from step 3.
cm-resource-parent
Wait 24 hours for new usage to be sent to Cost Management with the tags. (Keep in mind resources must be actively running with charges for tags to be updated in Cost Management.)
Open theResources view.
Wait for the tags to load in the Resources view and you should now see your logical parent resource with its linked children. If you don't see them grouped yet, check the tags on the linked resources to ensure they're set. If not, check again in 24 hours.
Grouping related resources is available by default in the Resources view.
Publisher Type value changes
In Cost Management, thePublisherType fieldindicates whether charges are for Microsoft or Marketplace products.
PublisherType field
What changed?
Effective 14 October 2021, thePublisherTypefield with the valueAzurewas updated toMicrosoftfor all customers with aMicrosoft Customer Agreement. The change was made to accommodate enhancements to support Microsoft products other than Azure like Microsoft 365 and Dynamics 365.
PublisherType
Azure
Microsoft
Values ofMarketplaceremain unchanged.
Marketplace
The change didn't affect customers with an Enterprise Agreement or pay-as-you-go offers.
Impact and action
For any Cost Management data that you've downloaded before 14 October 2021, consider thePublisherTypechange from the olderAzureand the newMicrosoftfield values. The data could have been downloaded through exports, usage details, or from Cost Management.
PublisherType
Azure
Microsoft
If you use Cost Management + Billing REST API calls that filter thePublisherTypefield by the valueAzure, you need to address the change and filter by the new valueMicrosoftafter 14 October 2021. If you make any API calls with a filter for Publisher type =Azure, data won't be returned.
PublisherType
Azure
Microsoft
Azure
There's no impact to Cost analysis or budgets because the changes are automatically reflected in the filters. Any saved views or budgets created with Publisher Type = âAzureâ filter will be automatically updated.
Related content
Start analyzing costs.
Feedback
Was this page helpful?
Additional resources