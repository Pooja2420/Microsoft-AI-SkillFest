Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
ShellScript@2 - Shell script v2 task
Article
2025-03-20
3 contributors
In this article
Use this task to run a shell script usingbash.
bash
Syntax
# Shell script v2
# Run a shell script using Bash.
- task: ShellScript@2
  inputs:
    scriptPath: # string. Required. Script Path. 
    #args: # string. Arguments. 
  # Advanced
    #disableAutoCwd: false # boolean. Specify Working Directory. Default: false.
    #cwd: # string. Optional. Use when disableAutoCwd = true. Working Directory. 
    #failOnStandardError: false # boolean. Fail on Standard Error. Default: false.
# Shell script v2
# Run a shell script using Bash.
- task: ShellScript@2
  inputs:
    scriptPath: # string. Required. Script Path. 
    #args: # string. Arguments. 
  # Advanced
    #disableAutoCwd: false # boolean. Specify Working Directory. Default: false.
    #cwd: # string. Optional. Use when disableAutoCwd = true. Working Directory. 
    #failOnStandardError: false # boolean. Fail on Standard Error. Default: false.
Inputs
scriptPath-Script Pathstring. Required.
scriptPath
string
Specifies the relative path from the repo root to the shell script file that you want to run.
args-Argumentsstring.
args
string
Specifies the arguments that you want to pass to the script.
disableAutoCwd-Specify Working Directoryboolean. Default value:false.
disableAutoCwd
boolean
false
Specifies the working directory where the task runs the script. If the value is left empty, the task defaults to the folder where the script is located.
cwd-Working Directorystring. Optional. Use whendisableAutoCwd = true.
cwd
string
disableAutoCwd = true
Specifies the working directory where the script is run. If the value is left empty, the task uses the root of the repo (build) or artifacts (release), which is$(System.DefaultWorkingDirectory).
$(System.DefaultWorkingDirectory)
failOnStandardError-Fail on Standard Errorboolean. Default value:false.
failOnStandardError
boolean
false
If the value istrue, the task will fail if errors are written to the StandardError stream.
true
Task control options
All tasks have control options in addition to their task inputs. For more information, seeControl options and common task properties.
Output variables
None.
Remarks
Where can I learn about Bash scripts?
Beginners/BashScriptingto get started.
Awesome Bashto go deeper.
How do I set a variable so that it can be read by subsequent scripts and tasks?
To learn more about defining build variables in a script, seeDefine and modify your build variables in a script.
To learn more about defining release variables in a script, seeDefine and modify your release variables in a script
Examples
Createtest.shat the root of your repo.
We recommend creating this file from a Linux environment (such as a real Linux machine or Windows Subsystem for Linux) so that line endings are correct.
Also, don't forget tochmod +x test.shbefore you commit it.
test.sh
chmod +x test.sh
#!/bin/bash
echo "Hello World"
echo "AGENT_WORKFOLDER is $AGENT_WORKFOLDER"
echo "AGENT_WORKFOLDER contents:"
ls -1 $AGENT_WORKFOLDER
echo "AGENT_BUILDDIRECTORY is $AGENT_BUILDDIRECTORY"
echo "AGENT_BUILDDIRECTORY contents:"
ls -1 $AGENT_BUILDDIRECTORY
echo "SYSTEM_HOSTTYPE is $SYSTEM_HOSTTYPE"
echo "Over and out."
#!/bin/bash
echo "Hello World"
echo "AGENT_WORKFOLDER is $AGENT_WORKFOLDER"
echo "AGENT_WORKFOLDER contents:"
ls -1 $AGENT_WORKFOLDER
echo "AGENT_BUILDDIRECTORY is $AGENT_BUILDDIRECTORY"
echo "AGENT_BUILDDIRECTORY contents:"
ls -1 $AGENT_BUILDDIRECTORY
echo "SYSTEM_HOSTTYPE is $SYSTEM_HOSTTYPE"
echo "Over and out."
Add the following task to your pipeline to run the previous script.
- task: ShellScript@2
  inputs:
    scriptPath: 'test.sh'
- task: ShellScript@2
  inputs:
    scriptPath: 'test.sh'
Requirements
Feedback
Was this page helpful?
Additional resources