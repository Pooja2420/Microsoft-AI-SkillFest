Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
How to set or edit Azure API Management policies
Article
2025-03-07
7 contributors
In this article
APPLIES TO: All API Management tiers
This article shows you how to configure policies in your API Management instance by editing policy definitions in the Azure portal. Each policy definition is an XML document that describes a sequence of inbound and outbound statements that run sequentially on an API request and response.
The policy editor in the portal provides guided forms for API publishers to add and edit policies in policy definitions. You can also edit the XML directly in the policy code editor.
More information about policies:
Policy overview
Policy referencefor a full list of policy statements and their settings
Policy snippets repo
Azure API Management policy toolkit
Author policies using Microsoft Copilot in Azure
Prerequisites
If you don't already have an API Management instance and a backend API, see:
Create an Azure API Management instance
Import and publish an API
Go to your API Management instance
In the Azureportal, search for and selectAPI Management services:
In the Azureportal, search for and selectAPI Management services:

On theAPI Management servicespage, select your API Management instance:
On theAPI Management servicespage, select your API Management instance:

Configure policy in the portal
The following example shows how to configure a policy using two options in the policy editor in the portal:
A guided form-based editor to simplify configuring many policies
A code editor where you can add or edit XML directly
In this example, the policy filters requests from certain incoming IP addresses. It's scoped to a selected API.
Note
You can configure policies at otherscopes, such as for all APIs, a product, or a single API operation. SeeConfigure scope, later in this article, for other examples.
To configure a policy:
Form
Code
In the left navigation of your API Management instance, selectAPIs.
In the left navigation of your API Management instance, selectAPIs.
Select an API that you previously imported.
Select an API that you previously imported.
Select theDesigntab.
Select theDesigntab.
To apply the policy to all operations, selectAll operations.
To apply the policy to all operations, selectAll operations.
In theInbound processingsection, select+ Add policy.
In theInbound processingsection, select+ Add policy.

InAdd inbound policy, select a policy to add. For example, selectFilter IP addresses.TipPolicies shown are scoped to the policy section you're configuring - in this case, for inbound processing.If you don't see a policy you want, select theOther policiestile. This will open the XML code editor and display a complete list of policies for that section and scope.
InAdd inbound policy, select a policy to add. For example, selectFilter IP addresses.

Tip
Policies shown are scoped to the policy section you're configuring - in this case, for inbound processing.
If you don't see a policy you want, select theOther policiestile. This will open the XML code editor and display a complete list of policies for that section and scope.
SelectAllowed IPs>+ Add IP filterand add the first and last IP addresses of a range of incoming addresses that are allowed to make API requests. Add other IP address ranges, if needed.
SelectAllowed IPs>+ Add IP filterand add the first and last IP addresses of a range of incoming addresses that are allowed to make API requests. Add other IP address ranges, if needed.

SelectSaveto propagate changes to the API Management gateway immediately.Theip-filterpolicy now appears in theInbound processingsection.
SelectSaveto propagate changes to the API Management gateway immediately.
Theip-filterpolicy now appears in theInbound processingsection.
In the left navigation of your API Management instance, selectAPIs.
In the left navigation of your API Management instance, selectAPIs.
Select an API that you previously imported.
Select an API that you previously imported.
Select theDesigntab.
Select theDesigntab.
To apply the policy to all operations, selectAll operations.
To apply the policy to all operations, selectAll operations.
In theInbound processingsection, select the</>(code editor) icon.
In theInbound processingsection, select the</>(code editor) icon.

To see available policy XML code snippets, selectShow snippets. For example, selectRestrict caller IPs.
To see available policy XML code snippets, selectShow snippets. For example, selectRestrict caller IPs.

Paste or enter the desired policy code snippet into one of the appropriate blocks, and complete the policy configuration.<policies>
    <inbound>
        <base />
        <ip-filter action="allow">
            <address-range from="10.100.7.0" to="10.100.127.0" />
        </ip-filter>
    </inbound>
    <backend>
        <base />
    </backend>
    <outbound>
        <base />
    </outbound>
    <on-error>
        <base />
    </on-error>
</policies>NoteSet a policy's elements and child elements in the order provided in the policy statement.
Paste or enter the desired policy code snippet into one of the appropriate blocks, and complete the policy configuration.
<policies>
    <inbound>
        <base />
        <ip-filter action="allow">
            <address-range from="10.100.7.0" to="10.100.127.0" />
        </ip-filter>
    </inbound>
    <backend>
        <base />
    </backend>
    <outbound>
        <base />
    </outbound>
    <on-error>
        <base />
    </on-error>
</policies>
<policies>
    <inbound>
        <base />
        <ip-filter action="allow">
            <address-range from="10.100.7.0" to="10.100.127.0" />
        </ip-filter>
    </inbound>
    <backend>
        <base />
    </backend>
    <outbound>
        <base />
    </outbound>
    <on-error>
        <base />
    </on-error>
</policies>
Note
Set a policy's elements and child elements in the order provided in the policy statement.
SelectSaveto propagate changes to the API Management gateway immediately.Theip-filterpolicy now appears in theInbound processingsection.
SelectSaveto propagate changes to the API Management gateway immediately.
Theip-filterpolicy now appears in theInbound processingsection.
Configure policies at different scopes
API Management gives you flexibility to configure policy definitions at multiplescopes, in each of the policy sections.
Important
Not all policies can be applied at each scope or policy section. If the policy that you want to add isn't enabled, ensure that you are in a supported policy section and scope for that policy. To review the policy sections and scopes for a policy, check theUsagesection in thePolicy referencetopics.
Note
TheBackendpolicy section can only contain one policy element. By default, API Management configures theforward-requestpolicy in theBackendsection at the global scope, and thebaseelement at other scopes.
forward-request
base
Global scope
Global scope is configured forAll APIsin your API Management instance.
In the left navigation of your API Management instance, selectAPIs>All APIs.
In the left navigation of your API Management instance, selectAPIs>All APIs.
Select theDesigntab.
Select theDesigntab.

In a policy section, select+ Add policyto use a form-based policy editor, or select the</>(code editor) icon to add and edit XML directly.
In a policy section, select+ Add policyto use a form-based policy editor, or select the</>(code editor) icon to add and edit XML directly.
SelectSaveto propagate changes to the API Management gateway immediately.
SelectSaveto propagate changes to the API Management gateway immediately.
Product scope
Product scope is configured for a selected product.
In the left menu, selectProducts, and then select a product to which you want to apply policies.
In the left menu, selectProducts, and then select a product to which you want to apply policies.
In the product window, selectPolicies.
In the product window, selectPolicies.

In a policy section, select+ Add policyto use a form-based policy editor, or select the</>(code editor) icon to add and edit XML directly.
In a policy section, select+ Add policyto use a form-based policy editor, or select the</>(code editor) icon to add and edit XML directly.
SelectSaveto propagate changes to the API Management gateway immediately.
SelectSaveto propagate changes to the API Management gateway immediately.
API scope
API scope is configured forAll operationsof the selected API.
In the left navigation of your API Management instance, selectAPIs, and then select the API that you want to apply policies to.
In the left navigation of your API Management instance, selectAPIs, and then select the API that you want to apply policies to.
Select theDesigntab.
Select theDesigntab.
SelectAll operations.
SelectAll operations.

In a policy section, select+ Add policyto use a form-based policy editor, or select the</>(code editor) icon to add and edit XML directly.
In a policy section, select+ Add policyto use a form-based policy editor, or select the</>(code editor) icon to add and edit XML directly.
SelectSaveto propagate changes to the API Management gateway immediately.
SelectSaveto propagate changes to the API Management gateway immediately.
Operation scope
Operation scope is configured for a selected API operation.
In the left navigation of your API Management instance, selectAPIs.
In the left navigation of your API Management instance, selectAPIs.
Select theDesigntab.
Select theDesigntab.
Select  the operation to which you want to apply policies.
Select  the operation to which you want to apply policies.

In a policy section, select+ Add policyto use a form-based policy editor, or select the</>(code editor) icon to add and edit XML directly.
In a policy section, select+ Add policyto use a form-based policy editor, or select the</>(code editor) icon to add and edit XML directly.
SelectSaveto propagate changes to the API Management gateway immediately.
SelectSaveto propagate changes to the API Management gateway immediately.
Reuse policy configurations
You can create reusablepolicy fragmentsin your API Management instance. Policy fragments are XML elements containing your configurations of one or more policies. Policy fragments help you configure policies consistently and maintain policy definitions without needing to repeat or retype XML code.
Use theinclude-fragmentpolicy to insert a policy fragment in a policy definition.
include-fragment
Usebaseelement to set policy evaluation order
base
If you configure policy definitions at more than one scope, multiple policies could apply to an API request or response. Depending on the order that the policies from the different scopes are applied, the transformation of the request or response could differ.
In API Management, determine the policy evaluation order by placement of thebaseelement in each section in the policy definition at each scope. Thebaseelement inherits the policies configured in that section at the next broader (parent) scope. Thebaseelement is included by default in each policy section.
base
base
base
Note
To view the effective policies at the current scope, selectCalculate effective policyin the policy editor.
To modify the policy evaluation order using the policy editor:
Begin with the definition at the mostnarrowscope you configured, which API Management will apply first.For example, when using policy definitions configured at the global scope and the API scope, begin with the configuration at the API scope.
Begin with the definition at the mostnarrowscope you configured, which API Management will apply first.
For example, when using policy definitions configured at the global scope and the API scope, begin with the configuration at the API scope.
Place thebaseelement within a section to determine where to inherit all policies from the corresponding section at the parent scope.For example, in aninboundsection configured at the API scope, place abaseelement to control where to inherit policies configured in theinboundsection at the global scope. In the following example, policies inherited from the global scope are applied before theip-filterpolicy.<policies>
  <inbound>
      <base />
        <ip-filter action="allow">
            <address>10.100.7.1</address>
        </ip-filter>
  </inbound>
  [...]
</policies>NoteYou can place thebaseelement before or after any policy element in a section.If you want to prevent inheriting policies from the parent scope, remove thebaseelement. In most cases, this isn't recommended. However, it may be useful in certain situations, such as when you want to apply different policies to a specific operation than are configured for the API (all operations) scope.
Place thebaseelement within a section to determine where to inherit all policies from the corresponding section at the parent scope.
base
For example, in aninboundsection configured at the API scope, place abaseelement to control where to inherit policies configured in theinboundsection at the global scope. In the following example, policies inherited from the global scope are applied before theip-filterpolicy.
inbound
base
inbound
ip-filter
<policies>
  <inbound>
      <base />
        <ip-filter action="allow">
            <address>10.100.7.1</address>
        </ip-filter>
  </inbound>
  [...]
</policies>
<policies>
  <inbound>
      <base />
        <ip-filter action="allow">
            <address>10.100.7.1</address>
        </ip-filter>
  </inbound>
  [...]
</policies>
Note
You can place thebaseelement before or after any policy element in a section.
base
If you want to prevent inheriting policies from the parent scope, remove thebaseelement. In most cases, this isn't recommended. However, it may be useful in certain situations, such as when you want to apply different policies to a specific operation than are configured for the API (all operations) scope.
base
Continue to configure thebaseelement in policy definitions at successively broader scopes.A globally scoped policy has no parent scope, and using thebaseelement in it has no effect.
Continue to configure thebaseelement in policy definitions at successively broader scopes.
base
A globally scoped policy has no parent scope, and using thebaseelement in it has no effect.
base
Get Copilot assistance
Get AI assistance from Copilot to create and edit your API Management policy definitions. With Copilot, create and update policies that match your specific requirements without needing to know the XML syntax, and get explanations of existing policies. Copilot can also help you translate policies you might have configured in other API management solutions.
Microsoft Copilot in Azure- Offers policy authoring assistance with natural language prompts in the Azure portal. Author policies in API Management's policy editor, and ask Copilot to explain policy sections.
GitHub Copilot for Azure in VS Code- Provides policy authoring assistance in Visual Studio Code, accelerating policy configuration when you use theAzure API Management Extension for Visual Studio Code. Prompt Copilot Chat or Copilot Edits (preview) with natural language to create and refine policy definitions in place.
Example prompt:
Generate a policy that adds an Authorization header to the request with a Bearer token.
Generate a policy that adds an Authorization header to the request with a Bearer token.
Copilot is powered by AI, so surprises and mistakes are possible. For more information, seeCopilot general use FAQs.
Related content
For more information about working with policies, see:
Tutorial: Transform and protect your API
Policy referencefor a full list of policy statements and their settings
Policy expressions
Set or edit policies
Reuse policy configurations
Policy snippets repo
Azure API Management policy toolkit
Get Copilot assistance to create, explain, and troubleshoot policies
Feedback
Was this page helpful?
Additional resources