Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Set up the information protection client using PowerShell
Article
2024-12-14
2 contributors
In this article
Description
Contains instructions for installing the Microsoft Purview Information Protection client and PowerShell cmdlets using PowerShell.
Use PowerShell with the Microsoft Purview Information Protection client
The Microsoft Purview Information Protection module is installed with the information protection client. The associated PowerShell module isPurviewInformationProtection.
The PurviewInformationProtection module enables you to manage the client with commands and automation scripts; for example:
Install-Scanner: Installs and configures the Information Protection Scanner service on a computer running Windows Server 2019, Windows Server 2016, or Windows Server 2012 R2.
Get-FileStatus: Gets the Information Protection label and protection information for a specified file or files.
Start-Scan: Instructs the information protection scanner to start a one-time scan cycle.
Set-FileLabel -Autolabel: Scans a file to automatically set an information protection label for a file, according to conditions that are configured in the policy.
Install the PurviewInformationProtection PowerShell module
This module requires Windows PowerShell 4.0. This prerequisite isn't checked during installation. Make sure that you have the correct version of PowerShell installed.
Make sure that you have the most recent version of the PurviewInformationProtection PowerShell module by runningImport-Module PurviewInformationProtection.
Import-Module PurviewInformationProtection
You install and configure the information protection client and associated cmdlets using PowerShell.
The PurviewInformationProtection PowerShell module installs automatically when you install the full version of the information protection client. Alternatively, you can install the module only by using thePowerShellOnly=trueparameter.
The module is installed in the\ProgramFiles (x86)\PurviewInformationProtectionfolder, and then adds this folder to thePSModulePathsystem variable.
PSModulePath
Important
The PurviewInformationProtection module doesn't support configuring advanced settings for labels or label policies.
To use cmdlets with path lengths greater than 260 characters, use the followinggroup policy settingthat is available starting with Windows 10, version 1607:
Local Computer Policy>Computer Configuration>Administrative Templates>All Settings>Enable Win32 long paths
For Windows Server 2016, you can use the same group policy setting when you install the latest Administrative Templates (.admx) for Windows 10.
For more information, see theMaximum Path Length Limitationsection from the Windows 10 developer documentation.
Understand prerequisites for the PurviewInformationProtection PowerShell module
In addition to the installation prerequisites for the PurviewInformationProtection module, you must also activate theAzure Rights Management service.
In some cases, you might want to remove protection from files for others that use your own account. For example, you might want to remove protection for others for the sake of data discovery or recovery. If you're using labels to apply protection, you can remove that protection by setting a new label that doesn't apply protection, or you can remove the label.
For cases like this, the following requirements must also be met:
The super user feature must be enabled for your organization.
Your account must be configured as an Azure Rights Management super user.
Run information protection labeling cmdlets unattended
By default, when you run the cmdlets for labeling, the commands run in your own user context in an interactive PowerShell session. To automatically run sensitivity labeling cmdlets, read the following sections:
Understand prerequisites for running labeling cmdlets unattended
Create and configure Microsoft Entra applications for Set-Authentication
Run the Set-Authentication cmdlet
To run Purview Information Protection labeling cmdlets unattended, use the following access details:
A Windows accountthat can sign in interactively.
A Windows accountthat can sign in interactively.
A Microsoft Entra account, for delegated access. For ease of administration, use a single account that synchronizes from Active Directory to Microsoft Entra ID.For the delegated user account, configure the following requirements:RequirementDetailsLabel policyMake sure that you have a label policy assigned to this account and that the policy contains the published labels you want to use.If you use label policies for different users, you might need to create a new label policy that publishes all your labels, and publish the policy to just this delegated user account.Decrypting contentIf this account needs to decrypt content, for example, to reprotect files and inspect files protected by others, make it a super user for Information Protection and make sure the super user feature is enabled.Onboarding controlsIf you have implemented onboarding controls for a phased deployment, make sure that this account is included in your onboarding controls you've configured.
A Microsoft Entra account, for delegated access. For ease of administration, use a single account that synchronizes from Active Directory to Microsoft Entra ID.
For the delegated user account, configure the following requirements:
A Microsoft Entra access token, which sets and stores credentials for the delegated user to authenticate to Microsoft Purview Information Protection. When the token in Microsoft Entra ID expires, you must run the cmdlet again to acquire a new token.The parameters forSet-Authenticationuse values from an app registration process in Microsoft Entra ID. For more information, seeCreate and configure Microsoft Entra applications for Set-Authentication.
A Microsoft Entra access token, which sets and stores credentials for the delegated user to authenticate to Microsoft Purview Information Protection. When the token in Microsoft Entra ID expires, you must run the cmdlet again to acquire a new token.
The parameters forSet-Authenticationuse values from an app registration process in Microsoft Entra ID. For more information, seeCreate and configure Microsoft Entra applications for Set-Authentication.
Run the labeling cmdlets non-interactively by first running theSet-Authenticationcmdlet.
The computer running theSet-Authenticationcmdlet downloads the labeling policy that's assigned to your delegated user account in the Microsoft Purview compliance portal.

TheSet-Authenticationcmdlet requires an app registration for theAppIdandAppSecretparameters.
To create a new app registration for the unified labeling clientSet-Authenticationcmdlet:
In a new browser window, sign in theAzure portalto the Microsoft Entra tenant that you use with Microsoft Purview Information Protection.
In a new browser window, sign in theAzure portalto the Microsoft Entra tenant that you use with Microsoft Purview Information Protection.
Navigate toMicrosoft Entra ID>Manage>App registrations, and selectNew registration.
Navigate toMicrosoft Entra ID>Manage>App registrations, and selectNew registration.
On theRegister an applicationpane, specify the following values, and then selectRegister:OptionValueNameAIP-DelegatedUserSpecify a different name as needed. The name must be unique per tenant.Supported account typesSelectAccounts in this organizational directory only.Redirect URI (optional)SelectWeb, and then enterhttps://localhost.
On theRegister an applicationpane, specify the following values, and then selectRegister:
AIP-DelegatedUser
https://localhost
On theAIP-DelegatedUserpane, copy the value for theApplication (client) ID.The value looks similar to the following example:77c3c1c3-abf9-404e-8b2b-4652836c8c66.This value is used for theAppIdparameter when you run theSet-Authenticationcmdlet. Paste and save the value for later reference.
On theAIP-DelegatedUserpane, copy the value for theApplication (client) ID.
The value looks similar to the following example:77c3c1c3-abf9-404e-8b2b-4652836c8c66.
77c3c1c3-abf9-404e-8b2b-4652836c8c66
This value is used for theAppIdparameter when you run theSet-Authenticationcmdlet. Paste and save the value for later reference.
From the sidebar, selectManage>Certificates & secrets.Then, on theAIP-DelegatedUser - Certificates & secretspane, in theClient secretssection, selectNew client secret.
From the sidebar, selectManage>Certificates & secrets.
Then, on theAIP-DelegatedUser - Certificates & secretspane, in theClient secretssection, selectNew client secret.
ForAdd a client secret, specify the following, and then selectAdd:FieldValueDescriptionMicrosoft Purview Information Protection clientExpiresSpecify your choice of duration (1 year,2 years, ornever expires)
ForAdd a client secret, specify the following, and then selectAdd:
Microsoft Purview Information Protection client
Back on theAIP-DelegatedUser - Certificates & secretspane, in theClient secretssection, copy the string for theVALUE.This string looks similar to the following example:OAkk+rnuYc/u+]ah2kNxVbtrDGbS47L4.To make sure you copy all the characters, select the icon toCopy to clipboard.ImportantSave this string because it's not displayed again and it can't be retrieved. As with any sensitive information that you use, store the saved value securely and restrict access to it.
Back on theAIP-DelegatedUser - Certificates & secretspane, in theClient secretssection, copy the string for theVALUE.
This string looks similar to the following example:OAkk+rnuYc/u+]ah2kNxVbtrDGbS47L4.
OAkk+rnuYc/u+]ah2kNxVbtrDGbS47L4
To make sure you copy all the characters, select the icon toCopy to clipboard.
Important
Save this string because it's not displayed again and it can't be retrieved. As with any sensitive information that you use, store the saved value securely and restrict access to it.
From the sidebar, selectManage>API permissions.On theAIP-DelegatedUser - API permissionspane, selectAdd a permission.
From the sidebar, selectManage>API permissions.
On theAIP-DelegatedUser - API permissionspane, selectAdd a permission.
On theRequest API permissionspane, make sure that you're on theMicrosoft APIstab, and selectAzure Rights Management Services.When you're prompted for the type of permissions that your application requires, selectApplication permissions.
On theRequest API permissionspane, make sure that you're on theMicrosoft APIstab, and selectAzure Rights Management Services.
When you're prompted for the type of permissions that your application requires, selectApplication permissions.
ForSelect permissions, expandContentand select the following, and then selectAdd permissions.Content.DelegatedReaderContent.DelegatedWriter
ForSelect permissions, expandContentand select the following, and then selectAdd permissions.
Content.DelegatedReader
Content.DelegatedWriter
Back on theAIP-DelegatedUser - API permissionspane, selectAdd a permissionagain.On theRequest AIP permissionspane, selectAPIs my organization uses, and search forMicrosoft Information Protection Sync Service.
Back on theAIP-DelegatedUser - API permissionspane, selectAdd a permissionagain.
On theRequest AIP permissionspane, selectAPIs my organization uses, and search forMicrosoft Information Protection Sync Service.
On theRequest API permissionspane, selectApplication permissions.ForSelect permissions, expandUnifiedPolicy, selectUnifiedPolicy.Tenant.Read, and then selectAdd permissions.
On theRequest API permissionspane, selectApplication permissions.
ForSelect permissions, expandUnifiedPolicy, selectUnifiedPolicy.Tenant.Read, and then selectAdd permissions.
Back on theAIP-DelegatedUser - API permissionspane, selectGrant admin consent foryour tenantand selectYesfor the confirmation prompt.
Back on theAIP-DelegatedUser - API permissionspane, selectGrant admin consent foryour tenantand selectYesfor the confirmation prompt.
After this step, the registration of this app with a secret completes. You're ready to runSet-Authenticationwith the parametersAppId, andAppSecret. Additionally, you need your tenant ID.
Tip
You can quickly copy your tenant ID by using Azure portal:Microsoft Entra ID>Manage>Properties>Directory ID.
Run the Set-Authentication cmdlet
Open Windows PowerShell with theRun as administrator option.
Open Windows PowerShell with theRun as administrator option.
In your PowerShell session, create a variable to store the credentials of the Windows user account that runs non-interactively. For example, if you created a service account for the scanner:$pscreds = Get-Credential "CONTOSO\srv-scanner"You're prompted for this account's password.
In your PowerShell session, create a variable to store the credentials of the Windows user account that runs non-interactively. For example, if you created a service account for the scanner:
$pscreds = Get-Credential "CONTOSO\srv-scanner"
$pscreds = Get-Credential "CONTOSO\srv-scanner"
You're prompted for this account's password.
Run the Set-Authentication cmdlet, with theOnBeHalfOfparameter, specifying as its value the variable that you created.Also specify your app registration values, your tenant ID, and the name of the delegated user account in Microsoft Entra ID. For example:Set-Authentication -AppId "77c3c1c3-abf9-404e-8b2b-4652836c8c66" -AppSecret "OAkk+rnuYc/u+]ah2kNxVbtrDGbS47L4" -TenantId "9c11c87a-ac8b-46a3-8d5c-f4d0b72ee29a" -DelegatedUser scanner@contoso.com -OnBehalfOf $pscreds
Run the Set-Authentication cmdlet, with theOnBeHalfOfparameter, specifying as its value the variable that you created.
Also specify your app registration values, your tenant ID, and the name of the delegated user account in Microsoft Entra ID. For example:
Set-Authentication -AppId "77c3c1c3-abf9-404e-8b2b-4652836c8c66" -AppSecret "OAkk+rnuYc/u+]ah2kNxVbtrDGbS47L4" -TenantId "9c11c87a-ac8b-46a3-8d5c-f4d0b72ee29a" -DelegatedUser scanner@contoso.com -OnBehalfOf $pscreds
Set-Authentication -AppId "77c3c1c3-abf9-404e-8b2b-4652836c8c66" -AppSecret "OAkk+rnuYc/u+]ah2kNxVbtrDGbS47L4" -TenantId "9c11c87a-ac8b-46a3-8d5c-f4d0b72ee29a" -DelegatedUser scanner@contoso.com -OnBehalfOf $pscreds
Additional resources