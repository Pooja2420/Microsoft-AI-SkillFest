Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Serverless REST APIs using Azure Functions
Article
2022-11-20
18 contributors
In this article
Azure Functions is an essential compute service that you use to build serverless REST-based APIs. HTTP triggers expose REST endpoints that can be called by your clients, like browsers, mobile apps, and other backend services. Withnative support for routes, a single HTTP triggered function can expose a highly functional REST API. Functions also provides its own basic key-based authorization scheme to help limit access only to specific clients. For more information, seeAzure Functions HTTP trigger
In some scenarios, you may need your API to support a more complex set of REST behaviors. For example, you may need to combine multiple HTTP function endpoints into a single API. You might also want to pass requests through to one or more backend REST-based services. Finally, your APIs might require a higher-degree of security that lets you monetize its use.
Today, the recommended approach to build more complex and robust APIs based on your functions is to use the comprehensive API services provided byAzure API Management.
API Management uses a policy-based model to let you control routing, security, and OpenAPI integration. It also supports advanced policies like rate limiting monetization. Previous versions of the Functions runtime used the legacy Functions Proxies feature.
Important
Azure Functions proxies is a legacy feature forversions 1.x through 3.xof the Azure Functions runtime. Support for proxies can be re-enabled in version 4.x for you to successfully upgrade your function apps to the latest runtime version. As soon as possible, you should switch to integrating your function apps with Azure API Management. API Management lets you take advantage of a more complete set of features for defining, securing, managing, and monetizing your Functions-based APIs. For more information, seeAPI Management integration.
To learn how to re-enable proxies support in Functions version 4.x, seeRe-enable proxies in Functions v4.x.
Moving from Functions Proxies to API Management
When moving from Functions Proxies to using API Management, you must integrate your function app with an API Management instance, and then configure the API Management instance to behave like the previous proxy. The following section provides links to the relevant articles that help you succeed in using API Management with Azure Functions.
If you have challenges moving from proxies or if Azure API Management doesn't address your specific scenarios, post a request in theAPI Management feedback forum.
API Management integration
API Management lets you import an existing function app. After import, each HTTP triggered function endpoint becomes an API that you can modify and manage. After import, you can also use API Management to generate an OpenAPI definition file for your APIs. During import, any endpoints with anadminauthorization levelare ignored. For more information about using API Management with Functions, see the following articles:
admin
After you have your function app endpoints exposed by using API Management, the following articles provide general information about how to manage your Functions-based APIs in the API Management instance.
Legacy Functions Proxies
The legacyFunctions Proxies featurealso provides a set of basic API functionality for version 3.x and older version of the Functions runtime.
Important
Azure Functions proxies is a legacy feature forversions 1.x through 3.xof the Azure Functions runtime. Support for proxies can be re-enabled in version 4.x for you to successfully upgrade your function apps to the latest runtime version. As soon as possible, you should switch to integrating your function apps with Azure API Management. API Management lets you take advantage of a more complete set of features for defining, securing, managing, and monetizing your Functions-based APIs. For more information, seeAPI Management integration.
To learn how to re-enable proxies support in Functions version 4.x, seeRe-enable proxies in Functions v4.x.
Some basic hints for how to perform equivalent tasks using API Management have been added to theFunctions Proxies article. We don't currently have documentation or tools to help you migrate an existing Functions Proxies implementation to API Management.
Next steps
Expose serverless APIs from HTTP endpoints using Azure API Management
Feedback
Was this page helpful?
Additional resources