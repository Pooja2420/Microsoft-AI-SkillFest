Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Import HSM-protected keys to Key Vault (BYOK)
Article
2025-03-07
14 contributors
In this article
For added assurance when you use Azure Key Vault, you can import or generate a key in a hardware security module (HSM); the key will never leave the HSM boundary. This scenario often is referred to asbring your own key (BYOK). Key Vault usesFIPS 140 validated HSMsto protect your keys.
Use the information in this article to help you plan for, generate, and transfer your own HSM-protected keys to use with Azure Key Vault.
Note
This import method is available only forsupported HSMs.
For more information, and for a tutorial to get started using Key Vault (including how to create a key vault for HSM-protected keys), seeWhat is Azure Key Vault?.
Overview
Here's an overview of the process. Specific steps to complete are described later in the article.
In Key Vault, generate a key (referred to as aKey Exchange Key (KEK)). The KEK must be an RSA-HSM key that has only theimportkey operation. Only Key Vault Premium and Managed HSM support RSA-HSM keys.
import
Download the KEK public key as a .pem file.
Transfer the KEK public key to an offline computer that is connected to an on-premises HSM.
In the offline computer, use the BYOK tool provided by your HSM vendor to create a BYOK file.
The target key is encrypted with a KEK, which stays encrypted until it's transferred to the Key Vault HSM. Only the encrypted version of your key leaves the on-premises HSM.
A KEK that's generated inside a Key Vault HSM is not exportable. HSMs enforce the rule that no clear version of a KEK exists outside a Key Vault HSM.
The KEK must be in the same key vault where the target key will be imported.
When the BYOK file is uploaded to Key Vault, a Key Vault HSM uses the KEK private key to decrypt the target key material and import it as an HSM key. This operation happens entirely inside a Key Vault HSM. The target key always remains in the HSM protection boundary.
Prerequisites
The following table lists prerequisites for using BYOK in Azure Key Vault:
Supported HSMs
nCipher
Thales
Utimaco
nShield family of HSMs
nShield as a service
Self-Defending Key Management Service (SDKMS)
Equinix SmartKey
CryptoHub
CryptoHub Cloud
KMES Series 3
Firmware version 2.0.4 or later
Firmware version 3.2 or newer
nShield family of HSMs
nShield as a service
Utimaco
Thales
nCipher
Luna HSM 7 family with firmware version 7.3 or newer
Supported key types
Note
RSA and EC are software key types that, while supported as target key types for testing, are transferred to the Key Vault Service rather than Key Vault HSMs.
Generate and transfer your key to Key Vault Premium HSM or Managed HSM
To generate and transfer your key to a Key Vault Premium or Managed HSM:
Step 1: Generate a KEK
Step 2: Download the KEK public key
Step 3: Generate and prepare your key for transfer
Step 4: Transfer your key to Azure Key Vault
Generate a KEK
A KEK is an RSA key that's generated in a Key Vault Premium or Managed HSM. The KEK is used to encrypt the key you want to import (thetargetkey).
The KEK must be:
An RSA-HSM key (2,048-bit; 3,072-bit; or 4,096-bit)
Generated in the same key vault where you intend to import the target key
Created with allowed key operations set toimport
import
Note
The KEK must have 'import' as the only allowed key operation. 'import' is mutually exclusive with all other key operations.
Use theaz keyvault key createcommand to create a KEK that has key operations set toimport. Record the key identifier (kid) that's returned from the following command. (You'll use thekidvalue inStep 3.)
import
kid
kid
Azure CLI
Azure PowerShell
az keyvault key create --kty RSA-HSM --size 4096 --name KEKforBYOK --ops import --vault-name ContosoKeyVaultHSM
az keyvault key create --kty RSA-HSM --size 4096 --name KEKforBYOK --ops import --vault-name ContosoKeyVaultHSM
For Managed HSM:
az keyvault key create --kty RSA-HSM --size 4096 --name KEKforBYOK --ops import --hsm-name ContosoKeyVaultHSM
az keyvault key create --kty RSA-HSM --size 4096 --name KEKforBYOK --ops import --hsm-name ContosoKeyVaultHSM
Add-AzKeyVaultKey -VaultName 'ContosoKeyVaultHSM' -Name 'KEKforBYOK' -Destination 'HSM' -Size 4096 -KeyOps 'import'
Add-AzKeyVaultKey -VaultName 'ContosoKeyVaultHSM' -Name 'KEKforBYOK' -Destination 'HSM' -Size 4096 -KeyOps 'import'
For Managed HSM:
Add-AzKeyVaultKey -HsmName 'ContosoKeyVaultHSM' -Name 'KEKforBYOK' -Destination 'HSM' -Size 4096 -KeyOps 'import'
Add-AzKeyVaultKey -HsmName 'ContosoKeyVaultHSM' -Name 'KEKforBYOK' -Destination 'HSM' -Size 4096 -KeyOps 'import'
Download the KEK public key
Useaz keyvault key downloadto download the KEK public key to a .pem file. The target key you import is encrypted by using the KEK public key.
Azure CLI
Azure PowerShell
az keyvault key download --name KEKforBYOK --vault-name ContosoKeyVaultHSM --file KEKforBYOK.publickey.pem
az keyvault key download --name KEKforBYOK --vault-name ContosoKeyVaultHSM --file KEKforBYOK.publickey.pem
For Managed HSM:
az keyvault key download --name KEKforBYOK --hsm-name ContosoKeyVaultHSM --file KEKforBYOK.publickey.pem
az keyvault key download --name KEKforBYOK --hsm-name ContosoKeyVaultHSM --file KEKforBYOK.publickey.pem
Get-AzKeyVaultKey -VaultName 'ContosoKeyVaultHSM' -KeyName 'KEKforBYOK' -OutFile 'KEKforBYOK.publickey.pem'
Get-AzKeyVaultKey -VaultName 'ContosoKeyVaultHSM' -KeyName 'KEKforBYOK' -OutFile 'KEKforBYOK.publickey.pem'
For Managed HSM
Get-AzKeyVaultKey -HsmName 'ContosoKeyVaultHSM' -KeyName 'KEKforBYOK' -OutFile 'KEKforBYOK.publickey.pem'
Get-AzKeyVaultKey -HsmName 'ContosoKeyVaultHSM' -KeyName 'KEKforBYOK' -OutFile 'KEKforBYOK.publickey.pem'
Transfer the KEKforBYOK.publickey.pem file to your offline computer. You'll need this file in the next step.
Generate and prepare your key for transfer
Refer to your HSM vendor's documentation to download and install the BYOK tool. Follow instructions from your HSM vendor to generate a target key, and then create a key transfer package (a BYOK file). The BYOK tool will use thekidfromStep 1and the KEKforBYOK.publickey.pem file you downloaded inStep 2to generate an encrypted target key in a BYOK file.
kid
Transfer the BYOK file to your connected computer.
Note
Importing Elliptic Curve key with curve P-256K is supported.
Known issue: Importing an RSA 4K target key from Luna HSMs is only supported with firmware 7.4.0 or newer.
Transfer your key to Azure Key Vault
To complete the key import, transfer the key transfer package (a BYOK file) from your disconnected computer to the internet-connected computer. Use theaz keyvault key importcommand to upload the BYOK file to the Key Vault HSM.
To import an RSA key use following command. Parameter --kty is optional and defaults to 'RSA-HSM'.
Azure CLI
Azure PowerShell
az keyvault key import --vault-name ContosoKeyVaultHSM --name ContosoFirstHSMkey --byok-file KeyTransferPackage-ContosoFirstHSMkey.byok
az keyvault key import --vault-name ContosoKeyVaultHSM --name ContosoFirstHSMkey --byok-file KeyTransferPackage-ContosoFirstHSMkey.byok
For Managed HSM
az keyvault key import --hsm-name ContosoKeyVaultHSM --name ContosoFirstHSMkey --byok-file KeyTransferPackage-ContosoFirstHSMkey.byok
az keyvault key import --hsm-name ContosoKeyVaultHSM --name ContosoFirstHSMkey --byok-file KeyTransferPackage-ContosoFirstHSMkey.byok
Add-AzKeyVaultKey -VaultName 'ContosoKeyVaultHSM' -KeyName 'ContosoFirstHSMkey' -KeyFilePath 'KeyTransferPackage-ContosoFirstHSMkey.byok'
Add-AzKeyVaultKey -VaultName 'ContosoKeyVaultHSM' -KeyName 'ContosoFirstHSMkey' -KeyFilePath 'KeyTransferPackage-ContosoFirstHSMkey.byok'
For Managed HSM
Add-AzKeyVaultKey -HsmName 'ContosoKeyVaultHSM' -KeyName 'ContosoFirstHSMkey' -KeyFilePath 'KeyTransferPackage-ContosoFirstHSMkey.byok'
Add-AzKeyVaultKey -HsmName 'ContosoKeyVaultHSM' -KeyName 'ContosoFirstHSMkey' -KeyFilePath 'KeyTransferPackage-ContosoFirstHSMkey.byok'
To import an EC key, you must specify key type and the curve name.
Azure CLI
Azure PowerShell
az keyvault key import --vault-name ContosoKeyVaultHSM --name ContosoFirstHSMkey --kty EC-HSM --curve-name "P-256" --byok-file KeyTransferPackage-ContosoFirstHSMkey.byok
az keyvault key import --vault-name ContosoKeyVaultHSM --name ContosoFirstHSMkey --kty EC-HSM --curve-name "P-256" --byok-file KeyTransferPackage-ContosoFirstHSMkey.byok
For Managed HSM
az keyvault key import --hsm-name ContosoKeyVaultHSM --name ContosoFirstHSMkey --byok-file --kty EC-HSM --curve-name "P-256" KeyTransferPackage-ContosoFirstHSMkey.byok
az keyvault key import --hsm-name ContosoKeyVaultHSM --name ContosoFirstHSMkey --byok-file --kty EC-HSM --curve-name "P-256" KeyTransferPackage-ContosoFirstHSMkey.byok
Add-AzKeyVaultKey -VaultName 'ContosoKeyVaultHSM' -KeyName 'ContosoFirstHSMkey' -KeyType EC -CurveName P-256  -KeyFilePath 'KeyTransferPackage-ContosoFirstHSMkey.byok'
Add-AzKeyVaultKey -VaultName 'ContosoKeyVaultHSM' -KeyName 'ContosoFirstHSMkey' -KeyType EC -CurveName P-256  -KeyFilePath 'KeyTransferPackage-ContosoFirstHSMkey.byok'
For Managed HSM
Add-AzKeyVaultKey -HsmName 'ContosoKeyVaultHSM' -KeyName 'ContosoFirstHSMkey' -KeyType EC -CurveName P-256  -KeyFilePath 'KeyTransferPackage-ContosoFirstHSMkey.byok'
Add-AzKeyVaultKey -HsmName 'ContosoKeyVaultHSM' -KeyName 'ContosoFirstHSMkey' -KeyType EC -CurveName P-256  -KeyFilePath 'KeyTransferPackage-ContosoFirstHSMkey.byok'
If the upload is successful, Azure CLI displays the properties of the imported key.
Next steps
You can now use this HSM-protected key in your key vault. For more information, seethis price and feature comparison.
Feedback
Was this page helpful?
Additional resources