Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Tutorial: Configure an Application Gateway with TLS termination using the Azure portal
Article
2023-04-13
10 contributors
In this article
You can use the Azure portal to configure anapplication gatewaywith a certificate for TLS termination that uses virtual machines for backend servers.
In this tutorial, you learn how to:
Create a self-signed certificate
Create an application gateway with the certificate
Create the virtual machines used as backend servers
Test the application gateway
If you don't have an Azure subscription, create afree accountbefore you begin.
Note
We recommend that you use the Azure Az PowerShell module to interact with Azure. To get started, seeInstall Azure PowerShell. To learn how to migrate to the Az PowerShell module, seeMigrate Azure PowerShell from AzureRM to Az.
Prerequisites
An Azure subscription
Create a self-signed certificate
In this section, you useNew-SelfSignedCertificateto create a self-signed certificate. You upload the certificate to the Azure portal when you create the listener for the application gateway.
On your local computer, open a Windows PowerShell window as an administrator. Run the following command to create the certificate:
New-SelfSignedCertificate `
  -certstorelocation cert:\localmachine\my `
  -dnsname www.contoso.com
New-SelfSignedCertificate `
  -certstorelocation cert:\localmachine\my `
  -dnsname www.contoso.com
You should see something like this response:
PSParentPath: Microsoft.PowerShell.Security\Certificate::LocalMachine\my

Thumbprint                                Subject
----------                                -------
E1E81C23B3AD33F9B4D1717B20AB65DBB91AC630  CN=www.contoso.com
PSParentPath: Microsoft.PowerShell.Security\Certificate::LocalMachine\my

Thumbprint                                Subject
----------                                -------
E1E81C23B3AD33F9B4D1717B20AB65DBB91AC630  CN=www.contoso.com
UseExport-PfxCertificatewith the Thumbprint that was returned to export a pfx file from the certificate. The supported PFX algorithms are listed atPFXImportCertStore function. Make sure your password is 4 - 12 characters long:
$pwd = ConvertTo-SecureString -String <your password> -Force -AsPlainText
Export-PfxCertificate `
  -cert cert:\localMachine\my\E1E81C23B3AD33F9B4D1717B20AB65DBB91AC630 `
  -FilePath c:\appgwcert.pfx `
  -Password $pwd
$pwd = ConvertTo-SecureString -String <your password> -Force -AsPlainText
Export-PfxCertificate `
  -cert cert:\localMachine\my\E1E81C23B3AD33F9B4D1717B20AB65DBB91AC630 `
  -FilePath c:\appgwcert.pfx `
  -Password $pwd
Sign in to Azure
Sign in to theAzure portal.
Create an application gateway
From the Azure portal menu, select+ Create a resource>Networking>Application Gateway, or search forApplication Gatewayin the portal search box.
From the Azure portal menu, select+ Create a resource>Networking>Application Gateway, or search forApplication Gatewayin the portal search box.
SelectCreate.
SelectCreate.
Basics tab
On theBasicstab, enter or select these values:Resource group: SelectmyResourceGroupAGfor the resource group. If it doesn't exist, selectCreate newto create it.Application gateway name: EntermyAppGatewayfor the name of the application gateway.
On theBasicstab, enter or select these values:
Resource group: SelectmyResourceGroupAGfor the resource group. If it doesn't exist, selectCreate newto create it.
Resource group: SelectmyResourceGroupAGfor the resource group. If it doesn't exist, selectCreate newto create it.
Application gateway name: EntermyAppGatewayfor the name of the application gateway.
Application gateway name: EntermyAppGatewayfor the name of the application gateway.

For Azure to communicate between the resources that you create, it needs a virtual network. You can either create a new virtual network or use an existing one. In this example, you'll create a new virtual network at the same time that you create the application gateway. Application Gateway instances are created in separate subnets. You create two subnets in this example: one for the application gateway, and another for the backend servers.UnderConfigure virtual network, create a new virtual network by selectingCreate new. In theCreate virtual networkwindow that opens, enter the following values to create the virtual network and two subnets:Name: EntermyVNetfor the name of the virtual network.Subnet name(Application Gateway subnet): TheSubnetsgrid will show a subnet namedDefault. Change the name of this subnet tomyAGSubnet.The application gateway subnet can contain only application gateways. No other resources are allowed.Subnet name(backend server subnet): In the second row of theSubnetsgrid, entermyBackendSubnetin theSubnet namecolumn.Address range(backend server subnet): In the second row of theSubnetsGrid, enter an address range that doesn't overlap with the address range ofmyAGSubnet. For example, if the address range ofmyAGSubnetis 10.0.0.0/24, enter10.0.1.0/24for the address range ofmyBackendSubnet.SelectOKto close theCreate virtual networkwindow and save the virtual network settings.
For Azure to communicate between the resources that you create, it needs a virtual network. You can either create a new virtual network or use an existing one. In this example, you'll create a new virtual network at the same time that you create the application gateway. Application Gateway instances are created in separate subnets. You create two subnets in this example: one for the application gateway, and another for the backend servers.
UnderConfigure virtual network, create a new virtual network by selectingCreate new. In theCreate virtual networkwindow that opens, enter the following values to create the virtual network and two subnets:
Name: EntermyVNetfor the name of the virtual network.
Name: EntermyVNetfor the name of the virtual network.
Subnet name(Application Gateway subnet): TheSubnetsgrid will show a subnet namedDefault. Change the name of this subnet tomyAGSubnet.The application gateway subnet can contain only application gateways. No other resources are allowed.
Subnet name(Application Gateway subnet): TheSubnetsgrid will show a subnet namedDefault. Change the name of this subnet tomyAGSubnet.The application gateway subnet can contain only application gateways. No other resources are allowed.
Subnet name(backend server subnet): In the second row of theSubnetsgrid, entermyBackendSubnetin theSubnet namecolumn.
Subnet name(backend server subnet): In the second row of theSubnetsgrid, entermyBackendSubnetin theSubnet namecolumn.
Address range(backend server subnet): In the second row of theSubnetsGrid, enter an address range that doesn't overlap with the address range ofmyAGSubnet. For example, if the address range ofmyAGSubnetis 10.0.0.0/24, enter10.0.1.0/24for the address range ofmyBackendSubnet.
Address range(backend server subnet): In the second row of theSubnetsGrid, enter an address range that doesn't overlap with the address range ofmyAGSubnet. For example, if the address range ofmyAGSubnetis 10.0.0.0/24, enter10.0.1.0/24for the address range ofmyBackendSubnet.
SelectOKto close theCreate virtual networkwindow and save the virtual network settings.

On theBasicstab, accept the default values for the other settings and then selectNext: Frontends.
On theBasicstab, accept the default values for the other settings and then selectNext: Frontends.
Frontends tab
On theFrontendstab, verifyFrontend IP address typeis set toPublic.You can configure the Frontend IP to be Public or Private as per your use case. In this example, you'll choose a Public Frontend IP.NoteFor the Application Gateway v2 SKU, you can only choosePublicfrontend IP configuration. Private frontend IP configuration is currently not enabled for this v2 SKU.
On theFrontendstab, verifyFrontend IP address typeis set toPublic.You can configure the Frontend IP to be Public or Private as per your use case. In this example, you'll choose a Public Frontend IP.
Note
For the Application Gateway v2 SKU, you can only choosePublicfrontend IP configuration. Private frontend IP configuration is currently not enabled for this v2 SKU.
ChooseAdd newfor thePublic IP addressand entermyAGPublicIPAddressfor the public IP address name, and then selectOK.
ChooseAdd newfor thePublic IP addressand entermyAGPublicIPAddressfor the public IP address name, and then selectOK.

SelectNext: Backends.
SelectNext: Backends.
Backends tab
The backend pool is used to route requests to the backend servers that serve the request. Backend pools can be composed of NICs, virtual machine scale sets, public IPs, internal IPs, fully qualified domain names (FQDN), and multitenant backends like Azure App Service. In this example, you'll create an empty backend pool with your application gateway and then add backend targets to the backend pool.
On theBackendstab, selectAdd a backend pool.
On theBackendstab, selectAdd a backend pool.
In theAdd a backend poolwindow that opens, enter the following values to create an empty backend pool:Name: EntermyBackendPoolfor the name of the backend pool.Add backend pool without targets: SelectYesto create a backend pool with no targets. You'll add backend targets after creating the application gateway.
In theAdd a backend poolwindow that opens, enter the following values to create an empty backend pool:
Name: EntermyBackendPoolfor the name of the backend pool.
Add backend pool without targets: SelectYesto create a backend pool with no targets. You'll add backend targets after creating the application gateway.
In theAdd a backend poolwindow, selectAddto save the backend pool configuration and return to theBackendstab.
In theAdd a backend poolwindow, selectAddto save the backend pool configuration and return to theBackendstab.

On theBackendstab, selectNext: Configuration.
On theBackendstab, selectNext: Configuration.
Configuration tab
On theConfigurationtab, you'll connect the frontend and backend pool you created using a routing rule.
SelectAdd a routing rulein theRouting rulescolumn.
SelectAdd a routing rulein theRouting rulescolumn.
In theAdd a routing rulewindow that opens, entermyRoutingRulefor theRule name.
In theAdd a routing rulewindow that opens, entermyRoutingRulefor theRule name.
A routing rule requires a listener. On theListenertab within theAdd a routing rulewindow, enter the following values for the listener:Listener name: EntermyListenerfor the name of the listener.Frontend IP: SelectPublicto choose the public IP you created for the frontend.Protocol: SelectHTTPS.Port: Verify 443 is entered for the port.UnderHTTPS Settings:Choose a certificate- SelectUpload a certificate.PFX certificate file- Browse to and select the c:\appgwcert.pfx file that you create earlier.Certificate name- Typemycert1for the name of the certificate.Password- Type the password you used to create the certificate.Accept the default values for the other settings on theListenertab, then select theBackend targetstab to configure the rest of the routing rule.
A routing rule requires a listener. On theListenertab within theAdd a routing rulewindow, enter the following values for the listener:
Listener name: EntermyListenerfor the name of the listener.
Frontend IP: SelectPublicto choose the public IP you created for the frontend.
Protocol: SelectHTTPS.
Port: Verify 443 is entered for the port.
UnderHTTPS Settings:
Choose a certificate- SelectUpload a certificate.
Choose a certificate- SelectUpload a certificate.
PFX certificate file- Browse to and select the c:\appgwcert.pfx file that you create earlier.
PFX certificate file- Browse to and select the c:\appgwcert.pfx file that you create earlier.
Certificate name- Typemycert1for the name of the certificate.
Certificate name- Typemycert1for the name of the certificate.
Password- Type the password you used to create the certificate.Accept the default values for the other settings on theListenertab, then select theBackend targetstab to configure the rest of the routing rule.
Password- Type the password you used to create the certificate.
Accept the default values for the other settings on theListenertab, then select theBackend targetstab to configure the rest of the routing rule.

On theBackend targetstab, selectmyBackendPoolfor theBackend target.
On theBackend targetstab, selectmyBackendPoolfor theBackend target.
For theHTTP setting, selectAdd newto create a new HTTP setting. The HTTP setting will determine the behavior of the routing rule. In theAdd a HTTP settingwindow that opens, entermyHTTPSettingfor theHTTP setting name. Accept the default values for the other settings in theAdd a HTTP settingwindow, then selectAddto return to theAdd a routing rulewindow.
For theHTTP setting, selectAdd newto create a new HTTP setting. The HTTP setting will determine the behavior of the routing rule. In theAdd a HTTP settingwindow that opens, entermyHTTPSettingfor theHTTP setting name. Accept the default values for the other settings in theAdd a HTTP settingwindow, then selectAddto return to theAdd a routing rulewindow.

On theAdd a routing rulewindow, selectAddto save the routing rule and return to theConfigurationtab.
On theAdd a routing rulewindow, selectAddto save the routing rule and return to theConfigurationtab.

SelectNext: Tagsand thenNext: Review + create.
SelectNext: Tagsand thenNext: Review + create.
Review + create tab
Review the settings on theReview + createtab, and then selectCreateto create the virtual network, the public IP address, and the application gateway. It may take several minutes for Azure to create the application gateway. Wait until the deployment finishes successfully before moving on to the next section.
Add backend targets
In this example, you'll use virtual machines as the target backend. You can either use existing virtual machines or create new ones. You'll create two virtual machines that Azure uses as backend servers for the application gateway.
To do this, you'll:
Create two new VMs,myVMandmyVM2, to be used as backend servers.
Install IIS on the virtual machines to verify that the application gateway was created successfully.
Add the backend servers to the backend pool.
Create a virtual machine
From the Azure portal menu, select+ Create a resource>Compute>Windows Server 2016 Datacenter, or search forWindows Serverin the portal search box and selectWindows Server 2016 Datacenter.
From the Azure portal menu, select+ Create a resource>Compute>Windows Server 2016 Datacenter, or search forWindows Serverin the portal search box and selectWindows Server 2016 Datacenter.
SelectCreate.Application Gateway can route traffic to any type of virtual machine used in its backend pool. In this example, you use a Windows Server 2016 Datacenter.
SelectCreate.
Application Gateway can route traffic to any type of virtual machine used in its backend pool. In this example, you use a Windows Server 2016 Datacenter.
Enter these values in theBasicstab for the following virtual machine settings:Resource group: SelectmyResourceGroupAGfor the resource group name.Virtual machine name: EntermyVMfor the name of the virtual machine.Username: Enter a name for the administrator user name.Password: Enter a password for the administrator account.
Enter these values in theBasicstab for the following virtual machine settings:
Resource group: SelectmyResourceGroupAGfor the resource group name.
Virtual machine name: EntermyVMfor the name of the virtual machine.
Username: Enter a name for the administrator user name.
Password: Enter a password for the administrator account.
Accept the other defaults and then selectNext: Disks.
Accept the other defaults and then selectNext: Disks.
Accept theDiskstab defaults and then selectNext: Networking.
Accept theDiskstab defaults and then selectNext: Networking.
On theNetworkingtab, verify thatmyVNetis selected for theVirtual networkand theSubnetis set tomyBackendSubnet. Accept the other defaults and then selectNext: Management.Application Gateway can communicate with instances outside of the virtual network that it is in, but you need to ensure there's IP connectivity.
On theNetworkingtab, verify thatmyVNetis selected for theVirtual networkand theSubnetis set tomyBackendSubnet. Accept the other defaults and then selectNext: Management.
Application Gateway can communicate with instances outside of the virtual network that it is in, but you need to ensure there's IP connectivity.
On theManagementtab, setBoot diagnosticstoDisable. Accept the other defaults and then selectReview + create.
On theManagementtab, setBoot diagnosticstoDisable. Accept the other defaults and then selectReview + create.
On theReview + createtab, review the settings, correct any validation errors, and then selectCreate.
On theReview + createtab, review the settings, correct any validation errors, and then selectCreate.
Wait for the deployment to complete before continuing.
Wait for the deployment to complete before continuing.
Install IIS for testing
In this example, you install IIS on the virtual machines only to verify Azure created the application gateway successfully.
OpenAzure PowerShell. To do so, selectCloud Shellfrom the top navigation bar of the Azure portal and then selectPowerShellfrom the drop-down list.
OpenAzure PowerShell. To do so, selectCloud Shellfrom the top navigation bar of the Azure portal and then selectPowerShellfrom the drop-down list.

Change the location setting for your environment, and then run the following command to install IIS on the virtual machine:Set-AzVMExtension `
         -ResourceGroupName myResourceGroupAG `
         -ExtensionName IIS `
         -VMName myVM `
         -Publisher Microsoft.Compute `
         -ExtensionType CustomScriptExtension `
         -TypeHandlerVersion 1.4 `
         -SettingString '{"commandToExecute":"powershell Add-WindowsFeature Web-Server; powershell Add-Content -Path \"C:\\inetpub\\wwwroot\\Default.htm\" -Value $($env:computername)"}' `
         -Location <location>
Change the location setting for your environment, and then run the following command to install IIS on the virtual machine:
Set-AzVMExtension `
         -ResourceGroupName myResourceGroupAG `
         -ExtensionName IIS `
         -VMName myVM `
         -Publisher Microsoft.Compute `
         -ExtensionType CustomScriptExtension `
         -TypeHandlerVersion 1.4 `
         -SettingString '{"commandToExecute":"powershell Add-WindowsFeature Web-Server; powershell Add-Content -Path \"C:\\inetpub\\wwwroot\\Default.htm\" -Value $($env:computername)"}' `
         -Location <location>
Set-AzVMExtension `
         -ResourceGroupName myResourceGroupAG `
         -ExtensionName IIS `
         -VMName myVM `
         -Publisher Microsoft.Compute `
         -ExtensionType CustomScriptExtension `
         -TypeHandlerVersion 1.4 `
         -SettingString '{"commandToExecute":"powershell Add-WindowsFeature Web-Server; powershell Add-Content -Path \"C:\\inetpub\\wwwroot\\Default.htm\" -Value $($env:computername)"}' `
         -Location <location>
Create a second virtual machine and install IIS by using the steps that you previously completed. UsemyVM2for the virtual machine name and for theVMNamesetting of theSet-AzVMExtensioncmdlet.
Create a second virtual machine and install IIS by using the steps that you previously completed. UsemyVM2for the virtual machine name and for theVMNamesetting of theSet-AzVMExtensioncmdlet.
Add backend servers to backend pool
SelectAll resources, and then selectmyAppGateway.
SelectAll resources, and then selectmyAppGateway.
SelectBackend poolsfrom the left menu.
SelectBackend poolsfrom the left menu.
SelectmyBackendPool.
SelectmyBackendPool.
UnderTarget type, selectVirtual machinefrom the drop-down list.
UnderTarget type, selectVirtual machinefrom the drop-down list.
UnderTarget, select the network interface undermyVMfrom the drop-down list.
UnderTarget, select the network interface undermyVMfrom the drop-down list.
Repeat to add the network interface formyVM2.
Repeat to add the network interface formyVM2.

SelectSave.
SelectSave.
Wait for the deployment to complete before proceeding to the next step.
Wait for the deployment to complete before proceeding to the next step.
Test the application gateway
SelectAll resources, and then selectmyAGPublicIPAddress.
SelectAll resources, and then selectmyAGPublicIPAddress.

In the address bar of your browser, typehttps://<your application gateway ip address>.To accept the security warning if you used a self-signed certificate, selectDetails(orAdvancedon Chrome) and then go on to the webpage:Your secured IIS website is then displayed as in the following example:
In the address bar of your browser, typehttps://<your application gateway ip address>.
To accept the security warning if you used a self-signed certificate, selectDetails(orAdvancedon Chrome) and then go on to the webpage:

Your secured IIS website is then displayed as in the following example:

Clean up resources
When no longer needed, delete the resource group and all related resources. To do so, select the resource group and selectDelete resource group.
Next steps
In this tutorial, you:
Created a self-signed certificate
Created an application gateway with the certificate
To learn more about Application Gateway TLS support, seeend to end TLS with Application GatewayandApplication Gateway TLS policy.
To learn how to create and configure an Application Gateway to host multiple web sites using the Azure portal, advance to the next tutorial.
Host multiple sites
Feedback
Was this page helpful?
Additional resources