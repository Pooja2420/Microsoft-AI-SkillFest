Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Supported Kubernetes versions in Azure Kubernetes Service (AKS)
Article
2025-01-14
45 contributors
In this article
The Kubernetes communityreleases minor versionsroughly every four months.
Minor version releases include new features and improvements. Patch releases are more frequent (sometimes weekly) and are intended for critical bug fixes within a minor version. Patch releases include fixes for security vulnerabilities or major bugs.
Kubernetes versions
Kubernetes uses the standardSemantic Versioningversioning scheme for each version:
[major].[minor].[patch]

Examples:
  1.29.2
  1.29.1
[major].[minor].[patch]

Examples:
  1.29.2
  1.29.1
Each number in the version indicates general compatibility with the previous version:
Major versionschange when incompatible API updates or backwards compatibility might be broken.
Minor versionschange when functionality updates are made that are backwards compatible to the other minor releases.
Patch versionschange when backwards-compatible bug fixes are made.
Aim to run the latest patch release of the minor version you're running. For example, if your production cluster is on1.29.1and1.29.2is the latest available patch version available for the1.29minor version, you should upgrade to1.29.2as soon as possible to ensure your cluster is fully patched and supported.
1.29.1
1.29.2
1.29.2
AKS Kubernetes release calendar
View the upcoming version releases on the AKS Kubernetes release calendar. To see real-time updates of region release status and version release notes, visit theAKS release status webpage. To learn more about the release status webpage, seeAKS release tracker.
Note
AKS follows 12 months of support for a generally available (GA) Kubernetes version. To read more about our support policy for Kubernetes versioning, read ourFAQ.
For the past release history, seeKubernetes history.
LTS Versions
Note
Azure Linux supports 1.27 LTS only. For more information on 1.30 LTS with Azure Linux, read theAzure Linux AKS LTS Releasessection.
AKS Kubernetes release schedule Gantt chart
If you prefer to see this information visually, here's a Gantt chart with all the current releases displayed:

AKS components breaking changes by version
Note the following important changes before you upgrade to any of the available minor versions:
Kubernetes 1.32
Kubernetes 1.31
Kubernetes 1.30
Kubernetes 1.29
Alias minor version
Note
Alias minor version requires Azure CLI version 2.37 or above and API version 20220401 or above. Useaz upgradeto install the latest version of the CLI.
az upgrade
AKS allows you to create a cluster without specifying the exact patch version. When you create a cluster without designating a patch, the cluster runs the minor version's latest GA patch. For example, if you create a cluster with1.29and1.29.2is the latest GA would patch available, your cluster will be created with1.29.2. If you want to upgrade your patch version in the same minor version, please useautoupgrade.
1.29
1.29.2
1.29.2
To see what patch you're on, run theaz aks show --resource-group myResourceGroup --name myAKSClustercommand. ThecurrentKubernetesVersionproperty shows the whole Kubernetes version.
az aks show --resource-group myResourceGroup --name myAKSCluster
currentKubernetesVersion
{
 "apiServerAccessProfile": null,
  "autoScalerProfile": null,
  "autoUpgradeProfile": null,
  "azurePortalFqdn": "myaksclust-myresourcegroup.portal.hcp.eastus.azmk8s.io",
  "currentKubernetesVersion": "1.29.2",
}
{
 "apiServerAccessProfile": null,
  "autoScalerProfile": null,
  "autoUpgradeProfile": null,
  "azurePortalFqdn": "myaksclust-myresourcegroup.portal.hcp.eastus.azmk8s.io",
  "currentKubernetesVersion": "1.29.2",
}
Kubernetes version support policy
AKS defines a generally available (GA) version as a version available in all regions and enabled in all SLO or SLA measurements. AKS supports three GA minor versions of Kubernetes:
The latest GA minor version released in AKS (which we refer to asN).
Two previous minor versions.Each supported minor version can support any number of patches at a given time. AKS reserves the right to deprecate patches if a critical CVE or security vulnerability is detected. For awareness on patch availability and any ad-hoc deprecation, refer to version release notes and visit theAKS release status webpage.
Each supported minor version can support any number of patches at a given time. AKS reserves the right to deprecate patches if a critical CVE or security vulnerability is detected. For awareness on patch availability and any ad-hoc deprecation, refer to version release notes and visit theAKS release status webpage.
AKS might also support preview versions, which are explicitly labeled and subject topreview terms and conditions.
AKS provides platform support only for one GA minor version of Kubernetes after the regular supported versions. The platform support window of Kubernetes versions on AKS is known as "N-3". For more information, seeplatform support policy.
Note
AKS uses safe deployment practices which involve gradual region deployment. This means it might take up to 10 business days for a new release or a new version to be available in all regions.
The supported window of Kubernetes minor versions on AKS is known as "N-2", where N refers to the latest release, meaning that two previous minor releases are also supported.
For example, on the day that AKS introduces version 1.29, support is provided for the following versions:
When a new minor version is introduced, the oldest minor version is deprecated and removed. For example, let's say the current supported minor version list is:
1.29
1.28
1.27
1.29
1.28
1.27
When AKS releases 1.30, all the 1.27 versions go out of support 30 days later.
AKS may support any number ofpatchesbased on upstream community release availability for a given minor version. AKS reserves the right to deprecate any of these patches at any given time due to a CVE or potential bug concern. You're always encouraged to use the latest patch for a minor version.
Platform support policy
Platform support policy is a reduced support plan for certain unsupported Kubernetes versions. During platform support, customers only receive support from Microsoft for AKS/Azure platform related issues. Any issues related to Kubernetes functionality and components aren't supported.
Platform support policy applies to clusters in an n-3 version (where n is the latest supported AKS GA minor version), before the cluster drops to n-4. For example, Kubernetes v1.26 is considered platform support when v1.29 is the latest GA version. However, during the v1.30-GA release, v1.26 shall autoupgrade to v1.27. If you're a running an n-2 version, the moment it becomes n-3 it also becomes deprecated, and you enter into the platform support policy.
AKS relies on the releases and patches fromKubernetes, which is an Open Source project that only supports a sliding window of three minor versions. AKS can only guaranteefull supportwhile those versions are being serviced upstream. Since there's no more patches being produced upstream, AKS can either leave those versions unpatched or fork. Due to this limitation, platform support doesn't support anything from relying on Kubernetes upstream.
This table outlines support guidelines for Community Support compared to Platform support.
Note
The table is subject to change and outlines common support scenarios. Any scenarios related to Kubernetes functionality and components aren't supported for N-3. For further support, seeSupport and troubleshooting for AKS.
Supportedkubectlversions
kubectl
You can use one minor version older or newer ofkubectlrelative to yourkube-apiserverversion, consistent with theKubernetes support policy for kubectl.
kubectl
For example, if yourkube-apiserveris at1.28, then you can use versions1.27to1.29ofkubectlwith thatkube-apiserver.
kubectl
To install or updatekubectlto the latest version, run:
kubectl
Azure CLI
Azure PowerShell
az aks install-cli
az aks install-cli
Install-AzAksKubectl -Version latest
Install-AzAksKubectl -Version latest
Long Term Support (LTS)
AKS provides one year Community Support and one year of Long Term Support (LTS) to back port security fixes from the community upstream in our public repository. Our upstream LTS working group contributes efforts back to the community to provide our customers with a longer support window.
For more information on LTS, seeLong term support for Azure Kubernetes Service (AKS).
Release and deprecation process
You can reference upcoming version releases and deprecations on theAKS Kubernetes release calendar.
For newminorversions of Kubernetes:
AKS announces the planned release date of a new version and the deprecation of the old version in theAKS Release notesat least 30 days before removal.
AKS usesAzure Advisorto alert you if a new version could cause issues in your cluster because of deprecated APIs. Azure Advisor also alerts you if you're out of support
AKS publishes aservice health notificationavailable to all users with AKS and portal access and sends an email to the subscription administrators with the planned version removal dates.NoteTo find out who is your subscription administrators or to change it, please refer tomanage Azure subscriptions.
Note
To find out who is your subscription administrators or to change it, please refer tomanage Azure subscriptions.
You have30 daysfrom version removal to upgrade to a supported minor version release to continue receiving support.
For newpatchversions of Kubernetes:
Because of the urgent nature of patch versions, they can be introduced into the service as they become available. Once available, patches have a two month minimum lifecycle.
In general, AKS doesn't broadly communicate the release of new patch versions. However, AKS constantly monitors and validates available CVE patches to support them in AKS in a timely manner. If a critical patch is found or user action is required, AKS notifies you to upgrade to the newly available patch.
You have30 daysfrom a patch release's removal from AKS to upgrade into a supported patch and continue receiving support. However, you'llno longer be able to create clusters or node pools once the version is deprecated/removed.
Supported versions policy exceptions
AKS reserves the right to add or remove new/existing versions with one or more critical production-impacting bugs or security issues without advance notice.
Specific patch releases might be skipped or rollout accelerated, depending on the severity of the bug or security issue.
Azure portal and CLI versions
If you deploy an AKS cluster with Azure portal, Azure CLI, Azure PowerShell, the cluster defaults to the N-1 minor version and latest patch. For example, if AKS supports1.29.2,1.29.1,1.28.7,1.28.6,1.27.11, and1.27.10, the default version selected is1.28.7.
Azure CLI
Azure PowerShell
To find out what versions are currently available for your subscription and region, use theaz aks get-versionscommand. The following example lists the available Kubernetes versions for theEastUSregion:
az aks get-versions
az aks get-versions --location eastus --output table
az aks get-versions --location eastus --output table
To find out what versions are currently available for your subscription and region, use theGet-AzAksVersioncmdlet. The following example lists available Kubernetes versions for theEastUSregion:
Get-AzAksVersion -Location eastus
Get-AzAksVersion -Location eastus
FAQ
How does Microsoft notify me of new Kubernetes versions?
The AKS team announces new Kubernetes version release dates in our documentation, onGitHub, and via email to subscription administrators with clusters nearing end of support. AKS also usesAzure Advisorto alert you inside the Azure portal if you're out of support and inform you of deprecated APIs that can affect your application or development process.
How often should I expect to upgrade Kubernetes versions to stay in support?
Starting with Kubernetes 1.19, theopen source community expanded support to one year. AKS commits to enabling patches and support matching the upstream commitments. For AKS clusters on 1.19 and greater, you can upgrade at a minimum of once a year to stay on a supported version.
What happens when you upgrade a Kubernetes cluster with a minor version that isn't supported?
If you're on then-3version or older, it means you're outside of support and need to upgrade. If your upgrade from version n-3 to n-2 succeeds, you're back within our support policies. For example:
If the oldest supported AKS minor version is1.27and you're on1.26or older, you're outside of support.
If you successfully upgrade from1.26to1.27or higher, you're back within our support policies.
Downgrades aren't supported.
What does 'Outside of Support' mean?
'Outside of Support' means that:
The version you're running is outside of the supported versions list.
You'll be asked to upgrade the cluster to a supported version when requesting support, unless you're within the 30-day grace period after version deprecation.
Additionally, AKS doesn't make any runtime or other guarantees for clusters outside of the supported versions list.
What happens when you scale a Kubernetes cluster with a minor version that isn't supported?
For minor versions not supported by AKS, scaling in or out should continue to work. Since there are no guarantees with quality of service, we recommend upgrading to bring your cluster back into support.
Can you stay on a Kubernetes version forever?
If a cluster is out of support for more than three minor versions and carries security risks, Azure will proactively contact you. They will advise you to upgrade your cluster. If you don't take further action, Azure reserves the right to automatically upgrade your cluster on your behalf.
What happens if you scale a Kubernetes cluster with a minor version that isn't supported?
For minor versions not supported by AKS, scaling in or out should continue to work. Since there are no guarantees with quality of service, we recommend upgrading to bring your cluster back into support.
What version does the control plane support if the node pool isn't in one of the supported AKS versions?
The control plane must be within a window of versions from all node pools. For details on upgrading the control plane or node pools, visit documentation onupgrading node pools.
What is the allowed difference in versions between control plane and node pool?
Theversion skew policynow allows a difference of upto 3 versions between control plane and agent pools. AKS follows this skew version policy change starting from version 1.28 onwards.
Can I skip multiple AKS versions during cluster upgrade?
If you upgrade a supported AKS cluster, Kubernetes minor versions can't be skipped. Kubernetes control planesversion skew policydoesn't support minor version skipping. For example, upgrades between:
1.28.x->1.29.x: allowed.
1.27.x->1.28.x: allowed.
1.27.x->1.29.x: not allowed.
For control plane version upgrades, you can go upto 3 minor versions for community supported versions in sequential fashion.
To upgrade from1.27.x->1.29.x:
Upgrade from1.27.x->1.28.x.
Upgrade from1.28.x->1.29.x.
Note starting from 1.28 version onwards, agentpool versions can be upto 3 versions older to control plane versions perversion skew policy. If your version is much behind the minimum supported version, you may have to do more than one control plane upgrade operation to get to the minimum supported version. For example, if your current control plane version is1.23.xand you intend to upgrade to a minimum supported version of1.27.xas an example. You may have to upgrade sequentially 4 times from1.23.xin order to get to1.27.x. Also note that Agent pool versions can be upgraded to the control plane minor version. In the above example you can upgrade agentpool version twice i.e once from1.23.xto1.25.x, when the control plane version is at1.25.x. And subsequently from1.25.xto1.27.x, when control plane version is at1.27.x. When upgrading in-place i.e control plane and agent pool together the same rules applicable to control plane upgrade applies.
If, performing an upgrade from anunsupported version- the upgrade is performed without any guarantee of functionality and is excluded from the service-level agreements and limited warranty. Clusters runningunsupported versionhas the flexibility of decoupling control plane upgrades with node pool upgrades. However if your version is out of date, we recommend that you re-create the cluster.
Can I create a new 1.xx.x cluster during the platform support window?
No, Creation of new clusters is not possible during Platform Support period.
I'm on a freshly deprecated version that is out of platform support, can I still add new node pools? Or should I upgrade?
Yes, you can add agent pools as long as they're compatible with the control plane version.
Next steps
For information on how to upgrade your cluster, see:
Upgrade an Azure Kubernetes Service (AKS) cluster
Upgrade multiple AKS clusters via Azure Kubernetes Fleet Manager
Azure Kubernetes Service

Additional resources