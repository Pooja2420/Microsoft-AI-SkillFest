Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Use a Microsoft Sentinel playbook to stop potentially compromised users
Article
2024-05-31
1 contributor
Applies to: Microsoft Sentinel in the Microsoft Defender portal, Microsoft Sentinel in the Azure portal
In this article
This article describes a sample scenario of how you can use a playbook and automation rule to automate incident response and remediate security threats. Automation rules help you triage incidents in Microsoft Sentinel, and are also used to run playbooks in response to incidents or alerts. For more information, seeAutomation in Microsoft Sentinel: Security orchestration, automation, and response (SOAR).
The sample scenario described in this article describes how to use an automation rule and playbook to stop a potentially compromised user when an incident is created.
Note
Because playbooks make use of Azure Logic Apps, additional charges may apply. Visit theAzure Logic Appspricing page for more details.
Important
Microsoft Sentinel is generally available within Microsoft's unified security operations platform in the Microsoft Defender portal, including for customers without Microsoft Defender XDR or an E5 license. For more information, seeMicrosoft Sentinel in the Microsoft Defender portal.
Prerequisites
The following roles are required to use Azure Logic Apps to create and run playbooks in Microsoft Sentinel.
The following table describes required roles based on whether you select a Consumption or Standard logic app to create your playbook:
TheActive playbookstab on theAutomationpage displays all active playbooks available across any selected subscriptions. By default, a playbook can be used only within the subscription to which it belongs, unless you specifically grant Microsoft Sentinel permissions to the playbook's resource group.
Extra permissions required to run playbooks on incidents
Microsoft Sentinel uses a service account to run playbooks on incidents, to add security and enable the automation rules API to support CI/CD use cases. This service account is used for incident-triggered playbooks, or when you run a playbook manually on a specific incident.
In addition to your own roles and permissions, this Microsoft Sentinel service account must have its own set of permissions on the resource group where the playbook resides, in the form of theMicrosoft Sentinel Automation Contributorrole. Once Microsoft Sentinel has this role, it can run any playbook in the relevant resource group, manually or from an automation rule.
To grant Microsoft Sentinel with the required permissions, you must have anOwnerorUser access administratorrole. To run the playbooks, you'll also need theLogic App Contributorrole on the resource group that contains the playbooks you want to run.
Stop potentially compromised users
SOC teams want to make sure that potentially compromised users can't move around their network and steal information. We recommend that you create an automated, multifaceted response to incidents generated by rules that detect compromised users to handle such scenarios.
Configure your automation rule and playbook to use the following flow:
An incident is created for a potentially compromised user and an automation rule is triggered to call your playbook.
An incident is created for a potentially compromised user and an automation rule is triggered to call your playbook.
The playbook opens a ticket in your IT ticketing system, such as ServiceNow.
The playbook opens a ticket in your IT ticketing system, such as ServiceNow.
The playbook also sends a message to your security operations channel in Microsoft Teams or Slack to make sure your security analysts are aware of the incident.
The playbook also sends a message to your security operations channel in Microsoft Teams or Slack to make sure your security analysts are aware of the incident.
The playbook also sends all the information in the incident in an email message to your senior network admin and security admin. The email message includesBlockandIgnoreuser option buttons.
The playbook also sends all the information in the incident in an email message to your senior network admin and security admin. The email message includesBlockandIgnoreuser option buttons.
The playbook waits until a response is received from the admins, then continues with its next steps.If the admins chooseBlock, the playbook sends a command to Microsoft Entra ID to disable the user, and one to the firewall to block the IP address.If the admins chooseIgnore, the playbook closes the incident in Microsoft Sentinel, and the ticket in ServiceNow.
The playbook waits until a response is received from the admins, then continues with its next steps.
If the admins chooseBlock, the playbook sends a command to Microsoft Entra ID to disable the user, and one to the firewall to block the IP address.
If the admins chooseBlock, the playbook sends a command to Microsoft Entra ID to disable the user, and one to the firewall to block the IP address.
If the admins chooseIgnore, the playbook closes the incident in Microsoft Sentinel, and the ticket in ServiceNow.
If the admins chooseIgnore, the playbook closes the incident in Microsoft Sentinel, and the ticket in ServiceNow.
The following screenshot shows the actions and conditions you would add in creating this sample playbook:

Related content
Automate threat response with playbooks in Microsoft Sentinel
Create and manage Microsoft Sentinel playbooks
Use a Microsoft Sentinel playbook to stop potentially compromised users
Feedback
Was this page helpful?
Additional resources