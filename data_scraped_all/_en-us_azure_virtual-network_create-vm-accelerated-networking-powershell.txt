Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Create an Azure Virtual Machine with Accelerated Networking
Article
2025-02-05
2 contributors
In this article

This article describes how to create a Linux or Windows virtual machine (VM) with Accelerated Networking (AccelNet) enabled by using the Azure CLI command-line interface.
Prerequisites
Portal
PowerShell
CLI
An Azure account with an active subscription. You cancreate an account for free.
An Azure account with an active subscription. You cancreate an account for free.
Azure Cloud Shell
Azure hosts Azure Cloud Shell, an interactive shell environment that you can use through your browser. You can use either Bash or PowerShell with Cloud Shell to work with Azure services. You can use the Cloud Shell preinstalled commands to run the code in this article, without having to install anything on your local environment.
To start Azure Cloud Shell:
To use Azure Cloud Shell:
Start Cloud Shell.
Start Cloud Shell.
Select theCopybutton on a code block (or command block) to copy the code or command.
Select theCopybutton on a code block (or command block) to copy the code or command.
Paste the code or command into the Cloud Shell session by selectingCtrl+Shift+Von Windows and Linux, or by selectingCmd+Shift+Von macOS.
Paste the code or command into the Cloud Shell session by selectingCtrl+Shift+Von Windows and Linux, or by selectingCmd+Shift+Von macOS.
SelectEnterto run the code or command.
SelectEnterto run the code or command.
If you choose to install and use PowerShell locally, this article requires the Azure PowerShell module version 1.0.0 or later. RunGet-Module -ListAvailable Azto find the installed version. If you need to upgrade, seeInstall Azure PowerShell module. If you're running PowerShell locally, you also need to runConnect-AzAccountto create a connection with Azure.
Get-Module -ListAvailable Az
Connect-AzAccount
If you don't have anAzure subscription, create anAzure free accountbefore you begin.
Use the Bash environment inAzure Cloud Shell. For more information, seeGet started with Azure Cloud Shell.
Use the Bash environment inAzure Cloud Shell. For more information, seeGet started with Azure Cloud Shell.

If you prefer to run CLI reference commands locally,installthe Azure CLI. If you're running on Windows or macOS, consider running Azure CLI in a Docker container. For more information, seeHow to run the Azure CLI in a Docker container.If you're using a local installation, sign in to the Azure CLI by using theaz logincommand. To finish the authentication process, follow the steps displayed in your terminal. For other sign-in options, seeAuthenticate to Azure using Azure CLI.When you're prompted, install the Azure CLI extension on first use. For more information about extensions, seeUse and manage extensions with the Azure CLI.Runaz versionto find the version and dependent libraries that are installed. To upgrade to the latest version, runaz upgrade.
If you prefer to run CLI reference commands locally,installthe Azure CLI. If you're running on Windows or macOS, consider running Azure CLI in a Docker container. For more information, seeHow to run the Azure CLI in a Docker container.
If you're using a local installation, sign in to the Azure CLI by using theaz logincommand. To finish the authentication process, follow the steps displayed in your terminal. For other sign-in options, seeAuthenticate to Azure using Azure CLI.
If you're using a local installation, sign in to the Azure CLI by using theaz logincommand. To finish the authentication process, follow the steps displayed in your terminal. For other sign-in options, seeAuthenticate to Azure using Azure CLI.
When you're prompted, install the Azure CLI extension on first use. For more information about extensions, seeUse and manage extensions with the Azure CLI.
When you're prompted, install the Azure CLI extension on first use. For more information about extensions, seeUse and manage extensions with the Azure CLI.
Runaz versionto find the version and dependent libraries that are installed. To upgrade to the latest version, runaz upgrade.
Runaz versionto find the version and dependent libraries that are installed. To upgrade to the latest version, runaz upgrade.
This article requires version 2.0.28 or later of the Azure CLI. If using Azure Cloud Shell, the latest version is already installed.
Create a virtual network
Portal
PowerShell
CLI
Create a virtual network and an Azure Bastion host
The following procedure creates a virtual network with a resource subnet, an Azure Bastion subnet, and a Bastion host:
In the portal, search for and selectVirtual networks.
In the portal, search for and selectVirtual networks.
On theVirtual networkspage, select+ Create.
On theVirtual networkspage, select+ Create.
On theBasicstab ofCreate virtual network, enter, or select the following information:SettingValueProject detailsSubscriptionSelect your subscription.Resource groupSelectCreate new.Entertest-rgfor the name.SelectOK.Instance detailsNameEntervnet-1.RegionSelectEast US 2.
On theBasicstab ofCreate virtual network, enter, or select the following information:

SelectNextto proceed to theSecuritytab.
SelectNextto proceed to theSecuritytab.
In theAzure Bastionsection, selectEnable Azure Bastion.Bastion uses your browser to connect to VMs in your virtual network over Secure Shell (SSH) or Remote Desktop Protocol (RDP) by using their private IP addresses. The VMs don't need public IP addresses, client software, or special configuration. For more information, seeWhat is Azure Bastion?.NoteHourly pricing starts from the moment that Bastion is deployed, regardless of outbound data usage. For more information, seePricingandSKUs. If you're deploying Bastion as part of a tutorial or test, we recommend that you delete this resource after you finish using it.
In theAzure Bastionsection, selectEnable Azure Bastion.
Bastion uses your browser to connect to VMs in your virtual network over Secure Shell (SSH) or Remote Desktop Protocol (RDP) by using their private IP addresses. The VMs don't need public IP addresses, client software, or special configuration. For more information, seeWhat is Azure Bastion?.
Note
Hourly pricing starts from the moment that Bastion is deployed, regardless of outbound data usage. For more information, seePricingandSKUs. If you're deploying Bastion as part of a tutorial or test, we recommend that you delete this resource after you finish using it.
InAzure Bastion, enter or select the following information:SettingValueAzure Bastion host nameEnterbastion.Azure Bastion public IP addressSelectCreate a public IP address.Enterpublic-ip-bastionin Name.SelectOK.
InAzure Bastion, enter or select the following information:

SelectNextto proceed to theIP Addressestab.
SelectNextto proceed to theIP Addressestab.
In the address space box inSubnets, select thedefaultsubnet.
In the address space box inSubnets, select thedefaultsubnet.
InEdit subnet, enter or select the following information:SettingValueSubnet purposeLeave the default ofDefault.NameEntersubnet-1.IPv4IPv4 address rangeLeave the default of10.0.0.0/16.Starting addressLeave the default of10.0.0.0.SizeLeave the default of/24 (256 addresses).
InEdit subnet, enter or select the following information:

SelectSave.
SelectSave.
SelectReview + createat the bottom of the window. When validation passes, selectCreate.
SelectReview + createat the bottom of the window. When validation passes, selectCreate.
Before creating a virtual network, you have to create a resource group for the virtual network, and all other resources created in this article. Create a resource group withNew-AzResourceGroup. The following example creates a resource group namedtest-rgin theeastuslocation.
$resourceGroup = @{
    Name = "test-rg"
    Location = "EastUS2"
}
New-AzResourceGroup @resourceGroup
$resourceGroup = @{
    Name = "test-rg"
    Location = "EastUS2"
}
New-AzResourceGroup @resourceGroup
Create a virtual network withNew-AzVirtualNetwork. The following example creates a virtual network namedvnet-1with the address prefix10.0.0.0/16.
$vnet1 = @{
    ResourceGroupName = "test-rg"
    Location = "EastUS2"
    Name = "vnet-1"
    AddressPrefix = "10.0.0.0/16"
}
$virtualNetwork1 = New-AzVirtualNetwork @vnet1
$vnet1 = @{
    ResourceGroupName = "test-rg"
    Location = "EastUS2"
    Name = "vnet-1"
    AddressPrefix = "10.0.0.0/16"
}
$virtualNetwork1 = New-AzVirtualNetwork @vnet1
Create a subnet configuration withAdd-AzVirtualNetworkSubnetConfig. The following example creates a subnet configuration with a10.0.0.0/24address prefix:
$subConfig = @{
    Name = "subnet-1"
    AddressPrefix = "10.0.0.0/24"
    VirtualNetwork = $virtualNetwork1
}
$subnetConfig1 = Add-AzVirtualNetworkSubnetConfig @subConfig
$subConfig = @{
    Name = "subnet-1"
    AddressPrefix = "10.0.0.0/24"
    VirtualNetwork = $virtualNetwork1
}
$subnetConfig1 = Add-AzVirtualNetworkSubnetConfig @subConfig
Create a subnet configuration for Azure Bastion withAdd-AzVirtualNetworkSubnetConfig. The following example creates a subnet configuration with a10.0.1.0/24address prefix:
$subBConfig = @{
    Name = "AzureBastionSubnet"
    AddressPrefix = "10.0.1.0/24"
    VirtualNetwork = $virtualNetwork1
}
$subnetConfig2 = Add-AzVirtualNetworkSubnetConfig @subBConfig
$subBConfig = @{
    Name = "AzureBastionSubnet"
    AddressPrefix = "10.0.1.0/24"
    VirtualNetwork = $virtualNetwork1
}
$subnetConfig2 = Add-AzVirtualNetworkSubnetConfig @subBConfig
Write the subnet configuration to the virtual network withSet-AzVirtualNetwork, which creates the subnet:
$virtualNetwork1 | Set-AzVirtualNetwork
$virtualNetwork1 | Set-AzVirtualNetwork
Create Azure Bastion
Create a public IP address for the Azure Bastion host withNew-AzPublicIpAddress. The following example creates a public IP address namedpublic-ip-bastionin thevnet-1virtual network.
$publicIpParams = @{
    ResourceGroupName = "test-rg"
    Name = "public-ip-bastion"
    Location = "EastUS2"
    AllocationMethod = "Static"
    Sku = "Standard"
}
New-AzPublicIpAddress @publicIpParams
$publicIpParams = @{
    ResourceGroupName = "test-rg"
    Name = "public-ip-bastion"
    Location = "EastUS2"
    AllocationMethod = "Static"
    Sku = "Standard"
}
New-AzPublicIpAddress @publicIpParams
Create an Azure Bastion host withNew-AzBastion. The following example creates an Azure Bastion host namedbastionin theAzureBastionSubnetsubnet of thevnet-1virtual network. Azure Bastion is used to securely connect Azure virtual machines without exposing them to the public internet.
$bastionParams = @{
    ResourceGroupName = "test-rg"
    Name = "bastion"
    VirtualNetworkName = "vnet-1"
    PublicIpAddressName = "public-ip-bastion"
    PublicIpAddressRgName = "test-rg"
    VirtualNetworkRgName = "test-rg"
}
New-AzBastion @bastionParams -AsJob
$bastionParams = @{
    ResourceGroupName = "test-rg"
    Name = "bastion"
    VirtualNetworkName = "vnet-1"
    PublicIpAddressName = "public-ip-bastion"
    PublicIpAddressRgName = "test-rg"
    VirtualNetworkRgName = "test-rg"
}
New-AzBastion @bastionParams -AsJob
Useaz group createto create a resource group that contains the resources. Be sure to select a supported Windows or Linux region as listed inWindows and Linux Accelerated Networking.export RANDOM_SUFFIX=$(openssl rand -hex 3)
export RESOURCE_GROUP_NAME="test-rg$RANDOM_SUFFIX"
export REGION="eastus2"

az group create \
    --name $RESOURCE_GROUP_NAME \
    --location $REGIONResults:{
  "id": "/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/test-rg69e367",
  "location": "eastus2",
  "managedBy": null,
  "name": "test-rg69e367",
  "properties": {
    "provisioningState": "Succeeded"
  },
  "tags": null,
  "type": "Microsoft.Resources/resourceGroups"
}
Useaz group createto create a resource group that contains the resources. Be sure to select a supported Windows or Linux region as listed inWindows and Linux Accelerated Networking.
export RANDOM_SUFFIX=$(openssl rand -hex 3)
export RESOURCE_GROUP_NAME="test-rg$RANDOM_SUFFIX"
export REGION="eastus2"

az group create \
    --name $RESOURCE_GROUP_NAME \
    --location $REGION
export RANDOM_SUFFIX=$(openssl rand -hex 3)
export RESOURCE_GROUP_NAME="test-rg$RANDOM_SUFFIX"
export REGION="eastus2"

az group create \
    --name $RESOURCE_GROUP_NAME \
    --location $REGION
Results:
{
  "id": "/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/test-rg69e367",
  "location": "eastus2",
  "managedBy": null,
  "name": "test-rg69e367",
  "properties": {
    "provisioningState": "Succeeded"
  },
  "tags": null,
  "type": "Microsoft.Resources/resourceGroups"
}
{
  "id": "/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/test-rg69e367",
  "location": "eastus2",
  "managedBy": null,
  "name": "test-rg69e367",
  "properties": {
    "provisioningState": "Succeeded"
  },
  "tags": null,
  "type": "Microsoft.Resources/resourceGroups"
}
Useaz network vnet createto create a virtual network with one subnet in the resource group:export RESOURCE_GROUP_NAME="test-rg$RANDOM_SUFFIX"
 export VNET_NAME="vnet-1$RANDOM_SUFFIX"
 export SUBNET_NAME="subnet-1$RANDOM_SUFFIX"
 export VNET_ADDRESS_PREFIX="10.0.0.0/16"
 export SUBNET_ADDRESS_PREFIX="10.0.0.0/24"

 az network vnet create \
     --resource-group $RESOURCE_GROUP_NAME \
     --name $VNET_NAME \
     --address-prefix $VNET_ADDRESS_PREFIX \
     --subnet-name $SUBNET_NAME \
     --subnet-prefix $SUBNET_ADDRESS_PREFIXResults:{
  "newVNet": {
    "addressSpace": {
      "addressPrefixes": [
        "10.0.0.0/16"
      ]
    },
    "enableDdosProtection": false,
    "etag": "W/\"300c6da1-ee4a-47ee-af6e-662d3a0230a1\"",
    "id": "/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/test-rg69e367/providers/Microsoft.Network/virtualNetworks/vnet-169e367",
    "location": "eastus2",
    "name": "vnet-169e367",
    "provisioningState": "Succeeded",
    "resourceGroup": "test-rg69e367",
    "resourceGuid": "3d64254d-70d4-47e3-a129-473d70ea2ab8",
    "subnets": [
      {
        "addressPrefix": "10.0.0.0/24",
        "delegations": [],
        "etag": "W/\"300c6da1-ee4a-47ee-af6e-662d3a0230a1\"",
        "id": "/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/test-rg69e367/providers/Microsoft.Network/virtualNetworks/vnet-169e367/subnets/subnet-169e367",
        "name": "subnet-169e367",
        "privateEndpointNetworkPolicies": "Disabled",
        "privateLinkServiceNetworkPolicies": "Enabled",
        "provisioningState": "Succeeded",
        "resourceGroup": "test-rg69e367",
        "type": "Microsoft.Network/virtualNetworks/subnets"
      }
    ],
    "type": "Microsoft.Network/virtualNetworks",
    "virtualNetworkPeerings": []
  }
}
Useaz network vnet createto create a virtual network with one subnet in the resource group:
export RESOURCE_GROUP_NAME="test-rg$RANDOM_SUFFIX"
 export VNET_NAME="vnet-1$RANDOM_SUFFIX"
 export SUBNET_NAME="subnet-1$RANDOM_SUFFIX"
 export VNET_ADDRESS_PREFIX="10.0.0.0/16"
 export SUBNET_ADDRESS_PREFIX="10.0.0.0/24"

 az network vnet create \
     --resource-group $RESOURCE_GROUP_NAME \
     --name $VNET_NAME \
     --address-prefix $VNET_ADDRESS_PREFIX \
     --subnet-name $SUBNET_NAME \
     --subnet-prefix $SUBNET_ADDRESS_PREFIX
export RESOURCE_GROUP_NAME="test-rg$RANDOM_SUFFIX"
 export VNET_NAME="vnet-1$RANDOM_SUFFIX"
 export SUBNET_NAME="subnet-1$RANDOM_SUFFIX"
 export VNET_ADDRESS_PREFIX="10.0.0.0/16"
 export SUBNET_ADDRESS_PREFIX="10.0.0.0/24"

 az network vnet create \
     --resource-group $RESOURCE_GROUP_NAME \
     --name $VNET_NAME \
     --address-prefix $VNET_ADDRESS_PREFIX \
     --subnet-name $SUBNET_NAME \
     --subnet-prefix $SUBNET_ADDRESS_PREFIX
Results:
{
  "newVNet": {
    "addressSpace": {
      "addressPrefixes": [
        "10.0.0.0/16"
      ]
    },
    "enableDdosProtection": false,
    "etag": "W/\"300c6da1-ee4a-47ee-af6e-662d3a0230a1\"",
    "id": "/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/test-rg69e367/providers/Microsoft.Network/virtualNetworks/vnet-169e367",
    "location": "eastus2",
    "name": "vnet-169e367",
    "provisioningState": "Succeeded",
    "resourceGroup": "test-rg69e367",
    "resourceGuid": "3d64254d-70d4-47e3-a129-473d70ea2ab8",
    "subnets": [
      {
        "addressPrefix": "10.0.0.0/24",
        "delegations": [],
        "etag": "W/\"300c6da1-ee4a-47ee-af6e-662d3a0230a1\"",
        "id": "/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/test-rg69e367/providers/Microsoft.Network/virtualNetworks/vnet-169e367/subnets/subnet-169e367",
        "name": "subnet-169e367",
        "privateEndpointNetworkPolicies": "Disabled",
        "privateLinkServiceNetworkPolicies": "Enabled",
        "provisioningState": "Succeeded",
        "resourceGroup": "test-rg69e367",
        "type": "Microsoft.Network/virtualNetworks/subnets"
      }
    ],
    "type": "Microsoft.Network/virtualNetworks",
    "virtualNetworkPeerings": []
  }
}
{
  "newVNet": {
    "addressSpace": {
      "addressPrefixes": [
        "10.0.0.0/16"
      ]
    },
    "enableDdosProtection": false,
    "etag": "W/\"300c6da1-ee4a-47ee-af6e-662d3a0230a1\"",
    "id": "/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/test-rg69e367/providers/Microsoft.Network/virtualNetworks/vnet-169e367",
    "location": "eastus2",
    "name": "vnet-169e367",
    "provisioningState": "Succeeded",
    "resourceGroup": "test-rg69e367",
    "resourceGuid": "3d64254d-70d4-47e3-a129-473d70ea2ab8",
    "subnets": [
      {
        "addressPrefix": "10.0.0.0/24",
        "delegations": [],
        "etag": "W/\"300c6da1-ee4a-47ee-af6e-662d3a0230a1\"",
        "id": "/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/test-rg69e367/providers/Microsoft.Network/virtualNetworks/vnet-169e367/subnets/subnet-169e367",
        "name": "subnet-169e367",
        "privateEndpointNetworkPolicies": "Disabled",
        "privateLinkServiceNetworkPolicies": "Enabled",
        "provisioningState": "Succeeded",
        "resourceGroup": "test-rg69e367",
        "type": "Microsoft.Network/virtualNetworks/subnets"
      }
    ],
    "type": "Microsoft.Network/virtualNetworks",
    "virtualNetworkPeerings": []
  }
}
Create the Bastion subnet withaz network vnet subnet create.export RESOURCE_GROUP_NAME="test-rg$RANDOM_SUFFIX"
export VNET_NAME="vnet-1$RANDOM_SUFFIX"
export SUBNET_NAME="AzureBastionSubnet"
export SUBNET_ADDRESS_PREFIX="10.0.1.0/24"

az network vnet subnet create \
    --vnet-name $VNET_NAME \
    --resource-group $RESOURCE_GROUP_NAME \
    --name AzureBastionSubnet \
    --address-prefix $SUBNET_ADDRESS_PREFIXResults:{
  "addressPrefix": "10.0.1.0/24",
  "delegations": [],
  "etag": "W/\"a2863964-0276-453f-a104-b37391e8088b\"",
  "id": "/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/test-rg69e367/providers/Microsoft.Network/virtualNetworks/vnet-169e367/subnets/AzureBastionSubnet",
  "name": "AzureBastionSubnet",
  "privateEndpointNetworkPolicies": "Disabled",
  "privateLinkServiceNetworkPolicies": "Enabled",
  "provisioningState": "Succeeded",
  "resourceGroup": "test-rg69e367",
  "type": "Microsoft.Network/virtualNetworks/subnets"
}
Create the Bastion subnet withaz network vnet subnet create.
export RESOURCE_GROUP_NAME="test-rg$RANDOM_SUFFIX"
export VNET_NAME="vnet-1$RANDOM_SUFFIX"
export SUBNET_NAME="AzureBastionSubnet"
export SUBNET_ADDRESS_PREFIX="10.0.1.0/24"

az network vnet subnet create \
    --vnet-name $VNET_NAME \
    --resource-group $RESOURCE_GROUP_NAME \
    --name AzureBastionSubnet \
    --address-prefix $SUBNET_ADDRESS_PREFIX
export RESOURCE_GROUP_NAME="test-rg$RANDOM_SUFFIX"
export VNET_NAME="vnet-1$RANDOM_SUFFIX"
export SUBNET_NAME="AzureBastionSubnet"
export SUBNET_ADDRESS_PREFIX="10.0.1.0/24"

az network vnet subnet create \
    --vnet-name $VNET_NAME \
    --resource-group $RESOURCE_GROUP_NAME \
    --name AzureBastionSubnet \
    --address-prefix $SUBNET_ADDRESS_PREFIX
Results:
{
  "addressPrefix": "10.0.1.0/24",
  "delegations": [],
  "etag": "W/\"a2863964-0276-453f-a104-b37391e8088b\"",
  "id": "/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/test-rg69e367/providers/Microsoft.Network/virtualNetworks/vnet-169e367/subnets/AzureBastionSubnet",
  "name": "AzureBastionSubnet",
  "privateEndpointNetworkPolicies": "Disabled",
  "privateLinkServiceNetworkPolicies": "Enabled",
  "provisioningState": "Succeeded",
  "resourceGroup": "test-rg69e367",
  "type": "Microsoft.Network/virtualNetworks/subnets"
}
{
  "addressPrefix": "10.0.1.0/24",
  "delegations": [],
  "etag": "W/\"a2863964-0276-453f-a104-b37391e8088b\"",
  "id": "/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/test-rg69e367/providers/Microsoft.Network/virtualNetworks/vnet-169e367/subnets/AzureBastionSubnet",
  "name": "AzureBastionSubnet",
  "privateEndpointNetworkPolicies": "Disabled",
  "privateLinkServiceNetworkPolicies": "Enabled",
  "provisioningState": "Succeeded",
  "resourceGroup": "test-rg69e367",
  "type": "Microsoft.Network/virtualNetworks/subnets"
}
Create Azure Bastion
Create a public IP address for the Azure Bastion host withaz network public-ip create.export RESOURCE_GROUP_NAME="test-rg$RANDOM_SUFFIX"
export PUBLIC_IP_NAME="public-ip-bastion$RANDOM_SUFFIX"
export LOCATION="eastus2"
export ALLOCATION_METHOD="Static"
export SKU="Standard"

az network public-ip create \
  --resource-group $RESOURCE_GROUP_NAME \
  --name $PUBLIC_IP_NAME \
  --location $LOCATION \
  --allocation-method $ALLOCATION_METHOD \
  --sku $SKUResults:{
  "publicIp": {
    "ddosSettings": {
      "protectionMode": "VirtualNetworkInherited"
    },
    "etag": "W/\"efa750bf-63f9-4c02-9ace-a747fc405d0f\"",
    "id": "/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/test-rg69e367/providers/Microsoft.Network/publicIPAddresses/public-ip-bastion69e367",
    "idleTimeoutInMinutes": 4,
    "ipAddress": "203.0.113.173",
    "ipTags": [],
    "location": "eastus2",
    "name": "public-ip-bastion69e367",
    "provisioningState": "Succeeded",
    "publicIPAddressVersion": "IPv4",
    "publicIPAllocationMethod": "Static",
    "resourceGroup": "test-rg69e367",
    "resourceGuid": "fc809493-80c8-482c-9f5a-9d6442472a99",
    "sku": {
      "name": "Standard",
      "tier": "Regional"
    },
    "type": "Microsoft.Network/publicIPAddresses"
  }
}
Create a public IP address for the Azure Bastion host withaz network public-ip create.
export RESOURCE_GROUP_NAME="test-rg$RANDOM_SUFFIX"
export PUBLIC_IP_NAME="public-ip-bastion$RANDOM_SUFFIX"
export LOCATION="eastus2"
export ALLOCATION_METHOD="Static"
export SKU="Standard"

az network public-ip create \
  --resource-group $RESOURCE_GROUP_NAME \
  --name $PUBLIC_IP_NAME \
  --location $LOCATION \
  --allocation-method $ALLOCATION_METHOD \
  --sku $SKU
export RESOURCE_GROUP_NAME="test-rg$RANDOM_SUFFIX"
export PUBLIC_IP_NAME="public-ip-bastion$RANDOM_SUFFIX"
export LOCATION="eastus2"
export ALLOCATION_METHOD="Static"
export SKU="Standard"

az network public-ip create \
  --resource-group $RESOURCE_GROUP_NAME \
  --name $PUBLIC_IP_NAME \
  --location $LOCATION \
  --allocation-method $ALLOCATION_METHOD \
  --sku $SKU
Results:
{
  "publicIp": {
    "ddosSettings": {
      "protectionMode": "VirtualNetworkInherited"
    },
    "etag": "W/\"efa750bf-63f9-4c02-9ace-a747fc405d0f\"",
    "id": "/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/test-rg69e367/providers/Microsoft.Network/publicIPAddresses/public-ip-bastion69e367",
    "idleTimeoutInMinutes": 4,
    "ipAddress": "203.0.113.173",
    "ipTags": [],
    "location": "eastus2",
    "name": "public-ip-bastion69e367",
    "provisioningState": "Succeeded",
    "publicIPAddressVersion": "IPv4",
    "publicIPAllocationMethod": "Static",
    "resourceGroup": "test-rg69e367",
    "resourceGuid": "fc809493-80c8-482c-9f5a-9d6442472a99",
    "sku": {
      "name": "Standard",
      "tier": "Regional"
    },
    "type": "Microsoft.Network/publicIPAddresses"
  }
}
{
  "publicIp": {
    "ddosSettings": {
      "protectionMode": "VirtualNetworkInherited"
    },
    "etag": "W/\"efa750bf-63f9-4c02-9ace-a747fc405d0f\"",
    "id": "/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/test-rg69e367/providers/Microsoft.Network/publicIPAddresses/public-ip-bastion69e367",
    "idleTimeoutInMinutes": 4,
    "ipAddress": "203.0.113.173",
    "ipTags": [],
    "location": "eastus2",
    "name": "public-ip-bastion69e367",
    "provisioningState": "Succeeded",
    "publicIPAddressVersion": "IPv4",
    "publicIPAllocationMethod": "Static",
    "resourceGroup": "test-rg69e367",
    "resourceGuid": "fc809493-80c8-482c-9f5a-9d6442472a99",
    "sku": {
      "name": "Standard",
      "tier": "Regional"
    },
    "type": "Microsoft.Network/publicIPAddresses"
  }
}
Create an Azure Bastion host withaz network bastion create. Azure Bastion is used to securely connect Azure virtual machines without exposing them to the public internet.export RESOURCE_GROUP_NAME="test-rg$RANDOM_SUFFIX"
export BASTION_NAME="bastion$RANDOM_SUFFIX"
export VNET_NAME="vnet-1$RANDOM_SUFFIX"
export PUBLIC_IP_NAME="public-ip-bastion$RANDOM_SUFFIX"
export LOCATION="eastus2"

az network bastion create \
  --resource-group $RESOURCE_GROUP_NAME \
  --name $BASTION_NAME \
  --vnet-name $VNET_NAME \
  --public-ip-address $PUBLIC_IP_NAME \
  --location $LOCATIONResults:{
  "disableCopyPaste": false,
  "dnsName": "bst-cc1d5c1d-9496-44fa-a8b3-3b2130efa306.bastion.azure.com",
  "enableFileCopy": false,
  "enableIpConnect": false,
  "enableKerberos": false,
  "enableSessionRecording": false,
  "enableShareableLink": false,
  "enableTunneling": false,
  "etag": "W/\"229bd068-160b-4935-b23d-eddce4bb31ed\"",
  "id": "/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/test-rg69e367/providers/Microsoft.Network/bastionHosts/bastion69e367",
  "ipConfigurations": [
    {
      "etag": "W/\"229bd068-160b-4935-b23d-eddce4bb31ed\"",
      "id": "/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/test-rg69e367/providers/Microsoft.Network/bastionHosts/bastion69e367/bastionHostIpConfigurations/bastion_ip_config",
      "name": "bastion_ip_config",
      "privateIPAllocationMethod": "Dynamic",
      "provisioningState": "Succeeded",
      "publicIPAddress": {
        "id": "/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/test-rg69e367/providers/Microsoft.Network/publicIPAddresses/public-ip-bastion69e367",
        "resourceGroup": "test-rg69e367"
      },
      "resourceGroup": "test-rg69e367",
      "subnet": {
        "id": "/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/test-rg69e367/providers/Microsoft.Network/virtualNetworks/vnet-169e367/subnets/AzureBastionSubnet",
        "resourceGroup": "test-rg69e367"
      },
      "type": "Microsoft.Network/bastionHosts/bastionHostIpConfigurations"
    }
  ],
  "location": "eastus2",
  "name": "bastion69e367",
  "provisioningState": "Succeeded",
  "resourceGroup": "test-rg69e367",
  "scaleUnits": 2,
  "sku": {
    "name": "Standard"
  },
  "type": "Microsoft.Network/bastionHosts"
}
Create an Azure Bastion host withaz network bastion create. Azure Bastion is used to securely connect Azure virtual machines without exposing them to the public internet.
export RESOURCE_GROUP_NAME="test-rg$RANDOM_SUFFIX"
export BASTION_NAME="bastion$RANDOM_SUFFIX"
export VNET_NAME="vnet-1$RANDOM_SUFFIX"
export PUBLIC_IP_NAME="public-ip-bastion$RANDOM_SUFFIX"
export LOCATION="eastus2"

az network bastion create \
  --resource-group $RESOURCE_GROUP_NAME \
  --name $BASTION_NAME \
  --vnet-name $VNET_NAME \
  --public-ip-address $PUBLIC_IP_NAME \
  --location $LOCATION
export RESOURCE_GROUP_NAME="test-rg$RANDOM_SUFFIX"
export BASTION_NAME="bastion$RANDOM_SUFFIX"
export VNET_NAME="vnet-1$RANDOM_SUFFIX"
export PUBLIC_IP_NAME="public-ip-bastion$RANDOM_SUFFIX"
export LOCATION="eastus2"

az network bastion create \
  --resource-group $RESOURCE_GROUP_NAME \
  --name $BASTION_NAME \
  --vnet-name $VNET_NAME \
  --public-ip-address $PUBLIC_IP_NAME \
  --location $LOCATION
Results:
{
  "disableCopyPaste": false,
  "dnsName": "bst-cc1d5c1d-9496-44fa-a8b3-3b2130efa306.bastion.azure.com",
  "enableFileCopy": false,
  "enableIpConnect": false,
  "enableKerberos": false,
  "enableSessionRecording": false,
  "enableShareableLink": false,
  "enableTunneling": false,
  "etag": "W/\"229bd068-160b-4935-b23d-eddce4bb31ed\"",
  "id": "/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/test-rg69e367/providers/Microsoft.Network/bastionHosts/bastion69e367",
  "ipConfigurations": [
    {
      "etag": "W/\"229bd068-160b-4935-b23d-eddce4bb31ed\"",
      "id": "/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/test-rg69e367/providers/Microsoft.Network/bastionHosts/bastion69e367/bastionHostIpConfigurations/bastion_ip_config",
      "name": "bastion_ip_config",
      "privateIPAllocationMethod": "Dynamic",
      "provisioningState": "Succeeded",
      "publicIPAddress": {
        "id": "/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/test-rg69e367/providers/Microsoft.Network/publicIPAddresses/public-ip-bastion69e367",
        "resourceGroup": "test-rg69e367"
      },
      "resourceGroup": "test-rg69e367",
      "subnet": {
        "id": "/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/test-rg69e367/providers/Microsoft.Network/virtualNetworks/vnet-169e367/subnets/AzureBastionSubnet",
        "resourceGroup": "test-rg69e367"
      },
      "type": "Microsoft.Network/bastionHosts/bastionHostIpConfigurations"
    }
  ],
  "location": "eastus2",
  "name": "bastion69e367",
  "provisioningState": "Succeeded",
  "resourceGroup": "test-rg69e367",
  "scaleUnits": 2,
  "sku": {
    "name": "Standard"
  },
  "type": "Microsoft.Network/bastionHosts"
}
{
  "disableCopyPaste": false,
  "dnsName": "bst-cc1d5c1d-9496-44fa-a8b3-3b2130efa306.bastion.azure.com",
  "enableFileCopy": false,
  "enableIpConnect": false,
  "enableKerberos": false,
  "enableSessionRecording": false,
  "enableShareableLink": false,
  "enableTunneling": false,
  "etag": "W/\"229bd068-160b-4935-b23d-eddce4bb31ed\"",
  "id": "/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/test-rg69e367/providers/Microsoft.Network/bastionHosts/bastion69e367",
  "ipConfigurations": [
    {
      "etag": "W/\"229bd068-160b-4935-b23d-eddce4bb31ed\"",
      "id": "/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/test-rg69e367/providers/Microsoft.Network/bastionHosts/bastion69e367/bastionHostIpConfigurations/bastion_ip_config",
      "name": "bastion_ip_config",
      "privateIPAllocationMethod": "Dynamic",
      "provisioningState": "Succeeded",
      "publicIPAddress": {
        "id": "/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/test-rg69e367/providers/Microsoft.Network/publicIPAddresses/public-ip-bastion69e367",
        "resourceGroup": "test-rg69e367"
      },
      "resourceGroup": "test-rg69e367",
      "subnet": {
        "id": "/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/test-rg69e367/providers/Microsoft.Network/virtualNetworks/vnet-169e367/subnets/AzureBastionSubnet",
        "resourceGroup": "test-rg69e367"
      },
      "type": "Microsoft.Network/bastionHosts/bastionHostIpConfigurations"
    }
  ],
  "location": "eastus2",
  "name": "bastion69e367",
  "provisioningState": "Succeeded",
  "resourceGroup": "test-rg69e367",
  "scaleUnits": 2,
  "sku": {
    "name": "Standard"
  },
  "type": "Microsoft.Network/bastionHosts"
}
Create a network interface with Accelerated Networking
Portal
PowerShell
CLI
Accelerated networking is enabled in the portal during virtual machine creation. Create a virtual machine in the following section.
UseNew-AzNetworkInterfaceto create a network interface (NIC) with Accelerated Networking enabled, and assign the public IP address to the NIC.
$vnetParams = @{
    ResourceGroupName = "test-rg"
    Name = "vnet-1"
    }
$vnet = Get-AzVirtualNetwork @vnetParams

$nicParams = @{
    ResourceGroupName = "test-rg"
    Name = "nic-1"
    Location = "eastus2"
    SubnetId = $vnet.Subnets[0].Id
    EnableAcceleratedNetworking = $true
    }
$nic = New-AzNetworkInterface @nicParams
$vnetParams = @{
    ResourceGroupName = "test-rg"
    Name = "vnet-1"
    }
$vnet = Get-AzVirtualNetwork @vnetParams

$nicParams = @{
    ResourceGroupName = "test-rg"
    Name = "nic-1"
    Location = "eastus2"
    SubnetId = $vnet.Subnets[0].Id
    EnableAcceleratedNetworking = $true
    }
$nic = New-AzNetworkInterface @nicParams
Useaz network nic createto create a network interface (NIC) with Accelerated Networking enabled. The following example creates a NIC in the subnet of the virtual network.export RESOURCE_GROUP_NAME="test-rg$RANDOM_SUFFIX"
 export NIC_NAME="nic-1$RANDOM_SUFFIX"
 export VNET_NAME="vnet-1$RANDOM_SUFFIX"
 export SUBNET_NAME="subnet-1$RANDOM_SUFFIX"

 az network nic create \
     --resource-group $RESOURCE_GROUP_NAME \
     --name $NIC_NAME \
     --vnet-name $VNET_NAME \
     --subnet $SUBNET_NAME \
     --accelerated-networking trueResults:{
  "NewNIC": {
    "auxiliaryMode": "None",
    "auxiliarySku": "None",
    "disableTcpStateTracking": false,
    "dnsSettings": {
      "appliedDnsServers": [],
      "dnsServers": [],
      "internalDomainNameSuffix": "juswipouodrupijji24xb0rkxa.cx.internal.cloudapp.net"
    },
    "enableAcceleratedNetworking": true,
    "enableIPForwarding": false,
    "etag": "W/\"0e24b553-769b-4350-b1aa-ab4cd04100bf\"",
    "hostedWorkloads": [],
    "id": "/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/test-rg69e367/providers/Microsoft.Network/networkInterfaces/nic-169e367",
    "ipConfigurations": [
      {
        "etag": "W/\"0e24b553-769b-4350-b1aa-ab4cd04100bf\"",
        "id": "/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/test-rg69e367/providers/Microsoft.Network/networkInterfaces/nic-169e367/ipConfigurations/ipconfig1",
        "name": "ipconfig1",
        "primary": true,
        "privateIPAddress": "10.0.0.4",
        "privateIPAddressVersion": "IPv4",
        "privateIPAllocationMethod": "Dynamic",
        "provisioningState": "Succeeded",
        "resourceGroup": "test-rg69e367",
        "subnet": {
          "id": "/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/test-rg69e367/providers/Microsoft.Network/virtualNetworks/vnet-169e367/subnets/subnet-169e367",
          "resourceGroup": "test-rg69e367"
        },
        "type": "Microsoft.Network/networkInterfaces/ipConfigurations"
      }
    ],
    "location": "eastus2",
    "name": "nic-169e367",
    "nicType": "Standard",
    "provisioningState": "Succeeded",
    "resourceGroup": "test-rg69e367",
    "resourceGuid": "6798a335-bd66-42cc-a92a-bb678d4d146e",
    "tapConfigurations": [],
    "type": "Microsoft.Network/networkInterfaces",
    "vnetEncryptionSupported": false
  }
}
Useaz network nic createto create a network interface (NIC) with Accelerated Networking enabled. The following example creates a NIC in the subnet of the virtual network.
export RESOURCE_GROUP_NAME="test-rg$RANDOM_SUFFIX"
 export NIC_NAME="nic-1$RANDOM_SUFFIX"
 export VNET_NAME="vnet-1$RANDOM_SUFFIX"
 export SUBNET_NAME="subnet-1$RANDOM_SUFFIX"

 az network nic create \
     --resource-group $RESOURCE_GROUP_NAME \
     --name $NIC_NAME \
     --vnet-name $VNET_NAME \
     --subnet $SUBNET_NAME \
     --accelerated-networking true
export RESOURCE_GROUP_NAME="test-rg$RANDOM_SUFFIX"
 export NIC_NAME="nic-1$RANDOM_SUFFIX"
 export VNET_NAME="vnet-1$RANDOM_SUFFIX"
 export SUBNET_NAME="subnet-1$RANDOM_SUFFIX"

 az network nic create \
     --resource-group $RESOURCE_GROUP_NAME \
     --name $NIC_NAME \
     --vnet-name $VNET_NAME \
     --subnet $SUBNET_NAME \
     --accelerated-networking true
Results:
{
  "NewNIC": {
    "auxiliaryMode": "None",
    "auxiliarySku": "None",
    "disableTcpStateTracking": false,
    "dnsSettings": {
      "appliedDnsServers": [],
      "dnsServers": [],
      "internalDomainNameSuffix": "juswipouodrupijji24xb0rkxa.cx.internal.cloudapp.net"
    },
    "enableAcceleratedNetworking": true,
    "enableIPForwarding": false,
    "etag": "W/\"0e24b553-769b-4350-b1aa-ab4cd04100bf\"",
    "hostedWorkloads": [],
    "id": "/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/test-rg69e367/providers/Microsoft.Network/networkInterfaces/nic-169e367",
    "ipConfigurations": [
      {
        "etag": "W/\"0e24b553-769b-4350-b1aa-ab4cd04100bf\"",
        "id": "/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/test-rg69e367/providers/Microsoft.Network/networkInterfaces/nic-169e367/ipConfigurations/ipconfig1",
        "name": "ipconfig1",
        "primary": true,
        "privateIPAddress": "10.0.0.4",
        "privateIPAddressVersion": "IPv4",
        "privateIPAllocationMethod": "Dynamic",
        "provisioningState": "Succeeded",
        "resourceGroup": "test-rg69e367",
        "subnet": {
          "id": "/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/test-rg69e367/providers/Microsoft.Network/virtualNetworks/vnet-169e367/subnets/subnet-169e367",
          "resourceGroup": "test-rg69e367"
        },
        "type": "Microsoft.Network/networkInterfaces/ipConfigurations"
      }
    ],
    "location": "eastus2",
    "name": "nic-169e367",
    "nicType": "Standard",
    "provisioningState": "Succeeded",
    "resourceGroup": "test-rg69e367",
    "resourceGuid": "6798a335-bd66-42cc-a92a-bb678d4d146e",
    "tapConfigurations": [],
    "type": "Microsoft.Network/networkInterfaces",
    "vnetEncryptionSupported": false
  }
}
{
  "NewNIC": {
    "auxiliaryMode": "None",
    "auxiliarySku": "None",
    "disableTcpStateTracking": false,
    "dnsSettings": {
      "appliedDnsServers": [],
      "dnsServers": [],
      "internalDomainNameSuffix": "juswipouodrupijji24xb0rkxa.cx.internal.cloudapp.net"
    },
    "enableAcceleratedNetworking": true,
    "enableIPForwarding": false,
    "etag": "W/\"0e24b553-769b-4350-b1aa-ab4cd04100bf\"",
    "hostedWorkloads": [],
    "id": "/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/test-rg69e367/providers/Microsoft.Network/networkInterfaces/nic-169e367",
    "ipConfigurations": [
      {
        "etag": "W/\"0e24b553-769b-4350-b1aa-ab4cd04100bf\"",
        "id": "/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/test-rg69e367/providers/Microsoft.Network/networkInterfaces/nic-169e367/ipConfigurations/ipconfig1",
        "name": "ipconfig1",
        "primary": true,
        "privateIPAddress": "10.0.0.4",
        "privateIPAddressVersion": "IPv4",
        "privateIPAllocationMethod": "Dynamic",
        "provisioningState": "Succeeded",
        "resourceGroup": "test-rg69e367",
        "subnet": {
          "id": "/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/test-rg69e367/providers/Microsoft.Network/virtualNetworks/vnet-169e367/subnets/subnet-169e367",
          "resourceGroup": "test-rg69e367"
        },
        "type": "Microsoft.Network/networkInterfaces/ipConfigurations"
      }
    ],
    "location": "eastus2",
    "name": "nic-169e367",
    "nicType": "Standard",
    "provisioningState": "Succeeded",
    "resourceGroup": "test-rg69e367",
    "resourceGuid": "6798a335-bd66-42cc-a92a-bb678d4d146e",
    "tapConfigurations": [],
    "type": "Microsoft.Network/networkInterfaces",
    "vnetEncryptionSupported": false
  }
}
Create a VM and attach the NIC
Portal
PowerShell
CLI
Create test virtual machine
The following procedure creates a test virtual machine (VM) namedvm-1in the virtual network.
In the portal, search for and selectVirtual machines.
In the portal, search for and selectVirtual machines.
InVirtual machines, select+ Create, thenAzure virtual machine.
InVirtual machines, select+ Create, thenAzure virtual machine.
On theBasicstab ofCreate a virtual machine, enter or select the following information:SettingValueProject detailsSubscriptionSelect your subscription.Resource groupSelecttest-rg.Instance detailsVirtual machine nameEntervm-1.RegionSelectEast US 2.Availability optionsSelectNo infrastructure redundancy required.Security typeLeave the default ofStandard.ImageSelectUbuntu Server 22.04 LTS - x64 Gen2.VM architectureLeave the default ofx64.SizeSelect a size.Administrator accountAuthentication typeSelectPassword.UsernameEnterazureuser.PasswordEnter a password.Confirm passwordReenter the password.Inbound port rulesPublic inbound portsSelectNone.
On theBasicstab ofCreate a virtual machine, enter or select the following information:
Select theNetworkingtab at the top of the page.
Select theNetworkingtab at the top of the page.
Enter or select the following information in theNetworkingtab:SettingValueNetwork interfaceVirtual networkSelectvnet-1.SubnetSelectsubnet-1 (10.0.0.0/24).Public IPSelectNone.NIC network security groupSelectAdvanced.Configure network security groupSelectCreate new.Enternsg-1for the name.Leave the rest at the defaults and selectOK.
Enter or select the following information in theNetworkingtab:
Leave the rest of the settings at the defaults and selectReview + create.
Leave the rest of the settings at the defaults and selectReview + create.
Review the settings and selectCreate.
Review the settings and selectCreate.
Note
Virtual machines in a virtual network with a bastion host don't need public IP addresses. Bastion provides the public IP, and the VMs use private IPs to communicate within the network. You can remove the public IPs from any VMs in bastion hosted virtual networks. For more information, seeDissociate a public IP address from an Azure VM.
Note
Azure provides a default outbound access IP for VMs that either aren't assigned a public IP address or are in the backend pool of an internal basic Azure load balancer. The default outbound access IP mechanism provides an outbound IP address that isn't configurable.
The default outbound access IP is disabled when one of the following events happens:
A public IP address is assigned to the VM.
The VM is placed in the backend pool of a standard load balancer, with or without outbound rules.
AnAzure NAT Gatewayresource is assigned to the subnet of the VM.
VMs that you create by using virtual machine scale sets in flexible orchestration mode don't have default outbound access.
For more information about outbound connections in Azure, seeDefault outbound access in AzureandUse Source Network Address Translation (SNAT) for outbound connections.
UseGet-Credentialto set a user name and password for the VM and store them in the$credvariable.
$cred
$cred = Get-Credential
$cred = Get-Credential
Note
A username is required for the VM. The password is optional and won't be used if set.  SSH key configuration is recommended for Linux VMs.
UseNew-AzVMConfigto define a VM with a VM size that supports accelerated networking, as listed inWindows Accelerated Networking. For a list of all Windows VM sizes and characteristics, seeWindows VM sizes.
$vmConfigParams = @{
    VMName = "vm-1"
    VMSize = "Standard_DS4_v2"
    }
$vmConfig = New-AzVMConfig @vmConfigParams
$vmConfigParams = @{
    VMName = "vm-1"
    VMSize = "Standard_DS4_v2"
    }
$vmConfig = New-AzVMConfig @vmConfigParams
UseSet-AzVMOperatingSystemandSet-AzVMSourceImageto create the rest of the VM configuration. The following example creates an Ubuntu Server virtual machine:
$osParams = @{
    VM = $vmConfig
    ComputerName = "vm-1"
    Credential = $cred
    }
$vmConfig = Set-AzVMOperatingSystem @osParams -Linux -DisablePasswordAuthentication

$imageParams = @{
    VM = $vmConfig
    PublisherName = "Canonical"
    Offer = "ubuntu-24_04-lts"
    Skus = "server"
    Version = "latest"
    }
$vmConfig = Set-AzVMSourceImage @imageParams
$osParams = @{
    VM = $vmConfig
    ComputerName = "vm-1"
    Credential = $cred
    }
$vmConfig = Set-AzVMOperatingSystem @osParams -Linux -DisablePasswordAuthentication

$imageParams = @{
    VM = $vmConfig
    PublisherName = "Canonical"
    Offer = "ubuntu-24_04-lts"
    Skus = "server"
    Version = "latest"
    }
$vmConfig = Set-AzVMSourceImage @imageParams
UseAdd-AzVMNetworkInterfaceto attach the NIC that you previously created to the VM.
# Get the network interface object
$nicParams = @{
    ResourceGroupName = "test-rg"
    Name = "nic-1"
    }
$nic = Get-AzNetworkInterface @nicParams

$vmConfigParams = @{
    VM = $vmConfig
    Id = $nic.Id
    }
$vmConfig = Add-AzVMNetworkInterface @vmConfigParams
# Get the network interface object
$nicParams = @{
    ResourceGroupName = "test-rg"
    Name = "nic-1"
    }
$nic = Get-AzNetworkInterface @nicParams

$vmConfigParams = @{
    VM = $vmConfig
    Id = $nic.Id
    }
$vmConfig = Add-AzVMNetworkInterface @vmConfigParams
UseNew-AzVMto create the VM with Accelerated Networking enabled. The command will generate SSH keys for the virtual machine for login. Make note of the location of the private key. The private key is needed in later steps for connecting to the virtual machine with Azure Bastion.
$vmParams = @{
    VM = $vmConfig
    ResourceGroupName = "test-rg"
    Location = "eastus2"
    SshKeyName = "ssh-key"
    }
New-AzVM @vmParams -GenerateSshKey
$vmParams = @{
    VM = $vmConfig
    ResourceGroupName = "test-rg"
    Location = "eastus2"
    SshKeyName = "ssh-key"
    }
New-AzVM @vmParams -GenerateSshKey
Useaz vm createto create the VM, and use the--nicsoption to attach the NIC you created. Ensure you select a VM size and distribution listed inWindows and Linux Accelerated Networking. For a list of all VM sizes and characteristics, seeSizes for virtual machines in Azure.
--nics
The following example creates a VM with a size that supports Accelerated Networking, Standard_DS4_v2. The command will generate SSH keys for the virtual machine for login. Make note of the location of the private key. The private key is needed in later steps for connecting to the virtual machine with Azure Bastion.
export RESOURCE_GROUP_NAME="test-rg$RANDOM_SUFFIX"
export VM_NAME="vm-1$RANDOM_SUFFIX"
export IMAGE="Ubuntu2204"
export SIZE="Standard_DS4_v2"
export ADMIN_USER="azureuser"
export NIC_NAME="nic-1$RANDOM_SUFFIX"

az vm create \
   --resource-group $RESOURCE_GROUP_NAME \
   --name $VM_NAME \
   --image $IMAGE \
   --size $SIZE \
   --admin-username $ADMIN_USER \
   --generate-ssh-keys \
   --nics $NIC_NAME
export RESOURCE_GROUP_NAME="test-rg$RANDOM_SUFFIX"
export VM_NAME="vm-1$RANDOM_SUFFIX"
export IMAGE="Ubuntu2204"
export SIZE="Standard_DS4_v2"
export ADMIN_USER="azureuser"
export NIC_NAME="nic-1$RANDOM_SUFFIX"

az vm create \
   --resource-group $RESOURCE_GROUP_NAME \
   --name $VM_NAME \
   --image $IMAGE \
   --size $SIZE \
   --admin-username $ADMIN_USER \
   --generate-ssh-keys \
   --nics $NIC_NAME
Note
To create a Windows VM, replace--image Ubuntu2204with--image Win2019Datacenter.
--image Ubuntu2204
--image Win2019Datacenter
Results:
{
    "fqdns": "",
    "id": "/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/test-rg69e367/providers/Microsoft.Compute/virtualMachines/vm-169e367",
    "location": "eastus2",
    "macAddress": "60-45-BD-84-F0-D5",
    "powerState": "VM running",
    "privateIpAddress": "10.0.0.4",
    "publicIpAddress": "",
    "resourceGroup": "test-rg69e367",
    "zones": ""
}
{
    "fqdns": "",
    "id": "/subscriptions/xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/test-rg69e367/providers/Microsoft.Compute/virtualMachines/vm-169e367",
    "location": "eastus2",
    "macAddress": "60-45-BD-84-F0-D5",
    "powerState": "VM running",
    "privateIpAddress": "10.0.0.4",
    "publicIpAddress": "",
    "resourceGroup": "test-rg69e367",
    "zones": ""
}
Confirm that accelerated networking is enabled
Linux
In theAzure portal, search for and selectvirtual machines.
In theAzure portal, search for and selectvirtual machines.
On theVirtual machinespage, select your new VM.
On theVirtual machinespage, select your new VM.
On the VM'sOverviewpage, selectConnectthenConnect via Bastion.
On the VM'sOverviewpage, selectConnectthenConnect via Bastion.
In the Bastion connection screen, changeAuthentication TypetoSSH Private Key from Local File.
In the Bastion connection screen, changeAuthentication TypetoSSH Private Key from Local File.
Enter theUsernamethat you used when creating the virtual machine. In this example, the user is namedazureuser, replace with the username you created.
Enter theUsernamethat you used when creating the virtual machine. In this example, the user is namedazureuser, replace with the username you created.
InLocal File, select the folder icon and browse to the private key file that was generated when you created the VM. The private key file is typically namedid_rsaorid_rsa.pem.
InLocal File, select the folder icon and browse to the private key file that was generated when you created the VM. The private key file is typically namedid_rsaorid_rsa.pem.
id_rsa
id_rsa.pem
SelectConnect.
SelectConnect.
A new browser window opens with the Bastion connection to your VM.
A new browser window opens with the Bastion connection to your VM.
From a shell on the remote VM, enteruname -rand confirm that the kernel version is one of the following versions, or greater:Ubuntu 16.04: 4.11.0-1013.SLES SP3: 4.4.92-6.18.RHEL: 3.10.0-693, 2.6.32-573. RHEL 6.7-6.10 are supported if the Mellanox VF version 4.5+ is installed before Linux Integration Services 4.3+.NoteOther kernel versions might be supported. For an updated list, see the compatibility tables for each distribution atSupported Linux and FreeBSD virtual machines for Hyper-V, and confirm that SR-IOV is supported. You can find more details in the release notes forLinux Integration Services for Hyper-V and Azure. *
From a shell on the remote VM, enteruname -rand confirm that the kernel version is one of the following versions, or greater:
uname -r
Ubuntu 16.04: 4.11.0-1013.
SLES SP3: 4.4.92-6.18.
RHEL: 3.10.0-693, 2.6.32-573. RHEL 6.7-6.10 are supported if the Mellanox VF version 4.5+ is installed before Linux Integration Services 4.3+.
Note
Other kernel versions might be supported. For an updated list, see the compatibility tables for each distribution atSupported Linux and FreeBSD virtual machines for Hyper-V, and confirm that SR-IOV is supported. You can find more details in the release notes forLinux Integration Services for Hyper-V and Azure. *
Use thelspcicommand to confirm that the Mellanox VF device is exposed to the VM. The returned output should be similar to the following example:0000:00:00.0 Host bridge: Intel Corporation 440BX/ZX/DX - 82443BX/ZX/DX Host bridge (AGP disabled) (rev 03)
0000:00:07.0 ISA bridge: Intel Corporation 82371AB/EB/MB PIIX4 ISA (rev 01)
0000:00:07.1 IDE interface: Intel Corporation 82371AB/EB/MB PIIX4 IDE (rev 01)
0000:00:07.3 Bridge: Intel Corporation 82371AB/EB/MB PIIX4 ACPI (rev 02)
0000:00:08.0 VGA compatible controller: Microsoft Corporation Hyper-V virtual VGA
0001:00:02.0 Ethernet controller: Mellanox Technologies MT27500/MT27520 Family [ConnectX-3/ConnectX-3 Pro Virtual Function]
Use thelspcicommand to confirm that the Mellanox VF device is exposed to the VM. The returned output should be similar to the following example:
lspci
0000:00:00.0 Host bridge: Intel Corporation 440BX/ZX/DX - 82443BX/ZX/DX Host bridge (AGP disabled) (rev 03)
0000:00:07.0 ISA bridge: Intel Corporation 82371AB/EB/MB PIIX4 ISA (rev 01)
0000:00:07.1 IDE interface: Intel Corporation 82371AB/EB/MB PIIX4 IDE (rev 01)
0000:00:07.3 Bridge: Intel Corporation 82371AB/EB/MB PIIX4 ACPI (rev 02)
0000:00:08.0 VGA compatible controller: Microsoft Corporation Hyper-V virtual VGA
0001:00:02.0 Ethernet controller: Mellanox Technologies MT27500/MT27520 Family [ConnectX-3/ConnectX-3 Pro Virtual Function]
0000:00:00.0 Host bridge: Intel Corporation 440BX/ZX/DX - 82443BX/ZX/DX Host bridge (AGP disabled) (rev 03)
0000:00:07.0 ISA bridge: Intel Corporation 82371AB/EB/MB PIIX4 ISA (rev 01)
0000:00:07.1 IDE interface: Intel Corporation 82371AB/EB/MB PIIX4 IDE (rev 01)
0000:00:07.3 Bridge: Intel Corporation 82371AB/EB/MB PIIX4 ACPI (rev 02)
0000:00:08.0 VGA compatible controller: Microsoft Corporation Hyper-V virtual VGA
0001:00:02.0 Ethernet controller: Mellanox Technologies MT27500/MT27520 Family [ConnectX-3/ConnectX-3 Pro Virtual Function]
Use theethtool -S eth0 | grep vf_command to check for activity on the virtual function (VF). If accelerated networking is enabled and active, you receive output similar to the following example:vf_rx_packets: 992956
vf_rx_bytes: 2749784180
vf_tx_packets: 2656684
vf_tx_bytes: 1099443970
vf_tx_dropped: 0
Use theethtool -S eth0 | grep vf_command to check for activity on the virtual function (VF). If accelerated networking is enabled and active, you receive output similar to the following example:
ethtool -S eth0 | grep vf_
vf_rx_packets: 992956
vf_rx_bytes: 2749784180
vf_tx_packets: 2656684
vf_tx_bytes: 1099443970
vf_tx_dropped: 0
vf_rx_packets: 992956
vf_rx_bytes: 2749784180
vf_tx_packets: 2656684
vf_tx_bytes: 1099443970
vf_tx_dropped: 0
Close the Bastion connection to the VM.
Close the Bastion connection to the VM.
Windows
Once you create the VM in Azure, connect to the VM and confirm that the Ethernet controller is installed in Windows.
In theAzure portal, search for and selectvirtual machines.
In theAzure portal, search for and selectvirtual machines.
On theVirtual machinespage, select your new VM.
On theVirtual machinespage, select your new VM.
On the VM'sOverviewpage, selectConnectthenConnect via Bastion.
On the VM'sOverviewpage, selectConnectthenConnect via Bastion.
Enter the credentials you used when you created the VM, and then selectConnect.
Enter the credentials you used when you created the VM, and then selectConnect.
A new browser window opens with the Bastion connection to your VM.
A new browser window opens with the Bastion connection to your VM.
On the remote VM, right-clickStartand selectDevice Manager.
On the remote VM, right-clickStartand selectDevice Manager.
In theDevice Managerwindow, expand theNetwork adaptersnode.
In theDevice Managerwindow, expand theNetwork adaptersnode.
Confirm that theMellanox ConnectX-4 Lx Virtual Ethernet Adapterappears, as shown in the following image:The presence of the adapter confirms that Accelerated Networking is enabled for your VM.
Confirm that theMellanox ConnectX-4 Lx Virtual Ethernet Adapterappears, as shown in the following image:

The presence of the adapter confirms that Accelerated Networking is enabled for your VM.
Verify the packets are flowing over the VF interface from the output of the following command:PS C:\ > Get-NetAdapter | Where-Object InterfaceDescription âlike "*Mellanox*Virtual*" | Get-NetAdapterStatistics

Name                             ReceivedBytes ReceivedUnicastPackets       SentBytes SentUnicastPackets
----                             ------------- ----------------------       --------- ------------------
Ethernet 2                           492447549                 347643         7468446              34991NoteIf the Mellanox adapter fails to start, open an administrator command prompt on the remote VM and enter the following command:netsh int tcp set global rss = enabled
Verify the packets are flowing over the VF interface from the output of the following command:
PS C:\ > Get-NetAdapter | Where-Object InterfaceDescription âlike "*Mellanox*Virtual*" | Get-NetAdapterStatistics

Name                             ReceivedBytes ReceivedUnicastPackets       SentBytes SentUnicastPackets
----                             ------------- ----------------------       --------- ------------------
Ethernet 2                           492447549                 347643         7468446              34991
PS C:\ > Get-NetAdapter | Where-Object InterfaceDescription âlike "*Mellanox*Virtual*" | Get-NetAdapterStatistics

Name                             ReceivedBytes ReceivedUnicastPackets       SentBytes SentUnicastPackets
----                             ------------- ----------------------       --------- ------------------
Ethernet 2                           492447549                 347643         7468446              34991
Note
If the Mellanox adapter fails to start, open an administrator command prompt on the remote VM and enter the following command:
netsh int tcp set global rss = enabled
netsh int tcp set global rss = enabled
Close the Bastion connection to the VM.
Close the Bastion connection to the VM.
Next steps
How Accelerated Networking works in Linux and FreeBSD VMs
How Accelerated Networking works in Linux and FreeBSD VMs
Proximity placement groups
Proximity placement groups
Feedback
Was this page helpful?
Additional resources