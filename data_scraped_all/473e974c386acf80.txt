Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Monitor Azure IoT Hub
Article
2024-07-30
12 contributors
In this article
This article describes:
The types of monitoring data you can collect for this service.
Ways to analyze that data.
Note
If you're already familiar with this service and/or Azure Monitor and just want to know how to analyze monitoring data, see theAnalyzesection near the end of this article.
When you have critical applications and business processes that rely on Azure resources, you need to monitor and get alerts for your system. The Azure Monitor service collects and aggregates metrics and logs from every component of your system. Azure Monitor provides you with a view of availability, performance, and resilience, and notifies you of issues. You can use the Azure portal, PowerShell, Azure CLI, REST API, or client libraries to set up and view monitoring data.
For more information on Azure Monitor, see theAzure Monitor overview.
For more information on how to monitor Azure resources in general, seeMonitor Azure resources with Azure Monitor.
Monitor per-device disconnects with Event Grid
Azure Monitor provides a metric calledConnected devicesthat you can use to monitor the number of devices connected to your IoT Hub. This metric triggers an alert when the number of connected devices drops below a threshold value. Azure Monitor also emits events in theconnections categorythat you can use to monitor device connects, disconnects, and connection errors. While these events might be sufficient for some scenarios,Azure Event Gridprovides a low-latency, per-device monitoring solution that you can use to track device connections for critical devices and infrastructure.
With Event Grid, you can subscribe to the IoT HubDeviceConnectedandDeviceDisconnectedeventsto trigger alerts and monitor device connection state. Event Grid provides a much lower event latency than Azure Monitor, so you can monitor on a per-device basis rather than for all connected devices. These factors make Event Grid the preferred method for monitoring connections for critical devices and infrastructure. We highly recommend using Event Grid to monitor device connections in production environments.
For more information about monitoring device connectivity with Event Grid and Azure Monitor, seeMonitor, diagnose, and troubleshoot device connectivity to Azure IoT Hub.
Resource types
Azure uses the concept of resource types and IDs to identify everything in a subscription. Resource types are also part of the resource IDs for every resource running in Azure. For example, one resource type for a virtual machine isMicrosoft.Compute/virtualMachines. For a list of services and their associated resource types, seeResource providers.
Microsoft.Compute/virtualMachines
Azure Monitor similarly organizes core monitoring data into metrics and logs based on resource types, also callednamespaces. Different metrics and logs are available for different resource types. Your service might be associated with more than one resource type.
For more information about the resource types for IoT Hub, seeAzure IoT Hub monitoring data reference.
Data storage
For Azure Monitor:
Metrics data is stored in the Azure Monitor metrics database.
Log data is stored in the Azure Monitor logs store. Log Analytics is a tool in the Azure portal that can query this store.
The Azure activity log is a separate store with its own interface in the Azure portal.
You can optionally route metric and activity log data to the Azure Monitor logs store. You can then use Log Analytics to query the data and correlate it with other log data.
Many services can use diagnostic settings to send metric and log data to other storage locations outside Azure Monitor. Examples include Azure Storage,hosted partner systems, andnon-Azure partner systems, by using Event Hubs.
For detailed information on how Azure Monitor stores data, seeAzure Monitor data platform.

Collect and route monitoring data
Platform metrics, the Activity log, and resource logs have unique collection, storage, and routing specifications.
In the Azure portal from your IoT hub underMonitoring, you can selectDiagnostic settingsfollowed byAdd diagnostic settingto create diagnostic settings scoped to the logs and platform metrics emitted by your IoT hub.

The following screenshot shows a diagnostic setting for routing the resource log typeConnection Operationsand all platform metrics to a Log Analytics workspace.

When routing IoT Hub platform metrics to other locations:
These platform metrics aren't exportable by using diagnostic settings:Connected devicesandTotal devices.
These platform metrics aren't exportable by using diagnostic settings:Connected devicesandTotal devices.
Multi-dimensional metrics, for example somerouting metrics, are currently exported as flattened single dimensional metrics aggregated across dimension values. For more information, seeExporting platform metrics to other locations.
Multi-dimensional metrics, for example somerouting metrics, are currently exported as flattened single dimensional metrics aggregated across dimension values. For more information, seeExporting platform metrics to other locations.

Azure Monitor platform metrics
Azure Monitor provides platform metrics for most services. These metrics are:
Individually defined for each namespace.
Stored in the Azure Monitor time-series metrics database.
Lightweight and capable of supporting near real-time alerting.
Used to track the performance of a resource over time.
Collection:Azure Monitor collects platform metrics automatically. No configuration is required.
Routing:You can also route some platform metrics to Azure Monitor Logs / Log Analytics so you can query them with other log data. Check theDS exportsetting for each metric to see if you can use a diagnostic setting to route the metric to Azure Monitor Logs / Log Analytics.
For more information, see theMetrics diagnostic setting.
To configure diagnostic settings for a service, seeCreate diagnostic settings in Azure Monitor.
For a list of all metrics it's possible to gather for all resources in Azure Monitor, seeSupported metrics in Azure Monitor.
Monitor overview
TheOverviewpage in the Azure portal for each IoT hub includes charts that provide some usage metrics, such as the number of messages used and the number of devices connected to the IoT hub.

A correct message count value might be delayed by 1 minute. Due to the IoT Hub service infrastructure, the value can sometimes bounce between higher and lower values on refresh. This counter should be incorrect only for values accrued over the last minute.
The information presented on theOverview paneis useful, but represents only a small amount of monitoring data that's available for an IoT hub. Some monitoring data is collected automatically and available for analysis as soon as you create your IoT hub. You can enable other types of data collection with some configuration.
Important
The events emitted by the IoT Hub service using Azure Monitor resource logs aren't guaranteed to be reliable or ordered. Some events might be lost or delivered out of order. Resource logs aren't intended to be real-time, so it may take several minutes for events to be logged to your choice of destination.

Azure Monitor resource logs
Resource logs provide insight into operations that were done by an Azure resource. Logs are generated automatically, but you must route them to Azure Monitor logs to save or query them. Logs are organized in categories. A given namespace might have multiple resource log categories.
Collection:Resource logs aren't collected and stored until you create adiagnostic settingand route the logs to one or more locations. When you create a diagnostic setting, you specify which categories of logs to collect. There are multiple ways to create and maintain diagnostic settings, including the Azure portal, programmatically, and though Azure Policy.
Routing:The suggested default is to route resource logs to Azure Monitor Logs so you can query them with other log data. Other locations such as Azure Storage, Azure Event Hubs, and certain Microsoft monitoring partners are also available. For more information, seeAzure resource logsandResource log destinations.
For detailed information about collecting, storing, and routing resource logs, seeDiagnostic settings in Azure Monitor.
For a list of all available resource log categories in Azure Monitor, seeSupported resource logs in Azure Monitor.
All resource logs in Azure Monitor have the same header fields, followed by service-specific fields. The common schema is outlined inAzure Monitor resource log schema.
Route connection events to logs
IoT hub continuously emits resource logs for several categories of operations. To collect this log data, though, you need to create a diagnostic setting to route it to a destination where it can be analyzed or archived. One such destination is Azure Monitor Logs via a Log Analytics workspace (see pricing), where you can analyze the data using Kusto queries.
The IoT Hubresource logs connections categoryemits operations and errors having to do with device connections. The following screenshot shows a diagnostic setting to route these logs to a Log Analytics workspace:

We recommend creating a diagnostic setting as early as possible after you create your IoT hub, because, although IoT Hub always emits resource logs, Azure Monitor doesn't collect them until you route them to a destination.
To learn more about routing logs to a destination, see theCollect and route monitoring datasection. For detailed instructions to create a diagnostic setting, see theUse metrics and logs tutorial.
Azure activity log
The activity log contains subscription-level events that track operations for each Azure resource as seen from outside that resource; for example, creating a new resource or starting a virtual machine.
Collection:Activity log events are automatically generated and collected in a separate store for viewing in the Azure portal.
Routing:You can send activity log data to Azure Monitor Logs so you can analyze it alongside other log data. Other locations such as Azure Storage, Azure Event Hubs, and certain Microsoft monitoring partners are also available. For more information on how to route the activity log, seeOverview of the Azure activity log.
Analyze logs
Data in Azure Monitor Logs is stored in tables where each table has its own set of unique properties. The data in these tables are associated with a Log Analytics workspace and can be queried in Log Analytics. To learn more about Azure Monitor Logs, seeAzure Monitor Logs overviewin the Azure Monitor documentation.
To route data to Azure Monitor Logs, you must create a diagnostic setting to send resource logs or platform metrics to a Log Analytics workspace. To learn more, see theCollect and route monitoring datasection.
To perform Log Analytics, go to the Azure portal and open your IoT hub, then selectLogsunderMonitoring. These Log Analytics queries are scoped, by default, to the logs and metrics collected in Azure Monitor Logs for your IoT hub.

When routing IoT Hub platform metrics to Azure Monitor Logs:
The following platform metrics aren't exportable by using diagnostic settings:Connected devicesandTotal devices.
The following platform metrics aren't exportable by using diagnostic settings:Connected devicesandTotal devices.
Multi-dimensional metrics, for example somerouting metrics, are currently exported as flattened single dimensional metrics aggregated across dimension values. For more detail, seeExporting platform metrics to other locations.
Multi-dimensional metrics, for example somerouting metrics, are currently exported as flattened single dimensional metrics aggregated across dimension values. For more detail, seeExporting platform metrics to other locations.
For common queries with IoT Hub, seeSample Kusto queries. For more information on using Log Analytics queries, seeOverview of log queries in Azure Monitor.
SDK version in IoT Hub logs
Some operations return ansdkVersionproperty in theirpropertiesobject for the IoT Hub resource logs. For these operations, when a device or backend app is using one of the Azure IoT SDKs, this property contains information about the SDK being used, the SDK version, and the platform on which the SDK is running.
sdkVersion
properties
The following examples show thesdkVersionproperty emitted for adeviceConnectoperation using:
sdkVersion
deviceConnect
The Node.js device SDK:"azure-iot-device/1.17.1 (node v10.16.0; Windows_NT 10.0.18363; x64)"
"azure-iot-device/1.17.1 (node v10.16.0; Windows_NT 10.0.18363; x64)"
The .NET (C#) SDK:".NET/1.21.2 (.NET Framework 4.8.4200.0; Microsoft Windows 10.0.17763 WindowsProduct:0x00000004; X86)".
".NET/1.21.2 (.NET Framework 4.8.4200.0; Microsoft Windows 10.0.17763 WindowsProduct:0x00000004; X86)"
The following table shows the SDK name used for different Azure IoT SDKs:
You can extract the SDK version property when you perform queries against IoT Hub resource logs. For example, the following query extracts the SDK version property (and device ID) from the properties returned by Connections operations. These two properties are written to the results along with the time of the operation and the resource ID of the IoT hub that the device is connecting to.
// SDK version of devices
// List of devices and their SDK versions that connect to IoT Hub
AzureDiagnostics
| where ResourceProvider == "MICROSOFT.DEVICES" and ResourceType == "IOTHUBS"
| where Category == "Connections"
| extend parsed_json = parse_json(properties_s) 
| extend SDKVersion = tostring(parsed_json.sdkVersion) , DeviceId = tostring(parsed_json.deviceId)
| distinct DeviceId, SDKVersion, TimeGenerated, _ResourceId
// SDK version of devices
// List of devices and their SDK versions that connect to IoT Hub
AzureDiagnostics
| where ResourceProvider == "MICROSOFT.DEVICES" and ResourceType == "IOTHUBS"
| where Category == "Connections"
| extend parsed_json = parse_json(properties_s) 
| extend SDKVersion = tostring(parsed_json.sdkVersion) , DeviceId = tostring(parsed_json.deviceId)
| distinct DeviceId, SDKVersion, TimeGenerated, _ResourceId
Read logs from Azure Event Hubs
After you set up event logging through diagnostics settings, you can create applications that read out the logs so that you can take action based on the information in them.
Refer to the Azure Event Hubs documentation for specific guidance around developing with the Event Hubs clients. For example,.NET samples: Reading events.
For the available resource log categories, their associated Log Analytics tables, and the log schemas for IoT Hub, seeAzure IoT Hub monitoring data reference.
Analyze monitoring data
There are many tools for analyzing monitoring data.
Azure Monitor tools
Azure Monitor supports the following basic tools:
Metrics explorer, a tool in the Azure portal that allows you to view and analyze metrics for Azure resources. For more information, seeAnalyze metrics with Azure Monitor metrics explorer.
Metrics explorer, a tool in the Azure portal that allows you to view and analyze metrics for Azure resources. For more information, seeAnalyze metrics with Azure Monitor metrics explorer.
Log Analytics, a tool in the Azure portal that allows you to query and analyze log data by using theKusto query language (KQL). For more information, seeGet started with log queries in Azure Monitor.
Log Analytics, a tool in the Azure portal that allows you to query and analyze log data by using theKusto query language (KQL). For more information, seeGet started with log queries in Azure Monitor.
Theactivity log, which has a user interface in the Azure portal for viewing and basic searches. To do more in-depth analysis, you have to route the data to Azure Monitor logs and run more complex queries in Log Analytics.
Theactivity log, which has a user interface in the Azure portal for viewing and basic searches. To do more in-depth analysis, you have to route the data to Azure Monitor logs and run more complex queries in Log Analytics.
Tools that allow more complex visualization include:
Dashboardsthat let you combine different kinds of data into a single pane in the Azure portal.
Workbooks, customizable reports that you can create in the Azure portal. Workbooks can include text, metrics, and log queries.
Grafana, an open platform tool that excels in operational dashboards. You can use Grafana to create dashboards that include data from multiple sources other than Azure Monitor.
Power BI, a business analytics service that provides interactive visualizations across various data sources. You can configure Power BI to automatically import log data from Azure Monitor to take advantage of these visualizations.

Azure Monitor export tools
You can get data out of Azure Monitor into other tools by using the following methods:
Metrics:Use theREST API for metricsto extract metric data from the Azure Monitor metrics database. The API supports filter expressions to refine the data retrieved. For more information, seeAzure Monitor REST API reference.
Metrics:Use theREST API for metricsto extract metric data from the Azure Monitor metrics database. The API supports filter expressions to refine the data retrieved. For more information, seeAzure Monitor REST API reference.
Logs:Use the REST API or theassociated client libraries.
Logs:Use the REST API or theassociated client libraries.
Another option is theworkspace data export.
Another option is theworkspace data export.
To get started with the REST API for Azure Monitor, seeAzure monitoring REST API walkthrough.

Kusto queries
You can analyze monitoring data in the Azure Monitor Logs / Log Analytics store by using the Kusto query language (KQL).
Important
When you selectLogsfrom the service's menu in the portal, Log Analytics opens with the query scope set to the current service. This scope means that log queries will only include data from that type of resource. If you want to run a query that includes data from other Azure services, selectLogsfrom theAzure Monitormenu. SeeLog query scope and time range in Azure Monitor Log Analyticsfor details.
For a list of common queries for any service, see theLog Analytics queries interface.
Use the following Kusto queries to help you monitor your IoT hub.
Connectivity Errors: Identify device connection errors.AzureDiagnostics
| where ResourceProvider == "MICROSOFT.DEVICES" and ResourceType == "IOTHUBS"
| where Category == "Connections" and Level == "Error"
Connectivity Errors: Identify device connection errors.
AzureDiagnostics
| where ResourceProvider == "MICROSOFT.DEVICES" and ResourceType == "IOTHUBS"
| where Category == "Connections" and Level == "Error"
AzureDiagnostics
| where ResourceProvider == "MICROSOFT.DEVICES" and ResourceType == "IOTHUBS"
| where Category == "Connections" and Level == "Error"
Throttling Errors: Identify devices that made the most requests resulting in throttling errors.AzureDiagnostics
| where ResourceProvider == "MICROSOFT.DEVICES" and ResourceType == "IOTHUBS"
| where ResultType == "429001"
| extend DeviceId = tostring(parse_json(properties_s).deviceId)
| summarize count() by DeviceId, Category, _ResourceId
| order by count_ desc
Throttling Errors: Identify devices that made the most requests resulting in throttling errors.
AzureDiagnostics
| where ResourceProvider == "MICROSOFT.DEVICES" and ResourceType == "IOTHUBS"
| where ResultType == "429001"
| extend DeviceId = tostring(parse_json(properties_s).deviceId)
| summarize count() by DeviceId, Category, _ResourceId
| order by count_ desc
AzureDiagnostics
| where ResourceProvider == "MICROSOFT.DEVICES" and ResourceType == "IOTHUBS"
| where ResultType == "429001"
| extend DeviceId = tostring(parse_json(properties_s).deviceId)
| summarize count() by DeviceId, Category, _ResourceId
| order by count_ desc
Dead Endpoints: Identify dead or unhealthy endpoints by the number of times the issue was reported and know the reason why.AzureDiagnostics
| where ResourceProvider == "MICROSOFT.DEVICES" and ResourceType == "IOTHUBS"
| where Category == "Routes" and OperationName in ("endpointDead", "endpointUnhealthy")
| extend parsed_json = parse_json(properties_s)
| extend Endpoint = tostring(parsed_json.endpointName), Reason = tostring(parsed_json.details) 
| summarize count() by Endpoint, OperationName, Reason, _ResourceId
| order by count_ desc
Dead Endpoints: Identify dead or unhealthy endpoints by the number of times the issue was reported and know the reason why.
AzureDiagnostics
| where ResourceProvider == "MICROSOFT.DEVICES" and ResourceType == "IOTHUBS"
| where Category == "Routes" and OperationName in ("endpointDead", "endpointUnhealthy")
| extend parsed_json = parse_json(properties_s)
| extend Endpoint = tostring(parsed_json.endpointName), Reason = tostring(parsed_json.details) 
| summarize count() by Endpoint, OperationName, Reason, _ResourceId
| order by count_ desc
AzureDiagnostics
| where ResourceProvider == "MICROSOFT.DEVICES" and ResourceType == "IOTHUBS"
| where Category == "Routes" and OperationName in ("endpointDead", "endpointUnhealthy")
| extend parsed_json = parse_json(properties_s)
| extend Endpoint = tostring(parsed_json.endpointName), Reason = tostring(parsed_json.details) 
| summarize count() by Endpoint, OperationName, Reason, _ResourceId
| order by count_ desc
Error summary: Count of errors across all operations by type.AzureDiagnostics
| where ResourceProvider == "MICROSOFT.DEVICES" and ResourceType == "IOTHUBS"
| where Level == "Error"
| summarize count() by ResultType, ResultDescription, Category, _ResourceId
Error summary: Count of errors across all operations by type.
AzureDiagnostics
| where ResourceProvider == "MICROSOFT.DEVICES" and ResourceType == "IOTHUBS"
| where Level == "Error"
| summarize count() by ResultType, ResultDescription, Category, _ResourceId
AzureDiagnostics
| where ResourceProvider == "MICROSOFT.DEVICES" and ResourceType == "IOTHUBS"
| where Level == "Error"
| summarize count() by ResultType, ResultDescription, Category, _ResourceId
Recently connected devices: List of devices that IoT Hub saw connect in the specified time period.AzureDiagnostics
| where ResourceProvider == "MICROSOFT.DEVICES" and ResourceType == "IOTHUBS"
| where Category == "Connections" and OperationName == "deviceConnect"
| extend DeviceId = tostring(parse_json(properties_s).deviceId)
| summarize max(TimeGenerated) by DeviceId, _ResourceId
Recently connected devices: List of devices that IoT Hub saw connect in the specified time period.
AzureDiagnostics
| where ResourceProvider == "MICROSOFT.DEVICES" and ResourceType == "IOTHUBS"
| where Category == "Connections" and OperationName == "deviceConnect"
| extend DeviceId = tostring(parse_json(properties_s).deviceId)
| summarize max(TimeGenerated) by DeviceId, _ResourceId
AzureDiagnostics
| where ResourceProvider == "MICROSOFT.DEVICES" and ResourceType == "IOTHUBS"
| where Category == "Connections" and OperationName == "deviceConnect"
| extend DeviceId = tostring(parse_json(properties_s).deviceId)
| summarize max(TimeGenerated) by DeviceId, _ResourceId
Connection events for a specific device: All connection events logged for a specific device (test-device).AzureDiagnostics
| where ResourceProvider == "MICROSOFT.DEVICES" and ResourceType == "IOTHUBS"
| where Category == "Connections"
| extend DeviceId = tostring(parse_json(properties_s).deviceId)
| where DeviceId == "test-device"
Connection events for a specific device: All connection events logged for a specific device (test-device).
AzureDiagnostics
| where ResourceProvider == "MICROSOFT.DEVICES" and ResourceType == "IOTHUBS"
| where Category == "Connections"
| extend DeviceId = tostring(parse_json(properties_s).deviceId)
| where DeviceId == "test-device"
AzureDiagnostics
| where ResourceProvider == "MICROSOFT.DEVICES" and ResourceType == "IOTHUBS"
| where Category == "Connections"
| extend DeviceId = tostring(parse_json(properties_s).deviceId)
| where DeviceId == "test-device"
SDK version of devices: List of devices and their SDK versions for device connections or device to cloud twin operations.AzureDiagnostics
| where ResourceProvider == "MICROSOFT.DEVICES" and ResourceType == "IOTHUBS"
| where Category == "Connections" or Category == "D2CTwinOperations"
| extend parsed_json = parse_json(properties_s)
| extend SDKVersion = tostring(parsed_json.sdkVersion) , DeviceId = tostring(parsed_json.deviceId)
| distinct DeviceId, SDKVersion, TimeGenerated, _ResourceId
SDK version of devices: List of devices and their SDK versions for device connections or device to cloud twin operations.
AzureDiagnostics
| where ResourceProvider == "MICROSOFT.DEVICES" and ResourceType == "IOTHUBS"
| where Category == "Connections" or Category == "D2CTwinOperations"
| extend parsed_json = parse_json(properties_s)
| extend SDKVersion = tostring(parsed_json.sdkVersion) , DeviceId = tostring(parsed_json.deviceId)
| distinct DeviceId, SDKVersion, TimeGenerated, _ResourceId
AzureDiagnostics
| where ResourceProvider == "MICROSOFT.DEVICES" and ResourceType == "IOTHUBS"
| where Category == "Connections" or Category == "D2CTwinOperations"
| extend parsed_json = parse_json(properties_s)
| extend SDKVersion = tostring(parsed_json.sdkVersion) , DeviceId = tostring(parsed_json.deviceId)
| distinct DeviceId, SDKVersion, TimeGenerated, _ResourceId
Alerts
Azure Monitor alerts proactively notify you when specific conditions are found in your monitoring data. Alerts allow you to identify and address issues in your system before your customers notice them. For more information, seeAzure Monitor alerts.
There are many sources of common alerts for Azure resources. For examples of common alerts for Azure resources, seeSample log alert queries. TheAzure Monitor Baseline Alerts (AMBA)site provides a semi-automated method of implementing important platform metric alerts, dashboards, and guidelines. The site applies to a continually expanding subset of Azure services, including all services that are part of the Azure Landing Zone (ALZ).
The common alert schema standardizes the consumption of Azure Monitor alert notifications. For more information, seeCommon alert schema.
Types of alerts
You can alert on any metric or log data source in the Azure Monitor data platform. There are many different types of alerts depending on the services you're monitoring and the monitoring data you're collecting. Different types of alerts have various benefits and drawbacks. For more information, seeChoose the right monitoring alert type.
The following list describes the types of Azure Monitor alerts you can create:
Metric alertsevaluate resource metrics at regular intervals. Metrics can be platform metrics, custom metrics, logs from Azure Monitor converted to metrics, or Application Insights metrics. Metric alerts can also apply multiple conditions and dynamic thresholds.
Log alertsallow users to use a Log Analytics query to evaluate resource logs at a predefined frequency.
Activity log alertstrigger when a new activity log event occurs that matches defined conditions. Resource Health alerts and Service Health alerts are activity log alerts that report on your service and resource health.
Some Azure services also supportsmart detection alerts,Prometheus alerts, orrecommended alert rules.
For some services, you can monitor at scale by applying the same metric alert rule to multiple resources of the same type that exist in the same Azure region. Individual notifications are sent for each monitored resource. For supported Azure services and clouds, seeMonitor multiple resources with one alert rule.
IoT Hub alert rules
You can set alerts for any metric, log entry, or activity log entry listed in theIoT Hub monitoring data reference.
Set up metric alerts for device disconnects
You can set up alerts based on the platform metrics emitted by IoT Hub. With metric alerts, you can notify individuals that a condition of interest occurred and also trigger actions that can respond to that condition automatically.
TheConnected devices (preview)metric tells you how many devices are connected to your IoT Hub. If this metric drops below a threshold value, an alert can trigger:

You can use metric alert rules to monitor for device disconnect anomalies at-scale. That is, use alerts to determine when a significant number of devices unexpectedly disconnect. When this situation is detected, you can look at logs to help troubleshoot the issue. To monitor per-device disconnects and disconnects for critical devices in near real time, however, you must use Event Grid.
To learn more about alerts with IoT Hub, seeAlerts in Monitor IoT Hub. For a walk-through of creating alerts in IoT Hub, see theUse metrics and logs tutorial. For a more detailed overview of alerts, seeOverview of alerts in Microsoft Azurein the Azure Monitor documentation.
Advisor recommendations
For some services, if critical conditions or imminent changes occur during resource operations, an alert displays on the serviceOverviewpage in the portal. You can find more information and recommended fixes for the alert inAdvisor recommendationsunderMonitoringin the left menu. During normal operations, no advisor recommendations display.
For more information on Azure Advisor, seeAzure Advisor overview.
Related content
SeeAzure IoT Hub monitoring data referencefor a reference of the metrics, logs, and other important values created for IoT Hub.
SeeMonitoring Azure resources with Azure Monitorfor general details on monitoring Azure resources.
SeeMonitor, diagnose, and troubleshoot device connectivity to Azure IoT Hubfor monitoring device connectivity.
Feedback
Was this page helpful?
Additional resources