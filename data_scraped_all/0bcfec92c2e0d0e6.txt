Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Enable HTTPS for a custom domain in Azure App Service
Article
2025-02-14
11 contributors
In this article
This article shows you how to provide security for thecustom domainin yourApp Service apporfunction appby creating a certificate binding. When you're finished, you can access your App Service app at thehttps://endpoint for your custom DNS name (for example,https://www.contoso.com).
https://
https://www.contoso.com

Prerequisites
Scale up your App Service appto one of the supported pricing tiers: Basic, Standard, Premium.
Map a domain name to your apporbuy and configure it in Azure.

Add the binding
In theAzure portal:
From the left menu, selectApp Services><app-name>.
From the left menu, selectApp Services><app-name>.
From the left navigation of your app, selectCustom domains.
From the left navigation of your app, selectCustom domains.
Next to the custom domain, selectAdd binding.
Next to the custom domain, selectAdd binding.

If your app already has a certificate for the selected custom domain, you can select it inCertificate. If not, you must add a certificate using one of the selections inSource.Create App Service Managed Certificate- Let App Service create a managed certificate for your selected domain. This option is the easiest. For more information, seeCreate a free managed certificate.Import App Service Certificate- InApp Service Certificate, select anApp Service certificateyou've purchased for your selected domain.Upload certificate (.pfx)- Follow the workflow atUpload a private certificateto upload a PFX certificate from your local machine and specify the certificate password.Import from Key Vault- SelectSelect key vault certificateand select the certificate in the dialog.
If your app already has a certificate for the selected custom domain, you can select it inCertificate. If not, you must add a certificate using one of the selections inSource.
Create App Service Managed Certificate- Let App Service create a managed certificate for your selected domain. This option is the easiest. For more information, seeCreate a free managed certificate.
Import App Service Certificate- InApp Service Certificate, select anApp Service certificateyou've purchased for your selected domain.
Upload certificate (.pfx)- Follow the workflow atUpload a private certificateto upload a PFX certificate from your local machine and specify the certificate password.
Import from Key Vault- SelectSelect key vault certificateand select the certificate in the dialog.
InTLS/SSL type, select eitherSNI SSLorIP based SSL.SNI SSL: Multiple SNI SSL bindings can be added. This option allows multiple TLS/SSL certificates to help secure multiple domains on the same IP address. Most modern browsers (including Microsoft Edge, Chrome, Firefox, and Opera) support SNI. (For more information, seeServer Name Indication.)IP based SSL: Only one IP SSL binding can be added. This option allows only one TLS/SSL certificate to help secure a dedicated public IP address. After you configure the binding, follow the steps inRemap records for IP-based SSL.IP-based SSL is supported only in Standard tier or higher.
InTLS/SSL type, select eitherSNI SSLorIP based SSL.
SNI SSL: Multiple SNI SSL bindings can be added. This option allows multiple TLS/SSL certificates to help secure multiple domains on the same IP address. Most modern browsers (including Microsoft Edge, Chrome, Firefox, and Opera) support SNI. (For more information, seeServer Name Indication.)
IP based SSL: Only one IP SSL binding can be added. This option allows only one TLS/SSL certificate to help secure a dedicated public IP address. After you configure the binding, follow the steps inRemap records for IP-based SSL.IP-based SSL is supported only in Standard tier or higher.
When adding a new certificate, validate the new certificate by selectingValidate.
When adding a new certificate, validate the new certificate by selectingValidate.
SelectAdd.Once the operation is complete, the custom domain's TLS/SSL state is changed toSecured.
SelectAdd.
Once the operation is complete, the custom domain's TLS/SSL state is changed toSecured.

Note
ASecuredstate inCustom domainsmeans that a certificate is providing security, but App Service doesn't check if the certificate is self-signed or expired, for example, which can also cause browsers to show an error or warning.
Remap records for IP-based SSL
This step is needed only for IP-based SSL. For an SNI SSL binding, skip toTest HTTPS.
There are potentially two changes you need to make:
By default, your app uses a shared public IP address. When you bind a certificate with IP SSL, App Service creates a new, dedicated IP address for your app. If you mapped an A record to your app, update your domain registry with this new, dedicated IP address.Your app'sCustom domainpage is updated with the new, dedicated IP address. Copy this IP address, thenremap the A recordto this new IP address.
By default, your app uses a shared public IP address. When you bind a certificate with IP SSL, App Service creates a new, dedicated IP address for your app. If you mapped an A record to your app, update your domain registry with this new, dedicated IP address.
Your app'sCustom domainpage is updated with the new, dedicated IP address. Copy this IP address, thenremap the A recordto this new IP address.
If you have an SNI SSL binding to<app-name>.azurewebsites.net,remap any CNAME mappingto point tosni.<app-name>.azurewebsites.netinstead. (Add thesniprefix.)
If you have an SNI SSL binding to<app-name>.azurewebsites.net,remap any CNAME mappingto point tosni.<app-name>.azurewebsites.netinstead. (Add thesniprefix.)
<app-name>.azurewebsites.net
sni.<app-name>.azurewebsites.net
sni
Test HTTPS
Browse tohttps://<your.custom.domain>in various browsers to verify that your app appears.
https://<your.custom.domain>

Your application code can inspect the protocol via thex-appservice-protoheader. The header has a value ofhttporhttps.
x-appservice-proto
http
https
Note
If your app gives you certificate validation errors, you're probably using a self-signed certificate.
If that's not the case, you might have left out intermediate certificates when you exported your certificate to the PFX file.
Frequently asked questions
How do I make sure that the app's IP address doesn't change when I make changes to the certificate binding?
Can I disable the forced redirect from HTTP to HTTPS?
How can I change the minimum TLS versions for the app?
How do I handle TLS termination in App Service?

Your inbound IP address can change when you delete a binding, even if that binding is IP SSL. This is especially important when you renew a certificate that's already in an IP SSL binding. To avoid a change in your app's IP address, follow these steps, in order:
Upload the new certificate.
Bind the new certificate to the custom domain you want without deleting the old one. This action replaces the binding instead of removing the old one.
Delete the old certificate.

By default, App Service forces a redirect from HTTP requests to HTTPS. To disable this behavior, seeConfigure general settings.

Your app allowsTLS1.2 by default, which is the recommended TLS level by industry standards, such asPCI DSS. To enforce different TLS versions, seeConfigure general settings.

In App Service,TLS terminationhappens at the network load balancers, so all HTTPS requests reach your app as unencrypted HTTP requests. If your app logic needs to check if the user requests are encrypted, inspect theX-Forwarded-Protoheader.
X-Forwarded-Proto
Language-specific configuration guides, such as theLinux Node.js configurationguide, show how to detect an HTTPS session in your application code.
Automate with scripts
Bind a custom TLS/SSL certificate to a web app
$fqdn="<Replace with your custom domain name>"
$pfxPath="<Replace with path to your .PFX file>"
$pfxPassword="<Replace with your .PFX password>"
$webappname="mywebapp$(Get-Random)"
$location="West Europe"

# Create a resource group.
New-AzResourceGroup -Name $webappname -Location $location

# Create an App Service plan in Free tier.
New-AzAppServicePlan -Name $webappname -Location $location `
-ResourceGroupName $webappname -Tier Free

# Create a web app.
$webapp = New-AzWebApp -Name $webappname -Location $location -AppServicePlan $webappname `
-ResourceGroupName $webappname

Write-Host "Sign in to your domain provider's website and configure the following records:"
Write-Host "A CNAME record that maps $fqdn to $webappname.azurewebsites.net"
Write-Host "A TXT record that maps asuid.$fqdn to the domain verification ID $($webapp.CustomDomainVerificationId)"
Read-Host "Press [Enter] key when ready ..."

# Before continuing, go to your DNS configuration UI for your custom domain and follow the 
# instructions at https://aka.ms/appservicecustomdns to configure a CNAME record for the 
# hostname "www" and point it your web app's default domain name.

# Upgrade App Service plan to Basic tier (minimum required by custom SSL certificates)
Set-AzAppServicePlan -Name $webappname -ResourceGroupName $webappname `
-Tier Basic

# Add a custom domain name to the web app. 
Set-AzWebApp -Name $webappname -ResourceGroupName $webappname `
-HostNames @($fqdn,"$webappname.azurewebsites.net")

# Upload and bind the SSL certificate to the web app.
New-AzWebAppSSLBinding -WebAppName $webappname -ResourceGroupName $webappname -Name $fqdn `
-CertificateFilePath $pfxPath -CertificatePassword $pfxPassword -SslState SniEnabled
$fqdn="<Replace with your custom domain name>"
$pfxPath="<Replace with path to your .PFX file>"
$pfxPassword="<Replace with your .PFX password>"
$webappname="mywebapp$(Get-Random)"
$location="West Europe"

# Create a resource group.
New-AzResourceGroup -Name $webappname -Location $location

# Create an App Service plan in Free tier.
New-AzAppServicePlan -Name $webappname -Location $location `
-ResourceGroupName $webappname -Tier Free

# Create a web app.
$webapp = New-AzWebApp -Name $webappname -Location $location -AppServicePlan $webappname `
-ResourceGroupName $webappname

Write-Host "Sign in to your domain provider's website and configure the following records:"
Write-Host "A CNAME record that maps $fqdn to $webappname.azurewebsites.net"
Write-Host "A TXT record that maps asuid.$fqdn to the domain verification ID $($webapp.CustomDomainVerificationId)"
Read-Host "Press [Enter] key when ready ..."

# Before continuing, go to your DNS configuration UI for your custom domain and follow the 
# instructions at https://aka.ms/appservicecustomdns to configure a CNAME record for the 
# hostname "www" and point it your web app's default domain name.

# Upgrade App Service plan to Basic tier (minimum required by custom SSL certificates)
Set-AzAppServicePlan -Name $webappname -ResourceGroupName $webappname `
-Tier Basic

# Add a custom domain name to the web app. 
Set-AzWebApp -Name $webappname -ResourceGroupName $webappname `
-HostNames @($fqdn,"$webappname.azurewebsites.net")

# Upload and bind the SSL certificate to the web app.
New-AzWebAppSSLBinding -WebAppName $webappname -ResourceGroupName $webappname -Name $fqdn `
-CertificateFilePath $pfxPath -CertificatePassword $pfxPassword -SslState SniEnabled
Related content
Use a TLS/SSL certificate in your code in Azure App Service
Frequently asked questions about creating or deleting resources in Azure App Service
Feedback
Was this page helpful?
Additional resources