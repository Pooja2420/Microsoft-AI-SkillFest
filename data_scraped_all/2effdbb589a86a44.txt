Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
DevOps architecture design
Article
2025-02-12
15 contributors
In this article
The termDevOpsderives fromdevelopmentandoperations. It refers to the integration of development, quality assurance, and IT operations into a unified culture and set of processes for delivering software. For an overview of DevOps, seeWhat is DevOps?.
DevOps includes these activities and operations:
Continuous integration (CI)is the practice of merging all developer code into a central codebase frequently, and then performing automated build and test processes. The objectives are to quickly discover and correct code issues, to streamline deployment, and to ensure code quality. For more information, seeWhat is Continuous Integration?.
Continuous delivery (CD)is the practice of automatically building, testing, and deploying code to production-like environments. The objective is to ensure that code is always ready to deploy. Adding continuous delivery to create a full CI/CD pipeline helps you detect code defects as soon as possible. It also ensures that properly tested updates can be released in a short time. For more information, seeWhat is Continuous Delivery?.
Continuous deploymentis an additional process that automatically takes any updates that have passed through the CI/CD pipeline and deploys them into production. Continuous deployment requires robust automatic testing and advanced process planning. It might not be appropriate for all teams.
Continuous monitoringrefers to the process and technology required to incorporate monitoring across each phase of DevOps and IT operations lifecycles. Monitoring helps to ensure the health, performance, and reliability of your application and infrastructure as the application moves from development to production. Continuous monitoring builds on the concepts of CI and CD.
Introduction to DevOps on Azure
If you need to know more about DevOps, or DevOps on Azure, the best place to learn isMicrosoft Learn training. This free online platform provides interactive training for Microsoft products and more. There are videos, tutorials, and hands-on learning for specific products and services, plus learning paths based on job role, such as developer or data analyst. If you're not familiar with Learn you can takea tour of Microsoft Learn trainingora quick video tour of Microsoft Learn training.
After you're familiar with Azure, you can decide whether to follow learning paths specific to DevOps, such as:
Get started with Azure DevOps
Deploy applications with Azure DevOps
Build applications with Azure DevOps
Browse other training materials for DevOps
Path to production
Plan your path to production by reviewing:
DevOps guides
Azure services that are often used in implementing DevOps solutions
Example DevOps architectures
DevOps guides
Azure DevOps services
Example DevOps architectures
The DevOps architectures are found here:
Here are some example architectures. For each one there's a list of the key Azure services used in the architecture.
Best practices
TheMicrosoft Azure Well-Architected Frameworkprovides reference guidance and best practices that you can use to improve the quality of your architectures. The framework comprises five pillars: Reliability, Security, Cost Optimization, Operational Excellence, and Performance Efficiency. Here's where to find documentation of the pillars:
Reliability
Security
Cost Optimization
Operational Excellence
Performance Efficiency
The following articles are about best practices that are specific to DevOps and to some DevOps services.
DevOps
How Teams at Microsoft Embraced a DevOps Culture - Azure webinar series
Azure cloud migration best practices checklist
Resiliency checklist for specific Azure services
Continuous monitoring with Azure Monitor
Monitoring best practices for reliability in Azure applications
Overview of the Azure Security Benchmark (v1)
Azure Identity Management and access control security best practices
Security best practices
Azure security best practices and patterns
Azure operational security checklist
Azure security baseline for API Management
Secure development best practices on Azure
Azure Artifacts
Azure Artifacts: best practices
Azure Resource Manager
ARM template best practices
Best practices for Bicep
Stay current with DevOps
Stay current with Azure DevOps by monitoring these articles:
Azure DevOps Feature Timeline
Azure DevOps documentation - what's new?
Additional resources
Example solutions
Design a CI/CD pipeline using Azure DevOps
Manage Microsoft 365 tenant configuration by using Microsoft365DSC and Azure DevOps
AWS or Google Cloud professionals
AWS to Azure services comparison - DevOps and application monitoring
Google Cloud to Azure services comparison - DevOps and application monitoring
Feedback
Was this page helpful?
Additional resources