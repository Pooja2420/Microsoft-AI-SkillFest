Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Provision the Azure-SSIS integration runtime in Azure Data Factory
Article
2025-02-13
20 contributors
In this article
APPLIES TO:Azure Data FactoryAzure Synapse Analytics
Tip
Try outData Factory in Microsoft Fabric, an all-in-one analytics solution for enterprises.Microsoft Fabriccovers everything from data movement to data science, real-time analytics, business intelligence, and reporting. Learn how tostart a new trialfor free!
This tutorial provides steps for using the Azure portal to provision an Azure-SQL Server Integration Services (SSIS) integration runtime (IR) in Azure Data Factory (ADF). An Azure-SSIS IR supports:
Running packages deployed into SSIS catalog (SSISDB) hosted by Azure SQL Database server/Managed Instance (Project Deployment Model)
Running packages deployed into file system, Azure Files, or SQL Server database (MSDB) hosted by Azure SQL Managed Instance (Package Deployment Model)
After an Azure-SSIS IR is provisioned, you can use familiar tools to deploy and run your packages in Azure. These tools are already Azure-enabled and include SQL Server Data Tools (SSDT), SQL Server Management Studio (SSMS), and command-line utilities likedtutilandAzureDTExec.
For conceptual information on Azure-SSIS IRs, seeAzure-SSIS integration runtime overview.
In this tutorial, you complete the following steps:
Create a data factory.
Provision an Azure-SSIS integration runtime.
Prerequisites
Note
We recommend that you use the Azure Az PowerShell module to interact with Azure. To get started, seeInstall Azure PowerShell. To learn how to migrate to the Az PowerShell module, seeMigrate Azure PowerShell from AzureRM to Az.
Azure subscription. If you don't have an Azure subscription, create afree accountbefore you begin.
Azure subscription. If you don't have an Azure subscription, create afree accountbefore you begin.
Azure SQL Database server (optional). If you don't already have a database server, create one in the Azure portal before you get started. Data Factory will in turn create an SSISDB instance on this database server.We recommend that you create the database server in the same Azure region as the integration runtime. This configuration lets the integration runtime write execution logs into SSISDB without crossing Azure regions.Keep these points in mind:Based on the selected database server, the SSISDB instance can be created on your behalf as a single database, as part of an elastic pool, or in a managed instance. It can be accessible in a public network or by joining a virtual network. For guidance in choosing the type of database server to host SSISDB, seeCompare SQL Database and SQL Managed Instance.If you use an Azure SQL Database server with IP firewall rules/virtual network service endpoints or a managed instance with private endpoint to host SSISDB, or if you require access to on-premises data without configuring a self-hosted IR, you need to join your Azure-SSIS IR to a virtual network. For more information, seeCreate an Azure-SSIS IR in a virtual network.Confirm that theAllow access to Azure servicessetting is enabled for the database server. This setting isn't applicable when you use an Azure SQL Database server with IP firewall rules/virtual network service endpoints or a managed instance with private endpoint to host SSISDB. For more information, seeSecure Azure SQL Database. To enable this setting by using PowerShell, seeNew-AzSqlServerFirewallRule.Add the IP address of the client machine, or a range of IP addresses that includes the IP address of the client machine, to the client IP address list in the firewall settings for the database server. For more information, seeAzure SQL Database server-level and database-level firewall rules.You can connect to the database server by using SQL authentication with your server admin credentials, or by using Microsoft Entra authentication with the specified system/user-assigned managed identity for your data factory. For the latter, you need to add the specified system/user-assigned managed identity for your data factory into a Microsoft Entra group with access permissions to the database server. For more information, seeCreate an Azure-SSIS IR with Microsoft Entra authentication.Confirm that your database server doesn't have an SSISDB instance already. The provisioning of an Azure-SSIS IR doesn't support using an existing SSISDB instance.
Azure SQL Database server (optional). If you don't already have a database server, create one in the Azure portal before you get started. Data Factory will in turn create an SSISDB instance on this database server.
We recommend that you create the database server in the same Azure region as the integration runtime. This configuration lets the integration runtime write execution logs into SSISDB without crossing Azure regions.
Keep these points in mind:
Based on the selected database server, the SSISDB instance can be created on your behalf as a single database, as part of an elastic pool, or in a managed instance. It can be accessible in a public network or by joining a virtual network. For guidance in choosing the type of database server to host SSISDB, seeCompare SQL Database and SQL Managed Instance.If you use an Azure SQL Database server with IP firewall rules/virtual network service endpoints or a managed instance with private endpoint to host SSISDB, or if you require access to on-premises data without configuring a self-hosted IR, you need to join your Azure-SSIS IR to a virtual network. For more information, seeCreate an Azure-SSIS IR in a virtual network.
Based on the selected database server, the SSISDB instance can be created on your behalf as a single database, as part of an elastic pool, or in a managed instance. It can be accessible in a public network or by joining a virtual network. For guidance in choosing the type of database server to host SSISDB, seeCompare SQL Database and SQL Managed Instance.
If you use an Azure SQL Database server with IP firewall rules/virtual network service endpoints or a managed instance with private endpoint to host SSISDB, or if you require access to on-premises data without configuring a self-hosted IR, you need to join your Azure-SSIS IR to a virtual network. For more information, seeCreate an Azure-SSIS IR in a virtual network.
Confirm that theAllow access to Azure servicessetting is enabled for the database server. This setting isn't applicable when you use an Azure SQL Database server with IP firewall rules/virtual network service endpoints or a managed instance with private endpoint to host SSISDB. For more information, seeSecure Azure SQL Database. To enable this setting by using PowerShell, seeNew-AzSqlServerFirewallRule.
Confirm that theAllow access to Azure servicessetting is enabled for the database server. This setting isn't applicable when you use an Azure SQL Database server with IP firewall rules/virtual network service endpoints or a managed instance with private endpoint to host SSISDB. For more information, seeSecure Azure SQL Database. To enable this setting by using PowerShell, seeNew-AzSqlServerFirewallRule.
Add the IP address of the client machine, or a range of IP addresses that includes the IP address of the client machine, to the client IP address list in the firewall settings for the database server. For more information, seeAzure SQL Database server-level and database-level firewall rules.
Add the IP address of the client machine, or a range of IP addresses that includes the IP address of the client machine, to the client IP address list in the firewall settings for the database server. For more information, seeAzure SQL Database server-level and database-level firewall rules.
You can connect to the database server by using SQL authentication with your server admin credentials, or by using Microsoft Entra authentication with the specified system/user-assigned managed identity for your data factory. For the latter, you need to add the specified system/user-assigned managed identity for your data factory into a Microsoft Entra group with access permissions to the database server. For more information, seeCreate an Azure-SSIS IR with Microsoft Entra authentication.
You can connect to the database server by using SQL authentication with your server admin credentials, or by using Microsoft Entra authentication with the specified system/user-assigned managed identity for your data factory. For the latter, you need to add the specified system/user-assigned managed identity for your data factory into a Microsoft Entra group with access permissions to the database server. For more information, seeCreate an Azure-SSIS IR with Microsoft Entra authentication.
Confirm that your database server doesn't have an SSISDB instance already. The provisioning of an Azure-SSIS IR doesn't support using an existing SSISDB instance.
Confirm that your database server doesn't have an SSISDB instance already. The provisioning of an Azure-SSIS IR doesn't support using an existing SSISDB instance.
Note
For a list of Azure regions in which Data Factory and an Azure-SSIS IR are currently available, seeData Factory and SSIS IR availability by region.
Create a data factory
To create your data factory via the Azure portal, follow the step-by-step instructions inCreate a data factory via the UI. SelectPin to dashboardwhile doing so, to allow quick access after its creation.
After your data factory is created, open its overview page in the Azure portal. Select theOpen Azure Data Factory Studiotile to open theLet's get startedpage on a separate tab. There, you can continue to create your Azure-SSIS IR.
Create an Azure-SSIS integration runtime
From the Data Factory overview
On the home page, select theConfigure SSIStile.
On the home page, select theConfigure SSIStile.

For the remaining steps to set up an Azure-SSIS IR, see theProvision an Azure-SSIS integration runtimesection.
For the remaining steps to set up an Azure-SSIS IR, see theProvision an Azure-SSIS integration runtimesection.
From the authoring UI
In the Azure Data Factory UI, switch to theManagetab, and then switch to theIntegration runtimestab to view existing integration runtimes in your data factory.
In the Azure Data Factory UI, switch to theManagetab, and then switch to theIntegration runtimestab to view existing integration runtimes in your data factory.

SelectNewto create an Azure-SSIS IR and open theIntegration runtime setuppane.
SelectNewto create an Azure-SSIS IR and open theIntegration runtime setuppane.

In theIntegration runtime setuppane, select theLift-and-shift existing SSIS packages to execute in Azuretile, and then selectContinue.
In theIntegration runtime setuppane, select theLift-and-shift existing SSIS packages to execute in Azuretile, and then selectContinue.

For the remaining steps to set up an Azure-SSIS IR, see theProvision an Azure-SSIS integration runtimesection.
For the remaining steps to set up an Azure-SSIS IR, see theProvision an Azure-SSIS integration runtimesection.
Provision an Azure-SSIS integration runtime
TheIntegration runtime setuppane has three pages where you successively configure general, deployment, and advanced settings.
General settings page
On theGeneral settingspage ofIntegration runtime setuppane, complete the following steps.

ForName, enter the name of your integration runtime.
ForName, enter the name of your integration runtime.
ForDescription, enter the description of your integration runtime.
ForDescription, enter the description of your integration runtime.
ForLocation, select the location of your integration runtime. Only supported locations are displayed. We recommend that you select the same location of your database server to host SSISDB.
ForLocation, select the location of your integration runtime. Only supported locations are displayed. We recommend that you select the same location of your database server to host SSISDB.
ForNode Size, select the size of node in your integration runtime cluster. Only supported node sizes are displayed. Select a large node size (scale up) if you want to run many compute-intensive or memory-intensive packages.
ForNode Size, select the size of node in your integration runtime cluster. Only supported node sizes are displayed. Select a large node size (scale up) if you want to run many compute-intensive or memory-intensive packages.
ForNode Number, select the number of nodes in your integration runtime cluster. Only supported node numbers are displayed. Select a large cluster with many nodes (scale out) if you want to run many packages in parallel.
ForNode Number, select the number of nodes in your integration runtime cluster. Only supported node numbers are displayed. Select a large cluster with many nodes (scale out) if you want to run many packages in parallel.
ForEdition/License, select the SQL Server edition for your integration runtime: Standard or Enterprise. Select Enterprise if you want to use advanced features on your integration runtime.
ForEdition/License, select the SQL Server edition for your integration runtime: Standard or Enterprise. Select Enterprise if you want to use advanced features on your integration runtime.
ForSave Money, select the Azure Hybrid Benefit option for your integration runtime:YesorNo. SelectYesif you want to bring your own SQL Server license with Software Assurance to benefit from cost savings with hybrid use.
ForSave Money, select the Azure Hybrid Benefit option for your integration runtime:YesorNo. SelectYesif you want to bring your own SQL Server license with Software Assurance to benefit from cost savings with hybrid use.
SelectContinue.
SelectContinue.
Deployment settings page
On theDeployment settingspage ofIntegration runtime setuppane, you have the options to create SSISDB and or Azure-SSIS IR package stores.
On theDeployment settingspage ofIntegration runtime setuppane, select theCreate SSIS catalog (SSISDB) hosted by Azure SQL Database server/Managed Instance to store your projects/packages/environments/execution logscheck box in below scenarios:
Project Deployment Model. You deploy your packages into SSISDB.
Project Deployment Model. You deploy your packages into SSISDB.
Regardless of deployment model, using SQL Server Agent hosted by Azure SQL Managed Instance to orchestrate/schedule your package executions.For more information, seeSchedule SSIS package executions via  Azure SQL Managed Instance Agent.
Regardless of deployment model, using SQL Server Agent hosted by Azure SQL Managed Instance to orchestrate/schedule your package executions.
For more information, seeSchedule SSIS package executions via  Azure SQL Managed Instance Agent.
In below scenario, there is no need to create SSISDB nor select the check box:
Package Deployment Model and not using SQL Server Agent hosted by Azure SQL Managed Instance to orchestrate/schedule your package execution.You deploy your packages into file system, Azure Files, or SQL Server database (MSDB) hosted by Azure SQL Managed Instance (Package Deployment Model), and use Data Factory pipeline to orchestrate/schedule your package executions.
Package Deployment Model and not using SQL Server Agent hosted by Azure SQL Managed Instance to orchestrate/schedule your package execution.
You deploy your packages into file system, Azure Files, or SQL Server database (MSDB) hosted by Azure SQL Managed Instance (Package Deployment Model), and use Data Factory pipeline to orchestrate/schedule your package executions.
If you select the check box, complete the following steps to bring your own database server to host SSISDB that we'll create and manage on your behalf.

ForSubscription, select the Azure subscription that has your database server to host SSISDB.
ForSubscription, select the Azure subscription that has your database server to host SSISDB.
ForLocation, select the location of your database server to host SSISDB. We recommend that you select the same location of your integration runtime.
ForLocation, select the location of your database server to host SSISDB. We recommend that you select the same location of your integration runtime.
ForCatalog Database Server Endpoint, select the endpoint of your database server to host SSISDB.Based on the selected database server, the SSISDB instance can be created on your behalf as a single database, as part of an elastic pool, or in a managed instance. It can be accessible in a public network or by joining a virtual network. For guidance in choosing the type of database server to host SSISDB, seeCompare SQL Database and SQL Managed Instance.If you select an Azure SQL Database server with IP firewall rules/virtual network service endpoints or a managed instance with private endpoint to host SSISDB, or if you require access to on-premises data without configuring a self-hosted IR, you need to join your Azure-SSIS IR to a virtual network. For more information, seeCreate an Azure-SSIS IR in a virtual network.
ForCatalog Database Server Endpoint, select the endpoint of your database server to host SSISDB.
Based on the selected database server, the SSISDB instance can be created on your behalf as a single database, as part of an elastic pool, or in a managed instance. It can be accessible in a public network or by joining a virtual network. For guidance in choosing the type of database server to host SSISDB, seeCompare SQL Database and SQL Managed Instance.
If you select an Azure SQL Database server with IP firewall rules/virtual network service endpoints or a managed instance with private endpoint to host SSISDB, or if you require access to on-premises data without configuring a self-hosted IR, you need to join your Azure-SSIS IR to a virtual network. For more information, seeCreate an Azure-SSIS IR in a virtual network.
Select either theUse Microsoft Entra authentication with the system managed identity for Data FactoryorUse Microsoft Entra authentication with a user-assigned managed identity for Data Factorycheck box to choose Microsoft Entra authentication method for Azure-SSIS IR to access your database server that hosts SSISDB. Don't select any of the check boxes to choose SQL authentication method instead.If you select any of the check boxes, you'll need to add the specified system/user-assigned managed identity for your data factory into a Microsoft Entra group with access permissions to your database server. If you select theUse Microsoft Entra authentication with a user-assigned managed identity for Data Factorycheck box, you can then select any existing credentials created using your specified user-assigned managed identities or create new ones. For more information, seeCreate an Azure-SSIS IR with Microsoft Entra authentication.
Select either theUse Microsoft Entra authentication with the system managed identity for Data FactoryorUse Microsoft Entra authentication with a user-assigned managed identity for Data Factorycheck box to choose Microsoft Entra authentication method for Azure-SSIS IR to access your database server that hosts SSISDB. Don't select any of the check boxes to choose SQL authentication method instead.
If you select any of the check boxes, you'll need to add the specified system/user-assigned managed identity for your data factory into a Microsoft Entra group with access permissions to your database server. If you select theUse Microsoft Entra authentication with a user-assigned managed identity for Data Factorycheck box, you can then select any existing credentials created using your specified user-assigned managed identities or create new ones. For more information, seeCreate an Azure-SSIS IR with Microsoft Entra authentication.
ForAdmin Username, enter the SQL authentication username for your database server that hosts SSISDB.
ForAdmin Username, enter the SQL authentication username for your database server that hosts SSISDB.
ForAdmin Password, enter the SQL authentication password for your database server that hosts SSISDB.
ForAdmin Password, enter the SQL authentication password for your database server that hosts SSISDB.
Select theUse dual standby Azure-SSIS Integration Runtime pair with SSISDB failovercheck box to configure a dual standby Azure SSIS IR pair that works in sync with Azure SQL Database/Managed Instance failover group for business continuity and disaster recovery (BCDR).If you select the check box, enter a name to identify your pair of primary and secondary Azure-SSIS IRs in theDual standby pair nametext box. You need to enter the same pair name when creating your primary and secondary Azure-SSIS IRs.For more information, seeConfigure your Azure-SSIS IR for BCDR.
Select theUse dual standby Azure-SSIS Integration Runtime pair with SSISDB failovercheck box to configure a dual standby Azure SSIS IR pair that works in sync with Azure SQL Database/Managed Instance failover group for business continuity and disaster recovery (BCDR).
If you select the check box, enter a name to identify your pair of primary and secondary Azure-SSIS IRs in theDual standby pair nametext box. You need to enter the same pair name when creating your primary and secondary Azure-SSIS IRs.
For more information, seeConfigure your Azure-SSIS IR for BCDR.
ForCatalog Database Service Tier, select the service tier for your database server to host SSISDB. Select the Basic, Standard, or Premium tier, or select an elastic pool name.
ForCatalog Database Service Tier, select the service tier for your database server to host SSISDB. Select the Basic, Standard, or Premium tier, or select an elastic pool name.
SelectTest connectionwhen applicable and if it's successful, selectContinue.
On theDeployment settingspage ofIntegration runtime setuppane, if you want to manage your packages that are deployed into MSDB, file system, or Azure Files (Package Deployment Model) with Azure-SSIS IR package stores, select theCreate package stores to manage your packages that are deployed into file system/Azure Files/SQL Server database (MSDB) hosted by Azure SQL Managed Instancecheck box.
Azure-SSIS IR package store allows you to import/export/delete/run packages and monitor/stop running packages via SSMS similar to thelegacy SSIS package store. For more information, seeManage SSIS packages with Azure-SSIS IR package stores.
If you select this check box, you can add multiple package stores to your Azure-SSIS IR by selectingNew. Conversely, one package store can be shared by multiple Azure-SSIS IRs.

On theAdd package storepane, complete the following steps.
ForPackage store name, enter the name of your package store.
ForPackage store name, enter the name of your package store.
ForPackage store linked service, select your existing linked service that stores the access information for file system/Azure Files/Azure SQL Managed Instance where your packages are deployed or create a new one by selectingNew. On theNew linked servicepane, complete the following steps.NoteYou can use eitherAzure File StorageorFile Systemlinked services to access Azure Files. If you useAzure File Storagelinked service, Azure-SSIS IR package store supports onlyBasic(notAccount keynorSAS URI) authentication method for now.ForName, enter the name of your linked service.ForDescription, enter the description of your linked service.ForType, selectAzure File Storage,Azure SQL Managed Instance, orFile System.You can ignoreConnect via integration runtime, since we always use your Azure-SSIS IR to fetch the access information for package stores.If you selectAzure File Storage,  forAuthentication method, selectBasic, and then complete the following steps.ForAccount selection method, selectFrom Azure subscriptionorEnter manually.If you selectFrom Azure subscription, select the relevantAzure subscription,Storage account name, andFile share.If you selectEnter manually, enter\\<storage account name>.file.core.windows.net\<file share name>forHost,Azure\<storage account name>forUsername, and<storage account key>forPasswordor select yourAzure Key Vaultwhere it's stored as a secret.If you selectAzure SQL Managed Instance, complete the following steps.SelectConnection stringor yourAzure Key Vaultwhere it's stored as a secret.If you selectConnection string, complete the following steps.ForAccount selection method, if you chooseFrom Azure subscription, select the relevantAzure subscription,Server name,Endpoint typeandDatabase name. If you chooseEnter manually, complete the following steps.ForFully qualified domain name, enter<server name>.<dns prefix>.database.windows.netor<server name>.public.<dns prefix>.database.windows.net,3342as the private or public endpoint of your Azure SQL Managed Instance, respectively. If you enter the private endpoint,Test connectionisn't applicable, since ADF UI can't reach it.ForDatabase name, entermsdb.ForAuthentication type, selectSQL Authentication,Managed Identity,Service Principal, orUser-Assigned Managed Identity.If you selectSQL Authentication, enter the relevantUsernameandPasswordor select yourAzure Key Vaultwhere it's stored as a secret.If you selectManaged Identity, grant the system managed identity for your ADF access to your Azure SQL Managed Instance.If you selectService Principal, enter the relevantService principal IDandService principal keyor select yourAzure Key Vaultwhere it's stored as a secret.If you selectUser-Assigned Managed Identity, grant the specified user-assigned managed identity for your ADF access to your Azure SQL Managed Instance. You can then select any existing credentials created using your specified user-assigned managed identities or create new ones.If you selectFile system, enter the UNC path of folder where your packages are deployed forHost, as well as the relevantUsernameandPasswordor select yourAzure Key Vaultwhere it's stored as a secret.SelectTest connectionwhen applicable and if it's successful, selectCreate.
ForPackage store linked service, select your existing linked service that stores the access information for file system/Azure Files/Azure SQL Managed Instance where your packages are deployed or create a new one by selectingNew. On theNew linked servicepane, complete the following steps.
Note
You can use eitherAzure File StorageorFile Systemlinked services to access Azure Files. If you useAzure File Storagelinked service, Azure-SSIS IR package store supports onlyBasic(notAccount keynorSAS URI) authentication method for now.

ForName, enter the name of your linked service.
ForName, enter the name of your linked service.
ForDescription, enter the description of your linked service.
ForDescription, enter the description of your linked service.
ForType, selectAzure File Storage,Azure SQL Managed Instance, orFile System.
ForType, selectAzure File Storage,Azure SQL Managed Instance, orFile System.
You can ignoreConnect via integration runtime, since we always use your Azure-SSIS IR to fetch the access information for package stores.
You can ignoreConnect via integration runtime, since we always use your Azure-SSIS IR to fetch the access information for package stores.
If you selectAzure File Storage,  forAuthentication method, selectBasic, and then complete the following steps.ForAccount selection method, selectFrom Azure subscriptionorEnter manually.If you selectFrom Azure subscription, select the relevantAzure subscription,Storage account name, andFile share.If you selectEnter manually, enter\\<storage account name>.file.core.windows.net\<file share name>forHost,Azure\<storage account name>forUsername, and<storage account key>forPasswordor select yourAzure Key Vaultwhere it's stored as a secret.
If you selectAzure File Storage,  forAuthentication method, selectBasic, and then complete the following steps.
ForAccount selection method, selectFrom Azure subscriptionorEnter manually.
ForAccount selection method, selectFrom Azure subscriptionorEnter manually.
If you selectFrom Azure subscription, select the relevantAzure subscription,Storage account name, andFile share.
If you selectFrom Azure subscription, select the relevantAzure subscription,Storage account name, andFile share.
If you selectEnter manually, enter\\<storage account name>.file.core.windows.net\<file share name>forHost,Azure\<storage account name>forUsername, and<storage account key>forPasswordor select yourAzure Key Vaultwhere it's stored as a secret.
If you selectEnter manually, enter\\<storage account name>.file.core.windows.net\<file share name>forHost,Azure\<storage account name>forUsername, and<storage account key>forPasswordor select yourAzure Key Vaultwhere it's stored as a secret.
\\<storage account name>.file.core.windows.net\<file share name>
Azure\<storage account name>
<storage account key>
If you selectAzure SQL Managed Instance, complete the following steps.SelectConnection stringor yourAzure Key Vaultwhere it's stored as a secret.If you selectConnection string, complete the following steps.ForAccount selection method, if you chooseFrom Azure subscription, select the relevantAzure subscription,Server name,Endpoint typeandDatabase name. If you chooseEnter manually, complete the following steps.ForFully qualified domain name, enter<server name>.<dns prefix>.database.windows.netor<server name>.public.<dns prefix>.database.windows.net,3342as the private or public endpoint of your Azure SQL Managed Instance, respectively. If you enter the private endpoint,Test connectionisn't applicable, since ADF UI can't reach it.ForDatabase name, entermsdb.ForAuthentication type, selectSQL Authentication,Managed Identity,Service Principal, orUser-Assigned Managed Identity.If you selectSQL Authentication, enter the relevantUsernameandPasswordor select yourAzure Key Vaultwhere it's stored as a secret.If you selectManaged Identity, grant the system managed identity for your ADF access to your Azure SQL Managed Instance.If you selectService Principal, enter the relevantService principal IDandService principal keyor select yourAzure Key Vaultwhere it's stored as a secret.If you selectUser-Assigned Managed Identity, grant the specified user-assigned managed identity for your ADF access to your Azure SQL Managed Instance. You can then select any existing credentials created using your specified user-assigned managed identities or create new ones.
If you selectAzure SQL Managed Instance, complete the following steps.
SelectConnection stringor yourAzure Key Vaultwhere it's stored as a secret.
SelectConnection stringor yourAzure Key Vaultwhere it's stored as a secret.
If you selectConnection string, complete the following steps.ForAccount selection method, if you chooseFrom Azure subscription, select the relevantAzure subscription,Server name,Endpoint typeandDatabase name. If you chooseEnter manually, complete the following steps.ForFully qualified domain name, enter<server name>.<dns prefix>.database.windows.netor<server name>.public.<dns prefix>.database.windows.net,3342as the private or public endpoint of your Azure SQL Managed Instance, respectively. If you enter the private endpoint,Test connectionisn't applicable, since ADF UI can't reach it.ForDatabase name, entermsdb.ForAuthentication type, selectSQL Authentication,Managed Identity,Service Principal, orUser-Assigned Managed Identity.If you selectSQL Authentication, enter the relevantUsernameandPasswordor select yourAzure Key Vaultwhere it's stored as a secret.If you selectManaged Identity, grant the system managed identity for your ADF access to your Azure SQL Managed Instance.If you selectService Principal, enter the relevantService principal IDandService principal keyor select yourAzure Key Vaultwhere it's stored as a secret.If you selectUser-Assigned Managed Identity, grant the specified user-assigned managed identity for your ADF access to your Azure SQL Managed Instance. You can then select any existing credentials created using your specified user-assigned managed identities or create new ones.
If you selectConnection string, complete the following steps.
ForAccount selection method, if you chooseFrom Azure subscription, select the relevantAzure subscription,Server name,Endpoint typeandDatabase name. If you chooseEnter manually, complete the following steps.ForFully qualified domain name, enter<server name>.<dns prefix>.database.windows.netor<server name>.public.<dns prefix>.database.windows.net,3342as the private or public endpoint of your Azure SQL Managed Instance, respectively. If you enter the private endpoint,Test connectionisn't applicable, since ADF UI can't reach it.ForDatabase name, entermsdb.
ForAccount selection method, if you chooseFrom Azure subscription, select the relevantAzure subscription,Server name,Endpoint typeandDatabase name. If you chooseEnter manually, complete the following steps.
ForFully qualified domain name, enter<server name>.<dns prefix>.database.windows.netor<server name>.public.<dns prefix>.database.windows.net,3342as the private or public endpoint of your Azure SQL Managed Instance, respectively. If you enter the private endpoint,Test connectionisn't applicable, since ADF UI can't reach it.
ForFully qualified domain name, enter<server name>.<dns prefix>.database.windows.netor<server name>.public.<dns prefix>.database.windows.net,3342as the private or public endpoint of your Azure SQL Managed Instance, respectively. If you enter the private endpoint,Test connectionisn't applicable, since ADF UI can't reach it.
<server name>.<dns prefix>.database.windows.net
<server name>.public.<dns prefix>.database.windows.net,3342
ForDatabase name, entermsdb.
ForDatabase name, entermsdb.
msdb
ForAuthentication type, selectSQL Authentication,Managed Identity,Service Principal, orUser-Assigned Managed Identity.If you selectSQL Authentication, enter the relevantUsernameandPasswordor select yourAzure Key Vaultwhere it's stored as a secret.If you selectManaged Identity, grant the system managed identity for your ADF access to your Azure SQL Managed Instance.If you selectService Principal, enter the relevantService principal IDandService principal keyor select yourAzure Key Vaultwhere it's stored as a secret.If you selectUser-Assigned Managed Identity, grant the specified user-assigned managed identity for your ADF access to your Azure SQL Managed Instance. You can then select any existing credentials created using your specified user-assigned managed identities or create new ones.
ForAuthentication type, selectSQL Authentication,Managed Identity,Service Principal, orUser-Assigned Managed Identity.
If you selectSQL Authentication, enter the relevantUsernameandPasswordor select yourAzure Key Vaultwhere it's stored as a secret.
If you selectSQL Authentication, enter the relevantUsernameandPasswordor select yourAzure Key Vaultwhere it's stored as a secret.
If you selectManaged Identity, grant the system managed identity for your ADF access to your Azure SQL Managed Instance.
If you selectManaged Identity, grant the system managed identity for your ADF access to your Azure SQL Managed Instance.
If you selectService Principal, enter the relevantService principal IDandService principal keyor select yourAzure Key Vaultwhere it's stored as a secret.
If you selectService Principal, enter the relevantService principal IDandService principal keyor select yourAzure Key Vaultwhere it's stored as a secret.
If you selectUser-Assigned Managed Identity, grant the specified user-assigned managed identity for your ADF access to your Azure SQL Managed Instance. You can then select any existing credentials created using your specified user-assigned managed identities or create new ones.
If you selectUser-Assigned Managed Identity, grant the specified user-assigned managed identity for your ADF access to your Azure SQL Managed Instance. You can then select any existing credentials created using your specified user-assigned managed identities or create new ones.
If you selectFile system, enter the UNC path of folder where your packages are deployed forHost, as well as the relevantUsernameandPasswordor select yourAzure Key Vaultwhere it's stored as a secret.
If you selectFile system, enter the UNC path of folder where your packages are deployed forHost, as well as the relevantUsernameandPasswordor select yourAzure Key Vaultwhere it's stored as a secret.
SelectTest connectionwhen applicable and if it's successful, selectCreate.
SelectTest connectionwhen applicable and if it's successful, selectCreate.
Your added package stores will appear on theDeployment settingspage. To remove them, select their check boxes, and then selectDelete.
Your added package stores will appear on theDeployment settingspage. To remove them, select their check boxes, and then selectDelete.
SelectTest connectionwhen applicable and if it's successful, selectContinue.
Advanced settings page
On theAdvanced settingspage ofIntegration runtime setuppane, complete the following steps.

ForMaximum Parallel Executions Per Node, select the maximum number of packages to run concurrently per node in your integration runtime cluster. Only supported package numbers are displayed. Select a low number if you want to use more than one core to run a single large package that's compute or memory intensive. Select a high number if you want to run one or more small packages in a single core.
ForMaximum Parallel Executions Per Node, select the maximum number of packages to run concurrently per node in your integration runtime cluster. Only supported package numbers are displayed. Select a low number if you want to use more than one core to run a single large package that's compute or memory intensive. Select a high number if you want to run one or more small packages in a single core.
Select theCustomize your Azure-SSIS Integration Runtime with additional system configurations/component installationscheck box to choose whether you want to add standard/express custom setups on your Azure-SSIS IR. For more information, seeCustom setup for an Azure-SSIS IR.
Select theCustomize your Azure-SSIS Integration Runtime with additional system configurations/component installationscheck box to choose whether you want to add standard/express custom setups on your Azure-SSIS IR. For more information, seeCustom setup for an Azure-SSIS IR.
Select theSelect a VNet for your Azure-SSIS Integration Runtime to join, allow ADF to create certain network resources, and optionally bring your own static public IP addressescheck box to choose whether you want to join your Azure-SSIS IR to a virtual network.Select it if you use an Azure SQL Database server with IP firewall rules/virtual network service endpoints or a managed instance with private endpoint to host SSISDB, or if you require access to on-premises data without configuring a self-hosted IR. For more information, seeCreate an Azure-SSIS IR in a virtual network.
Select theSelect a VNet for your Azure-SSIS Integration Runtime to join, allow ADF to create certain network resources, and optionally bring your own static public IP addressescheck box to choose whether you want to join your Azure-SSIS IR to a virtual network.
Select it if you use an Azure SQL Database server with IP firewall rules/virtual network service endpoints or a managed instance with private endpoint to host SSISDB, or if you require access to on-premises data without configuring a self-hosted IR. For more information, seeCreate an Azure-SSIS IR in a virtual network.
Select theSet up Self-Hosted Integration Runtime as a proxy for your Azure-SSIS Integration Runtimecheck box to choose whether you want to configure a self-hosted IR as proxy for your Azure-SSIS IR. For more information, seeSet up a self-hosted IR as proxy.
Select theSet up Self-Hosted Integration Runtime as a proxy for your Azure-SSIS Integration Runtimecheck box to choose whether you want to configure a self-hosted IR as proxy for your Azure-SSIS IR. For more information, seeSet up a self-hosted IR as proxy.
SelectContinue.
SelectContinue.
On theSummarypage ofIntegration runtime setuppane, review all provisioning settings, bookmark the recommended documentation links, and selectCreateto start the creation of your integration runtime.
Note
Excluding any custom setup time, and SSIS IR is not using standard VNet injection, this process will finish within 5 minutes in most cases.
If you use SSISDB, the Data Factory service will connect to your database server to prepare SSISDB.
When you provision an Azure-SSIS IR, Access Redistributable and Azure Feature Pack for SSIS are also installed. These components provide connectivity to Excel files, Access files, and various Azure data sources, in addition to the data sources that built-in components already support. For more information about built-in/preinstalled components, seeBuilt-in/preinstalled components on Azure-SSIS IR. For more information about additional components that you can install, seeCustom setups for Azure-SSIS IR.
Connections pane
On theConnectionspane ofManagehub, switch to theIntegration runtimespage and selectRefresh.

You can edit/reconfigure your Azure-SSIS IR by selecting its name. You can also select the relevant buttons to monitor/start/stop/delete your Azure-SSIS IR, auto-generate an ADF pipeline with Execute SSIS Package activity to run on your Azure-SSIS IR, and view the JSON code/payload of your Azure-SSIS IR.  Editing/deleting your Azure-SSIS IR can only be done when it's stopped.
Deploy SSIS packages
If you use SSISDB, you can deploy your packages into it and run them on your Azure-SSIS IR by using the Azure-enabled SSDT or SSMS tools. These tools connect to your database server via its server endpoint:
For an Azure SQL Database server, the server endpoint format is<server name>.database.windows.net.
<server name>.database.windows.net
For a managed instance with private endpoint, the server endpoint format is<server name>.<dns prefix>.database.windows.net.
<server name>.<dns prefix>.database.windows.net
For a managed instance with public endpoint, the server endpoint format is<server name>.public.<dns prefix>.database.windows.net,3342.
<server name>.public.<dns prefix>.database.windows.net,3342
If you don't use SSISDB, you can deploy your packages into file system, Azure Files, or MSDB hosted by your Azure SQL Managed Instance and run them on your Azure-SSIS IR by usingdtutilandAzureDTExeccommand-line utilities.
For more information, seeDeploy SSIS projects/packages.
In both cases, you can also run your deployed packages on Azure-SSIS IR by using the Execute SSIS Package activity in Data Factory pipelines. For more information, seeInvoke SSIS package execution as a first-class Data Factory activity.
See also the following SSIS documentation:
Deploy, run, and monitor SSIS packages in Azure
Connect to SSISDB in Azure
Schedule package executions in Azure
Connect to on-premises data sources with Windows authentication
Related content
To learn about customizing your Azure-SSIS integration runtime, advance to the following article:
Customize an Azure-SSIS IR
Feedback
Was this page helpful?
Additional resources