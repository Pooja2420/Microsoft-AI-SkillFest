Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Release gates and approvals overview
Article
2024-03-25
15 contributors
In this article
Azure DevOps Services | Azure DevOps Server 2022 - Azure DevOps Server 2019
Release pipelines enable teams to continuously deploy their application across different stages with lower risk and with faster pace. Deployments to each stage can be fully automated by using jobs and tasks.
Teams can also take advantage of the Approvals and Gates feature to control the workflow of the deployment pipeline. Each stage in a release pipeline can be configured with pre-deployment and post-deployment conditions that can include waiting for users to manually approve or reject deployments, and checking with other automated systems that specific conditions are met. In addition, teams can configure manual validations to pause the deployment pipeline and prompt users to carry out manual tasks then resume or reject the deployment.
The following diagram illustrates the release pipeline workflow.

By using gates, approvals, and manual intervention you can take full control of your releases to meet a wide range of deployment requirements. Typical scenarios where approvals, gates, and manual intervention are useful include the following.

You can combine all three techniques within a release pipeline to fully achieve your own deployment requirements.
In addition, you can install an extension that integrates withServiceNowto help you control and manage your deployments through Service Management methodologies such as ITIL. For more information, seeIntegrate with ServiceNow change management.
Note
The time delay before pre-deployment gates are executed is capped at 48 hours. If you need to delay the overall launch of your gates instead, it is recommended to use adelay taskin your release pipeline.
YAML
Classic
# Delay further execution of a workflow by a fixed time
pool: server
steps:
- task: Delay@1
  displayName: 'Delay by 5 minutes'
  inputs:
    delayForMinutes: 5
# Delay further execution of a workflow by a fixed time
pool: server
steps:
- task: Delay@1
  displayName: 'Delay by 5 minutes'
  inputs:
    delayForMinutes: 5
From your pipeline definition, select the ellipsis button (...), and then selectAdd an agentless job.
From your pipeline definition, select the ellipsis button (...), and then selectAdd an agentless job.
In your new agentless job, select the+sign to add a new task.
In your new agentless job, select the+sign to add a new task.
+
Search for theDelaytask. SelectAddto add it to your agentless job.
Search for theDelaytask. SelectAddto add it to your agentless job.
Enter theDelay Timein minutes.
Enter theDelay Timein minutes.
SelectSave & queuewhen you are done.
SelectSave & queuewhen you are done.

Note
Thedelay taskcan only be used in anagentless job.
Related articles
Release deployment control using approvals
Release deployment control using gates
Configure a manual intervention
Add stages, dependencies, & conditions
Release triggers
Releases in Azure Pipelines
Next steps
Define approvals and checksUse approvals and gates to control your deployment
Feedback
Was this page helpful?
Additional resources