Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Azure Synapse Analytics â Workload Management Portal Monitoring
Article
2024-07-22
9 contributors
In this article
This article explains how to monitorworkload groupresource utilization and query activity.
For details on how to configure the Azure Metrics Explorer see theAnalyze metrics with Azure Monitor metrics explorerarticle. See theResource utilizationsection in Azure Synapse Analytics Monitoring documentation for details on how to monitor system resource consumption.
There are two different categories of workload group metrics provided for monitoring workload management: resource allocation and query activity. These metrics can be split and filtered by workload group. The metrics can be split and filtered based on if they're system defined (resource class workload groups) or user-defined (created by user withCREATE WORKLOAD GROUPsyntax).
Workload management metric definitions
For a description of workload management metrics, see theSQL dedicated pool - Workload managemententries inSupported metrics for Microsoft.Synapse/workspaces/sqlPools.
Monitoring scenarios and actions
Below are a series of chart configurations to highlight workload management metric usage for troubleshooting along with associated actions to address the issue.
Underutilized workload isolation
Consider the following workload group and classifier configuration where a workload group namedwgPriorityis created andTheCEOmembernameis mapped to it using thewcCEOPriorityworkload classifier. ThewgPriorityworkload group has 25% workload isolation configured for it (MIN_PERCENTAGE_RESOURCE= 25). Each query submitted byTheCEOis given 5% of system resources (REQUEST_MIN_RESOURCE_GRANT_PERCENT= 5).
wgPriority
membername
wcCEOPriority
wgPriority
MIN_PERCENTAGE_RESOURCE
REQUEST_MIN_RESOURCE_GRANT_PERCENT
CREATE WORKLOAD GROUP wgPriority
WITH ( MIN_PERCENTAGE_RESOURCE = 25
      ,CAP_PERCENTAGE_RESOURCE = 50
      ,REQUEST_MIN_RESOURCE_GRANT_PERCENT = 5);

CREATE WORKLOAD CLASSIFIER wcCEOPriority
WITH ( WORKLOAD_GROUP = 'wgPriority'
      ,MEMBERNAME = 'TheCEO');
CREATE WORKLOAD GROUP wgPriority
WITH ( MIN_PERCENTAGE_RESOURCE = 25
      ,CAP_PERCENTAGE_RESOURCE = 50
      ,REQUEST_MIN_RESOURCE_GRANT_PERCENT = 5);

CREATE WORKLOAD CLASSIFIER wcCEOPriority
WITH ( WORKLOAD_GROUP = 'wgPriority'
      ,MEMBERNAME = 'TheCEO');
The below chart is configured as follows:Metric 1:Effective min resource percent(Avg aggregation,blue line)Metric 2:Workload group allocation by system percent(Avg aggregation,purple line)Filter: [Workload Group] =wgPriorityThe chart shows that with 25% workload isolation, only 10% is being used on average. In this case, theMIN_PERCENTAGE_RESOURCEparameter value could be lowered to between 10 or 15 and allow for other workloads on the system to consume the resources.
blue line
purple line
wgPriority
MIN_PERCENTAGE_RESOURCE
Workload group bottleneck
Consider the following workload group and classifier configuration where a workload group namedwgDataAnalystis created and theDataAnalystmembernameis mapped to it using thewcDataAnalystworkload classifier. ThewgDataAnalystworkload group has 6% workload isolation configured for it (MIN_PERCENTAGE_RESOURCE= 6) and a resource limit of 9% (CAP_PERCENTAGE_RESOURCE= 9). Each query submitted by theDataAnalystis given 3% of system resources (REQUEST_MIN_RESOURCE_GRANT_PERCENT= 3).
wgDataAnalyst
membername
wcDataAnalyst
wgDataAnalyst
MIN_PERCENTAGE_RESOURCE
CAP_PERCENTAGE_RESOURCE
REQUEST_MIN_RESOURCE_GRANT_PERCENT
CREATE WORKLOAD GROUP wgDataAnalyst  
WITH ( MIN_PERCENTAGE_RESOURCE = 6
      ,CAP_PERCENTAGE_RESOURCE = 9
      ,REQUEST_MIN_RESOURCE_GRANT_PERCENT = 3);

CREATE WORKLOAD CLASSIFIER wcDataAnalyst
WITH ( WORKLOAD_GROUP = 'wgDataAnalyst'
      ,MEMBERNAME = 'DataAnalyst');
CREATE WORKLOAD GROUP wgDataAnalyst  
WITH ( MIN_PERCENTAGE_RESOURCE = 6
      ,CAP_PERCENTAGE_RESOURCE = 9
      ,REQUEST_MIN_RESOURCE_GRANT_PERCENT = 3);

CREATE WORKLOAD CLASSIFIER wcDataAnalyst
WITH ( WORKLOAD_GROUP = 'wgDataAnalyst'
      ,MEMBERNAME = 'DataAnalyst');
The below chart is configured as follows:Metric 1:Effective cap resource percent(Avg aggregation,blue line)Metric 2:Workload group allocation by cap resource percent(Avg aggregation,purple line)Metric 3:Workload group queued queries(Sum aggregation,turquoise line)Filter: [Workload Group] =wgDataAnalystThe chart shows that with a 9% cap on resources, the workload group is 90%+ utilized (from theWorkload group allocation by cap resource percent metric). There's a steady queuing of queries as shown from theWorkload group queued queries metric. In this case, increasing theCAP_PERCENTAGE_RESOURCEto a value higher than 9% allows more queries to execute concurrently. Increasing theCAP_PERCENTAGE_RESOURCEassumes that there are enough resources available and not isolated by other workload groups. Verify the cap increased by checking theEffective cap resource percent metric. If more throughput is desired, also consider increasing theREQUEST_MIN_RESOURCE_GRANT_PERCENTto a value greater than3. Increasing theREQUEST_MIN_RESOURCE_GRANT_PERCENTcould allow queries to run faster.
blue line
purple line
turquoise line
wgDataAnalyst
CAP_PERCENTAGE_RESOURCE
CAP_PERCENTAGE_RESOURCE
REQUEST_MIN_RESOURCE_GRANT_PERCENT
REQUEST_MIN_RESOURCE_GRANT_PERCENT
Next steps
Quickstart: Configure workload isolation using T-SQL
CREATE WORKLOAD GROUP (Transact-SQL)
CREATE WORKLOAD CLASSIFIER (Transact-SQL)
Monitoring resource utilization
Feedback
Was this page helpful?
Additional resources