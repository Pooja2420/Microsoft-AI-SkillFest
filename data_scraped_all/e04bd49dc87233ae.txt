Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
ARM template deployment what-if operation
Article
2024-03-20
9 contributors
In this article
Before deploying an Azure Resource Manager template (ARM template), you can preview the changes that will happen. Azure Resource Manager provides the what-if operation to let you see how resources will change if you deploy the template. The what-if operation doesn't make any changes to existing resources. Instead, it predicts the changes if the specified template is deployed.
You can use the what-if operation with Azure PowerShell, Azure CLI, or REST API operations. What-if is supported for resource group, subscription, management group, and tenant level deployments.
Training resources
To learn more about what-if, and for hands-on guidance, seePreview Azure deployment changes by using what-if.
Required permissions
To deploy a Bicep file or ARM template, you need write access on the resources you're deploying and access to all operations on the Microsoft.Resources/deployments resource type. For example, to deploy a virtual machine, you needMicrosoft.Compute/virtualMachines/writeandMicrosoft.Resources/deployments/*permissions.  The what-if operation has the same permission requirements.
Microsoft.Compute/virtualMachines/write
Microsoft.Resources/deployments/*
For a list of roles and permissions, seeAzure built-in roles.
What-if limits
What-if expands nested templates until these limits are reached:
500 nested templates.
800 resource groups in a cross resource-group deployment.
5 minutes taken for expanding the nested templates.
When one of the limits is reached, the remaining resources'change typeis set toIgnore.
Install Azure PowerShell module
To use what-if in PowerShell, you must have version4.2 or later of the Az module.
To install the module, use:
Install-Module -Name Az -Force
Install-Module -Name Az -Force
For more information about installing modules, seeInstall Azure PowerShell.
Install Azure CLI module
To use what-if in Azure CLI, you must have Azure CLI 2.14.0 or later. If needed,install the latest version of Azure CLI.
See results
When you use what-if in PowerShell or Azure CLI, the output includes color-coded results that help you see the different types of changes.

The text output is:
Resource and property changes are indicated with these symbols:
  - Delete
  + Create
  ~ Modify

The deployment will update the following scope:

Scope: /subscriptions/./resourceGroups/ExampleGroup

  ~ Microsoft.Network/virtualNetworks/vnet-001 [2018-10-01]
    - tags.Owner: "Team A"
    ~ properties.addressSpace.addressPrefixes: [
      - 0: "10.0.0.0/16"
      + 0: "10.0.0.0/15"
      ]
    ~ properties.subnets: [
      - 0:

          name:                     "subnet001"
          properties.addressPrefix: "10.0.0.0/24"

      ]

Resource changes: 1 to modify.
Resource and property changes are indicated with these symbols:
  - Delete
  + Create
  ~ Modify

The deployment will update the following scope:

Scope: /subscriptions/./resourceGroups/ExampleGroup

  ~ Microsoft.Network/virtualNetworks/vnet-001 [2018-10-01]
    - tags.Owner: "Team A"
    ~ properties.addressSpace.addressPrefixes: [
      - 0: "10.0.0.0/16"
      + 0: "10.0.0.0/15"
      ]
    ~ properties.subnets: [
      - 0:

          name:                     "subnet001"
          properties.addressPrefix: "10.0.0.0/24"

      ]

Resource changes: 1 to modify.
Note
The what-if operation can't resolve thereference function. Every time you set a property to a template expression that includes the reference function, what-if reports the property will change. This behavior happens because what-if compares the current value of the property (such astrueorfalsefor a boolean value) with the unresolved template expression. Obviously, these values will not match. When you deploy the template, the property will only change when the template expression resolves to a different value.
true
false
What-if commands
Azure PowerShell
To preview changes before deploying a template, useNew-AzResourceGroupDeploymentorNew-AzSubscriptionDeployment. Add the-Whatifswitch parameter to the deployment command.
-Whatif
New-AzResourceGroupDeployment -Whatiffor resource group deployments
New-AzResourceGroupDeployment -Whatiffor resource group deployments
New-AzResourceGroupDeployment -Whatif
New-AzSubscriptionDeployment -WhatifandNew-AzDeployment -Whatiffor subscription level deployments
New-AzSubscriptionDeployment -WhatifandNew-AzDeployment -Whatiffor subscription level deployments
New-AzSubscriptionDeployment -Whatif
New-AzDeployment -Whatif
You can use the-Confirmswitch parameter to preview the changes and get prompted to continue with the deployment.
-Confirm
New-AzResourceGroupDeployment -Confirmfor resource group deployments
New-AzResourceGroupDeployment -Confirm
New-AzSubscriptionDeployment -ConfirmandNew-AzDeployment -Confirmfor subscription level deployments
New-AzSubscriptionDeployment -Confirm
New-AzDeployment -Confirm
The preceding commands return a text summary that you can manually inspect. To get an object that you can programmatically inspect for changes, useGet-AzResourceGroupDeploymentWhatIfResultorGet-AzSubscriptionDeploymentWhatIfResult.
$results = Get-AzResourceGroupDeploymentWhatIfResultfor resource group deployments
$results = Get-AzResourceGroupDeploymentWhatIfResult
$results = Get-AzSubscriptionDeploymentWhatIfResultor$results = Get-AzDeploymentWhatIfResultfor subscription level deployments
$results = Get-AzSubscriptionDeploymentWhatIfResult
$results = Get-AzDeploymentWhatIfResult
Azure CLI
To preview changes before deploying a template, use:
az deployment group what-iffor resource group deployments
az deployment sub what-iffor subscription level deployments
az deployment mg what-iffor management group deployments
az deployment tenant what-iffor tenant deployments
You can use the--confirm-with-what-ifswitch (or its short form-c) to preview the changes and get prompted to continue with the deployment. Add this switch to:
--confirm-with-what-if
-c
az deployment group create
az deployment sub create.
az deployment mg create
az deployment tenant create
For example, useaz deployment group create --confirm-with-what-ifor-cfor resource group deployments.
az deployment group create --confirm-with-what-if
-c
The preceding commands return a text summary that you can manually inspect. To get a JSON object that you can programmatically inspect for changes, use the--no-pretty-printswitch. For example, useaz deployment group what-if --no-pretty-printfor resource group deployments.
--no-pretty-print
az deployment group what-if --no-pretty-print
If you want to return the results without colors, open yourAzure CLI configurationfile. Setno_colortoyes.
Azure REST API
For REST API, use:
Deployments - What Iffor resource group deployments
Deployments - What If At Subscription Scopefor subscription deployments
Deployments - What If At Management Group Scopefor management group deployments
Deployments - What If At Tenant Scopefor tenant deployments.
Change types
The what-if operation lists seven different types of changes:
Create: The resource doesn't currently exist but is defined in the template. The resource will be created.
Delete: This change type only applies when usingcomplete modefor deployment. The resource exists, but isn't defined in the template. With complete mode, the resource will be deleted. Only resources thatsupport complete mode deletionare included in this change type.
Ignore: The resource exists, but isn't defined in the template. The resource won't be deployed or modified. When you reach the limits for expanding nested templates, you will encounter this change type. SeeWhat-if limits.
NoChange: The resource exists, and is defined in the template. The resource will be redeployed, but the properties of the resource won't change. This change type is returned whenResultFormatis set toFullResourcePayloads, which is the default value.
FullResourcePayloads
NoEffect: The property is ready-only and will be ignored by the service. For example, thesku.tierproperty is always set to matchsku.namein theMicrosoft.ServiceBusnamespace.
sku.tier
sku.name
Microsoft.ServiceBus
Modify: The resource exists, and is defined in the template. The resource will be redeployed, and the properties of the resource will change. This change type is returned whenResultFormatis set toFullResourcePayloads, which is the default value.
FullResourcePayloads
Deploy: The resource exists, and is defined in the template. The resource will be redeployed. The properties of the resource may or may not change. The operation returns this change type when it doesn't have enough information to determine if any properties will change. You only see this condition whenResultFormatis set toResourceIdOnly.
ResourceIdOnly
Result format
You control the level of detail that is returned about the predicted changes. You have two options:
FullResourcePayloads- returns a list of resources that will change and details about the properties that will change
ResourceIdOnly- returns a list of resources that will change
The default value isFullResourcePayloads.
For PowerShell deployment commands, use the-WhatIfResultFormatparameter. In the programmatic object commands, use theResultFormatparameter.
-WhatIfResultFormat
ResultFormat
For Azure CLI, use the--result-formatparameter.
--result-format
The following results show the two different output formats:
Full resource payloadsResource and property changes are indicated with these symbols:
  - Delete
  + Create
  ~ Modify

The deployment will update the following scope:

Scope: /subscriptions/./resourceGroups/ExampleGroup

  ~ Microsoft.Network/virtualNetworks/vnet-001 [2018-10-01]
    - tags.Owner: "Team A"
    ~ properties.addressSpace.addressPrefixes: [
      - 0: "10.0.0.0/16"
      + 0: "10.0.0.0/15"
      ]
    ~ properties.subnets: [
      - 0:
        name:                     "subnet001"
        properties.addressPrefix: "10.0.0.0/24"

      ]

Resource changes: 1 to modify.
Full resource payloads
Resource and property changes are indicated with these symbols:
  - Delete
  + Create
  ~ Modify

The deployment will update the following scope:

Scope: /subscriptions/./resourceGroups/ExampleGroup

  ~ Microsoft.Network/virtualNetworks/vnet-001 [2018-10-01]
    - tags.Owner: "Team A"
    ~ properties.addressSpace.addressPrefixes: [
      - 0: "10.0.0.0/16"
      + 0: "10.0.0.0/15"
      ]
    ~ properties.subnets: [
      - 0:
        name:                     "subnet001"
        properties.addressPrefix: "10.0.0.0/24"

      ]

Resource changes: 1 to modify.
Resource and property changes are indicated with these symbols:
  - Delete
  + Create
  ~ Modify

The deployment will update the following scope:

Scope: /subscriptions/./resourceGroups/ExampleGroup

  ~ Microsoft.Network/virtualNetworks/vnet-001 [2018-10-01]
    - tags.Owner: "Team A"
    ~ properties.addressSpace.addressPrefixes: [
      - 0: "10.0.0.0/16"
      + 0: "10.0.0.0/15"
      ]
    ~ properties.subnets: [
      - 0:
        name:                     "subnet001"
        properties.addressPrefix: "10.0.0.0/24"

      ]

Resource changes: 1 to modify.
Resource ID onlyResource and property changes are indicated with this symbol:
  ! Deploy

The deployment will update the following scope:

Scope: /subscriptions/./resourceGroups/ExampleGroup

  ! Microsoft.Network/virtualNetworks/vnet-001

Resource changes: 1 to deploy.
Resource ID only
Resource and property changes are indicated with this symbol:
  ! Deploy

The deployment will update the following scope:

Scope: /subscriptions/./resourceGroups/ExampleGroup

  ! Microsoft.Network/virtualNetworks/vnet-001

Resource changes: 1 to deploy.
Resource and property changes are indicated with this symbol:
  ! Deploy

The deployment will update the following scope:

Scope: /subscriptions/./resourceGroups/ExampleGroup

  ! Microsoft.Network/virtualNetworks/vnet-001

Resource changes: 1 to deploy.
Run what-if operation
Set up environment
To see how what-if works, let's runs some tests. First, deploy atemplate that creates a virtual network. You'll use this virtual network to test how changes are reported by what-if.
PowerShell
Azure CLI
New-AzResourceGroup `
  -Name ExampleGroup `
  -Location centralus
New-AzResourceGroupDeployment `
  -ResourceGroupName ExampleGroup `
  -TemplateUri "https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/what-if/what-if-before.json"
New-AzResourceGroup `
  -Name ExampleGroup `
  -Location centralus
New-AzResourceGroupDeployment `
  -ResourceGroupName ExampleGroup `
  -TemplateUri "https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/what-if/what-if-before.json"
az group create \
  --name ExampleGroup \
  --location "Central US"
az deployment group create \
  --resource-group ExampleGroup \
  --template-uri "https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/what-if/what-if-before.json"
az group create \
  --name ExampleGroup \
  --location "Central US"
az deployment group create \
  --resource-group ExampleGroup \
  --template-uri "https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/what-if/what-if-before.json"
Test modification
After the deployment completes, you're ready to test the what-if operation. This time you deploy atemplate that changes the virtual network. It's missing one the original tags, a subnet has been removed, and the address prefix has changed.
PowerShell
Azure CLI
New-AzResourceGroupDeployment `
  -Whatif `
  -ResourceGroupName ExampleGroup `
  -TemplateUri "https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/what-if/what-if-after.json"
New-AzResourceGroupDeployment `
  -Whatif `
  -ResourceGroupName ExampleGroup `
  -TemplateUri "https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/what-if/what-if-after.json"
az deployment group what-if \
  --resource-group ExampleGroup \
  --template-uri "https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/what-if/what-if-after.json"
az deployment group what-if \
  --resource-group ExampleGroup \
  --template-uri "https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/what-if/what-if-after.json"
The what-if output appears similar to:

The text output is:
Resource and property changes are indicated with these symbols:
  - Delete
  + Create
  ~ Modify

The deployment will update the following scope:

Scope: /subscriptions/./resourceGroups/ExampleGroup

  ~ Microsoft.Network/virtualNetworks/vnet-001 [2018-10-01]
    - tags.Owner: "Team A"
    ~ properties.addressSpace.addressPrefixes: [
      - 0: "10.0.0.0/16"
      + 0: "10.0.0.0/15"
      ]
    ~ properties.subnets: [
      - 0:

        name:                     "subnet001"
        properties.addressPrefix: "10.0.0.0/24"

      ]

Resource changes: 1 to modify.
Resource and property changes are indicated with these symbols:
  - Delete
  + Create
  ~ Modify

The deployment will update the following scope:

Scope: /subscriptions/./resourceGroups/ExampleGroup

  ~ Microsoft.Network/virtualNetworks/vnet-001 [2018-10-01]
    - tags.Owner: "Team A"
    ~ properties.addressSpace.addressPrefixes: [
      - 0: "10.0.0.0/16"
      + 0: "10.0.0.0/15"
      ]
    ~ properties.subnets: [
      - 0:

        name:                     "subnet001"
        properties.addressPrefix: "10.0.0.0/24"

      ]

Resource changes: 1 to modify.
Notice at the top of the output that colors are defined to indicate the type of changes.
At the bottom of the output, it shows the tag Owner was deleted. The address prefix changed from 10.0.0.0/16 to 10.0.0.0/15. The subnet named subnet001 was deleted. Remember these changes weren't deployed. You see a preview of the changes that will happen if you deploy the template.
Some of the properties that are listed as deleted won't actually change. Properties can be incorrectly reported as deleted when they aren't in the template, but are automatically set during deployment as default values. This result is considered "noise" in the what-if response. The final deployed resource will have the values set for the properties. As the what-if operation matures, these properties will be filtered out of the result.
Programmatically evaluate what-if results
Now, let's programmatically evaluate the what-if results by setting the command to a variable.
PowerShell
Azure CLI
$results = Get-AzResourceGroupDeploymentWhatIfResult `
  -ResourceGroupName ExampleGroup `
  -TemplateUri "https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/what-if/what-if-after.json"
$results = Get-AzResourceGroupDeploymentWhatIfResult `
  -ResourceGroupName ExampleGroup `
  -TemplateUri "https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/what-if/what-if-after.json"
You can see a summary of each change.
foreach ($change in $results.Changes)
{
  $change.Delta
}
foreach ($change in $results.Changes)
{
  $change.Delta
}
results=$(az deployment group what-if --resource-group ExampleGroup --template-uri "https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/what-if/what-if-after.json" --no-pretty-print)
results=$(az deployment group what-if --resource-group ExampleGroup --template-uri "https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/what-if/what-if-after.json" --no-pretty-print)
Confirm deletion
The what-if operation supports usingdeployment mode. When set to complete mode, resources not in the template are deleted. The following example deploys atemplate that has no resources definedin complete mode.
To preview changes before deploying a template, use the confirm switch parameter with the deployment command. If the changes are as you expected, respond that you want the deployment to complete.
PowerShell
Azure CLI
New-AzResourceGroupDeployment `
  -ResourceGroupName ExampleGroup `
  -Mode Complete `
  -Confirm `
  -TemplateUri "https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/what-if/azuredeploy.json"
New-AzResourceGroupDeployment `
  -ResourceGroupName ExampleGroup `
  -Mode Complete `
  -Confirm `
  -TemplateUri "https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/what-if/azuredeploy.json"
az deployment group create \
  --resource-group ExampleGroup \
  --mode Complete \
  --confirm-with-what-if \
  --template-uri "https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/what-if/azuredeploy.json"
az deployment group create \
  --resource-group ExampleGroup \
  --mode Complete \
  --confirm-with-what-if \
  --template-uri "https://raw.githubusercontent.com/Azure/azure-docs-json-samples/master/azure-resource-manager/what-if/azuredeploy.json"
Because no resources are defined in the template and the deployment mode is set to complete, the virtual network will be deleted.

The text output is:
Resource and property changes are indicated with this symbol:
  - Delete

The deployment will update the following scope:

Scope: /subscriptions/./resourceGroups/ExampleGroup

  - Microsoft.Network/virtualNetworks/vnet-001

      id:
"/subscriptions/./resourceGroups/ExampleGroup/providers/Microsoft.Network/virtualNet
works/vnet-001"
      location:        "centralus"
      name:            "vnet-001"
      tags.CostCenter: "12345"
      tags.Owner:      "Team A"
      type:            "Microsoft.Network/virtualNetworks"

Resource changes: 1 to delete.

Are you sure you want to execute the deployment?
[Y] Yes  [A] Yes to All  [N] No  [L] No to All  [S] Suspend  [?] Help (default is "Y"):
Resource and property changes are indicated with this symbol:
  - Delete

The deployment will update the following scope:

Scope: /subscriptions/./resourceGroups/ExampleGroup

  - Microsoft.Network/virtualNetworks/vnet-001

      id:
"/subscriptions/./resourceGroups/ExampleGroup/providers/Microsoft.Network/virtualNet
works/vnet-001"
      location:        "centralus"
      name:            "vnet-001"
      tags.CostCenter: "12345"
      tags.Owner:      "Team A"
      type:            "Microsoft.Network/virtualNetworks"

Resource changes: 1 to delete.

Are you sure you want to execute the deployment?
[Y] Yes  [A] Yes to All  [N] No  [L] No to All  [S] Suspend  [?] Help (default is "Y"):
You see the expected changes and can confirm that you want the deployment to run.
SDKs
You can use the what-if operation through the Azure SDKs.
For Python, usewhat-if.
For Python, usewhat-if.
For Java, useDeploymentWhatIf Class.
For Java, useDeploymentWhatIf Class.
For .NET, useDeploymentWhatIf Class.
For .NET, useDeploymentWhatIf Class.
Next steps
ARM Deployment Insightsextension provides an easy way to integrate the what-if operation in your Azure DevOps pipeline.
To use the what-if operation in a pipeline, seeTest ARM templates with What-If in a pipeline.
If you notice incorrect results from the what-if operation, please report the issues athttps://aka.ms/whatifissues.
For a Learn module that covers using what if, seePreview changes and validate Azure resources by using what-if and the ARM template test toolkit.
Feedback
Was this page helpful?
Additional resources