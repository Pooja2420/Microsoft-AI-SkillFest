Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Monitor Azure Front Door
Article
2025-01-29
1 contributor
In this article
Azure Monitor collects and aggregates metrics and logs from your system to monitor availability, performance, and resilience, and notify you of issues affecting your system. You can use the Azure portal, PowerShell, Azure CLI, REST API, or client libraries to set up and view monitoring data.
Different metrics and logs are available for different resource types. This article describes the types of monitoring data you can collect for this service and ways to analyze that data.
Reportsprovide insight into how your traffic is flowing through Azure Front Door, the web application firewall (WAF), and to your application.
Important
Azure Front Door (classic) will be retired onMarch 31, 2027. To avoid any service disruption, it's important that youmigrate your Azure Front Door (classic) profilesto Azure Front Door Standard or Premium tier by March 2027. For more information, seeAzure Front Door (classic) retirement.
Collect data with Azure Monitor
This table describes how you can collect data to monitor your service, and what you can do with the data once collected:
For the list of all of the data supported by Azure Monitor, see:
Azure Monitor supported metrics
Azure Monitor supported resource logs
Built-in monitoring for Azure Front Door
Logs track all requests that pass through Azure Front Door. It can take a few minutes for logs to be processed and stored.
There are multiple Front Door logs, which you can use for different purposes:
Access logscan be used to identify slow requests, determine error rates, and understand how Front Door's caching behavior is working for your solution.
Web application firewall (WAF) logs can be used to detect potential attacks, and false positive detections that might indicate legitimate requests that the WAF blocked. For more information on the WAF logs, seeAzure Web Application Firewall monitoring and logging.
Health probe logscan be used to identify origins that are unhealthy or that don't respond to requests from some of Front Door's geographically distributed PoPs.
Activity logs provide visibility into the operations performed on your Azure resources, such as configuration changes to your Azure Front Door profile.
Access logs and WAF logs include atracking reference, which is also propagated in requests to origins and to client responses by using theX-Azure-Refheader. You can use the tracking reference to gain an end-to-end view of your application request processing.
X-Azure-Ref
Access logs, health probe logs, and WAF logs aren't enabled by default. To enable and store your diagnostic logs, seeConfigure Azure Front Door logs. Activity log entries are collected by default, and you can view them in the Azure portal.
Access log
Information about every request is logged into the access log. Each access log entry contains the information listed in the following table.
X-Azure-Ref
*.contoso.com
subdomain-from-client-request.contoso.com
contoso-123.z01.azurefd.net
contoso-123.z01.azurefd.net
X-Forwarded-For
contoso-123.z01.azurefd.net
HITandREMOTE_HIT: The HTTP request was served from the Azure Front Door cache.
MISS: The HTTP request was served from origin.
PARTIAL_HIT: Some of the bytes were served from the Front Door edge PoP cache, and other bytes were served from the origin. This status indicates anobject chunkingscenario.
CACHE_NOCONFIG: The request was forwarded without caching settings, including bypass scenarios.
PRIVATE_NOSTORE: There was no cache configured in the caching settings by the customer.
N/A: A signed URL or WAF rule denied the request.
NoError: Indicates no error was found.
CertificateError: Generic SSL certificate error.
CertificateNameCheckFailed: The host name in the SSL certificate is invalid or doesn't match the requested URL.
ClientDisconnected: The request failed because of a client network connection issue.
ClientGeoBlocked: The client was blocked due to the geographical location of the IP address.
UnspecifiedClientError: Generic client error.
InvalidRequest: Invalid request. This response indicates a malformed header, body, or URL.
DNSFailure: A failure occurred during DNS resolution.
DNSTimeout: The DNS query to resolve the origin IP address timed out.
DNSNameNotResolved: The server name or address couldn't be resolved.
OriginConnectionAborted: The connection with the origin was disconnected abnormally.
OriginConnectionError: Generic origin connection error.
OriginConnectionRefused: The connection with the origin wasn't established.
OriginError: Generic origin error.
ResponseHeaderTooBig: The origin returned a too large of a response header.
OriginInvalidResponse: The origin returned an invalid or unrecognized response.
OriginTimeout: The time-out period for the origin request expired.
ResponseHeaderTooBig: The origin returned a too large of a response header.
RestrictedIP: The request was blocked because of restricted IP address.
SSLHandshakeError: Azure Front Door was unable to establish a connection with the origin because of an SSL handshake failure.
SSLInvalidRootCA: The root certification authority's certificate was invalid.
SSLInvalidCipher: The HTTPS connection was established using an invalid cipher.
OriginConnectionAborted: The connection with the origin was disconnected abnormally.
OriginConnectionRefused: The connection with the origin wasn't established.
UnspecifiedError: An error occurred that didnât fit in any of the errors in the table.
SSLMismatchedSNI
SSLMismatchedSNI
SSLMismatchedSNI
requestUri
Health probe log
Azure Front Door logs every failed health probe request. These logs can help you to diagnose problems with an origin.â¯The logs provide you with information that you can use to investigate the failure reason and then bring the origin back to a healthy status.
Some scenarios this log can be useful for are:
You noticedâ¯Azure Front Door traffic was sent to a subset of the origins. For example, you might notice that only three outâ¯of four origins receive traffic. You want to know if theâ¯origins are receiving and responding to health probes so you know whether the origins are healthy.
You noticed theâ¯origin health percentage metric is lower than you expected. You want to know which origins are recorded as unhealthy and the reason for the health probe failures.
Each health probe log entry has the following schema:
The following example JSON snippet shows a health probe log entry for a failed health probe request.
{
  "records": [
    {
      "time": "2021-02-02T07:15:37.3640748Z",
      "resourceId": "/SUBSCRIPTIONS/mySubscriptionID/RESOURCEGROUPS/myResourceGroup/PROVIDERS/MICROSOFT.CDN/PROFILES/MyProfile",
      "category": "FrontDoorHealthProbeLog",
      "operationName": "Microsoft.Cdn/Profiles/FrontDoorHealthProbeLog/Write",
      "properties": {
        "healthProbeId": "9642AEA07BA64675A0A7AD214ACF746E",
        "POP": "MAA",
        "httpVerb": "HEAD",
        "result": "OriginError",
        "httpStatusCode": "400",
        "probeURL": "http://www.example.com:80/",
        "originName": "www.example.com",
        "originIP": "PublicI:Port",
        "totalLatencyMilliseconds": "141",
        "connectionLatencyMilliseconds": "68",
        "DNSLatencyMicroseconds": "1814"
      }
    }
  ]
}
{
  "records": [
    {
      "time": "2021-02-02T07:15:37.3640748Z",
      "resourceId": "/SUBSCRIPTIONS/mySubscriptionID/RESOURCEGROUPS/myResourceGroup/PROVIDERS/MICROSOFT.CDN/PROFILES/MyProfile",
      "category": "FrontDoorHealthProbeLog",
      "operationName": "Microsoft.Cdn/Profiles/FrontDoorHealthProbeLog/Write",
      "properties": {
        "healthProbeId": "9642AEA07BA64675A0A7AD214ACF746E",
        "POP": "MAA",
        "httpVerb": "HEAD",
        "result": "OriginError",
        "httpStatusCode": "400",
        "probeURL": "http://www.example.com:80/",
        "originName": "www.example.com",
        "originIP": "PublicI:Port",
        "totalLatencyMilliseconds": "141",
        "connectionLatencyMilliseconds": "68",
        "DNSLatencyMicroseconds": "1814"
      }
    }
  ]
}
Web application firewall log
For more information on the Front Door web application firewall (WAF) logs, seeAzure Web Application Firewall monitoring and logging.
For classic Azure Front Door, built-in monitoring includes diagnostic logs.
Diagnostic logs
Diagnostic logs provide rich information about operations and errors that are important for auditing and troubleshooting. Diagnostic logs differ from activity logs.
Activity logs provide insights into the operations done on Azure resources. Diagnostic logs provide insight into operations that your resource does. For more information, seeAzure Monitor diagnostic logs.

To configure diagnostic logs for your Azure Front Door (classic):
Select your Azure Front Door (classic) profile.
Select your Azure Front Door (classic) profile.
ChooseDiagnostic settings.
ChooseDiagnostic settings.
SelectTurn on diagnostics. Archive diagnostic logs along with metrics to a storage account, stream them to an event hub, or send them to Azure Monitor logs.
SelectTurn on diagnostics. Archive diagnostic logs along with metrics to a storage account, stream them to an event hub, or send them to Azure Monitor logs.
Front Door currently provides diagnostic logs. Diagnostic logs provide individual API requests with each entry having the following schema:
SSLMismatchedSNI
SSLMismatchedSNI
SSLMismatchedSNI
requestUri
The raw log propertyisSentToOriginShieldis deprecated and replaced by a new fieldisReceivedFromClient. Use the new field if you're already using the deprecated field.
Raw logs include logs generated from both CDN edge (child POP) and origin shield. Origin shield refers to parent nodes that are strategically located across the globe. These nodes communicate with origin servers and reduce the traffic load on origin.
For every request that goes to an origin shield, there are two log entries:
One for edge nodes
One for origin shield
To differentiate the egress or responses from the edge nodes vs. origin shield, you can use the fieldisReceivedFromClientto get the correct data.
If the value is false, then it means the request is responded from origin shield to edge nodes. This approach is effective to compare raw logs with billing data. Charges aren't incurred for egress from origin shield to the edge nodes. Charges are incurred for egress from the edge nodes to clients.
Kusto query sample to exclude logs generated on origin shield in Log Analytics.
AzureDiagnostics  | where Category == "FrontdoorAccessLog" and isReceivedFromClient_b == true
AzureDiagnostics  | where Category == "FrontdoorAccessLog" and isReceivedFromClient_b == true
Note
For various routing configurations and traffic behaviors, some of the fields like backendHostname, cacheStatus, isReceivedFromClient, and POP field might respond with different values. The following table explains the different values these fields have for various scenarios:
Note
For caching scenarios, the value for Cache Status is a PARTIAL_HIT when some of the bytes for a request get served from the Azure Front Door edge or origin shield cache while some of the bytes get served from the origin for large objects.
Azure Front Door uses a technique called object chunking. When a large file is requested, the Azure Front Door retrieves smaller pieces of the file from the origin. After the Azure Front Door POP server receives a full or byte-ranges of the file requested, the Azure Front Door edge server requests the file from the origin in chunks of 8 MB.
After the chunk arrives at the Azure Front Door edge, it's cached and immediately served to the user. The Azure Front Door then prefetches the next chunk in parallel. This prefetch ensures the content stays one chunk ahead of the user, which reduces latency. This process continues until the entire file gets downloaded (if requested), all byte ranges are available (if requested), or the client closes the connection. For more information on the byte-range request, see RFC 7233. The Azure Front Door caches any chunks as they're received. The entire file doesn't need to be cached on the Front Door cache. Ensuing requests for the file or byte ranges are served from the Azure Front Door cache. If not all the chunks are cached on the Azure Front Door, prefetch is used to request chunks from the origin. This optimization relies on the ability of the origin server to support byte-range requests. If the origin server doesn't support byte-range requests, this optimization isn't effective.
Use Azure Monitor tools to analyze the data
These Azure Monitor tools are available in the Azure portal to help you analyze monitoring data:
Some Azure services have a built-in monitoring dashboard in the Azure portal. These dashboards are calledinsights, and you can find them in theInsightssection of Azure Monitor in the Azure portal.
Some Azure services have a built-in monitoring dashboard in the Azure portal. These dashboards are calledinsights, and you can find them in theInsightssection of Azure Monitor in the Azure portal.
Metrics explorerallows you to view and analyze metrics for Azure resources. For more information, seeAnalyze metrics with Azure Monitor metrics explorer.
Metrics explorerallows you to view and analyze metrics for Azure resources. For more information, seeAnalyze metrics with Azure Monitor metrics explorer.
Log Analyticsallows you to query and analyze log data using theKusto query language (KQL). For more information, seeGet started with log queries in Azure Monitor.
Log Analyticsallows you to query and analyze log data using theKusto query language (KQL). For more information, seeGet started with log queries in Azure Monitor.
The Azure portal has a user interface for viewing and basic searches of theactivity log. To do more in-depth analysis, route the data to Azure Monitor logs and run more complex queries in Log Analytics.
The Azure portal has a user interface for viewing and basic searches of theactivity log. To do more in-depth analysis, route the data to Azure Monitor logs and run more complex queries in Log Analytics.
Application Insightsmonitors the availability, performance, and usage of your web applications, so you can identify and diagnose errors without waiting for a user to report them.Application Insights includes connection points to various development tools and integrates with Visual Studio to support your DevOps processes. For more information, seeApplication monitoring for App Service.
Application Insightsmonitors the availability, performance, and usage of your web applications, so you can identify and diagnose errors without waiting for a user to report them.Application Insights includes connection points to various development tools and integrates with Visual Studio to support your DevOps processes. For more information, seeApplication monitoring for App Service.
Tools that allow more complex visualization include:
Dashboardsthat let you combine different kinds of data into a single pane in the Azure portal.
Workbooks, customizable reports that you can create in the Azure portal. Workbooks can include text, metrics, and log queries.
Grafana, an open platform tool that excels in operational dashboards. You can use Grafana to create dashboards that include data from multiple sources other than Azure Monitor.
Power BI, a business analytics service that provides interactive visualizations across various data sources. You can configure Power BI to automatically import log data from Azure Monitor to take advantage of these visualizations.
Export Azure Monitor data
You can export data out of Azure Monitor into other tools using:
Metrics:Use theREST API for metricsto extract metric data from the Azure Monitor metrics database. For more information, seeAzure Monitor REST API reference.
Metrics:Use theREST API for metricsto extract metric data from the Azure Monitor metrics database. For more information, seeAzure Monitor REST API reference.
Logs:Use the REST API or theassociated client libraries.
Logs:Use the REST API or theassociated client libraries.
TheLog Analytics workspace data export.
TheLog Analytics workspace data export.
To get started with the Azure Monitor REST API, seeAzure monitoring REST API walkthrough.
Use Kusto queries to analyze log data
You can analyze Azure Monitor Log data using the Kusto query language (KQL). For more information, seeLog queries in Azure Monitor.
Use Azure Monitor alerts to notify you of issues
Azure Monitor alertsallow you to identify and address issues in your system, and proactively notify you when specific conditions are found in your monitoring data before your customers notice them. You can alert on any metric or log data source in the Azure Monitor data platform. There aredifferent types of Azure Monitor alertsdepending on the services you're monitoring and the monitoring data you're collecting. SeeChoosing the right type of alert rule.
For examples of common alerts for Azure resources, seeSample log alert queries.
Implementing alerts at scale
For some services, you can monitor at scale by applying the same metric alert rule to multiple resources of the same type that exist in the same Azure region.Azure Monitor Baseline Alerts (AMBA)provides a semi-automated method of implementing important platform metric alerts, dashboards, and guidelines at scale.
Get personalized recommendations using Azure Advisor
For some services, if critical conditions or imminent changes occur during resource operations, an alert displays on the serviceOverviewpage in the portal. You can find more information and recommended fixes for the alert inAdvisor recommendationsunderMonitoringin the left menu. During normal operations, no advisor recommendations display.
For more information on Azure Advisor, seeAzure Advisor overview.
Related content
Azure Front Door monitoring data reference
Monitoring Azure resources with Azure Monitor
Feedback
Was this page helpful?
Additional resources