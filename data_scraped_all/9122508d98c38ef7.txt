Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Source control in Synapse Studio
Article
2024-11-15
14 contributors
In this article
By default, Synapse Studio authors directly against the Synapse service. If you have a need for collaboration using Git for source control, Synapse Studio allows you to associate your workspace with a Git repository, Azure DevOps, or GitHub.
This article outlines how to configure and work in a Synapse workspace with git repository enabled. And we also highlight some best practices and a troubleshooting guide.
Note
To use GitHub in Azure Gov and Microsoft Azure operated by 21Vianet, you can bring your own GitHub OAuth application in Synapse Studio for git integration. The configure experience is same with ADF. You can refer to theannouncement blog.
Prerequisites
Users must have the Azure Contributor (Azure RBAC) or higher role on the Synapse workspace to configure, edit settings, and disconnect a Git repository with Synapse.
Configure Git repository in Synapse Studio
After launching your Synapse Studio, you can configure a git repository in your workspace. A Synapse workspace can be associated with only one git repository at a time.
Configuration method 1: global bar
In the Synapse Studio global bar at the top of the data, develop, integrate, and manage hubs, select theSynapse Livedrop-down menu, and then selectSet up code repository.

Configuration method 2: Manage hub
Go to the Manage hub of Synapse Studio. SelectGit configurationin theSource controlsection. If you have no repository connected, selectConfigure.

You can connect either Azure DevOps or GitHub git repository in your workspace.
Connect with Azure DevOps Git
You can associate a Synapse workspace with an Azure DevOps Repository for source control, collaboration, versioning, and so on. If you don't have an Azure DevOps repository, followthese instructionsto create your repository resources.
Azure DevOps Git repository settings
When connecting to your git repository, first select your repository type as Azure DevOps git, and then select one Microsoft Entra tenant from the dropdown list, and selectContinue.

The configuration pane shows the following Azure DevOps git settings:
<your tenant name>
https://{organization name}.visualstudio.com
<your organization name>
https://{organization name}.visualstudio.com/{project name}
<your Azure Repos project name>
<your Azure Repos code repository name>
master
<your collaboration branch name>
<your root folder name>
You can also use repository link to quickly point to the git repository you want to connect with.
Note
Azure Synapse doesn't support connection to an on-premises Azure DevOps repository.

Use a different Microsoft Entra tenant
The Azure Repos Git repo can be in a different Microsoft Entra tenant. To specify a different Microsoft Entra tenant, you have to have administrator permissions for the Azure subscription that you're using. For more info, seechange subscription administrator.
Important
To connect to another Microsoft Entra ID, the user logged in must be a part of that active directory.
Use your personal Microsoft account
To use a personal Microsoft account for Git integration, you can link your personal Azure Repo to your organization's Active Directory.
Add your personal Microsoft account to your organization's Active Directory as a guest. For more info, seeAdd Microsoft Entra B2B collaboration users in the Azure portal.
Add your personal Microsoft account to your organization's Active Directory as a guest. For more info, seeAdd Microsoft Entra B2B collaboration users in the Azure portal.
Sign in to the Azure portal with your personal Microsoft account. Then switch to your organization's Active Directory.
Sign in to the Azure portal with your personal Microsoft account. Then switch to your organization's Active Directory.
Go to the Azure DevOps section, where you now see your personal repo. Select the repo and connect with Active Directory.
Go to the Azure DevOps section, where you now see your personal repo. Select the repo and connect with Active Directory.
After these configuration steps, your personal repo is available when you set up Git integration in the Synapse Studio.
For more info about connecting Azure Repos to your organization's Active Directory, seeConnect your organization to Microsoft Entra ID.
Use a cross tenant Azure DevOps organization
When your Azure DevOps isn't in the same tenant as the Synapse workspace, you can configure the workspace with cross tenant Azure DevOps organization.
Select theCross tenant sign inoption and selectContinue
Select theCross tenant sign inoption and selectContinue

SelectOKin the dialog box.
SelectOKin the dialog box.

SelectUse another accountand sign in with your Azure DevOps account.
SelectUse another accountand sign in with your Azure DevOps account.

After signing in, choose the directory and repository and configure it accordingly.NoteTo login the workspace, you need to use the first sign-in to log into to your Synapse workspace user account. Your cross tenant Azure DevOps account is only used for signing into and getting access to the Azure DevOps repo associated with this Synapse workspace.
After signing in, choose the directory and repository and configure it accordingly.

Note
To login the workspace, you need to use the first sign-in to log into to your Synapse workspace user account. Your cross tenant Azure DevOps account is only used for signing into and getting access to the Azure DevOps repo associated with this Synapse workspace.
Connect with GitHub
You can associate a workspace with a GitHub repository for source control, collaboration, versioning. If you don't have a GitHub account or repository, followthese instructionsto create your resources.
The GitHub integration with Synapse Studio supports both public GitHub (that is,https://github.com) and GitHub Enterprise. You can use both public and private GitHub repositories as long you have read and write permission to the repository in GitHub.
GitHub settings
When connecting to your git repository, first select your repository type as GitHub, and then provide your GitHub account, your GitHub Enterprise Server URL if you use GitHub Enterprise Server, or your GitHub Enterprise organization name if you use GitHub Enterprise Cloud. SelectContinue.
Note
If you're using GitHub Enterprise Cloud, leave theUse GitHub Enterprise Servercheckbox cleared.

The configuration pane shows the following GitHub repository settings:
https://github.mydomain.com
<your GitHub enterprise url>
<your GitHub account name>
<your repository name>
<your collaboration branch>
<your root folder name>
GitHub organizations
Connecting to a GitHub organization requires the organization to grant permission to Synapse Studio. A user with ADMIN permissions on the organization must perform the below steps.
If you're connecting to GitHub from Synapse Studio for the first time, follow these steps to connect to a GitHub organization.
In the Git configuration pane, enter the organization name in theGitHub Accountfield. A prompt to sign in into GitHub appears.
In the Git configuration pane, enter the organization name in theGitHub Accountfield. A prompt to sign in into GitHub appears.
Login using your user credentials.
Login using your user credentials.
You're asked to authorize Synapse as an application calledAzure Synapse. On this screen, you see an option to grant permission for Synapse to access the organization. If you don't see the option to grant permission, ask an admin to manually grant the permission through GitHub.
You're asked to authorize Synapse as an application calledAzure Synapse. On this screen, you see an option to grant permission for Synapse to access the organization. If you don't see the option to grant permission, ask an admin to manually grant the permission through GitHub.
Once you follow these steps, your workspace is able to connect to both public and private repositories within your organization. If you're unable to connect, try clearing the browser cache and retrying.
If you have already connected to GitHub and only granted permission to access a personal account, follow the below steps to grant permissions to an organization.
Go to GitHub and openSettings.
Go to GitHub and openSettings.

SelectApplications. In theAuthorized OAuth appstab, you should seeAzure Synapse.
SelectApplications. In theAuthorized OAuth appstab, you should seeAzure Synapse.

Select theAzure Synapseand grant the access to your organization.
Select theAzure Synapseand grant the access to your organization.

Once you complete these steps, your workspace is able to connect to both public and private repositories within your organization.
Version control
Version control systems (also known assource control) allow developers to collaborate on code and track changes. Source control is an essential tool for multi-developer projects.
Creating feature branches
Each Git repository that's associated with a Synapse Studio has a collaboration branch. (mainormasteris the default collaboration branch). Users can also create feature branches by clicking+ New Branchin the branch dropdown.
main
master

Once the new branch pane appears, enter the name of your feature branch and select a branch to base the work off of.

When you're ready to merge the changes from your feature branch to your collaboration branch, select the branch dropdown and selectCreate pull request. This action takes you to Git provider where you can raise pull requests, do code reviews, and merge changes to your collaboration branch. You're only allowed to publish to the Synapse service from your collaboration branch.

Configure publishing settings
By default, Synapse Studio generates the workspace templates and saves them into a branch calledworkspace_publish. To configure a custom publish branch, add apublish_config.jsonfile to the root folder in the collaboration branch. When you publishing, Synapse Studio reads this file, looks for the fieldpublishBranch, and saves workspace template files to the specified location. If the branch doesn't exist, Synapse Studio would automatically create it. And example of what this file looks like is below:
workspace_publish
publish_config.json
publishBranch
{
    "publishBranch": "workspace_publish"
}
{
    "publishBranch": "workspace_publish"
}
Synapse Studio can only have one publish branch at a time. When you specify a new publish branch, the original publish branch won't be deleted. If you want to remove the previous publish branch, delete it manually.
Publish code changes
After merging changes to the collaboration branch, selectPublishto manually publish your code changes in the collaboration branch to the Synapse service.

A side pane opens where you confirm that the publish branch and pending changes are correct. Once you verify your changes, selectOKto confirm the publish.

Important
The collaboration branch is not representative of what's deployed in the service. The changes in collaboration branchmustbe published manually.
Switch to a different Git repository
To switch to a different Git repository, go to Git configuration page in the management hub underSource control. SelectDisconnect.

Enter your workspace name and selectDisconnectto remove the Git repository associated with your workspace.
After you remove the association with the current repo, you can configure your Git settings to use a different repo and then import existing resources to the new repo.
Important
Removing Git configuration from a workspace doesn't delete anything from the repository. Synapse workspace contains all published resources. You can continue to edit the workspace directly against the service.
Best practices for Git integration
Permissions. After you have a git repository connected to your workspace, anyone who can access to your git repo with any role in your workspace is able to update artifacts, like sql script, notebook, spark job definition, dataset, dataflow, and pipeline in git mode. Typically you don't want every team member to have permissions to update workspace.
Only grant git repository permission to Synapse workspace artifact authors.
Collaboration. It's recommended to not allow direct check-ins to the collaboration branch. This restriction can help prevent bugs as every check-in goes through a pull request review process described inCreating feature branches.
Synapse live mode. After publishing in git mode,  all changes are reflected in Synapse live mode. In Synapse live mode, publishing is disabled. And you can view, run artifacts in live mode if you have been granted the right permission.
Edit artifacts in Studio. Synapse studio is the only place you can enable workspace source control and sync changes to git automatically. Any change via SDK, PowerShell, isn't synced to git. We recommend you always edit artifact in Studio when git is enabled.
Troubleshooting git integration
Access to git mode
If you have been granted the permission to the GitHub git repository linked with your workspace, but you can't access to Git mode:
Clear your cache and refresh the page.
Clear your cache and refresh the page.
Sign in your GitHub account.
Sign in your GitHub account.
Stale publish branch
If the publish branch is out of sync with the collaboration branch and contains out-of-date resources despite a recent publish, try following these steps:
Remove your current Git repository
Remove your current Git repository
Reconfigure Git with the same settings, but make sureImport existing resources to repositoryis checked and choose the same branch.
Reconfigure Git with the same settings, but make sureImport existing resources to repositoryis checked and choose the same branch.
Create a pull request to merge the changes to the collaboration branch
Create a pull request to merge the changes to the collaboration branch
Unsupported features
Synapse Studio doesn't allow cherry-picking of commits or selective publishing of resources.
Synapse Studio doesn't support self-customized commit message.
By design, delete action in Studio is committed to git directly
Next step
Implement continuous integration and deployment
Feedback
Was this page helpful?
Additional resources