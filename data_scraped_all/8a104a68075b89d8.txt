Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Understand Azure role definitions
Article
2025-03-30
15 contributors
In this article
If you are trying to understand how an Azure role works or if you are creating your ownAzure custom role, it's helpful to understand how roles are defined. This article describes the details of role definitions and provides some examples.
Role definition
Arole definitionis a collection of permissions. It's sometimes just called arole. A role definition lists the actions that can be performed, such as read, write, and delete. It can also list the actions that are excluded from allowed actions or actions related to underlying data.
The following shows an example of the properties in a role definition when displayed usingAzure PowerShell:
Name
Id
IsCustom
Description
Actions []
NotActions []
DataActions []
NotDataActions []
AssignableScopes []
Condition
ConditionVersion
Name
Id
IsCustom
Description
Actions []
NotActions []
DataActions []
NotDataActions []
AssignableScopes []
Condition
ConditionVersion
The following shows an example of the properties in a role definition when displayed using theAzure CLIorREST API:
roleName
name
id
roleType
type
description
actions []
notActions []
dataActions []
notDataActions []
assignableScopes []
condition
conditionVersion
createdOn
updatedOn
createdBy
updatedBy
roleName
name
id
roleType
type
description
actions []
notActions []
dataActions []
notDataActions []
assignableScopes []
condition
conditionVersion
createdOn
updatedOn
createdBy
updatedBy
The following table describes what the role properties mean.
Name
roleName
Id
name
id
IsCustom
roleType
true
CustomRole
false
BuiltInRole
type
Microsoft.Authorization/roleDefinitions
Description
description
Actions
actions
NotActions
notActions
Actions
DataActions
dataActions
NotDataActions
notDataActions
DataActions
AssignableScopes
assignableScopes
Condition
condition
ConditionVersion
conditionVersion
createdOn
updatedOn
createdBy
updatedBy
Actions format
Actions are specified with strings that have the following format:
{Company}.{ProviderName}/{resourceType}/{action}
{Company}.{ProviderName}/{resourceType}/{action}
The{action}portion of an action string specifies the type of actions you can perform on a resource type. For example, you will see the following substrings in{action}:
{action}
{action}
*
read
write
action
delete
Role definition example
Here's theContributorrole definition as displayed in Azure PowerShell and Azure CLI. The wildcard (*) actions underActionsindicates that the principal assigned to this role can perform all actions, or in other words, it can manage everything. This includes actions defined in the future, as Azure adds new resource types. The actions underNotActionsare subtracted fromActions. In the case of theContributorrole,NotActionsremoves this role's ability to manage access to resources and also manage Azure Blueprints assignments.
*
Actions
NotActions
Actions
NotActions
Contributor role as displayed inAzure PowerShell:
{
  "Name": "Contributor",
  "Id": "b24988ac-6180-42a0-ab88-20f7382dd24c",
  "IsCustom": false,
  "Description": "Grants full access to manage all resources, but does not allow you to assign roles in Azure RBAC, manage assignments in Azure Blueprints, or share image galleries.",
  "Actions": [
    "*"
  ],
  "NotActions": [
    "Microsoft.Authorization/*/Delete",
    "Microsoft.Authorization/*/Write",
    "Microsoft.Authorization/elevateAccess/Action",
    "Microsoft.Blueprint/blueprintAssignments/write",
    "Microsoft.Blueprint/blueprintAssignments/delete",
    "Microsoft.Compute/galleries/share/action",
    "Microsoft.Purview/consents/write",
    "Microsoft.Purview/consents/delete"
  ],
  "DataActions": [],
  "NotDataActions": [],
  "AssignableScopes": [
    "/"
  ],
  "Condition": null,
  "ConditionVersion": null
}
{
  "Name": "Contributor",
  "Id": "b24988ac-6180-42a0-ab88-20f7382dd24c",
  "IsCustom": false,
  "Description": "Grants full access to manage all resources, but does not allow you to assign roles in Azure RBAC, manage assignments in Azure Blueprints, or share image galleries.",
  "Actions": [
    "*"
  ],
  "NotActions": [
    "Microsoft.Authorization/*/Delete",
    "Microsoft.Authorization/*/Write",
    "Microsoft.Authorization/elevateAccess/Action",
    "Microsoft.Blueprint/blueprintAssignments/write",
    "Microsoft.Blueprint/blueprintAssignments/delete",
    "Microsoft.Compute/galleries/share/action",
    "Microsoft.Purview/consents/write",
    "Microsoft.Purview/consents/delete"
  ],
  "DataActions": [],
  "NotDataActions": [],
  "AssignableScopes": [
    "/"
  ],
  "Condition": null,
  "ConditionVersion": null
}
Contributor role as displayed inAzure CLI:
[
  {
    "assignableScopes": [
      "/"
    ],
    "createdBy": null,
    "createdOn": "2015-02-02T21:55:09.880642+00:00",
    "description": "Grants full access to manage all resources, but does not allow you to assign roles in Azure RBAC, manage assignments in Azure Blueprints, or share image galleries.",
    "id": "/subscriptions/{subscriptionId}/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c",
    "name": "b24988ac-6180-42a0-ab88-20f7382dd24c",
    "permissions": [
      {
        "actions": [
          "*"
        ],
        "condition": null,
        "conditionVersion": null,
        "dataActions": [],
        "notActions": [
          "Microsoft.Authorization/*/Delete",
          "Microsoft.Authorization/*/Write",
          "Microsoft.Authorization/elevateAccess/Action",
          "Microsoft.Blueprint/blueprintAssignments/write",
          "Microsoft.Blueprint/blueprintAssignments/delete",
          "Microsoft.Compute/galleries/share/action",
          "Microsoft.Purview/consents/write",
          "Microsoft.Purview/consents/delete"
        ],
        "notDataActions": []
      }
    ],
    "roleName": "Contributor",
    "roleType": "BuiltInRole",
    "type": "Microsoft.Authorization/roleDefinitions",
    "updatedBy": null,
    "updatedOn": "2023-07-10T15:10:53.947865+00:00"
  }
]
[
  {
    "assignableScopes": [
      "/"
    ],
    "createdBy": null,
    "createdOn": "2015-02-02T21:55:09.880642+00:00",
    "description": "Grants full access to manage all resources, but does not allow you to assign roles in Azure RBAC, manage assignments in Azure Blueprints, or share image galleries.",
    "id": "/subscriptions/{subscriptionId}/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c",
    "name": "b24988ac-6180-42a0-ab88-20f7382dd24c",
    "permissions": [
      {
        "actions": [
          "*"
        ],
        "condition": null,
        "conditionVersion": null,
        "dataActions": [],
        "notActions": [
          "Microsoft.Authorization/*/Delete",
          "Microsoft.Authorization/*/Write",
          "Microsoft.Authorization/elevateAccess/Action",
          "Microsoft.Blueprint/blueprintAssignments/write",
          "Microsoft.Blueprint/blueprintAssignments/delete",
          "Microsoft.Compute/galleries/share/action",
          "Microsoft.Purview/consents/write",
          "Microsoft.Purview/consents/delete"
        ],
        "notDataActions": []
      }
    ],
    "roleName": "Contributor",
    "roleType": "BuiltInRole",
    "type": "Microsoft.Authorization/roleDefinitions",
    "updatedBy": null,
    "updatedOn": "2023-07-10T15:10:53.947865+00:00"
  }
]
Control and data actions
Role-based access control for control plane actions is specified in theActionsandNotActionsproperties of a role definition. Here are some examples of control plane actions in Azure:
Actions
NotActions
Manage access to a storage account
Create, update, or delete a blob container
Delete a resource group and all of its resources
Control plane access is not inherited to your data plane provided that the container authentication method is set toMicrosoft Entra User Accountand notAccess Key. This separation prevents roles with wildcards (*) from having unrestricted access to your data. For example, if a user has aReaderrole on a subscription, then they can view the storage account, but by default they can't view the underlying data.
*
Previously, role-based access control was not used for data actions. Authorization for data actions varied across resource providers. The same role-based access control authorization model used for control plane actions has been extended to data plane actions.
To support data plane actions, new data properties have been added to the role definition. Data plane actions are specified in theDataActionsandNotDataActionsproperties. By adding these data properties, the separation between control plane and data plane is maintained. This prevents current role assignments with wildcards (*) from suddenly having accessing to data. Here are some data plane actions that can be specified inDataActionsandNotDataActions:
DataActions
NotDataActions
*
DataActions
NotDataActions
Read a list of blobs in a container
Write a storage blob in a container
Delete a message in a queue
Here's theStorage Blob Data Readerrole definition, which includes actions in both theActionsandDataActionsproperties. This role allows you to read the blob container and also the underlying blob data.
Actions
DataActions
Storage Blob Data Reader role as displayed in Azure PowerShell:
{
  "Name": "Storage Blob Data Reader",
  "Id": "2a2b9908-6ea1-4ae2-8e65-a410df84e7d1",
  "IsCustom": false,
  "Description": "Allows for read access to Azure Storage blob containers and data",
  "Actions": [
    "Microsoft.Storage/storageAccounts/blobServices/containers/read",
    "Microsoft.Storage/storageAccounts/blobServices/generateUserDelegationKey/action"
  ],
  "NotActions": [],
  "DataActions": [
    "Microsoft.Storage/storageAccounts/blobServices/containers/blobs/read"
  ],
  "NotDataActions": [],
  "AssignableScopes": [
    "/"
  ],
  "Condition": null,
  "ConditionVersion": null
}
{
  "Name": "Storage Blob Data Reader",
  "Id": "2a2b9908-6ea1-4ae2-8e65-a410df84e7d1",
  "IsCustom": false,
  "Description": "Allows for read access to Azure Storage blob containers and data",
  "Actions": [
    "Microsoft.Storage/storageAccounts/blobServices/containers/read",
    "Microsoft.Storage/storageAccounts/blobServices/generateUserDelegationKey/action"
  ],
  "NotActions": [],
  "DataActions": [
    "Microsoft.Storage/storageAccounts/blobServices/containers/blobs/read"
  ],
  "NotDataActions": [],
  "AssignableScopes": [
    "/"
  ],
  "Condition": null,
  "ConditionVersion": null
}
Storage Blob Data Reader role as displayed in Azure CLI:
[
  {
    "assignableScopes": [
      "/"
    ],
    "createdBy": null,
    "createdOn": "2017-12-21T00:01:24.797231+00:00",
    "description": "Allows for read access to Azure Storage blob containers and data",
    "id": "/subscriptions/{subscriptionId}/providers/Microsoft.Authorization/roleDefinitions/2a2b9908-6ea1-4ae2-8e65-a410df84e7d1",
    "name": "2a2b9908-6ea1-4ae2-8e65-a410df84e7d1",
    "permissions": [
      {
        "actions": [
          "Microsoft.Storage/storageAccounts/blobServices/containers/read",
          "Microsoft.Storage/storageAccounts/blobServices/generateUserDelegationKey/action"
        ],
        "condition": null,
        "conditionVersion": null,
        "dataActions": [
          "Microsoft.Storage/storageAccounts/blobServices/containers/blobs/read"
        ],
        "notActions": [],
        "notDataActions": []
      }
    ],
    "roleName": "Storage Blob Data Reader",
    "roleType": "BuiltInRole",
    "type": "Microsoft.Authorization/roleDefinitions",
    "updatedBy": null,
    "updatedOn": "2021-11-11T20:13:55.297507+00:00"
  }
]
[
  {
    "assignableScopes": [
      "/"
    ],
    "createdBy": null,
    "createdOn": "2017-12-21T00:01:24.797231+00:00",
    "description": "Allows for read access to Azure Storage blob containers and data",
    "id": "/subscriptions/{subscriptionId}/providers/Microsoft.Authorization/roleDefinitions/2a2b9908-6ea1-4ae2-8e65-a410df84e7d1",
    "name": "2a2b9908-6ea1-4ae2-8e65-a410df84e7d1",
    "permissions": [
      {
        "actions": [
          "Microsoft.Storage/storageAccounts/blobServices/containers/read",
          "Microsoft.Storage/storageAccounts/blobServices/generateUserDelegationKey/action"
        ],
        "condition": null,
        "conditionVersion": null,
        "dataActions": [
          "Microsoft.Storage/storageAccounts/blobServices/containers/blobs/read"
        ],
        "notActions": [],
        "notDataActions": []
      }
    ],
    "roleName": "Storage Blob Data Reader",
    "roleType": "BuiltInRole",
    "type": "Microsoft.Authorization/roleDefinitions",
    "updatedBy": null,
    "updatedOn": "2021-11-11T20:13:55.297507+00:00"
  }
]
Only data plane actions can be added to theDataActionsandNotDataActionsproperties. Resource providers identify which actions are data actions, by setting theisDataActionproperty totrue. To see a list of the actions whereisDataActionistrue, seeResource provider operations. Roles that do not have data actions are not required to haveDataActionsandNotDataActionsproperties within the role definition.
DataActions
NotDataActions
isDataAction
true
isDataAction
true
DataActions
NotDataActions
Authorization for all control plane API calls is handled by Azure Resource Manager. Authorization for data plane API calls is handled by either a resource provider or Azure Resource Manager.
Data actions example
To better understand how control plane and data plane actions work, let's consider a specific example. Alice has been assigned theOwnerrole at the subscription scope. Bob has been assigned theStorage Blob Data Contributorrole at a storage account scope. The following diagram shows this example.

TheOwnerrole for Alice and theStorage Blob Data Contributorrole for  Bob have the following actions:
Owner
Actions*
*
Storage Blob Data Contributor
ActionsMicrosoft.Storage/storageAccounts/blobServices/containers/deleteMicrosoft.Storage/storageAccounts/blobServices/containers/readMicrosoft.Storage/storageAccounts/blobServices/containers/writeMicrosoft.Storage/storageAccounts/blobServices/generateUserDelegationKey/actionDataActionsMicrosoft.Storage/storageAccounts/blobServices/containers/blobs/deleteMicrosoft.Storage/storageAccounts/blobServices/containers/blobs/readMicrosoft.Storage/storageAccounts/blobServices/containers/blobs/writeMicrosoft.Storage/storageAccounts/blobServices/containers/blobs/move/actionMicrosoft.Storage/storageAccounts/blobServices/containers/blobs/add/action
Microsoft.Storage/storageAccounts/blobServices/containers/delete
Microsoft.Storage/storageAccounts/blobServices/containers/read
Microsoft.Storage/storageAccounts/blobServices/containers/write
Microsoft.Storage/storageAccounts/blobServices/generateUserDelegationKey/action
Microsoft.Storage/storageAccounts/blobServices/containers/blobs/delete
Microsoft.Storage/storageAccounts/blobServices/containers/blobs/read
Microsoft.Storage/storageAccounts/blobServices/containers/blobs/write
Microsoft.Storage/storageAccounts/blobServices/containers/blobs/move/action
Microsoft.Storage/storageAccounts/blobServices/containers/blobs/add/action
Since Alice has a wildcard (*) action at a subscription scope, their permissions inherit down to enable them to perform all control plane actions. Alice can read, write, and delete containers. However, Alice cannot perform data plane actions without taking additional steps. For example, by default, Alice cannot read the blobs inside a container. To read the blobs, Alice would have to retrieve the storage access keys and use them to access the blobs.
*
Bob's permissions are restricted to just theActionsandDataActionsspecified in theStorage Blob Data Contributorrole. Based on the role, Bob can perform both control plane and data plane actions. For example, Bob can read, write, and delete containers in the specified storage account and can also read, write, and delete the blobs.
Actions
DataActions
For more information about control and data plane security for storage, see theAzure Storage security guide.
What tools support using Azure roles for data actions?
To view and work with data actions, you must have the correct versions of the tools or SDKs:
To view and use the data actions in the REST API, you must set theapi-versionparameter to the following version or later:
2018-07-01
Actions
TheActionspermission specifies the control plane actions that the role allows to be performed. It is a collection of strings that identify securable actions of Azure resource providers. Here are some examples of control plane actions that can be used inActions.
Actions
Actions
*/read
Microsoft.Compute/*
Microsoft.Network/*/read
Microsoft.Compute/virtualMachines/*
microsoft.web/sites/restart/Action
NotActions
TheNotActionspermission specifies the control plane actions that are subtracted or excluded from the allowedActionsthat have a wildcard (*). Use theNotActionspermission if the set of actions that you want to allow is more easily defined by subtracting fromActionsthat have a wildcard (*). The access granted by a role (effective permissions) is computed by subtracting theNotActionsactions from theActionsactions.
NotActions
Actions
*
NotActions
Actions
*
NotActions
Actions
Actions - NotActions = Effective control plane permissions
Actions - NotActions = Effective control plane permissions
The following table shows two examples of the effective control plane permissions for aMicrosoft.CostManagementwildcard action:
Microsoft.CostManagement/exports/*
Microsoft.CostManagement/exports/action
Microsoft.CostManagement/exports/read
Microsoft.CostManagement/exports/write
Microsoft.CostManagement/exports/delete
Microsoft.CostManagement/exports/run/action
Microsoft.CostManagement/exports/*
Microsoft.CostManagement/exports/delete
Microsoft.CostManagement/exports/action
Microsoft.CostManagement/exports/read
Microsoft.CostManagement/exports/write
Microsoft.CostManagement/exports/run/action
Note
If a user is assigned a role that excludes an action inNotActions, and is assigned a second role that grants access to the same action, the user is allowed to perform that action.NotActionsis not a deny rule â it is simply a convenient way to create a set of allowed actions when specific actions need to be excluded.
NotActions
NotActions
Differences between NotActions and deny assignments
NotActionsand deny assignments are not the same and serve different purposes.NotActionsare a convenient way to subtract specific actions from a wildcard (*) action.
NotActions
NotActions
*
Deny assignments block users from performing specific actions even if a role assignment grants them access. For more information, seeUnderstand Azure deny assignments.
DataActions
TheDataActionspermission specifies the data plane actions that the role allows to be performed to your data within that object. For example, if a user has read blob data access to a storage account, then they can read the blobs within that storage account. Here are some examples of data actions that can be used inDataActions.
DataActions
DataActions
Microsoft.Storage/storageAccounts/blobServices/containers/blobs/read
Microsoft.Storage/storageAccounts/blobServices/containers/blobs/write
Microsoft.Storage/storageAccounts/queueServices/queues/messages/read
Microsoft.Storage/storageAccounts/queueServices/queues/messages/*
NotDataActions
TheNotDataActionspermission specifies the data plane actions that are subtracted or excluded from the allowedDataActionsthat have a wildcard (*). Use theNotDataActionspermission if the set of actions that you want to allow is more easily defined by subtracting fromDataActionsthat have a wildcard (*). The access granted by a role (effective permissions) is computed by subtracting theNotDataActionsactions from theDataActionsactions. Each resource provider provides its respective set of APIs to fulfill data actions.
NotDataActions
DataActions
*
NotDataActions
DataActions
*
NotDataActions
DataActions
DataActions - NotDataActions = Effective data plane permissions
DataActions - NotDataActions = Effective data plane permissions
The following table shows two examples of the effective date plane permissions for aMicrosoft.Storagewildcard action:
Microsoft.Storage/storageAccounts/queueServices/queues/messages/*
Microsoft.Storage/storageAccounts/queueServices/queues/messages/read
Microsoft.Storage/storageAccounts/queueServices/queues/messages/write
Microsoft.Storage/storageAccounts/queueServices/queues/messages/delete
Microsoft.Storage/storageAccounts/queueServices/queues/messages/add/action
Microsoft.Storage/storageAccounts/queueServices/queues/messages/process/action
Microsoft.Storage/storageAccounts/queueServices/queues/messages/*
Microsoft.Storage/storageAccounts/queueServices/queues/messages/delete
Microsoft.Storage/storageAccounts/queueServices/queues/messages/read
Microsoft.Storage/storageAccounts/queueServices/queues/messages/write
Microsoft.Storage/storageAccounts/queueServices/queues/messages/add/action
Microsoft.Storage/storageAccounts/queueServices/queues/messages/process/action
Note
If a user is assigned a role that excludes a data action inNotDataActions, and is assigned a second role that grants access to the same data action, the user is allowed to perform that data action.NotDataActionsis not a deny rule â it is simply a convenient way to create a set of allowed data actions when specific data actions need to be excluded.
NotDataActions
NotDataActions
AssignableScopes
TheAssignableScopesproperty specifies the scopes (root, management group, subscriptions, or resource groups) where a role definition can be assigned. You can make a custom role available for assignment in only the management group, subscriptions, or resource groups that require it. You must use at least one management group, subscription, or resource group.
AssignableScopes
For example, ifAssignableScopesis set to a subscription, that means that the custom role is available for assignment at subscription scope for the specified subscription, resource group scope for any resource group in the subscription, or resource scope for any resource in the subscription.
AssignableScopes
Built-in roles haveAssignableScopesset to the root scope ("/"). The root scope indicates that the role is available for assignment in all scopes.
AssignableScopes
"/"
Examples of valid assignable scopes include:
"/subscriptions/{subscriptionId1}"
"/subscriptions/{subscriptionId1}", "/subscriptions/{subscriptionId2}"
"/subscriptions/{subscriptionId1}/resourceGroups/Network"
"/providers/Microsoft.Management/managementGroups/{groupId1}"
"/providers/Microsoft.Management/managementGroups/{groupId1}", "/subscriptions/{subscriptionId1}",
"/"
You can define only one management group inAssignableScopesof a custom role.
AssignableScopes
Although it's possible to create a custom role with a resource instance inAssignableScopesusing the command line, it's not recommended. Each tenant supports a maximum of 5,000 custom roles. Using this strategy could potentially exhaust your available custom roles. Ultimately, the level of access is determined by the custom role assignment (scope + role permissions + security principal) and not theAssignableScopeslisted in the custom role. So, create your custom roles withAssignableScopesof management group, subscription, or resource group, but assign the custom roles with narrow scope, such as resource or resource group.
AssignableScopes
AssignableScopes
AssignableScopes
For more information aboutAssignableScopesfor custom roles, seeAzure custom roles.
AssignableScopes
Privileged administrator role definition
Privileged administrator roles are roles that grant privileged administrator access, such as the ability to manage Azure resources or assign roles to other users. If a built-in or custom role includes any of the following actions, it is considered privileged. For more information, seeList or manage privileged administrator role assignments.
*
*/delete
*/write
Microsoft.Authorization/denyAssignments/delete
Microsoft.Authorization/denyAssignments/write
Microsoft.Authorization/roleAssignments/delete
Microsoft.Authorization/roleAssignments/write
Microsoft.Authorization/roleDefinitions/delete
Microsoft.Authorization/roleDefinitions/write
Next steps
Understand role assignments
Azure built-in roles
Azure custom roles
Azure resource provider operations
Feedback
Was this page helpful?
Additional resources