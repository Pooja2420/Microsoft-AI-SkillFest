Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Tutorial: Create and manage policies to enforce compliance
Article
2025-03-04
8 contributors
In this article
Understanding how to create and manage policies in Azure is important for staying compliant with
your corporate standards and service-level agreements. In this tutorial, you learn to use Azure
Policy to do some of the more common tasks related to creating, assigning, and managing policies
across your organization, such as:
Assign a policy to enforce a condition for resources you create in the future
Create and assign an initiative definition to track compliance for multiple resources
Resolve a non-compliant or denied resource
Implement a new policy across an organization
If you would like to assign a policy to identify the current compliance state of your existing
resources, the quickstart articles go over how to do so.
Prerequisites
If you don't have an Azure subscription, create afree accountbefore you begin.
Assign a policy
The first step in enforcing compliance with Azure Policy is to assign a policy definition. A policy
definition defines under what condition a policy is enforced and what effect to take. In this
example, assign the built-in policy definition calledInherit a tag from the resource group if
missingto add the specified tag with its value from the parent resource group to new or updated
resources missing the tag.
Go to the Azure portal to assign policies. Search for and selectPolicy.
Go to the Azure portal to assign policies. Search for and selectPolicy.

SelectAssignmentson the left side of the Azure Policy page. An assignment is a policy that
has been assigned to take place within a specific scope.
SelectAssignmentson the left side of the Azure Policy page. An assignment is a policy that
has been assigned to take place within a specific scope.

SelectAssign Policyfrom the top of thePolicy | Assignmentspage.
SelectAssign Policyfrom the top of thePolicy | Assignmentspage.

On theAssign Policypage andBasicstab, select theScopeby selecting the ellipsis
and selecting either a management group or subscription. Optionally, select a resource group. A
scope determines what resources or grouping of resources the policy assignment gets enforced on.
Then selectSelectat the bottom of theScopepage.
On theAssign Policypage andBasicstab, select theScopeby selecting the ellipsis
and selecting either a management group or subscription. Optionally, select a resource group. A
scope determines what resources or grouping of resources the policy assignment gets enforced on.
Then selectSelectat the bottom of theScopepage.
Resources can be excluded based on theScope.Exclusionsstart at one level lower than
the level of theScope.Exclusionsare optional, so leave it blank for now.
Resources can be excluded based on theScope.Exclusionsstart at one level lower than
the level of theScope.Exclusionsare optional, so leave it blank for now.
Select thePolicy definitionellipsis to open the list of available definitions. You can
filter the policy definitionTypetoBuilt-into view all and read their descriptions.
Select thePolicy definitionellipsis to open the list of available definitions. You can
filter the policy definitionTypetoBuilt-into view all and read their descriptions.
SelectInherit a tag from the resource group if missing. If you can't find it right away,
typeinherit a taginto the search box and then press ENTER or select out of the search box.
SelectSelectat the bottom of theAvailable Definitionspage once you have found and
selected the policy definition.
SelectInherit a tag from the resource group if missing. If you can't find it right away,
typeinherit a taginto the search box and then press ENTER or select out of the search box.
SelectSelectat the bottom of theAvailable Definitionspage once you have found and
selected the policy definition.

TheVersionis automatically populated to the latest major version of the definition and set to autoinjest any non-breaking changes. You may change the version to others, if available or adjust your ingesting settings, but no change is required.Overridesare optional, so leave it blank for now.
TheVersionis automatically populated to the latest major version of the definition and set to autoinjest any non-breaking changes. You may change the version to others, if available or adjust your ingesting settings, but no change is required.Overridesare optional, so leave it blank for now.
TheAssignment nameis automatically populated with the policy name you selected, but you can
change it. For this example, leaveInherit a tag from the resource group if missing. You can
also add an optionalDescription. The description provides details about this policy
assignment.
TheAssignment nameis automatically populated with the policy name you selected, but you can
change it. For this example, leaveInherit a tag from the resource group if missing. You can
also add an optionalDescription. The description provides details about this policy
assignment.
LeavePolicy enforcementasEnabled. WhenDisabled, this setting allows testing the
outcome of the policy without triggering the effect. For more information, seeenforcement mode.
LeavePolicy enforcementasEnabled. WhenDisabled, this setting allows testing the
outcome of the policy without triggering the effect. For more information, seeenforcement mode.
Select theParameterstab at the top of the wizard.
Select theParameterstab at the top of the wizard.
ForTag Name, enterEnvironment.
ForTag Name, enterEnvironment.
Select theRemediationtab at the top of the wizard.
Select theRemediationtab at the top of the wizard.
LeaveCreate a remediation taskunchecked. This box allows you to create a task to alter
existing resources in addition to new or updated resources. For more information, seeremediate resources.
LeaveCreate a remediation taskunchecked. This box allows you to create a task to alter
existing resources in addition to new or updated resources. For more information, seeremediate resources.
Create a Managed Identityis automatically checked since this policy definition uses themodifyeffect.Type of Managed Identityis set toSystem Assigned.Permissionsis set toContributorautomatically based on the policy definition. For more information, seemanaged identitiesandhow remediation access control works.
Create a Managed Identityis automatically checked since this policy definition uses themodifyeffect.Type of Managed Identityis set toSystem Assigned.Permissionsis set toContributorautomatically based on the policy definition. For more information, seemanaged identitiesandhow remediation access control works.
Select theNon-compliance messagestab at the top of the wizard.
Select theNon-compliance messagestab at the top of the wizard.
Set theNon-compliance messagetoThis resource doesn't have the required tag. This custom
message is displayed when a resource is denied or for non-compliant resources during regular
evaluation.
Set theNon-compliance messagetoThis resource doesn't have the required tag. This custom
message is displayed when a resource is denied or for non-compliant resources during regular
evaluation.
Select theReview + createtab at the top of the wizard.
Select theReview + createtab at the top of the wizard.
Review your selections, then selectCreateat the bottom of the page.
Review your selections, then selectCreateat the bottom of the page.
Implement a new custom policy
Now that you've assigned a built-in policy definition, you can do more with Azure Policy. Next,
create a new custom policy to save costs by validating that virtual machines created in your
environment can't be in the G series. This way, every time a user in your organization tries to
create a virtual machine in the G series, the request is denied.
SelectDefinitionsunderAuthoringin the left side of the Azure Policy page.
SelectDefinitionsunderAuthoringin the left side of the Azure Policy page.

Select+ Policy definitionat the top of the page. This button opens to thePolicy
definitionpage.
Select+ Policy definitionat the top of the page. This button opens to thePolicy
definitionpage.
Enter the following information:The management group or subscription in which the policy definition is saved. Select by using
the ellipsis onDefinition location.NoteIf you plan to apply this policy definition to multiple subscriptions, the location must be a
management group that contains the subscriptions you assign the policy to. The same is true
for an initiative definition.The name of the policy definition -Require VM SKUs not in the G seriesThe description of what the policy definition is intended to do -This policy definition
enforces that all virtual machines created in this scope have SKUs other than the G series to
reduce cost.Choose from existing options (such asCompute), or create a new category for this policy
definition.Copy the following JSON code and then update it for your needs with:The policy parameters.The policy rules/conditions, in this case - VM SKU size equal to G seriesThe policy effect, in this case -Deny.Here's what the JSON should look like. Paste your revised code into the Azure portal.{
    "policyRule": {
        "if": {
            "allOf": [{
                    "field": "type",
                    "equals": "Microsoft.Compute/virtualMachines"
                },
                {
                    "field": "Microsoft.Compute/virtualMachines/sku.name",
                    "like": "Standard_G*"
                }
            ]
        },
        "then": {
            "effect": "deny"
        }
    }
}Thefieldproperty in the policy rule must be a supported value. A full list of values is found
onpolicy definition structure fields. An example
of an alias might be"Microsoft.Compute/VirtualMachines/Size".To view more Azure Policy samples, seeAzure Policy samples.
Enter the following information:
The management group or subscription in which the policy definition is saved. Select by using
the ellipsis onDefinition location.NoteIf you plan to apply this policy definition to multiple subscriptions, the location must be a
management group that contains the subscriptions you assign the policy to. The same is true
for an initiative definition.
The management group or subscription in which the policy definition is saved. Select by using
the ellipsis onDefinition location.
Note
If you plan to apply this policy definition to multiple subscriptions, the location must be a
management group that contains the subscriptions you assign the policy to. The same is true
for an initiative definition.
The name of the policy definition -Require VM SKUs not in the G series
The name of the policy definition -Require VM SKUs not in the G series
The description of what the policy definition is intended to do -This policy definition
enforces that all virtual machines created in this scope have SKUs other than the G series to
reduce cost.
The description of what the policy definition is intended to do -This policy definition
enforces that all virtual machines created in this scope have SKUs other than the G series to
reduce cost.
Choose from existing options (such asCompute), or create a new category for this policy
definition.
Choose from existing options (such asCompute), or create a new category for this policy
definition.
Copy the following JSON code and then update it for your needs with:The policy parameters.The policy rules/conditions, in this case - VM SKU size equal to G seriesThe policy effect, in this case -Deny.
Copy the following JSON code and then update it for your needs with:
The policy parameters.
The policy rules/conditions, in this case - VM SKU size equal to G series
The policy effect, in this case -Deny.
Here's what the JSON should look like. Paste your revised code into the Azure portal.
{
    "policyRule": {
        "if": {
            "allOf": [{
                    "field": "type",
                    "equals": "Microsoft.Compute/virtualMachines"
                },
                {
                    "field": "Microsoft.Compute/virtualMachines/sku.name",
                    "like": "Standard_G*"
                }
            ]
        },
        "then": {
            "effect": "deny"
        }
    }
}
{
    "policyRule": {
        "if": {
            "allOf": [{
                    "field": "type",
                    "equals": "Microsoft.Compute/virtualMachines"
                },
                {
                    "field": "Microsoft.Compute/virtualMachines/sku.name",
                    "like": "Standard_G*"
                }
            ]
        },
        "then": {
            "effect": "deny"
        }
    }
}
Thefieldproperty in the policy rule must be a supported value. A full list of values is found
onpolicy definition structure fields. An example
of an alias might be"Microsoft.Compute/VirtualMachines/Size".
"Microsoft.Compute/VirtualMachines/Size"
To view more Azure Policy samples, seeAzure Policy samples.
SelectSave.
SelectSave.
Create a policy definition with REST API
You can create a policy with the REST API for Azure Policy Definitions. The REST API enables you to
create and delete policy definitions, and get information about existing definitions. To create a
policy definition, use the following example:
PUT https://management.azure.com/subscriptions/{subscriptionId}/providers/Microsoft.authorization/policydefinitions/{policyDefinitionName}?api-version={api-version}
PUT https://management.azure.com/subscriptions/{subscriptionId}/providers/Microsoft.authorization/policydefinitions/{policyDefinitionName}?api-version={api-version}
Include a request body similar to the following example:
{
    "properties": {
        "parameters": {
            "allowedLocations": {
                "type": "array",
                "metadata": {
                    "description": "The list of locations that can be specified when deploying resources",
                    "strongType": "location",
                    "displayName": "Allowed locations"
                }
            }
        },
        "displayName": "Allowed locations",
        "description": "This policy enables you to restrict the locations your organization can specify when deploying resources.",
        "policyRule": {
            "if": {
                "not": {
                    "field": "location",
                    "in": "[parameters('allowedLocations')]"
                }
            },
            "then": {
                "effect": "deny"
            }
        }
    }
}
{
    "properties": {
        "parameters": {
            "allowedLocations": {
                "type": "array",
                "metadata": {
                    "description": "The list of locations that can be specified when deploying resources",
                    "strongType": "location",
                    "displayName": "Allowed locations"
                }
            }
        },
        "displayName": "Allowed locations",
        "description": "This policy enables you to restrict the locations your organization can specify when deploying resources.",
        "policyRule": {
            "if": {
                "not": {
                    "field": "location",
                    "in": "[parameters('allowedLocations')]"
                }
            },
            "then": {
                "effect": "deny"
            }
        }
    }
}
Create a policy definition with PowerShell
Before proceeding with the PowerShell example, make sure you've installed the latest version of the
Azure PowerShell Az module.
You can create a policy definition using theNew-AzPolicyDefinitioncmdlet.
New-AzPolicyDefinition
To create a policy definition from a file, pass the path to the file. For an external file, use the
following example:
$definition = New-AzPolicyDefinition `
    -Name 'denyCoolTiering' `
    -DisplayName 'Deny cool access tiering for storage' `
    -Policy 'https://raw.githubusercontent.com/Azure/azure-policy-samples/master/samples/Storage/storage-account-access-tier/azurepolicy.rules.json'
$definition = New-AzPolicyDefinition `
    -Name 'denyCoolTiering' `
    -DisplayName 'Deny cool access tiering for storage' `
    -Policy 'https://raw.githubusercontent.com/Azure/azure-policy-samples/master/samples/Storage/storage-account-access-tier/azurepolicy.rules.json'
For a local file use, use the following example:
$definition = New-AzPolicyDefinition `
    -Name 'denyCoolTiering' `
    -Description 'Deny cool access tiering for storage' `
    -Policy 'c:\policies\coolAccessTier.json'
$definition = New-AzPolicyDefinition `
    -Name 'denyCoolTiering' `
    -Description 'Deny cool access tiering for storage' `
    -Policy 'c:\policies\coolAccessTier.json'
To create a policy definition with an inline rule, use the following example:
$definition = New-AzPolicyDefinition -Name 'denyCoolTiering' -Description 'Deny cool access tiering for storage' -Policy '{
    "if": {
        "allOf": [{
                "field": "type",
                "equals": "Microsoft.Storage/storageAccounts"
            },
            {
                "field": "kind",
                "equals": "BlobStorage"
            },
            {
                "field": "Microsoft.Storage/storageAccounts/accessTier",
                "equals": "cool"
            }
        ]
    },
    "then": {
        "effect": "deny"
    }
}'
$definition = New-AzPolicyDefinition -Name 'denyCoolTiering' -Description 'Deny cool access tiering for storage' -Policy '{
    "if": {
        "allOf": [{
                "field": "type",
                "equals": "Microsoft.Storage/storageAccounts"
            },
            {
                "field": "kind",
                "equals": "BlobStorage"
            },
            {
                "field": "Microsoft.Storage/storageAccounts/accessTier",
                "equals": "cool"
            }
        ]
    },
    "then": {
        "effect": "deny"
    }
}'
The output is stored in a$definitionobject, which is used during policy assignment. The
following example creates a policy definition that includes parameters:
$definition
$policy = '{
    "if": {
        "allOf": [{
                "field": "type",
                "equals": "Microsoft.Storage/storageAccounts"
            },
            {
                "not": {
                    "field": "location",
                    "in": "[parameters(''allowedLocations'')]"
                }
            }
        ]
    },
    "then": {
        "effect": "Deny"
    }
}'

$parameters = '{
    "allowedLocations": {
        "type": "array",
        "metadata": {
            "description": "The list of locations that can be specified when deploying storage accounts.",
            "strongType": "location",
            "displayName": "Allowed locations"
        }
    }
}'

$definition = New-AzPolicyDefinition -Name 'storageLocations' -Description 'Policy to specify locations for storage accounts.' -Policy $policy -Parameter $parameters
$policy = '{
    "if": {
        "allOf": [{
                "field": "type",
                "equals": "Microsoft.Storage/storageAccounts"
            },
            {
                "not": {
                    "field": "location",
                    "in": "[parameters(''allowedLocations'')]"
                }
            }
        ]
    },
    "then": {
        "effect": "Deny"
    }
}'

$parameters = '{
    "allowedLocations": {
        "type": "array",
        "metadata": {
            "description": "The list of locations that can be specified when deploying storage accounts.",
            "strongType": "location",
            "displayName": "Allowed locations"
        }
    }
}'

$definition = New-AzPolicyDefinition -Name 'storageLocations' -Description 'Policy to specify locations for storage accounts.' -Policy $policy -Parameter $parameters
View policy definitions with PowerShell
To see all policy definitions in your subscription, use the following command:
Get-AzPolicyDefinition
Get-AzPolicyDefinition
It returns all available policy definitions, including built-in policies. Each policy is returned
in the following format:
Name               : e56962a6-4747-49cd-b67b-bf8b01975c4c
ResourceId         : /providers/Microsoft.Authorization/policyDefinitions/e56962a6-4747-49cd-b67b-bf8b01975c4c
ResourceName       : e56962a6-4747-49cd-b67b-bf8b01975c4c
ResourceType       : Microsoft.Authorization/policyDefinitions
Properties         : @{displayName=Allowed locations; policyType=BuiltIn; description=This policy enables you to
                     restrict the locations your organization can specify when deploying resources. Use to enforce
                     your geo-compliance requirements.; parameters=; policyRule=}
PolicyDefinitionId : /providers/Microsoft.Authorization/policyDefinitions/e56962a6-4747-49cd-b67b-bf8b01975c4c
Name               : e56962a6-4747-49cd-b67b-bf8b01975c4c
ResourceId         : /providers/Microsoft.Authorization/policyDefinitions/e56962a6-4747-49cd-b67b-bf8b01975c4c
ResourceName       : e56962a6-4747-49cd-b67b-bf8b01975c4c
ResourceType       : Microsoft.Authorization/policyDefinitions
Properties         : @{displayName=Allowed locations; policyType=BuiltIn; description=This policy enables you to
                     restrict the locations your organization can specify when deploying resources. Use to enforce
                     your geo-compliance requirements.; parameters=; policyRule=}
PolicyDefinitionId : /providers/Microsoft.Authorization/policyDefinitions/e56962a6-4747-49cd-b67b-bf8b01975c4c
Create a policy definition with Azure CLI
You can create a policy definition using Azure CLI with theaz policy definitioncommand. To
create a policy definition with an inline rule, use the following example:
az policy definition
az policy definition create --name 'denyCoolTiering' --description 'Deny cool access tiering for storage' --rules '{
    "if": {
        "allOf": [{
                "field": "type",
                "equals": "Microsoft.Storage/storageAccounts"
            },
            {
                "field": "kind",
                "equals": "BlobStorage"
            },
            {
                "field": "Microsoft.Storage/storageAccounts/accessTier",
                "equals": "cool"
            }
        ]
    },
    "then": {
        "effect": "deny"
    }
}'
az policy definition create --name 'denyCoolTiering' --description 'Deny cool access tiering for storage' --rules '{
    "if": {
        "allOf": [{
                "field": "type",
                "equals": "Microsoft.Storage/storageAccounts"
            },
            {
                "field": "kind",
                "equals": "BlobStorage"
            },
            {
                "field": "Microsoft.Storage/storageAccounts/accessTier",
                "equals": "cool"
            }
        ]
    },
    "then": {
        "effect": "deny"
    }
}'
View policy definitions with Azure CLI
To see all policy definitions in your subscription, use the following command:
az policy definition list
az policy definition list
It returns all available policy definitions, including built-in policies. Each policy is returned
in the following format:
{
    "description": "This policy enables you to restrict the locations your organization can specify when deploying resources. Use to enforce your geo-compliance requirements.",
    "displayName": "Allowed locations",
    "version": "1.0.0"
    "id": "/providers/Microsoft.Authorization/policyDefinitions/e56962a6-4747-49cd-b67b-bf8b01975c4c",
    "name": "e56962a6-4747-49cd-b67b-bf8b01975c4c",
    "policyRule": {
        "if": {
            "not": {
                "field": "location",
                "in": "[parameters('listOfAllowedLocations')]"
            }
        },
        "then": {
            "effect": "Deny"
        }
    },
    "policyType": "BuiltIn"
}
{
    "description": "This policy enables you to restrict the locations your organization can specify when deploying resources. Use to enforce your geo-compliance requirements.",
    "displayName": "Allowed locations",
    "version": "1.0.0"
    "id": "/providers/Microsoft.Authorization/policyDefinitions/e56962a6-4747-49cd-b67b-bf8b01975c4c",
    "name": "e56962a6-4747-49cd-b67b-bf8b01975c4c",
    "policyRule": {
        "if": {
            "not": {
                "field": "location",
                "in": "[parameters('listOfAllowedLocations')]"
            }
        },
        "then": {
            "effect": "Deny"
        }
    },
    "policyType": "BuiltIn"
}
Create and assign an initiative definition
With an initiative definition, you can group several policy definitions to achieve one overarching
goal. An initiative evaluates resources within scope of the assignment for compliance to the
included policies. For more information about initiative definitions, seeAzure Policy
overview.
Create an initiative definition
SelectDefinitionsunderAuthoringin the left side of the Azure Policy page.
SelectDefinitionsunderAuthoringin the left side of the Azure Policy page.

Select+ Initiative Definitionat the top of the page to open theInitiative definitionwizard.
Select+ Initiative Definitionat the top of the page to open theInitiative definitionwizard.

Use theInitiative locationellipsis to select a management group or subscription to store
the definition. If the previous page was scoped to a single management group or subscription,Initiative locationis automatically populated.
Use theInitiative locationellipsis to select a management group or subscription to store
the definition. If the previous page was scoped to a single management group or subscription,Initiative locationis automatically populated.
Enter theNameandDescriptionof the initiative.This example validates that resources are in compliance with policy definitions about getting
secure. Name the initiativeGet Secureand set the description as:This initiative has been
created to handle all policy definitions associated with securing resources.
Enter theNameandDescriptionof the initiative.
This example validates that resources are in compliance with policy definitions about getting
secure. Name the initiativeGet Secureand set the description as:This initiative has been
created to handle all policy definitions associated with securing resources.
ForCategory, choose from existing options or create a new category.
ForCategory, choose from existing options or create a new category.
Set aVersionfor the initiative, such as1.0.NoteThe version value is strictly metadata and isn't used for updates or any process by the Azure
Policy service.
Set aVersionfor the initiative, such as1.0.
Note
The version value is strictly metadata and isn't used for updates or any process by the Azure
Policy service.
SelectNextat the bottom of the page or thePoliciestab at the top of the wizard.
SelectNextat the bottom of the page or thePoliciestab at the top of the wizard.
SelectAdd policy definition(s)button and browse through the list. Select the policy
definition(s) you want added to this initiative. For theGet Secureinitiative, add the
following built-in policy definitions by selecting the checkbox next to the policy definition:Allowed locationsEndpoint protection should be installed on machinesNon-internet-facing virtual machines should be protected with network security groupsAzure Backup should be enabled for Virtual MachinesDisk encryption should be applied on virtual machinesAdd or replace a tag on resources (add this policy definition twice)After selecting each policy definition from the list, selectAddat the bottom of the list.
Since it's added twice, theAdd or replace a tag on resourcespolicy definitions each get a
differentreference ID.NoteThe selected policy definitions can be added to groups by selecting one or more added
definitions and selectingAdd selected policies to a group. The group must exist first
and can be created on theGroupstab of the wizard.
SelectAdd policy definition(s)button and browse through the list. Select the policy
definition(s) you want added to this initiative. For theGet Secureinitiative, add the
following built-in policy definitions by selecting the checkbox next to the policy definition:
Allowed locations
Endpoint protection should be installed on machines
Non-internet-facing virtual machines should be protected with network security groups
Azure Backup should be enabled for Virtual Machines
Disk encryption should be applied on virtual machines
Add or replace a tag on resources (add this policy definition twice)
After selecting each policy definition from the list, selectAddat the bottom of the list.
Since it's added twice, theAdd or replace a tag on resourcespolicy definitions each get a
differentreference ID.

Note
The selected policy definitions can be added to groups by selecting one or more added
definitions and selectingAdd selected policies to a group. The group must exist first
and can be created on theGroupstab of the wizard.
SelectNextat the bottom of the page or theGroupstab at the top of the wizard. New
groups can be added from this tab. For this tutorial, we aren't adding any groups.
SelectNextat the bottom of the page or theGroupstab at the top of the wizard. New
groups can be added from this tab. For this tutorial, we aren't adding any groups.
SelectNextat the bottom of the page or theInitiative parameterstab at the top of the
wizard. If we wanted a parameter to exist at the initiative for passing to one or more included
policy definitions, the parameter is defined here and then used on thePolicy parameterstab.
For this tutorial, we aren't adding any initiative parameters.NoteOnce saved to an initiative definition, initiative parameters can't be deleted from the
initiative. If an initiative parameter is no longer needed, remove it from use by any policy
definition parameters.
SelectNextat the bottom of the page or theInitiative parameterstab at the top of the
wizard. If we wanted a parameter to exist at the initiative for passing to one or more included
policy definitions, the parameter is defined here and then used on thePolicy parameterstab.
For this tutorial, we aren't adding any initiative parameters.
Note
Once saved to an initiative definition, initiative parameters can't be deleted from the
initiative. If an initiative parameter is no longer needed, remove it from use by any policy
definition parameters.
SelectNextat the bottom of the page or thePolicy parameterstab at the top of the
wizard.
SelectNextat the bottom of the page or thePolicy parameterstab at the top of the
wizard.
Policy definitions added to the initiative that have parameters are displayed in a grid. Thevalue typecan be 'Default value', 'Set value', or 'Use Initiative Parameter'. If 'Set value'
is selected, the related value is entered underValue(s). If the parameter on the policy
definition has a list of allowed values, the entry box is a dropdown list selector. If 'Use
Initiative Parameter' is selected, a dropdown list select is provided with the names of
initiative parameters created on theInitiative parameterstab.NoteIn the case of somestrongTypeparameters, the list of values cannot be automatically
determined. In these cases, an ellipsis appears to the right of the parameter row. Selecting it
opens the 'Parameter scope (<parameter name>)' page. On this page, select the
subscription to use for providing the value options. This parameter scope is only used during
creation of the initiative definition and has no impact on policy evaluation or the scope of
the initiative when assigned.Set the 'Allowed locations'value typeto 'Set value' and select 'East US 2' from the dropdown
list. For the two instances of theAdd or replace a tag on resourcespolicy definitions, set
theTag Nameparameters to 'Env' and 'CostCenter and theTag Valueparameters to 'Test'
and 'Lab' as shown below. Leave the others as 'Default value'. Using the same definition twice in
the initiative but with different parameters, this configuration adds or replaces an 'Env' tag
with the value 'Test' and a 'CostCenter' tag with the value of 'Lab' on resources in scope of the
assignment.
Policy definitions added to the initiative that have parameters are displayed in a grid. Thevalue typecan be 'Default value', 'Set value', or 'Use Initiative Parameter'. If 'Set value'
is selected, the related value is entered underValue(s). If the parameter on the policy
definition has a list of allowed values, the entry box is a dropdown list selector. If 'Use
Initiative Parameter' is selected, a dropdown list select is provided with the names of
initiative parameters created on theInitiative parameterstab.

Note
In the case of somestrongTypeparameters, the list of values cannot be automatically
determined. In these cases, an ellipsis appears to the right of the parameter row. Selecting it
opens the 'Parameter scope (<parameter name>)' page. On this page, select the
subscription to use for providing the value options. This parameter scope is only used during
creation of the initiative definition and has no impact on policy evaluation or the scope of
the initiative when assigned.
strongType
Set the 'Allowed locations'value typeto 'Set value' and select 'East US 2' from the dropdown
list. For the two instances of theAdd or replace a tag on resourcespolicy definitions, set
theTag Nameparameters to 'Env' and 'CostCenter and theTag Valueparameters to 'Test'
and 'Lab' as shown below. Leave the others as 'Default value'. Using the same definition twice in
the initiative but with different parameters, this configuration adds or replaces an 'Env' tag
with the value 'Test' and a 'CostCenter' tag with the value of 'Lab' on resources in scope of the
assignment.

SelectReview + createat the bottom of the page or at the top of the wizard.
SelectReview + createat the bottom of the page or at the top of the wizard.
Review the settings and selectCreate.
Review the settings and selectCreate.
You can create a policy initiative definition using Azure CLI with theaz policy set-definitioncommand. To create a policy initiative definition with an existing policy definition, use the
following example:
az policy set-definition
az policy set-definition create -n readOnlyStorage --definitions '[
        {
            "policyDefinitionId": "/subscriptions/mySubId/providers/Microsoft.Authorization/policyDefinitions/storagePolicy",
            "parameters": { "storageSku": { "value": "[parameters(\"requiredSku\")]" } }
        }
    ]' \
    --params '{ "requiredSku": { "type": "String" } }'
az policy set-definition create -n readOnlyStorage --definitions '[
        {
            "policyDefinitionId": "/subscriptions/mySubId/providers/Microsoft.Authorization/policyDefinitions/storagePolicy",
            "parameters": { "storageSku": { "value": "[parameters(\"requiredSku\")]" } }
        }
    ]' \
    --params '{ "requiredSku": { "type": "String" } }'
You can create a policy initiative definition using Azure PowerShell with theNew-AzPolicySetDefinitioncmdlet. To create a policy initiative definition with an existing policy
definition, use the following policy initiative definition file asVMPolicySet.json:
New-AzPolicySetDefinition
VMPolicySet.json
[
    {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/2a0e14a6-b0a6-4fab-991a-187a4f81c498",
        "parameters": {
            "tagName": {
                "value": "Business Unit"
            },
            "tagValue": {
                "value": "Finance"
            }
        }
    },
    {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/464dbb85-3d5f-4a1d-bb09-95a9b5dd19cf"
    }
]
[
    {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/2a0e14a6-b0a6-4fab-991a-187a4f81c498",
        "parameters": {
            "tagName": {
                "value": "Business Unit"
            },
            "tagValue": {
                "value": "Finance"
            }
        }
    },
    {
        "policyDefinitionId": "/providers/Microsoft.Authorization/policyDefinitions/464dbb85-3d5f-4a1d-bb09-95a9b5dd19cf"
    }
]
New-AzPolicySetDefinition -Name 'VMPolicySetDefinition' -Metadata '{"category":"Virtual Machine"}' -PolicyDefinition C:\VMPolicySet.json
New-AzPolicySetDefinition -Name 'VMPolicySetDefinition' -Metadata '{"category":"Virtual Machine"}' -PolicyDefinition C:\VMPolicySet.json
Assign an initiative definition
SelectDefinitionsunderAuthoringin the left side of the Azure Policy page.
SelectDefinitionsunderAuthoringin the left side of the Azure Policy page.
Locate theGet Secureinitiative definition you previously created and select it. SelectAssignat the top of the page to open to theGet Secure: Assign initiativepage.You can also select and hold (or right-click) on the selected row or select the ellipsis at the
end of the row for a contextual menu. Then selectAssign.
Locate theGet Secureinitiative definition you previously created and select it. SelectAssignat the top of the page to open to theGet Secure: Assign initiativepage.

You can also select and hold (or right-click) on the selected row or select the ellipsis at the
end of the row for a contextual menu. Then selectAssign.

Fill out theGet Secure: Assign Initiativepage by entering the following example
information. You can use your own information.Scope: The management group or subscription you saved the initiative to become the default.
You can change scope to assign the initiative to a subscription or resource group within the
saved location.Exclusions: Configure any resources within the scope to prevent the initiative assignment from
being applied to them.Initiative definition and Assignment name: Get Secure (pre-populated as name of initiative
being assigned).Description: This initiative assignment is tailored to enforce this group of policy
definitions.Policy enforcement: Leave as the defaultEnabled.Assigned by: Automatically filled based on who is logged in. This field is optional, so custom
values can be entered.
Fill out theGet Secure: Assign Initiativepage by entering the following example
information. You can use your own information.
Scope: The management group or subscription you saved the initiative to become the default.
You can change scope to assign the initiative to a subscription or resource group within the
saved location.
Exclusions: Configure any resources within the scope to prevent the initiative assignment from
being applied to them.
Initiative definition and Assignment name: Get Secure (pre-populated as name of initiative
being assigned).
Description: This initiative assignment is tailored to enforce this group of policy
definitions.
Policy enforcement: Leave as the defaultEnabled.
Assigned by: Automatically filled based on who is logged in. This field is optional, so custom
values can be entered.
Select theParameterstab at the top of the wizard. If you configured an initiative parameter
in previous steps, set a value here.
Select theParameterstab at the top of the wizard. If you configured an initiative parameter
in previous steps, set a value here.
Select theRemediationtab at the top of the wizard. LeaveCreate a Managed Identityunchecked. This boxmustbe checked when the policy or initiative being assigned includes a
policy with thedeployIfNotExistsormodifyeffects. As the policy used for this tutorial doesn't,
leave it blank. For more information, seemanaged identitiesandhow remediation access control works.
Select theRemediationtab at the top of the wizard. LeaveCreate a Managed Identityunchecked. This boxmustbe checked when the policy or initiative being assigned includes a
policy with thedeployIfNotExistsormodifyeffects. As the policy used for this tutorial doesn't,
leave it blank. For more information, seemanaged identitiesandhow remediation access control works.
Select theReview + createtab at the top of the wizard.
Select theReview + createtab at the top of the wizard.
Review your selections, then selectCreateat the bottom of the page.
Review your selections, then selectCreateat the bottom of the page.
Check initial compliance
SelectCompliancein the left side of the Azure Policy page.
SelectCompliancein the left side of the Azure Policy page.
Locate theGet Secureinitiative. It's likely still inCompliance stateofNot started.
Select the initiative to get full details of the assignment.
Locate theGet Secureinitiative. It's likely still inCompliance stateofNot started.
Select the initiative to get full details of the assignment.

Once the initiative assignment has been completed, the compliance page is updated with theCompliance stateofCompliant.
Once the initiative assignment has been completed, the compliance page is updated with theCompliance stateofCompliant.

Selecting any policy on the initiative compliance page opens the compliance details page for that
policy. This page provides details at the resource level for compliance.
Selecting any policy on the initiative compliance page opens the compliance details page for that
policy. This page provides details at the resource level for compliance.
Remove a non-compliant or denied resource from the scope with an exclusion
After assigning a policy initiative to require a specific location, any resource created in a
different location is denied. In this section, you walk through resolving a denied request to create
a resource by creating an exclusion on a single resource group. The exclusion prevents enforcement
of the policy (or initiative) on that resource group. In the following example, any location is
allowed in the excluded resource group. An exclusion can apply to a subscription, a resource group,
or an individual resource.
Note
Apolicy exemptioncan also be used skip the evaluation of a
resource. For more information, seeScope in Azure Policy.
Deployments prevented by an assigned policy or initiative can be viewed on the resource group
targeted by the deployment: SelectDeploymentsin the left side of the page, then select theDeployment Nameof the failed deployment. The resource that was denied is listed with a status
ofForbidden. To determine the policy or initiative and assignment that denied the resource,
selectFailed. Click here for details ->on the Deployment Overview page. A window opens on the
right side of the page with the error information. UnderError Detailsare the GUIDs of the
related policy objects.

On the Azure Policy page: SelectCompliancein the left side of the page and select theGet
Securepolicy initiative. On this page, there's an increase in theDenycount for blocked
resources. Under theEventstab are details about who tried to create or deploy the resource
that was denied by the policy definition.

In this example, Trent Baker, one of Contoso's Sr. Virtualization specialists, was doing required
work. We need to grant Trent a space for an exception. Create a new resource group,LocationsExcluded, and next grant it an exception to this policy assignment.
Update assignment with exclusion
SelectAssignmentsunderAuthoringin the left side of the Azure Policy page.
SelectAssignmentsunderAuthoringin the left side of the Azure Policy page.
Browse through all policy assignments and open theGet Securepolicy assignment.
Browse through all policy assignments and open theGet Securepolicy assignment.
Set theExclusionby selecting the ellipsis and selecting the resource group to exclude,LocationsExcludedin this example. SelectAdd to Selected Scopeand then selectSave.NoteDepending on the policy definition and its effect, the exclusion could also be granted to
specific resources within a resource group inside the scope of the assignment. As aDenyeffect was used in this tutorial, it wouldn't make sense to set the exclusion on a specific
resource that already exists.
Set theExclusionby selecting the ellipsis and selecting the resource group to exclude,LocationsExcludedin this example. SelectAdd to Selected Scopeand then selectSave.

Note
Depending on the policy definition and its effect, the exclusion could also be granted to
specific resources within a resource group inside the scope of the assignment. As aDenyeffect was used in this tutorial, it wouldn't make sense to set the exclusion on a specific
resource that already exists.
SelectReview + saveand then selectSave.
SelectReview + saveand then selectSave.
In this section, you resolved the denied request by creating an exclusion on a single resource
group.
Clean up resources
If you're done working with resources from this tutorial, use the following steps to delete any of
the policy assignments or definitions created above:
SelectDefinitions(orAssignmentsif you're trying to delete an assignment) underAuthoringin the left side of the Azure Policy page.
SelectDefinitions(orAssignmentsif you're trying to delete an assignment) underAuthoringin the left side of the Azure Policy page.
Search for the new initiative or policy definition (or assignment) you want to remove.
Search for the new initiative or policy definition (or assignment) you want to remove.
Right-click the row or select the ellipses at the end of the definition (or assignment), and
selectDelete definition(orDelete assignment).
Right-click the row or select the ellipses at the end of the definition (or assignment), and
selectDelete definition(orDelete assignment).
Review
In this tutorial, you successfully accomplished the following tasks:
Assigned a policy to enforce a condition for resources you create in the future
Created and assign an initiative definition to track compliance for multiple resources
Resolved a non-compliant or denied resource
Implemented a new policy across an organization
Next steps
To learn more about the structures of policy definitions, look at this article:
Azure Policy definition structure
Feedback
Was this page helpful?
Additional resources