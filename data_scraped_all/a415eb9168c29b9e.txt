Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Securing service principals in Microsoft Entra ID
Article
2023-10-23
7 contributors
In this article
A Microsoft Entra service principal is the local representation of an application object in a tenant or directory. It's the identity of the application instance. Service principals define application access and resources the application accesses. A service principal is created in each tenant where the application is used and references the globally unique application object. The tenant secures the service principal sign-in and access to resources.
Learn more:Application and service principal objects in Microsoft Entra ID
Tenant-service principal relationships
A single-tenant application has one service principal in its home tenant. A multi-tenant web application or API requires a service principal in each tenant. A service principal is created when a user from that tenant consents to use of the application or API. This consent creates a one-to-many relationship between the multi-tenant application and its associated service principals.
A multi-tenant application is homed in a tenant and has instances in other tenants. Most software-as-a-service (SaaS) applications accommodate multi-tenancy. Use service principals to ensure the needed security posture for the application, and its users, in single- and multi-tenant scenarios.
ApplicationID and ObjectID
An application instance has two properties: the ApplicationID (or ClientID) and the ObjectID.
Note
The termsapplicationandservice principalare used interchangeably, when referring to an application in authentication tasks. However, they are two representations of applications in Microsoft Entra ID.
The ApplicationID represents the global application and is the same for application instances, across tenants. The ObjectID is a unique value for an application object. As with users, groups, and other resources, the ObjectID helps to identify an application instance in Microsoft Entra ID.
To learn more, seeApplication and service principal relationship in Microsoft Entra ID
Create an application and its service principal object
You can create an application and its service principal object (ObjectID) in a tenant using:
Azure PowerShell
Microsoft Graph PowerShell
Azure command-line interface (Azure CLI)
Microsoft Graph API
The Azure portal
Other tools

Service principal authentication
There are two mechanisms for authentication, when using service principalsâclient certificates and client secrets.

Because certificates are more secure, it's recommended you use them, when possible. Unlike client secrets, client certificates can't be embedded in code, accidentally. When possible, use Azure Key Vault for certificate and secrets management to encrypt assets with keys protected by hardware security modules:
Authentication keys
Storage account keys
Data encryption keys
.pfx files
Passwords
For more information on Azure Key Vault and how to use it for certificate and secret management, see:
About Azure Key Vault
Assign a Key Vault access policy
Challenges and mitigations
When using service principals, use the following table to match challenges and mitigations.
Find accounts using service principals
To find accounts, run the following commands using service principals with Azure CLI or PowerShell.
Azure CLI -az ad sp list
az ad sp list
PowerShell -Get-MgServicePrincipal -All:$true
Get-MgServicePrincipal -All:$true
For more information, seeGet-MgServicePrincipal
Assess service principal security
To assess the security, evaluate privileges and credential storage. Use the following table to help mitigate challenges:
Get-MgServicePrincipal -All:$true | ? {$_.Tags -eq "WindowsAzureActiveDirectoryIntegratedApp"}
Learn more:What is Conditional Access?
Move from a user account to a service principal
If you're using an Azure user account as a service principal, evaluate if you can move to a managed identity or a service principal. If you can't use a managed identity, grant a service principal enough permissions and scope to run the required tasks. You can create a service principal by registering an application, or with PowerShell.
When using Microsoft Graph, check the API documentation. Ensure the permission type for application is supported.See,Create servicePrincipal
Learn more:
How to use managed identities for App Service and Azure Functions
Create a Microsoft Entra application and service principal that can access resources
Use Azure PowerShell to create a service principal with a certificate
Next steps
Learn more about service principals:
Create a Microsoft Entra application and service principal that can access resources
Sign-in logs in Microsoft Entra ID
Secure service accounts:
Securing cloud-based service accounts
Securing managed identities in Microsoft Entra ID
Governing Microsoft Entra service accounts
Securing on-premises service accounts
Conditional Access:
Use Conditional Access to block service principals from untrusted locations.
See,Create a location-based Conditional Access policy
Feedback
Was this page helpful?
Additional resources