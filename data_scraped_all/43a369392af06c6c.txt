Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Change the default branch
Article
2025-02-18
8 contributors
In this article
Azure DevOps Services | Azure DevOps Server 2022 - Azure DevOps Server 2019
The default branch is the first branch that Git will check out on a fresh clone.
Also,pull requeststarget this branch by default.
We'll walk through the process of changing the default branch.
We'll also cover other things you must consider and update when making this change.
Finally, we'll look at a tool for easing the transition.
Prerequisites
Note
In public projects, users withStakeholderaccess have full access to Azure Repos, including viewing, cloning, and contributing to code.
Set a new default branch
You can use a branch other thanmainfor new changes or change your main line of development in your repo. To change the default branch name for new repositories, seeAll repositories settings and policies.
main
To change your repo's default branch for merging new pull requests, you need at least two branches. If there's only one branch, it's already the default. You must create a second branch to change the default.
Note
Changing the default branch requires you to haveEdit policiespermission. For more information, seeSet Git repository permissions.
Under yourproject repo, selectBranches.
Under yourproject repo, selectBranches.
On theBranchespage, selectMore optionsnext to the new default branch you want, and chooseSet as default branch.
On theBranchespage, selectMore optionsnext to the new default branch you want, and chooseSet as default branch.

After you set the new default branch, you can delete the previous default if you want.
After you set the new default branch, you can delete the previous default if you want.
There are other aspects you should consider before making this change.
Choose a name
Git 2.28added the ability to choose an initial branch name.
At the same time, Azure Repos, GitHub, and other Git hosting providers added the ability to choose a different initial branch name.
Previously, the default branch was almost always namedmaster.
The most popular alternative name ismain.
Less common options includetrunkanddevelopment.
Absent any restrictions from the tools you use or team you're on, any valid branch name will work.
master
main
trunk
development
Update other systems
When you change to a different default branch, other parts of your workflow may be affected.
You'll need to take these parts into account when you're planning a change.
Pipelines
Update theCI triggersfor all pipelines.
Designer pipelines can be edited in the web.
YAML pipelines can be edited in their respective repositories.
In-flight pull requests
Retarget each open pull requestto the new default branch.
Existing clones
New clones of the repository will get the new default branch.
After the switch, everyone with an existing clone should rungit remote set-head origin -a(replacingoriginwith the name of their remote if it's something else) to update their view of the remote's default branch.
Future new branches should be based on the new default.
git remote set-head origin -a
origin
Incoming links
Some bookmarks, documents, and other non-code files that point to files in Azure Repos will need to be updated.
The branch name for a file or directory can appear in the URL.
If a URL contains a querystring forversion, for example&version=GBmybranchname, then that URL should be updated.
Fortunately, most links to the default branch won't have aversionsegment and can be left as-is.
Also, once you delete the old default branch, attempts to navigate to it will be taken to the new default anyway.
version
&version=GBmybranchname
version
Temporary mirroring
A Git repository can only have one default branch.
However, for a while, you can set up ad-hoc mirroring between your old default and your new default.
This way, if your end users continue pushing to the old default, they won't need to redo the work on their end.
We'll useAzure Pipelinesto set up this temporary mirroring.
Note
This section uses language which is at odds withMicrosoft's perspective.
Specifically, the wordmasterappears in several places consistent with how it's been used in Git.
The purpose of this topic is to explain how to switch to more inclusive language, such asmain.
Avoiding all mention ofmasterwould make the directions much harder to understand.
master
main
master
The mirroring pipeline
Note
These instructions are not fool-proof, and your repository setup may require additional changes such as loosening permissions and policies.
Warning
If the old and new default branches are both updated before this pipeline runs, then the pipeline won't be able to mirror the changes.
Someone will have to manuallymergethe old default branch into the new default branch to get it running automatically again.
For all existing CI builds, update them totriggeragainst your new default branch instead of the old one.
For all existing CI builds, update them totriggeragainst your new default branch instead of the old one.
Grant the build identityContributepermission to your repo. Navigate toProject Settings>Repositories>(your repo)>Permissions. There may be up to two identities, one for the project collection build service and the other for the project build service. Make sure the Contribute permission saysAllow.
Grant the build identityContributepermission to your repo. Navigate toProject Settings>Repositories>(your repo)>Permissions. There may be up to two identities, one for the project collection build service and the other for the project build service. Make sure the Contribute permission saysAllow.
If the new default branch has branch policies, also grant the build identity theBypass policies when pushingpermission.
This permission is a security risk since a malicious user could craft a pipeline to sneak code into a repository in your project.
When mirroring isn't needed anymore,be sureto remove this permission.
If the new default branch has branch policies, also grant the build identity theBypass policies when pushingpermission.
This permission is a security risk since a malicious user could craft a pipeline to sneak code into a repository in your project.
When mirroring isn't needed anymore,be sureto remove this permission.
Add a new file,mirror.ymlto your repository in the new default branch.
In this example, we assume the old default branch wasmasterand the new one ismain.
Update the triggering branches and thegit pushline if your branch names are different.
Add a new file,mirror.ymlto your repository in the new default branch.
In this example, we assume the old default branch wasmasterand the new one ismain.
Update the triggering branches and thegit pushline if your branch names are different.
mirror.yml
master
main
git push
trigger:
  branches:
    include:
    - main
    - master
 
pool: { vmImage: ubuntu-latest }
steps:
- checkout: self
  persistCredentials: true
- script: |
    git checkout $(Build.SourceBranchName)
    git push origin HEAD:master HEAD:main
  displayName: Mirror old and new default branches
trigger:
  branches:
    include:
    - main
    - master
 
pool: { vmImage: ubuntu-latest }
steps:
- checkout: self
  persistCredentials: true
- script: |
    git checkout $(Build.SourceBranchName)
    git push origin HEAD:master HEAD:main
  displayName: Mirror old and new default branches
Create a new pipeline, choosing "Azure Repos Git" and "Existing Azure Pipelines YAML file" in the wizard.
Choose themirror.ymlfile you added in the previous step.
Save and run the pipeline.
mirror.yml
Troubleshooting
This pipeline will run every time there's a push tomasteror tomain.
It will keep them in sync as long as new commits don't arrive on both branches simultaneously.
master
main
If the pipeline begins failing with an error message like "Updates were rejected because a pushed branch tip is behind its remote", someone will have to merge the old branch into the new branch by hand.
Clone the repository andcdinto its directory.
cd
Check out the new default branch withgit checkout main(ifmainis your new default branch).
git checkout main
main
Create a new branch for integrating the two branches withgit checkout -b integrate.
git checkout -b integrate
Merge the old default branch withgit merge master(ifmasteris your old default branch).
git merge master
master
Push the new branch, then open and complete a pull request into the new default branch.
The mirroring pipeline should then take care of mirroring the merge commit back to the old default.
Feedback
Was this page helpful?
Additional resources