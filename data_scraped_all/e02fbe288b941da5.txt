Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Geo-restore a dedicated SQL pool in Azure Synapse Analytics
Article
2022-05-25
14 contributors
In this article
In this article, you learn to restore your dedicated SQL pool (formerly SQL DW) from a geo-backup through Azure portal and PowerShell.
Before you begin
Note
We recommend that you use the Azure Az PowerShell module to interact with Azure. To get started, seeInstall Azure PowerShell. To learn how to migrate to the Az PowerShell module, seeMigrate Azure PowerShell from AzureRM to Az.
Verify your DTU capacity.Each dedicated SQL pool (formerly SQL DW) is hosted by alogical SQL server(for example, myserver.database.windows.net) which has a default DTU quota. Verify that the SQL server has enough remaining DTU quota for the database being restored. To learn how to calculate DTU needed or to request more DTU, seeRequest a DTU quota change.
Restore from an Azure geographical region through PowerShell
To restore from a geo-backup, use theGet-AzSqlDatabaseGeoBackupandRestore-AzSqlDatabasecmdlet.
Note
You can perform a geo-restore to Gen2! To do so, specify an Gen2 ServiceObjectiveName (e.g. DW1000c) as an optional parameter.
Before you begin, make sure toinstall Azure PowerShell.
Open PowerShell.
Connect to your Azure account and list all the subscriptions associated with your account.
Select the subscription that contains the data warehouse to be restored.
Get the data warehouse you want to recover.
Create the recovery request for the data warehouse.
Verify the status of the geo-restored data warehouse.
To configure your data warehouse after the restore has completed, seeConfigure your database after recovery.
$SubscriptionName="<YourSubscriptionName>"
$ResourceGroupName="<YourResourceGroupName>"
$ServerName="<YourServerNameWithoutURLSuffixSeeNote>"  # Without database.windows.net
$TargetResourceGroupName="<YourTargetResourceGroupName>" # Restore to a different server.
$TargetServerName="<YourtargetServerNameWithoutURLSuffixSeeNote>"  
$DatabaseName="<YourDatabaseName>"
$NewDatabaseName="<YourDatabaseName>"
$TargetServiceObjective="<YourTargetServiceObjective-DWXXXc>"

Connect-AzAccount
Get-AzSubscription
Select-AzSubscription -SubscriptionName $SubscriptionName
Get-AzSqlDatabase -ServerName $ServerName -ResourceGroupName $ResourceGroupName

# Get the data warehouse you want to recover
$GeoBackup = Get-AzSqlDatabaseGeoBackup -ResourceGroupName $ResourceGroupName -ServerName $ServerName -DatabaseName $DatabaseName

# Recover data warehouse
$GeoRestoredDatabase = Restore-AzSqlDatabase âFromGeoBackup -ResourceGroupName $TargetResourceGroupName -ServerName $TargetServerName -TargetDatabaseName $NewDatabaseName âResourceId $GeoBackup.ResourceID -ServiceObjectiveName $TargetServiceObjective

# Verify that the geo-restored data warehouse is online
$GeoRestoredDatabase.status
$SubscriptionName="<YourSubscriptionName>"
$ResourceGroupName="<YourResourceGroupName>"
$ServerName="<YourServerNameWithoutURLSuffixSeeNote>"  # Without database.windows.net
$TargetResourceGroupName="<YourTargetResourceGroupName>" # Restore to a different server.
$TargetServerName="<YourtargetServerNameWithoutURLSuffixSeeNote>"  
$DatabaseName="<YourDatabaseName>"
$NewDatabaseName="<YourDatabaseName>"
$TargetServiceObjective="<YourTargetServiceObjective-DWXXXc>"

Connect-AzAccount
Get-AzSubscription
Select-AzSubscription -SubscriptionName $SubscriptionName
Get-AzSqlDatabase -ServerName $ServerName -ResourceGroupName $ResourceGroupName

# Get the data warehouse you want to recover
$GeoBackup = Get-AzSqlDatabaseGeoBackup -ResourceGroupName $ResourceGroupName -ServerName $ServerName -DatabaseName $DatabaseName

# Recover data warehouse
$GeoRestoredDatabase = Restore-AzSqlDatabase âFromGeoBackup -ResourceGroupName $TargetResourceGroupName -ServerName $TargetServerName -TargetDatabaseName $NewDatabaseName âResourceId $GeoBackup.ResourceID -ServiceObjectiveName $TargetServiceObjective

# Verify that the geo-restored data warehouse is online
$GeoRestoredDatabase.status
The recovered database will be TDE-enabled if the source database is TDE-enabled.
Restore from an Azure geographical region through Azure portal
Follow the steps outlined below to restore a dedicated SQL pool (formerly SQL DW) from a geo-backup:
Sign in to yourAzure portalaccount.
Sign in to yourAzure portalaccount.
Search forDedicated SQL pools (formerly SQL DW).
Search forDedicated SQL pools (formerly SQL DW).

Click add and fill out the information requested in theBasicstab and clickNext: Additional settings.
Click add and fill out the information requested in theBasicstab and clickNext: Additional settings.

ForUse existing dataparameter, selectBackupand select the appropriate backup from the scroll down options. ClickReview + Create.
ForUse existing dataparameter, selectBackupand select the appropriate backup from the scroll down options. ClickReview + Create.

Once the data warehouse has been restored, check that theStatusis Online.
Once the data warehouse has been restored, check that theStatusis Online.
Next Steps
Restore an existing dedicated SQL pool (formerly SQL DW)
Restore a deleted dedicated SQL pool (formerly SQL DW)
Feedback
Was this page helpful?
Additional resources