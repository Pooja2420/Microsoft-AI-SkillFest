Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Upgrade Azure Blob Storage with Azure Data Lake Storage capabilities
Article
2024-11-15
10 contributors
In this article
This article helps you to enable a hierarchical namespace and unlock capabilities such as file and directory-level security and faster operations. These capabilities are widely used by big data analytics workloads and are referred to collectively as Azure Data Lake Storage.
To learn more about these capabilities and evaluate the impact of this upgrade on workloads, applications, costs, service integrations, tools, features, and documentation, seeUpgrading Azure Blob Storage with Azure Data Lake Storage capabilities.
Important
An upgrade is one-way. There's no way to revert your account once you've performed the upgrade. We recommend that you validate your upgrade in a nonproduction environment.
Prepare to upgrade
To prepare to upgrade your storage account to Data Lake Storage:
Review feature support
Ensure the segments of each blob path are named
Prevent write activity to the storage account
Review feature support
Your storage account might be configured to use features that aren't yet supported in Data Lake Storage enabled accounts. If your account is using such features, the upgrade will not pass the validation step. Review theBlob Storage feature support in Azure Storage accountsarticle to identify unsupported features. If you're using any such features in your account, disable them before you begin the upgrade.
The following features are supported for Data Lake Storage accounts, but are not supported by the upgrade process:
Blob snapshots
Encryption scopes
Immutable storage
Soft delete for blobs
Soft delete for containers
If your storage account has such features enabled, you must disable them before performing the upgrade. If you want to resume using the features after the upgrade is complete, re-enable them.
In some cases, you will have to allow time for clean-up operations after a feature is disabled before upgrading. One example is theblob soft deletefeature. You must disable blob soft delete and then allow all soft-delete blobs to expire before you can upgrade the account.
Remove page blobs from the storage account
You cannot upgrade a storage account that contains page blobs. Make sure to remove page blobs from the storage account before you perform the upgrade.
Ensure the segments of each blob path are named
The migration process creates a directory for each path segment of a blob. Data Lake Storage directories must have a name so for migration to succeed, each path segment in a virtual directory must have a name. The same requirement is true for segments that are named only with a space character. If any path segments are either unnamed (//) or named only with a space character (_), then before you proceed with the migration, you must copy those blobs to a new path that is compatible with these naming requirements.
//
_
Prevent write activity to the storage account
The upgrade might fail if an application writes to the storage account during the upgrade. To prevent such write activity:
Quiesce any applications or services that might perform write operations.
Quiesce any applications or services that might perform write operations.
Release or break existing leases on containers and blobs in the storage account.
Release or break existing leases on containers and blobs in the storage account.
After the upgrade has completed, break the leases you created to resume allowing write access to the containers and blobs.
Warning
Breaking an active lease without gracefully disabling applications or virtual machines that are currently accessing those resources could have unexpected results. Be sure to quiesce any current write activities before breaking any current leases.
Perform the upgrade
Portal
PowerShell
Azure CLI
Sign in to theAzure portalto get started.
Sign in to theAzure portalto get started.
Locate your storage account and display the account overview.
Locate your storage account and display the account overview.
SelectData Lake Gen2 migration.TheUpgrade to a Storage account with Azure Data Lake Gen2 capabilitiesconfiguration page appears.
SelectData Lake Gen2 migration.
TheUpgrade to a Storage account with Azure Data Lake Gen2 capabilitiesconfiguration page appears.

Expand theStep 1: Review account changes before upgradingsection and clickReview and agree to changes.
Expand theStep 1: Review account changes before upgradingsection and clickReview and agree to changes.
In theReview account changespage, select the checkbox and then clickAgree to changes.
In theReview account changespage, select the checkbox and then clickAgree to changes.
Expand theStep 2: Validate account before upgradingsection and then clickStart validation.If validation fails, an error appears in the page. In some cases, aView errorslink appears. If that link appears, select it.Then, from the context menu of theerror.jsonfile, selectDownload.Open the downloaded file to determine why the account did not pass the validation step. The following JSON indicates that an incompatible feature is enabled on the account. In this case, you would disable the feature and then start the validation process again.{
 "startTime": "2021-08-04T18:40:31.8465320Z",
 "id": "45c84a6d-6746-4142-8130-5ae9cfe013a0",
 "incompatibleFeatures": [
     "Blob Delete Retention Enabled"
 ],
 "blobValidationErrors": [],
 "scannedBlobCount": 0,
 "invalidBlobCount": 0,
 "endTime": "2021-08-04T18:40:34.9371480Z"
}
Expand theStep 2: Validate account before upgradingsection and then clickStart validation.
If validation fails, an error appears in the page. In some cases, aView errorslink appears. If that link appears, select it.

Then, from the context menu of theerror.jsonfile, selectDownload.

Open the downloaded file to determine why the account did not pass the validation step. The following JSON indicates that an incompatible feature is enabled on the account. In this case, you would disable the feature and then start the validation process again.
{
 "startTime": "2021-08-04T18:40:31.8465320Z",
 "id": "45c84a6d-6746-4142-8130-5ae9cfe013a0",
 "incompatibleFeatures": [
     "Blob Delete Retention Enabled"
 ],
 "blobValidationErrors": [],
 "scannedBlobCount": 0,
 "invalidBlobCount": 0,
 "endTime": "2021-08-04T18:40:34.9371480Z"
}
{
 "startTime": "2021-08-04T18:40:31.8465320Z",
 "id": "45c84a6d-6746-4142-8130-5ae9cfe013a0",
 "incompatibleFeatures": [
     "Blob Delete Retention Enabled"
 ],
 "blobValidationErrors": [],
 "scannedBlobCount": 0,
 "invalidBlobCount": 0,
 "endTime": "2021-08-04T18:40:34.9371480Z"
}
After your account has been successfully validated, expand theStep 3: Upgrade accountsection, and then clickStart upgrade.ImportantWrite operations are disabled while your account is being upgraded. Read operations aren't disabled, but we strongly recommend that you suspend read operations as they might destabilize the upgrade process.When the migration has completed successfully, a message similar to the following appears.
After your account has been successfully validated, expand theStep 3: Upgrade accountsection, and then clickStart upgrade.
Important
Write operations are disabled while your account is being upgraded. Read operations aren't disabled, but we strongly recommend that you suspend read operations as they might destabilize the upgrade process.
When the migration has completed successfully, a message similar to the following appears.

Open a Windows PowerShell command window.
Open a Windows PowerShell command window.
Make sure that you have the latest Azure PowerShell module. SeeInstall Azure PowerShell module.
Make sure that you have the latest Azure PowerShell module. SeeInstall Azure PowerShell module.
Sign in to your Azure subscription with theConnect-AzAccountcommand and follow the on-screen directions.Connect-AzAccount
Sign in to your Azure subscription with theConnect-AzAccountcommand and follow the on-screen directions.
Connect-AzAccount
Connect-AzAccount
Connect-AzAccount
If your identity is associated with more than one subscription, then set your active subscription.$context = Get-AzSubscription -SubscriptionId <subscription-id>
Set-AzContext $contextReplace the<subscription-id>placeholder value with the ID of your subscription.
If your identity is associated with more than one subscription, then set your active subscription.
$context = Get-AzSubscription -SubscriptionId <subscription-id>
Set-AzContext $context
$context = Get-AzSubscription -SubscriptionId <subscription-id>
Set-AzContext $context
Replace the<subscription-id>placeholder value with the ID of your subscription.
<subscription-id>
Validate your storage account by using the following command.$result = Invoke-AzStorageAccountHierarchicalNamespaceUpgrade -ResourceGroupName "<resource-group-name>" -Name "<storage-account-name>" -RequestType Validation -AsJobReplace the<resource-group-name>placeholder value with the name of your resource group.Replace the<storage-account-name>placeholder value with the name of your storage account.Depending on the size of your account, this process can take some time. You can use theasJobswitch to run the command in a background job so that your client isn't blocked. The command runs remotely, but the job exists on your local machine or the VM from which you run the command. The results are transmitted to your local machine or the VM.
Validate your storage account by using the following command.
$result = Invoke-AzStorageAccountHierarchicalNamespaceUpgrade -ResourceGroupName "<resource-group-name>" -Name "<storage-account-name>" -RequestType Validation -AsJob
$result = Invoke-AzStorageAccountHierarchicalNamespaceUpgrade -ResourceGroupName "<resource-group-name>" -Name "<storage-account-name>" -RequestType Validation -AsJob
Replace the<resource-group-name>placeholder value with the name of your resource group.
Replace the<resource-group-name>placeholder value with the name of your resource group.
<resource-group-name>
Replace the<storage-account-name>placeholder value with the name of your storage account.
Replace the<storage-account-name>placeholder value with the name of your storage account.
<storage-account-name>
Depending on the size of your account, this process can take some time. You can use theasJobswitch to run the command in a background job so that your client isn't blocked. The command runs remotely, but the job exists on your local machine or the VM from which you run the command. The results are transmitted to your local machine or the VM.
asJob
To check the status of the job, and display all of the properties of the job in a list, pipe the return variable to theFormat-Listcmdlet.$result | Format-List -Property *If the validation succeeds, theStateproperty will be set toCompleted.If validation fails, theStateproperty will be set toFailed, and theErrorproperty will show validation errors.The following output indicates that an incompatible feature is enabled on the account. In this case, you would disable the feature and then start the validation process again.In some cases, theErrorproperty provides you with a path to a file namederror.json. You can open that file to determine why the account did not pass the validation step.The following JSON indicates that an incompatible feature is enabled on the account. In this case, you would disable the feature and then start the validation process again.{
 "startTime": "2021-08-04T18:40:31.8465320Z",
 "id": "45c84a6d-6746-4142-8130-5ae9cfe013a0",
 "incompatibleFeatures": [
     "Blob Delete Retention Enabled"
 ],
 "blobValidationErrors": [],
 "scannedBlobCount": 0,
 "invalidBlobCount": 0,
 "endTime": "2021-08-04T18:40:34.9371480Z"
}
To check the status of the job, and display all of the properties of the job in a list, pipe the return variable to theFormat-Listcmdlet.
Format-List
$result | Format-List -Property *
$result | Format-List -Property *
If the validation succeeds, theStateproperty will be set toCompleted.
If validation fails, theStateproperty will be set toFailed, and theErrorproperty will show validation errors.
The following output indicates that an incompatible feature is enabled on the account. In this case, you would disable the feature and then start the validation process again.

In some cases, theErrorproperty provides you with a path to a file namederror.json. You can open that file to determine why the account did not pass the validation step.
The following JSON indicates that an incompatible feature is enabled on the account. In this case, you would disable the feature and then start the validation process again.
{
 "startTime": "2021-08-04T18:40:31.8465320Z",
 "id": "45c84a6d-6746-4142-8130-5ae9cfe013a0",
 "incompatibleFeatures": [
     "Blob Delete Retention Enabled"
 ],
 "blobValidationErrors": [],
 "scannedBlobCount": 0,
 "invalidBlobCount": 0,
 "endTime": "2021-08-04T18:40:34.9371480Z"
}
{
 "startTime": "2021-08-04T18:40:31.8465320Z",
 "id": "45c84a6d-6746-4142-8130-5ae9cfe013a0",
 "incompatibleFeatures": [
     "Blob Delete Retention Enabled"
 ],
 "blobValidationErrors": [],
 "scannedBlobCount": 0,
 "invalidBlobCount": 0,
 "endTime": "2021-08-04T18:40:34.9371480Z"
}
After your account has been successfully validated, start the upgrade by running the following command.$result = Invoke-AzStorageAccountHierarchicalNamespaceUpgrade -ResourceGroupName "<resource-group-name>" -Name "<storage-account-name>" -RequestType Upgrade -AsJob -ForceLike the validation example above, this example uses theasJobswitch to run the command in a background job. TheForceswitch overrides prompts to confirm the upgrade.  If you don't use theAsJobswitch, you don't have to use theForceswitch because you can just respond to the prompts.ImportantWrite operations are disabled while your account is being upgraded. Read operations aren't disabled, but we strongly recommend that you suspend read operations as they might destabilize the upgrade process.To check the status of the job, use the same techniques as described in the previous steps. As the process runs, theStateproperty will be set toRunning.When the migration has completed successfully, theStateproperty will be set toCompletedand theErrorproperty will not show any errors.ImportantA rough estimate of the upgrade time would be approximately 5-10 minutes per 2 million blobs. For example, if the account has 10 million blobs, then the upgrade will take approximately 25-50 minutes. Accounts that contain fewer than 2 million blobs typically upgrade in less than 10 minutes.
After your account has been successfully validated, start the upgrade by running the following command.
$result = Invoke-AzStorageAccountHierarchicalNamespaceUpgrade -ResourceGroupName "<resource-group-name>" -Name "<storage-account-name>" -RequestType Upgrade -AsJob -Force
$result = Invoke-AzStorageAccountHierarchicalNamespaceUpgrade -ResourceGroupName "<resource-group-name>" -Name "<storage-account-name>" -RequestType Upgrade -AsJob -Force
Like the validation example above, this example uses theasJobswitch to run the command in a background job. TheForceswitch overrides prompts to confirm the upgrade.  If you don't use theAsJobswitch, you don't have to use theForceswitch because you can just respond to the prompts.
asJob
Force
AsJob
Force
Important
Write operations are disabled while your account is being upgraded. Read operations aren't disabled, but we strongly recommend that you suspend read operations as they might destabilize the upgrade process.
To check the status of the job, use the same techniques as described in the previous steps. As the process runs, theStateproperty will be set toRunning.
When the migration has completed successfully, theStateproperty will be set toCompletedand theErrorproperty will not show any errors.

Important
A rough estimate of the upgrade time would be approximately 5-10 minutes per 2 million blobs. For example, if the account has 10 million blobs, then the upgrade will take approximately 25-50 minutes. Accounts that contain fewer than 2 million blobs typically upgrade in less than 10 minutes.
First, open theAzure Cloud Shell, or if you'veinstalledthe Azure CLI locally, open a command console application such as Windows PowerShell.
First, open theAzure Cloud Shell, or if you'veinstalledthe Azure CLI locally, open a command console application such as Windows PowerShell.
Verify that the version of Azure CLI that has installed is2.29.0or higher by using the following command.az --versionIf your version of Azure CLI is lower than2.29.0, then install the latest version. For more information, seeInstall the Azure CLI.
Verify that the version of Azure CLI that has installed is2.29.0or higher by using the following command.
2.29.0
az --version
az --version
If your version of Azure CLI is lower than2.29.0, then install the latest version. For more information, seeInstall the Azure CLI.
2.29.0
If your identity is associated with more than one subscription, then set your active subscription.az account set --subscription <subscription-id>Replace the<subscription-id>placeholder value with the ID of your subscription.
If your identity is associated with more than one subscription, then set your active subscription.
az account set --subscription <subscription-id>
az account set --subscription <subscription-id>
Replace the<subscription-id>placeholder value with the ID of your subscription.
<subscription-id>
Validate your storage account by using the following command.az storage account hns-migration start --type validation -n <storage-account-name> -g <resource-group-name>Replace the<resource-group-name>placeholder value with the name of your resource group.Replace the<storage-account-name>placeholder value with the name of your storage account.If the validation succeeds, the process completes and no errors appear.If validation fails, a validation error will appear in the console. For example, the error(IncompatibleValuesForAccountProperties) Values for account properties are incompatible: Versioning Enabledindicates that an incompatible feature (Versioning) is enabled on the account. In this case, you would disable the feature and then start the validation process again.In some cases, the path to a file namederror.jsonappears in the console. You can open that file to determine why the account did not pass the validation step.The following JSON indicates that an incompatible feature is enabled on the account. In this case, you would disable the feature and then start the validation process again.{
 "startTime": "2021-08-04T18:40:31.8465320Z",
 "id": "45c84a6d-6746-4142-8130-5ae9cfe013a0",
 "incompatibleFeatures": [
     "Blob Delete Retention Enabled"
 ],
 "blobValidationErrors": [],
 "scannedBlobCount": 0,
 "invalidBlobCount": 0,
 "endTime": "2021-08-04T18:40:34.9371480Z"
}
Validate your storage account by using the following command.
az storage account hns-migration start --type validation -n <storage-account-name> -g <resource-group-name>
az storage account hns-migration start --type validation -n <storage-account-name> -g <resource-group-name>
Replace the<resource-group-name>placeholder value with the name of your resource group.
Replace the<resource-group-name>placeholder value with the name of your resource group.
<resource-group-name>
Replace the<storage-account-name>placeholder value with the name of your storage account.
Replace the<storage-account-name>placeholder value with the name of your storage account.
<storage-account-name>
If the validation succeeds, the process completes and no errors appear.
If validation fails, a validation error will appear in the console. For example, the error(IncompatibleValuesForAccountProperties) Values for account properties are incompatible: Versioning Enabledindicates that an incompatible feature (Versioning) is enabled on the account. In this case, you would disable the feature and then start the validation process again.
(IncompatibleValuesForAccountProperties) Values for account properties are incompatible: Versioning Enabled
In some cases, the path to a file namederror.jsonappears in the console. You can open that file to determine why the account did not pass the validation step.
The following JSON indicates that an incompatible feature is enabled on the account. In this case, you would disable the feature and then start the validation process again.
{
 "startTime": "2021-08-04T18:40:31.8465320Z",
 "id": "45c84a6d-6746-4142-8130-5ae9cfe013a0",
 "incompatibleFeatures": [
     "Blob Delete Retention Enabled"
 ],
 "blobValidationErrors": [],
 "scannedBlobCount": 0,
 "invalidBlobCount": 0,
 "endTime": "2021-08-04T18:40:34.9371480Z"
}
{
 "startTime": "2021-08-04T18:40:31.8465320Z",
 "id": "45c84a6d-6746-4142-8130-5ae9cfe013a0",
 "incompatibleFeatures": [
     "Blob Delete Retention Enabled"
 ],
 "blobValidationErrors": [],
 "scannedBlobCount": 0,
 "invalidBlobCount": 0,
 "endTime": "2021-08-04T18:40:34.9371480Z"
}
After your account has been successfully validated, start the upgrade by running the following command.az storage account hns-migration start --type upgrade -n storage-account-name -g <resource-group-name>ImportantWrite operations are disabled while your account is being upgraded. Read operations aren't disabled, but we strongly recommend that you suspend read operations as they might destabilize the upgrade process.If the migration succeeds, the process completes and no errors appear.
After your account has been successfully validated, start the upgrade by running the following command.
az storage account hns-migration start --type upgrade -n storage-account-name -g <resource-group-name>
az storage account hns-migration start --type upgrade -n storage-account-name -g <resource-group-name>
Important
Write operations are disabled while your account is being upgraded. Read operations aren't disabled, but we strongly recommend that you suspend read operations as they might destabilize the upgrade process.
If the migration succeeds, the process completes and no errors appear.
Stop the upgrade
You can stop the migration before it completes.
Portal
PowerShell
Azure CLI
To stop the upgrade before it completes, selectCancel upgradewhile the upgrade is in progress.

To stop the upgrade before it completes, use theStop-AzStorageAccountHierarchicalNamespaceUpgradecommand.
Stop-AzStorageAccountHierarchicalNamespaceUpgrade
Stop-AzStorageAccountHierarchicalNamespaceUpgrade -ResourceGroupName <resource-group-name> -Name <storage-account-name>
Stop-AzStorageAccountHierarchicalNamespaceUpgrade -ResourceGroupName <resource-group-name> -Name <storage-account-name>
To stop the upgrade before it completes, use theaz storage account hns-migration stopcommand.
az storage account hns-migration stop
az storage account hns-migration stop -n <storage-account-name> -g <resource-group-name>
az storage account hns-migration stop -n <storage-account-name> -g <resource-group-name>
Migrate data, workloads, and applications
Configureservices in your workloadsto point to either theBlob serviceendpoint or theData Lake storageendpoint.
Configureservices in your workloadsto point to either theBlob serviceendpoint or theData Lake storageendpoint.

For Hadoop workloads that use Windows Azure Storage Blob driver orWASBdriver, make sure to modify them to use theAzure Blob File System (ABFS)driver. Unlike the WASB driver that makes requests to theBlob serviceendpoint, the ABFS driver will make requests to theData Lake Storageendpoint of your account.
For Hadoop workloads that use Windows Azure Storage Blob driver orWASBdriver, make sure to modify them to use theAzure Blob File System (ABFS)driver. Unlike the WASB driver that makes requests to theBlob serviceendpoint, the ABFS driver will make requests to theData Lake Storageendpoint of your account.
Test custom applications to ensure that they work as expected with your upgraded account.Multi-protocol access on Data Lake Storageenables most applications to continue using Blob APIs without modification. If you encounter issues or you want to use APIs to work with directory operations and ACLs, consider moving some of your code to use Data Lake Storage APIs. See guides for.NET,Java,Python,Node.js, andREST.
Test custom applications to ensure that they work as expected with your upgraded account.
Multi-protocol access on Data Lake Storageenables most applications to continue using Blob APIs without modification. If you encounter issues or you want to use APIs to work with directory operations and ACLs, consider moving some of your code to use Data Lake Storage APIs. See guides for.NET,Java,Python,Node.js, andREST.
Test any custom scripts to ensure that they work as expected with your upgraded account.As is the case with Blob APIs, many of your scripts will likely work without requiring you to modify them. However, if  needed, you can upgrade script files to use Data Lake StoragePowerShell cmdlets, andAzure CLI commands.
Test any custom scripts to ensure that they work as expected with your upgraded account.
As is the case with Blob APIs, many of your scripts will likely work without requiring you to modify them. However, if  needed, you can upgrade script files to use Data Lake StoragePowerShell cmdlets, andAzure CLI commands.
See also
Introduction to Azure Data Lake storage
Feedback
Was this page helpful?
Additional resources