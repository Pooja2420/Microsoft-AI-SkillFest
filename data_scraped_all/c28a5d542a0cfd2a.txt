Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Quickstart: Create a Linux virtual machine in Azure with PowerShell
Article
2024-08-22
23 contributors
In this article
Applies to:âï¸ Linux VMs
The Azure PowerShell module is used to create and manage Azure resources from the PowerShell command line or in scripts. This quickstart shows you how to use the Azure PowerShell module to deploy a Linux virtual machine (VM) in Azure. This quickstart uses the latest Debian marketplace image. To see your VM in action, you'll also SSH to the VM and install the NGINX web server.
If you don't have an Azure subscription, create afree accountbefore you begin.
Launch Azure Cloud Shell
The Azure Cloud Shell is a free interactive shell that you can use to run the steps in this article. It has common Azure tools preinstalled and configured to use with your account.
To open the Cloud Shell, just selectTry itfrom the upper right corner of a code block. SelectCopyto copy the blocks of code, paste it into the Cloud Shell, and press enter to run it.
Create a resource group
Create an Azure resource group withNew-AzResourceGroup. A resource group is a logical container into which Azure resources are deployed and managed:
New-AzResourceGroup -Name 'myResourceGroup' -Location 'EastUS'
New-AzResourceGroup -Name 'myResourceGroup' -Location 'EastUS'
Create a virtual machine
We will be automatically generating an SSH key pair to use for connecting to the VM. The public key that is created using-GenerateSshKeywill be stored in Azure as a resource, using the name you provide asSshKeyName. The SSH key resource can be reused for creating additional VMs. Both the public and private keys will also be downloaded for you. When you create your SSH key pair using the Cloud Shell, the keys are stored in astorage account that is automatically created by Cloud Shell. Don't delete the storage account, or the file share in it, until after you have retrieved your keys or you will lose access to the VM.
-GenerateSshKey
SshKeyName
You will be prompted for a user name that will be used when you connect to the VM. You will also be asked for a password, which you can leave blank. Password log in for the VM is disabled when using an SSH key.
In this example, you create a VM namedmyVM, inEast US, using theStandard_B2sVM size.
New-AzVm `
    -ResourceGroupName 'myResourceGroup' `
    -Name 'myVM' `
    -Location 'East US' `
    -image Debian11 `
    -size Standard_B2s `
    -PublicIpAddressName myPubIP `
    -OpenPorts 80 `
    -GenerateSshKey `
    -SshKeyName mySSHKey
New-AzVm `
    -ResourceGroupName 'myResourceGroup' `
    -Name 'myVM' `
    -Location 'East US' `
    -image Debian11 `
    -size Standard_B2s `
    -PublicIpAddressName myPubIP `
    -OpenPorts 80 `
    -GenerateSshKey `
    -SshKeyName mySSHKey
The output will give you the location of the local copy of the SSH key. For example:
Private key is saved to /home/user/.ssh/1234567891
Public key is saved to /home/user/.ssh/1234567891.pub
Private key is saved to /home/user/.ssh/1234567891
Public key is saved to /home/user/.ssh/1234567891.pub
Cost information isn't presented during the virtual machine creation process for PowerShell like it is for theAzure portal. If you want to learn more about how cost works for virtual machines, see theCost optimization Overview page.
It will take a few minutes for your VM to be deployed. When the deployment is finished, move on to the next section.
Install NGINX
To see your VM in action, install the NGINX web server.
Invoke-AzVMRunCommand `
   -ResourceGroupName 'myResourceGroup' `
   -Name 'myVM' `
   -CommandId 'RunShellScript' `
   -ScriptString 'sudo apt-get update && sudo apt-get install -y nginx'
Invoke-AzVMRunCommand `
   -ResourceGroupName 'myResourceGroup' `
   -Name 'myVM' `
   -CommandId 'RunShellScript' `
   -ScriptString 'sudo apt-get update && sudo apt-get install -y nginx'
The-ScriptStringparameter requires version4.27.0or later of theAz.Computemodule.
-ScriptString
4.27.0
Az.Compute
View the web server in action
Get the public IP address of your VM:
Get-AzPublicIpAddress -Name myPubIP -ResourceGroupName myResourceGroup | select "IpAddress"
Get-AzPublicIpAddress -Name myPubIP -ResourceGroupName myResourceGroup | select "IpAddress"
Use a web browser of your choice to view the default NGINX welcome page. Enter the public IP address of the VM as the web address.

Clean up resources
When no longer needed, you can use theRemove-AzResourceGroupcmdlet to remove the resource group, VM, and all related resources:
Remove-AzResourceGroup -Name 'myResourceGroup'
Remove-AzResourceGroup -Name 'myResourceGroup'
Next steps
In this quickstart, you deployed a simple virtual machine, created a Network Security Group and rule, and installed a basic web server. To learn more about Azure virtual machines, continue to the tutorial for Linux VMs.
Azure Linux virtual machine tutorials
Feedback
Was this page helpful?
Additional resources