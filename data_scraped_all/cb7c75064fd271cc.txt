Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Hosting applications on Azure
Article
2024-09-19
11 contributors
In this article
This is part three in a series of 7 articles to help developers get started with Azure.
Part 1:Azure for developers overview
Part 2:Key Azure services for developers
Part 3:Hosting applications on Azure
Part 4:Connect your app to Azure services
Part 5:How do I create and manage resources in Azure?
Part 6:Key concepts for building Azure apps
Part 7:How am I billed?
Azure provides a variety of different ways to host your application depending on your needs. This article suggests services to match requirements. It isn't proscriptive. You can mix and match services to meet your needs. Most production environments use a combination of services to meet their business and organizational needs.
The services you choose will often come down to two considerations:
Do you prefer simplicity or control?
Do you prefer cloud-native (i.e., containers) or Azure-native (tailored tools and integrations)
The following video explains the first consideration: simplicity versus control:
Simplicity and control
Azure hosting services are provided with two considerations:
Simplicity versus controlSimple hosting platforms require less configuration and management but provide less control over the underlying infrastructure.More complex hosting platforms require more configuration and management but provide more control over the underlying infrastructure.
Simple hosting platforms require less configuration and management but provide less control over the underlying infrastructure.
More complex hosting platforms require more configuration and management but provide more control over the underlying infrastructure.
Cloud-native versus Azure-nativeCloud-native can be thought of as cloud-portable using open-source workloads such as containers and open-source technologies such as Dapr. The applications you build can be deployed to any cloud provider.Azure-native is specific to Azure with an investment in Azure-specific tools and technologies to manage that infrastructure. While these services include container workloads, they also include code-first, low-code, and infrastructure tooling specific to Azure with an emphasis on connecting and integration between Azure services.
Cloud-native can be thought of as cloud-portable using open-source workloads such as containers and open-source technologies such as Dapr. The applications you build can be deployed to any cloud provider.
Azure-native is specific to Azure with an investment in Azure-specific tools and technologies to manage that infrastructure. While these services include container workloads, they also include code-first, low-code, and infrastructure tooling specific to Azure with an emphasis on connecting and integration between Azure services.
Simplified hosting
Simplifiedhosting solutions are fully managed by Azure. You're responsible for the functionality such as code and environment configuration. Azure manages the underlying runtime and infrastructure including updates and patches. Simplified hosting is the Azure-native approach.
Logic Apps: Create and run automated workflows with little to no code.
Power Automate: Use when you need to automate business processes and workflows.
Azure Static Web Apps: Deploy generated static web apps such as Blazor and React.
Azure Functions Apps: serverless code or container hosting.
Balanced hosting
Balancedhosting solutions balance the need for simplicity with the need for control.  You're responsible for the functionality such as code and environment configuration. Azure manages the underlying runtime and infrastructure including updates and patches. You can also bring your own container to the service. Balanced hosting is both Azure-native and Cloud-native.
Azure App Service: Full-service web hosting including language runtimes, containers, and automation workloads.
Azure Container Apps: Serverless container hosting.
Azure Spring Apps: Migrate Spring Boot applications to the Azure cloud.
Controlled hosting
Controlledhosting solutions give you full control over the underlying infrastructure.  You're responsible for updates and patches as well as your code, assets, and environment configuration. Controlled hosting is the cloud-native approach.
Azure Virtual Machines: Full control of VM.
Azure Kubernetes Service: Full control of Kubernetes cluster.
Source-code hosting
For developers new to Azure who want to startnew development, use the following chart to find the suggested hosting solution.

No code or low code
Azure supports no-code solutions are part of its Azure-Cloud approach.
Logic Apps: Use a visual designer with prebuilt operations to develop a workflow for your enterprise and business-to-business scenarios.
Power Automatesuch asPower apps: Use when you need to automate business processes and workflows within the Microsoft 365 organization.
Code vs container
Low-codehosting solutions are designed to allow you to bring your code functionality without having to manage the application infrastructure.
Azure Static Web Apps: deploy generated static web apps.
Azure Functions: deploy code functions in supported languages without having to manage the application infrastructure.
Code-firsthosting solutions are designed to host code.  You can deploy your code directly to the hosting solution.
Azure App Service: full-service web hosting.
Azure Spring Apps: Spring Boot applications.
Container-firsthosting solutions are designed to host containers. The service provides container-specific configuration options and features. You're responsible for the compute used inside the container. The services which host containers move from managed control to full responsibility so you only take on the amount of container management you want.
Kubernetes-centricorchestration hosting includes:
Preconfiguredcontainer hosting means the orchestration options are preconfigured for you. Your ability to communicate between containers or container clusters might require an additional service such asDapr.
Azure provides a container registry to store and manage your container images or you can use a third-party container registry.
Serverless
Serverlesshosting solutions are designed to run stateless code, which includes a consumption-based pricing tier that scales to zero when not used.
Microservices
Microserviceshosting solutions are designed to run small, independent services that work together to make up a larger application.  Microservices are typically deployed as containers.
Cloud edge
Cloud edge is a term to indicate if the Cloud service is located to benefit the user (client) or the application (server).
Client compute
Client computeis compute that runs on the client away from the Azure cloud.  Client compute is typically used for client-side rendering and client-side processing such as browser-based or mobile applications.
Client availability
Server compute
Server computeassets are files that are processed by the server before being served to the client.  Dynamic assets are developed using back-end server compute, optionally integrated with other Azure services.
Server Endpoint Management
Server Endpoint Managementis the ability to manage your server endpoint and its compute through a gateway.  This gateway provides functionality such as versioning, caching, transformation, API policies, and monitoring.
Automated compute
Automated computeis automated by an event such as a timed schedule or another Azure service and is typically used for background processing, batch processing, or long-running processes.
Hybrid cloud
Hybrid cloud is a computing environment that connects a companyâs on-premises private cloud services and third-party public cloud into a single, flexible infrastructure for running the organizationâs applications and workloads.
If you don't need to maintain your own infrastructure, you can use Azure Stack HCI to run virtual machines on-premises.
High performance computing
High-performance computing (HPC) is the use of parallel processing for running advanced application programs efficiently, reliably and quickly. The term applies especially to systems that function above a teraflop or 10^12 floating-point operations per second.
Learn more aboutHigh-performance computing on Azure.
Event-based compute
Event-based computeis compute that is triggered by an event such as a timed schedule or another Azure service.  Event-based compute is typically used for background processing, batch processing, or long-running processes.
CI/CD compute
CI/CD computeis compute that is used to build and deploy your application.
Java resources
Java hosting options
Java migration to Azure
Additional resources
Azure Architecture Center: Choose an Azure compute service
Continue to part 4: Connect your app to Azure services
Feedback
Was this page helpful?
Additional resources