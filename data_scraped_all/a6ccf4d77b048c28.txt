Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Tools and clients that connect to Azure DevOps
Article
2025-04-25
16 contributors
In this article
Azure DevOps Services | Azure DevOps Server 2022 - Azure DevOps Server 2019
The Microsoft platform of software development tools is well established. The Visual Basic and Visual Studio integrated development environment (IDE) supports teams in their software development, and offers a catalog of plug-ins to extend the product functionality. In particular, the Team Explorer plug-in allows the Visual Studio client to connect to Azure DevOps to support source control, work tracking, build, and test operations. This article describes various tools and clients you can use to connect with Azure DevOps and enhance your development.
Desktop client developer tools
Developers have access to many tools through the following versions of Visual Studio and plug-ins. To download any version of Visual Studio, go to theVisual Studio Downloads page. To understand what features you get with the Visual Studio versions, seeCompare Visual Studio offerings.
To get started with client libraries, seeClient library samples.
Team Explorer plug-in
Team Explorer, a plug-in to all Visual Studio versions, connects Visual Studio to projects defined in Azure DevOps. You can manage source code, work items, and builds. Team Explorer supports using Git and Team Foundation Version Control (TFVC) for source control. For more information, seeWork in Team Explorer.

Home page with Git in Visual Studio 2019

Home page with TFVC in Visual Studio 2019

Visual Studio Git experience
Visual Studio 2019 and later provides theGitmenu with quick access to source control and repository tasks.

Visual Studio 2022 also provides theGit ChangesandGit Repositorywindows:


For more information, seeGit experience in Visual StudioandSide-by-side comparison of Git and Team Explorer.
Office integration tools
If you want to add and bulk-modify work items with Azure DevOps, you can integrateMicrosoft Office Excel. To support the integration, you need to install theAzure DevOps Office Integration 2019add-in.
Task-specific clients
The following clients support specific tasks, such as managing testing efforts, providing feedback, and modifying work items:
Azure Test Plans: Manage your test efforts, create and run manual tests, and create and track bugs found during test efforts.
Test & Feedback extension(previously, the Exploratory Testing extension): Access a lightweight plug-in to a web browser. Stakeholders can respond to feedback requests for user stories and features created in Azure DevOps. This extension is free to Stakeholders.
Microsoft Feedback Client: Enable Stakeholders to use this client to record feedback for your application as video, audio, or type-written comments. This client is installed with all versions of Visual Studio, or it can beinstalled from the free download. All feedback is stored in the work item data store and requiresStakeholders to have permissions.
Browser-based web tools
Browser-based web tools are available for connecting with Azure DevOps. You can use collaboration tools that are supported through the web portal or extensions built and maintained by the Azure DevOps Services product team.
Web portal support
Collaboration tools supported through the web portal are summarized underEssential services. New features are deployed every three weeks for Azure DevOps Services, and quarterly for Azure DevOps Server.
The following table lists the supported browsers and applicable Azure DevOps versions:
For more information, seeWeb portal navigation.
Browser-based extensions
The Azure DevOps Services product team maintains the following built-in extensions:
Code search: Increase cross-team collaboration and code sharing. Enable developers to quickly locate relevant information within the code base of all projects hosted within an organization or collection. Discover implementation examples, browsing definitions, and error text.
Work item search: Quickly find relevant work items and search across all work item fields over all projects in an organization. Run full-text searches across all fields to efficiently locate relevant work items. Use inline search filters, on any work item field, and quickly narrow down a list of work items.
You can find more extensions in Azure DevOps underOrganization settings>Extensions>Browse marketplace. For more information, seeAbout migrating and integrating work tracking data.
Command-line tools
You can complete many code development and administrative tasks by using the following command-line tools:
Azure DevOps CLI commands (az devops)
Git commands
TFVC commands
Test Case Management (TCM) commands
Manage permissions with command line tool (az devops security)
witAdmin (work item tracking)
Integrated tool support for third-party applications
Several tools provide support for monitoring and interacting with Azure DevOps from a third-party application.
Marketplace extensions
Visual Studio and Azure DevOps offer various features and functionality, and the ability to extend and share the functionality. Extensions are simple add-ons you can use to customize and extend your Azure DevOps and work tracking experiences. The extensions are written with standard technologies like HTML, JavaScript, and CSS. You can also develop your own extensions by using your preferred dev tools:
Build custom extensions by using theRESTful API library.
Publish your extensions to the Azure DevOps Marketplace.
Maintain your extensions for private use, or share your extensions with millions of developers who use Visual Studio and Azure DevOps.
For more information, see theAzure DevOps MarketplaceandOverview of extensions.
REST APIs
The Azure DevOps APIs are based on REST, OAuth, JSON, and service hook. These resources are standard web technologies that are broadly supported in the industry. REST APIs are provided to support building extensions to Azure DevOps. For more information, seeREST API overview.
Related content
A tour of the services in Azure DevOps
Software development roles
Azure DevOps Pricing
Azure DevOps data protection overview
Feedback
Was this page helpful?
Additional resources