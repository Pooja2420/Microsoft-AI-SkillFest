Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Access, create, or process documents in Azure Cosmos DB with workflows in Azure Logic Apps
Article
2025-04-15
4 contributors
In this article
Applies to:Azure Logic Apps (Consumption + Standard)
From a workflow in Azure Logic Apps, you can connect to Azure Cosmos DB and work with documents by using theAzure Cosmos DBconnector. For example, you can use connector operations to create, update, read, query, or delete documents.
You can connect to Azure Cosmos DB from both Consumption and Standard logic app workflows by using themanaged connectoroperations, which are hosted, managed, and run in global, multitenant Azure. For Standard workflows, Azure Cosmos DB also providesbuilt-inoperationsthat run alongside the runtime for single-tenant Azure Logic Apps. Built-in operations offer better performance, higher throughput, and sometimes different functionality. For example, in a Standard workflow, you can use the built-in trigger to monitor an Azure Cosmos DB container for new or updated items. You can combine Azure Cosmos DB operations with others in a workflow to support scenarios like event sourcing and general data processing.
Limitations
Currently, only stateful workflows in a Standard workflow can use both the managed connector operations and built-in operations. Stateless workflows can use only the built-in operations.
Currently, only stateful workflows in a Standard workflow can use both the managed connector operations and built-in operations. Stateless workflows can use only the built-in operations.
The Azure Cosmos DB connector supports only Azure Cosmos DB accounts created withAzure Cosmos DB for NoSQL.
The Azure Cosmos DB connector supports only Azure Cosmos DB accounts created withAzure Cosmos DB for NoSQL.
Prerequisites
An Azure account and subscription. If you don't have an Azure subscription,sign up for a free Azure account.
An Azure account and subscription. If you don't have an Azure subscription,sign up for a free Azure account.
AnAzure Cosmos DB account.
AnAzure Cosmos DB account.
A logic app workflow from where you want to access an Azure Cosmos DB account. To use the Azure Cosmos DB built-in trigger, you need to start with a blank workflow.
A logic app workflow from where you want to access an Azure Cosmos DB account. To use the Azure Cosmos DB built-in trigger, you need to start with a blank workflow.
Connector technical reference
For reference information about the Azure Cosmos DBmanaged connectoroperations, such as triggers, actions, and limits, see themanaged connector's reference page.
For reference information about the Azure Cosmos DBmanaged connectoroperations, such as triggers, actions, and limits, see themanaged connector's reference page.
For reference information about the Azure Cosmos DBbuilt-inoperations, such as triggers, actions, and limits, see thebuilt-in operations reference page.
For reference information about the Azure Cosmos DBbuilt-inoperations, such as triggers, actions, and limits, see thebuilt-in operations reference page.
Add Azure Cosmos DB trigger
In Azure Logic Apps, every workflow must start with atrigger, which fires when a specific event happens or when a specific condition is met.
If you're working with a Standard workflow, the built-in trigger namedWhen an item is created or modifiedis available and is based on theAzure Cosmos DB change feed design pattern. This trigger is unavailable for Consumption workflows.
Consumption
Standard
No Azure Cosmos DB triggers are available for Consumption workflows. Instead, add a trigger that works for your scenario.
To add an Azure Cosmos DB built-in trigger to a Standard workflow, follow these steps:
In theAzure portal, open the Standard workflow in the designer.
In theAzure portal, open the Standard workflow in the designer.
Followthese general steps to add the trigger namedWhen an item is created or modified.
Followthese general steps to add the trigger namedWhen an item is created or modified.
If you're prompted for connection details,create a connection to Azure Cosmos DB now.
If you're prompted for connection details,create a connection to Azure Cosmos DB now.
On the trigger information pane, on theParameterstab, provide the following necessary information:ParameterRequiredValueDescriptionDatabase IdYes<database-name>The name of the database with the container to monitor. This database should also have the lease container. If you don't have a lease container, the connector creates one for you in a later step.Monitored Container IdYes<container-name>The name of the container to monitor. This container should exist in the specified database.Lease Container IdYes<lease-container-name>The name of either an existing container or a new container to create. The trigger automatically populates withleasesas the default name.Create Lease ContainerNoNoorYesIf the lease container exists in the specified database, selectNo. To create this container, selectYes. If you selectYesand are using manual throughput dedicated for each container, make sure to open theAdvanced parameterslist to select theLease Container Throughputparameter. Enter the number ofrequest units (RUs)to provision for this container.NoteThe trigger creates a workflow run for each item created or modified in Azure Cosmos DB,
so the dynamic content output of this trigger is always a single item.The following example shows theWhen an item is created or modifiedtrigger:
On the trigger information pane, on theParameterstab, provide the following necessary information:
leases
Note
The trigger creates a workflow run for each item created or modified in Azure Cosmos DB,
so the dynamic content output of this trigger is always a single item.
The following example shows theWhen an item is created or modifiedtrigger:

To add any other available parameters, open theAdvanced parameterslist.
To add any other available parameters, open theAdvanced parameterslist.
Configure any other parameters or settings as needed.
Configure any other parameters or settings as needed.
Add any other actions that you want to the workflow.
Add any other actions that you want to the workflow.
On the designer toolbar, selectSave.
On the designer toolbar, selectSave.
Add Azure Cosmos DB action
In Azure Logic Apps, anactionis a step in a workflow that follows a trigger or another action. The Azure Cosmos DB connector offers actions for both Consumption and Standard workflows. The following examples show how to use an action that creates or updates a document.
Consumption
Standard
To add an Azure Cosmos DB action to a Consumption workflow, follow these steps:
In theAzure portal, open your Consumption workflow in the designer.
In theAzure portal, open your Consumption workflow in the designer.
If the workflow is blank, add any trigger that you want.This example starts with theWhen a HTTP request is receivedtrigger.
If the workflow is blank, add any trigger that you want.
This example starts with theWhen a HTTP request is receivedtrigger.
Under the trigger or action where you want to add the Azure Cosmos DB action, followthese general steps to add theAzure Cosmos DBaction that you want.This example uses the action namedCreate or update document (V3).
Under the trigger or action where you want to add the Azure Cosmos DB action, followthese general steps to add theAzure Cosmos DBaction that you want.
This example uses the action namedCreate or update document (V3).
If you're prompted for connection details,create a connection to your Azure Cosmos DB account now.
If you're prompted for connection details,create a connection to your Azure Cosmos DB account now.
In the action information pane, on theParameterstab, provide the following necessary information:ParameterRequiredValueDescriptionAzure Cosmos DB account nameYes<Cosmos-DB-account-name>The account name for the Azure Cosmos DB account.Database IDYes<Cosmos-DB-database-name>The database to connect.Collection IDYes<Cosmost-DB-container-name>The container to query.DocumentYes<JSON-document>The JSON document to create. This example uses the request body from the trigger output.Tip: If the HTTP trigger'sBodytoken doesn't appear in the dynamic content list for you to add, next to the trigger name, selectSee more.Note: Make sure that the body is well-formed JSON, and at a minimum, contains theidproperty and the partition key property for your document. If a document with the specifiedidand partition key exists, the document is updated. Otherwise, a new document is created.For example:
In the action information pane, on theParameterstab, provide the following necessary information:
id
id
For example:

To add any other available parameters, open theAdvanced parameterslist.
To add any other available parameters, open theAdvanced parameterslist.
Configure any other parameters or settings as needed.
Configure any other parameters or settings as needed.
On the designer toolbar, selectSave.
On the designer toolbar, selectSave.
Test the workflow to confirm that the action creates a document in the specified container.
Test the workflow to confirm that the action creates a document in the specified container.
To add an Azure Cosmos DB built-in action to a Standard workflow, follow these steps:
In theAzure portal, open your Standard workflow in the designer.
In theAzure portal, open your Standard workflow in the designer.
If the workflow is blank, add any trigger that you want.This example starts with theWhen a HTTP request is receivedtrigger, which uses a basic schema definition to represent the item that you want to create:
If the workflow is blank, add any trigger that you want.
This example starts with theWhen a HTTP request is receivedtrigger, which uses a basic schema definition to represent the item that you want to create:

Under the trigger or action where you want to add the Azure Cosmos DB action, followthese general steps to add theAzure Cosmos DBaction that you want.NoteIf you have a stateful workflow,managed connectoractions are also available,
but use them only when thebuilt-inactions that you want aren't available.This example uses the action namedCreate or update item, which creates a new item or updates an existing item.
Under the trigger or action where you want to add the Azure Cosmos DB action, followthese general steps to add theAzure Cosmos DBaction that you want.
Note
If you have a stateful workflow,managed connectoractions are also available,
but use them only when thebuilt-inactions that you want aren't available.
This example uses the action namedCreate or update item, which creates a new item or updates an existing item.
If you're prompted for connection details,create a connection to your Azure Cosmos DB account now.
If you're prompted for connection details,create a connection to your Azure Cosmos DB account now.
In the action information pane, on theParameterstab, provide the following necessary information:ParameterRequiredValueDescriptionDatabase IdYes<database-ID>The database to connect.Container IdYes<container-ID>The container to query.ItemYes<JSON-document>The JSON document to create. This example uses theidoutput from the Request trigger.Note: If you use thebodytrigger output, make sure that the body content is well-formed JSON, and at a minimum, contains theidattribute and thepartitionKeyattribute for your document. If a document with these attributes exists, the document is updated. Otherwise, a new document is created.The following example shows the action namedCreate or update item, which includes theItemandPartition Keyparameter values from the output for the trigger namedWhen a HTTP request is received:
In the action information pane, on theParameterstab, provide the following necessary information:
id
partitionKey
The following example shows the action namedCreate or update item, which includes theItemandPartition Keyparameter values from the output for the trigger namedWhen a HTTP request is received:

Configure any other parameters or settings as needed.
Configure any other parameters or settings as needed.
On the designer toolbar, selectSave.
On the designer toolbar, selectSave.
Test the workflow to confirm that the action creates a document in the specified container.
Test the workflow to confirm that the action creates a document in the specified container.
Connect to Azure Cosmos DB
When you add a trigger or action that connects to a service or system, and you don't have an existing or active connection, Azure Logic Apps prompts you to provide the connection information, which varies based on the connection type, for example:
Your account credentials
A name to use for the connection
The name for the server or system
The authentication type to use
A connection string
Before you can configure anAzure Cosmos DB triggerorAzure Cosmos DB action, you need to connect to a database account.
Consumption
Standard
For a Consumption workflow, an Azure Cosmos DB connection requires the following information:
Note
After you create the connection, if you have a different Azure Cosmos DB connection
that you want to use instead, or if you want to create a new connection, selectChange connectionin theParameterstab on the trigger or action information pane.
For a Standard workflow, an Azure Cosmos DB connection (built-in) requires the following information:
Note
After you create the connection, if you have a different Azure Cosmos DB connection
that you want to use instead, or if you want to create a new connection, selectChange connectionin theParameterstab on the trigger or action information pane.
Best practices for Azure Cosmos DB built-in operations
Get iterable results from the Query items action
TheQuery itemsbuilt-in action in a Standard workflow has many dynamic content outputs available for use in subsequent actions. To get the query result items or item metadata as an iterable object, follow these steps:
In theAzure portal, open your Standard workflow in the designer.
In theAzure portal, open your Standard workflow in the designer.
If the workflow is blank, add any trigger that you want.This example starts with theRecurrencetrigger.
If the workflow is blank, add any trigger that you want.
This example starts with theRecurrencetrigger.
Under the trigger or action where you want to add the Azure Cosmos DB action, followthese general steps to add theAzure Cosmos DBaction namedQuery items.
Under the trigger or action where you want to add the Azure Cosmos DB action, followthese general steps to add theAzure Cosmos DBaction namedQuery items.
If you're prompted for connection details,create a connection to your Azure Cosmos DB account.
If you're prompted for connection details,create a connection to your Azure Cosmos DB account.
In the action information pane, on theParameterstab, provide the following necessary information:ParametersRequiredValueDescriptionDatabase IdYes<database-ID>The database to connect.Container IdYes<container-ID>The container to query.SQL QueryYes<sql-query>The SQL query for the request.The following example shows theQuery itemsaction:
In the action information pane, on theParameterstab, provide the following necessary information:
The following example shows theQuery itemsaction:

Configure any other parameters or settings as needed.
Configure any other parameters or settings as needed.
Under theQuery itemsaction, followthese general steps to add an action that you want to run on all the returned query items.This example uses the Azure Cosmos DB built-in action namedDelete an item.
Under theQuery itemsaction, followthese general steps to add an action that you want to run on all the returned query items.
This example uses the Azure Cosmos DB built-in action namedDelete an item.
In theDelete an itemaction, you can access outputs from theQuery itemsaction by following these steps:Select inside any input field to show the available options.Select the lightning icon to open the dynamic content list.From theQuery itemssection in the list, select the output you want, or selectSee morefor more outputs.For example, you can selectResponse Items Itemto populate theItem Idfield with IDs from the query results.After you select theResponse Items Item, theFor eachaction is automatically added to iterate through all the query results. TheFor eachloop contains theDelete an itemaction.
In theDelete an itemaction, you can access outputs from theQuery itemsaction by following these steps:
Select inside any input field to show the available options.
Select inside any input field to show the available options.
Select the lightning icon to open the dynamic content list.
Select the lightning icon to open the dynamic content list.
From theQuery itemssection in the list, select the output you want, or selectSee morefor more outputs.For example, you can selectResponse Items Itemto populate theItem Idfield with IDs from the query results.After you select theResponse Items Item, theFor eachaction is automatically added to iterate through all the query results. TheFor eachloop contains theDelete an itemaction.
From theQuery itemssection in the list, select the output you want, or selectSee morefor more outputs.
For example, you can selectResponse Items Itemto populate theItem Idfield with IDs from the query results.
After you select theResponse Items Item, theFor eachaction is automatically added to iterate through all the query results. TheFor eachloop contains theDelete an itemaction.

Add any other actions that you want to the loop.
Add any other actions that you want to the loop.
On the designer toolbar, selectSave.
On the designer toolbar, selectSave.
Test the workflow to confirm that the actions return the output that you expect.
Test the workflow to confirm that the actions return the output that you expect.
Related content
Managed connectors for Azure Logic Apps
Built-in connectors for Azure Logic Apps
What are connectors in Azure Logic Apps
Feedback
Was this page helpful?
Additional resources