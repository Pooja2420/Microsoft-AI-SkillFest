Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Use labels in an Azure Kubernetes Service (AKS) cluster
Article
2024-08-01
8 contributors
In this article
If you have multiple node pools, you may want to add a label during node pool creation.Kubernetes labelshandle the scheduling rules for nodes. You can add labels to a node pool anytime and apply them to all nodes in the node pool.
In this how-to guide, you learn how to use labels in an Azure Kubernetes Service (AKS) cluster.
Prerequisites
You need the Azure CLI version 2.2.0 or later installed and configured. Runaz --versionto find the version. If you need to install or upgrade, seeInstall Azure CLI.
az --version
Create an AKS cluster with a label
Create an AKS cluster with a label using theaz aks createcommand and specify the--node-labelsparameter to set your labels. Labels must be a key/value pair and have avalid syntax.az aks create \
    --resource-group myResourceGroup \
    --name myAKSCluster \
    --node-count 2 \
    --nodepool-labels dept=IT costcenter=9000 \
    --generate-ssh-keys
Create an AKS cluster with a label using theaz aks createcommand and specify the--node-labelsparameter to set your labels. Labels must be a key/value pair and have avalid syntax.
az aks create
--node-labels
az aks create \
    --resource-group myResourceGroup \
    --name myAKSCluster \
    --node-count 2 \
    --nodepool-labels dept=IT costcenter=9000 \
    --generate-ssh-keys
az aks create \
    --resource-group myResourceGroup \
    --name myAKSCluster \
    --node-count 2 \
    --nodepool-labels dept=IT costcenter=9000 \
    --generate-ssh-keys
Verify the labels were set using thekubectl get nodes --show-labelscommand.kubectl get nodes --show-labels | grep -e "costcenter=9000" -e "dept=IT"
Verify the labels were set using thekubectl get nodes --show-labelscommand.
kubectl get nodes --show-labels
kubectl get nodes --show-labels | grep -e "costcenter=9000" -e "dept=IT"
kubectl get nodes --show-labels | grep -e "costcenter=9000" -e "dept=IT"
Create a node pool with a label
Create a node pool with a label using theaz aks nodepool addcommand and specify a name for the--nameparameters and labels for the--labelsparameter. Labels must be a key/value pair and have avalid syntaxThe following example command creates a node pool namedlabelnpwith the labelsdept=HRandcostcenter=5000.az aks nodepool add \
    --resource-group myResourceGroup \
    --cluster-name myAKSCluster \
    --name labelnp \
    --node-count 1 \
    --labels dept=HR costcenter=5000 \
    --no-waitThe following example output from theaz aks nodepool listcommand shows thelabelnpnode pool isCreatingnodes with the specifiednodeLabels:[
  {
    ...
    "count": 1,
    ...
    "name": "labelnp",
    "orchestratorVersion": "1.15.7",
    ...
    "provisioningState": "Creating",
    ...
    "nodeLabels":  {
      "costcenter": "5000",
      "dept": "HR"
    },
    ...
  },
 ...
]
Create a node pool with a label using theaz aks nodepool addcommand and specify a name for the--nameparameters and labels for the--labelsparameter. Labels must be a key/value pair and have avalid syntax
az aks nodepool add
--name
--labels
The following example command creates a node pool namedlabelnpwith the labelsdept=HRandcostcenter=5000.
az aks nodepool add \
    --resource-group myResourceGroup \
    --cluster-name myAKSCluster \
    --name labelnp \
    --node-count 1 \
    --labels dept=HR costcenter=5000 \
    --no-wait
az aks nodepool add \
    --resource-group myResourceGroup \
    --cluster-name myAKSCluster \
    --name labelnp \
    --node-count 1 \
    --labels dept=HR costcenter=5000 \
    --no-wait
The following example output from theaz aks nodepool listcommand shows thelabelnpnode pool isCreatingnodes with the specifiednodeLabels:
az aks nodepool list
[
  {
    ...
    "count": 1,
    ...
    "name": "labelnp",
    "orchestratorVersion": "1.15.7",
    ...
    "provisioningState": "Creating",
    ...
    "nodeLabels":  {
      "costcenter": "5000",
      "dept": "HR"
    },
    ...
  },
 ...
]
[
  {
    ...
    "count": 1,
    ...
    "name": "labelnp",
    "orchestratorVersion": "1.15.7",
    ...
    "provisioningState": "Creating",
    ...
    "nodeLabels":  {
      "costcenter": "5000",
      "dept": "HR"
    },
    ...
  },
 ...
]
Verify the labels were set using thekubectl get nodes --show-labelscommand.kubectl get nodes --show-labels | grep -e "costcenter=5000" -e "dept=HR"
Verify the labels were set using thekubectl get nodes --show-labelscommand.
kubectl get nodes --show-labels
kubectl get nodes --show-labels | grep -e "costcenter=5000" -e "dept=HR"
kubectl get nodes --show-labels | grep -e "costcenter=5000" -e "dept=HR"
Updating labels on existing node pools
Update a label on an existing node pool using theaz aks nodepool updatecommand. Updating labels on existing node pools overwrites the old labels with the new labels. Labels must be a key/value pair and have avalid syntax.az aks nodepool update \
    --resource-group myResourceGroup \
    --cluster-name myAKSCluster \
    --name labelnp \
    --labels dept=ACCT costcenter=6000 \
    --no-wait
Update a label on an existing node pool using theaz aks nodepool updatecommand. Updating labels on existing node pools overwrites the old labels with the new labels. Labels must be a key/value pair and have avalid syntax.
az aks nodepool update
az aks nodepool update \
    --resource-group myResourceGroup \
    --cluster-name myAKSCluster \
    --name labelnp \
    --labels dept=ACCT costcenter=6000 \
    --no-wait
az aks nodepool update \
    --resource-group myResourceGroup \
    --cluster-name myAKSCluster \
    --name labelnp \
    --labels dept=ACCT costcenter=6000 \
    --no-wait
Verify the labels were set using thekubectl get nodes --show-labelscommand.kubectl get nodes --show-labels | grep -e "costcenter=6000" -e "dept=ACCT"
Verify the labels were set using thekubectl get nodes --show-labelscommand.
kubectl get nodes --show-labels
kubectl get nodes --show-labels | grep -e "costcenter=6000" -e "dept=ACCT"
kubectl get nodes --show-labels | grep -e "costcenter=6000" -e "dept=ACCT"
Unavailable labels
Reserved system labels
Since the2021-08-19 AKS release, AKS stopped the ability to make changes to AKS reserved labels. Attempting to change these labels results in an error message.
The following labels are AKS reserved labels.Virtual node usagespecifies if these labels could be a supported system feature on virtual nodes. Some properties that these system features change aren't available on the virtual nodes because they require modifying the host.
Sameis included in places where the expected values for the labels don't differ between a standard node pool and a virtual node pool. As virtual node pods don't expose any underlying virtual machine (VM), the VM SKU values are replaced with the SKUVirtual.
Virtual node versionrefers to the current version of thevirtual Kubelet-ACI connector release.
Virtual node subnet nameis the name of the subnet where virtual node pods are deployed into Azure Container Instance (ACI).
Virtual node virtual networkis the name of the virtual network, which contains the subnet where virtual node pods are deployed on ACI.
Reserved prefixes
The following prefixes are AKS reserved prefixes and can't be used for any node:
kubernetes.azure.com/
kubernetes.io/
For more information on reserved prefixes, seeKubernetes well-known labels, annotations, and taints.
Deprecated labels
The following labels are planned for deprecation with the release ofKubernetes v1.24. You should change any label references to the recommended substitute.
*Newly deprecated. For more information, see theRelease Notes.
Next steps
Learn more about Kubernetes labels in theKubernetes labels documentation.
Azure Kubernetes Service

Additional resources