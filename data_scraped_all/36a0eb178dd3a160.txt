Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Azure Policy definitions deny effect
Article
2025-03-04
2 contributors
In this article
Thedenyeffect is used to prevent a resource request that doesn't match defined standards through a policy definition and fails the request.
deny
Deny evaluation
When creating or updating a matched resource in a Resource Manager mode, deny prevents the request before being sent to the Resource Provider. The request is returned as a403 (Forbidden). In the portal, theForbiddencan be viewed as a deployment status that was prevented by the policy assignment. For a Resource Provider mode, the resource provider manages the evaluation of the resource.
403 (Forbidden)
Forbidden
During evaluation of existing resources, resources that match adenypolicy definition are marked as non-compliant.
deny
Deny properties
For a Resource Manager mode, thedenyeffect doesn't have any more properties for use in thethencondition of the policy definition.
deny
then
For a Resource Provider mode ofMicrosoft.Kubernetes.Data, thedenyeffect has the following subproperties ofdetails. Use oftemplateInfois required for new or updated policy definitions asconstraintTemplateis deprecated.
Microsoft.Kubernetes.Data
deny
details
templateInfo
constraintTemplate
templateInfo(required)Can't be used withconstraintTemplate.sourceType(required)Defines the type of source for the constraint template. Allowed values:PublicURLorBase64Encoded.IfPublicURL, paired with propertyurlto provide location of the constraint template. The location must be publicly accessible.WarningDon't use SAS URIs or tokens inurlor anything else that could expose a secret.IfBase64Encoded, paired with propertycontentto provide the base 64 encoded constraint template. SeeCreate policy definition from constraint templateto create a custom definition from an existingOpen Policy Agent(OPA) Gatekeeper v3constraint template.
templateInfo
Can't be used withconstraintTemplate.
constraintTemplate
sourceType(required)Defines the type of source for the constraint template. Allowed values:PublicURLorBase64Encoded.IfPublicURL, paired with propertyurlto provide location of the constraint template. The location must be publicly accessible.WarningDon't use SAS URIs or tokens inurlor anything else that could expose a secret.IfBase64Encoded, paired with propertycontentto provide the base 64 encoded constraint template. SeeCreate policy definition from constraint templateto create a custom definition from an existingOpen Policy Agent(OPA) Gatekeeper v3constraint template.
sourceType
Defines the type of source for the constraint template. Allowed values:PublicURLorBase64Encoded.
Defines the type of source for the constraint template. Allowed values:PublicURLorBase64Encoded.
PublicURL
Base64Encoded
IfPublicURL, paired with propertyurlto provide location of the constraint template. The location must be publicly accessible.WarningDon't use SAS URIs or tokens inurlor anything else that could expose a secret.
IfPublicURL, paired with propertyurlto provide location of the constraint template. The location must be publicly accessible.
PublicURL
url
Warning
Don't use SAS URIs or tokens inurlor anything else that could expose a secret.
url
IfBase64Encoded, paired with propertycontentto provide the base 64 encoded constraint template. SeeCreate policy definition from constraint templateto create a custom definition from an existingOpen Policy Agent(OPA) Gatekeeper v3constraint template.
IfBase64Encoded, paired with propertycontentto provide the base 64 encoded constraint template. SeeCreate policy definition from constraint templateto create a custom definition from an existingOpen Policy Agent(OPA) Gatekeeper v3constraint template.
Base64Encoded
content
constraint(optional)Can't be used withtemplateInfo.The CRD implementation of the Constraint template. Uses parameters passed viavaluesas{{ .Values.<valuename> }}. In example 2 below, these values are{{ .Values.excludedNamespaces }}and{{ .Values.allowedContainerImagesRegex }}.
constraint
Can't be used withtemplateInfo.
templateInfo
The CRD implementation of the Constraint template. Uses parameters passed viavaluesas{{ .Values.<valuename> }}. In example 2 below, these values are{{ .Values.excludedNamespaces }}and{{ .Values.allowedContainerImagesRegex }}.
values
{{ .Values.<valuename> }}
{{ .Values.excludedNamespaces }}
{{ .Values.allowedContainerImagesRegex }}
constraintTemplate(deprecated)Can't be used withtemplateInfo.Must be replaced withtemplateInfowhen creating or updating a policy definition.The Constraint template CustomResourceDefinition (CRD) that defines new Constraints. The template defines the Rego logic, the Constraint schema, and the Constraint parameters that are passed viavaluesfrom Azure Policy. For more information, go toGatekeeper constraints.
constraintTemplate
Can't be used withtemplateInfo.
templateInfo
Must be replaced withtemplateInfowhen creating or updating a policy definition.
templateInfo
The Constraint template CustomResourceDefinition (CRD) that defines new Constraints. The template defines the Rego logic, the Constraint schema, and the Constraint parameters that are passed viavaluesfrom Azure Policy. For more information, go toGatekeeper constraints.
values
constraintInfo(optional)Can't be used withconstraint,constraintTemplate,apiGroups, orkinds.IfconstraintInfoisn't provided, the constraint can be generated fromtemplateInfoand policy.sourceType(required)Defines the type of source for the constraint. Allowed values:PublicURLorBase64Encoded.IfPublicURL, paired with propertyurlto provide location of the constraint. The location must be publicly accessible.WarningDon't use SAS URIs or tokens inurlor anything else that could expose a secret.
constraintInfo
Can't be used withconstraint,constraintTemplate,apiGroups, orkinds.
constraint
constraintTemplate
apiGroups
kinds
IfconstraintInfoisn't provided, the constraint can be generated fromtemplateInfoand policy.
constraintInfo
templateInfo
sourceType(required)Defines the type of source for the constraint. Allowed values:PublicURLorBase64Encoded.IfPublicURL, paired with propertyurlto provide location of the constraint. The location must be publicly accessible.WarningDon't use SAS URIs or tokens inurlor anything else that could expose a secret.
sourceType
Defines the type of source for the constraint. Allowed values:PublicURLorBase64Encoded.
Defines the type of source for the constraint. Allowed values:PublicURLorBase64Encoded.
PublicURL
Base64Encoded
IfPublicURL, paired with propertyurlto provide location of the constraint. The location must be publicly accessible.WarningDon't use SAS URIs or tokens inurlor anything else that could expose a secret.
IfPublicURL, paired with propertyurlto provide location of the constraint. The location must be publicly accessible.
PublicURL
url
Warning
Don't use SAS URIs or tokens inurlor anything else that could expose a secret.
url
namespaces(optional)AnarrayofKubernetes namespacesto limit policy evaluation to.An empty or missing value causes policy evaluation to include all namespaces, except the ones defined inexcludedNamespaces.
namespaces
AnarrayofKubernetes namespacesto limit policy evaluation to.
An empty or missing value causes policy evaluation to include all namespaces, except the ones defined inexcludedNamespaces.
excludedNamespaces
excludedNamespaces(required)AnarrayofKubernetes namespacesto exclude from policy evaluation.
excludedNamespaces
AnarrayofKubernetes namespacesto exclude from policy evaluation.
labelSelector(required)Anobjectthat includesmatchLabels(object) andmatchExpression(array) properties to allow specifying which Kubernetes resources to include for policy evaluation that matched the providedlabels and selectors.An empty or missing value causes policy evaluation to include all labels and selectors, except namespaces defined inexcludedNamespaces.
labelSelector
Anobjectthat includesmatchLabels(object) andmatchExpression(array) properties to allow specifying which Kubernetes resources to include for policy evaluation that matched the providedlabels and selectors.
matchLabels
matchExpression
An empty or missing value causes policy evaluation to include all labels and selectors, except namespaces defined inexcludedNamespaces.
excludedNamespaces
apiGroups(required when usingtemplateInfo)Anarraythat includes theAPI groupsto match. An empty array ([""]) is the core API group.Defining["*"]forapiGroupsis disallowed.
apiGroups
Anarraythat includes theAPI groupsto match. An empty array ([""]) is the core API group.
[""]
Defining["*"]forapiGroupsis disallowed.
["*"]
kinds(required when usingtemplateInfo)Anarraythat includes thekindof Kubernetes object to limit evaluation to.Defining["*"]forkindsis disallowed.
kinds
Anarraythat includes thekindof Kubernetes object to limit evaluation to.
Defining["*"]forkindsis disallowed.
["*"]
values(optional)Defines any parameters and values to pass to the Constraint. Each value must exist in the Constraint template CRD.
values
Defines any parameters and values to pass to the Constraint. Each value must exist in the Constraint template CRD.
Deny example
Example 1: Using thedenyeffect for Resource Manager modes.
deny
"then": {
  "effect": "deny"
}
"then": {
  "effect": "deny"
}
Example 2: Using thedenyeffect for a Resource Provider mode ofMicrosoft.Kubernetes.Data. The additional information indetails.templateInfodeclares use ofPublicURLand setsurlto the location of the Constraint template to use in Kubernetes to limit the allowed container images.
deny
Microsoft.Kubernetes.Data
details.templateInfo
PublicURL
url
"then": {
  "effect": "deny",
  "details": {
    "templateInfo": {
      "sourceType": "PublicURL",
      "url": "https://store.policy.core.windows.net/kubernetes/container-allowed-images/v1/template.yaml",
    },
    "values": {
      "imageRegex": "[parameters('allowedContainerImagesRegex')]"
    },
    "apiGroups": [
      ""
    ],
    "kinds": [
      "Pod"
    ]
  }
}
"then": {
  "effect": "deny",
  "details": {
    "templateInfo": {
      "sourceType": "PublicURL",
      "url": "https://store.policy.core.windows.net/kubernetes/container-allowed-images/v1/template.yaml",
    },
    "values": {
      "imageRegex": "[parameters('allowedContainerImagesRegex')]"
    },
    "apiGroups": [
      ""
    ],
    "kinds": [
      "Pod"
    ]
  }
}
Next steps
Review examples atAzure Policy samples.
Review theAzure Policy definition structure.
Understand how toprogrammatically create policies.
Learn how toget compliance data.
Learn how toremediate non-compliant resources.
ReviewAzure management groups.
Feedback
Was this page helpful?
Additional resources