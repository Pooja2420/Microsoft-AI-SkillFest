Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
AI enrichment in Azure AI Search
Article
2025-02-24
16 contributors
In this article
In Azure AI Search,AI enrichmentrefers to integration withAzure AI servicesto process content that isn't searchable in its raw form. Through enrichment, analysis and inference are used to create searchable content and structure where none previously existed.
Because Azure AI Search is used for text and vector queries, the purpose of AI enrichment is to improve the utility of your content in search-related scenarios. Raw content must be text or images (you can't enrich vectors), but the output of an enrichment pipeline can be vectorized and indexed in a search index using skills likeText Split skillfor chunking andAzureOpenAIEmbedding skillfor vector encoding. For more information about using skills in vector scenarios, seeIntegrated data chunking and embedding.
AI enrichment is based onskills.
Built-in skills tap Azure AI services. They apply the following transformations and processing to raw content:
Translation and language detection for multi-lingual search
Entity recognition to extract people names, places, and other entities from large chunks of text
Key phrase extraction to identify and output important terms
Optical Character Recognition (OCR) to recognize printed and handwritten text in binary files
Image analysis to describe image content, and output the descriptions as searchable text fields
Custom skills run your external code. Custom skills can be used for any custom processing that you want to include in the pipeline.
AI enrichment is an extension of anindexer pipelinethat connects to Azure data sources. An enrichment pipeline has all of the components of an indexer pipeline (indexer, data source, index), plus askillsetthat specifies atomic enrichment steps.
The following diagram shows the progression of AI enrichment:

Importis the first step. Here, the indexer connects to a data source and pulls content (documents) into the search service.Azure Blob Storageis the most common resource used in AI enrichment scenarios, but any supported data source can provide content.
Enrich & Indexcovers most of the AI enrichment pipeline:
Enrichment starts when the indexer"cracks documents"and extracts images and text. The kind of processing that occurs next depends on your data and which skills you've added to a skillset. If you have images, they can be forwarded to skills that perform image processing. Text content is queued for text and natural language processing. Internally, skills create an"enriched document"that collects the transformations as they occur.
Enrichment starts when the indexer"cracks documents"and extracts images and text. The kind of processing that occurs next depends on your data and which skills you've added to a skillset. If you have images, they can be forwarded to skills that perform image processing. Text content is queued for text and natural language processing. Internally, skills create an"enriched document"that collects the transformations as they occur.
Enriched content is generated during skillset execution, and is temporary unless you save it. You can enable anenrichment cacheto persist cracked documents and skill outputs for subsequent reuse during future skillset executions.
Enriched content is generated during skillset execution, and is temporary unless you save it. You can enable anenrichment cacheto persist cracked documents and skill outputs for subsequent reuse during future skillset executions.
To get content into a search index, the indexer must have mapping information for sending enriched content to target field.Field mappings(explicit or implicit) set the data path from source data to a search index.Output field mappingsset the data path from enriched documents to an index.
To get content into a search index, the indexer must have mapping information for sending enriched content to target field.Field mappings(explicit or implicit) set the data path from source data to a search index.Output field mappingsset the data path from enriched documents to an index.
Indexing is the process wherein raw and enriched content is ingested into the physical data structures of asearch index(its files and folders). Lexical analysis and tokenization occur in this step.
Indexing is the process wherein raw and enriched content is ingested into the physical data structures of asearch index(its files and folders). Lexical analysis and tokenization occur in this step.
Explorationis the last step. Output is always asearch indexthat you can query from a client app. Output can optionally be aknowledge storeconsisting of blobs and tables in Azure Storage that are accessed through data exploration tools or downstream processes. If you're creating a knowledge store,projectionsdetermine the data path for enriched content. The same enriched content can appear in both indexes and knowledge stores.
When to use AI enrichment
Enrichment is useful if raw content is unstructured text, image content, or content that needs language detection and translation. Applying AI through thebuilt-in skillscan unlock this content for full text search and data science applications.
You can also createcustom skillsto provide external processing.
Open-source, third-party, or first-party code can be integrated into the pipeline as a custom skill. Classification models that identify salient characteristics of various document types fall into this category, but any external package that adds value to your content could be used.
Use-cases for built-in skills
Built-in skills are based on the Azure AI services APIs:Azure AI Computer VisionandLanguage Service. Unless your content input is small, expect toattach a billable Azure AI services resourceto run larger workloads.
Askillsetthat's assembled using built-in skills is well suited for the following application scenarios:
Image processingskills includeOptical Character Recognition (OCR)and identification ofvisual features, such as facial detection, image interpretation, image recognition (famous people and landmarks), or attributes like image orientation. These skills create text representations of image content for full text search in Azure AI Search.
Image processingskills includeOptical Character Recognition (OCR)and identification ofvisual features, such as facial detection, image interpretation, image recognition (famous people and landmarks), or attributes like image orientation. These skills create text representations of image content for full text search in Azure AI Search.
Machine translationis provided by theText Translationskill, often paired withlanguage detectionfor multi-language solutions.
Machine translationis provided by theText Translationskill, often paired withlanguage detectionfor multi-language solutions.
Natural language processinganalyzes chunks of text. Skills in this category includeEntity Recognition,Sentiment Detection (including opinion mining), andPersonal Identifiable Information Detection. With these skills, unstructured text is mapped as searchable and filterable fields in an index.
Natural language processinganalyzes chunks of text. Skills in this category includeEntity Recognition,Sentiment Detection (including opinion mining), andPersonal Identifiable Information Detection. With these skills, unstructured text is mapped as searchable and filterable fields in an index.
Use-cases for custom skills
Custom skillsexecute external code that you provide and wrap in thecustom skill web interface. Several examples of custom skills can be found in theazure-search-power-skillsGitHub repository.
Custom skills arenât always complex. For example, if you have an existing package that provides pattern matching or a document classification model, you can wrap it in a custom skill.
Storing output
In Azure AI Search, an indexer saves the output it creates. A single indexer run can create up to three data structures that contain enriched and indexed output.
Indexes and knowledge stores are fully independent of each other. While you must attach an index to satisfy indexer requirements, if your sole objective is a knowledge store, you can ignore the index after it's populated.
Exploring content
After you've defined and loaded asearch indexor aknowledge store, you can explore its data.
Query a search index
Run queriesto access the enriched content generated by the pipeline. The index is like any other you might create for Azure AI Search: you can supplement text analysis with custom analyzers, invoke fuzzy search queries, add filters, or experiment with scoring profiles to tune search relevance.
Use data exploration tools on a knowledge store
In Azure Storage, aknowledge storecan assume the following forms: a blob container of JSON documents, a blob container of image objects, or tables in Table Storage. You can useStorage Explorer,Power BI, or any app that connects to Azure Storage to access your content.
A blob container captures enriched documents in their entirety, which is useful if you're creating a feed into other processes.
A blob container captures enriched documents in their entirety, which is useful if you're creating a feed into other processes.
A table is useful if you need slices of enriched documents, or if you want to include or exclude specific parts of the output. For analysis in Power BI, tables are the recommended data source for data exploration and visualization in Power BI.
A table is useful if you need slices of enriched documents, or if you want to include or exclude specific parts of the output. For analysis in Power BI, tables are the recommended data source for data exploration and visualization in Power BI.
Availability and pricing
Enrichment is available in regions that have Azure AI services. You can check the availability of enrichment on theregions listpage.
Billing follows a pay-as-you-go pricing model. The costs of using built-in skills are passed on when a multi-region Azure AI services key is specified in the skillset. There are also costs associated with image extraction, as metered by Azure AI Search. Text extraction and utility skills, however, aren't billable. For more information, seeHow you're charged for Azure AI Search.
Checklist: A typical workflow
An enrichment pipeline consists ofindexersthat haveskillsets. Post-indexing, you can query an index to validate your results.
Start with a subset of data in asupported data source. Indexer and skillset design is an iterative process. The work goes faster with a small representative data set.
Create adata sourcethat specifies a connection to your data.
Create adata sourcethat specifies a connection to your data.
Create a skillset. Unless your project is small, you shouldattach an Azure AI services multi-service resource. If you'recreating a knowledge store, define it within the skillset.
Create a skillset. Unless your project is small, you shouldattach an Azure AI services multi-service resource. If you'recreating a knowledge store, define it within the skillset.
Create an index schemathat defines a search index.
Create an index schemathat defines a search index.
Create and run the indexerto bring all of the above components together. This step retrieves the data, runs the skillset, and loads the index.An indexer is also where you specify field mappings and output field mappings that set up the data path to a search index.Optionally,enable enrichment cachingin the indexer configuration. This step allows you to reuse existing enrichments later on.
Create and run the indexerto bring all of the above components together. This step retrieves the data, runs the skillset, and loads the index.
An indexer is also where you specify field mappings and output field mappings that set up the data path to a search index.
Optionally,enable enrichment cachingin the indexer configuration. This step allows you to reuse existing enrichments later on.
Run queriesto evaluate results orstart a debug sessionto work through any skillset issues.
Run queriesto evaluate results orstart a debug sessionto work through any skillset issues.
To repeat any of the above steps,reset the indexerbefore you run it. Or, delete and recreate the objects on each run (recommended if youâre using the free tier). If you enabled caching the indexer pulls from the cache if data is unchanged at the source, and if your edits to the pipeline don't invalidate the cache.
Next steps
Quickstart: Create a skillset for AI enrichment
Tutorial: Learn about the AI enrichment REST APIs
Skillset concepts
Knowledge store concepts
Create a skillset
Create a knowledge store
Feedback
Was this page helpful?
Additional resources