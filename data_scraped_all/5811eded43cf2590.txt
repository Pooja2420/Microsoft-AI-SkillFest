Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Maven@4 - Maven v4 task
Article
2025-03-28
3 contributors
In this article
Build, test, and deploy with Apache Maven.
Syntax
# Maven v4
# Build, test, and deploy with Apache Maven.
- task: Maven@4
  inputs:
    #azureSubscription: # string. Alias: ConnectedServiceName. Azure Resource Manager connection. 
    mavenPOMFile: 'pom.xml' # string. Required. Maven POM file. Default: pom.xml.
    #goals: 'package' # string. Goal(s). Default: package.
    #options: # string. Options. 
  # JUnit Test Results
    #publishJUnitResults: true # boolean. Publish to Azure Pipelines. Default: true.
    testResultsFiles: '**/surefire-reports/TEST-*.xml' # string. Required when publishJUnitResults = true. Test results files. Default: **/surefire-reports/TEST-*.xml.
    #testRunTitle: # string. Optional. Use when publishJUnitResults = true. Test run title. 
    #allowBrokenSymlinks: true # boolean. Alias: allowBrokenSymbolicLinks. Optional. Use when publishJUnitResults = true. Allow broken symbolic links. Default: true.
  # Code Coverage
    #codeCoverageToolOption: 'None' # 'None' | 'Cobertura' | 'JaCoCo'. Alias: codeCoverageTool. Code coverage tool. Default: None.
    #codeCoverageClassFilter: # string. Alias: classFilter. Optional. Use when codeCoverageTool != None. Class inclusion/exclusion filters. 
    #codeCoverageClassFilesDirectories: # string. Alias: classFilesDirectories. Optional. Use when codeCoverageTool = JaCoCo. Class files directories. 
    #codeCoverageSourceDirectories: # string. Alias: srcDirectories. Optional. Use when codeCoverageTool = JaCoCo. Source files directories. 
    #codeCoverageFailIfEmpty: false # boolean. Alias: failIfCoverageEmpty. Optional. Use when codeCoverageTool != None. Fail when code coverage results are missing. Default: false.
    #codeCoverageRestoreOriginalPomXml: false # boolean. Alias: restoreOriginalPomXml. Optional. Use when codeCoverageTool != None. Restore original pom.xml after task execution. Default: false.
  # Advanced
    javaHomeOption: 'JDKVersion' # 'JDKVersion' | 'Path'. Alias: javaHomeSelection. Required. Set JAVA_HOME by. Default: JDKVersion.
    #jdkVersionOption: 'default' # 'default' | '1.21' | '1.17' | '1.11' | '1.10' | '1.9' | '1.8' | '1.7' | '1.6'. Alias: jdkVersion. Optional. Use when javaHomeSelection = JDKVersion. JDK version. Default: default.
    #jdkDirectory: # string. Alias: jdkUserInputPath. Required when javaHomeSelection = Path. JDK path. 
    #jdkArchitectureOption: 'x64' # 'x86' | 'x64'. Alias: jdkArchitecture. Optional. Use when jdkVersion != default. JDK architecture. Default: x64.
    mavenVersionOption: 'Default' # 'Default' | 'Path'. Alias: mavenVersionSelection. Required. Maven version. Default: Default.
    #mavenDirectory: # string. Alias: mavenPath. Required when mavenVersionSelection = Path. Maven path. 
    #mavenSetM2Home: false # boolean. Optional. Use when mavenVersionSelection = Path. Set M2_HOME variable. Default: false.
    #mavenOptions: '-Xmx1024m' # string. Alias: mavenOpts. Set MAVEN_OPTS to. Default: -Xmx1024m.
    #mavenAuthenticateFeed: false # boolean. Alias: mavenFeedAuthenticate. Authenticate with Artifacts feeds. Default: false.
    #effectivePomSkip: false # boolean. Alias: skipEffectivePom. Skip generating effective POM while authenticating with Artifacts feeds. Default: false.
  # Code Analysis
    #sonarQubeRunAnalysis: false # boolean. Alias: sqAnalysisEnabled. Run SonarQube or SonarCloud analysis. Default: false.
    #isJacocoCoverageReportXML: false # boolean. Optional. Use when sqAnalysisEnabled = true && codeCoverageTool = JaCoCo. Use XML Jacoco reports for SonarQube analysis. Default: false.
    #sqMavenPluginVersionChoice: 'latest' # 'latest' | 'pom'. Required when sqAnalysisEnabled = true. SonarQube scanner for Maven version. Default: latest.
    #checkStyleRunAnalysis: false # boolean. Alias: checkstyleAnalysisEnabled. Run Checkstyle. Default: false.
    #pmdRunAnalysis: false # boolean. Alias: pmdAnalysisEnabled. Run PMD. Default: false.
    #findBugsRunAnalysis: false # boolean. Alias: findbugsAnalysisEnabled. Run FindBugs. Default: false.
    #spotBugsRunAnalysis: false # boolean. Alias: spotBugsAnalysisEnabled. Run SpotBugs analysis. Default: false.
    #spotBugsVersion: '4.5.3.0' # string. Alias: spotBugsMavenPluginVersion. Optional. Use when spotBugsAnalysisEnabled = true. Version number. Default: 4.5.3.0.
    #spotBugsGoal: 'spotbugs' # 'spotbugs' | 'check'. Optional. Use when spotBugsAnalysisEnabled = true. The goal for the spotbugs plugin. Default: spotbugs.
    #failWhenBugsFound: true # boolean. Alias: spotBugsFailWhenBugsFound | sbFailWhenBugsFound. Optional. Use when spotBugsAnalysisEnabled = true && spotBugsGoal = check. Fail when bugs are found with spotbugs:check. Default: true.
# Maven v4
# Build, test, and deploy with Apache Maven.
- task: Maven@4
  inputs:
    #azureSubscription: # string. Alias: ConnectedServiceName. Azure Resource Manager connection. 
    mavenPOMFile: 'pom.xml' # string. Required. Maven POM file. Default: pom.xml.
    #goals: 'package' # string. Goal(s). Default: package.
    #options: # string. Options. 
  # JUnit Test Results
    #publishJUnitResults: true # boolean. Publish to Azure Pipelines. Default: true.
    testResultsFiles: '**/surefire-reports/TEST-*.xml' # string. Required when publishJUnitResults = true. Test results files. Default: **/surefire-reports/TEST-*.xml.
    #testRunTitle: # string. Optional. Use when publishJUnitResults = true. Test run title. 
    #allowBrokenSymlinks: true # boolean. Alias: allowBrokenSymbolicLinks. Optional. Use when publishJUnitResults = true. Allow broken symbolic links. Default: true.
  # Code Coverage
    #codeCoverageToolOption: 'None' # 'None' | 'Cobertura' | 'JaCoCo'. Alias: codeCoverageTool. Code coverage tool. Default: None.
    #codeCoverageClassFilter: # string. Alias: classFilter. Optional. Use when codeCoverageTool != None. Class inclusion/exclusion filters. 
    #codeCoverageClassFilesDirectories: # string. Alias: classFilesDirectories. Optional. Use when codeCoverageTool = JaCoCo. Class files directories. 
    #codeCoverageSourceDirectories: # string. Alias: srcDirectories. Optional. Use when codeCoverageTool = JaCoCo. Source files directories. 
    #codeCoverageFailIfEmpty: false # boolean. Alias: failIfCoverageEmpty. Optional. Use when codeCoverageTool != None. Fail when code coverage results are missing. Default: false.
    #codeCoverageRestoreOriginalPomXml: false # boolean. Alias: restoreOriginalPomXml. Optional. Use when codeCoverageTool != None. Restore original pom.xml after task execution. Default: false.
  # Advanced
    javaHomeOption: 'JDKVersion' # 'JDKVersion' | 'Path'. Alias: javaHomeSelection. Required. Set JAVA_HOME by. Default: JDKVersion.
    #jdkVersionOption: 'default' # 'default' | '1.21' | '1.17' | '1.11' | '1.10' | '1.9' | '1.8' | '1.7' | '1.6'. Alias: jdkVersion. Optional. Use when javaHomeSelection = JDKVersion. JDK version. Default: default.
    #jdkDirectory: # string. Alias: jdkUserInputPath. Required when javaHomeSelection = Path. JDK path. 
    #jdkArchitectureOption: 'x64' # 'x86' | 'x64'. Alias: jdkArchitecture. Optional. Use when jdkVersion != default. JDK architecture. Default: x64.
    mavenVersionOption: 'Default' # 'Default' | 'Path'. Alias: mavenVersionSelection. Required. Maven version. Default: Default.
    #mavenDirectory: # string. Alias: mavenPath. Required when mavenVersionSelection = Path. Maven path. 
    #mavenSetM2Home: false # boolean. Optional. Use when mavenVersionSelection = Path. Set M2_HOME variable. Default: false.
    #mavenOptions: '-Xmx1024m' # string. Alias: mavenOpts. Set MAVEN_OPTS to. Default: -Xmx1024m.
    #mavenAuthenticateFeed: false # boolean. Alias: mavenFeedAuthenticate. Authenticate with Artifacts feeds. Default: false.
    #effectivePomSkip: false # boolean. Alias: skipEffectivePom. Skip generating effective POM while authenticating with Artifacts feeds. Default: false.
  # Code Analysis
    #sonarQubeRunAnalysis: false # boolean. Alias: sqAnalysisEnabled. Run SonarQube or SonarCloud analysis. Default: false.
    #isJacocoCoverageReportXML: false # boolean. Optional. Use when sqAnalysisEnabled = true && codeCoverageTool = JaCoCo. Use XML Jacoco reports for SonarQube analysis. Default: false.
    #sqMavenPluginVersionChoice: 'latest' # 'latest' | 'pom'. Required when sqAnalysisEnabled = true. SonarQube scanner for Maven version. Default: latest.
    #checkStyleRunAnalysis: false # boolean. Alias: checkstyleAnalysisEnabled. Run Checkstyle. Default: false.
    #pmdRunAnalysis: false # boolean. Alias: pmdAnalysisEnabled. Run PMD. Default: false.
    #findBugsRunAnalysis: false # boolean. Alias: findbugsAnalysisEnabled. Run FindBugs. Default: false.
    #spotBugsRunAnalysis: false # boolean. Alias: spotBugsAnalysisEnabled. Run SpotBugs analysis. Default: false.
    #spotBugsVersion: '4.5.3.0' # string. Alias: spotBugsMavenPluginVersion. Optional. Use when spotBugsAnalysisEnabled = true. Version number. Default: 4.5.3.0.
    #spotBugsGoal: 'spotbugs' # 'spotbugs' | 'check'. Optional. Use when spotBugsAnalysisEnabled = true. The goal for the spotbugs plugin. Default: spotbugs.
    #failWhenBugsFound: true # boolean. Alias: spotBugsFailWhenBugsFound | sbFailWhenBugsFound. Optional. Use when spotBugsAnalysisEnabled = true && spotBugsGoal = check. Fail when bugs are found with spotbugs:check. Default: true.
# Maven v4
# Build, test, and deploy with Apache Maven.
- task: Maven@4
  inputs:
    mavenPOMFile: 'pom.xml' # string. Required. Maven POM file. Default: pom.xml.
    #goals: 'package' # string. Goal(s). Default: package.
    #options: # string. Options. 
  # JUnit Test Results
    #publishJUnitResults: true # boolean. Publish to Azure Pipelines. Default: true.
    testResultsFiles: '**/surefire-reports/TEST-*.xml' # string. Required when publishJUnitResults = true. Test results files. Default: **/surefire-reports/TEST-*.xml.
    #testRunTitle: # string. Optional. Use when publishJUnitResults = true. Test run title. 
    #allowBrokenSymlinks: true # boolean. Alias: allowBrokenSymbolicLinks. Optional. Use when publishJUnitResults = true. Allow broken symbolic links. Default: true.
  # Code Coverage
    #codeCoverageToolOption: 'None' # 'None' | 'Cobertura' | 'JaCoCo'. Alias: codeCoverageTool. Code coverage tool. Default: None.
    #codeCoverageClassFilter: # string. Alias: classFilter. Optional. Use when codeCoverageTool != None. Class inclusion/exclusion filters. 
    #codeCoverageClassFilesDirectories: # string. Alias: classFilesDirectories. Optional. Use when codeCoverageTool = JaCoCo. Class files directories. 
    #codeCoverageSourceDirectories: # string. Alias: srcDirectories. Optional. Use when codeCoverageTool = JaCoCo. Source files directories. 
    #codeCoverageFailIfEmpty: false # boolean. Alias: failIfCoverageEmpty. Optional. Use when codeCoverageTool != None. Fail when code coverage results are missing. Default: false.
    #codeCoverageRestoreOriginalPomXml: false # boolean. Alias: restoreOriginalPomXml. Optional. Use when codeCoverageTool != None. Restore original pom.xml after task execution. Default: false.
  # Advanced
    javaHomeOption: 'JDKVersion' # 'JDKVersion' | 'Path'. Alias: javaHomeSelection. Required. Set JAVA_HOME by. Default: JDKVersion.
    #jdkVersionOption: 'default' # 'default' | '1.17' | '1.11' | '1.10' | '1.9' | '1.8' | '1.7' | '1.6'. Alias: jdkVersion. Optional. Use when javaHomeSelection = JDKVersion. JDK version. Default: default.
    #jdkDirectory: # string. Alias: jdkUserInputPath. Required when javaHomeSelection = Path. JDK path. 
    #jdkArchitectureOption: 'x64' # 'x86' | 'x64'. Alias: jdkArchitecture. Optional. Use when jdkVersion != default. JDK architecture. Default: x64.
    mavenVersionOption: 'Default' # 'Default' | 'Path'. Alias: mavenVersionSelection. Required. Maven version. Default: Default.
    #mavenDirectory: # string. Alias: mavenPath. Required when mavenVersionSelection = Path. Maven path. 
    #mavenSetM2Home: false # boolean. Optional. Use when mavenVersionSelection = Path. Set M2_HOME variable. Default: false.
    #mavenOptions: '-Xmx1024m' # string. Alias: mavenOpts. Set MAVEN_OPTS to. Default: -Xmx1024m.
    #mavenAuthenticateFeed: false # boolean. Alias: mavenFeedAuthenticate. Authenticate with Artifacts feeds. Default: false.
    #effectivePomSkip: false # boolean. Alias: skipEffectivePom. Skip generating effective POM while authenticating with Artifacts feeds. Default: false.
  # Code Analysis
    #sonarQubeRunAnalysis: false # boolean. Alias: sqAnalysisEnabled. Run SonarQube or SonarCloud analysis. Default: false.
    #isJacocoCoverageReportXML: false # boolean. Optional. Use when sqAnalysisEnabled = true && codeCoverageTool = JaCoCo. Use XML Jacoco reports for SonarQube analysis. Default: false.
    #sqMavenPluginVersionChoice: 'latest' # 'latest' | 'pom'. Required when sqAnalysisEnabled = true. SonarQube scanner for Maven version. Default: latest.
    #checkStyleRunAnalysis: false # boolean. Alias: checkstyleAnalysisEnabled. Run Checkstyle. Default: false.
    #pmdRunAnalysis: false # boolean. Alias: pmdAnalysisEnabled. Run PMD. Default: false.
    #findBugsRunAnalysis: false # boolean. Alias: findbugsAnalysisEnabled. Run FindBugs. Default: false.
    #spotBugsRunAnalysis: false # boolean. Alias: spotBugsAnalysisEnabled. Run SpotBugs analysis. Default: false.
    #spotBugsVersion: '4.5.3.0' # string. Alias: spotBugsMavenPluginVersion. Optional. Use when spotBugsAnalysisEnabled = true. Version number. Default: 4.5.3.0.
    #spotBugsGoal: 'spotbugs' # 'spotbugs' | 'check'. Optional. Use when spotBugsAnalysisEnabled = true. The goal for the spotbugs plugin. Default: spotbugs.
    #failWhenBugsFound: true # boolean. Alias: spotBugsFailWhenBugsFound | sbFailWhenBugsFound. Optional. Use when spotBugsAnalysisEnabled = true && spotBugsGoal = check. Fail when bugs are found with spotbugs:check. Default: true.
# Maven v4
# Build, test, and deploy with Apache Maven.
- task: Maven@4
  inputs:
    mavenPOMFile: 'pom.xml' # string. Required. Maven POM file. Default: pom.xml.
    #goals: 'package' # string. Goal(s). Default: package.
    #options: # string. Options. 
  # JUnit Test Results
    #publishJUnitResults: true # boolean. Publish to Azure Pipelines. Default: true.
    testResultsFiles: '**/surefire-reports/TEST-*.xml' # string. Required when publishJUnitResults = true. Test results files. Default: **/surefire-reports/TEST-*.xml.
    #testRunTitle: # string. Optional. Use when publishJUnitResults = true. Test run title. 
    #allowBrokenSymlinks: true # boolean. Alias: allowBrokenSymbolicLinks. Optional. Use when publishJUnitResults = true. Allow broken symbolic links. Default: true.
  # Code Coverage
    #codeCoverageToolOption: 'None' # 'None' | 'Cobertura' | 'JaCoCo'. Alias: codeCoverageTool. Code coverage tool. Default: None.
    #codeCoverageClassFilter: # string. Alias: classFilter. Optional. Use when codeCoverageTool != None. Class inclusion/exclusion filters. 
    #codeCoverageClassFilesDirectories: # string. Alias: classFilesDirectories. Optional. Use when codeCoverageTool = JaCoCo. Class files directories. 
    #codeCoverageSourceDirectories: # string. Alias: srcDirectories. Optional. Use when codeCoverageTool = JaCoCo. Source files directories. 
    #codeCoverageFailIfEmpty: false # boolean. Alias: failIfCoverageEmpty. Optional. Use when codeCoverageTool != None. Fail when code coverage results are missing. Default: false.
    #codeCoverageRestoreOriginalPomXml: false # boolean. Alias: restoreOriginalPomXml. Optional. Use when codeCoverageTool != None. Restore original pom.xml after task execution. Default: false.
  # Advanced
    javaHomeOption: 'JDKVersion' # 'JDKVersion' | 'Path'. Alias: javaHomeSelection. Required. Set JAVA_HOME by. Default: JDKVersion.
    #jdkVersionOption: 'default' # 'default' | '1.17' | '1.11' | '1.10' | '1.9' | '1.8' | '1.7' | '1.6'. Alias: jdkVersion. Optional. Use when javaHomeSelection = JDKVersion. JDK version. Default: default.
    #jdkDirectory: # string. Alias: jdkUserInputPath. Required when javaHomeSelection = Path. JDK path. 
    #jdkArchitectureOption: 'x64' # 'x86' | 'x64'. Alias: jdkArchitecture. Optional. Use when jdkVersion != default. JDK architecture. Default: x64.
    mavenVersionOption: 'Default' # 'Default' | 'Path'. Alias: mavenVersionSelection. Required. Maven version. Default: Default.
    #mavenDirectory: # string. Alias: mavenPath. Required when mavenVersionSelection = Path. Maven path. 
    #mavenSetM2Home: false # boolean. Optional. Use when mavenVersionSelection = Path. Set M2_HOME variable. Default: false.
    #mavenOptions: '-Xmx1024m' # string. Alias: mavenOpts. Set MAVEN_OPTS to. Default: -Xmx1024m.
    #mavenAuthenticateFeed: false # boolean. Alias: mavenFeedAuthenticate. Authenticate with Artifacts feeds. Default: false.
    #effectivePomSkip: false # boolean. Alias: skipEffectivePom. Skip generating effective POM while authenticating with Artifacts feeds. Default: false.
  # Code Analysis
    #sonarQubeRunAnalysis: false # boolean. Alias: sqAnalysisEnabled. Run SonarQube or SonarCloud analysis. Default: false.
    #isJacocoCoverageReportXML: false # boolean. Optional. Use when sqAnalysisEnabled = true && codeCoverageTool = JaCoCo. Use XML Jacoco reports for SonarQube analysis. Default: false.
    #sqMavenPluginVersionChoice: 'latest' # 'latest' | 'pom'. Required when sqAnalysisEnabled = true. SonarQube scanner for Maven version. Default: latest.
    #checkStyleRunAnalysis: false # boolean. Alias: checkstyleAnalysisEnabled. Run Checkstyle. Default: false.
    #pmdRunAnalysis: false # boolean. Alias: pmdAnalysisEnabled. Run PMD. Default: false.
    #findBugsRunAnalysis: false # boolean. Alias: findbugsAnalysisEnabled. Run FindBugs. Default: false.
    #spotBugsRunAnalysis: false # boolean. Alias: spotBugsAnalysisEnabled. Run SpotBugs analysis. Default: false.
    #spotBugsVersion: '4.5.3.0' # string. Alias: spotBugsMavenPluginVersion. Optional. Use when spotBugsAnalysisEnabled = true. Version number. Default: 4.5.3.0.
    #spotBugsGoal: 'spotbugs' # 'spotbugs' | 'check'. Optional. Use when spotBugsAnalysisEnabled = true. The goal for the spotbugs plugin. Default: spotbugs.
    #failWhenBugsFound: true # boolean. Alias: spotBugsFailWhenBugsFound | sbFailWhenBugsFound. Optional. Use when spotBugsAnalysisEnabled = true && spotBugsGoal = check. Fail when bugs are found with spotbugs:check. Default: true.
Inputs
azureSubscription-Azure Resource Manager connectionInput alias:ConnectedServiceName.string.
azureSubscription
ConnectedServiceName
string
Specify an Azure Resource Manager service connection configured with workload identity federation to useAzurePipelinesCredentialin integration tests. For more information, seeUse AzurePipelinesCredential in integration tests.
Note
This input only supports ARM service connections that are configured to use workload identity federation.
mavenPOMFile-Maven POM filestring. Required. Default value:pom.xml.
mavenPOMFile
string
pom.xml
Specifies the relative path from the repository root to the Maven POM file. SeeIntroduction to the POMfor more information.
goals-Goal(s)string. Default value:package.
goals
string
package
(Optional) Set topackageto compile your code and package it into a .war file. If you leave this argument blank, the build will fail. SeeIntroduction to the Maven build lifecyclefor more information.
package
options-Optionsstring.
options
string
(Optional) Specifies any Maven command-line options you want to use.
publishJUnitResults-Publish to Azure Pipelinesboolean. Default value:true.
publishJUnitResults
boolean
true
Specifies the option to publish the JUnit test results produced by the Maven build to Azure Pipelines. Each test results file matchingTest Results Fileswill be published as a test run in Azure Pipelines.
Test Results Files
testResultsFiles-Test results filesstring. Required whenpublishJUnitResults = true. Default value:**/surefire-reports/TEST-*.xml.
testResultsFiles
string
publishJUnitResults = true
**/surefire-reports/TEST-*.xml
Specifies the path and pattern of test results files to publish.Wildcards can be used.More information aboutfile matching patterns.For example,**/TEST-*.xmlfor all XML files whose name starts withTEST-. If no root path is specified, files are matched beneath the default working directory, the value of which is available in the variable$(System.DefaultWorkingDirectory). For example, a value of**/TEST-*.xmlwill actually result in matching files from$(System.DefaultWorkingDirectory)/**/TEST-*.xml.
**/TEST-*.xml
TEST-
$(System.DefaultWorkingDirectory)
**/TEST-*.xml
$(System.DefaultWorkingDirectory)/**/TEST-*.xml
testRunTitle-Test run titlestring. Optional. Use whenpublishJUnitResults = true.
testRunTitle
string
publishJUnitResults = true
Specifies a name for the test run.
allowBrokenSymlinks-Allow broken symbolic linksInput alias:allowBrokenSymbolicLinks.boolean. Optional. Use whenpublishJUnitResults = true. Default value:true.
allowBrokenSymlinks
allowBrokenSymbolicLinks
boolean
publishJUnitResults = true
true
If set tofalse, fails the build when the task finds a broken symbolic link while publishing tests result.
false
codeCoverageToolOption-Code coverage toolInput alias:codeCoverageTool.string. Allowed values:None,Cobertura,JaCoCo. Default value:None.
codeCoverageToolOption
codeCoverageTool
string
None
Cobertura
JaCoCo
None
Specifies the code coverage tool. Enabling code coverage inserts the clean goal into the Maven goals list when Maven runs.
codeCoverageClassFilter-Class inclusion/exclusion filtersInput alias:classFilter.string. Optional. Use whencodeCoverageTool != None.
codeCoverageClassFilter
classFilter
string
codeCoverageTool != None
Specifies a comma-separated list of filters to include or exclude classes from collecting code coverage. For example,+:com.*,+:org.*,-:my.app*.*.
+:com.*,+:org.*,-:my.app*.*
codeCoverageClassFilesDirectories-Class files directoriesInput alias:classFilesDirectories.string. Optional. Use whencodeCoverageTool = JaCoCo.
codeCoverageClassFilesDirectories
classFilesDirectories
string
codeCoverageTool = JaCoCo
This field is required for a multi-module project.Specifies a comma-separated list of relative paths from the Maven POM file to directories containing class files and archive files (JAR, WAR, etc.). Code coverage is reported for class files in these directories. For example,target/classes,target/testClasses.
target/classes,target/testClasses
codeCoverageSourceDirectories-Source files directoriesInput alias:srcDirectories.string. Optional. Use whencodeCoverageTool = JaCoCo.
codeCoverageSourceDirectories
srcDirectories
string
codeCoverageTool = JaCoCo
This field is required for a multi-module project.Specifies a comma-separated list of relative paths from the Maven POM file to source code directories. Code coverage reports use these to highlight source code. For example,src/java,src/Test.
src/java,src/Test
codeCoverageFailIfEmpty-Fail when code coverage results are missingInput alias:failIfCoverageEmpty.boolean. Optional. Use whencodeCoverageTool != None. Default value:false.
codeCoverageFailIfEmpty
failIfCoverageEmpty
boolean
codeCoverageTool != None
false
Fails the build if code coverage did not produce any results to publish.
codeCoverageRestoreOriginalPomXml-Restore original pom.xml after task executionInput alias:restoreOriginalPomXml.boolean. Optional. Use whencodeCoverageTool != None. Default value:false.
codeCoverageRestoreOriginalPomXml
restoreOriginalPomXml
boolean
codeCoverageTool != None
false
Code coverage modifiespom.xmlto produce results. Use this option if you need to keep the originalpom.xml.
pom.xml
pom.xml
javaHomeOption-Set JAVA_HOME byInput alias:javaHomeSelection.string. Required. Allowed values:JDKVersion(JDK Version),Path. Default value:JDKVersion.
javaHomeOption
javaHomeSelection
string
JDKVersion
Path
JDKVersion
SetsJAVA_HOMEeither by selecting a JDK version that will be discovered during builds or by manually entering a JDK path. If you already have Java installed on the agent machine, you can specify it by setting upjavaHomeOptionaspathandjdkDirectoryas a path to the JDK installed directory.
JAVA_HOME
javaHomeOption
path
jdkDirectory
jdkVersionOption-JDK versionInput alias:jdkVersion.string. Optional. Use whenjavaHomeSelection = JDKVersion. Allowed values:default,1.21(JDK 21),1.17(JDK 17),1.11(JDK 11),1.10(JDK 10 (out of support)),1.9(JDK 9 (out of support)),1.8(JDK 8),1.7(JDK 7),1.6(JDK 6 (out of support)). Default value:default.
jdkVersionOption
jdkVersion
string
javaHomeSelection = JDKVersion
default
1.21
1.17
1.11
1.10
1.9
1.8
1.7
1.6
default
Attempts to discover the path to the selected JDK version and setsJAVA_HOMEaccordingly.Note:If running on an agent that is not hosted by Microsoft, and the requested Java version is not the one indicated by theJAVA_HOMEvariable set on the agent machine, the task will rely on the variableJAVA_HOME_{version}_{arch}(for example:JAVA_HOME_8_X64) to locate the necessary JDK. Ensure this variable is set on self-hosted agents for any version and architecture of the JDK that may be requested by this parameter and/or byjdkArchitecture.
JAVA_HOME
JAVA_HOME
JAVA_HOME_{version}_{arch}
JAVA_HOME_8_X64
jdkArchitecture
jdkVersionOption-JDK versionInput alias:jdkVersion.string. Optional. Use whenjavaHomeSelection = JDKVersion. Allowed values:default,1.17(JDK 17),1.11(JDK 11),1.10(JDK 10 (out of support)),1.9(JDK 9 (out of support)),1.8(JDK 8),1.7(JDK 7),1.6(JDK 6 (out of support)). Default value:default.
jdkVersionOption
jdkVersion
string
javaHomeSelection = JDKVersion
default
1.17
1.11
1.10
1.9
1.8
1.7
1.6
default
Attempts to discover the path to the selected JDK version and setsJAVA_HOMEaccordingly.Note:If running on an agent that is not hosted by Microsoft, and the requested Java version is not the one indicated by theJAVA_HOMEvariable set on the agent machine, the task will rely on the variableJAVA_HOME_{version}_{arch}(for example:JAVA_HOME_8_X64) to locate the necessary JDK. Ensure this variable is set on self-hosted agents for any version and architecture of the JDK that may be requested by this parameter and/or byjdkArchitecture.
JAVA_HOME
JAVA_HOME
JAVA_HOME_{version}_{arch}
JAVA_HOME_8_X64
jdkArchitecture
jdkDirectory-JDK pathInput alias:jdkUserInputPath.string. Required whenjavaHomeSelection = Path.
jdkDirectory
jdkUserInputPath
string
javaHomeSelection = Path
SetsJAVA_HOMEto the given path.
JAVA_HOME
jdkArchitectureOption-JDK architectureInput alias:jdkArchitecture.string. Optional. Use whenjdkVersion != default. Allowed values:x86,x64. Default value:x64.
jdkArchitectureOption
jdkArchitecture
string
jdkVersion != default
x86
x64
x64
Supplies the architecture (x86,x64) of the JDK.
x86
x64
mavenVersionOption-Maven versionInput alias:mavenVersionSelection.string. Required. Allowed values:Default,Path(Custom Path). Default value:Default.
mavenVersionOption
mavenVersionSelection
string
Default
Path
Default
Specifies either the default Maven version or the version in the specified custom path.
mavenDirectory-Maven pathInput alias:mavenPath.string. Required whenmavenVersionSelection = Path.
mavenDirectory
mavenPath
string
mavenVersionSelection = Path
Supplies the custom path to the Maven installation (for example:/usr/share/maven).
/usr/share/maven
mavenSetM2Home-Set M2_HOME variableboolean. Optional. Use whenmavenVersionSelection = Path. Default value:false.
mavenSetM2Home
boolean
mavenVersionSelection = Path
false
Sets theM2_HOMEvariable to a custom Maven installation path.
M2_HOME
mavenOptions-Set MAVEN_OPTS toInput alias:mavenOpts.string. Default value:-Xmx1024m.
mavenOptions
mavenOpts
string
-Xmx1024m
Sets theMAVEN_OPTSenvironment variable, which is used to send command-line arguments to start the JVM. The-Xmxflag specifies the maximum memory available to the JVM.
MAVEN_OPTS
-Xmx
mavenAuthenticateFeed-Authenticate with Artifacts feedsInput alias:mavenFeedAuthenticate.boolean. Default value:false.
mavenAuthenticateFeed
mavenFeedAuthenticate
boolean
false
Automatically authenticates with Azure Artifacts feeds. If Artifacts feeds are not in use, deselect this option for faster builds.
effectivePomSkip-Skip generating effective POM while authenticating with Artifacts feedsInput alias:skipEffectivePom.boolean. Default value:false.
effectivePomSkip
skipEffectivePom
boolean
false
Authenticates with Artifacts feeds using the POM only.
sonarQubeRunAnalysis-Run SonarQube or SonarCloud analysisInput alias:sqAnalysisEnabled.boolean. Default value:false.
sonarQubeRunAnalysis
sqAnalysisEnabled
boolean
false
This option has changed from using version 1 of theMaventask to using theSonarQubeandSonarCloudmarketplace extensions.Enable this option to runSonarQube or SonarCloud analysisafter executing goals in theGoalsfield. Theinstallorpackagegoal should run first. Before this Maven task, you must also add aPrepare Analysis Configurationtask from one of the extensions to the build pipeline.
isJacocoCoverageReportXML-Use XML Jacoco reports for SonarQube analysisboolean. Optional. Use whensqAnalysisEnabled = true && codeCoverageTool = JaCoCo. Default value:false.
isJacocoCoverageReportXML
boolean
sqAnalysisEnabled = true && codeCoverageTool = JaCoCo
false
Uses XML Jacoco reports for SonarQube analysis. Learn more abouttest reports.
sqMavenPluginVersionChoice-SonarQube scanner for Maven versionstring. Required whensqAnalysisEnabled = true. Allowed values:latest(Use latest release),pom(Use version declared in your pom.xml). Default value:latest.
sqMavenPluginVersionChoice
string
sqAnalysisEnabled = true
latest
pom
latest
Specifies the SonarQube Maven plugin version to use. You can use the latest version or rely on the version in yourpom.xml.
pom.xml
checkStyleRunAnalysis-Run CheckstyleInput alias:checkstyleAnalysisEnabled.boolean. Default value:false.
checkStyleRunAnalysis
checkstyleAnalysisEnabled
boolean
false
Runs the Checkstyle tool with the default Sun checks. If no Checkstyle configuration is specified in thepom.xmlfile, default Sun checks are used. Results are uploaded as build artifacts.
pom.xml
pmdRunAnalysis-Run PMDInput alias:pmdAnalysisEnabled.boolean. Default value:false.
pmdRunAnalysis
pmdAnalysisEnabled
boolean
false
Uses the PMD static analysis tool to look for bugs in the code. Results are uploaded as build artifacts.
findBugsRunAnalysis-Run FindBugsInput alias:findbugsAnalysisEnabled.boolean. Default value:false.
findBugsRunAnalysis
findbugsAnalysisEnabled
boolean
false
Uses the FindBugs static analysis tool to look for bugs in the code. Results are uploaded as build artifacts.
spotBugsRunAnalysis-Run SpotBugs analysisInput alias:spotBugsAnalysisEnabled.boolean. Default value:false.
spotBugsRunAnalysis
spotBugsAnalysisEnabled
boolean
false
Enable this option to run the SpotBugs code analysis plugin. More information about theSpotBugs Maven plugin.
spotBugsVersion-Version numberInput alias:spotBugsMavenPluginVersion.string. Optional. Use whenspotBugsAnalysisEnabled = true. Default value:4.5.3.0.
spotBugsVersion
spotBugsMavenPluginVersion
string
spotBugsAnalysisEnabled = true
4.5.3.0
Learn aboutthe available versions of SpotBugs.
spotBugsGoal-The goal for the spotbugs pluginstring. Optional. Use whenspotBugsAnalysisEnabled = true. Allowed values:spotbugs("spotbugs" - Creates a report on found bugs),check("check" - Pipeline fails if bugs were detected). Default value:spotbugs.
spotBugsGoal
string
spotBugsAnalysisEnabled = true
spotbugs
check
spotbugs
Specifies the goal of the plugin. Learn more aboutSpotBugs goals.
failWhenBugsFound-Fail when bugs are found with spotbugs:checkInput alias:spotBugsFailWhenBugsFound | sbFailWhenBugsFound.boolean. Optional. Use whenspotBugsAnalysisEnabled = true && spotBugsGoal = check. Default value:true.
failWhenBugsFound
spotBugsFailWhenBugsFound | sbFailWhenBugsFound
boolean
spotBugsAnalysisEnabled = true && spotBugsGoal = check
true
Fails when bugs are found ifCheck Goalis specified. Learn more aboutSpotBug parameter details.
Task control options
All tasks have control options in addition to their task inputs. For more information, seeControl options and common task properties.
Output variables
None.
Remarks
Configuration of the SonarQube analysis was moved to theSonarQubeorSonarCloudextensions in the taskPrepare Analysis Configuration.
Important
When using the-qoption in yourMAVEN_OPTS, an effective pom won't be generated correctly, and Azure Artifacts feeds may not be able to be authenticated.
-q
MAVEN_OPTS
Important
If the JDK version you want to use is already installed on your agent, setjavaHomeOptiontopathand set thejdkDirectoryto the path of the JDK version. These options set theJAVA_HOME_11_X64environment variable, which is required by the Maven task. This environment variable is set automatically if you are using the Java Tool installer task.
javaHomeOption
path
jdkDirectory
JAVA_HOME_11_X64
Use AzurePipelinesCredential in integration tests
The Azure Identity libraries for .NET, C++, Go, Java, JavaScript, and Pythonprovide support for workload identity federation, so code executed from theAzureCLI@2andAzurePowerShell@5tasks can authenticate with Microsoft Entra ID (for example, to access Azure) using theAzurePipelinesCredentialclass.
AzurePipelinesCredential
Many customers are using Azure SDK client libraries in integration tests invoked from other tasks. TheDotNetCoreCLI@2,Maven@4andVSTest@3tasks can access Azure resources using theAzurePipelinesCredentialclass.
AzurePipelinesCredential
You can set theconnectedServiceNameproperty to an Azure service connection configured with workload identity federation. TheAzurePipelinesCredentialrequiresSYSTEM_ACCESSTOKENto be set.
connectedServiceName
AzurePipelinesCredential
The following example shows theconnectedServiceNameinput on theDotNetCoreCLI@2task.VSTest@3andMaven@4usage is similar.
connectedServiceName
DotNetCoreCLI@2
VSTest@3
Maven@4
- task: DotNetCoreCLI@2
  inputs:
    command: 'run'
    connectedServiceName: <Azure service connection configured with workload identity federation>
  env:
    SYSTEM_ACCESSTOKEN: $(System.AccessToken)
- task: DotNetCoreCLI@2
  inputs:
    command: 'run'
    connectedServiceName: <Azure service connection configured with workload identity federation>
  env:
    SYSTEM_ACCESSTOKEN: $(System.AccessToken)
For more information onAzurePipelinesCredential, seeImprove security posture in Azure service connections with AzurePipelinesCredential.
AzurePipelinesCredential
FAQ
I have a multi-module project, but my build is failing. What should I check?
Make sure you have specified#codeCoverageClassFilesDirectoriesand#codeCoverageSourceDirectoriesas a task input. These two parameters are optional for a single module project but are required for multi-module projects.
#codeCoverageClassFilesDirectories
#codeCoverageSourceDirectories
Examples
Build and Deploy your Java application to an Azure Web App.
Requirements
See also
Maven authenticate
Publish Maven artifacts with Azure Pipelines
Java Tool Installer
Build Java apps
Feedback
Was this page helpful?
Additional resources