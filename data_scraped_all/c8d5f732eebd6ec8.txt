Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Microsoft.Network virtualNetworks
Article
2024-12-09
2 contributors
In this article
Latest
2024-05-01
2024-03-01
2024-01-01
2023-11-01
2023-09-01
2023-06-01
2023-05-01
2023-04-01
2023-02-01
2022-11-01
2022-09-01
2022-07-01
2022-05-01
2022-01-01
2021-08-01
2021-05-01
2021-03-01
2021-02-01
2020-11-01
2020-08-01
2020-07-01
2020-06-01
2020-05-01
2020-04-01
2020-03-01
2019-12-01
2019-11-01
2019-09-01
2019-08-01
2019-07-01
2019-06-01
2019-04-01
2019-02-01
2018-12-01
2018-11-01
2018-10-01
2018-08-01
2018-07-01
2018-06-01
2018-04-01
2018-02-01
2018-01-01
2017-11-01
2017-10-01
2017-09-01
2017-08-01
2017-06-01
2017-03-30
2017-03-01
2016-12-01
2016-09-01
2016-06-01
2016-03-30
2015-06-15
2015-05-01-preview
Remarks
For guidance on creating virtual networks and subnets, seeCreate virtual network resources by using Bicep.
Bicep resource definition
The virtualNetworks resource type can be deployed with operations that target:
Resource groups- Seeresource group deployment commands
For a list of changed properties in each API version, seechange log.
Resource format
To create a Microsoft.Network/virtualNetworks resource, add the following Bicep to your template.
resource symbolicname 'Microsoft.Network/virtualNetworks@2024-05-01' = {
  extendedLocation: {
    name: 'string'
    type: 'string'
  }
  location: 'string'
  name: 'string'
  properties: {
    addressSpace: {
      addressPrefixes: [
        'string'
      ]
      ipamPoolPrefixAllocations: [
        {
          numberOfIpAddresses: 'string'
          pool: {
            id: 'string'
          }
        }
      ]
    }
    bgpCommunities: {
      virtualNetworkCommunity: 'string'
    }
    ddosProtectionPlan: {
      id: 'string'
    }
    dhcpOptions: {
      dnsServers: [
        'string'
      ]
    }
    enableDdosProtection: bool
    enableVmProtection: bool
    encryption: {
      enabled: bool
      enforcement: 'string'
    }
    flowTimeoutInMinutes: int
    ipAllocations: [
      {
        id: 'string'
      }
    ]
    privateEndpointVNetPolicies: 'string'
    subnets: [
      {
        id: 'string'
        name: 'string'
        properties: {
          addressPrefix: 'string'
          addressPrefixes: [
            'string'
          ]
          applicationGatewayIPConfigurations: [
            {
              id: 'string'
              name: 'string'
              properties: {
                subnet: {
                  id: 'string'
                }
              }
            }
          ]
          defaultOutboundAccess: bool
          delegations: [
            {
              id: 'string'
              name: 'string'
              properties: {
                serviceName: 'string'
              }
              type: 'string'
            }
          ]
          ipAllocations: [
            {
              id: 'string'
            }
          ]
          ipamPoolPrefixAllocations: [
            {
              numberOfIpAddresses: 'string'
              pool: {
                id: 'string'
              }
            }
          ]
          natGateway: {
            id: 'string'
          }
          networkSecurityGroup: {
            id: 'string'
            location: 'string'
            properties: {
              flushConnection: bool
              securityRules: [
                {
                  id: 'string'
                  name: 'string'
                  properties: {
                    access: 'string'
                    description: 'string'
                    destinationAddressPrefix: 'string'
                    destinationAddressPrefixes: [
                      'string'
                    ]
                    destinationApplicationSecurityGroups: [
                      {
                        id: 'string'
                        location: 'string'
                        properties: {}
                        tags: {
                          {customized property}: 'string'
                        }
                      }
                    ]
                    destinationPortRange: 'string'
                    destinationPortRanges: [
                      'string'
                    ]
                    direction: 'string'
                    priority: int
                    protocol: 'string'
                    sourceAddressPrefix: 'string'
                    sourceAddressPrefixes: [
                      'string'
                    ]
                    sourceApplicationSecurityGroups: [
                      {
                        id: 'string'
                        location: 'string'
                        properties: {}
                        tags: {
                          {customized property}: 'string'
                        }
                      }
                    ]
                    sourcePortRange: 'string'
                    sourcePortRanges: [
                      'string'
                    ]
                  }
                  type: 'string'
                }
              ]
            }
            tags: {
              {customized property}: 'string'
            }
          }
          privateEndpointNetworkPolicies: 'string'
          privateLinkServiceNetworkPolicies: 'string'
          routeTable: {
            id: 'string'
            location: 'string'
            properties: {
              disableBgpRoutePropagation: bool
              routes: [
                {
                  id: 'string'
                  name: 'string'
                  properties: {
                    addressPrefix: 'string'
                    nextHopIpAddress: 'string'
                    nextHopType: 'string'
                  }
                  type: 'string'
                }
              ]
            }
            tags: {
              {customized property}: 'string'
            }
          }
          serviceEndpointPolicies: [
            {
              id: 'string'
              location: 'string'
              properties: {
                contextualServiceEndpointPolicies: [
                  'string'
                ]
                serviceAlias: 'string'
                serviceEndpointPolicyDefinitions: [
                  {
                    id: 'string'
                    name: 'string'
                    properties: {
                      description: 'string'
                      service: 'string'
                      serviceResources: [
                        'string'
                      ]
                    }
                    type: 'string'
                  }
                ]
              }
              tags: {
                {customized property}: 'string'
              }
            }
          ]
          serviceEndpoints: [
            {
              locations: [
                'string'
              ]
              networkIdentifier: {
                id: 'string'
              }
              service: 'string'
            }
          ]
          sharingScope: 'string'
        }
        type: 'string'
      }
    ]
    virtualNetworkPeerings: [
      {
        id: 'string'
        name: 'string'
        properties: {
          allowForwardedTraffic: bool
          allowGatewayTransit: bool
          allowVirtualNetworkAccess: bool
          doNotVerifyRemoteGateways: bool
          enableOnlyIPv6Peering: bool
          localAddressSpace: {
            addressPrefixes: [
              'string'
            ]
            ipamPoolPrefixAllocations: [
              {
                numberOfIpAddresses: 'string'
                pool: {
                  id: 'string'
                }
              }
            ]
          }
          localSubnetNames: [
            'string'
          ]
          localVirtualNetworkAddressSpace: {
            addressPrefixes: [
              'string'
            ]
            ipamPoolPrefixAllocations: [
              {
                numberOfIpAddresses: 'string'
                pool: {
                  id: 'string'
                }
              }
            ]
          }
          peerCompleteVnets: bool
          peeringState: 'string'
          peeringSyncLevel: 'string'
          remoteAddressSpace: {
            addressPrefixes: [
              'string'
            ]
            ipamPoolPrefixAllocations: [
              {
                numberOfIpAddresses: 'string'
                pool: {
                  id: 'string'
                }
              }
            ]
          }
          remoteBgpCommunities: {
            virtualNetworkCommunity: 'string'
          }
          remoteSubnetNames: [
            'string'
          ]
          remoteVirtualNetwork: {
            id: 'string'
          }
          remoteVirtualNetworkAddressSpace: {
            addressPrefixes: [
              'string'
            ]
            ipamPoolPrefixAllocations: [
              {
                numberOfIpAddresses: 'string'
                pool: {
                  id: 'string'
                }
              }
            ]
          }
          useRemoteGateways: bool
        }
        type: 'string'
      }
    ]
  }
  tags: {
    {customized property}: 'string'
  }
}
resource symbolicname 'Microsoft.Network/virtualNetworks@2024-05-01' = {
  extendedLocation: {
    name: 'string'
    type: 'string'
  }
  location: 'string'
  name: 'string'
  properties: {
    addressSpace: {
      addressPrefixes: [
        'string'
      ]
      ipamPoolPrefixAllocations: [
        {
          numberOfIpAddresses: 'string'
          pool: {
            id: 'string'
          }
        }
      ]
    }
    bgpCommunities: {
      virtualNetworkCommunity: 'string'
    }
    ddosProtectionPlan: {
      id: 'string'
    }
    dhcpOptions: {
      dnsServers: [
        'string'
      ]
    }
    enableDdosProtection: bool
    enableVmProtection: bool
    encryption: {
      enabled: bool
      enforcement: 'string'
    }
    flowTimeoutInMinutes: int
    ipAllocations: [
      {
        id: 'string'
      }
    ]
    privateEndpointVNetPolicies: 'string'
    subnets: [
      {
        id: 'string'
        name: 'string'
        properties: {
          addressPrefix: 'string'
          addressPrefixes: [
            'string'
          ]
          applicationGatewayIPConfigurations: [
            {
              id: 'string'
              name: 'string'
              properties: {
                subnet: {
                  id: 'string'
                }
              }
            }
          ]
          defaultOutboundAccess: bool
          delegations: [
            {
              id: 'string'
              name: 'string'
              properties: {
                serviceName: 'string'
              }
              type: 'string'
            }
          ]
          ipAllocations: [
            {
              id: 'string'
            }
          ]
          ipamPoolPrefixAllocations: [
            {
              numberOfIpAddresses: 'string'
              pool: {
                id: 'string'
              }
            }
          ]
          natGateway: {
            id: 'string'
          }
          networkSecurityGroup: {
            id: 'string'
            location: 'string'
            properties: {
              flushConnection: bool
              securityRules: [
                {
                  id: 'string'
                  name: 'string'
                  properties: {
                    access: 'string'
                    description: 'string'
                    destinationAddressPrefix: 'string'
                    destinationAddressPrefixes: [
                      'string'
                    ]
                    destinationApplicationSecurityGroups: [
                      {
                        id: 'string'
                        location: 'string'
                        properties: {}
                        tags: {
                          {customized property}: 'string'
                        }
                      }
                    ]
                    destinationPortRange: 'string'
                    destinationPortRanges: [
                      'string'
                    ]
                    direction: 'string'
                    priority: int
                    protocol: 'string'
                    sourceAddressPrefix: 'string'
                    sourceAddressPrefixes: [
                      'string'
                    ]
                    sourceApplicationSecurityGroups: [
                      {
                        id: 'string'
                        location: 'string'
                        properties: {}
                        tags: {
                          {customized property}: 'string'
                        }
                      }
                    ]
                    sourcePortRange: 'string'
                    sourcePortRanges: [
                      'string'
                    ]
                  }
                  type: 'string'
                }
              ]
            }
            tags: {
              {customized property}: 'string'
            }
          }
          privateEndpointNetworkPolicies: 'string'
          privateLinkServiceNetworkPolicies: 'string'
          routeTable: {
            id: 'string'
            location: 'string'
            properties: {
              disableBgpRoutePropagation: bool
              routes: [
                {
                  id: 'string'
                  name: 'string'
                  properties: {
                    addressPrefix: 'string'
                    nextHopIpAddress: 'string'
                    nextHopType: 'string'
                  }
                  type: 'string'
                }
              ]
            }
            tags: {
              {customized property}: 'string'
            }
          }
          serviceEndpointPolicies: [
            {
              id: 'string'
              location: 'string'
              properties: {
                contextualServiceEndpointPolicies: [
                  'string'
                ]
                serviceAlias: 'string'
                serviceEndpointPolicyDefinitions: [
                  {
                    id: 'string'
                    name: 'string'
                    properties: {
                      description: 'string'
                      service: 'string'
                      serviceResources: [
                        'string'
                      ]
                    }
                    type: 'string'
                  }
                ]
              }
              tags: {
                {customized property}: 'string'
              }
            }
          ]
          serviceEndpoints: [
            {
              locations: [
                'string'
              ]
              networkIdentifier: {
                id: 'string'
              }
              service: 'string'
            }
          ]
          sharingScope: 'string'
        }
        type: 'string'
      }
    ]
    virtualNetworkPeerings: [
      {
        id: 'string'
        name: 'string'
        properties: {
          allowForwardedTraffic: bool
          allowGatewayTransit: bool
          allowVirtualNetworkAccess: bool
          doNotVerifyRemoteGateways: bool
          enableOnlyIPv6Peering: bool
          localAddressSpace: {
            addressPrefixes: [
              'string'
            ]
            ipamPoolPrefixAllocations: [
              {
                numberOfIpAddresses: 'string'
                pool: {
                  id: 'string'
                }
              }
            ]
          }
          localSubnetNames: [
            'string'
          ]
          localVirtualNetworkAddressSpace: {
            addressPrefixes: [
              'string'
            ]
            ipamPoolPrefixAllocations: [
              {
                numberOfIpAddresses: 'string'
                pool: {
                  id: 'string'
                }
              }
            ]
          }
          peerCompleteVnets: bool
          peeringState: 'string'
          peeringSyncLevel: 'string'
          remoteAddressSpace: {
            addressPrefixes: [
              'string'
            ]
            ipamPoolPrefixAllocations: [
              {
                numberOfIpAddresses: 'string'
                pool: {
                  id: 'string'
                }
              }
            ]
          }
          remoteBgpCommunities: {
            virtualNetworkCommunity: 'string'
          }
          remoteSubnetNames: [
            'string'
          ]
          remoteVirtualNetwork: {
            id: 'string'
          }
          remoteVirtualNetworkAddressSpace: {
            addressPrefixes: [
              'string'
            ]
            ipamPoolPrefixAllocations: [
              {
                numberOfIpAddresses: 'string'
                pool: {
                  id: 'string'
                }
              }
            ]
          }
          useRemoteGateways: bool
        }
        type: 'string'
      }
    ]
  }
  tags: {
    {customized property}: 'string'
  }
}
Property Values
AddressSpace
ApplicationGatewayIPConfiguration
ApplicationGatewayIPConfigurationPropertiesFormat
ApplicationSecurityGroup
ApplicationSecurityGroupPropertiesFormat
Delegation
DhcpOptions
ExtendedLocation
IpamPoolPrefixAllocation
IpamPoolPrefixAllocationPool
Microsoft.Network/virtualNetworks
NetworkSecurityGroup
NetworkSecurityGroupPropertiesFormat
ResourceTags
ResourceTags
ResourceTags
ResourceTags
ResourceTags
Route
RoutePropertiesFormat
RouteTable
RouteTablePropertiesFormat
SecurityRule
SecurityRulePropertiesFormat
ServiceDelegationPropertiesFormat
ServiceEndpointPolicy
ServiceEndpointPolicyDefinition
ServiceEndpointPolicyDefinitionPropertiesFormat
ServiceEndpointPolicyPropertiesFormat
ServiceEndpointPropertiesFormat
Subnet
SubnetPropertiesFormat
SubResource
VirtualNetworkBgpCommunities
VirtualNetworkEncryption
VirtualNetworkPeering
VirtualNetworkPeeringPropertiesFormat
VirtualNetworkPropertiesFormat
Usage Examples
Azure Verified Modules
The followingAzure Verified Modulescan be used to deploy this resource type.
Azure Quickstart Samples
The followingAzure Quickstart templatescontain Bicep samples for deploying this resource type.
ARM template resource definition
The virtualNetworks resource type can be deployed with operations that target:
Resource groups- Seeresource group deployment commands
For a list of changed properties in each API version, seechange log.
Resource format
To create a Microsoft.Network/virtualNetworks resource, add the following JSON to your template.
{
  "type": "Microsoft.Network/virtualNetworks",
  "apiVersion": "2024-05-01",
  "name": "string",
  "extendedLocation": {
    "name": "string",
    "type": "string"
  },
  "location": "string",
  "properties": {
    "addressSpace": {
      "addressPrefixes": [ "string" ],
      "ipamPoolPrefixAllocations": [
        {
          "numberOfIpAddresses": "string",
          "pool": {
            "id": "string"
          }
        }
      ]
    },
    "bgpCommunities": {
      "virtualNetworkCommunity": "string"
    },
    "ddosProtectionPlan": {
      "id": "string"
    },
    "dhcpOptions": {
      "dnsServers": [ "string" ]
    },
    "enableDdosProtection": "bool",
    "enableVmProtection": "bool",
    "encryption": {
      "enabled": "bool",
      "enforcement": "string"
    },
    "flowTimeoutInMinutes": "int",
    "ipAllocations": [
      {
        "id": "string"
      }
    ],
    "privateEndpointVNetPolicies": "string",
    "subnets": [
      {
        "id": "string",
        "name": "string",
        "properties": {
          "addressPrefix": "string",
          "addressPrefixes": [ "string" ],
          "applicationGatewayIPConfigurations": [
            {
              "id": "string",
              "name": "string",
              "properties": {
                "subnet": {
                  "id": "string"
                }
              }
            }
          ],
          "defaultOutboundAccess": "bool",
          "delegations": [
            {
              "id": "string",
              "name": "string",
              "properties": {
                "serviceName": "string"
              },
              "type": "string"
            }
          ],
          "ipAllocations": [
            {
              "id": "string"
            }
          ],
          "ipamPoolPrefixAllocations": [
            {
              "numberOfIpAddresses": "string",
              "pool": {
                "id": "string"
              }
            }
          ],
          "natGateway": {
            "id": "string"
          },
          "networkSecurityGroup": {
            "id": "string",
            "location": "string",
            "properties": {
              "flushConnection": "bool",
              "securityRules": [
                {
                  "id": "string",
                  "name": "string",
                  "properties": {
                    "access": "string",
                    "description": "string",
                    "destinationAddressPrefix": "string",
                    "destinationAddressPrefixes": [ "string" ],
                    "destinationApplicationSecurityGroups": [
                      {
                        "id": "string",
                        "location": "string",
                        "properties": {
                        },
                        "tags": {
                          "{customized property}": "string"
                        }
                      }
                    ],
                    "destinationPortRange": "string",
                    "destinationPortRanges": [ "string" ],
                    "direction": "string",
                    "priority": "int",
                    "protocol": "string",
                    "sourceAddressPrefix": "string",
                    "sourceAddressPrefixes": [ "string" ],
                    "sourceApplicationSecurityGroups": [
                      {
                        "id": "string",
                        "location": "string",
                        "properties": {
                        },
                        "tags": {
                          "{customized property}": "string"
                        }
                      }
                    ],
                    "sourcePortRange": "string",
                    "sourcePortRanges": [ "string" ]
                  },
                  "type": "string"
                }
              ]
            },
            "tags": {
              "{customized property}": "string"
            }
          },
          "privateEndpointNetworkPolicies": "string",
          "privateLinkServiceNetworkPolicies": "string",
          "routeTable": {
            "id": "string",
            "location": "string",
            "properties": {
              "disableBgpRoutePropagation": "bool",
              "routes": [
                {
                  "id": "string",
                  "name": "string",
                  "properties": {
                    "addressPrefix": "string",
                    "nextHopIpAddress": "string",
                    "nextHopType": "string"
                  },
                  "type": "string"
                }
              ]
            },
            "tags": {
              "{customized property}": "string"
            }
          },
          "serviceEndpointPolicies": [
            {
              "id": "string",
              "location": "string",
              "properties": {
                "contextualServiceEndpointPolicies": [ "string" ],
                "serviceAlias": "string",
                "serviceEndpointPolicyDefinitions": [
                  {
                    "id": "string",
                    "name": "string",
                    "properties": {
                      "description": "string",
                      "service": "string",
                      "serviceResources": [ "string" ]
                    },
                    "type": "string"
                  }
                ]
              },
              "tags": {
                "{customized property}": "string"
              }
            }
          ],
          "serviceEndpoints": [
            {
              "locations": [ "string" ],
              "networkIdentifier": {
                "id": "string"
              },
              "service": "string"
            }
          ],
          "sharingScope": "string"
        },
        "type": "string"
      }
    ],
    "virtualNetworkPeerings": [
      {
        "id": "string",
        "name": "string",
        "properties": {
          "allowForwardedTraffic": "bool",
          "allowGatewayTransit": "bool",
          "allowVirtualNetworkAccess": "bool",
          "doNotVerifyRemoteGateways": "bool",
          "enableOnlyIPv6Peering": "bool",
          "localAddressSpace": {
            "addressPrefixes": [ "string" ],
            "ipamPoolPrefixAllocations": [
              {
                "numberOfIpAddresses": "string",
                "pool": {
                  "id": "string"
                }
              }
            ]
          },
          "localSubnetNames": [ "string" ],
          "localVirtualNetworkAddressSpace": {
            "addressPrefixes": [ "string" ],
            "ipamPoolPrefixAllocations": [
              {
                "numberOfIpAddresses": "string",
                "pool": {
                  "id": "string"
                }
              }
            ]
          },
          "peerCompleteVnets": "bool",
          "peeringState": "string",
          "peeringSyncLevel": "string",
          "remoteAddressSpace": {
            "addressPrefixes": [ "string" ],
            "ipamPoolPrefixAllocations": [
              {
                "numberOfIpAddresses": "string",
                "pool": {
                  "id": "string"
                }
              }
            ]
          },
          "remoteBgpCommunities": {
            "virtualNetworkCommunity": "string"
          },
          "remoteSubnetNames": [ "string" ],
          "remoteVirtualNetwork": {
            "id": "string"
          },
          "remoteVirtualNetworkAddressSpace": {
            "addressPrefixes": [ "string" ],
            "ipamPoolPrefixAllocations": [
              {
                "numberOfIpAddresses": "string",
                "pool": {
                  "id": "string"
                }
              }
            ]
          },
          "useRemoteGateways": "bool"
        },
        "type": "string"
      }
    ]
  },
  "tags": {
    "{customized property}": "string"
  }
}
{
  "type": "Microsoft.Network/virtualNetworks",
  "apiVersion": "2024-05-01",
  "name": "string",
  "extendedLocation": {
    "name": "string",
    "type": "string"
  },
  "location": "string",
  "properties": {
    "addressSpace": {
      "addressPrefixes": [ "string" ],
      "ipamPoolPrefixAllocations": [
        {
          "numberOfIpAddresses": "string",
          "pool": {
            "id": "string"
          }
        }
      ]
    },
    "bgpCommunities": {
      "virtualNetworkCommunity": "string"
    },
    "ddosProtectionPlan": {
      "id": "string"
    },
    "dhcpOptions": {
      "dnsServers": [ "string" ]
    },
    "enableDdosProtection": "bool",
    "enableVmProtection": "bool",
    "encryption": {
      "enabled": "bool",
      "enforcement": "string"
    },
    "flowTimeoutInMinutes": "int",
    "ipAllocations": [
      {
        "id": "string"
      }
    ],
    "privateEndpointVNetPolicies": "string",
    "subnets": [
      {
        "id": "string",
        "name": "string",
        "properties": {
          "addressPrefix": "string",
          "addressPrefixes": [ "string" ],
          "applicationGatewayIPConfigurations": [
            {
              "id": "string",
              "name": "string",
              "properties": {
                "subnet": {
                  "id": "string"
                }
              }
            }
          ],
          "defaultOutboundAccess": "bool",
          "delegations": [
            {
              "id": "string",
              "name": "string",
              "properties": {
                "serviceName": "string"
              },
              "type": "string"
            }
          ],
          "ipAllocations": [
            {
              "id": "string"
            }
          ],
          "ipamPoolPrefixAllocations": [
            {
              "numberOfIpAddresses": "string",
              "pool": {
                "id": "string"
              }
            }
          ],
          "natGateway": {
            "id": "string"
          },
          "networkSecurityGroup": {
            "id": "string",
            "location": "string",
            "properties": {
              "flushConnection": "bool",
              "securityRules": [
                {
                  "id": "string",
                  "name": "string",
                  "properties": {
                    "access": "string",
                    "description": "string",
                    "destinationAddressPrefix": "string",
                    "destinationAddressPrefixes": [ "string" ],
                    "destinationApplicationSecurityGroups": [
                      {
                        "id": "string",
                        "location": "string",
                        "properties": {
                        },
                        "tags": {
                          "{customized property}": "string"
                        }
                      }
                    ],
                    "destinationPortRange": "string",
                    "destinationPortRanges": [ "string" ],
                    "direction": "string",
                    "priority": "int",
                    "protocol": "string",
                    "sourceAddressPrefix": "string",
                    "sourceAddressPrefixes": [ "string" ],
                    "sourceApplicationSecurityGroups": [
                      {
                        "id": "string",
                        "location": "string",
                        "properties": {
                        },
                        "tags": {
                          "{customized property}": "string"
                        }
                      }
                    ],
                    "sourcePortRange": "string",
                    "sourcePortRanges": [ "string" ]
                  },
                  "type": "string"
                }
              ]
            },
            "tags": {
              "{customized property}": "string"
            }
          },
          "privateEndpointNetworkPolicies": "string",
          "privateLinkServiceNetworkPolicies": "string",
          "routeTable": {
            "id": "string",
            "location": "string",
            "properties": {
              "disableBgpRoutePropagation": "bool",
              "routes": [
                {
                  "id": "string",
                  "name": "string",
                  "properties": {
                    "addressPrefix": "string",
                    "nextHopIpAddress": "string",
                    "nextHopType": "string"
                  },
                  "type": "string"
                }
              ]
            },
            "tags": {
              "{customized property}": "string"
            }
          },
          "serviceEndpointPolicies": [
            {
              "id": "string",
              "location": "string",
              "properties": {
                "contextualServiceEndpointPolicies": [ "string" ],
                "serviceAlias": "string",
                "serviceEndpointPolicyDefinitions": [
                  {
                    "id": "string",
                    "name": "string",
                    "properties": {
                      "description": "string",
                      "service": "string",
                      "serviceResources": [ "string" ]
                    },
                    "type": "string"
                  }
                ]
              },
              "tags": {
                "{customized property}": "string"
              }
            }
          ],
          "serviceEndpoints": [
            {
              "locations": [ "string" ],
              "networkIdentifier": {
                "id": "string"
              },
              "service": "string"
            }
          ],
          "sharingScope": "string"
        },
        "type": "string"
      }
    ],
    "virtualNetworkPeerings": [
      {
        "id": "string",
        "name": "string",
        "properties": {
          "allowForwardedTraffic": "bool",
          "allowGatewayTransit": "bool",
          "allowVirtualNetworkAccess": "bool",
          "doNotVerifyRemoteGateways": "bool",
          "enableOnlyIPv6Peering": "bool",
          "localAddressSpace": {
            "addressPrefixes": [ "string" ],
            "ipamPoolPrefixAllocations": [
              {
                "numberOfIpAddresses": "string",
                "pool": {
                  "id": "string"
                }
              }
            ]
          },
          "localSubnetNames": [ "string" ],
          "localVirtualNetworkAddressSpace": {
            "addressPrefixes": [ "string" ],
            "ipamPoolPrefixAllocations": [
              {
                "numberOfIpAddresses": "string",
                "pool": {
                  "id": "string"
                }
              }
            ]
          },
          "peerCompleteVnets": "bool",
          "peeringState": "string",
          "peeringSyncLevel": "string",
          "remoteAddressSpace": {
            "addressPrefixes": [ "string" ],
            "ipamPoolPrefixAllocations": [
              {
                "numberOfIpAddresses": "string",
                "pool": {
                  "id": "string"
                }
              }
            ]
          },
          "remoteBgpCommunities": {
            "virtualNetworkCommunity": "string"
          },
          "remoteSubnetNames": [ "string" ],
          "remoteVirtualNetwork": {
            "id": "string"
          },
          "remoteVirtualNetworkAddressSpace": {
            "addressPrefixes": [ "string" ],
            "ipamPoolPrefixAllocations": [
              {
                "numberOfIpAddresses": "string",
                "pool": {
                  "id": "string"
                }
              }
            ]
          },
          "useRemoteGateways": "bool"
        },
        "type": "string"
      }
    ]
  },
  "tags": {
    "{customized property}": "string"
  }
}
Property Values
AddressSpace
ApplicationGatewayIPConfiguration
ApplicationGatewayIPConfigurationPropertiesFormat
ApplicationSecurityGroup
ApplicationSecurityGroupPropertiesFormat
Delegation
DhcpOptions
ExtendedLocation
IpamPoolPrefixAllocation
IpamPoolPrefixAllocationPool
Microsoft.Network/virtualNetworks
NetworkSecurityGroup
NetworkSecurityGroupPropertiesFormat
ResourceTags
ResourceTags
ResourceTags
ResourceTags
ResourceTags
Route
RoutePropertiesFormat
RouteTable
RouteTablePropertiesFormat
SecurityRule
SecurityRulePropertiesFormat
ServiceDelegationPropertiesFormat
ServiceEndpointPolicy
ServiceEndpointPolicyDefinition
ServiceEndpointPolicyDefinitionPropertiesFormat
ServiceEndpointPolicyPropertiesFormat
ServiceEndpointPropertiesFormat
Subnet
SubnetPropertiesFormat
SubResource
VirtualNetworkBgpCommunities
VirtualNetworkEncryption
VirtualNetworkPeering
VirtualNetworkPeeringPropertiesFormat
VirtualNetworkPropertiesFormat
Usage Examples
Azure Quickstart Templates
The followingAzure Quickstart templatesdeploy this resource type.
Terraform (AzAPI provider) resource definition
The virtualNetworks resource type can be deployed with operations that target:
Resource groups
For a list of changed properties in each API version, seechange log.
Resource format
To create a Microsoft.Network/virtualNetworks resource, add the following Terraform to your template.
resource "azapi_resource" "symbolicname" {
  type = "Microsoft.Network/virtualNetworks@2024-05-01"
  name = "string"
  location = "string"
  tags = {
    {customized property} = "string"
  }
  body = {
    extendedLocation = {
      name = "string"
      type = "string"
    }
    properties = {
      addressSpace = {
        addressPrefixes = [
          "string"
        ]
        ipamPoolPrefixAllocations = [
          {
            numberOfIpAddresses = "string"
            pool = {
              id = "string"
            }
          }
        ]
      }
      bgpCommunities = {
        virtualNetworkCommunity = "string"
      }
      ddosProtectionPlan = {
        id = "string"
      }
      dhcpOptions = {
        dnsServers = [
          "string"
        ]
      }
      enableDdosProtection = bool
      enableVmProtection = bool
      encryption = {
        enabled = bool
        enforcement = "string"
      }
      flowTimeoutInMinutes = int
      ipAllocations = [
        {
          id = "string"
        }
      ]
      privateEndpointVNetPolicies = "string"
      subnets = [
        {
          id = "string"
          name = "string"
          properties = {
            addressPrefix = "string"
            addressPrefixes = [
              "string"
            ]
            applicationGatewayIPConfigurations = [
              {
                id = "string"
                name = "string"
                properties = {
                  subnet = {
                    id = "string"
                  }
                }
              }
            ]
            defaultOutboundAccess = bool
            delegations = [
              {
                id = "string"
                name = "string"
                properties = {
                  serviceName = "string"
                }
                type = "string"
              }
            ]
            ipAllocations = [
              {
                id = "string"
              }
            ]
            ipamPoolPrefixAllocations = [
              {
                numberOfIpAddresses = "string"
                pool = {
                  id = "string"
                }
              }
            ]
            natGateway = {
              id = "string"
            }
            networkSecurityGroup = {
              id = "string"
              location = "string"
              properties = {
                flushConnection = bool
                securityRules = [
                  {
                    id = "string"
                    name = "string"
                    properties = {
                      access = "string"
                      description = "string"
                      destinationAddressPrefix = "string"
                      destinationAddressPrefixes = [
                        "string"
                      ]
                      destinationApplicationSecurityGroups = [
                        {
                          id = "string"
                          location = "string"
                          properties = {
                          }
                          tags = {
                            {customized property} = "string"
                          }
                        }
                      ]
                      destinationPortRange = "string"
                      destinationPortRanges = [
                        "string"
                      ]
                      direction = "string"
                      priority = int
                      protocol = "string"
                      sourceAddressPrefix = "string"
                      sourceAddressPrefixes = [
                        "string"
                      ]
                      sourceApplicationSecurityGroups = [
                        {
                          id = "string"
                          location = "string"
                          properties = {
                          }
                          tags = {
                            {customized property} = "string"
                          }
                        }
                      ]
                      sourcePortRange = "string"
                      sourcePortRanges = [
                        "string"
                      ]
                    }
                    type = "string"
                  }
                ]
              }
              tags = {
                {customized property} = "string"
              }
            }
            privateEndpointNetworkPolicies = "string"
            privateLinkServiceNetworkPolicies = "string"
            routeTable = {
              id = "string"
              location = "string"
              properties = {
                disableBgpRoutePropagation = bool
                routes = [
                  {
                    id = "string"
                    name = "string"
                    properties = {
                      addressPrefix = "string"
                      nextHopIpAddress = "string"
                      nextHopType = "string"
                    }
                    type = "string"
                  }
                ]
              }
              tags = {
                {customized property} = "string"
              }
            }
            serviceEndpointPolicies = [
              {
                id = "string"
                location = "string"
                properties = {
                  contextualServiceEndpointPolicies = [
                    "string"
                  ]
                  serviceAlias = "string"
                  serviceEndpointPolicyDefinitions = [
                    {
                      id = "string"
                      name = "string"
                      properties = {
                        description = "string"
                        service = "string"
                        serviceResources = [
                          "string"
                        ]
                      }
                      type = "string"
                    }
                  ]
                }
                tags = {
                  {customized property} = "string"
                }
              }
            ]
            serviceEndpoints = [
              {
                locations = [
                  "string"
                ]
                networkIdentifier = {
                  id = "string"
                }
                service = "string"
              }
            ]
            sharingScope = "string"
          }
          type = "string"
        }
      ]
      virtualNetworkPeerings = [
        {
          id = "string"
          name = "string"
          properties = {
            allowForwardedTraffic = bool
            allowGatewayTransit = bool
            allowVirtualNetworkAccess = bool
            doNotVerifyRemoteGateways = bool
            enableOnlyIPv6Peering = bool
            localAddressSpace = {
              addressPrefixes = [
                "string"
              ]
              ipamPoolPrefixAllocations = [
                {
                  numberOfIpAddresses = "string"
                  pool = {
                    id = "string"
                  }
                }
              ]
            }
            localSubnetNames = [
              "string"
            ]
            localVirtualNetworkAddressSpace = {
              addressPrefixes = [
                "string"
              ]
              ipamPoolPrefixAllocations = [
                {
                  numberOfIpAddresses = "string"
                  pool = {
                    id = "string"
                  }
                }
              ]
            }
            peerCompleteVnets = bool
            peeringState = "string"
            peeringSyncLevel = "string"
            remoteAddressSpace = {
              addressPrefixes = [
                "string"
              ]
              ipamPoolPrefixAllocations = [
                {
                  numberOfIpAddresses = "string"
                  pool = {
                    id = "string"
                  }
                }
              ]
            }
            remoteBgpCommunities = {
              virtualNetworkCommunity = "string"
            }
            remoteSubnetNames = [
              "string"
            ]
            remoteVirtualNetwork = {
              id = "string"
            }
            remoteVirtualNetworkAddressSpace = {
              addressPrefixes = [
                "string"
              ]
              ipamPoolPrefixAllocations = [
                {
                  numberOfIpAddresses = "string"
                  pool = {
                    id = "string"
                  }
                }
              ]
            }
            useRemoteGateways = bool
          }
          type = "string"
        }
      ]
    }
  }
}
resource "azapi_resource" "symbolicname" {
  type = "Microsoft.Network/virtualNetworks@2024-05-01"
  name = "string"
  location = "string"
  tags = {
    {customized property} = "string"
  }
  body = {
    extendedLocation = {
      name = "string"
      type = "string"
    }
    properties = {
      addressSpace = {
        addressPrefixes = [
          "string"
        ]
        ipamPoolPrefixAllocations = [
          {
            numberOfIpAddresses = "string"
            pool = {
              id = "string"
            }
          }
        ]
      }
      bgpCommunities = {
        virtualNetworkCommunity = "string"
      }
      ddosProtectionPlan = {
        id = "string"
      }
      dhcpOptions = {
        dnsServers = [
          "string"
        ]
      }
      enableDdosProtection = bool
      enableVmProtection = bool
      encryption = {
        enabled = bool
        enforcement = "string"
      }
      flowTimeoutInMinutes = int
      ipAllocations = [
        {
          id = "string"
        }
      ]
      privateEndpointVNetPolicies = "string"
      subnets = [
        {
          id = "string"
          name = "string"
          properties = {
            addressPrefix = "string"
            addressPrefixes = [
              "string"
            ]
            applicationGatewayIPConfigurations = [
              {
                id = "string"
                name = "string"
                properties = {
                  subnet = {
                    id = "string"
                  }
                }
              }
            ]
            defaultOutboundAccess = bool
            delegations = [
              {
                id = "string"
                name = "string"
                properties = {
                  serviceName = "string"
                }
                type = "string"
              }
            ]
            ipAllocations = [
              {
                id = "string"
              }
            ]
            ipamPoolPrefixAllocations = [
              {
                numberOfIpAddresses = "string"
                pool = {
                  id = "string"
                }
              }
            ]
            natGateway = {
              id = "string"
            }
            networkSecurityGroup = {
              id = "string"
              location = "string"
              properties = {
                flushConnection = bool
                securityRules = [
                  {
                    id = "string"
                    name = "string"
                    properties = {
                      access = "string"
                      description = "string"
                      destinationAddressPrefix = "string"
                      destinationAddressPrefixes = [
                        "string"
                      ]
                      destinationApplicationSecurityGroups = [
                        {
                          id = "string"
                          location = "string"
                          properties = {
                          }
                          tags = {
                            {customized property} = "string"
                          }
                        }
                      ]
                      destinationPortRange = "string"
                      destinationPortRanges = [
                        "string"
                      ]
                      direction = "string"
                      priority = int
                      protocol = "string"
                      sourceAddressPrefix = "string"
                      sourceAddressPrefixes = [
                        "string"
                      ]
                      sourceApplicationSecurityGroups = [
                        {
                          id = "string"
                          location = "string"
                          properties = {
                          }
                          tags = {
                            {customized property} = "string"
                          }
                        }
                      ]
                      sourcePortRange = "string"
                      sourcePortRanges = [
                        "string"
                      ]
                    }
                    type = "string"
                  }
                ]
              }
              tags = {
                {customized property} = "string"
              }
            }
            privateEndpointNetworkPolicies = "string"
            privateLinkServiceNetworkPolicies = "string"
            routeTable = {
              id = "string"
              location = "string"
              properties = {
                disableBgpRoutePropagation = bool
                routes = [
                  {
                    id = "string"
                    name = "string"
                    properties = {
                      addressPrefix = "string"
                      nextHopIpAddress = "string"
                      nextHopType = "string"
                    }
                    type = "string"
                  }
                ]
              }
              tags = {
                {customized property} = "string"
              }
            }
            serviceEndpointPolicies = [
              {
                id = "string"
                location = "string"
                properties = {
                  contextualServiceEndpointPolicies = [
                    "string"
                  ]
                  serviceAlias = "string"
                  serviceEndpointPolicyDefinitions = [
                    {
                      id = "string"
                      name = "string"
                      properties = {
                        description = "string"
                        service = "string"
                        serviceResources = [
                          "string"
                        ]
                      }
                      type = "string"
                    }
                  ]
                }
                tags = {
                  {customized property} = "string"
                }
              }
            ]
            serviceEndpoints = [
              {
                locations = [
                  "string"
                ]
                networkIdentifier = {
                  id = "string"
                }
                service = "string"
              }
            ]
            sharingScope = "string"
          }
          type = "string"
        }
      ]
      virtualNetworkPeerings = [
        {
          id = "string"
          name = "string"
          properties = {
            allowForwardedTraffic = bool
            allowGatewayTransit = bool
            allowVirtualNetworkAccess = bool
            doNotVerifyRemoteGateways = bool
            enableOnlyIPv6Peering = bool
            localAddressSpace = {
              addressPrefixes = [
                "string"
              ]
              ipamPoolPrefixAllocations = [
                {
                  numberOfIpAddresses = "string"
                  pool = {
                    id = "string"
                  }
                }
              ]
            }
            localSubnetNames = [
              "string"
            ]
            localVirtualNetworkAddressSpace = {
              addressPrefixes = [
                "string"
              ]
              ipamPoolPrefixAllocations = [
                {
                  numberOfIpAddresses = "string"
                  pool = {
                    id = "string"
                  }
                }
              ]
            }
            peerCompleteVnets = bool
            peeringState = "string"
            peeringSyncLevel = "string"
            remoteAddressSpace = {
              addressPrefixes = [
                "string"
              ]
              ipamPoolPrefixAllocations = [
                {
                  numberOfIpAddresses = "string"
                  pool = {
                    id = "string"
                  }
                }
              ]
            }
            remoteBgpCommunities = {
              virtualNetworkCommunity = "string"
            }
            remoteSubnetNames = [
              "string"
            ]
            remoteVirtualNetwork = {
              id = "string"
            }
            remoteVirtualNetworkAddressSpace = {
              addressPrefixes = [
                "string"
              ]
              ipamPoolPrefixAllocations = [
                {
                  numberOfIpAddresses = "string"
                  pool = {
                    id = "string"
                  }
                }
              ]
            }
            useRemoteGateways = bool
          }
          type = "string"
        }
      ]
    }
  }
}
Property Values
AddressSpace
ApplicationGatewayIPConfiguration
ApplicationGatewayIPConfigurationPropertiesFormat
ApplicationSecurityGroup
ApplicationSecurityGroupPropertiesFormat
Delegation
DhcpOptions
ExtendedLocation
IpamPoolPrefixAllocation
IpamPoolPrefixAllocationPool
Microsoft.Network/virtualNetworks
NetworkSecurityGroup
NetworkSecurityGroupPropertiesFormat
ResourceTags
ResourceTags
ResourceTags
ResourceTags
ResourceTags
Route
RoutePropertiesFormat
RouteTable
RouteTablePropertiesFormat
SecurityRule
SecurityRulePropertiesFormat
ServiceDelegationPropertiesFormat
ServiceEndpointPolicy
ServiceEndpointPolicyDefinition
ServiceEndpointPolicyDefinitionPropertiesFormat
ServiceEndpointPolicyPropertiesFormat
ServiceEndpointPropertiesFormat
Subnet
SubnetPropertiesFormat
SubResource
VirtualNetworkBgpCommunities
VirtualNetworkEncryption
VirtualNetworkPeering
VirtualNetworkPeeringPropertiesFormat
VirtualNetworkPropertiesFormat
Usage Examples
Azure Verified Modules
The followingAzure Verified Modulescan be used to deploy this resource type.
Feedback
Was this page helpful?
Additional resources