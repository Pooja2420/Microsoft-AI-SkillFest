Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Azure Key Vault security
Article
2025-03-31
13 contributors
In this article
Azure Key Vault protects cryptographic keys, certificates (and the private keys associated with the certificates), and secrets (such as connection strings and passwords) in the cloud. When storing sensitive and business critical data, however, you must take steps to maximize the security of your vaults and the data stored in them.
This article provides an overview of security features and best practices for Azure Key Vault.
Note
For a comprehensive list of Azure Key Vault security recommendations see theSecurity baseline for Azure Key Vault.
Network security
You can reduce the exposure of your vaults by specifying which IP addresses have access to them. The virtual network service endpoints for Azure Key Vault allow you to restrict access to a specified virtual network. The endpoints also allow you to restrict access to a list of IPv4 (internet protocol version 4) address ranges. Any user connecting to your key vault from outside those sources is denied access.  For full details, seeVirtual network service endpoints for Azure Key Vault
After firewall rules are in effect, users can only read data from Key Vault when their requests originate from allowed virtual networks or IPv4 address ranges. This also applies to accessing Key Vault from the Azure portal. Although users can browse to a key vault from the Azure portal, they might not be able to list keys, secrets, or certificates if their client machine is not in the allowed list. For implementation steps, seeConfigure Azure Key Vault firewalls and virtual networks
Azure Private Link Service enables you to access Azure Key Vault and Azure hosted customer/partner services over a Private Endpoint in your virtual network. An Azure Private Endpoint is a network interface that connects you privately and securely to a service powered by Azure Private Link. The private endpoint uses a private IP address from your VNet, effectively bringing the service into your VNet. All traffic to the service can be routed through the private endpoint, so no gateways, NAT devices, ExpressRoute or VPN connections, or public IP addresses are needed. Traffic between your virtual network and the service traverses over the Microsoft backbone network, eliminating exposure from the public Internet. You can connect to an instance of an Azure resource, giving you the highest level of granularity in access control.  For implementation steps, seeIntegrate Key Vault with Azure Private Link
TLS and HTTPS
The Key Vault front end (data plane) is a multi-tenant server. This means that key vaults from different customers can share the same public IP address. In order to achieve isolation, each HTTP request is authenticated and authorized independently of other requests.
The HTTPS protocol allows the client to participate in TLS negotiation.Clients can enforce the version of TLS, and whenever a client does so, the entire connection will use the corresponding level protection. Key Vault supports TLS 1.2 and 1.3 protocol versions.
Note
You can monitor TLS version used by clients by monitoring Key Vault logs with sample Kusto queryhere.
Key Vault authentication options
When you create a key vault in an Azure subscription, it's automatically associated with the Microsoft Entra tenant of the subscription. All callers in both planes must register in this tenant and authenticate to access the key vault. In both cases, applications can access Key Vault in three ways:
Application-only: The application represents a service principal or managed identity. This identity is the most common scenario for applications that periodically need to access certificates, keys, or secrets from the key vault. For this scenario to work, theobjectIdof the application must be specified in the access policy and theapplicationIdmustnotbe specified or must benull.
objectId
applicationId
null
User-only: The user accesses the key vault from any application registered in the tenant. Examples of this type of access include Azure PowerShell and the Azure portal. For this scenario to work, theobjectIdof the user must be specified in the access policy and theapplicationIdmustnotbe specified or must benull.
objectId
applicationId
null
Application-plus-user(sometimes referred ascompound identity): The user is required to access the key vault from a specific applicationandthe application must use the on-behalf-of authentication (OBO) flow to impersonate the user. For this scenario to work, bothapplicationIdandobjectIdmust be specified in the access policy. TheapplicationIdidentifies the required application and theobjectIdidentifies the user. Currently, this option isn't available for data plane Azure RBAC.
applicationId
objectId
applicationId
objectId
In all types of access, the application authenticates with Microsoft Entra ID. The application uses anysupported authentication methodbased on the application type. The application acquires a token for a resource in the plane to grant access. The resource is an endpoint in the management or data plane, based on the Azure environment. The application uses the token and sends a REST API request to Key Vault. To learn more, review thewhole authentication flow.
The model of a single mechanism for authentication to both planes has several benefits:
Organizations can control access centrally to all key vaults in their organization.
If a user leaves, they instantly lose access to all key vaults in the organization.
Organizations can customize authentication by using the options in Microsoft Entra ID, such as to enable multi-factor authentication for added security.
For more information, seeKey Vault authentication fundamentals.
Access model overview
Access to a key vault is controlled through two interfaces: thecontrol planeand thedata plane. The control plane is where you manage Key Vault itself. Operations in this plane include creating and deleting key vaults, retrieving Key Vault properties, and updating access policies. The data plane is where you work with the data stored in a key vault. You can add, delete, and modify keys, secrets, and certificates.
Both planes useMicrosoft Entra IDfor authentication. For authorization, the control plane usesAzure role-based access control (Azure RBAC)and the data plane uses aKey Vault access policyandAzure RBAC for Key Vault data plane operations.
To access a key vault in either plane, all callers (users or applications) must have proper authentication and authorization. Authentication establishes the identity of the caller. Authorization determines which operations the caller can execute. Authentication with Key Vault works in conjunction withMicrosoft Entra ID, which is responsible for authenticating the identity of any givensecurity principal.
A security principal is an object that represents a user, group, service, or application that's requesting access to Azure resources. Azure assigns a uniqueobject IDto every security principal.
Ausersecurity principal identifies an individual who has a profile in Microsoft Entra ID.
Agroupsecurity principal identifies a set of users created in Microsoft Entra ID. Any roles or permissions assigned to the group are granted to all of the users within the group.
Aservice principalis a type of security principal that identifies an application or service, which is to say, a piece of code rather than a user or group. A service principal's object ID is known as itsclient IDand acts like its username. The service principal'sclient secretorcertificateacts like its password. Many Azure Services supports assigningManaged Identitywith automated management ofclient IDandcertificate. Managed identity is the most secure and recommended option for authenticating within Azure.
For more information about authentication to Key Vault, seeAuthenticate to Azure Key Vault.
Conditional access
Key Vault provides support for Microsoft Entra Conditional Access policies. By using Conditional Access policies, you can apply the right access controls to Key Vault when needed to keep your organization secure and stay out of your user's way when not needed.
For more information, seeConditional Access overview
Privileged access
Authorization determines which operations the caller can perform. Authorization in Key Vault usesAzure role-based access control (Azure RBAC)on control plane and either Azure RBAC or Azure Key Vault access policies on data plane.
Access to vaults takes place through two interfaces or planes. These planes are the control plane and the data plane.
Thecontrol planeis where you manage Key Vault itself and it is the interface used to create and delete vaults. You can also read key vault properties and manage access policies.
Thedata planeallows you to work with the data stored in a key vault. You can add, delete, and modify keys, secrets, and certificates.
Applications access the planes through endpoints. The access controls for the two planes work independently. To grant an application access to use keys in a key vault, you grant data plane access by using Azure RBAC or a Key Vault access policy. To grant a user read access to Key Vault properties and tags, but not access to data (keys, secrets, or certificates), you grant control plane access with Azure RBAC.
The following table shows the endpoints for the control and data planes.
Managing administrative access to Key Vault
When you create a key vault in a resource group, you manage access by using Microsoft Entra ID. You grant users or groups the ability to manage the key vaults in a resource group. You can grant access at a specific scope level by assigning the appropriate Azure roles. To grant access to a user to manage key vaults, you assign a predefinedkey vault Contributorrole to the user at a specific scope. The following scopes levels can be assigned to an Azure role:
key vault Contributor
Subscription: An Azure role assigned at the subscription level applies to all resource groups and resources within that subscription.
Resource group: An Azure role assigned at the resource group level applies to all resources in that resource group.
Specific resource: An Azure role assigned for a specific resource applies to that resource. In this case, the resource is a specific key vault.
There are several predefined roles. If a predefined role doesn't fit your needs, you can define your own role. For more information, seeAzure RBAC: Built-in roles.
Important
When using the Access Policy permission model, a user with theContributor,Key Vault Contributor, or any other role that includesMicrosoft.KeyVault/vaults/writepermissions for the key vault management plane can grant themselves data plane access by setting a Key Vault access policy. To prevent unauthorized access and management of your key vaults, keys, secrets, and certificates, it's essential to limit Contributor role access to key vaults under the Access Policy permission model. To mitigate this risk, we recommend you use theRole-Based Access Control (RBAC) permission model, which restricts permission management to the 'Owner' and 'User Access Administrator' roles, allowing a clear separation between security operations and administrative duties. See theKey Vault RBAC GuideandWhat is Azure RBAC?for more information.
Contributor
Key Vault Contributor
Microsoft.KeyVault/vaults/write
Controlling access to Key Vault data
You can control access to Key Vault keys, certificates and secrets using Azure RBAC or Key Vault access policies.
For more information, see
Azure RBAC for Key Vault data plane operations.
Key Vault access policy
Logging and monitoring
Key Vault logging saves information about the activities performed on your vault. For full details, seeKey Vault logging.
You can integrate Key Vault with Event Grid to be notified when the status of a key, certificate, or secret stored in key vault has changed. For details, seeMonitoring Key Vault with Azure Event Grid
It is also important to monitor the health of your key vault, to make sure your service operates as intended. To learn how to do so, seeMonitoring and alerting for Azure Key Vault.
Backup and recovery
Azure Key Vault soft-delete and purge protection allows you to recover deleted vaults and vault objects. For full details, seeAzure Key Vault soft-delete overview.
You should also take regular back ups of your vault on update/delete/create of objects within a Vault.
Next steps
Azure Key Vault security baseline
Azure Key Vault best practices
Virtual network service endpoints for Azure Key Vault
Azure RBAC: Built-in roles
Feedback
Was this page helpful?
Additional resources