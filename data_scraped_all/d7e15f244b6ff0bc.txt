Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
join operator
Article
2024-08-12
5 contributors
In this article
Applies to: âMicrosoft FabricâAzure Data ExplorerâAzure MonitorâMicrosoft Sentinel
Merge the rows of two tables to form a new table by matching values of the specified columns from each table.
Kusto Query Language (KQL) offers many kinds of joins that each affect the schema and rows in the resultant table in different ways. For example, if you use aninnerjoin, the table has the same columns as the left table, plus the columns from the right table. For best performance, if one table is always smaller than the other, use it as the left side of thejoinoperator.
inner
join
The following image provides a visual representation of the operation performed by each join. The color of the shading represents the columns returned, and the areas shaded represent the rows returned.

Syntax
LeftTable|join[kind=JoinFlavor] [Hints](RightTable)onConditions
|
join
kind
=
(
)
on
Learn more aboutsyntax conventions.
Parameters
string
$left
string
innerunique
inner
leftouter
rightouter
fullouter
leftanti
rightanti
leftsemi
rightsemi
innerunique
string
=
string
$right
string
ON
ON $left.
==
$right.
Tip
For best performance, if one table is always smaller than the other, use it as the left side of the join.
Hints
hint.remote
auto
left
local
right
hint.strategy=broadcast
hint.shufflekey=<key>
shufflekey
hint.strategy=shuffle
shuffle
hint.remote
auto
left
local
right
hint.strategy=broadcast
hint.shufflekey=<key>
shufflekey
hint.strategy=shuffle
shuffle
Note
The join hints don't change the semantic ofjoinbut may affect performance.
join
Returns
The return schema and rows depend on the join flavor. The join flavor is specified with thekindkeyword. The following table shows the supported join flavors. To see examples for a specific join flavor, select the link in theJoin flavorcolumn.
leftanti
anti
leftantisemi
rightanti
rightantisemi
Cross-join
KQL doesn't provide a cross-join flavor. However, you can achieve a cross-join effect by using a placeholder key approach.
In the following example, a placeholder key is added to both tables and then used for the inner join operation, effectively achieving a cross-join-like behavior:
X | extend placeholder=1 | join kind=inner (Y | extend placeholder=1) on placeholder
X | extend placeholder=1 | join kind=inner (Y | extend placeholder=1) on placeholder
Related content
Write multi-table queries
Cross-cluster join
Broadcast join
Shuffle query
Feedback
Was this page helpful?
Additional resources