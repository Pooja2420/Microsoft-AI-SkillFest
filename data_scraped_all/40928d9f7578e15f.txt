Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Configure streaming export of diagnostic telemetry - Azure SQL Database & Azure SQL Managed Instance
Article
2024-08-16
17 contributors
In this article
Applies to:Azure SQL DatabaseAzure SQL Managed Instance
In this article, you will learn about the performance metrics and resource logs for Azure SQL Database that you can export to one of several destinations for analysis. You will learn how to configure the streaming export of this diagnostic telemetry through the Azure portal, PowerShell, Azure CLI, the REST API, and Azure Resource Manager templates.
You will also learn about the destinations to which you can stream this diagnostic telemetry and how to choose among these choices. Your destination options include:
Log Analytics and SQL Analytics
Event Hubs
Azure Storage
Diagnostic telemetry for export
You can export various performance metrics and additional database logs. The following table describes the performance metrics and resources logs that you can configure for streaming export to one of several destinations. This diagnostic telemetry can be configured for single databases, elastic pools and pooled databases, and SQL managed instances and their databases.
tempdb
tempdb
Note
In Azure SQL Managed Instance, diagnostic settings cannot be configured forsystem databasessuch asmaster,msdb,model, resource andtempdbdatabases.
master
msdb
model
tempdb
Streaming export destinations
This diagnostic telemetry can be streamed to one of the following Azure resources for analysis.
Log Analytics workspace:Data streamed to aLog Analytics workspacecan be consumed bySQL Analytics. SQL Analytics is a cloud only monitoring solution that provides intelligent monitoring of your databases that includes performance reports, alerts, and mitigation recommendations. Data streamed to a Log Analytics workspace can be analyzed with other monitoring data collected and also enables you to use other Azure Monitor features such as alerts and visualizations
Log Analytics workspace:
Data streamed to aLog Analytics workspacecan be consumed bySQL Analytics. SQL Analytics is a cloud only monitoring solution that provides intelligent monitoring of your databases that includes performance reports, alerts, and mitigation recommendations. Data streamed to a Log Analytics workspace can be analyzed with other monitoring data collected and also enables you to use other Azure Monitor features such as alerts and visualizations
Azure Event Hubs:Data streamed toAzure Event Hubsprovides the following functionality:Stream logs to 3rd party logging and telemetry systems: Stream all of your metrics and resource logs to a single event hub to pipe log data to a third-party SIEM or log analytics tool.Build a custom telemetry and logging platform: The highly scalable publish-subscribe nature of Azure Event Hubs allows you to flexibly ingest metrics and resource logs into a custom telemetry platform. For more information, seeAzure Event Hubs.View service health by streaming data to Power BI: Use Event Hubs, Stream Analytics, and Power BI to transform your diagnostics data into near real-time insights on your Azure services. SeeStream Analytics and Power BI: A real-time analytics dashboard for streaming datafor details on this solution.
Azure Event Hubs:
Data streamed toAzure Event Hubsprovides the following functionality:
Stream logs to 3rd party logging and telemetry systems: Stream all of your metrics and resource logs to a single event hub to pipe log data to a third-party SIEM or log analytics tool.
Build a custom telemetry and logging platform: The highly scalable publish-subscribe nature of Azure Event Hubs allows you to flexibly ingest metrics and resource logs into a custom telemetry platform. For more information, seeAzure Event Hubs.
View service health by streaming data to Power BI: Use Event Hubs, Stream Analytics, and Power BI to transform your diagnostics data into near real-time insights on your Azure services. SeeStream Analytics and Power BI: A real-time analytics dashboard for streaming datafor details on this solution.
Azure Storage:Data streamed toAzure Storageenables you to archive vast amounts of diagnostic telemetry for a fraction of the cost of the previous two streaming options.
Azure Storage:
Data streamed toAzure Storageenables you to archive vast amounts of diagnostic telemetry for a fraction of the cost of the previous two streaming options.
This diagnostic telemetry streamed to one of these destinations can be used to gauge resource utilization and query execution statistics for easier performance monitoring.

Enable and configure the streaming export of diagnostic telemetry
You can enable and manage metrics and diagnostic telemetry logging by using one of the following methods:
Azure portal
PowerShell
Azure CLI
Azure Monitor REST API
Azure Resource Manager template
Note
To enable audit log streaming of security telemetry, seeSet up auditing for your databaseandauditing logs in Azure Monitor logs and Azure Event Hubs.
Configure the streaming export of diagnostic telemetry
You can use theDiagnostics settingsmenu in the Azure portal to enable and configure streaming of diagnostic telemetry. Additionally, you can use PowerShell, the Azure CLI, theREST API, andResource Manager templatesto configure streaming of diagnostic telemetry. You can set the following destinations to stream the diagnostic telemetry: Azure Storage, Azure Event Hubs, and Azure Monitor logs.
Important
The streaming export of diagnostic telemetry is not enabled by default.
Select one of the following tabs for step-by-step guidance for configuring the streaming export of diagnostic telemetry in the Azure portal and for scripts for accomplishing the same with PowerShell and the Azure CLI.
Azure portal
PowerShell
Azure CLI
Elastic pools in Azure SQL Database
You can set up an elastic pool resource to collect the following diagnostic telemetry:
To configure streaming of diagnostic telemetry for elastic pools and pooled databases, you need to separately configure each separately:
Enable streaming of diagnostic telemetry for an elastic pool
Enable streaming of diagnostic telemetry for each database in elastic pool
The elastic pool container has its own telemetry separate from each individual pooled database's telemetry.
To enable streaming of diagnostic telemetry for an elastic pool resource, follow these steps:
Go to theelastic poolresource in Azure portal.
Go to theelastic poolresource in Azure portal.
SelectDiagnostics settings.
SelectDiagnostics settings.
SelectTurn on diagnosticsif no previous settings exist, or selectEdit settingto edit a previous setting.
SelectTurn on diagnosticsif no previous settings exist, or selectEdit settingto edit a previous setting.

Enter a setting name for your own reference.
Enter a setting name for your own reference.
Select a destination resource for the streaming diagnostics data:Archive to storage account,Stream to an event hub, orSend to Log Analytics.
Select a destination resource for the streaming diagnostics data:Archive to storage account,Stream to an event hub, orSend to Log Analytics.
For log analytics, selectConfigureand create a new workspace by selecting+Create New Workspace, or select an existing workspace.
For log analytics, selectConfigureand create a new workspace by selecting+Create New Workspace, or select an existing workspace.
Select the check box for elastic pool diagnostic telemetry:Basicmetrics.
Select the check box for elastic pool diagnostic telemetry:Basicmetrics.
SelectSave.
SelectSave.
In addition, configure streaming of diagnostic telemetry for each database within the elastic pool you want to monitor by following steps described in the next section.
In addition, configure streaming of diagnostic telemetry for each database within the elastic pool you want to monitor by following steps described in the next section.
Important
In addition to configuring diagnostic telemetry for an elastic pool, you also need to configure diagnostic telemetry for each database in the elastic pool.
Databases in Azure SQL Database
You can set up a database resource to collect the following diagnostic telemetry:
To enable streaming of diagnostic telemetry for a single or a pooled database, follow these steps:
Go to AzureSQL databaseresource.
Go to AzureSQL databaseresource.
SelectDiagnostics settings.
SelectDiagnostics settings.
SelectTurn on diagnosticsif no previous settings exist, or selectEdit settingto edit a previous setting. You can create up to three parallel connections to stream diagnostic telemetry.
SelectTurn on diagnosticsif no previous settings exist, or selectEdit settingto edit a previous setting. You can create up to three parallel connections to stream diagnostic telemetry.
SelectAdd diagnostic settingto configure parallel streaming of diagnostics data to multiple resources.
SelectAdd diagnostic settingto configure parallel streaming of diagnostics data to multiple resources.

Enter a setting name for your own reference.
Enter a setting name for your own reference.
Select a destination resource for the streaming diagnostics data:Archive to storage account,Stream to an event hub, orSend to Log Analytics.
Select a destination resource for the streaming diagnostics data:Archive to storage account,Stream to an event hub, orSend to Log Analytics.
For the standard, event-based monitoring experience, select the following check boxes for database diagnostics log telemetry:SQLInsights,AutomaticTuning,QueryStoreRuntimeStatistics,QueryStoreWaitStatistics,Errors,DatabaseWaitStatistics,Timeouts,Blocks, andDeadlocks.
For the standard, event-based monitoring experience, select the following check boxes for database diagnostics log telemetry:SQLInsights,AutomaticTuning,QueryStoreRuntimeStatistics,QueryStoreWaitStatistics,Errors,DatabaseWaitStatistics,Timeouts,Blocks, andDeadlocks.
For an advanced, one-minute-based monitoring experience, select the check box forBasicmetrics.
For an advanced, one-minute-based monitoring experience, select the check box forBasicmetrics.

SelectSave.
SelectSave.
Repeat these steps for each database you want to monitor.
Repeat these steps for each database you want to monitor.
Tip
Repeat these steps for each single and pooled database you want to monitor.
Instances in Azure SQL Managed Instance
You can set up a managed instance resource to collect the following diagnostic telemetry:
To configure streaming of diagnostic telemetry for managed instance and instance databases, you need to separately configure each:
Enable streaming of diagnostic telemetry for managed instance
Enable streaming of diagnostic telemetry for each instance database
The managed instance container has its own telemetry separate from each instance database's telemetry.
To enable streaming of diagnostic telemetry for a managed instance resource, follow these steps:
Go to themanaged instanceresource in Azure portal.
Go to themanaged instanceresource in Azure portal.
SelectDiagnostics settings.
SelectDiagnostics settings.
SelectTurn on diagnosticsif no previous settings exist, or selectEdit settingto edit a previous setting.
SelectTurn on diagnosticsif no previous settings exist, or selectEdit settingto edit a previous setting.

Enter a setting name for your own reference.
Enter a setting name for your own reference.
Select a destination resource for the streaming diagnostics data:Archive to storage account,Stream to an event hub, orSend to Log Analytics.
Select a destination resource for the streaming diagnostics data:Archive to storage account,Stream to an event hub, orSend to Log Analytics.
For log analytics, selectConfigureand create a new workspace by selecting+Create New Workspace, or use an existing workspace.
For log analytics, selectConfigureand create a new workspace by selecting+Create New Workspace, or use an existing workspace.
Select the check box for instance diagnostic telemetry:ResourceUsageStats.
Select the check box for instance diagnostic telemetry:ResourceUsageStats.

SelectSave.
SelectSave.
In addition, configure streaming of diagnostic telemetry for each instance database within the managed instance you want to monitor by following the steps described in the next section.
In addition, configure streaming of diagnostic telemetry for each instance database within the managed instance you want to monitor by following the steps described in the next section.
Important
In addition to configuring diagnostic telemetry for a managed instance, you also need to configure diagnostic telemetry for each instance database.
Databases in Azure SQL Managed Instance
You can set up an instance database resource to collect the following diagnostic telemetry:
To enable streaming of diagnostic telemetry for an instance database, follow these steps:
Go toinstance databaseresource within managed instance.
Go toinstance databaseresource within managed instance.
SelectDiagnostics settings.
SelectDiagnostics settings.
SelectTurn on diagnosticsif no previous settings exist, or selectEdit settingto edit a previous setting.You can create up to three (3) parallel connections to stream diagnostic telemetry.Select+Add diagnostic settingto configure parallel streaming of diagnostics data to multiple resources.
SelectTurn on diagnosticsif no previous settings exist, or selectEdit settingto edit a previous setting.
You can create up to three (3) parallel connections to stream diagnostic telemetry.
Select+Add diagnostic settingto configure parallel streaming of diagnostics data to multiple resources.

Enter a setting name for your own reference.
Enter a setting name for your own reference.
Select a destination resource for the streaming diagnostics data:Archive to storage account,Stream to an event hub, orSend to Log Analytics.
Select a destination resource for the streaming diagnostics data:Archive to storage account,Stream to an event hub, orSend to Log Analytics.
Select the check boxes for database diagnostic telemetry:SQLInsights,QueryStoreRuntimeStatistics,QueryStoreWaitStatistics, andErrors.
Select the check boxes for database diagnostic telemetry:SQLInsights,QueryStoreRuntimeStatistics,QueryStoreWaitStatistics, andErrors.
SelectSave.
SelectSave.
Repeat these steps for each instance database you want to monitor.
Repeat these steps for each instance database you want to monitor.
Tip
Repeat these steps for each instance database you want to monitor.
Note
This article uses the Azure Az PowerShell module, which is the recommended PowerShell module for interacting with Azure. To get started with the Az PowerShell module, seeInstall Azure PowerShell. To learn how to migrate to the Az PowerShell module, seeMigrate Azure PowerShell from AzureRM to Az.
Important
The PowerShell Azure Resource Manager (AzureRM) module was deprecated on February 29, 2024. All future development should use the Az.Sql module. Users are advised to migrate from AzureRM to the Az PowerShell module to ensure continued support and updates. The AzureRM module is no longer maintained or supported. The arguments for the commands in the Az PowerShell module and in the AzureRM modules are substantially identical. For more about their compatibility, seeIntroducing the new Az PowerShell module.
You can enable metrics and diagnostics logging by using PowerShell.
To enable storage of metrics and resource logs in a storage account, use this command:Set-AzDiagnosticSetting -ResourceId [your resource id] -StorageAccountId [your storage account id] -Enabled $trueThe storage account ID is the resource ID for the destination storage account.
To enable storage of metrics and resource logs in a storage account, use this command:
Set-AzDiagnosticSetting -ResourceId [your resource id] -StorageAccountId [your storage account id] -Enabled $true
Set-AzDiagnosticSetting -ResourceId [your resource id] -StorageAccountId [your storage account id] -Enabled $true
The storage account ID is the resource ID for the destination storage account.
To enable streaming of metrics and resource logs to an event hub, use this command:Set-AzDiagnosticSetting -ResourceId [your resource id] -ServiceBusRuleId [your service bus rule id] -Enabled $trueThe Azure Service Bus rule ID is a string with this format:{service bus resource ID}/authorizationrules/{key name}
To enable streaming of metrics and resource logs to an event hub, use this command:
Set-AzDiagnosticSetting -ResourceId [your resource id] -ServiceBusRuleId [your service bus rule id] -Enabled $true
Set-AzDiagnosticSetting -ResourceId [your resource id] -ServiceBusRuleId [your service bus rule id] -Enabled $true
The Azure Service Bus rule ID is a string with this format:
{service bus resource ID}/authorizationrules/{key name}
{service bus resource ID}/authorizationrules/{key name}
To enable sending metrics and resource logs to a Log Analytics workspace, use this command:Set-AzDiagnosticSetting -ResourceId [your resource id] -WorkspaceId [resource id of the log analytics workspace] -Enabled $true
To enable sending metrics and resource logs to a Log Analytics workspace, use this command:
Set-AzDiagnosticSetting -ResourceId [your resource id] -WorkspaceId [resource id of the log analytics workspace] -Enabled $true
Set-AzDiagnosticSetting -ResourceId [your resource id] -WorkspaceId [resource id of the log analytics workspace] -Enabled $true
You can obtain the resource ID of your Log Analytics workspace by using the following command:(Get-AzOperationalInsightsWorkspace).ResourceId
You can obtain the resource ID of your Log Analytics workspace by using the following command:
(Get-AzOperationalInsightsWorkspace).ResourceId
(Get-AzOperationalInsightsWorkspace).ResourceId
You can combine these parameters to enable multiple output options.
To configure multiple Azure resources
To support multiple subscriptions, use the PowerShell script fromEnable Azure resource metrics logging using PowerShell.
Provide the workspace resource ID <$WSID> as a parameter when executing the scriptEnable-AzureRMDiagnostics.ps1to send diagnostic data from multiple resources to the workspace.
Enable-AzureRMDiagnostics.ps1
To get the workspace ID <$WSID> of the destination for your diagnostic data, use the following script:$WSID = "/subscriptions/<subID>/resourcegroups/<RG_NAME>/providers/microsoft.operationalinsights/workspaces/<WS_NAME>"
.\Enable-AzureRMDiagnostics.ps1 -WSID $WSIDReplace <subID> with the subscription ID, <RG_NAME> with the resource group name, and <WS_NAME> with the workspace name.
To get the workspace ID <$WSID> of the destination for your diagnostic data, use the following script:
$WSID = "/subscriptions/<subID>/resourcegroups/<RG_NAME>/providers/microsoft.operationalinsights/workspaces/<WS_NAME>"
.\Enable-AzureRMDiagnostics.ps1 -WSID $WSID
$WSID = "/subscriptions/<subID>/resourcegroups/<RG_NAME>/providers/microsoft.operationalinsights/workspaces/<WS_NAME>"
.\Enable-AzureRMDiagnostics.ps1 -WSID $WSID
Replace <subID> with the subscription ID, <RG_NAME> with the resource group name, and <WS_NAME> with the workspace name.
You can enable metrics and diagnostics logging by using the Azure CLI.
Important
Scripts to enable diagnostics logging are supported for Azure CLI v1.0. Azure CLI v2.0 is unsupported at this time.
To enable the storage of metrics and resource logs in a storage account, use this command:azure insights diagnostic set --resourceId <resourceId> --storageId <storageAccountId> --enabled trueThe storage account ID is the resource ID for the destination storage account.
To enable the storage of metrics and resource logs in a storage account, use this command:
azure insights diagnostic set --resourceId <resourceId> --storageId <storageAccountId> --enabled true
azure insights diagnostic set --resourceId <resourceId> --storageId <storageAccountId> --enabled true
The storage account ID is the resource ID for the destination storage account.
To enable the streaming of metrics and resource logs to an event hub, use this command:azure insights diagnostic set --resourceId <resourceId> --serviceBusRuleId <serviceBusRuleId> --enabled trueThe Service Bus rule ID is a string with this format:{service bus resource ID}/authorizationrules/{key name}
To enable the streaming of metrics and resource logs to an event hub, use this command:
azure insights diagnostic set --resourceId <resourceId> --serviceBusRuleId <serviceBusRuleId> --enabled true
azure insights diagnostic set --resourceId <resourceId> --serviceBusRuleId <serviceBusRuleId> --enabled true
The Service Bus rule ID is a string with this format:
{service bus resource ID}/authorizationrules/{key name}
{service bus resource ID}/authorizationrules/{key name}
To enable the sending of metrics and resource logs to a Log Analytics workspace, use this command:azure insights diagnostic set --resourceId <resourceId> --workspaceId <resource id of the log analytics workspace> --enabled true
To enable the sending of metrics and resource logs to a Log Analytics workspace, use this command:
azure insights diagnostic set --resourceId <resourceId> --workspaceId <resource id of the log analytics workspace> --enabled true
azure insights diagnostic set --resourceId <resourceId> --workspaceId <resource id of the log analytics workspace> --enabled true
You can combine these parameters to enable multiple output options.
Stream into SQL Analytics
Azure SQL Database and Azure SQL Managed Instance metrics and resource logs that are streamed into a Log Analytics workspace can be consumed by Azure SQL Analytics. Azure SQL Analytics is a cloud solution that monitors the performance of single databases, elastic pools and pooled databases, and managed instances and instance databases at scale and across multiple subscriptions. It can help you collect and visualize performance metrics, and it has built-in intelligence for performance troubleshooting.

Installation overview
You can monitor a collection of databases and database collections with Azure SQL Analytics by performing the following steps:
Create an Azure SQL Analytics solution from the Azure Marketplace.
Create a Log Analytics workspace in the solution.
Configure databases to stream diagnostic telemetry into the workspace.
You can configure the streaming export of this diagnostic telemetry by using the built-inSend to Log Analyticsoption in the diagnostics settings tab in the Azure portal. You can also enable streaming into a Log Analytics workspace by using diagnostics settings viaPowerShell cmdlets, theAzure CLI, theAzure Monitor REST API, orResource Manager templates.
Create an Azure SQL Analytics resource
Search for Azure SQL Analytics in Azure Marketplace and select it.
Search for Azure SQL Analytics in Azure Marketplace and select it.

SelectCreateon the solution's overview screen.
SelectCreateon the solution's overview screen.
Fill in the Azure SQL Analytics form with the additional information that is required: workspace name, subscription, resource group, location, and pricing tier.
Fill in the Azure SQL Analytics form with the additional information that is required: workspace name, subscription, resource group, location, and pricing tier.

SelectOKto confirm, and then selectCreate.
SelectOKto confirm, and then selectCreate.
Configure the resource to record metrics and resource logs
You need to separately configure diagnostic telemetry streaming for single and pooled databases, elastic pools, managed instances, and instance databases. The easiest way to configure where a resource records its metrics is by using the Azure portal. For detailed steps, seeConfigure the streaming export of diagnostic telemetry.
Use Azure SQL Analytics for monitoring and alerting
You can use SQL Analytics as a hierarchical dashboard to view your database resources.
To learn how to use Azure SQL Analytics, seeMonitor by using SQL Analytics.
To learn how to set up alerts for in SQL Analytics, seeCreating alerts for database, elastic pools, and managed instances.
Stream into Event Hubs
You can stream Azure SQL Database and Azure SQL Managed Instance metrics and resource logs into Event Hubs by using the built-inStream to an event huboption in the Azure portal. You also can enable the Service Bus rule ID by using diagnostics settings via PowerShell cmdlets, the Azure CLI, or the Azure Monitor REST API. Be sure that the event hub is in the same region as your database and server.
What to do with metrics and resource logs in Event Hubs
After the selected data is streamed into Event Hubs, you're one step closer to enabling advanced monitoring scenarios. Event Hubs acts as the front door for an event pipeline. After data is collected into an event hub, it can be transformed and stored by using a real-time analytics provider or a storage adapter. Event Hubs decouples the production of a stream of events from the consumption of those events. In this way, event consumers can access the events on their own schedule. For more information on Event Hubs, see:
About Azure Event Hubs
Get started with Event Hubs
You can use streamed metrics in Event Hubs to:
View service health by streaming hot-path data to Power BIBy using Event Hubs, Stream Analytics, and Power BI, you can easily transform your metrics and diagnostics data into near real-time insights on your Azure services. For an overview of how to set up an event hub, process data with Stream Analytics, and use Power BI as an output, seeStream Analytics and Power BI.
View service health by streaming hot-path data to Power BI
By using Event Hubs, Stream Analytics, and Power BI, you can easily transform your metrics and diagnostics data into near real-time insights on your Azure services. For an overview of how to set up an event hub, process data with Stream Analytics, and use Power BI as an output, seeStream Analytics and Power BI.
Stream logs to third-party logging and telemetry streamsBy using Event Hubs streaming, you can get your metrics and resource logs into various third-party monitoring and log analytics solutions.
Stream logs to third-party logging and telemetry streams
By using Event Hubs streaming, you can get your metrics and resource logs into various third-party monitoring and log analytics solutions.
Build a custom telemetry and logging platformDo you already have a custom-built telemetry platform or are considering building one? The highly scalable publish-subscribe nature of Event Hubs allows you to flexibly ingest metrics and resource logs. For more information, seeAzure Event Hubs.
Build a custom telemetry and logging platform
Do you already have a custom-built telemetry platform or are considering building one? The highly scalable publish-subscribe nature of Event Hubs allows you to flexibly ingest metrics and resource logs. For more information, seeAzure Event Hubs.
Stream into Azure Storage
You can store metrics and resource logs in Azure Storage by using the built-inArchive to a storage accountoption in the Azure portal. You can also enable Storage by using diagnostics settings via PowerShell cmdlets, the Azure CLI, or the Azure Monitor REST API.
Schema of metrics and resource logs in the storage account
After you set up metrics and resource logs collection, a storage container is created in the storage account you selected when the first rows of data are available. The structure of the blobs is:
insights-{metrics|logs}-{category name}/resourceId=/SUBSCRIPTIONS/{subscription ID}/ RESOURCEGROUPS/{resource group name}/PROVIDERS/Microsoft.SQL/servers/{resource_server}/ databases/{database_name}/y={four-digit numeric year}/m={two-digit numeric month}/d={two-digit numeric day}/h={two-digit 24-hour clock hour}/m=00/PT1H.json
insights-{metrics|logs}-{category name}/resourceId=/SUBSCRIPTIONS/{subscription ID}/ RESOURCEGROUPS/{resource group name}/PROVIDERS/Microsoft.SQL/servers/{resource_server}/ databases/{database_name}/y={four-digit numeric year}/m={two-digit numeric month}/d={two-digit numeric day}/h={two-digit 24-hour clock hour}/m=00/PT1H.json
Or, more simply:
insights-{metrics|logs}-{category name}/resourceId=/{resource Id}/y={four-digit numeric year}/m={two-digit numeric month}/d={two-digit numeric day}/h={two-digit 24-hour clock hour}/m=00/PT1H.json
insights-{metrics|logs}-{category name}/resourceId=/{resource Id}/y={four-digit numeric year}/m={two-digit numeric month}/d={two-digit numeric day}/h={two-digit 24-hour clock hour}/m=00/PT1H.json
For example, a blob name for Basic metrics might be:
insights-metrics-minute/resourceId=/SUBSCRIPTIONS/a0a0a0a0-bbbb-cccc-dddd-e1e1e1e1e1e1/RESOURCEGROUPS/TESTRESOURCEGROUP/PROVIDERS/MICROSOFT.SQL/ servers/Server1/databases/database1/y=2016/m=08/d=22/h=18/m=00/PT1H.json
insights-metrics-minute/resourceId=/SUBSCRIPTIONS/a0a0a0a0-bbbb-cccc-dddd-e1e1e1e1e1e1/RESOURCEGROUPS/TESTRESOURCEGROUP/PROVIDERS/MICROSOFT.SQL/ servers/Server1/databases/database1/y=2016/m=08/d=22/h=18/m=00/PT1H.json
A blob name for storing data from an elastic pool looks like:
insights-{metrics|logs}-{category name}/resourceId=/SUBSCRIPTIONS/{subscription ID}/ RESOURCEGROUPS/{resource group name}/PROVIDERS/Microsoft.SQL/servers/{resource_server}/ elasticPools/{elastic_pool_name}/y={four-digit numeric year}/m={two-digit numeric month}/d={two-digit numeric day}/h={two-digit 24-hour clock hour}/m=00/PT1H.json
insights-{metrics|logs}-{category name}/resourceId=/SUBSCRIPTIONS/{subscription ID}/ RESOURCEGROUPS/{resource group name}/PROVIDERS/Microsoft.SQL/servers/{resource_server}/ elasticPools/{elastic_pool_name}/y={four-digit numeric year}/m={two-digit numeric month}/d={two-digit numeric day}/h={two-digit 24-hour clock hour}/m=00/PT1H.json
Data retention policy and pricing
If you select Event Hubs or a Storage account, you can specify a retention policy. This policy deletes data that is older than a selected time period. If you specify Log Analytics, the retention policy depends on the selected pricing tier. In this case, the provided free units of data ingestion can enable free monitoring of several databases each month. Any consumption of diagnostic telemetry in excess of the free units might incur costs.
Important
Active databases with heavier workloads ingest more data than idle databases. For more information, seeLog analytics pricing.
If you are using Azure SQL Analytics, you can monitor your data ingestion consumption by selectingOMS Workspaceon the navigation menu of Azure SQL Analytics, and then selectingUsageandEstimated Costs.
Metrics and logs available
The monitoring telemetry available for single databases, pooled databases, elastic pools, managed instances, and instance databases, is documented in this section of the article. Collected monitoring telemetry inside SQL Analytics can be used for your own custom analysis and application development usingAzure Monitor log querieslanguage.
Basic metrics
Refer to the following tables for details about Basic metrics by resource.
Note
Basic metrics option was formerly known as All metrics. The change made was to the naming only and there was no change to the metrics monitored. This change was initiated to allow for introduction of additional metric categories in the future.
Advanced metrics
Refer to the following table for details about advanced metrics.
tempdb
tempdb
tempdb
tempdb
tempdb
tempdb
1This metric is available for databases using the vCore purchasing model with 2 vCores and higher, or 200 DTU and higher for DTU-based purchasing models.
2This metric is available for databases using the vCore purchasing model with 2 vCores and higher, or 200 DTU and higher for DTU-based purchasing models. This metric isn't currently available for Synapse Analytics SQL pools.
Note
Both Basic and Advanced metrics may be unavailable for databases that have been inactive for 7 days or longer.
Basic logs
Details of telemetry available for all logs are documented in the following tables. For more information, seesupported diagnostic telemetry.
Learn more aboutQuery Store runtime statistics data.
Learn more aboutQuery Store wait statistics data.
Learn more aboutSQL error messages.
Learn more aboutdatabase wait statistics.
Tip
query_hash_sandquery_plan_hash_sare provided as numeric values. If you want to find the matching queries and query plans inQuery Store, use the following T-SQL expression to convert numeric hash values to binary hash values used insys.query_store_queryandsys.query_store_plan:
query_hash_s
query_plan_hash_s
SELECT CAST(CAST(hash_value as bigint) AS binary(8)).
SELECT CAST(CAST(hash_value as bigint) AS binary(8))
Replace thehash_valueplaceholder with the actualquery_hash_sorquery_plan_hash_snumeric value.
hash_value
query_hash_s
query_plan_hash_s
Learn more about theIntelligent Insights log format.
Next steps
To learn how to enable logging and to understand the metrics and log categories supported by the various Azure services, see:
Overview of metrics in Microsoft Azure
Overview of Azure platform logs
To learn about Event Hubs, read:
What is Azure Event Hubs?
Get started with Event Hubs
To learn how to set up alerts based on telemetry from log analytics see:
Creating alerts for Azure SQL Database and Azure SQL Managed Instance
Feedback
Was this page helpful?
Additional resources