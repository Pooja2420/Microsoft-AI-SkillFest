Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Long-term support for Azure Kubernetes Service (AKS) versions
Article
2025-04-03
14 contributors
In this article
The Kubernetes community releases a new minor version approximately every four months, with a support window for each version for one year. In Azure Kubernetes Service (AKS), this support window is calledcommunity support.
AKS supports versions of Kubernetes that are within thiscommunity supportwindow to push bug fixes and security updates from community releases. While the community support release cadence provides benefits, it requires that you keep up to date with Kubernetes releases, which can be difficult depending on your application's dependencies and the pace of change in the Kubernetes ecosystem.
To help you manage your Kubernetes version upgrades, AKS provides along-term support(LTS) option, which extends the support window for a Kubernetes version to give you more time to plan and test upgrades to newer Kubernetes versions.
AKS support types
After approximately one year, a given Kubernetes minor version exitscommunity support, making bug fixes and security updates unavailable for your AKS clusters.
AKS provides one year ofcommunity supportand one year oflong-term supportto back port security fixes from the community upstream in the public AKS repository. The upstream LTS working group contributes efforts back to the community to provide customers with a longer support window. LTS intends to give you an extended period of time to plan and test for upgrades over a two-year period from the general availability (GA) of the designated Kubernetes version.
Enable long-term support
Enabling LTS requires moving your cluster to the Premium tier and explicitly selecting the LTS support plan. While it's possible to enable LTS when the cluster is in *community support, you are charged once you enable the Premium tier.
Enable LTS on a new cluster
Create a new cluster with LTS enabled using theaz aks createcommand.The following command creates a new AKS cluster with LTS enabled using Kubernetes version 1.27 as an example. To review available Kubernetes releases, see theAKS release tracker.az aks create \
    --resource-group <resource-group-name> \
    --name <cluster-name> \
    --tier premium \
    --k8s-support-plan AKSLongTermSupport \
    --kubernetes-version 1.27 \
    --generate-ssh-keys
Create a new cluster with LTS enabled using theaz aks createcommand.
az aks create
The following command creates a new AKS cluster with LTS enabled using Kubernetes version 1.27 as an example. To review available Kubernetes releases, see theAKS release tracker.
az aks create \
    --resource-group <resource-group-name> \
    --name <cluster-name> \
    --tier premium \
    --k8s-support-plan AKSLongTermSupport \
    --kubernetes-version 1.27 \
    --generate-ssh-keys
az aks create \
    --resource-group <resource-group-name> \
    --name <cluster-name> \
    --tier premium \
    --k8s-support-plan AKSLongTermSupport \
    --kubernetes-version 1.27 \
    --generate-ssh-keys
Enable LTS on an existing cluster
Enable LTS on an existing cluster using theaz aks updatecommand.az aks update --resource-group <resource-group-name> --name <cluster-name> --tier premium --k8s-support-plan AKSLongTermSupport
Enable LTS on an existing cluster using theaz aks updatecommand.
az aks update
az aks update --resource-group <resource-group-name> --name <cluster-name> --tier premium --k8s-support-plan AKSLongTermSupport
az aks update --resource-group <resource-group-name> --name <cluster-name> --tier premium --k8s-support-plan AKSLongTermSupport
Migrate to the latest LTS version
The upstream Kubernetes community supports a two-minor-version upgrade path. The process migrates the objects in your Kubernetes cluster as part of the upgrade process, and provides a tested and accredited migration path.
If you want to carry out an in-place migration, the AKS service migrates your control plane from the previous LTS version to the latest, and then migrate your data plane. To carry out an in-place upgrade to the latest LTS version, you need to specify an LTS enabled Kubernetes version as the upgrade target.
Migrate to the latest LTS version using theaz aks upgradecommand.The following command uses Kubernetes version 1.32.2 as an example version. To review available Kubernetes releases, see theAKS release tracker.az aks upgrade --resource-group <resource-group-name> --name <cluster-name> --kubernetes-version 1.32.2NoteStarting with kubernetes version 1.28, every kubernetes version is long term support compatible. Please checksupported version calendarfor more details on timelines.
Supported Patches in LTS today :1.27.100Currently LTS only supports the two most recent patches and prior old patches get deprecated.
Migrate to the latest LTS version using theaz aks upgradecommand.
az aks upgrade
The following command uses Kubernetes version 1.32.2 as an example version. To review available Kubernetes releases, see theAKS release tracker.
az aks upgrade --resource-group <resource-group-name> --name <cluster-name> --kubernetes-version 1.32.2
az aks upgrade --resource-group <resource-group-name> --name <cluster-name> --kubernetes-version 1.32.2
Note
Starting with kubernetes version 1.28, every kubernetes version is long term support compatible. Please checksupported version calendarfor more details on timelines.
Supported Patches in LTS today :1.27.100Currently LTS only supports the two most recent patches and prior old patches get deprecated.
Disable long-term support on an existing cluster
Disabling LTS on an existing cluster requires moving your cluster to the free or standard tier and explicitly selecting the KubernetesOfficial support plan.
There are approximately two years between one LTS version and the next. In lieu of upstream support for migrating more than two minor versions, there's a high likelihood your application depends on Kubernetes APIs that are deprecated. We recommend you thoroughly test your application on the target LTS Kubernetes version and carry out a blue/green deployment from one version to another.
Disable LTS on an existing cluster using theaz aks updatecommand.az aks update --resource-group <resource-group-name> --name <cluster-name> --tier [free|standard] --k8s-support-plan KubernetesOfficial
Disable LTS on an existing cluster using theaz aks updatecommand.
az aks update
az aks update --resource-group <resource-group-name> --name <cluster-name> --tier [free|standard] --k8s-support-plan KubernetesOfficial
az aks update --resource-group <resource-group-name> --name <cluster-name> --tier [free|standard] --k8s-support-plan KubernetesOfficial
Upgrade the cluster to a later supported version using theaz aks upgradecommand.The following command uses Kubernetes version 1.28.3 as an example version. To review available Kubernetes releases, see theAKS release tracker.az aks upgrade --resource-group <resource-group-name> --name <cluster-name> --kubernetes-version 1.28.3
Upgrade the cluster to a later supported version using theaz aks upgradecommand.
az aks upgrade
The following command uses Kubernetes version 1.28.3 as an example version. To review available Kubernetes releases, see theAKS release tracker.
az aks upgrade --resource-group <resource-group-name> --name <cluster-name> --kubernetes-version 1.28.3
az aks upgrade --resource-group <resource-group-name> --name <cluster-name> --kubernetes-version 1.28.3
Unsupported add-ons and features
The AKS team currently tracks add-on versions where Kubernetes community support exists. Once a version leaves community support, we rely on open-source projects for managed add-ons to continue that support. Due to various external factors, some add-ons and features might not support Kubernetes versions outside these upstream community support windows.
The following table provides a list of add-ons and features that aren't supported and the reasons they're unsupported:
Note
You can't move your cluster to long-term support if any of these add-ons or features are enabled.
While these AKS managed add-ons aren't supported by Microsoft, you can install their open-source versions on your cluster if you want to use them past community support.
How we decide the next LTS version
Versions of Kubernetes LTS are available for two years from GA, and we mark a higher version of Kubernetes as LTS based on the following criteria:
That sufficient time elapsed for customers to migrate from the prior LTS version to the current LTS version.
The previous version completed a two year support window.
Read theAKS release notesto stay informed of when you're able to plan your migration.
Frequently asked questions
Community support for AKS 1.27 ends expires in July 2024. Can I create a new AKS cluster with version 1.27 after that date?
Yes, as long as LTS is enabled on the cluster, you can create a new AKS cluster with version 1.27 after the community support window ends.
Can I enable and disable LTS on AKS 1.27 after the end of community support?
You can enable the LTS support plan on AKS 1.27 after the end of community support. However, you can't disable LTS on AKS 1.27 after the end of community support.
I have a cluster running on version 1.27. Does it mean it's automatically in LTS?
No, you need to explicitly enable LTS on the cluster to receive LTS support. Enabling LTS also requires being on the Premium tier.
What is the pricing model for LTS?
LTS is available on the Premium tier refer to thePremium tier pricingfor more information.
After enabling LTS, my cluster's autoUpgradeChannel changed to patch channel
This is expected. If there was no defined autoUpgradeChannel for the AKS cluster, it will default topatchwith LTS.
patch
Azure Kubernetes Service

Additional resources