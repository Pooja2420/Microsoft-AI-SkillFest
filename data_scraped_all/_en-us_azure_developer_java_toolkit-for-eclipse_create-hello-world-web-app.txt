Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Create a Hello World web app for Azure App Service using Eclipse
Article
2023-05-30
7 contributors
In this article
This article demonstrates the steps that are required to create a basic Hello World web app and publish your web app to Azure App Service by using theAzure Toolkit for Eclipse.
Note
If you prefer using IntelliJ IDEA, check out oursimilar tutorial for IntelliJ.
If you don't have anAzure subscription, create afree accountbefore you begin.
Don't forget to clean up the resources after you complete this tutorial. In that case, running this guide will not exceed your free account quota.
Prerequisites
To complete the steps in this article, you'll need to install the Azure Toolkit for Eclipse, which requires the following software components:
AnAzure supported Java Development Kit (JDK)
AnEclipse IDE
Note
TheAzure Toolkit for Eclipsepage at the Eclipse Marketplace lists the builds that are compatible with the toolkit.
Installation and sign-in
The following steps walk you through the Azure sign in process in your Eclipse development environment.
If you haven't installed the plugin, seeInstalling the Azure Toolkit for Eclipse.
If you haven't installed the plugin, seeInstalling the Azure Toolkit for Eclipse.
To sign in to your Azure account, clickTools, clickAzure, and then clickSign In.
To sign in to your Azure account, clickTools, clickAzure, and then clickSign In.

In theAzure Sign Inwindow, selectDevice Login, and then clickSign in(other sign-in options).
In theAzure Sign Inwindow, selectDevice Login, and then clickSign in(other sign-in options).
ClickCopy&Openin theAzure Device Logindialog.
ClickCopy&Openin theAzure Device Logindialog.
In the browser, paste your device code (which has been copied when you clickedCopy&Openin last step) and then clickNext.
In the browser, paste your device code (which has been copied when you clickedCopy&Openin last step) and then clickNext.
Select your Azure account and complete any authentication procedures necessary in order to sign in.
Select your Azure account and complete any authentication procedures necessary in order to sign in.
Once signed in, close your browser and switch back to your Eclipse IDE. In theSelect Subscriptionsdialog box, select the subscriptions that you want to use, then clickSelect.
Once signed in, close your browser and switch back to your Eclipse IDE. In theSelect Subscriptionsdialog box, select the subscriptions that you want to use, then clickSelect.
Install required software (optional)
To ensure you have required components to work with web app projects, follow these steps:
Click theHelpmenu, and then clickInstall New Software.
Click theHelpmenu, and then clickInstall New Software.
In theAvailable Softwaredialog, clickManage, and make sure the latest Eclipse version is selected - for example,2020-06.
In theAvailable Softwaredialog, clickManage, and make sure the latest Eclipse version is selected - for example,2020-06.
ClickApply and Close. Expand theWork with:dropdown menu to show suggested sites. Select the latest Eclipse version site to query available software.
ClickApply and Close. Expand theWork with:dropdown menu to show suggested sites. Select the latest Eclipse version site to query available software.
Scroll down the list and select theWeb, XML, Java EE and OSGi Enterprise Developmentitem. ClickNext.
Scroll down the list and select theWeb, XML, Java EE and OSGi Enterprise Developmentitem. ClickNext.
In the Install Details window, clickNext.
In the Install Details window, clickNext.
In the Review Licenses dialog, review the terms of the license agreements. If you accept the terms of the license agreements, clickI accept the terms of the license agreementsand then clickFinish.NoteYou can check the installation progress on the lower-right corner of your Eclipse workspace.
In the Review Licenses dialog, review the terms of the license agreements. If you accept the terms of the license agreements, clickI accept the terms of the license agreementsand then clickFinish.
Note
You can check the installation progress on the lower-right corner of your Eclipse workspace.
If prompted to restart Eclipse to complete installation, clickRestart Now.
If prompted to restart Eclipse to complete installation, clickRestart Now.
Creating a web app project
ClickFile, expandNew, and then click...Project. Inside the New Project dialog window, expandWeb, selectDynamic Web Project, and clickNext.TipIf you don't seeWeblisted as an available project, seethis sectionto make sure you have the required Eclipse software.
ClickFile, expandNew, and then click...Project. Inside the New Project dialog window, expandWeb, selectDynamic Web Project, and clickNext.
Tip
If you don't seeWeblisted as an available project, seethis sectionto make sure you have the required Eclipse software.
For purposes of this tutorial, name the projectMyWebApp. Your screen will appear similar to the following:
For purposes of this tutorial, name the projectMyWebApp. Your screen will appear similar to the following:

ClickFinish.
ClickFinish.
On the left-hand Package Explorer pane, expandMyWebApp. Right-clickWebContent, hover overNew, and then clickOther....
On the left-hand Package Explorer pane, expandMyWebApp. Right-clickWebContent, hover overNew, and then clickOther....
ExpandWebto find theJSP Fileoption. ClickNext.
ExpandWebto find theJSP Fileoption. ClickNext.
In theNew JSP Filedialog box, name the fileindex.jsp, keep the parent folder asMyWebApp/WebContent, and then clickNext.
In theNew JSP Filedialog box, name the fileindex.jsp, keep the parent folder asMyWebApp/WebContent, and then clickNext.

In theSelect JSP Templatedialog box, for purposes of this tutorial, selectNew JSP File (html 5), and then clickFinish.
In theSelect JSP Templatedialog box, for purposes of this tutorial, selectNew JSP File (html 5), and then clickFinish.
When your index.jsp file opens in Eclipse, add in text to dynamically displayHello World!within the existing<body>element. Your updated<body>content should resemble the following example:<body>
<b><% out.println("Hello World!"); %></b>
</body>
When your index.jsp file opens in Eclipse, add in text to dynamically displayHello World!within the existing<body>element. Your updated<body>content should resemble the following example:
<body>
<body>
<body>
<b><% out.println("Hello World!"); %></b>
</body>
<body>
<b><% out.println("Hello World!"); %></b>
</body>
Save index.jsp.
Save index.jsp.
Deploying the web app to Azure
On the left-hand Package Explorer pane, right-click your project, chooseAzure, and then choosePublish as Azure Web App.
On the left-hand Package Explorer pane, right-click your project, chooseAzure, and then choosePublish as Azure Web App.

When theDeploy Web Appdialog box appears, you can choose one of the following options:Select an existing web app if one exists.If you do not have an existing web app, clickCreate.Here you can configure the runtime environment, app service plan resource group, and app settings. Create new resources if necessary.Specify the requisite information for your web app in theCreate App Servicedialog box, and then clickCreate.
When theDeploy Web Appdialog box appears, you can choose one of the following options:
Select an existing web app if one exists.
Select an existing web app if one exists.
If you do not have an existing web app, clickCreate.Here you can configure the runtime environment, app service plan resource group, and app settings. Create new resources if necessary.Specify the requisite information for your web app in theCreate App Servicedialog box, and then clickCreate.
If you do not have an existing web app, clickCreate.
Here you can configure the runtime environment, app service plan resource group, and app settings. Create new resources if necessary.
Specify the requisite information for your web app in theCreate App Servicedialog box, and then clickCreate.
Select your web app and then clickDeploy.
Select your web app and then clickDeploy.
The toolkit will display aPublishedstatus under theAzure Activity Logtab when it has successfully deployed your web app, which is a hyperlink for the URL of your deployed web app.
The toolkit will display aPublishedstatus under theAzure Activity Logtab when it has successfully deployed your web app, which is a hyperlink for the URL of your deployed web app.
You can browse to your web app using the link provided in the status message.
You can browse to your web app using the link provided in the status message.

Cleaning up resources
After you have published your web app to Azure, you can manage it by right-clicking in Azure Explorer and selecting one of the options in the context menu. For example, you canDeleteyour web app here to clean up the resource for this tutorial.
After you have published your web app to Azure, you can manage it by right-clicking in Azure Explorer and selecting one of the options in the context menu. For example, you canDeleteyour web app here to clean up the resource for this tutorial.

Displaying the Azure Explorer view
If theAzure Explorerview is not visible in Eclipse, display it by doing the following:
ClickWindow, hover overShow View, and then clickOther.
ClickWindow, hover overShow View, and then clickOther.
In theShow Viewdialog box, expandAzure, selectAzure Explorer, and then clickOpen.
In theShow Viewdialog box, expandAzure, selectAzure Explorer, and then clickOpen.

Next steps
To report bugs or request new features, create issues onour GitHub repository. Or, ask questions onStack Overflow with tag azure-java-tools.
For more information about using Java with Azure, see the following links:
Azure for Java Developers
Java with Azure DevOps Services
Java support on Azure and Azure Stack
For additional information about creating Azure Web Apps, see theWeb Apps Overview.
Feedback
Was this page helpful?
Additional resources