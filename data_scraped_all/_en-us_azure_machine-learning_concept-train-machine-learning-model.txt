Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Train models with Azure Machine Learning
Article
2024-08-28
22 contributors
In this article
APPLIES TO:Python SDK azure-ai-mlv2 (current)
Azure Machine Learning provides several ways to train your models, from code-first solutions using the SDK to low-code solutions such as automated machine learning and the visual designer. Use the following list to determine which training method is right for you:
Azure Machine Learning SDK for Python: The Python SDK provides several ways to train models, each with different capabilities.Training methodDescriptioncommand()Atypical way to train modelsis to submit a command() that includes a training script, environment, and compute information.Automated machine learningAutomated machine learning allows you totrain models without extensive data science or programming knowledge. For people with a data science and programming background, it provides a way to save time and resources by automating algorithm selection and hyperparameter tuning. You don't have to worry about defining a job configuration when using automated machine learning.Machine learning pipelinePipelines aren't a different training method, but away of defining a workflow using modular, reusable stepsthat can include training as part of the workflow. Machine learning pipelines support using automated machine learning and run configuration to train models. Since pipelines aren't focused specifically on training, the reasons for using a pipeline are more varied than the other training methods. Generally, you might use a pipeline when:* You want toschedule unattended processessuch as long running training jobs or data preparation.* Usemultiple stepsthat are coordinated across heterogeneous compute resources and storage locations.* Use the pipeline as areusable templatefor specific scenarios, such as retraining or batch scoring.*Track and version data sources, inputs, and outputsfor your workflow.* Your workflow isimplemented by different teams that work on specific steps independently. Steps can then be joined together in a pipeline to implement the workflow.
Azure Machine Learning SDK for Python: The Python SDK provides several ways to train models, each with different capabilities.
Designer: Azure Machine Learning designer provides an easy entry-point into machine learning for building proof of concepts, or for users with little coding experience. It allows you to train models using a drag and drop web-based UI. You can use Python code as part of the design, or train models without writing any code.
Designer: Azure Machine Learning designer provides an easy entry-point into machine learning for building proof of concepts, or for users with little coding experience. It allows you to train models using a drag and drop web-based UI. You can use Python code as part of the design, or train models without writing any code.
Azure CLI: The machine learning CLI provides commands for common tasks with Azure Machine Learning, and is often used forscripting and automating tasks. For example, once you've created a training script or pipeline, you might use the Azure CLI to start a training job on a schedule or when the data files used for training are updated. For training models, it provides commands that submit training jobs. It can submit jobs using run configurations or pipelines.
Azure CLI: The machine learning CLI provides commands for common tasks with Azure Machine Learning, and is often used forscripting and automating tasks. For example, once you've created a training script or pipeline, you might use the Azure CLI to start a training job on a schedule or when the data files used for training are updated. For training models, it provides commands that submit training jobs. It can submit jobs using run configurations or pipelines.
Each of these training methods can use different types of compute resources for training. Collectively, these resources are referred to ascompute targets. A compute target can be a local machine or a cloud resource, such as an Azure Machine Learning Compute, Azure HDInsight, or a remote virtual machine.
Python SDK
The Azure Machine Learning SDK for Python allows you to build and run machine learning workflows with Azure Machine Learning. You can interact with the service from an interactive Python session, Jupyter Notebooks, Visual Studio Code, or other IDE.
Install/update the SDK
Configure a development environment for Azure Machine Learning
Submit a command
A generic training job with Azure Machine Learning can be defined using thecommand(). The command is then used, along with your training scripts to train a model on the specified compute target.
You are able to start with a command for your local computer, and then switch to one for a cloud-based compute target as needed. When changing the compute target, you only change the compute parameter in the command that you use. A run also logs information about the training job, such as the inputs, outputs, and logs.
Tutorial: Train your first ML model
Examples: Jupyter Notebook and Python examples of training models
Automated Machine Learning
Define the iterations, hyperparameter settings, featurization, and other settings. During training, Azure Machine Learning tries different algorithms and parameters in parallel. Training stops once it hits the exit criteria you defined.
Tip
In addition to the Python SDK, you can also use Automated ML throughAzure Machine Learning studio.
What is automated machine learning?
Tutorial: Create your first classification model with automated machine learning
How to: Configure automated ML experiments in Python
How to: Create, explore, and deploy automated machine learning experiments with Azure Machine Learning studio
Machine learning pipeline
Machine learning pipelines can use the previously mentioned training methods. Pipelines are more about creating a workflow, so they encompass more than just the training of models.
What are ML pipelines in Azure Machine Learning?
Tutorial: Create production ML pipelines with Python SDK v2 in a Jupyter notebook
Understand what happens when you submit a training job
The Azure training lifecycle consists of:
Zipping the files in your project folder and upload to the cloud.TipTo prevent unnecessary files from being included in the snapshot, make an ignore file (.gitignoreor.amlignore) in the directory. Add the files and directories to exclude to this file. For more information on the syntax to use inside this file, seesyntax and patternsfor.gitignore. The.amlignorefile uses the same syntax.If both files exist, the.amlignorefile is used and the.gitignorefile is unused.
Zipping the files in your project folder and upload to the cloud.
Tip
To prevent unnecessary files from being included in the snapshot, make an ignore file (.gitignoreor.amlignore) in the directory. Add the files and directories to exclude to this file. For more information on the syntax to use inside this file, seesyntax and patternsfor.gitignore. The.amlignorefile uses the same syntax.If both files exist, the.amlignorefile is used and the.gitignorefile is unused.
.gitignore
.amlignore
.gitignore
.amlignore
.amlignore
.gitignore
Scaling up your compute cluster (orserverless compute
Scaling up your compute cluster (orserverless compute
Building or downloading the dockerfile to the compute nodeThe system calculates a hash of:The base imageCustom docker steps (seeDeploy a model using a custom Docker base image)The conda definition YAML (seeManage Azure Machine Learning environments with the CLI (v2)))The system uses this hash as the key in a lookup of the workspace Azure Container Registry (ACR)If it isn't found, it looks for a match in the global ACRIf it isn't found, the system builds a new image (which will be cached and registered with the workspace ACR)
Building or downloading the dockerfile to the compute node
The system calculates a hash of:The base imageCustom docker steps (seeDeploy a model using a custom Docker base image)The conda definition YAML (seeManage Azure Machine Learning environments with the CLI (v2)))
The base image
Custom docker steps (seeDeploy a model using a custom Docker base image)
The conda definition YAML (seeManage Azure Machine Learning environments with the CLI (v2)))
The system uses this hash as the key in a lookup of the workspace Azure Container Registry (ACR)
If it isn't found, it looks for a match in the global ACR
If it isn't found, the system builds a new image (which will be cached and registered with the workspace ACR)
Downloading your zipped project file to temporary storage on the compute node
Downloading your zipped project file to temporary storage on the compute node
Unzipping the project file
Unzipping the project file
The compute node executingpython <entry script> <arguments>
The compute node executingpython <entry script> <arguments>
python <entry script> <arguments>
Saving logs, model files, and other files written to./outputsto the storage account associated with the workspace
Saving logs, model files, and other files written to./outputsto the storage account associated with the workspace
./outputs
Scaling down compute, including removing temporary storage
Scaling down compute, including removing temporary storage
Azure Machine Learning designer
The designer lets you train models using a drag and drop interface in your web browser.
What is the designer?
Azure CLI
The machine learning CLI is an extension for the Azure CLI. It provides cross-platform CLI commands for working with Azure Machine Learning. Typically, you use the CLI to automate tasks, such as training a machine learning model.
Use the CLI extension for Azure Machine Learning
MLOps on Azure
Train models
VS Code
You can use the VS Code extension to run and manage your training jobs. See theVS Code resource management how-to guideto learn more.
Next steps
Learn how toTutorial: Create production ML pipelines with Python SDK v2 in a Jupyter notebook.
Feedback
Was this page helpful?
Additional resources