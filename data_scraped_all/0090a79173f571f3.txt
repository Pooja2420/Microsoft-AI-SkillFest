Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Quickstart: Set up sign in for an ASP.NET application using Azure Active Directory B2C
Article
2023-04-17
9 contributors
In this article
Azure Active Directory B2C (Azure AD B2C) provides cloud identity management to keep your application, business, and customers protected. Azure AD B2C enables your applications to authenticate to social accounts and enterprise accounts using open standard protocols.
In this quickstart, you use an ASP.NET application to sign in using a social identity provider and call an Azure AD B2C protected web API.
Prerequisites
Visual Studio 2022with theASP.NET and web developmentworkload.
Visual Studio 2022with theASP.NET and web developmentworkload.
A social account from Facebook, Google, or Microsoft.
A social account from Facebook, Google, or Microsoft.
Download a zip fileor clone the sample web application from GitHub.git clone https://github.com/Azure-Samples/active-directory-b2c-dotnet-webapp-and-webapi.gitThere are two projects in the sample solution:TaskWebApp- A web application that creates and edits a task list. The web application uses thesign-up or sign-inuser flow to sign up or sign in users.TaskService- A web API that supports the create, read, update, and delete task list functionality. The web API is protected by Azure AD B2C and called by the web application.
Download a zip fileor clone the sample web application from GitHub.
git clone https://github.com/Azure-Samples/active-directory-b2c-dotnet-webapp-and-webapi.git
git clone https://github.com/Azure-Samples/active-directory-b2c-dotnet-webapp-and-webapi.git
There are two projects in the sample solution:
TaskWebApp- A web application that creates and edits a task list. The web application uses thesign-up or sign-inuser flow to sign up or sign in users.
TaskService- A web API that supports the create, read, update, and delete task list functionality. The web API is protected by Azure AD B2C and called by the web application.
Run the application in Visual Studio
In the sample application project folder, open theB2C-WebAPI-DotNet.slnsolution in Visual Studio.
In the sample application project folder, open theB2C-WebAPI-DotNet.slnsolution in Visual Studio.
For this quickstart, you run both theTaskWebAppandTaskServiceprojects at the same time. Right-click theB2C-WebAPI-DotNetsolution in Solution Explorer, and then selectConfigure StartUp Projects....
For this quickstart, you run both theTaskWebAppandTaskServiceprojects at the same time. Right-click theB2C-WebAPI-DotNetsolution in Solution Explorer, and then selectConfigure StartUp Projects....
SelectMultiple startup projectsand change theActionfor both projects toStart.
SelectMultiple startup projectsand change theActionfor both projects toStart.
SelectOK.
SelectOK.
PressF5to debug both applications. Each application opens in its own browser tab:https://localhost:44316/- The ASP.NET web application. You interact directly with this application in the quickstart.https://localhost:44332/- The web API that's called by the ASP.NET web application.
PressF5to debug both applications. Each application opens in its own browser tab:
https://localhost:44316/- The ASP.NET web application. You interact directly with this application in the quickstart.
https://localhost:44316/
https://localhost:44332/- The web API that's called by the ASP.NET web application.
https://localhost:44332/
Sign in using your account
SelectSign up / Sign inin the ASP.NET web application to start the workflow.The sample supports several sign-up options including using a social identity provider or creating a local account using an email address. For this quickstart, use a social identity provider account from either Facebook, Google, or Microsoft.
SelectSign up / Sign inin the ASP.NET web application to start the workflow.

The sample supports several sign-up options including using a social identity provider or creating a local account using an email address. For this quickstart, use a social identity provider account from either Facebook, Google, or Microsoft.
Azure AD B2C presents a sign-in page for a fictitious company called Fabrikam for the sample web application. To sign up using a social identity provider, select the button of the identity provider you want to use.You authenticate (sign in) using your social account credentials and authorize the application to read information from your social account. By granting access, the application can retrieve profile information from the social account such as your name and city.
Azure AD B2C presents a sign-in page for a fictitious company called Fabrikam for the sample web application. To sign up using a social identity provider, select the button of the identity provider you want to use.

You authenticate (sign in) using your social account credentials and authorize the application to read information from your social account. By granting access, the application can retrieve profile information from the social account such as your name and city.
Finish the sign-in process for the identity provider.
Finish the sign-in process for the identity provider.
Edit your profile
Azure Active Directory B2C provides functionality to allow users to update their profiles. The sample web app uses an Azure AD B2C edit profile user flow for the workflow.
In the application menu bar, select your profile name, and then selectEdit profileto edit the profile you created.
In the application menu bar, select your profile name, and then selectEdit profileto edit the profile you created.

Change yourDisplay nameorCity, and then selectContinueto update your profile.The change is displayed in the upper right portion of the web application's home page.
Change yourDisplay nameorCity, and then selectContinueto update your profile.
The change is displayed in the upper right portion of the web application's home page.
Access a protected API resource
SelectTo-Do Listto enter and modify your to-do list items.
SelectTo-Do Listto enter and modify your to-do list items.
In theNew Itemtext box, enter text. To call the Azure AD B2C protected web API that adds a to-do list item, selectAdd.The ASP.NET web application includes a Microsoft Entra access token in the request to the protected web API resource to perform operations on the user's to-do list items.
In theNew Itemtext box, enter text. To call the Azure AD B2C protected web API that adds a to-do list item, selectAdd.

The ASP.NET web application includes a Microsoft Entra access token in the request to the protected web API resource to perform operations on the user's to-do list items.
You've successfully used your Azure AD B2C user account to make an authorized call to an Azure AD B2C protected web API.
Next steps
Create an Azure Active Directory B2C tenant in the Azure portal
Feedback
Was this page helpful?
Additional resources