Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
DotNetCoreCLI@2 - .NET Core v2 task
Article
2025-04-16
7 contributors
In this article
Build, test, package, or publish a .NET application, or run a custom .NET CLI command.
Syntax
# .NET Core v2
# Build, test, package, or publish a .NET application, or run a custom .NET CLI command.
- task: DotNetCoreCLI@2
  inputs:
    #azureSubscription: # string. Alias: ConnectedServiceName. Azure Resource Manager connection. 
    command: 'build' # 'build' | 'push' | 'pack' | 'publish' | 'restore' | 'run' | 'test' | 'custom'. Required. Command. Default: build.
    #publishWebProjects: true # boolean. Optional. Use when command = publish. Publish web projects. Default: true.
    #projects: # string. Optional. Use when command = build || command = restore || command = run || command = test || command = custom || publishWebProjects = false. Path to project(s) or solution(s). 
    #custom: # string. Required when command = custom. Custom command. 
    #arguments: # string. Optional. Use when command = build || command = publish || command = run || command = test || command = custom. Arguments. 
    #restoreArguments: # string. Optional. Use when command = restore. Arguments. 
    #publishTestResults: true # boolean. Optional. Use when command = test. Publish test results and code coverage. Default: true.
    #testRunTitle: # string. Optional. Use when command = test. Test run title. 
    #zipAfterPublish: true # boolean. Optional. Use when command = publish. Zip published projects. Default: true.
    #modifyOutputPath: true # boolean. Optional. Use when command = publish. Add project's folder name to publish path. Default: true.
    #packagesToPush: '$(Build.ArtifactStagingDirectory)/*.nupkg' # string. Alias: searchPatternPush. Required when command = push. Path to NuGet package(s) to publish. Default: $(Build.ArtifactStagingDirectory)/*.nupkg.
    #nuGetFeedType: 'internal' # 'internal' | 'external'. Required when command = push. Target feed location. Default: internal.
    #publishVstsFeed: # string. Alias: feedPublish. Required when command = push && nuGetFeedType = internal. Target feed. 
    #publishFeedCredentials: # string. Alias: externalEndpoint. Required when command = push && nuGetFeedType = external. NuGet server. 
    #packagesToPack: '**/*.csproj' # string. Alias: searchPatternPack. Required when command = pack. Path to csproj or nuspec file(s) to pack. Default: **/*.csproj.
    #configuration: '$(BuildConfiguration)' # string. Alias: configurationToPack. Optional. Use when command = pack. Configuration to Package. Default: $(BuildConfiguration).
    #packDirectory: '$(Build.ArtifactStagingDirectory)' # string. Alias: outputDir. Optional. Use when command = pack. Package Folder. Default: $(Build.ArtifactStagingDirectory).
    #nobuild: false # boolean. Optional. Use when command = pack. Do not build. Default: false.
    #includesymbols: false # boolean. Optional. Use when command = pack. Include Symbols. Default: false.
    #includesource: false # boolean. Optional. Use when command = pack. Include Source. Default: false.
    #requestTimeout: '300000' # string. Set timeout for package download request. Default: 300000.
  # Feeds and authentication
    #feedsToUse: 'select' # 'select' | 'config'. Alias: selectOrConfig. Required when command = restore. Feeds to use. Default: select.
    #vstsFeed: # string. Alias: feedRestore. Optional. Use when selectOrConfig = select && command = restore. Use packages from this Azure Artifacts feed. Select from the dropdown or enter [project name/]feed name. 
    #includeNuGetOrg: true # boolean. Optional. Use when selectOrConfig = select && command = restore. Use packages from NuGet.org. Default: true.
    #nugetConfigPath: # string. Optional. Use when selectOrConfig = config && command = restore. Path to NuGet.config. 
    #externalFeedCredentials: # string. Alias: externalEndpoints. Optional. Use when selectOrConfig = config && command = restore. Credentials for feeds outside this organization/collection. 
  # Advanced
    #noCache: false # boolean. Optional. Use when command = restore. Disable local cache. Default: false.
    #restoreDirectory: # string. Alias: packagesDirectory. Optional. Use when command = restore. Destination directory. 
    #verbosityRestore: 'Normal' # '-' | 'Quiet' | 'Minimal' | 'Normal' | 'Detailed' | 'Diagnostic'. Optional. Use when command = restore. Verbosity. Default: Normal.
  # Advanced
    #publishPackageMetadata: true # boolean. Optional. Use when command = push && nuGetFeedType = internal. Publish pipeline metadata. Default: true.
  # Pack options
    #versioningScheme: 'off' # 'off' | 'byPrereleaseNumber' | 'byEnvVar' | 'byBuildNumber'. Required when command = pack. Automatic package versioning. Default: off.
    #versionEnvVar: # string. Required when versioningScheme = byEnvVar && command = pack. Environment variable. 
    #majorVersion: '1' # string. Alias: requestedMajorVersion. Required when versioningScheme = byPrereleaseNumber && command = pack. Major. Default: 1.
    #minorVersion: '0' # string. Alias: requestedMinorVersion. Required when versioningScheme = byPrereleaseNumber && command = pack. Minor. Default: 0.
    #patchVersion: '0' # string. Alias: requestedPatchVersion. Required when versioningScheme = byPrereleaseNumber && command = pack. Patch. Default: 0.
  # Advanced
    #buildProperties: # string. Optional. Use when command = pack. Additional build properties. 
    #verbosityPack: 'Normal' # '-' | 'Quiet' | 'Minimal' | 'Normal' | 'Detailed' | 'Diagnostic'. Optional. Use when command = pack. Verbosity. Default: Normal.
  # Advanced
    #workingDirectory: # string. Optional. Use when command != restore && command != push && command != pack. Working directory.
# .NET Core v2
# Build, test, package, or publish a .NET application, or run a custom .NET CLI command.
- task: DotNetCoreCLI@2
  inputs:
    #azureSubscription: # string. Alias: ConnectedServiceName. Azure Resource Manager connection. 
    command: 'build' # 'build' | 'push' | 'pack' | 'publish' | 'restore' | 'run' | 'test' | 'custom'. Required. Command. Default: build.
    #publishWebProjects: true # boolean. Optional. Use when command = publish. Publish web projects. Default: true.
    #projects: # string. Optional. Use when command = build || command = restore || command = run || command = test || command = custom || publishWebProjects = false. Path to project(s) or solution(s). 
    #custom: # string. Required when command = custom. Custom command. 
    #arguments: # string. Optional. Use when command = build || command = publish || command = run || command = test || command = custom. Arguments. 
    #restoreArguments: # string. Optional. Use when command = restore. Arguments. 
    #publishTestResults: true # boolean. Optional. Use when command = test. Publish test results and code coverage. Default: true.
    #testRunTitle: # string. Optional. Use when command = test. Test run title. 
    #zipAfterPublish: true # boolean. Optional. Use when command = publish. Zip published projects. Default: true.
    #modifyOutputPath: true # boolean. Optional. Use when command = publish. Add project's folder name to publish path. Default: true.
    #packagesToPush: '$(Build.ArtifactStagingDirectory)/*.nupkg' # string. Alias: searchPatternPush. Required when command = push. Path to NuGet package(s) to publish. Default: $(Build.ArtifactStagingDirectory)/*.nupkg.
    #nuGetFeedType: 'internal' # 'internal' | 'external'. Required when command = push. Target feed location. Default: internal.
    #publishVstsFeed: # string. Alias: feedPublish. Required when command = push && nuGetFeedType = internal. Target feed. 
    #publishFeedCredentials: # string. Alias: externalEndpoint. Required when command = push && nuGetFeedType = external. NuGet server. 
    #packagesToPack: '**/*.csproj' # string. Alias: searchPatternPack. Required when command = pack. Path to csproj or nuspec file(s) to pack. Default: **/*.csproj.
    #configuration: '$(BuildConfiguration)' # string. Alias: configurationToPack. Optional. Use when command = pack. Configuration to Package. Default: $(BuildConfiguration).
    #packDirectory: '$(Build.ArtifactStagingDirectory)' # string. Alias: outputDir. Optional. Use when command = pack. Package Folder. Default: $(Build.ArtifactStagingDirectory).
    #nobuild: false # boolean. Optional. Use when command = pack. Do not build. Default: false.
    #includesymbols: false # boolean. Optional. Use when command = pack. Include Symbols. Default: false.
    #includesource: false # boolean. Optional. Use when command = pack. Include Source. Default: false.
    #requestTimeout: '300000' # string. Set timeout for package download request. Default: 300000.
  # Feeds and authentication
    #feedsToUse: 'select' # 'select' | 'config'. Alias: selectOrConfig. Required when command = restore. Feeds to use. Default: select.
    #vstsFeed: # string. Alias: feedRestore. Optional. Use when selectOrConfig = select && command = restore. Use packages from this Azure Artifacts feed. Select from the dropdown or enter [project name/]feed name. 
    #includeNuGetOrg: true # boolean. Optional. Use when selectOrConfig = select && command = restore. Use packages from NuGet.org. Default: true.
    #nugetConfigPath: # string. Optional. Use when selectOrConfig = config && command = restore. Path to NuGet.config. 
    #externalFeedCredentials: # string. Alias: externalEndpoints. Optional. Use when selectOrConfig = config && command = restore. Credentials for feeds outside this organization/collection. 
  # Advanced
    #noCache: false # boolean. Optional. Use when command = restore. Disable local cache. Default: false.
    #restoreDirectory: # string. Alias: packagesDirectory. Optional. Use when command = restore. Destination directory. 
    #verbosityRestore: 'Normal' # '-' | 'Quiet' | 'Minimal' | 'Normal' | 'Detailed' | 'Diagnostic'. Optional. Use when command = restore. Verbosity. Default: Normal.
  # Advanced
    #publishPackageMetadata: true # boolean. Optional. Use when command = push && nuGetFeedType = internal. Publish pipeline metadata. Default: true.
  # Pack options
    #versioningScheme: 'off' # 'off' | 'byPrereleaseNumber' | 'byEnvVar' | 'byBuildNumber'. Required when command = pack. Automatic package versioning. Default: off.
    #versionEnvVar: # string. Required when versioningScheme = byEnvVar && command = pack. Environment variable. 
    #majorVersion: '1' # string. Alias: requestedMajorVersion. Required when versioningScheme = byPrereleaseNumber && command = pack. Major. Default: 1.
    #minorVersion: '0' # string. Alias: requestedMinorVersion. Required when versioningScheme = byPrereleaseNumber && command = pack. Minor. Default: 0.
    #patchVersion: '0' # string. Alias: requestedPatchVersion. Required when versioningScheme = byPrereleaseNumber && command = pack. Patch. Default: 0.
  # Advanced
    #buildProperties: # string. Optional. Use when command = pack. Additional build properties. 
    #verbosityPack: 'Normal' # '-' | 'Quiet' | 'Minimal' | 'Normal' | 'Detailed' | 'Diagnostic'. Optional. Use when command = pack. Verbosity. Default: Normal.
  # Advanced
    #workingDirectory: # string. Optional. Use when command != restore && command != push && command != pack. Working directory.
# .NET Core v2
# Build, test, package, or publish a .NET application, or run a custom .NET CLI command.
- task: DotNetCoreCLI@2
  inputs:
    command: 'build' # 'build' | 'push' | 'pack' | 'publish' | 'restore' | 'run' | 'test' | 'custom'. Required. Command. Default: build.
    #publishWebProjects: true # boolean. Optional. Use when command = publish. Publish web projects. Default: true.
    #projects: # string. Optional. Use when command = build || command = restore || command = run || command = test || command = custom || publishWebProjects = false. Path to project(s) or solution(s). 
    #custom: # string. Required when command = custom. Custom command. 
    #arguments: # string. Optional. Use when command = build || command = publish || command = run || command = test || command = custom. Arguments. 
    #restoreArguments: # string. Optional. Use when command = restore. Arguments. 
    #publishTestResults: true # boolean. Optional. Use when command = test. Publish test results and code coverage. Default: true.
    #testRunTitle: # string. Optional. Use when command = test. Test run title. 
    #zipAfterPublish: true # boolean. Optional. Use when command = publish. Zip published projects. Default: true.
    #modifyOutputPath: true # boolean. Optional. Use when command = publish. Add project's folder name to publish path. Default: true.
    #packagesToPush: '$(Build.ArtifactStagingDirectory)/*.nupkg' # string. Alias: searchPatternPush. Required when command = push. Path to NuGet package(s) to publish. Default: $(Build.ArtifactStagingDirectory)/*.nupkg.
    #nuGetFeedType: 'internal' # 'internal' | 'external'. Required when command = push. Target feed location. Default: internal.
    #publishVstsFeed: # string. Alias: feedPublish. Required when command = push && nuGetFeedType = internal. Target feed. 
    #publishFeedCredentials: # string. Alias: externalEndpoint. Required when command = push && nuGetFeedType = external. NuGet server. 
    #packagesToPack: '**/*.csproj' # string. Alias: searchPatternPack. Required when command = pack. Path to csproj or nuspec file(s) to pack. Default: **/*.csproj.
    #configuration: '$(BuildConfiguration)' # string. Alias: configurationToPack. Optional. Use when command = pack. Configuration to Package. Default: $(BuildConfiguration).
    #packDirectory: '$(Build.ArtifactStagingDirectory)' # string. Alias: outputDir. Optional. Use when command = pack. Package Folder. Default: $(Build.ArtifactStagingDirectory).
    #nobuild: false # boolean. Optional. Use when command = pack. Do not build. Default: false.
    #includesymbols: false # boolean. Optional. Use when command = pack. Include Symbols. Default: false.
    #includesource: false # boolean. Optional. Use when command = pack. Include Source. Default: false.
  # Feeds and authentication
    #feedsToUse: 'select' # 'select' | 'config'. Alias: selectOrConfig. Required when command = restore. Feeds to use. Default: select.
    #vstsFeed: # string. Alias: feedRestore. Optional. Use when selectOrConfig = select && command = restore. Use packages from this Azure Artifacts feed. 
    #includeNuGetOrg: true # boolean. Optional. Use when selectOrConfig = select && command = restore. Use packages from NuGet.org. Default: true.
    #nugetConfigPath: # string. Optional. Use when selectOrConfig = config && command = restore. Path to NuGet.config. 
    #externalFeedCredentials: # string. Alias: externalEndpoints. Optional. Use when selectOrConfig = config && command = restore. Credentials for feeds outside this organization/collection. 
  # Advanced
    #noCache: false # boolean. Optional. Use when command = restore. Disable local cache. Default: false.
    #restoreDirectory: # string. Alias: packagesDirectory. Optional. Use when command = restore. Destination directory. 
    #verbosityRestore: 'Detailed' # '-' | 'Quiet' | 'Minimal' | 'Normal' | 'Detailed' | 'Diagnostic'. Optional. Use when command = restore. Verbosity. Default: Detailed.
  # Advanced
    #publishPackageMetadata: true # boolean. Optional. Use when command = push && nuGetFeedType = internal. Publish pipeline metadata. Default: true.
  # Pack options
    #versioningScheme: 'off' # 'off' | 'byPrereleaseNumber' | 'byEnvVar' | 'byBuildNumber'. Required when command = pack. Automatic package versioning. Default: off.
    #versionEnvVar: # string. Required when versioningScheme = byEnvVar && command = pack. Environment variable. 
    #majorVersion: '1' # string. Alias: requestedMajorVersion. Required when versioningScheme = byPrereleaseNumber && command = pack. Major. Default: 1.
    #minorVersion: '0' # string. Alias: requestedMinorVersion. Required when versioningScheme = byPrereleaseNumber && command = pack. Minor. Default: 0.
    #patchVersion: '0' # string. Alias: requestedPatchVersion. Required when versioningScheme = byPrereleaseNumber && command = pack. Patch. Default: 0.
  # Advanced
    #buildProperties: # string. Optional. Use when command = pack. Additional build properties. 
    #verbosityPack: 'Detailed' # '-' | 'Quiet' | 'Minimal' | 'Normal' | 'Detailed' | 'Diagnostic'. Optional. Use when command = pack. Verbosity. Default: Detailed.
  # Advanced
    #workingDirectory: # string. Optional. Use when command != restore && command != push && command != pack. Working directory.
# .NET Core v2
# Build, test, package, or publish a .NET application, or run a custom .NET CLI command.
- task: DotNetCoreCLI@2
  inputs:
    command: 'build' # 'build' | 'push' | 'pack' | 'publish' | 'restore' | 'run' | 'test' | 'custom'. Required. Command. Default: build.
    #publishWebProjects: true # boolean. Optional. Use when command = publish. Publish web projects. Default: true.
    #projects: # string. Optional. Use when command = build || command = restore || command = run || command = test || command = custom || publishWebProjects = false. Path to project(s) or solution(s). 
    #custom: # string. Required when command = custom. Custom command. 
    #arguments: # string. Optional. Use when command = build || command = publish || command = run || command = test || command = custom. Arguments. 
    #restoreArguments: # string. Optional. Use when command = restore. Arguments. 
    #publishTestResults: true # boolean. Optional. Use when command = test. Publish test results and code coverage. Default: true.
    #testRunTitle: # string. Optional. Use when command = test. Test run title. 
    #zipAfterPublish: true # boolean. Optional. Use when command = publish. Zip published projects. Default: true.
    #modifyOutputPath: true # boolean. Optional. Use when command = publish. Add project's folder name to publish path. Default: true.
    #packagesToPush: '$(Build.ArtifactStagingDirectory)/*.nupkg' # string. Alias: searchPatternPush. Required when command = push. Path to NuGet package(s) to publish. Default: $(Build.ArtifactStagingDirectory)/*.nupkg.
    #nuGetFeedType: 'internal' # 'internal' | 'external'. Required when command = push. Target feed location. Default: internal.
    #publishVstsFeed: # string. Alias: feedPublish. Required when command = push && nuGetFeedType = internal. Target feed. 
    #publishFeedCredentials: # string. Alias: externalEndpoint. Required when command = push && nuGetFeedType = external. NuGet server. 
    #packagesToPack: '**/*.csproj' # string. Alias: searchPatternPack. Required when command = pack. Path to csproj or nuspec file(s) to pack. Default: **/*.csproj.
    #configuration: '$(BuildConfiguration)' # string. Alias: configurationToPack. Optional. Use when command = pack. Configuration to Package. Default: $(BuildConfiguration).
    #packDirectory: '$(Build.ArtifactStagingDirectory)' # string. Alias: outputDir. Optional. Use when command = pack. Package Folder. Default: $(Build.ArtifactStagingDirectory).
    #nobuild: false # boolean. Optional. Use when command = pack. Do not build. Default: false.
    #includesymbols: false # boolean. Optional. Use when command = pack. Include Symbols. Default: false.
    #includesource: false # boolean. Optional. Use when command = pack. Include Source. Default: false.
  # Feeds and authentication
    #feedsToUse: 'select' # 'select' | 'config'. Alias: selectOrConfig. Required when command = restore. Feeds to use. Default: select.
    #vstsFeed: # string. Alias: feedRestore. Optional. Use when selectOrConfig = select && command = restore. Use packages from this Azure Artifacts feed. 
    #includeNuGetOrg: true # boolean. Optional. Use when selectOrConfig = select && command = restore. Use packages from NuGet.org. Default: true.
    #nugetConfigPath: # string. Optional. Use when selectOrConfig = config && command = restore. Path to NuGet.config. 
    #externalFeedCredentials: # string. Alias: externalEndpoints. Optional. Use when selectOrConfig = config && command = restore. Credentials for feeds outside this organization/collection. 
  # Advanced
    #noCache: false # boolean. Optional. Use when command = restore. Disable local cache. Default: false.
    #restoreDirectory: # string. Alias: packagesDirectory. Optional. Use when command = restore. Destination directory. 
    #verbosityRestore: 'Detailed' # '-' | 'Quiet' | 'Minimal' | 'Normal' | 'Detailed' | 'Diagnostic'. Optional. Use when command = restore. Verbosity. Default: Detailed.
  # Advanced
    #publishPackageMetadata: true # boolean. Optional. Use when command = push && nuGetFeedType = internal. Publish pipeline metadata. Default: true.
  # Pack options
    #versioningScheme: 'off' # 'off' | 'byPrereleaseNumber' | 'byEnvVar' | 'byBuildNumber'. Required when command = pack. Automatic package versioning. Default: off.
    #versionEnvVar: # string. Required when versioningScheme = byEnvVar && command = pack. Environment variable. 
    #majorVersion: '1' # string. Alias: requestedMajorVersion. Required when versioningScheme = byPrereleaseNumber && command = pack. Major. Default: 1.
    #minorVersion: '0' # string. Alias: requestedMinorVersion. Required when versioningScheme = byPrereleaseNumber && command = pack. Minor. Default: 0.
    #patchVersion: '0' # string. Alias: requestedPatchVersion. Required when versioningScheme = byPrereleaseNumber && command = pack. Patch. Default: 0.
  # Advanced
    #buildProperties: # string. Optional. Use when command = pack. Additional build properties. 
    #verbosityPack: 'Detailed' # '-' | 'Quiet' | 'Minimal' | 'Normal' | 'Detailed' | 'Diagnostic'. Optional. Use when command = pack. Verbosity. Default: Detailed.
  # Advanced
    #workingDirectory: # string. Optional. Use when command != restore && command != push && command != pack. Working directory.
# .NET Core v2
# Build, test, package, or publish a .NET application, or run a custom .NET CLI command.
- task: DotNetCoreCLI@2
  inputs:
    command: 'build' # 'build' | 'push' | 'pack' | 'publish' | 'restore' | 'run' | 'test' | 'custom'. Required. Command. Default: build.
    #publishWebProjects: true # boolean. Optional. Use when command = publish. Publish web projects. Default: true.
    #projects: # string. Optional. Use when command = build || command = restore || command = run || command = test || command = custom || publishWebProjects = false. Path to project(s). 
    #custom: # string. Required when command = custom. Custom command. 
    #arguments: # string. Optional. Use when command = build || command = publish || command = run || command = test || command = custom. Arguments. 
    #restoreArguments: # string. Optional. Use when command = restore. Arguments. 
    #publishTestResults: true # boolean. Optional. Use when command = test. Publish test results and code coverage. Default: true.
    #testRunTitle: # string. Optional. Use when command = test. Test run title. 
    #zipAfterPublish: true # boolean. Optional. Use when command = publish. Zip published projects. Default: true.
    #modifyOutputPath: true # boolean. Optional. Use when command = publish. Add project's folder name to publish path. Default: true.
    #packagesToPush: '$(Build.ArtifactStagingDirectory)/*.nupkg' # string. Alias: searchPatternPush. Required when command = push. Path to NuGet package(s) to publish. Default: $(Build.ArtifactStagingDirectory)/*.nupkg.
    #nuGetFeedType: 'internal' # 'internal' | 'external'. Required when command = push. Target feed location. Default: internal.
    #publishVstsFeed: # string. Alias: feedPublish. Required when command = push && nuGetFeedType = internal. Target feed. 
    #publishFeedCredentials: # string. Alias: externalEndpoint. Required when command = push && nuGetFeedType = external. NuGet server. 
    #packagesToPack: '**/*.csproj' # string. Alias: searchPatternPack. Required when command = pack. Path to csproj or nuspec file(s) to pack. Default: **/*.csproj.
    #configuration: '$(BuildConfiguration)' # string. Alias: configurationToPack. Optional. Use when command = pack. Configuration to Package. Default: $(BuildConfiguration).
    #packDirectory: '$(Build.ArtifactStagingDirectory)' # string. Alias: outputDir. Optional. Use when command = pack. Package Folder. Default: $(Build.ArtifactStagingDirectory).
    #nobuild: false # boolean. Optional. Use when command = pack. Do not build. Default: false.
    #includesymbols: false # boolean. Optional. Use when command = pack. Include Symbols. Default: false.
    #includesource: false # boolean. Optional. Use when command = pack. Include Source. Default: false.
  # Feeds and authentication
    #feedsToUse: 'select' # 'select' | 'config'. Alias: selectOrConfig. Required when command = restore. Feeds to use. Default: select.
    #vstsFeed: # string. Alias: feedRestore. Optional. Use when selectOrConfig = select && command = restore. Use packages from this Azure Artifacts feed. 
    #includeNuGetOrg: true # boolean. Optional. Use when selectOrConfig = select && command = restore. Use packages from NuGet.org. Default: true.
    #nugetConfigPath: # string. Optional. Use when selectOrConfig = config && command = restore. Path to NuGet.config. 
    #externalFeedCredentials: # string. Alias: externalEndpoints. Optional. Use when selectOrConfig = config && command = restore. Credentials for feeds outside this organization/collection. 
  # Advanced
    #noCache: false # boolean. Optional. Use when command = restore. Disable local cache. Default: false.
    #restoreDirectory: # string. Alias: packagesDirectory. Optional. Use when command = restore. Destination directory. 
    #verbosityRestore: 'Detailed' # '-' | 'Quiet' | 'Minimal' | 'Normal' | 'Detailed' | 'Diagnostic'. Optional. Use when command = restore. Verbosity. Default: Detailed.
  # Advanced
    #publishPackageMetadata: true # boolean. Optional. Use when command = push && nuGetFeedType = internal. Publish pipeline metadata. Default: true.
  # Pack options
    #versioningScheme: 'off' # 'off' | 'byPrereleaseNumber' | 'byEnvVar' | 'byBuildNumber'. Required when command = pack. Automatic package versioning. Default: off.
    #versionEnvVar: # string. Required when versioningScheme = byEnvVar && command = pack. Environment variable. 
    #majorVersion: '1' # string. Alias: requestedMajorVersion. Required when versioningScheme = byPrereleaseNumber && command = pack. Major. Default: 1.
    #minorVersion: '0' # string. Alias: requestedMinorVersion. Required when versioningScheme = byPrereleaseNumber && command = pack. Minor. Default: 0.
    #patchVersion: '0' # string. Alias: requestedPatchVersion. Required when versioningScheme = byPrereleaseNumber && command = pack. Patch. Default: 0.
  # Advanced
    #buildProperties: # string. Optional. Use when command = pack. Additional build properties. 
    #verbosityPack: 'Detailed' # '-' | 'Quiet' | 'Minimal' | 'Normal' | 'Detailed' | 'Diagnostic'. Optional. Use when command = pack. Verbosity. Default: Detailed.
  # Advanced
    #workingDirectory: # string. Optional. Use when command != restore && command != push && command != pack. Working directory.
# .NET Core v2
# Build, test, package, or publish a .NET application, or run a custom .NET CLI command.
- task: DotNetCoreCLI@2
  inputs:
    command: 'build' # 'build' | 'push' | 'pack' | 'publish' | 'restore' | 'run' | 'test' | 'custom'. Required. Command. Default: build.
    #publishWebProjects: true # boolean. Optional. Use when command = publish. Publish web projects. Default: true.
    #projects: # string. Optional. Use when command = build || command = restore || command = run || command = test || command = custom || publishWebProjects = false. Path to project(s). 
    #custom: # string. Required when command = custom. Custom command. 
    #arguments: # string. Optional. Use when command = build || command = publish || command = run || command = test || command = custom. Arguments. 
    #restoreArguments: # string. Optional. Use when command = restore. Arguments. 
    #publishTestResults: true # boolean. Optional. Use when command = test. Publish test results and code coverage. Default: true.
    #testRunTitle: # string. Optional. Use when command = test. Test run title. 
    #zipAfterPublish: true # boolean. Optional. Use when command = publish. Zip published projects. Default: true.
    #modifyOutputPath: true # boolean. Optional. Use when command = publish. Add project's folder name to publish path. Default: true.
    #packagesToPush: '$(Build.ArtifactStagingDirectory)/*.nupkg' # string. Alias: searchPatternPush. Required when command = push. Path to NuGet package(s) to publish. Default: $(Build.ArtifactStagingDirectory)/*.nupkg.
    #nuGetFeedType: 'internal' # 'internal' | 'external'. Required when command = push. Target feed location. Default: internal.
    #publishVstsFeed: # string. Alias: feedPublish. Required when command = push && nuGetFeedType = internal. Target feed. 
    #publishFeedCredentials: # string. Alias: externalEndpoint. Required when command = push && nuGetFeedType = external. NuGet server. 
    #packagesToPack: '**/*.csproj' # string. Alias: searchPatternPack. Required when command = pack. Path to csproj or nuspec file(s) to pack. Default: **/*.csproj.
    #configuration: '$(BuildConfiguration)' # string. Alias: configurationToPack. Optional. Use when command = pack. Configuration to Package. Default: $(BuildConfiguration).
    #packDirectory: '$(Build.ArtifactStagingDirectory)' # string. Alias: outputDir. Optional. Use when command = pack. Package Folder. Default: $(Build.ArtifactStagingDirectory).
    #nobuild: false # boolean. Optional. Use when command = pack. Do not build. Default: false.
    #includesymbols: false # boolean. Optional. Use when command = pack. Include Symbols. Default: false.
    #includesource: false # boolean. Optional. Use when command = pack. Include Source. Default: false.
  # Feeds and authentication
    #feedsToUse: 'select' # 'select' | 'config'. Alias: selectOrConfig. Required when command = restore. Feeds to use. Default: select.
    #vstsFeed: # string. Alias: feedRestore. Optional. Use when selectOrConfig = select && command = restore. Use packages from this Azure Artifacts feed. 
    #includeNuGetOrg: true # boolean. Optional. Use when selectOrConfig = select && command = restore. Use packages from NuGet.org. Default: true.
    #nugetConfigPath: # string. Optional. Use when selectOrConfig = config && command = restore. Path to NuGet.config. 
    #externalFeedCredentials: # string. Alias: externalEndpoints. Optional. Use when selectOrConfig = config && command = restore. Credentials for feeds outside this organization/collection. 
  # Advanced
    #noCache: false # boolean. Optional. Use when command = restore. Disable local cache. Default: false.
    #restoreDirectory: # string. Alias: packagesDirectory. Optional. Use when command = restore. Destination directory. 
    #verbosityRestore: 'Detailed' # '-' | 'Quiet' | 'Minimal' | 'Normal' | 'Detailed' | 'Diagnostic'. Optional. Use when command = restore. Verbosity. Default: Detailed.
  # Advanced
    #publishPackageMetadata: true # boolean. Optional. Use when command = push && nuGetFeedType = internal. Publish pipeline metadata. Default: true.
  # Pack options
    #versioningScheme: 'off' # 'off' | 'byPrereleaseNumber' | 'byEnvVar' | 'byBuildNumber'. Required when command = pack. Automatic package versioning. Default: off.
    #versionEnvVar: # string. Required when versioningScheme = byEnvVar && command = pack. Environment variable. 
    #majorVersion: '1' # string. Alias: requestedMajorVersion. Required when versioningScheme = byPrereleaseNumber && command = pack. Major. Default: 1.
    #minorVersion: '0' # string. Alias: requestedMinorVersion. Required when versioningScheme = byPrereleaseNumber && command = pack. Minor. Default: 0.
    #patchVersion: '0' # string. Alias: requestedPatchVersion. Required when versioningScheme = byPrereleaseNumber && command = pack. Patch. Default: 0.
  # Advanced
    #buildProperties: # string. Optional. Use when command = pack. Additional build properties. 
    #verbosityPack: 'Detailed' # '-' | 'Quiet' | 'Minimal' | 'Normal' | 'Detailed' | 'Diagnostic'. Optional. Use when command = pack. Verbosity. Default: Detailed.
  # Advanced
    #workingDirectory: # string. Optional. Use when command != restore && command != push && command != pack. Working directory.
Inputs
azureSubscription-Azure Resource Manager connectionInput alias:ConnectedServiceName.string.
azureSubscription
ConnectedServiceName
string
Specify an Azure Resource Manager service connection configured with workload identity federation to useAzurePipelinesCredentialin integration tests. For more information, seeUse AzurePipelinesCredential in integration tests.
Note
This input only supports ARM service connections that are configured to use workload identity federation.
command-Commandstring. Required. Allowed values:build,push(nuget push),pack,publish,restore,run,test,custom. Default value:build.
command
string
build
push
pack
publish
restore
run
test
custom
build
The dotnet command to run. Specifycustomto add arguments or use a command not listed here.
custom
Important
TheNuGet Authenticatetask is the new recommended way to authenticate with Azure Artifacts and other NuGet repositories. Therestoreandpushcommands of this .NET Core CLI task no longer take new features and only critical bugs are addressed. See remarks for details.
restore
push
publishWebProjects-Publish web projectsboolean. Optional. Use whencommand = publish. Default value:true.
publishWebProjects
boolean
command = publish
true
If this input is set totrue, theprojectsproperty value is skipped, and the task tries to find the web projects in the repository and run the publish command on them. Web projects are identified by the presence of either aweb.configfile or awwwrootfolder in the directory. In the absence of aweb.configfile or awwwrootfolder, projects that use a web SDK, likeMicrosoft.NET.Sdk.Web, are selected.
true
projects
web.config
wwwroot
web.config
wwwroot
Microsoft.NET.Sdk.Web
projects-Path to project(s) or solution(s)string. Optional. Use whencommand = build || command = restore || command = run || command = test || command = custom || publishWebProjects = false.
projects
string
command = build || command = restore || command = run || command = test || command = custom || publishWebProjects = false
The path to the.csprojor.slnfile(s) to use. You can use wildcards (e.g.**/*.csprojfor all.csprojfiles in all subfolders). For more information, see thefile matching patterns reference.
.csproj
.sln
**/*.csproj
.csproj
This path is relative to the root of the repository regardless of theworkingDirectorysetting.
workingDirectory
projects-Path to project(s)string. Optional. Use whencommand = build || command = restore || command = run || command = test || command = custom || publishWebProjects = false.
projects
string
command = build || command = restore || command = run || command = test || command = custom || publishWebProjects = false
The path to the.csprojfile(s) to use. You can use wildcards (e.g.**/*.csprojfor all.csprojfiles in all subfolders). For more information, see thefile matching patterns reference.
.csproj
**/*.csproj
.csproj
This path is relative to the root of the repository regardless of theworkingDirectorysetting.
workingDirectory
custom-Custom commandstring. Required whencommand = custom.
custom
string
command = custom
The command to pass todotnet.exefor execution. For a full list of available commands, see thedotnet CLI documentation.
dotnet.exe
arguments-Argumentsstring. Optional. Use whencommand = build || command = publish || command = run || command = test || command = custom.
arguments
string
command = build || command = publish || command = run || command = test || command = custom
Specifies the arguments for the selected command. For example, build configuration, output folder, and runtime. The arguments depend on the command selected.
This input currently only accepts arguments forbuild,publish,run,test, andcustom. If you would like to add arguments for a command not listed, usecustom.
build
publish
run
test
custom
custom
restoreArguments-Argumentsstring. Optional. Use whencommand = restore.
restoreArguments
string
command = restore
Writes the additional arguments to be passed to therestorecommand.
restore
publishTestResults-Publish test results and code coverageboolean. Optional. Use whencommand = test. Default value:true.
publishTestResults
boolean
command = test
true
Enabling this option will generate atest resultsTRX file in$(Agent.TempDirectory), and the results will be published to the server.
test results
$(Agent.TempDirectory)
This option appends--logger trx --results-directory $(Agent.TempDirectory)to the command line arguments.
--logger trx --results-directory $(Agent.TempDirectory)
Code coverage can be collected by adding the--collect "Code coverage"option to the command line arguments.
--collect "Code coverage"
testRunTitle-Test run titlestring. Optional. Use whencommand = test.
testRunTitle
string
command = test
Provides a name for the test run.
zipAfterPublish-Zip published projectsboolean. Optional. Use whencommand = publish. Default value:true.
zipAfterPublish
boolean
command = publish
true
If this input is set totrue, folders created by the publish command will be zipped and deleted.
true
modifyOutputPath-Add project's folder name to publish pathboolean. Optional. Use whencommand = publish. Default value:true.
modifyOutputPath
boolean
command = publish
true
If this input is set totrue, folders created by the publish command will have the project file name prefixed to their folder names when the output path is specified explicitly in arguments. This is useful if you want to publish multiple projects to the same folder.
true
feedsToUse-Feeds to useInput alias:selectOrConfig.string. Required whencommand = restore. Allowed values:select(Feed(s) I select here),config(Feeds in my NuGet.config). Default value:select.
feedsToUse
selectOrConfig
string
command = restore
select
config
select
You can either select a feed from Azure Artifacts and/orNuGet.orghere, or you can commit anuget.configfile to your source code repository and set its path using thenugetConfigPathinput.
NuGet.org
nuget.config
nugetConfigPath
vstsFeed-Use packages from this Azure Artifacts feed. Select from the dropdown or enter [project name/]feed name.Input alias:feedRestore.string. Optional. Use whenselectOrConfig = select && command = restore.
vstsFeed
feedRestore
string
selectOrConfig = select && command = restore
Includes the selected feed in the generatedNuGet.config. You must have Package Management installed and licensed to select a feed here.projectName/feedNameare used for project-scoped feeds. OnlyFeedNameis used for organization-scoped feeds. Note: This is not supported for thetestcommand.
NuGet.config
projectName
feedName
FeedName
test
vstsFeed-Use packages from this Azure Artifacts feedInput alias:feedRestore.string. Optional. Use whenselectOrConfig = select && command = restore.
vstsFeed
feedRestore
string
selectOrConfig = select && command = restore
Includes the selected feed in the generatedNuGet.config. You must have Package Management installed and licensed to select a feed here.projectName/feedNameare used for project-scoped feeds. OnlyFeedNameis used for organization-scoped feeds. Note: This is not supported for the test command.
NuGet.config
projectName
feedName
FeedName
includeNuGetOrg-Use packages from NuGet.orgboolean. Optional. Use whenselectOrConfig = select && command = restore. Default value:true.
includeNuGetOrg
boolean
selectOrConfig = select && command = restore
true
IncludesNuGet.orgin the generatedNuGet.config.
NuGet.org
NuGet.config
nugetConfigPath-Path to NuGet.configstring. Optional. Use whenselectOrConfig = config && command = restore.
nugetConfigPath
string
selectOrConfig = config && command = restore
TheNuGet.configin your repository that specifies the feeds from which to restore packages.
NuGet.config
externalFeedCredentials-Credentials for feeds outside this organization/collectionInput alias:externalEndpoints.string. Optional. Use whenselectOrConfig = config && command = restore.
externalFeedCredentials
externalEndpoints
string
selectOrConfig = config && command = restore
The name of the service connection to use for external registries listed in the selectedNuGet.config. For feeds within the same organization or collection, leave this input blank; the build's credentials are used automatically.
NuGet.config
noCache-Disable local cacheboolean. Optional. Use whencommand = restore. Default value:false.
noCache
boolean
command = restore
false
Prevents NuGet from using packages from local machine caches.
restoreDirectory-Destination directoryInput alias:packagesDirectory.string. Optional. Use whencommand = restore.
restoreDirectory
packagesDirectory
string
command = restore
Specifies the folder in which packages are installed. If no folder is specified, packages are restored into the default NuGet package cache.
verbosityRestore-Verbositystring. Optional. Use whencommand = restore. Allowed values:-,Quiet,Minimal,Normal,Detailed,Diagnostic. Default value:Normal.
verbosityRestore
string
command = restore
-
Quiet
Minimal
Normal
Detailed
Diagnostic
Normal
Specifies the amount of detail displayed in the output for therestorecommand.
restore
verbosityRestore-Verbositystring. Optional. Use whencommand = restore. Allowed values:-,Quiet,Minimal,Normal,Detailed,Diagnostic. Default value:Detailed.
verbosityRestore
string
command = restore
-
Quiet
Minimal
Normal
Detailed
Diagnostic
Detailed
Specifies the amount of detail displayed in the output for therestorecommand.
restore
packagesToPush-Path to NuGet package(s) to publishInput alias:searchPatternPush.string. Required whencommand = push. Default value:$(Build.ArtifactStagingDirectory)/*.nupkg.
packagesToPush
searchPatternPush
string
command = push
$(Build.ArtifactStagingDirectory)/*.nupkg
The pattern to match or path tonupkgfiles to be uploaded. Multiple patterns can be separated by a semicolon, and you can make a pattern negative by prefixing it with!. Example:**/*.nupkg;!**/*.Tests.nupkg.
nupkg
!
**/*.nupkg;!**/*.Tests.nupkg
nuGetFeedType-Target feed locationstring. Required whencommand = push. Allowed values:internal(This organization/collection),external(External NuGet server (including other organizations/collections)). Default value:internal.
nuGetFeedType
string
command = push
internal
external
internal
Specifies whether the target feed is internal or external.
publishVstsFeed-Target feedInput alias:feedPublish.string. Required whencommand = push && nuGetFeedType = internal.
publishVstsFeed
feedPublish
string
command = push && nuGetFeedType = internal
Specifies a feed hosted in this organization. You must have Package Management installed and licensed to select a feed here.
publishPackageMetadata-Publish pipeline metadataboolean. Optional. Use whencommand = push && nuGetFeedType = internal. Default value:true.
publishPackageMetadata
boolean
command = push && nuGetFeedType = internal
true
Associates this build/release pipeline's metadata (run #, source code information) with the package.
publishFeedCredentials-NuGet serverInput alias:externalEndpoint.string. Required whencommand = push && nuGetFeedType = external.
publishFeedCredentials
externalEndpoint
string
command = push && nuGetFeedType = external
The NuGetservice connectionthat contains the external NuGet server's credentials.
packagesToPack-Path to csproj or nuspec file(s) to packInput alias:searchPatternPack.string. Required whencommand = pack. Default value:**/*.csproj.
packagesToPack
searchPatternPack
string
command = pack
**/*.csproj
The pattern to search for.csprojor.nuspecfiles to pack.
.csproj
.nuspec
You can separate multiple patterns with a semicolon, and you can make a pattern negative by prefixing it with!. Example:**/*.csproj;!**/*.Tests.csproj.
!
**/*.csproj;!**/*.Tests.csproj
configuration-Configuration to PackageInput alias:configurationToPack.string. Optional. Use whencommand = pack. Default value:$(BuildConfiguration).
configuration
configurationToPack
string
command = pack
$(BuildConfiguration)
When using a.csprojfile, this input specifies the configuration to package.
.csproj
packDirectory-Package FolderInput alias:outputDir.string. Optional. Use whencommand = pack. Default value:$(Build.ArtifactStagingDirectory).
packDirectory
outputDir
string
command = pack
$(Build.ArtifactStagingDirectory)
The folder where packages will be created. If this folder is empty, packages will be created alongside thecsprojfile.
csproj
nobuild-Do not buildboolean. Optional. Use whencommand = pack. Default value:false.
nobuild
boolean
command = pack
false
Specifies that the task will not build the project before packing. This task corresponds to the--no-buildparameter of thebuildcommand.
--no-build
build
includesymbols-Include Symbolsboolean. Optional. Use whencommand = pack. Default value:false.
includesymbols
boolean
command = pack
false
Creates symbol NuGet packages. This task corresponds to the--include-symbolscommand line parameter.
--include-symbols
includesource-Include Sourceboolean. Optional. Use whencommand = pack. Default value:false.
includesource
boolean
command = pack
false
Includes source code in the package. This task corresponds to the--include-sourcecommand line parameter.
--include-source
versioningScheme-Automatic package versioningstring. Required whencommand = pack. Allowed values:off,byPrereleaseNumber(Use the date and time),byEnvVar(Use an environment variable),byBuildNumber(Use the build number). Default value:off.
versioningScheme
string
command = pack
off
byPrereleaseNumber
byEnvVar
byBuildNumber
off
This task cannot be used with included referenced projects. If you chooseUse the date and time, this will generate aSemVer-compliant version formatted asX.Y.Z-ci-datetimewhere you chooseX,Y, andZ.
Use the date and time
X.Y.Z-ci-datetime
X
Y
Z
If you chooseUse an environment variable, you must select an environment variable and ensure it contains the version number you want to use.
Use an environment variable
If you chooseUse the build number, this will use the build number to version your package.Note:UnderOptions, set the build number format to$(BuildDefinitionName)_$(Year:yyyy).$(Month).$(DayOfMonth)$(Rev:.r).
Use the build number
Options
$(BuildDefinitionName)_$(Year:yyyy).$(Month).$(DayOfMonth)$(Rev:.r)
versionEnvVar-Environment variablestring. Required whenversioningScheme = byEnvVar && command = pack.
versionEnvVar
string
versioningScheme = byEnvVar && command = pack
Specifies the variable name without$,$env, or%.
$
$env
%
majorVersion-MajorInput alias:requestedMajorVersion.string. Required whenversioningScheme = byPrereleaseNumber && command = pack. Default value:1.
majorVersion
requestedMajorVersion
string
versioningScheme = byPrereleaseNumber && command = pack
1
TheXin versionX.Y.Z.
X
minorVersion-MinorInput alias:requestedMinorVersion.string. Required whenversioningScheme = byPrereleaseNumber && command = pack. Default value:0.
minorVersion
requestedMinorVersion
string
versioningScheme = byPrereleaseNumber && command = pack
0
TheYin versionX.Y.Z.
Y
patchVersion-PatchInput alias:requestedPatchVersion.string. Required whenversioningScheme = byPrereleaseNumber && command = pack. Default value:0.
patchVersion
requestedPatchVersion
string
versioningScheme = byPrereleaseNumber && command = pack
0
TheZin versionX.Y.Z.
Z
buildProperties-Additional build propertiesstring. Optional. Use whencommand = pack.
buildProperties
string
command = pack
Specifies a list oftoken = valuepairs, separated by semicolons, where each occurrence of$token$in the.nuspecfile will be replaced with the given value. Values can be strings in quotation marks.
token = value
$token$
.nuspec
verbosityPack-Verbositystring. Optional. Use whencommand = pack. Allowed values:-,Quiet,Minimal,Normal,Detailed,Diagnostic. Default value:Normal.
verbosityPack
string
command = pack
-
Quiet
Minimal
Normal
Detailed
Diagnostic
Normal
Specifies the amount of detail displayed in the output for thepackcommand.
pack
verbosityPack-Verbositystring. Optional. Use whencommand = pack. Allowed values:-,Quiet,Minimal,Normal,Detailed,Diagnostic. Default value:Detailed.
verbosityPack
string
command = pack
-
Quiet
Minimal
Normal
Detailed
Diagnostic
Detailed
Specifies the amount of detail displayed in the output for thepackcommand.
pack
workingDirectory-Working directorystring. Optional. Use whencommand != restore && command != push && command != pack.
workingDirectory
string
command != restore && command != push && command != pack
The current working directory where the script is run.Emptyis the root of the repo (build) or artifacts (release), which is$(System.DefaultWorkingDirectory).
Empty
$(System.DefaultWorkingDirectory)
requestTimeout-Set timeout for package download requeststring. Default value:300000.
requestTimeout
string
300000
Provide a timeout value for HTTP requests that the task makes to obtain the .NET package. The value is in milliseconds. Default is 300000 milliseconds (5 minutes). Cannot be more than 600000 milliseconds (10 minutes).
Task control options
All tasks have control options in addition to their task inputs. For more information, seeControl options and common task properties.
Output variables
None.
Remarks
Important
TheNuGet Authenticatetask is the new recommended way to authenticate with Azure Artifacts and other NuGet repositories. Therestoreandpushcommands of this .NET Core CLI task no longer take new features and only critical bugs are addressed.
restore
push
Use AzurePipelinesCredential in integration tests
The Azure Identity libraries for .NET, C++, Go, Java, JavaScript, and Pythonprovide support for workload identity federation, so code executed from theAzureCLI@2andAzurePowerShell@5tasks can authenticate with Microsoft Entra ID (for example, to access Azure) using theAzurePipelinesCredentialclass.
AzurePipelinesCredential
Many customers are using Azure SDK client libraries in integration tests invoked from other tasks. TheDotNetCoreCLI@2,Maven@4andVSTest@3tasks can access Azure resources using theAzurePipelinesCredentialclass.
AzurePipelinesCredential
You can set theconnectedServiceNameproperty to an Azure service connection configured with workload identity federation. TheAzurePipelinesCredentialrequiresSYSTEM_ACCESSTOKENto be set.
connectedServiceName
AzurePipelinesCredential
The following example shows theconnectedServiceNameinput on theDotNetCoreCLI@2task.VSTest@3andMaven@4usage is similar.
connectedServiceName
DotNetCoreCLI@2
VSTest@3
Maven@4
- task: DotNetCoreCLI@2
  inputs:
    command: 'run'
    connectedServiceName: <Azure service connection configured with workload identity federation>
  env:
    SYSTEM_ACCESSTOKEN: $(System.AccessToken)
- task: DotNetCoreCLI@2
  inputs:
    command: 'run'
    connectedServiceName: <Azure service connection configured with workload identity federation>
  env:
    SYSTEM_ACCESSTOKEN: $(System.AccessToken)
For more information onAzurePipelinesCredential, seeImprove security posture in Azure service connections with AzurePipelinesCredential.
AzurePipelinesCredential
Why is my build, publish, or test step failing to restore packages?
Mostdotnetcommands, includingbuild,publish, andtestinclude an implicitrestorestep. This will fail against authenticated feeds, even if you ran a successfuldotnet restorein an earlier step, because the earlier step will have cleaned up the credentials it used.
dotnet
build
publish
test
restore
dotnet restore
To fix this issue, add the--no-restoreflag to theArgumentstextbox.
--no-restore
Arguments
In addition, thetestcommand does not recognize thefeedRestoreorvstsFeedarguments, and feeds specified in this manner will not be included in the generatedNuGet.configfile when the implicitrestorestep runs.  It's recommended that an explicitdotnet restorestep be used to restore packages.  Therestorecommand respects thefeedRestoreandvstsFeedarguments.
test
feedRestore
vstsFeed
NuGet.config
restore
dotnet restore
restore
feedRestore
vstsFeed
Why am I getting NU1507 warnings withPackage Source Mappingalthough when building on my machine it has no warnings?
The the various commands that do a NuGet restore or access a NuGet feed build a special temporaryNuGet.configfile that add NuGet authentication for azure artifacts NuGet feeds. The way this is done is in conflict with the schema that Package Source Mapping uses to map the packages to the sources and breaks the Package Source Mappin configuration in theNuGet.configfile in your repository.
To work around this conflict you can use theNuGet Authenticatetask to authenticate and afterwards the custom command to invoke the desired dotnet command without theNuGet.configmodification.
NuGet.config
NuGet.config
NuGet.config
# Authenticate Azure DevOps NuGet feed
- task: NuGetAuthenticate@1
  displayName: 'Authenticate Azure DevOps NuGet feed'

# Restore project
- task: DotNetCoreCLI@2
  inputs:
    command: 'custom'
    custom: 'restore'

# Build project
- task: DotNetCoreCLI@2
  inputs:
    command: 'custom'
    custom: 'build'
    arguments: '--no-restore'
# Authenticate Azure DevOps NuGet feed
- task: NuGetAuthenticate@1
  displayName: 'Authenticate Azure DevOps NuGet feed'

# Restore project
- task: DotNetCoreCLI@2
  inputs:
    command: 'custom'
    custom: 'restore'

# Build project
- task: DotNetCoreCLI@2
  inputs:
    command: 'custom'
    custom: 'build'
    arguments: '--no-restore'
Why should I check in a NuGet.config?
Checking aNuGet.configinto source control ensures that a key piece of information needed to build your projectâthe location of its packagesâis available to every developer that checks out your code.
NuGet.config
However, for situations where a team of developers works on a large range of projects, it's also possible to add an Azure Artifacts feed to the globalNuGet.configon each developer's machine. In these situations, using theFeeds I select hereoption in the NuGet task replicates this configuration.
NuGet.config
Feeds I select here
Troubleshooting
.NET Core does not have Entity Framework(EF) built-in. You will have to either install EF before beginning execution or addglobal.jsonto the project with required .NET Core SDK version. This will ensure that correct SDK is used to build EF project. If the required version is not present on the machine, add theUseDotNetV2task to your pipeline to install the required version. For more information, seeGet the Entity Framework Core runtime.
global.json
UseDotNetV2
Examples
Build examples
Push examples
Push examples
Pack examples
Publish examples
Restore examples
Test examples
Build examples
# Build project
- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
# Build project
- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
# Build multiple projects
- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: |
      src/proj1/proj1.csproj 
      src/proj2/proj2.csproj 
      src/other/other.sln    # Pass a solution instead of a csproj.
# Build multiple projects
- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: |
      src/proj1/proj1.csproj 
      src/proj2/proj2.csproj 
      src/other/other.sln    # Pass a solution instead of a csproj.
Push examples
# Push non test NuGet packages from a build to internal organization Feed
- task: DotNetCoreCLI@2
  inputs:
    command: 'push'
    searchPatternPush: '$(Build.ArtifactStagingDirectory)/*.nupkg;!$(Build.ArtifactStagingDirectory)/*.Tests.nupkg'
    feedPublish: 'FabrikamFeed'
# Push non test NuGet packages from a build to internal organization Feed
- task: DotNetCoreCLI@2
  inputs:
    command: 'push'
    searchPatternPush: '$(Build.ArtifactStagingDirectory)/*.nupkg;!$(Build.ArtifactStagingDirectory)/*.Tests.nupkg'
    feedPublish: 'FabrikamFeed'
# Push all NuGet packages from a build to external Feed
- task: DotNetCoreCLI@2
  inputs:
    command: 'push'
    nugetFeedType: 'external'
    externalEndPoint: 'MyNuGetServiceConnection'
# Push all NuGet packages from a build to external Feed
- task: DotNetCoreCLI@2
  inputs:
    command: 'push'
    nugetFeedType: 'external'
    externalEndPoint: 'MyNuGetServiceConnection'
Pack examples
# Pack a NuGet package to a test directory
- task: DotNetCoreCLI@2
  inputs: 
    command: 'pack'
    outputDir: '$(Build.ArtifactStagingDirectory)/TestDir'
# Pack a NuGet package to a test directory
- task: DotNetCoreCLI@2
  inputs: 
    command: 'pack'
    outputDir: '$(Build.ArtifactStagingDirectory)/TestDir'
# Pack a symbol package along with NuGet package
- task: DotNetCoreCLI@2
  inputs: 
    command: 'pack'
    includesymbols: true
# Pack a symbol package along with NuGet package
- task: DotNetCoreCLI@2
  inputs: 
    command: 'pack'
    includesymbols: true
Publish examples
# Publish projects to specified folder.
- task: DotNetCoreCLI@2
  displayName: 'dotnet publish'
  inputs:
    command: 'publish'
    publishWebProjects: false
    projects: '**/*.csproj'
    arguments: '-o $(Build.ArtifactStagingDirectory)/Output'
    zipAfterPublish: true
    modifyOutputPath: true
# Publish projects to specified folder.
- task: DotNetCoreCLI@2
  displayName: 'dotnet publish'
  inputs:
    command: 'publish'
    publishWebProjects: false
    projects: '**/*.csproj'
    arguments: '-o $(Build.ArtifactStagingDirectory)/Output'
    zipAfterPublish: true
    modifyOutputPath: true
Restore examples
#Restore packages with the .NET Core CLI task
- task: DotNetCoreCLI@2
  displayName: 'dotnet restore'
  inputs:
    command: 'restore'
    feedsToUse: 'select'
    feedRestore: 'projectName/feedName'
    projects: '**/*.csproj'
    includeNuGetOrg: true
#Restore packages with the .NET Core CLI task
- task: DotNetCoreCLI@2
  displayName: 'dotnet restore'
  inputs:
    command: 'restore'
    feedsToUse: 'select'
    feedRestore: 'projectName/feedName'
    projects: '**/*.csproj'
    includeNuGetOrg: true
Test examples
# Run tests and auto publish test results.
- task: DotNetCoreCLI@2
  inputs:
    command: 'test'
# Run tests and auto publish test results.
- task: DotNetCoreCLI@2
  inputs:
    command: 'test'
Requirements
Feedback
Was this page helpful?
Additional resources