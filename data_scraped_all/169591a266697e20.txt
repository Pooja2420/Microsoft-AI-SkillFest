Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Secure traffic to Azure Front Door origins
Article
2024-11-19
5 contributors
In this article
Front Door's features work best when traffic only flows through Front Door. You should configure your origin to block traffic that hasn't been sent through Front Door. Otherwise, traffic might bypass Front Door's web application firewall, DDoS protection, and other security features.
Note
Originandorigin groupin this article refers to the backend and backend pool of the Azure Front Door (classic) configuration.
Front Door provides several approaches that you can use to restrict your origin traffic.
Private Link origins
When you use the premium SKU of Front Door, you can use Private Link to send traffic to your origin.Learn more about Private Link origins.
You should configure your origin to disallow traffic that doesn't come through Private Link. The way that you restrict traffic depends on the type of Private Link origin you use:
Azure App Service and Azure Functions automatically disable access through public internet endpoints when you use Private Link. For more information, seeUsing Private Endpoints for Azure Web App.
Azure Storage provides a firewall, which you can use to deny traffic from the internet. For more information, seeConfigure Azure Storage firewalls and virtual networks.
Internal load balancers with Azure Private Link service aren't publicly routable. You can also configure network security groups to ensure that you disallow access to your virtual network from the internet.
Public IP address-based origins
When you use public IP address-based origins, there are two approaches you should use together to ensure that traffic flows through your Front Door instance:
Configure IP address filtering to ensure that requests to your origin are only accepted from the Front Door IP address ranges.
Configure your application to verify theX-Azure-FDIDheader value, which Front Door attaches to all requests to the origin, and ensure that its value matches your Front Door's identifier.
X-Azure-FDID
IP address filtering
Configure IP address filtering for your origins to accept traffic from Azure Front Door's backend IP address space and Azure's infrastructure services only.
TheAzureFrontDoor.Backendservice tag provides a list of the IP addresses that Front Door uses to connect to your origins. You can use this service tag within yournetwork security group rules. You can also download theAzure IP Ranges and Service Tagsdata set, which is updated regularly with the latest IP addresses.
You should also allow traffic from Azure'sbasic infrastructure servicesthrough the virtualized host IP addresses168.63.129.16and169.254.169.254.
168.63.129.16
169.254.169.254
Warning
Front Door's IP address space changes regularly. Ensure that you use theAzureFrontDoor.Backendservice tag instead of hard-coding IP addresses.
Front Door identifier
IP address filtering alone isn't sufficient to secure traffic to your origin, because other Azure customers use the same IP addresses. You should also configure your origin to ensure that traffic has originated fromyourFront Door profile.
Azure generates a unique identifier for each Front Door profile. You can find the identifier in the Azure portal, by looking for theFront Door IDvalue in the Overview page of your profile.
When Front Door makes a request to your origin, it adds theX-Azure-FDIDrequest header. Your origin should inspect the header on incoming requests, and reject requests where the value doesn't match your Front Door profile's identifier.
X-Azure-FDID
Example configuration
The following examples show how you can secure different types of origins.
App Service and Functions
Application Gateway
Application Gateway for Containers
IIS
AKS NGINX controller
You can useApp Service access restrictionsto perform IP address filtering as well as header filtering. The capability is provided by the platform, and you don't need to change your application or host.
Application Gateway is deployed into your virtual network. Configure a network security group rule to allow inbound access on ports 80 and 443 from theAzureFrontDoor.Backendservice tag, and disallow inbound traffic on ports 80 and 443 from theInternetservice tag.
Use a custom WAF rule to check theX-Azure-FDIDheader value.  For more information, seeCreate and use Web Application Firewall v2 custom rules on Application Gateway.
X-Azure-FDID
To configure traffic routing in Azure Kubernetes Service (AKS) with Application Gateway for Containers, set up an HTTPRoute rule to match incoming traffic from Azure Front Door using the X-Azure-FDID header.
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: http-route
  namespace: {namespace}
spec:
  parentRefs:
  - name: {gateway-name}
  rules:
  - matches:
    - headers:
      - type: Exact
        name: X-Azure-FDID
        value: "xxxxxxxx-xxxx-xxxx-xxxx-xxx"
    backendRefs:
    - name: {backend-name}
      port: {port}
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: http-route
  namespace: {namespace}
spec:
  parentRefs:
  - name: {gateway-name}
  rules:
  - matches:
    - headers:
      - type: Exact
        name: X-Azure-FDID
        value: "xxxxxxxx-xxxx-xxxx-xxxx-xxx"
    backendRefs:
    - name: {backend-name}
      port: {port}
When you runMicrosoft Internet Information Services (IIS)on an Azure-hosted virtual machine, you should create a network security group in the virtual network that hosts the virtual machine. Configure a network security group rule to allow inbound access on ports 80 and 443 from theAzureFrontDoor.Backendservice tag, and disallow inbound traffic on ports 80 and 443 from theInternetservice tag.
Use an IIS configuration file like in the following example to inspect theX-Azure-FDIDheader on your incoming requests:
X-Azure-FDID
<?xml version="1.0" encoding="UTF-8"?>
<configuration>
  <system.webServer>
    <rewrite>
      <rules>
        <rule name="Filter_X-Azure-FDID" patternSyntax="Wildcard" stopProcessing="true">
          <match url="*" />
          <conditions>
            <add input="{HTTP_X_AZURE_FDID}" pattern="xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" negate="true" />
          </conditions>
          <action type="AbortRequest" />
        </rule>
      </rules>
    </rewrite>
  </system.webServer>
</configuration>
<?xml version="1.0" encoding="UTF-8"?>
<configuration>
  <system.webServer>
    <rewrite>
      <rules>
        <rule name="Filter_X-Azure-FDID" patternSyntax="Wildcard" stopProcessing="true">
          <match url="*" />
          <conditions>
            <add input="{HTTP_X_AZURE_FDID}" pattern="xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx" negate="true" />
          </conditions>
          <action type="AbortRequest" />
        </rule>
      </rules>
    </rewrite>
  </system.webServer>
</configuration>
When you runAKS with an NGINX ingress controller, you should create a network security group in the virtual network that hosts the AKS cluster. Configure a network security group rule to allow inbound access on ports 80 and 443 from theAzureFrontDoor.Backendservice tag, and disallow inbound traffic on ports 80 and 443 from theInternetservice tag.
Use a Kubernetes ingress configuration file like in the following example to inspect theX-Azure-FDIDheader on your incoming requests:
X-Azure-FDID
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: frontdoor-ingress
  annotations:
  kubernetes.io/ingress.class: nginx
  nginx.ingress.kubernetes.io/enable-modsecurity: "true"
  nginx.ingress.kubernetes.io/modsecurity-snippet: |
    SecRuleEngine On
    SecRule &REQUEST_HEADERS:X-Azure-FDID \"@eq 0\"  \"log,deny,id:106,status:403,msg:\'Front Door ID not present\'\"
    SecRule REQUEST_HEADERS:X-Azure-FDID \"@rx ^(?!xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx).*$\"  \"log,deny,id:107,status:403,msg:\'Wrong Front Door ID\'\"
spec:
  #section omitted on purpose
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: frontdoor-ingress
  annotations:
  kubernetes.io/ingress.class: nginx
  nginx.ingress.kubernetes.io/enable-modsecurity: "true"
  nginx.ingress.kubernetes.io/modsecurity-snippet: |
    SecRuleEngine On
    SecRule &REQUEST_HEADERS:X-Azure-FDID \"@eq 0\"  \"log,deny,id:106,status:403,msg:\'Front Door ID not present\'\"
    SecRule REQUEST_HEADERS:X-Azure-FDID \"@rx ^(?!xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx).*$\"  \"log,deny,id:107,status:403,msg:\'Wrong Front Door ID\'\"
spec:
  #section omitted on purpose
Next steps
Learn how to configure aWAF profile on Front Door.
Learn how tocreate a Front Door.
Learnhow Front Door works.
Feedback
Was this page helpful?
Additional resources