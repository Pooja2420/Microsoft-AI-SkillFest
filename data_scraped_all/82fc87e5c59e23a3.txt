Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Enable managed identity
Article
2025-04-17
6 contributors
In this article
Azure Communication Services is a fully managed communication platform that enables developers to build real-time communication features into their applications. By using managed identity with Azure Communication Services, you can simplify the authentication process for your application, while also increasing its security. This document covers how to use managed identity with Azure Communication Services.
Using managed identity with Azure Communication Services
Azure Communication Services supports using managed identity to authenticate with the service. By using managed identity, you can eliminate the need to manage your own access tokens and credentials.
Your Azure Communication Services resource can be assigned two types of identity:
ASystem Assigned Identitywhich is tied to your resource and is deleted when your resource is deleted.
Your resource can only have one system-assigned identity.
AUser Assigned Identitywhich is an Azure resource that can be assigned to your Azure Communication Services resource. This identity isn't deleted when your resource is deleted. Your resource can have multiple user-assigned identities.
To use managed identity with Azure Communication Services, follow these steps:
Grant your managed identity access to the Communication Services resource. This assignment can be through the Azure portal, Azure CLI, and the Azure Communication Management SDKs.
Use the managed identity to authenticate with Azure Communication Services. Authentication can be done through the Azure SDKs or REST APIs that support managed identity.
Add a system-assigned identity
Azure portal
Azure CLI
In the left navigation of your app's page, scroll down to theSettingsgroup.
In the left navigation of your app's page, scroll down to theSettingsgroup.
SelectIdentity.
SelectIdentity.
Within theSystem assignedtab, switchStatustoOn. SelectSave.
Within theSystem assignedtab, switchStatustoOn. SelectSave.
Run theaz communication identity assigncommand to assign a system-assigned identity:
az communication identity assign
az communication identity assign --system-assigned --name myApp --resource-group myResourceGroup
az communication identity assign --system-assigned --name myApp --resource-group myResourceGroup
Add a user-assigned identity
Assigning a user-assigned identity to your Azure Communication Services resource requires that you first create the identity and then add its resource identifier to your Communication service resource.
Azure portal
Azure CLI
First, you need to create a user-assigned managed identity resource.
Create a user-assigned managed identity resource according tothese instructions.
Create a user-assigned managed identity resource according tothese instructions.
In the left navigation for your app's page, scroll down to theSettingsgroup.
In the left navigation for your app's page, scroll down to theSettingsgroup.
SelectIdentity.
SelectIdentity.
SelectUser assigned>Add.
SelectUser assigned>Add.
Search for the identity you created earlier, select it, and selectAdd.
Search for the identity you created earlier, select it, and selectAdd.
Create a user-assigned identity.az identity create --resource-group <group-name> --name <identity-name>
Create a user-assigned identity.
az identity create --resource-group <group-name> --name <identity-name>
az identity create --resource-group <group-name> --name <identity-name>
Run theaz communication identity assigncommand to assign a user-assigned identity:
Run theaz communication identity assigncommand to assign a user-assigned identity:
az communication identity assign
az communication identity assign --name myApp --resource-group myResourceGroup --user-assigned <identity-id>
az communication identity assign --name myApp --resource-group myResourceGroup --user-assigned <identity-id>
Managed identity using Azure Communication Services management SDKs
You can also assign managed identity to your Azure Communication Services resource using the Azure Communication Management SDKs.
You can achieve this assignment by introducing the identity property in the resource definition either on creation or when updating the resource.
.NET
JavaScript
Python
Java
Golang
You can assign your managed identity to your Azure Communication Services resource using the Azure Communication Management SDK for .NET by setting theIdentityproperty on theCommunicationServiceResourceData.
Identity
CommunicationServiceResourceData
For example:
public async Task CreateResourceWithSystemAssignedManagedIdentity()
{
    ArmClient armClient = new ArmClient(new DefaultAzureCredential());
    SubscriptionResource subscription = await armClient.GetDefaultSubscriptionAsync();

    //Create Resource group
    ResourceGroupCollection rgCollection = subscription.GetResourceGroups();
    // With the collection, we can create a new resource group with an specific name
    string rgName = "myRgName";
    AzureLocation location = AzureLocation.WestUS2;
    ArmOperation<ResourceGroupResource> lro = await rgCollection.CreateOrUpdateAsync(WaitUntil.Completed, rgName, new ResourceGroupData(location));
    ResourceGroupResource resourceGroup = lro.Value;

    // get resource group collection
    CommunicationServiceResourceCollection collection = resourceGroup.GetCommunicationServiceResources();
    string communicationServiceName = "myCommunicationService";
    
    // Create Communication Service Resource
    var identity = new ManagedServiceIdentity(ManagedServiceIdentityType.SystemAssigned);
    CommunicationServiceResourceData data = new CommunicationServiceResourceData("global")
    {
        DataLocation = "UnitedStates",
        Identity = identity
    };
    var communicationServiceLro = await collection.CreateOrUpdateAsync(WaitUntil.Completed, communicationServiceName, data);
    var resource = communicationServiceLro.Value;
}
public async Task CreateResourceWithSystemAssignedManagedIdentity()
{
    ArmClient armClient = new ArmClient(new DefaultAzureCredential());
    SubscriptionResource subscription = await armClient.GetDefaultSubscriptionAsync();

    //Create Resource group
    ResourceGroupCollection rgCollection = subscription.GetResourceGroups();
    // With the collection, we can create a new resource group with an specific name
    string rgName = "myRgName";
    AzureLocation location = AzureLocation.WestUS2;
    ArmOperation<ResourceGroupResource> lro = await rgCollection.CreateOrUpdateAsync(WaitUntil.Completed, rgName, new ResourceGroupData(location));
    ResourceGroupResource resourceGroup = lro.Value;

    // get resource group collection
    CommunicationServiceResourceCollection collection = resourceGroup.GetCommunicationServiceResources();
    string communicationServiceName = "myCommunicationService";
    
    // Create Communication Service Resource
    var identity = new ManagedServiceIdentity(ManagedServiceIdentityType.SystemAssigned);
    CommunicationServiceResourceData data = new CommunicationServiceResourceData("global")
    {
        DataLocation = "UnitedStates",
        Identity = identity
    };
    var communicationServiceLro = await collection.CreateOrUpdateAsync(WaitUntil.Completed, communicationServiceName, data);
    var resource = communicationServiceLro.Value;
}
For more information about using the .NET Management SDK, seeAzure Communication Management SDK for .NET.
For more information specific to managing your resource instance, seeManaging your Communication Service Resource instance.
For Node.js apps and JavaScript functions, samples on how to create or update your Azure Communication Services resource with a managed identity can be found in theAzure Communication Management Developer Samples for JavaScript.
For more information about using the JavaScript Management SDK, seeAzure Communication Management SDK for JavaScript.
For Python apps and functions, Code Samples on how to create or update your Azure Communication Services resource  with a managed identity can be found in theAzure Communication Management Developer Samples for Python.
For more information about using the python Management SDK, seeAzure Communication Management SDK for Python.
For Java apps and functions, Code Samples on how to create or update your Azure Communication Services resource  with a managed identity can be found in theAzure Communication Management Developer Samples for Java.
For more information about using the java Management SDK, seeAzure Communication Management SDK for Java.
For Golang apps and functions, Code Samples on how to create or update your Azure Communication Services resource  with a managed identity can be found in theAzure Communication Management Developer Samples for Golang.
For more information about the Golang Management SDK, seeAzure Communication Management SDK for Golang.
Note
A resource can have both system-assigned and user-assigned identities at the same time. In this case, thetypeproperty isSystemAssigned,UserAssigned.
type
SystemAssigned,UserAssigned
You can also remove all managed identity assignments from a resource by specifying thetypeproperty asNone.
type
None
Next steps
Managed identities
Manage user-assigned managed identities
Feedback
Was this page helpful?
Additional resources