Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Add schemas to use with workflows with Azure Logic Apps
Article
2025-02-19
7 contributors
In this article
Applies to:Azure Logic Apps (Consumption + Standard)
Workflow actions such asFlat FileandXML Validationrequire a schema to perform their tasks. For example, theXML Validationaction requires an XML schema to check that documents use valid XML and have the expected data in the predefined format. This schema is an XML document that usesXML Schema Definition (XSD)language and has the .xsd file name extension. TheFlat Fileactions use a schema to encode and decode XML content.
This article shows how to add a schema to your integration account. If you're working with a Standard logic app workflow, you can also add a schema directly to your logic app resource.
Prerequisites
An Azure account and subscription. If you don't have a subscription yet,sign up for a free Azure account.
An Azure account and subscription. If you don't have a subscription yet,sign up for a free Azure account.
The schema file that you want to add. To create schemas, you can use Visual Studio 2019 and theMicrosoft Azure Logic Apps Enterprise Integration Tools Extension.NoteDon't install the extension alongside the BizTalk Server extension. Having both extensions might
produce unexpected behavior. Make sure that you only have one of these extensions installed.On high resolution monitors, you might experience adisplay problem with the map designerin Visual Studio. To resolve this display problem, eitherrestart Visual Studio in DPI-unaware mode,
or add theDPIUNAWARE registry value.
The schema file that you want to add. To create schemas, you can use Visual Studio 2019 and theMicrosoft Azure Logic Apps Enterprise Integration Tools Extension.
Note
Don't install the extension alongside the BizTalk Server extension. Having both extensions might
produce unexpected behavior. Make sure that you only have one of these extensions installed.
On high resolution monitors, you might experience adisplay problem with the map designerin Visual Studio. To resolve this display problem, eitherrestart Visual Studio in DPI-unaware mode,
or add theDPIUNAWARE registry value.
Based on whether you're working on a Consumption or Standard logic app workflow, you'll need anintegration account resource. Usually, you need this resource when you want to define and store artifacts for use in enterprise integration and B2B workflows.ImportantTo work together, both your integration account and logic app resource must exist in the same Azure subscription and Azure region.If you're working on a Consumption logic app workflow, you'll need anintegration account that's linked to your logic app resource.If you're working on a Standard logic app workflow, you can link your integration account to your logic app resource, upload schemas directly to your logic app resource, or both, based on the following scenarios:If you already have an integration account with the artifacts that you need or want to use, you can link your integration account to multiple Standard logic app resources where you want to use the artifacts. That way, you don't have to upload schemas to each individual logic app. For more information, reviewLink your logic app resource to your integration account.TheFlat Filebuilt-in connector lets you select a schema that you previously uploaded to your logic app resource or to a linked integration account, but not both. You can then use this artifact across all child workflows within the same logic app resource.So, if you don't have or need an integration account, you can use the upload option. Otherwise, you can use the linking option. Either way, you can use these artifacts across all child workflows within the same logic app resource.
Based on whether you're working on a Consumption or Standard logic app workflow, you'll need anintegration account resource. Usually, you need this resource when you want to define and store artifacts for use in enterprise integration and B2B workflows.
Important
To work together, both your integration account and logic app resource must exist in the same Azure subscription and Azure region.
If you're working on a Consumption logic app workflow, you'll need anintegration account that's linked to your logic app resource.
If you're working on a Consumption logic app workflow, you'll need anintegration account that's linked to your logic app resource.
If you're working on a Standard logic app workflow, you can link your integration account to your logic app resource, upload schemas directly to your logic app resource, or both, based on the following scenarios:If you already have an integration account with the artifacts that you need or want to use, you can link your integration account to multiple Standard logic app resources where you want to use the artifacts. That way, you don't have to upload schemas to each individual logic app. For more information, reviewLink your logic app resource to your integration account.TheFlat Filebuilt-in connector lets you select a schema that you previously uploaded to your logic app resource or to a linked integration account, but not both. You can then use this artifact across all child workflows within the same logic app resource.So, if you don't have or need an integration account, you can use the upload option. Otherwise, you can use the linking option. Either way, you can use these artifacts across all child workflows within the same logic app resource.
If you're working on a Standard logic app workflow, you can link your integration account to your logic app resource, upload schemas directly to your logic app resource, or both, based on the following scenarios:
If you already have an integration account with the artifacts that you need or want to use, you can link your integration account to multiple Standard logic app resources where you want to use the artifacts. That way, you don't have to upload schemas to each individual logic app. For more information, reviewLink your logic app resource to your integration account.
If you already have an integration account with the artifacts that you need or want to use, you can link your integration account to multiple Standard logic app resources where you want to use the artifacts. That way, you don't have to upload schemas to each individual logic app. For more information, reviewLink your logic app resource to your integration account.
TheFlat Filebuilt-in connector lets you select a schema that you previously uploaded to your logic app resource or to a linked integration account, but not both. You can then use this artifact across all child workflows within the same logic app resource.
TheFlat Filebuilt-in connector lets you select a schema that you previously uploaded to your logic app resource or to a linked integration account, but not both. You can then use this artifact across all child workflows within the same logic app resource.
So, if you don't have or need an integration account, you can use the upload option. Otherwise, you can use the linking option. Either way, you can use these artifacts across all child workflows within the same logic app resource.
Limitations
Limits apply to the number of artifacts, such as schemas, per integration account. For more information, reviewLimits and configuration information for Azure Logic Apps.
Limits apply to the number of artifacts, such as schemas, per integration account. For more information, reviewLimits and configuration information for Azure Logic Apps.
Based on whether you're working on a Consumption or Standard logic app workflow, schema file size limits might apply.If you're working with Standard workflows, no limits apply to schema file sizes.If you're working with Consumption workflows, the following limits apply:If your schema is2 MB or smaller, you can add your schema to your integration accountdirectlyfrom the Azure portal.If your schema is bigger than 2 MB but not bigger than thesize limit for schemas, you'll need an Azure storage account and a blob container where you can upload your schema. Then, to add that schema to your integration account, you can then link to your storage account from your integration account. For this task, the following table describes the items you need:ItemDescriptionAzure storage accountIn this account, create an Azure blob container for your schema. Learnhow to create a storage account.Blob containerIn this container, you can upload your schema. You also need this container's content URI later when you add the schema to your integration account. Learn how tocreate a blob container.Azure Storage ExplorerThis tool helps you more easily manage storage accounts and blob containers. To use Storage Explorer, choose a step:- In the Azure portal, select your storage account. From your storage account menu, selectStorage Explorer.- For the desktop version,download and install Azure Storage Explorer. Then, connect Storage Explorer to your storage account by following the steps inGet started with Storage Explorer. To learn more, seeQuickstart: Create a blob in object storage with Azure Storage Explorer.To add larger schemas, you can also use theAzure Logic Apps REST API - Schemas. For Standard workflows, the Azure Logic Apps REST API is currently unavailable.
Based on whether you're working on a Consumption or Standard logic app workflow, schema file size limits might apply.
If you're working with Standard workflows, no limits apply to schema file sizes.
If you're working with Standard workflows, no limits apply to schema file sizes.
If you're working with Consumption workflows, the following limits apply:If your schema is2 MB or smaller, you can add your schema to your integration accountdirectlyfrom the Azure portal.If your schema is bigger than 2 MB but not bigger than thesize limit for schemas, you'll need an Azure storage account and a blob container where you can upload your schema. Then, to add that schema to your integration account, you can then link to your storage account from your integration account. For this task, the following table describes the items you need:ItemDescriptionAzure storage accountIn this account, create an Azure blob container for your schema. Learnhow to create a storage account.Blob containerIn this container, you can upload your schema. You also need this container's content URI later when you add the schema to your integration account. Learn how tocreate a blob container.Azure Storage ExplorerThis tool helps you more easily manage storage accounts and blob containers. To use Storage Explorer, choose a step:- In the Azure portal, select your storage account. From your storage account menu, selectStorage Explorer.- For the desktop version,download and install Azure Storage Explorer. Then, connect Storage Explorer to your storage account by following the steps inGet started with Storage Explorer. To learn more, seeQuickstart: Create a blob in object storage with Azure Storage Explorer.To add larger schemas, you can also use theAzure Logic Apps REST API - Schemas. For Standard workflows, the Azure Logic Apps REST API is currently unavailable.
If you're working with Consumption workflows, the following limits apply:
If your schema is2 MB or smaller, you can add your schema to your integration accountdirectlyfrom the Azure portal.
If your schema is2 MB or smaller, you can add your schema to your integration accountdirectlyfrom the Azure portal.
If your schema is bigger than 2 MB but not bigger than thesize limit for schemas, you'll need an Azure storage account and a blob container where you can upload your schema. Then, to add that schema to your integration account, you can then link to your storage account from your integration account. For this task, the following table describes the items you need:ItemDescriptionAzure storage accountIn this account, create an Azure blob container for your schema. Learnhow to create a storage account.Blob containerIn this container, you can upload your schema. You also need this container's content URI later when you add the schema to your integration account. Learn how tocreate a blob container.Azure Storage ExplorerThis tool helps you more easily manage storage accounts and blob containers. To use Storage Explorer, choose a step:- In the Azure portal, select your storage account. From your storage account menu, selectStorage Explorer.- For the desktop version,download and install Azure Storage Explorer. Then, connect Storage Explorer to your storage account by following the steps inGet started with Storage Explorer. To learn more, seeQuickstart: Create a blob in object storage with Azure Storage Explorer.To add larger schemas, you can also use theAzure Logic Apps REST API - Schemas. For Standard workflows, the Azure Logic Apps REST API is currently unavailable.
If your schema is bigger than 2 MB but not bigger than thesize limit for schemas, you'll need an Azure storage account and a blob container where you can upload your schema. Then, to add that schema to your integration account, you can then link to your storage account from your integration account. For this task, the following table describes the items you need:
To add larger schemas, you can also use theAzure Logic Apps REST API - Schemas. For Standard workflows, the Azure Logic Apps REST API is currently unavailable.
Usually, when you're using an integration account with your workflow, you add the schema to that account. However, if you're referencing or importing a schema that's not in your integration account, you might receive the following error when you use the elementxsd:redefine:An error occurred while processing the XML schemas: ''SchemaLocation' must successfully resolve if <redefine> contains any child other than <annotation>.'.To resolve this error, you need to use the elementxsd:importorxsd:includeinstead ofxsd:redefine, or use a URI.
Usually, when you're using an integration account with your workflow, you add the schema to that account. However, if you're referencing or importing a schema that's not in your integration account, you might receive the following error when you use the elementxsd:redefine:
xsd:redefine
An error occurred while processing the XML schemas: ''SchemaLocation' must successfully resolve if <redefine> contains any child other than <annotation>.'.
An error occurred while processing the XML schemas: ''SchemaLocation' must successfully resolve if <redefine> contains any child other than <annotation>.'.
To resolve this error, you need to use the elementxsd:importorxsd:includeinstead ofxsd:redefine, or use a URI.
xsd:import
xsd:include
xsd:redefine
Considerations for adding schemas
If you're working with a Consumption workflow, you must add your schema to a linked integration account.
If you're working with a Consumption workflow, you must add your schema to a linked integration account.
If you're working with a Standard workflow, you have the following options:Add your schema to a linked integration account. You can share the schema and integration account across multiple Standard logic app resources and their child workflows.Add your schema directly to your logic app resource. However, you can only share that schema across child workflows in the same logic app resource.
If you're working with a Standard workflow, you have the following options:
Add your schema to a linked integration account. You can share the schema and integration account across multiple Standard logic app resources and their child workflows.
Add your schema to a linked integration account. You can share the schema and integration account across multiple Standard logic app resources and their child workflows.
Add your schema directly to your logic app resource. However, you can only share that schema across child workflows in the same logic app resource.
Add your schema directly to your logic app resource. However, you can only share that schema across child workflows in the same logic app resource.

Add schema to integration account
In theAzure portal, sign in with your Azure account credentials.
In theAzure portal, sign in with your Azure account credentials.
In the main Azure search box, enterintegration accounts, and selectIntegration accounts.
In the main Azure search box, enterintegration accounts, and selectIntegration accounts.
Select the integration account where you want to add your schema.
Select the integration account where you want to add your schema.
On your integration account resource menu, underSettings, selectSchemas.
On your integration account resource menu, underSettings, selectSchemas.
On theSchemaspane toolbar, selectAdd.
On theSchemaspane toolbar, selectAdd.

Add schemas to logic app
Consumption
Standard
For Consumption workflows, based on your schema's file size, follow the steps for uploading a schema that's eitherup to 2 MBormore than 2 MB, up to 8 MB.

Add schemas up to 2 MB
On theAdd Schemapane, enter a name for your schema. KeepSmall fileselected. Next to theSchemabox, select the folder icon. Find and select the schema you're uploading.
On theAdd Schemapane, enter a name for your schema. KeepSmall fileselected. Next to theSchemabox, select the folder icon. Find and select the schema you're uploading.
When you're done, selectOK.After your schema finishes uploading, the schema appears in theSchemaslist.
When you're done, selectOK.
After your schema finishes uploading, the schema appears in theSchemaslist.

Add schemas more than 2 MB
To add larger schemas for Consumption workflows to use, you can either use theAzure Logic Apps REST API - Schemasor upload your schema to an Azure blob container in your Azure storage account. Your steps for adding schemas differ based whether your blob container has public read access. So first, check whether or not your blob container has public read access by following these steps:Set public access level for blob container
Open Azure Storage Explorer. In the Explorer window, expand your Azure subscription if not already expanded.
Open Azure Storage Explorer. In the Explorer window, expand your Azure subscription if not already expanded.
ExpandStorage Accounts> {your-storage-account} >Blob Containers. Select your blob container.
ExpandStorage Accounts> {your-storage-account} >Blob Containers. Select your blob container.
From your blob container's shortcut menu, selectSet Public Access Level.If your blob container has at least public access, selectCancel, and follow these steps later on this page:Upload to containers with public accessIf your blob container doesn't have public access, selectCancel, and follow these steps later on this page:Upload to containers without public access
From your blob container's shortcut menu, selectSet Public Access Level.
If your blob container has at least public access, selectCancel, and follow these steps later on this page:Upload to containers with public access
If your blob container has at least public access, selectCancel, and follow these steps later on this page:Upload to containers with public access

If your blob container doesn't have public access, selectCancel, and follow these steps later on this page:Upload to containers without public access
If your blob container doesn't have public access, selectCancel, and follow these steps later on this page:Upload to containers without public access


Upload the schema to your storage account. In the right-hand window, selectUpload.
Upload the schema to your storage account. In the right-hand window, selectUpload.
After you finish uploading, select your uploaded schema. On the toolbar, selectCopy URLso that you copy the schema's URL.
After you finish uploading, select your uploaded schema. On the toolbar, selectCopy URLso that you copy the schema's URL.
Return to the Azure portal where theAdd Schemapane is open. Enter a name for your assembly. SelectLarge file (larger than 2 MB).TheContent URIbox now appears, rather than theSchemabox.
Return to the Azure portal where theAdd Schemapane is open. Enter a name for your assembly. SelectLarge file (larger than 2 MB).
TheContent URIbox now appears, rather than theSchemabox.
In theContent URIbox, paste your schema's URL. Finish adding your schema.
In theContent URIbox, paste your schema's URL. Finish adding your schema.
After your schema finishes uploading, the schema appears in theSchemaslist. On your integration account'sOverviewpage, underArtifacts, your uploaded schema appears.

Upload the schema to your storage account. In the right-hand window, selectUpload.
Upload the schema to your storage account. In the right-hand window, selectUpload.
After you finish uploading, generate a shared access signature (SAS) for your schema. From your schema's shortcut menu, selectGet Shared Access Signature.
After you finish uploading, generate a shared access signature (SAS) for your schema. From your schema's shortcut menu, selectGet Shared Access Signature.
In theShared Access Signaturepane, selectGenerate container-level shared access signature URI>Create. After the SAS URL gets generated, next to theURLbox, selectCopy.
In theShared Access Signaturepane, selectGenerate container-level shared access signature URI>Create. After the SAS URL gets generated, next to theURLbox, selectCopy.
Return to the Azure portal where theAdd Schemapane is open. SelectLarge file.TheContent URIbox now appears, rather than theSchemabox.
Return to the Azure portal where theAdd Schemapane is open. SelectLarge file.
TheContent URIbox now appears, rather than theSchemabox.
In theContent URIbox, paste the SAS URI you previously generated. Finish adding your schema.
In theContent URIbox, paste the SAS URI you previously generated. Finish adding your schema.
After your schema finishes uploading, the schema appears in theSchemaslist. On your integration account'sOverviewpage, underArtifacts, your uploaded schema appears.
For a Standard logic app resource, the following steps apply only if you want to add a schema directly to your resource. Otherwise,add the schema to your integration account.
On the logic app resource menu, underSettings, selectSchemas.
On the logic app resource menu, underSettings, selectSchemas.
On theSchemaspane toolbar, selectAdd.
On theSchemaspane toolbar, selectAdd.
On theAdd Schemapane, enter a unique name for your schema.
On theAdd Schemapane, enter a unique name for your schema.
Next to theSchemabox, select the folder icon. Select the schema to upload.
Next to theSchemabox, select the folder icon. Select the schema to upload.
When you're done, selectOK.After your schema file finishes uploading, the schema appears in theSchemaslist. On your integration account'sOverviewpage, underArtifacts, your uploaded schema also appears.
When you're done, selectOK.
After your schema file finishes uploading, the schema appears in theSchemaslist. On your integration account'sOverviewpage, underArtifacts, your uploaded schema also appears.
On your computer, go to your project'slocalfolder, and expand the following folders:Artifacts>Schemas.
On your computer, go to your project'slocalfolder, and expand the following folders:Artifacts>Schemas.
In theSchemasfolder, add your schema (.xsd) file.
In theSchemasfolder, add your schema (.xsd) file.
Return to Visual Studio Code.Your schema file now appears in your project, for example:
Return to Visual Studio Code.
Your schema file now appears in your project, for example:


Edit a schema
To update an existing schema, you have to upload a new schema file that has the changes you want. However, you can first download the existing schema for editing.
Consumption
Standard
In theAzure portal, open your integration account, if not already open.
In theAzure portal, open your integration account, if not already open.
On your integration account's menu, underSettings, selectSchemas.
On your integration account's menu, underSettings, selectSchemas.
After theSchemaspane opens, select your schema. To download and edit the schema first, on theSchemaspane toolbar, selectDownload, and save the schema.
After theSchemaspane opens, select your schema. To download and edit the schema first, on theSchemaspane toolbar, selectDownload, and save the schema.
When you're ready to upload the updated schema, on theSchemaspane, select the schema that you want to update. On theSchemaspane toolbar, selectUpdate.
When you're ready to upload the updated schema, on theSchemaspane, select the schema that you want to update. On theSchemaspane toolbar, selectUpdate.
Find and select the updated schema you want to upload.
Find and select the updated schema you want to upload.
When you're done, selectOK.After your schema file finishes uploading, the updated schema appears in theSchemaslist.
When you're done, selectOK.
After your schema file finishes uploading, the updated schema appears in theSchemaslist.
The following steps apply only if you're updating a schema that you added to your logic app resource. Otherwise, follow the Consumption steps for updating a schema in your integration account.
In theAzure portal, open your logic app resource, if not already open.
In theAzure portal, open your logic app resource, if not already open.
On the logic app resource menu, underSettings, selectSchemas.
On the logic app resource menu, underSettings, selectSchemas.
After theSchemaspane opens, select your schema. To download and edit the schema first, on theSchemaspane toolbar, selectDownload, and save the schema.
After theSchemaspane opens, select your schema. To download and edit the schema first, on theSchemaspane toolbar, selectDownload, and save the schema.
On theSchemaspane toolbar, selectAdd.
On theSchemaspane toolbar, selectAdd.
On theAdd schemapane, enter a unique name for your schema.
On theAdd schemapane, enter a unique name for your schema.
Next to theSchemabox, select the folder icon. Select the schema to upload.
Next to theSchemabox, select the folder icon. Select the schema to upload.
When you're done, selectOK.After your schema file finishes uploading, the updated schema appears in theSchemaslist.
When you're done, selectOK.
After your schema file finishes uploading, the updated schema appears in theSchemaslist.

Delete a schema
Consumption
Standard
In theAzure portal, open your integration account, if not already open.
In theAzure portal, open your integration account, if not already open.
On your integration account resource menu, underSettings, selectSchemas.
On your integration account resource menu, underSettings, selectSchemas.
After theSchemaspane opens, select your schema, and then selectDelete.
After theSchemaspane opens, select your schema, and then selectDelete.
To confirm you want to delete the schema, selectYes.
To confirm you want to delete the schema, selectYes.
The following steps apply only if you're deleting a schema that you added to your logic app resource. Otherwise, follow the Consumption steps for deleting a schema from your integration account.
In theAzure portal, open your logic app resource, if not already open.
In theAzure portal, open your logic app resource, if not already open.
On the logic app resource menu, underSettings, selectSchemas.
On the logic app resource menu, underSettings, selectSchemas.
After theSchemaspane opens, select your schema, and then selectDelete.
After theSchemaspane opens, select your schema, and then selectDelete.
To confirm you want to delete the schema, selectYes.
To confirm you want to delete the schema, selectYes.
Next steps
Validate XML for workflows in Azure Logic Apps
Transform XML for workflows in Azure Logic Apps
Feedback
Was this page helpful?
Additional resources