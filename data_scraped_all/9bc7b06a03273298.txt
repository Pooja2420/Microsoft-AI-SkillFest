Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
How to create an SMB Azure file share
Article
2025-03-12
25 contributors
In this article
Before you create an Azure file share, you need to answer two questions about how you want to use it:
What are the performance requirements for your Azure file share?Azure Files offers two different media tiers of storage, SSD (premium) and HDD (standard), which enable you to tailor your file shares to the performance and price requirements of your scenario. SSD file shares provide consistent high performance and low latency, within single-digit milliseconds for most IO operations. HDD file shares provide cost-effective storage for general purpose use.
What are the performance requirements for your Azure file share?Azure Files offers two different media tiers of storage, SSD (premium) and HDD (standard), which enable you to tailor your file shares to the performance and price requirements of your scenario. SSD file shares provide consistent high performance and low latency, within single-digit milliseconds for most IO operations. HDD file shares provide cost-effective storage for general purpose use.
What are your redundancy requirements for your Azure file share?Azure Files offers Local (LRS), Zone (ZRS), Geo (GRS), and GeoZone (GZRS) redundancy options for file shares. SSD file shares are only available for the Local and Zone redundancy types. SeeAzure Files redundancyfor more information.
What are your redundancy requirements for your Azure file share?Azure Files offers Local (LRS), Zone (ZRS), Geo (GRS), and GeoZone (GZRS) redundancy options for file shares. SSD file shares are only available for the Local and Zone redundancy types. SeeAzure Files redundancyfor more information.
For more information on these choices, seePlanning for an Azure Files deployment.
Applies to
Prerequisites
This article assumes that you have an Azure subscription. If you don't have an Azure subscription, then create afree accountbefore you begin.
If you intend to use Azure PowerShell,install the latest version.
If you intend to use Azure CLI,install the latest version.
Create a storage account
Azure file shares are deployed intostorage accounts, which are top-level objects that represent a shared pool of storage. This pool of storage can be used to deploy multiple file shares.
Storage accounts have two properties, kind and SKU, which dictate the billing model, media tier, and redundancy of the file shares deployed in the storage account. For Azure Files, there are three main combinations of kind and SKU to consider:
StandardV2_LRS
StandardV2_ZRS
StandardV2_GRS
StandardV2_GZRS
Standard_LRS
Standard_ZRS
Standard_GRS
Standard_GZRS
Premium_LRS
Premium_ZRS
If you're creating an HDD file share, you can choose between the provisioned v2 and pay-as-you-go billing models. Both models are fully supported, however, we recommend provisioned v2 for new file share deployments. Provisioned v2 file shares are currently available in a limited subset of regions; seeprovisioned v2 availabilityfor more information.
Portal
PowerShell
Azure CLI
To create a storage account via the Azure portal, use the search box at the top of the Azure portal to search forstorage accountsand select the matching result.

This shows a list of all existing storage accounts available in your visible subscriptions. Click+ Createto create a new storage account.
Basics
The first tab to complete to create a storage account is labeledBasics, which contains the required fields to create a storage account.

Azure Blob Storage or Azure Data Lake Storage Gen 2
Azure Files
Other (tables and queues)
Standard
Premium
StandardPay-as-you-goProvisioned v2
Pay-as-you-go
Provisioned v2
PremiumProvisioned v1
Provisioned v1
Locally-redundant storage (LRS)
Geo-redundant storage (GRS)
Zone-redundant storage (ZRS)
Geo-zone-redundant storage (GZRS)
Advanced
TheAdvancedtab is optional, but provides more granular settings for the storage account. The first section relates toSecuritysettings.

TheHierarchical Namespacesection applies only to Azure Blob storage use, even in FileStorage storage accounts using the provisioned v1 or provisioned v2 billing models which can only contain Azure Files. Azure file shares support a hierarchical namespace regardless of the value of these settings.
TheAccess protocolssection applies only to Azure Blob storage use, even in FileStorage storage accounts using the provisioned v1 or provisioned v2 billing models which can only contain Azure Files.
TheBlob storagesection applies only to Azure Blob storage use, even in FileStorage storage accounts using the provisioned v1 or provisioned v2 models which can only contain Azure Files.
Networking
The networking section allows you to configure networking options. These settings are optional for the creation of the storage account and can be configured later if desired. For more information on these options, seeAzure Files networking considerations.
Data protection
TheData protectiontab contains ability to enable or disable soft-delete. The soft-delete option for Azure Files is under theRecoverysection.

TheTrackingsection applies only to Azure Blob storage use, even in FileStorage storage accounts using the provisioned v1 or provisioned v2 billing models which can only contain Azure Files.
TheAccess controlsection applies only to Azure Blob storage use, even in FileStorage storage accounts using the provisioned v1 or provisioned v2 billing models which can only contain Azure Files.
Encryption
TheEncryptiontab controls settings related to encryption at rest.

Microsoft-managed keys
Customer-managed keys
Blobs and files only
All service types (blobs, files, tables, and queues)
Tags
Tags are name/value pairs that enable you to categorize resources and view consolidated billing by applying the same tag to multiple resources and resource groups. These are optional and can be applied after storage account creation.
Review + create
The final step to create the storage account is to select theCreatebutton on theReview + createtab. This button isn't available until all the required fields for a storage account are completed.
Create a provisioned v2 storage account (PowerShell)
To create a provisioned v2 storage account using PowerShell, use theNew-AzStorageAccountcmdlet in the Az.Storage PowerShell module. This cmdlet has many options; only the required options are shown. To learn more about advanced options, see theNew-AzStorageAccountcmdlet documentation.
New-AzStorageAccount
New-AzStorageAccount
To create a storage account for provisioned v2 file shares, use the following command. Remember to replace the values for the variables$resourceGroupName,$storageAccountName,$region, and$storageAccountSkuwith the desired values for your storage account deployment.
$resourceGroupName
$storageAccountName
$region
$storageAccountSku
$resourceGroupName = "<my-resource-group>"
$storageAccountName = "<my-storage-account-name>"
$region = "<my-region>"
$storageAccountKind = "FileStorage"
# Valid SKUs for provisioned v2 HDD file share are 'StandardV2_LRS' (HDD Local Pv2), 'StandardV2_GRS' (HDD Geo Pv2), 'StandardV2_ZRS' (HDD Zone Pv2), 'StandardV2_GZRS' (HDD GeoZone Pv2).
$storageAccountSku = "StandardV2_LRS"

New-AzStorageAccount -ResourceGroupName $resourceGroupName -AccountName $storageAccountName -SkuName $storageAccountSku -Kind $storageAccountKind -Location $region
$resourceGroupName = "<my-resource-group>"
$storageAccountName = "<my-storage-account-name>"
$region = "<my-region>"
$storageAccountKind = "FileStorage"
# Valid SKUs for provisioned v2 HDD file share are 'StandardV2_LRS' (HDD Local Pv2), 'StandardV2_GRS' (HDD Geo Pv2), 'StandardV2_ZRS' (HDD Zone Pv2), 'StandardV2_GZRS' (HDD GeoZone Pv2).
$storageAccountSku = "StandardV2_LRS"

New-AzStorageAccount -ResourceGroupName $resourceGroupName -AccountName $storageAccountName -SkuName $storageAccountSku -Kind $storageAccountKind -Location $region
To view the settings and service usage for the Provisiond V2 storage account, use the following command.
Get-AzStorageFileServiceUsage -ResourceGroupName $resourceGroupName -StorageAccountName $storageAccountName
Get-AzStorageFileServiceUsage -ResourceGroupName $resourceGroupName -StorageAccountName $storageAccountName
Create a provisioned v1 or pay-as-you-go storage account (PowerShell)
To create a provisioned v1 or pay-as-you-go storage account using PowerShell, use theNew-AzStorageAccountcmdlet in the Az.Storage PowerShell module. This cmdlet has many options; only the required options are shown. To learn more about advanced options, see theNew-AzStorageAccountcmdlet documentation.
New-AzStorageAccount
New-AzStorageAccount
To create a storage account for provisioned v1 or pay-as-you-go file shares, use the following command. Remember to replace the values for the variables$resourceGroupName,$storageAccountName,$region,$storageAccountKind, and$storageAccountSkuwith the desired values for your storage account deployment.
$resourceGroupName
$storageAccountName
$region
$storageAccountKind
$storageAccountSku
$resourceGroupName = "<my-resource-group>"
$storageAccountName = "<my-storage-account-name>"
$region = "<my-region>"

# Valid storage account kinds are FileStorage (SSD provisioned v1) and StorageV2 
# (HDD pay-as-you-go). Create HDD provisioned v2 storage accounts with 
# New-AzResource.
$storageAccountKind = "FileStorage"

# Valid SKUs for FileStorage are Premium_LRS (SSD Local provisioned v1) and 
# Premium_ZRS (SSD Zone provisioned v1).
# 
# Valid SKUs for StorageV2 are Standard_LRS (HDD Local pay-as-you-go), 
# Standard_ZRS (HDD Zone pay-as-you-go), Standard_GRS (HDD Geo pay-as-you-go),
# and Standard_GZRS (HDD GeoZone pay-as-you-go).
$storageAccountSku = "Premium_LRS"

$storageAccount = New-AzStorageAccount `
        -ResourceGroupName $resourceGroupName `
        -Name $storageAccountName `
        -Location $region `
        -Kind $storageAccountKind `
        -SkuName $storageAccountSku
$resourceGroupName = "<my-resource-group>"
$storageAccountName = "<my-storage-account-name>"
$region = "<my-region>"

# Valid storage account kinds are FileStorage (SSD provisioned v1) and StorageV2 
# (HDD pay-as-you-go). Create HDD provisioned v2 storage accounts with 
# New-AzResource.
$storageAccountKind = "FileStorage"

# Valid SKUs for FileStorage are Premium_LRS (SSD Local provisioned v1) and 
# Premium_ZRS (SSD Zone provisioned v1).
# 
# Valid SKUs for StorageV2 are Standard_LRS (HDD Local pay-as-you-go), 
# Standard_ZRS (HDD Zone pay-as-you-go), Standard_GRS (HDD Geo pay-as-you-go),
# and Standard_GZRS (HDD GeoZone pay-as-you-go).
$storageAccountSku = "Premium_LRS"

$storageAccount = New-AzStorageAccount `
        -ResourceGroupName $resourceGroupName `
        -Name $storageAccountName `
        -Location $region `
        -Kind $storageAccountKind `
        -SkuName $storageAccountSku
Create a provisioned v2 storage account (Azure CLI)
To create a provisioned v2 storage account using Azure CLI, use theaz storage account createcommand. This command has many options; only the required options are shown. To learn more about the advanced options, see theaz storage account createcommand documentation.
az storage account create
az storage account create
To create a storage account for provisioned v2 file shares, use the following command. Remember to replace the values for the variablesresourceGroupName,storageAccountName,region,storageAccountKind, andstorageAccountSkuwith the desired values for your storage account deployment.
resourceGroupName
storageAccountName
region
storageAccountKind
storageAccountSku
resourceGroupName="<my-resource-group>"
storageAccountName="<my-storage-account-name>"
region="<my-region>"
storageAccountKind="FileStorage"

# Valid SKUs for provisioned v2 HDD file share are 'StandardV2_LRS' (HDD Local Pv2), 'StandardV2_GRS' (HDD Geo Pv2), 'StandardV2_ZRS' (HDD Zone Pv2), 'StandardV2_GZRS' (HDD GeoZone Pv2).
storageAccountSku="StandardV2_LRS"

az storage account create --resource-group $resourceGroupName --name $storageAccountName --location $region --kind $storageAccountKind --sku $storageAccountSku --output none
resourceGroupName="<my-resource-group>"
storageAccountName="<my-storage-account-name>"
region="<my-region>"
storageAccountKind="FileStorage"

# Valid SKUs for provisioned v2 HDD file share are 'StandardV2_LRS' (HDD Local Pv2), 'StandardV2_GRS' (HDD Geo Pv2), 'StandardV2_ZRS' (HDD Zone Pv2), 'StandardV2_GZRS' (HDD GeoZone Pv2).
storageAccountSku="StandardV2_LRS"

az storage account create --resource-group $resourceGroupName --name $storageAccountName --location $region --kind $storageAccountKind --sku $storageAccountSku --output none
To view the settings and service usage for the Provisiond V2 storage account, use the following command.
az storage account file-service-usage --account-name $storageAccountName -g $resourceGroupName
az storage account file-service-usage --account-name $storageAccountName -g $resourceGroupName
Create a provisioned v1 or pay-as-you-go storage account (Azure CLI)
To create a provisioned v1 or pay-as-you-go storage account using Azure CLI, use theaz storage account createcommand. This command has many options; only the required options are shown. To learn more about the advanced options, see theaz storage account createcommand documentation.
az storage account create
az storage account create
To create a storage account for provisioned v1 or pay-as-you-go file shares, use the following command. Remember to replace the values for the variablesresourceGroupName,storageAccountName,region,storageAccountKind, andstorageAccountSkuwith the desired values for your storage account deployment.
resourceGroupName
storageAccountName
region
storageAccountKind
storageAccountSku
resourceGroupName="<my-resource-group>"
storageAccountName="<my-storage-account-name>"
region="<my-region>"

# Valid storage account kinds are FileStorage (SSD provisioned v1) and StorageV2 
# (HDD pay-as-you-go). Create HDD provisioned v2 storage accounts with 
# az resource create.
storageAccountKind="FileStorage"

# Valid SKUs for FileStorage are Premium_LRS (SSD Local provisioned v1) and 
# Premium_ZRS (SSD Zone provisioned v1).
# 
# Valid SKUs for StorageV2 are Standard_LRS (HDD Local pay-as-you-go), 
# Standard_ZRS (HDD Zone pay-as-you-go), Standard_GRS (HDD Geo pay-as-you-go),
# and Standard_GZRS (HDD GeoZone pay-as-you-go).
storageAccountSku="Premium_LRS"

az storage account create \
    --resource-group $resourceGroupName \
    --name $storageAccountName \
    --location $region \
    --kind $storageAccountKind \
    --sku $storageAccountSku \
    --output none
resourceGroupName="<my-resource-group>"
storageAccountName="<my-storage-account-name>"
region="<my-region>"

# Valid storage account kinds are FileStorage (SSD provisioned v1) and StorageV2 
# (HDD pay-as-you-go). Create HDD provisioned v2 storage accounts with 
# az resource create.
storageAccountKind="FileStorage"

# Valid SKUs for FileStorage are Premium_LRS (SSD Local provisioned v1) and 
# Premium_ZRS (SSD Zone provisioned v1).
# 
# Valid SKUs for StorageV2 are Standard_LRS (HDD Local pay-as-you-go), 
# Standard_ZRS (HDD Zone pay-as-you-go), Standard_GRS (HDD Geo pay-as-you-go),
# and Standard_GZRS (HDD GeoZone pay-as-you-go).
storageAccountSku="Premium_LRS"

az storage account create \
    --resource-group $resourceGroupName \
    --name $storageAccountName \
    --location $region \
    --kind $storageAccountKind \
    --sku $storageAccountSku \
    --output none
Create a file share
After you create a storage account, you can create a file share. This process is different depending on whether you created a provisioned v2, provisioned v1, or pay-as-you-go storage account.
Note
The name of your file share must be all lower-case letters, numbers, and single hyphens, and must begin and end with a lower-case letter or number. The name can't contain two consecutive hyphens. For details about naming file shares and files, seeNaming and referencing shares, directories, files, and metadata.
Create a provisioned v2 file share
When you create a file share using the provisioned v2 billing model, you specify how much storage, IOPS, and throughput your file share needs. The amount of each quantity that you provision determines your total bill. By default, when you create a new file share using the provisioned v2 model, we provide a recommendation for how many IOPS and how much throughput you need based on the amount of provisioned storage you specify. Depending on your individual file share requirements, you may find that you require more or less IOPS or throughput than our recommendations, and can optionally override these recommendations with your own values as desired. To learn more about the provisioned v2 model, seeUnderstanding the provisioned v2 billing model.
Portal
PowerShell
Azure CLI
Follow these instructions to create a new Azure file share using the Azure portal.
In your newly created storage account, selectFile sharesunderData storagein the table of contents for the storage account.
In your newly created storage account, selectFile sharesunderData storagein the table of contents for the storage account.

In the file share listing, you should see any previously created file shares in this storage account or an empty table if no file shares exist. Select+ File shareto create a new file share.
In the file share listing, you should see any previously created file shares in this storage account or an empty table if no file shares exist. Select+ File shareto create a new file share.
Complete the field in theBasicstab of the new file share blade:Name: The name of the file share to be created.Provisioned storage (GiB): The amount of storage to provision on the share. The actual provisioned storage capacity is the amount that you're billed for regardless of actual usage.Provisioned IOPS and throughput: A radio button group that lets you select betweenRecommended provisioningandManually specify IOPS and throughput. The IOPS and throughput recommendations are based on typical customer usage for that amount of provisioned storage for that media tier, so if you don't know specifically what your IOPS and throughput requirements are, we recommend you stick with the recommendations and adjust later as needed.IOPS: If you selectManually specify IOPS and throughput, this textbox enables you to enter the amount of IOPS you want to provision on this file share.Throughput (MiB/sec): If you selectManually specify IOPS and throughput, this textbox enables you to enter the amount of throughput you want to provision on this file share.
Complete the field in theBasicstab of the new file share blade:

Name: The name of the file share to be created.
Name: The name of the file share to be created.
Provisioned storage (GiB): The amount of storage to provision on the share. The actual provisioned storage capacity is the amount that you're billed for regardless of actual usage.
Provisioned storage (GiB): The amount of storage to provision on the share. The actual provisioned storage capacity is the amount that you're billed for regardless of actual usage.
Provisioned IOPS and throughput: A radio button group that lets you select betweenRecommended provisioningandManually specify IOPS and throughput. The IOPS and throughput recommendations are based on typical customer usage for that amount of provisioned storage for that media tier, so if you don't know specifically what your IOPS and throughput requirements are, we recommend you stick with the recommendations and adjust later as needed.IOPS: If you selectManually specify IOPS and throughput, this textbox enables you to enter the amount of IOPS you want to provision on this file share.Throughput (MiB/sec): If you selectManually specify IOPS and throughput, this textbox enables you to enter the amount of throughput you want to provision on this file share.
Provisioned IOPS and throughput: A radio button group that lets you select betweenRecommended provisioningandManually specify IOPS and throughput. The IOPS and throughput recommendations are based on typical customer usage for that amount of provisioned storage for that media tier, so if you don't know specifically what your IOPS and throughput requirements are, we recommend you stick with the recommendations and adjust later as needed.
IOPS: If you selectManually specify IOPS and throughput, this textbox enables you to enter the amount of IOPS you want to provision on this file share.
IOPS: If you selectManually specify IOPS and throughput, this textbox enables you to enter the amount of IOPS you want to provision on this file share.
Throughput (MiB/sec): If you selectManually specify IOPS and throughput, this textbox enables you to enter the amount of throughput you want to provision on this file share.
Throughput (MiB/sec): If you selectManually specify IOPS and throughput, this textbox enables you to enter the amount of throughput you want to provision on this file share.
Select theBackuptab. By default,backup is enabledwhen you create an Azure file share using the Azure portal. If you want to disable backup for the file share, uncheck theEnable backupcheckbox. If you want backup enabled, you can either leave the defaults or create a new Recovery Services Vault in the same region and subscription as the storage account. To create a new backup policy, selectCreate a new policy.
Select theBackuptab. By default,backup is enabledwhen you create an Azure file share using the Azure portal. If you want to disable backup for the file share, uncheck theEnable backupcheckbox. If you want backup enabled, you can either leave the defaults or create a new Recovery Services Vault in the same region and subscription as the storage account. To create a new backup policy, selectCreate a new policy.
SelectReview + createand thenCreateto create the Azure file share.
SelectReview + createand thenCreateto create the Azure file share.
You can create a provisioned v2 Azure file share with theNew-AzRmStorageSharecmdlet. The following PowerShell commands assume you set the variables$resourceGroupNameand$storageAccountNameas defined in the "Create Storage Account" section.
New-AzRmStorageShare
$resourceGroupName
$storageAccountName
To create a provisioned v2 file share, use the following command. Remember to replace the values for the variables$shareNameand$provisionedStorageGibwith the desired selections for your file share deployment.
$shareName
$provisionedStorageGib
$shareName = "<name-of-the-file-share>"

# The provisioned storage size of the share in GiB. Valid range is 32 to 262,144.
$provisionedStorageGib = 1024

# If you do not specify on the ProvisionedBandwidthMibps and ProvisionedIops, the deployment will use the recommended provisioning.
$provisionedIops = 3000
$provisionedThroughputMibPerSec = 130

New-AzRmStorageShare -ResourceGroupName $resourceGroupName -AccountName $storageAccountName -ShareName $shareName -QuotaGiB $provisionedStorageGib;
# -ProvisionedBandwidthMibps $provisionedThroughputMibPerSec -ProvisionedIops $provisionedIops
$f = Get-AzRmStorageShare -ResourceGroupName $resourceGroupName -AccountName $storageAccountName -ShareName $shareName;
$f | fl
$shareName = "<name-of-the-file-share>"

# The provisioned storage size of the share in GiB. Valid range is 32 to 262,144.
$provisionedStorageGib = 1024

# If you do not specify on the ProvisionedBandwidthMibps and ProvisionedIops, the deployment will use the recommended provisioning.
$provisionedIops = 3000
$provisionedThroughputMibPerSec = 130

New-AzRmStorageShare -ResourceGroupName $resourceGroupName -AccountName $storageAccountName -ShareName $shareName -QuotaGiB $provisionedStorageGib;
# -ProvisionedBandwidthMibps $provisionedThroughputMibPerSec -ProvisionedIops $provisionedIops
$f = Get-AzRmStorageShare -ResourceGroupName $resourceGroupName -AccountName $storageAccountName -ShareName $shareName;
$f | fl
You can create an Provisioned v2 Azure file share withaz storage share-rm createcommand. The following PowerShell commands assume you set the variablesresourceGroupNameandstorageAccountNameas defined in the creating a storage account with Azure CLI section.
az storage share-rm create
resourceGroupName
storageAccountName
To create a provisioned v2 file share, use the following command. Remember to replace the values for the variablesshareName,provisionedStorageGibwith the desired selections for your file share deployment.
shareName
provisionedStorageGib
shareName="<file-share>"

# The provisioned storage size of the share in GiB. Valid range is 32 to
# 262,144.
provisionedStorageGib=1024

# If you do not specify on the ProvisionedBandwidthMibps and ProvisionedIops, the deployment will use the recommended provisioning.
provisionedIops=3000
provisionedThroughputMibPerSec=130

az storage share-rm create --resource-group $resourceGroupName --name $shareName --storage-account $storageAccountName --quota $provisionedStorageGib
# --provisioned-iops $provisionedIops --provisioned-bandwidth-mibps $provisionedThroughputMibPerSec
shareName="<file-share>"

# The provisioned storage size of the share in GiB. Valid range is 32 to
# 262,144.
provisionedStorageGib=1024

# If you do not specify on the ProvisionedBandwidthMibps and ProvisionedIops, the deployment will use the recommended provisioning.
provisionedIops=3000
provisionedThroughputMibPerSec=130

az storage share-rm create --resource-group $resourceGroupName --name $shareName --storage-account $storageAccountName --quota $provisionedStorageGib
# --provisioned-iops $provisionedIops --provisioned-bandwidth-mibps $provisionedThroughputMibPerSec
Create an SSD provisioned v1 file share
When you create a file share using the provisioned v1 billing model, you specify how much storage your share needs, and IOPS and throughput capacity are computed for you based on how much storage provisioned. Depending on your individual file share requirements, you may find that you require more IOPS or throughput than our recommendations. In this case, you need to provision more storage to get the required IOPS or throughput. To learn more about the provisioned v1 model, seeUnderstanding the provisioned v1 billing model.
Portal
PowerShell
Azure CLI
Follow these instructions to create a new Azure file share using the Azure portal.
In your newly created storage account, selectFile sharesunderData storagein the table of contents for the storage account.
In your newly created storage account, selectFile sharesunderData storagein the table of contents for the storage account.

In the file share listing, you should see any previously created file shares in this storage account or an empty table if no file shares exist. Select+ File shareto create a new file share.
In the file share listing, you should see any previously created file shares in this storage account or an empty table if no file shares exist. Select+ File shareto create a new file share.
Complete the fields in theBasicstab of new file share blade:Name: The name of the file share to be created.Provisioned storage (GiB): The amount of storage to provision on the share. The provisioned storage capacity is the amount that you're billed for regardless of actual usage.Protocol: The file sharing protocol to use on the share. By default, new shares use the SMB protocol. Select the NFS protocol for NFS v4.1 shares.Root Squash: When NFS is selected as the chosen protocol, toggling the root squash behavior reduces the rights of the root user for NFS file shares.
Complete the fields in theBasicstab of new file share blade:

Name: The name of the file share to be created.
Name: The name of the file share to be created.
Provisioned storage (GiB): The amount of storage to provision on the share. The provisioned storage capacity is the amount that you're billed for regardless of actual usage.
Provisioned storage (GiB): The amount of storage to provision on the share. The provisioned storage capacity is the amount that you're billed for regardless of actual usage.
Protocol: The file sharing protocol to use on the share. By default, new shares use the SMB protocol. Select the NFS protocol for NFS v4.1 shares.
Protocol: The file sharing protocol to use on the share. By default, new shares use the SMB protocol. Select the NFS protocol for NFS v4.1 shares.
Root Squash: When NFS is selected as the chosen protocol, toggling the root squash behavior reduces the rights of the root user for NFS file shares.
Root Squash: When NFS is selected as the chosen protocol, toggling the root squash behavior reduces the rights of the root user for NFS file shares.
Select theBackuptab. By default,backup is enabledwhen you create an Azure file share using the Azure portal. If you want to disable backup for the file share, uncheck theEnable backupcheckbox. If you want backup enabled, you can either leave the defaults or create a new Recovery Services Vault in the same region and subscription as the storage account. To create a new backup policy, selectCreate a new policy. NFS shares don't support Azure Backup.
Select theBackuptab. By default,backup is enabledwhen you create an Azure file share using the Azure portal. If you want to disable backup for the file share, uncheck theEnable backupcheckbox. If you want backup enabled, you can either leave the defaults or create a new Recovery Services Vault in the same region and subscription as the storage account. To create a new backup policy, selectCreate a new policy. NFS shares don't support Azure Backup.
SelectReview + createand thenCreateto create the Azure file share.
SelectReview + createand thenCreateto create the Azure file share.
You can create an Azure file share with theNew-AzRmStorageSharecmdlet. The following PowerShell commands assume you set the variables$resourceGroupNameand$storageAccountNameas defined in the creating a storage account in the Azure PowerShell section.
New-AzRmStorageShare
$resourceGroupName
$storageAccountName
To create a provisioned v1 file share, use the following command. Remember to replace the values for the variables$shareName,$provisionedStorageGib, and$protocolwith the desired selections for your file share deployment.
$shareName
$provisionedStorageGib
$protocol
$shareName = "<file-share>"

# The provisioned storage size of the share in GiB. Valid range is 100 to 
# 102,400.
$provisionedStorageGib = 1024

# The protocol chosen for the file share. Valid set contains "SMB" and "NFS".
$protocol = "SMB"

New-AzRmStorageShare `
        -ResourceGroupName $resourceGroupName `
        -StorageAccountName $storageAccountName `
        -Name $shareName `
        -QuotaGiB $provisionedStorageGib `
        -EnabledProtocol $protocol | `
    Out-Null
$shareName = "<file-share>"

# The provisioned storage size of the share in GiB. Valid range is 100 to 
# 102,400.
$provisionedStorageGib = 1024

# The protocol chosen for the file share. Valid set contains "SMB" and "NFS".
$protocol = "SMB"

New-AzRmStorageShare `
        -ResourceGroupName $resourceGroupName `
        -StorageAccountName $storageAccountName `
        -Name $shareName `
        -QuotaGiB $provisionedStorageGib `
        -EnabledProtocol $protocol | `
    Out-Null
You can create an Azure file share withaz storage share-rm createcommand. The following PowerShell commands assume you set the variablesresourceGroupNameandstorageAccountNameas defined in the creating a storage account with Azure CLI section.
az storage share-rm create
resourceGroupName
storageAccountName
To create a provisioned v1 file share, use the following command. Remember to replace the values for the variablesshareName,provisionedStorageGib, andprotocolwith the desired selections for your file share deployment.
shareName
provisionedStorageGib
protocol
shareName="<file-share>"

# The provisioned storage size of the share in GiB. Valid range is 100 to 
# 102,400.
provisionedStorageGib=1024

# The protocol chosen for the file share. Valid set contains "SMB" and "NFS".
protocol="SMB"

az storage share-rm create \
    --resource-group $resourceGroupName \
    --storage-account $storageAccountName \
    --name $shareName \
    --quota $provisionedStorageGib \
    --enabled-protocols $protocol \
    --output none
shareName="<file-share>"

# The provisioned storage size of the share in GiB. Valid range is 100 to 
# 102,400.
provisionedStorageGib=1024

# The protocol chosen for the file share. Valid set contains "SMB" and "NFS".
protocol="SMB"

az storage share-rm create \
    --resource-group $resourceGroupName \
    --storage-account $storageAccountName \
    --name $shareName \
    --quota $provisionedStorageGib \
    --enabled-protocols $protocol \
    --output none
Create an HDD pay-as-you-go file share
HDD pay-as-you-go file shares have a property called access tier. All three access tiers are stored on the exact same storage hardware. The main difference for these three access tiers is their data at-rest storage prices, which are lower in cooler tiers, and the transaction prices, which are higher in the cooler tiers. To learn more about the differences between tiers, seedifferences in access tiers.
Portal
PowerShell
Azure CLI
Follow these instructions to create a new Azure file share using the Azure portal.
In your newly created storage account, selectFile sharesunderData storagein the table of contents for the storage account.
In your newly created storage account, selectFile sharesunderData storagein the table of contents for the storage account.

In the file share listing, you should see any previously created file shares in this storage account or an empty table if no file shares exist. Select+ File shareto create a new file share.
In the file share listing, you should see any previously created file shares in this storage account or an empty table if no file shares exist. Select+ File shareto create a new file share.
Complete the fields in theBasicstab of new file share blade:Name: The name of the file share to be created.Access tier: The selected access tier for a pay-as-you-go file share. We recommend picking thetransaction optimizedaccess tier possible during a migration, to minimize transaction expenses, and then switching to a lower tier if desired after the migration is complete.
Complete the fields in theBasicstab of new file share blade:

Name: The name of the file share to be created.
Name: The name of the file share to be created.
Access tier: The selected access tier for a pay-as-you-go file share. We recommend picking thetransaction optimizedaccess tier possible during a migration, to minimize transaction expenses, and then switching to a lower tier if desired after the migration is complete.
Access tier: The selected access tier for a pay-as-you-go file share. We recommend picking thetransaction optimizedaccess tier possible during a migration, to minimize transaction expenses, and then switching to a lower tier if desired after the migration is complete.
Select theBackuptab. By default,backup is enabledwhen you create an Azure file share using the Azure portal. If you want to disable backup for the file share, uncheck theEnable backupcheckbox. If you want backup enabled, you can either leave the defaults or create a new Recovery Services Vault in the same region and subscription as the storage account. To create a new backup policy, selectCreate a new policy.
Select theBackuptab. By default,backup is enabledwhen you create an Azure file share using the Azure portal. If you want to disable backup for the file share, uncheck theEnable backupcheckbox. If you want backup enabled, you can either leave the defaults or create a new Recovery Services Vault in the same region and subscription as the storage account. To create a new backup policy, selectCreate a new policy.
SelectReview + createand thenCreateto create the Azure file share.
SelectReview + createand thenCreateto create the Azure file share.
You can create an Azure file share with theNew-AzRmStorageSharecmdlet. The following PowerShell commands assume you set the variables$resourceGroupNameand$storageAccountNameas defined in the creating a storage account with Azure PowerShell section.
New-AzRmStorageShare
$resourceGroupName
$storageAccountName
To create a pay-as-you-go file share, use the following command. Remember to replace the values for the variables$shareNameand$accessTierwith the desired selections for your file share deployment.
$shareName
$accessTier
$shareName = "<file-share>"

# The access tier of the file share. Valid set contains "TransactionOptimized",
# "Hot", "Cool"
$accessTier = "Hot"

New-AzRmStorageShare `
        -ResourceGroupName $resourceGroupName `
        -StorageAccountName $storageAccountName `
        -Name $shareName `
        -AccessTier $accessTier | `
    Out-Null
$shareName = "<file-share>"

# The access tier of the file share. Valid set contains "TransactionOptimized",
# "Hot", "Cool"
$accessTier = "Hot"

New-AzRmStorageShare `
        -ResourceGroupName $resourceGroupName `
        -StorageAccountName $storageAccountName `
        -Name $shareName `
        -AccessTier $accessTier | `
    Out-Null
You can create an Azure file share with theaz storage share-rm createcommand. The following Azure CLI commands assume you set the variables$resourceGroupNameand$storageAccountNameas defined in the creating a storage account with Azure CLI section.
az storage share-rm create
$resourceGroupName
$storageAccountName
To create a pay-as-you-go file share, use the following command. Remember to replace the values for the variablesshareNameandaccessTierwith the desired selections for your file share deployment.
shareName
accessTier
shareName="<file-share>"

# The access tier of the file share. Valid set contains "TransactionOptimized",
# "Hot", and "Cool".
accessTier="Hot"

az storage share-rm create \
    --resource-group $resourceGroupName \
    --storage-account $storageAccountName \
    --name $shareName \
    --access-tier $accessTier \
    --output none
shareName="<file-share>"

# The access tier of the file share. Valid set contains "TransactionOptimized",
# "Hot", and "Cool".
accessTier="Hot"

az storage share-rm create \
    --resource-group $resourceGroupName \
    --storage-account $storageAccountName \
    --name $shareName \
    --access-tier $accessTier \
    --output none
Change the cost and performance characteristics of a file share
After creating your file share, you may need to adjust the provisioning (provisioned models) or access tier (pay-as-you-go model) of the share. The following sections show you how to adjust the relevant properties for your share.
Change the cost and performance characteristics of a provisioned v2 file share
After creating your provisioned v2 file share, you can change one or all three of the provisioned quantities of your file share.
Portal
PowerShell
Azure CLI
Follow these instructions to update the provisioning for your file share.
In your storage account, selectFile sharesunderData storagein the table of contents for the storage account.
In your storage account, selectFile sharesunderData storagein the table of contents for the storage account.
In the file share listing, select the file share for which you desire to change the provisioning.
In the file share listing, select the file share for which you desire to change the provisioning.
In the file share overview, selectChange size and performance.
In the file share overview, selectChange size and performance.

TheSize and performancepop out dialog has the following options:Provisioned storage (GiB): The amount of storage provisioned on the share.Provisioned IOPS and throughput: A radio button group that lets you select betweenRecommended provisioningandManually specify IOPS and throughput. If your share is at the recommended IOPS and throughput level for the amount of storage provisioned,Recommended provisioningwill be selected; otherwise,Manually specify IOPS and throughputwill be selected. You can toggle between these two options depending on your desire to change share provisioning.IOPS: If you selectManually specify IOPS and throughput, this textbox enables you to change the amount of IOPS provisioned on this file share.Throughput (MiB/sec): If you selectManually specify IOPS and throughput, this textbox enables you to change the amount of throughput provisioned on this file share.
TheSize and performancepop out dialog has the following options:

Provisioned storage (GiB): The amount of storage provisioned on the share.
Provisioned storage (GiB): The amount of storage provisioned on the share.
Provisioned IOPS and throughput: A radio button group that lets you select betweenRecommended provisioningandManually specify IOPS and throughput. If your share is at the recommended IOPS and throughput level for the amount of storage provisioned,Recommended provisioningwill be selected; otherwise,Manually specify IOPS and throughputwill be selected. You can toggle between these two options depending on your desire to change share provisioning.IOPS: If you selectManually specify IOPS and throughput, this textbox enables you to change the amount of IOPS provisioned on this file share.Throughput (MiB/sec): If you selectManually specify IOPS and throughput, this textbox enables you to change the amount of throughput provisioned on this file share.
Provisioned IOPS and throughput: A radio button group that lets you select betweenRecommended provisioningandManually specify IOPS and throughput. If your share is at the recommended IOPS and throughput level for the amount of storage provisioned,Recommended provisioningwill be selected; otherwise,Manually specify IOPS and throughputwill be selected. You can toggle between these two options depending on your desire to change share provisioning.
IOPS: If you selectManually specify IOPS and throughput, this textbox enables you to change the amount of IOPS provisioned on this file share.
IOPS: If you selectManually specify IOPS and throughput, this textbox enables you to change the amount of IOPS provisioned on this file share.
Throughput (MiB/sec): If you selectManually specify IOPS and throughput, this textbox enables you to change the amount of throughput provisioned on this file share.
Throughput (MiB/sec): If you selectManually specify IOPS and throughput, this textbox enables you to change the amount of throughput provisioned on this file share.
SelectSaveto save provisioning changes. Storage, IOPS, and throughput changes are effective within a few minutes after a provisioning change.
SelectSaveto save provisioning changes. Storage, IOPS, and throughput changes are effective within a few minutes after a provisioning change.
You can modify a provisioned v2 file share with theUpdate-AzRmStorageSharecmdlet. Remember to replace the values for the variables$resourceGroupName,$storageAccountName,$shareName,$provisionedMibps,$provisionedIops, and$provisionedStorageGibwith the desired values for your file share.
Update-AzRmStorageShare
$resourceGroupName
$storageAccountName
$shareName
$provisionedMibps
$provisionedIops
$provisionedStorageGib
# The path to the file share resource to be modified.
$resourceGroupName = "<my-resource-group>"
$storageAccountName = "<my-storage-account-name>"
$shareName = "<name-of-the-file-share>"

# The provisioning desired on the file share. Delete the parameters if no
# change is desired.
$provisionedStorageGib = 10240
$provisionedIops = 10000
$provisionedThroughputMibPerSec = 2048

# Update the file share provisioning.
Update-AzRmStorageShare `
        -ResourceGroupName $resourceGroupName `
        -AccountName $storageAccountName `
        -ShareName $shareName `
        -QuotaGiB $provisionedStorageGib `
        -ProvisionedIops $provisionedIops `
        -ProvisionedBandwidthMibps $provisionedThroughputMibPerSec

$f = Get-AzRmStorageShare -ResourceGroupName $resourceGroupName -AccountName $storageAccountName -ShareName $shareName
$f | fl
# The path to the file share resource to be modified.
$resourceGroupName = "<my-resource-group>"
$storageAccountName = "<my-storage-account-name>"
$shareName = "<name-of-the-file-share>"

# The provisioning desired on the file share. Delete the parameters if no
# change is desired.
$provisionedStorageGib = 10240
$provisionedIops = 10000
$provisionedThroughputMibPerSec = 2048

# Update the file share provisioning.
Update-AzRmStorageShare `
        -ResourceGroupName $resourceGroupName `
        -AccountName $storageAccountName `
        -ShareName $shareName `
        -QuotaGiB $provisionedStorageGib `
        -ProvisionedIops $provisionedIops `
        -ProvisionedBandwidthMibps $provisionedThroughputMibPerSec

$f = Get-AzRmStorageShare -ResourceGroupName $resourceGroupName -AccountName $storageAccountName -ShareName $shareName
$f | fl
You can modify a provisioned v2 file share with theaz storage share-rm updatecommand. Remember to replace the values for the variablesresourceGroupName,storageAccountName,fileShareName,provisionedStorageGib,provisionedIops, andprovisionedThroughputMibPerSecwith the desired values for your file share.
az storage share-rm update
resourceGroupName
storageAccountName
fileShareName
provisionedStorageGib
provisionedIops
provisionedThroughputMibPerSec
# The path to the file share resource to be modified.
resourceGroupName="<resource-group>"
storageAccountName="<storage-account>"
fileShareName="<file-share>"

# The provisioning desired on the file share. Delete the parameters if no
# change is desired.
provisionedStorageGib=10240
provisionedIops=10000
provisionedThroughputMibPerSec=2048

# Update the file share provisioning.
az storage share-rm update \
        --resource-group $resourceGroupName \
        --name $shareName \
        --storage-account $storageAccountName \
        --quota $provisionedStorageGib \
        --provisioned-iops $provisionedIops \
        --provisioned-bandwidth-mibps $provisionedThroughputMibPerSec
# The path to the file share resource to be modified.
resourceGroupName="<resource-group>"
storageAccountName="<storage-account>"
fileShareName="<file-share>"

# The provisioning desired on the file share. Delete the parameters if no
# change is desired.
provisionedStorageGib=10240
provisionedIops=10000
provisionedThroughputMibPerSec=2048

# Update the file share provisioning.
az storage share-rm update \
        --resource-group $resourceGroupName \
        --name $shareName \
        --storage-account $storageAccountName \
        --quota $provisionedStorageGib \
        --provisioned-iops $provisionedIops \
        --provisioned-bandwidth-mibps $provisionedThroughputMibPerSec
Change the cost and performance characteristics of a provisioned v1 file share
After creating your provisioned v1 file share, you can change the provisioned storage size of the file share. Changing the provisioned storage of the share will also change the amount of provisioned IOPS and provisioned throughput. For more information, seeprovisioned v1 provisioning detail.
Portal
PowerShell
Azure CLI
Follow these instructions to update the provisioning for your file share.
In your storage account, selectFile sharesunderData storagein the table of contents for the storage account.
In your storage account, selectFile sharesunderData storagein the table of contents for the storage account.
In the file share listing, select the file share for which you desire to change the provisioning.
In the file share listing, select the file share for which you desire to change the provisioning.
In the file share overview selectChange size and performance.
In the file share overview selectChange size and performance.

TheSize and performancepop out dialog has a single option,Provisioned storage (GiB). If you require more IOPS or throughput than the given amount of provisioned storage provides, you can increase your provisioned storage capacity to get additional IOPS and throughput.
TheSize and performancepop out dialog has a single option,Provisioned storage (GiB). If you require more IOPS or throughput than the given amount of provisioned storage provides, you can increase your provisioned storage capacity to get additional IOPS and throughput.

SelectSaveto save provisioning changes. Storage, IOPS, and throughput changes are effective within a few minutes after a provisioning change.
SelectSaveto save provisioning changes. Storage, IOPS, and throughput changes are effective within a few minutes after a provisioning change.
Note
You can use PowerShell and CLI to enable/disable paid bursting if desired. Paid bursting is an advanced feature of the provisioned v1 billing model. Consultprovisioned v1 paid burstingbefore enabling paid bursting.
You can modify a provisioned v1 file share with theUpdate-AzRmStorageSharecmdlet. Remember to replace the values for the variables$resourceGroupName,$storageAccountName, and$fileShareNamewith the desired values for your file share. Set$provisionedStorageGib,$paidBurstingEnabled,$paidBurstingMaxIops, and$paidBurstingMaxThroughputMibPerSecto non-null ($null) values to set on the file share. Paid bursting is an advanced feature of the provisioned v1 model. Consultprovisioned v1 paid burstingbefore enabling.
Update-AzRmStorageShare
$resourceGroupName
$storageAccountName
$fileShareName
$provisionedStorageGib
$paidBurstingEnabled
$paidBurstingMaxIops
$paidBurstingMaxThroughputMibPerSec
$null
# The path to the file share resource to be modified.
$resourceGroupName = "<resource-group>"
$storageAccountName = "<storage-account>"
$fileShareName = "<file-share>"

# The provisioning desired on the file share. Set to $null to keep at the 
# current level of provisioning.
$provisionedStorageGib = 10240 

# Paid bursting settings.
$paidBurstingEnabled = $null # Set to $true or $false.
$paidBurstingMaxIops = $null # Set to an integer value.
$paidBurstingMaxThroughputMibPerSec = $null # Set to an integer value.

# Configure parameter object for splatting.
$params = @{
    ResourceGroupName = $resourceGroupName;
    StorageAccountName = $storageAccountName;
    Name = $fileShareName;
}

if ($null -ne $provisionedStorageGib) { 
    $params += @{ QuotaGiB = $provisionedStorageGib }
}

if ($null -ne $paidBurstingEnabled) {
    $params += @{ PaidBurstingEnabled = $paidBurstingEnabled }
}

if ($null -ne $paidBurstingMaxIops) {
    $params += @{ PaidBurstingMaxIops = $paidBurstingMaxIops }
}

if ($null -ne $paidBurstingMaxThroughputMibPerSec) {
    $params += @{ 
        PaidBurstingMaxBandwidthMibps = $paidBurstingMaxThroughputMibPerSec 
    }
}

# Update the file share provisioning.
Update-AzRmStorageShare @params
# The path to the file share resource to be modified.
$resourceGroupName = "<resource-group>"
$storageAccountName = "<storage-account>"
$fileShareName = "<file-share>"

# The provisioning desired on the file share. Set to $null to keep at the 
# current level of provisioning.
$provisionedStorageGib = 10240 

# Paid bursting settings.
$paidBurstingEnabled = $null # Set to $true or $false.
$paidBurstingMaxIops = $null # Set to an integer value.
$paidBurstingMaxThroughputMibPerSec = $null # Set to an integer value.

# Configure parameter object for splatting.
$params = @{
    ResourceGroupName = $resourceGroupName;
    StorageAccountName = $storageAccountName;
    Name = $fileShareName;
}

if ($null -ne $provisionedStorageGib) { 
    $params += @{ QuotaGiB = $provisionedStorageGib }
}

if ($null -ne $paidBurstingEnabled) {
    $params += @{ PaidBurstingEnabled = $paidBurstingEnabled }
}

if ($null -ne $paidBurstingMaxIops) {
    $params += @{ PaidBurstingMaxIops = $paidBurstingMaxIops }
}

if ($null -ne $paidBurstingMaxThroughputMibPerSec) {
    $params += @{ 
        PaidBurstingMaxBandwidthMibps = $paidBurstingMaxThroughputMibPerSec 
    }
}

# Update the file share provisioning.
Update-AzRmStorageShare @params
You can modify a provisioned v1 file share with theaz storage share-rm updatecommand. Remember to replace the values for the variablesresourceGroupName,storageAccountName,fileShareName, andprovisionedStorageGibwith the desired values for your file share.
az storage share-rm update
resourceGroupName
storageAccountName
fileShareName
provisionedStorageGib
# The path to the file share resource to be modified.
resourceGroupName="<resource-group>"
storageAccountName="<storage-account>"
fileShareName="<file-share>"

# The provisioning desired on the file share.
provisionedStorageGib=10240

# Update the file share provisioning.
az storage share-rm update \
        --resource-group $resourceGroupName \
        --storage-account $storageAccountName \
        --name $fileShareName \
        --quota $provisionedStorageGib
# The path to the file share resource to be modified.
resourceGroupName="<resource-group>"
storageAccountName="<storage-account>"
fileShareName="<file-share>"

# The provisioning desired on the file share.
provisionedStorageGib=10240

# Update the file share provisioning.
az storage share-rm update \
        --resource-group $resourceGroupName \
        --storage-account $storageAccountName \
        --name $fileShareName \
        --quota $provisionedStorageGib
To toggle paid bursting, use the--paid-bursting-enabledparameter. Paid bursting is an advanced feature of the provisioned v1 model. Consultprovisioned v1 paid burstingbefore enabling. You can optionally use the--paid-bursting-max-iopsand--paid-bursting-max-bandwidth-mibpsflags to set a restriction on the upper amount of paid bursting allowed for cost control purposes. Remember to replace the values for the variablesresourceGroupName,storageAccountName, andfileShareNamewith the desired values for your file share.
--paid-bursting-enabled
--paid-bursting-max-iops
--paid-bursting-max-bandwidth-mibps
resourceGroupName
storageAccountName
fileShareName
resourceGroupName="<resource-group>"
storageAccountName="<storage-account>"
fileShareName="<file-share>"

az storage share-rm update \
        --resource-group $resourceGroupName \
        --storage-account $storageAccountName \
        --name $fileShareName \
        --paid-bursting-enabled true
resourceGroupName="<resource-group>"
storageAccountName="<storage-account>"
fileShareName="<file-share>"

az storage share-rm update \
        --resource-group $resourceGroupName \
        --storage-account $storageAccountName \
        --name $fileShareName \
        --paid-bursting-enabled true
Change the cost and performance characteristics of a pay-as-you-go file share
After you've created your pay-as-you-go file share, there are two properties you may want to change:
Access tier: The access tier of the file share dictates to the ratio of storage to IOPS/throughput costs (in the form of transactions). There are three access tiers:transaction optimized,hot, andcool. Changing the tier of the Azure file share results in transaction costs for the movement to the new access tier. For more information, seeswitching between access tiers.
Access tier: The access tier of the file share dictates to the ratio of storage to IOPS/throughput costs (in the form of transactions). There are three access tiers:transaction optimized,hot, andcool. Changing the tier of the Azure file share results in transaction costs for the movement to the new access tier. For more information, seeswitching between access tiers.
Quota: Quota is a limit on the size of the file share. The quota property is used in the provisioned v2 and provisioned v1 models to mean "provisioned storage capacity", however, in the pay-as-you-go model, quota has no direct impact on bill. The two primary reasons you might want to modify this are if you use quota to limit the growth of your file share to keep control of the used storage/transaction costs in the pay-as-you-go model, or if you have a storage account predating the introduction of the large file share feature, which enabled file shares to grow beyond 5 TiB. The maximum file share size for a pay-as-you-go file share is 100 TiB.
Quota: Quota is a limit on the size of the file share. The quota property is used in the provisioned v2 and provisioned v1 models to mean "provisioned storage capacity", however, in the pay-as-you-go model, quota has no direct impact on bill. The two primary reasons you might want to modify this are if you use quota to limit the growth of your file share to keep control of the used storage/transaction costs in the pay-as-you-go model, or if you have a storage account predating the introduction of the large file share feature, which enabled file shares to grow beyond 5 TiB. The maximum file share size for a pay-as-you-go file share is 100 TiB.
Portal
PowerShell
Azure CLI
Follow these instructions to update the access tier of your file share.
In your storage account, selectFile sharesunderData storagein the table of contents for the storage account.
In your storage account, selectFile sharesunderData storagein the table of contents for the storage account.
In the file share listing, select the file share for which you desire to change the access tier.
In the file share listing, select the file share for which you desire to change the access tier.
In the file share overview, selectChange tier.
In the file share overview, selectChange tier.
Select the desiredAccess tierfrom the provided drop-down list.
Select the desiredAccess tierfrom the provided drop-down list.
SelectApplyto save the access tier change.
SelectApplyto save the access tier change.
For these instructions to update the quota of your file share.
In your storage account, selectFile sharesunderData storagein the table of contents for the storage account.
In your storage account, selectFile sharesunderData storagein the table of contents for the storage account.
In the file share listing, select the file share for which you desire to change the quota.
In the file share listing, select the file share for which you desire to change the quota.
In the file share overview, selectEdit quota.
In the file share overview, selectEdit quota.
In the edit quota pop-out, enter the desired maximum size of the share or selectSet to maximum. There is no cost implication of setting the share to the maximum size.
In the edit quota pop-out, enter the desired maximum size of the share or selectSet to maximum. There is no cost implication of setting the share to the maximum size.
ClickOKto save quota changes. The new quota is effective within a few minutes.
ClickOKto save quota changes. The new quota is effective within a few minutes.
You can modify the access tier and quota settings of a pay-as-you-go file share with theUpdate-AzRmStorageSharecmdlet. Remember to replace the values for the variables$resourceGroupName,$storageAccountName,$fileShareName,$accessTier, and$quotaGibwith the desired values for your file share.
Update-AzRmStorageShare
$resourceGroupName
$storageAccountName
$fileShareName
$accessTier
$quotaGib
# The path to the file share resource to be modified.
$resourceGroupName = "<resource-group>"
$storageAccountName = "<storage-account>"
$fileShareName = "<file-share>"

# The settings to be changed on the file share. Set to $null to skip setting.
$accessTier = "Cool"
$quotaGib = $null

# Construct a parameters hash table for cmdlet splatting.
$updateParams = @{
    ResourceGroupName = $resourceGroupName
    StorageAccountName = $storageAccountName
    Name = $fileShareName
}

if ($null -ne $accessTier) { $updateParams += @{ AccessTier = $accessTier } }
if ($null -ne $quotaGib) { $updateParams += @{ QuotaGiB = $quotaGib } }

# Update the file share
Update-AzRmStorageShare @updateParams
# The path to the file share resource to be modified.
$resourceGroupName = "<resource-group>"
$storageAccountName = "<storage-account>"
$fileShareName = "<file-share>"

# The settings to be changed on the file share. Set to $null to skip setting.
$accessTier = "Cool"
$quotaGib = $null

# Construct a parameters hash table for cmdlet splatting.
$updateParams = @{
    ResourceGroupName = $resourceGroupName
    StorageAccountName = $storageAccountName
    Name = $fileShareName
}

if ($null -ne $accessTier) { $updateParams += @{ AccessTier = $accessTier } }
if ($null -ne $quotaGib) { $updateParams += @{ QuotaGiB = $quotaGib } }

# Update the file share
Update-AzRmStorageShare @updateParams
You can modify the access tier and quota settings of a pay-as-you-go file share with theaz storage share-rm updatecommand. Remember to replace the values for the variablesresourceGroupName,storageAccountName,fileShareName,accessTier, andquotaGibwith the desired values for your file share.
az storage share-rm update
resourceGroupName
storageAccountName
fileShareName
accessTier
quotaGib
# The path to the file share resource to be modified.
resourceGroupName="<resource-group>"
storageAccountName="<storage-account>"
fileShareName="<file-share>"

# The settings to be changed on the file share. Set to the empty string to skip 
# setting.
accessTier="Cool"
quotaGib=""

command="az storage share-rm update --resource-group $resourceGroupName"
command="$command --storage-account $storageAccountName --name $fileShareName"

if [ ! -z "${accessTier}" ]; then
    command="$command --access-tier $accessTier"
fi

if [ ! -z "${quotaGib}" ]; then
    command="$command --quota $quotaGib"
fi

# Update file share (command is in variable)
$command
# The path to the file share resource to be modified.
resourceGroupName="<resource-group>"
storageAccountName="<storage-account>"
fileShareName="<file-share>"

# The settings to be changed on the file share. Set to the empty string to skip 
# setting.
accessTier="Cool"
quotaGib=""

command="az storage share-rm update --resource-group $resourceGroupName"
command="$command --storage-account $storageAccountName --name $fileShareName"

if [ ! -z "${accessTier}" ]; then
    command="$command --access-tier $accessTier"
fi

if [ ! -z "${quotaGib}" ]; then
    command="$command --quota $quotaGib"
fi

# Update file share (command is in variable)
$command
Delete a file share
Depending on your workflow, you may wish to delete unused or outdated file shares. You can use the following instructions to delete file shares. File shares in storage accounts withsoft delete enabledcan be recovered within the  retention period.
Portal
PowerShell
Azure CLI
Follow these instructions to delete a file share.
In your storage account, selectFile sharesunderData storagein the table of contents for the storage account.
In your storage account, selectFile sharesunderData storagein the table of contents for the storage account.
In the file share list, select the...for the file share you desire to delete.
In the file share list, select the...for the file share you desire to delete.
SelectDelete sharefrom the context menu.
SelectDelete sharefrom the context menu.
TheDeletepop-out contains a survey about why you're deleting the file share. You can skip this, but we appreciate any feedback you have on Azure Files, particularly if something isn't working properly for you.
TheDeletepop-out contains a survey about why you're deleting the file share. You can skip this, but we appreciate any feedback you have on Azure Files, particularly if something isn't working properly for you.
Enter the file share name to confirm deletion and selectDelete.
Enter the file share name to confirm deletion and selectDelete.
You can delete a file share using theRemove-AzRmStorageSharecmdlet. Remember to replace the values for the variables$resourceGroupName,$storageAccountName, and$fileShareNamewith the desired values for your file share.
Remove-AzRmStorageShare
$resourceGroupName
$storageAccountName
$fileShareName
# The path to the file share resource to be deleted.
$resourceGroupName = "<resource-group>"
$storageAccountName = "<storage-account>"
$fileShareName = "<file-share>"

# Remove the file share
Remove-AzRmStorageShare `
        -ResourceGroupName $resourceGroupName `
        -StorageAccountName $storageAccountName `
        -Name $fileShareName
# The path to the file share resource to be deleted.
$resourceGroupName = "<resource-group>"
$storageAccountName = "<storage-account>"
$fileShareName = "<file-share>"

# Remove the file share
Remove-AzRmStorageShare `
        -ResourceGroupName $resourceGroupName `
        -StorageAccountName $storageAccountName `
        -Name $fileShareName
You can delete a file share using theaz storage share-rm deletecommand. Remember to replace the values for the variablesresourceGroupName,storageAccountName, andfileShareNamewith the desired values for your file share.
az storage share-rm delete
resourceGroupName
storageAccountName
fileShareName
resourceGroupName="<resource-group>"
storageAccountName="<storage-account>"
fileShareName="<file-share>"

az storage share-rm delete \
    --resource-group $resourceGroupName \
    --storage-account $storageAccountName \
    --name $fileShareName
resourceGroupName="<resource-group>"
storageAccountName="<storage-account>"
fileShareName="<file-share>"

az storage share-rm delete \
    --resource-group $resourceGroupName \
    --storage-account $storageAccountName \
    --name $fileShareName
Region supportability base on different billing models
You can verify region supportability for various billing models using the following commands.
Portal
PowerShell
Azure CLI
To view region supportability based on different billing models, use Azure PowerShell or Azure CLI.
# Login to Azure account
Connect-AzAccount

# Track down the subscription ID in GUID format
$subscriptionID = "your-subscription-id-number"

# Get Token
$token = Get-AzAccessToken

# Invoke SRP list SKU API, and get the returned SKU list
$result = Invoke-RestMethod -Method Get -Uri "https://management.azure.com/subscriptions/$($subscriptionID)/providers/Microsoft.Storage/skus?api-version=2024-01-01" -Headers @{"Authorization" = "Bearer $($token.Token)"}

# Filter the SKU list to get the required information, customization requried here to get the best result.
$filteredResult = $result | `
    Select-Object -ExpandProperty value | `
    Where-Object {
        $_.resourceType -eq "storageAccounts" -and
        # Filter based on your needs. FileStorage kind includes pv2, and pv1 file share, where StorageV2 kind include PayGO file shares.
        $_.kind -in @("FileStorage", "StorageV2") -and
        # Filter based on your needs. "Standard_" for PayGO file share, "StandardV2_" for Pv2 file share, "Premium_" for pv1 file shares.
        # $_.name.StartsWith("StandardV2_") -and
        # Change region based on your need to see if we currently support the region (all small cases, no space in between).
        # $_.locations -eq "italynorth" -and
        $_.name -notin @("Standard_RAGRS", "Standard_RAGZRS")
    }

if ($filteredResult.Count -eq 0) {
    Write-Output "No results found."
} else {
    $filteredResult | `
        Select-Object `
            -Property `
                @{
                    Name = "sku";
                    Expression = { $_.name }
                }, `
                kind, `
                @{
                    Name = "mediaTier";
                    Expression = {
                        if ($_.tier -eq "Premium") {
                            "SSD"
                        } elseif ($_.tier -eq "Standard") {
                            "HDD"
                        } else {
                            "Unknown"
                        }
                    }
                }, `
                @{
                    Name = "billingModel";
                    Expression = {
                        if ($_.name.StartsWith("StandardV2_") -or
                            $_.name.StartsWith("PremiumV2_")
                        ) {
                            "ProvisionedV2"
                        } elseif ($_.name.StartsWith("Premium_")) {
                            "ProvisionedV1"
                        } else {
                            "PayAsYouGo"
                        }
                    }
                }, `
                @{
                    Name = "location";
                    Expression = { $_.locations | Select-Object -First 1 }
                } | ft sku, kind, mediaTier, billingModel, location
}
# Login to Azure account
Connect-AzAccount

# Track down the subscription ID in GUID format
$subscriptionID = "your-subscription-id-number"

# Get Token
$token = Get-AzAccessToken

# Invoke SRP list SKU API, and get the returned SKU list
$result = Invoke-RestMethod -Method Get -Uri "https://management.azure.com/subscriptions/$($subscriptionID)/providers/Microsoft.Storage/skus?api-version=2024-01-01" -Headers @{"Authorization" = "Bearer $($token.Token)"}

# Filter the SKU list to get the required information, customization requried here to get the best result.
$filteredResult = $result | `
    Select-Object -ExpandProperty value | `
    Where-Object {
        $_.resourceType -eq "storageAccounts" -and
        # Filter based on your needs. FileStorage kind includes pv2, and pv1 file share, where StorageV2 kind include PayGO file shares.
        $_.kind -in @("FileStorage", "StorageV2") -and
        # Filter based on your needs. "Standard_" for PayGO file share, "StandardV2_" for Pv2 file share, "Premium_" for pv1 file shares.
        # $_.name.StartsWith("StandardV2_") -and
        # Change region based on your need to see if we currently support the region (all small cases, no space in between).
        # $_.locations -eq "italynorth" -and
        $_.name -notin @("Standard_RAGRS", "Standard_RAGZRS")
    }

if ($filteredResult.Count -eq 0) {
    Write-Output "No results found."
} else {
    $filteredResult | `
        Select-Object `
            -Property `
                @{
                    Name = "sku";
                    Expression = { $_.name }
                }, `
                kind, `
                @{
                    Name = "mediaTier";
                    Expression = {
                        if ($_.tier -eq "Premium") {
                            "SSD"
                        } elseif ($_.tier -eq "Standard") {
                            "HDD"
                        } else {
                            "Unknown"
                        }
                    }
                }, `
                @{
                    Name = "billingModel";
                    Expression = {
                        if ($_.name.StartsWith("StandardV2_") -or
                            $_.name.StartsWith("PremiumV2_")
                        ) {
                            "ProvisionedV2"
                        } elseif ($_.name.StartsWith("Premium_")) {
                            "ProvisionedV1"
                        } else {
                            "PayAsYouGo"
                        }
                    }
                }, `
                @{
                    Name = "location";
                    Expression = { $_.locations | Select-Object -First 1 }
                } | ft sku, kind, mediaTier, billingModel, location
}
This script uses jq command line JSON processor. To download it, visithttps://jqlang.org/download/
# Login to Azure account
Az login

# Track down the subscription ID in GUID format and set subscription ID
subscriptionID="your-subscription-id-number"

# Get Token
token=$(az account get-access-token --query accessToken --output tsv)

# Invoke SRP list SKU API, and get the returned SKU list
result=$(az rest --method get --uri "https://management.azure.com/subscriptions/$subscriptionID/providers/Microsoft.Storage/skus?api-version=2024-01-01" --headers "Authorization=Bearer $token")

# Filter the SKU list to get the required information, customization required here to get the best result.
filteredResult=$(echo $result | jq '.value[] | select(.resourceType == "storageAccounts" and (.kind == "FileStorage" or .kind == "StorageV2") and (.name | test("^(?!Standard_RAGRS|Standard_RAGZRS)")))' )

if [ -z "$filteredResult" ]; then
    echo "No results found."
else
    # Print the table header
    printf "%-30s %-15s %-10s %-20s %-15s\n" "SKU" "Kind" "MediaTier" "BillingModel" "Location"
    # Print the filtered results
    echo $filteredResult | jq -r '. | "\(.name)\t\(.kind)\t\(.tier | if . == "Premium" then "SSD" elif . == "Standard" then "HDD" else "Unknown" end)\t\(.name | if test("^StandardV2_|^PremiumV2_") then "ProvisionedV2" elif test("^Premium_") then "ProvisionedV1" else "PayAsYouGo" end)\t\(.locations)"' | while IFS=$'\t' read -r sku kind mediaTier billingModel location; do
        printf "%-30s %-15s %-10s %-20s %-15s\n" "$sku" "$kind" "$mediaTier" "$billingModel" "$location"
    done
fi
# Login to Azure account
Az login

# Track down the subscription ID in GUID format and set subscription ID
subscriptionID="your-subscription-id-number"

# Get Token
token=$(az account get-access-token --query accessToken --output tsv)

# Invoke SRP list SKU API, and get the returned SKU list
result=$(az rest --method get --uri "https://management.azure.com/subscriptions/$subscriptionID/providers/Microsoft.Storage/skus?api-version=2024-01-01" --headers "Authorization=Bearer $token")

# Filter the SKU list to get the required information, customization required here to get the best result.
filteredResult=$(echo $result | jq '.value[] | select(.resourceType == "storageAccounts" and (.kind == "FileStorage" or .kind == "StorageV2") and (.name | test("^(?!Standard_RAGRS|Standard_RAGZRS)")))' )

if [ -z "$filteredResult" ]; then
    echo "No results found."
else
    # Print the table header
    printf "%-30s %-15s %-10s %-20s %-15s\n" "SKU" "Kind" "MediaTier" "BillingModel" "Location"
    # Print the filtered results
    echo $filteredResult | jq -r '. | "\(.name)\t\(.kind)\t\(.tier | if . == "Premium" then "SSD" elif . == "Standard" then "HDD" else "Unknown" end)\t\(.name | if test("^StandardV2_|^PremiumV2_") then "ProvisionedV2" elif test("^Premium_") then "ProvisionedV1" else "PayAsYouGo" end)\t\(.locations)"' | while IFS=$'\t' read -r sku kind mediaTier billingModel location; do
        printf "%-30s %-15s %-10s %-20s %-15s\n" "$sku" "$kind" "$mediaTier" "$billingModel" "$location"
    done
fi
Next steps
Planning for an Azure Files deploymentorPlanning for an Azure File Sync deployment.
Azure Files networking overview.
Mount an SMB file share onWindows,macOS, orLinux.
Feedback
Was this page helpful?
Additional resources