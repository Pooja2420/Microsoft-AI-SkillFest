Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Naming restrictions and conventions
Article
2025-02-10
16 contributors
In this article
Azure DevOps Services | Azure DevOps Server 2022 - Azure DevOps Server 2019
Most components in Azure DevOps must follow naming restrictions and conventions. Restrictions help guarantee a consistent user experience and provide compatibility with other applications.
Common restrictions include not exceeding the character length for a name, not containing special characters, and maintaining uniqueness of names within an object set.
Important
When using the API, rather than user interface (UI), the API allows you to directly specify a name, which includes characters that might be restricted in the UI.
Best practices:
Follow the UI restrictions to maintain consistency and prevent unintended issues.
Validate names programmatically and handle any special characters appropriately.

General considerations
The length restrictions in this article get measured by the number of Unicode characters permitted. Surrogate characters are composed of two Unicode characters, which count as two characters against the length restriction. For more information, seeAbout Unicode and Character Sets.
As with other operating system files, ASCII control characters (ASCII 1-31) and surrogate combinations are also not allowed. For general information about the operating system restrictions applied to file names, seeNaming Files, Paths, and Namespaces.
Note
For limits on the number of items you can define, seeWork tracking, process, and project limits.

System reserved names
Avoid using system reserved names, like the following examples:
AUX
COM1, COM2, COM3, COM4, COM5, COM6, COM7, COM8, COM9, COM10
CON
DefaultCollection
LPT1, LPT2, LPT3, LPT4, LPT5, LPT6, LPT7, LPT8, LPT9
NUL
PRN
SERVER, SignalR
Web or WEB
For more information about reserved names, seeFile names, paths, and namespaces.
Azure Artifacts
Universal packages must conform to the following restrictions.
Azure Boards

You use work items to capture information to plan and track your software development projects. With work items, you can describe the work to be done, assign work, track status, and coordinate efforts within your team. Different types of work itemsâsuch as user stories, tasks, bugs, and issuesâtrack different types of information. For more information, seeAzure Boards documentation.
All work item tracking objects are associated with one or more names. Most have friendly display names, except work item types and global lists, which are associated with reference names. A friendly name is a unique, user-visible identifier for a field. Using friendly names ensures consistency across projects and work item types in a project collection. The system uses the reference name internally and you can't change it once defined.
There are restrictions on several elements that are associated with work items, including reference and friendly names, field names, and attachment size.
Area and iteration paths
Two work item fields,Area PathandIteration Path, provide a tree structure hierarchy for grouping work. Area paths group work items by product, functional, or feature area. Iteration paths group work items into sprints, milestones, or time periods for addressing those work items.
These multi-node fields use the backslash\characters to denote the hierarchy of nodes within the tree structure.
\
The names you assign to child nodes to these fields must conform to the following restrictions.
.
..
\ / : * ? " < > | # $ & * +
Attachments
Files attached to work items must conform to the following restrictions.

Board column and swimlane names
Yourboardturns your backlog into an interactive signboard, providing a visual flow of work. As work progresses from idea to completion, you update the items on the board. Each column represents a work stage, and each card represents a user story (blue cards) or a bug (red cards) at that stage of work.
Customize your board by adding, removing, or renamingcolumnsandswimlanes. Columns support the flow of work across the board. Swimlanes allow you to manage different classes of work as horizontal lanes on the board.
Column and swimlane names must conform to the following restrictions.

Field names
Each work item type contains one or more work item fields. These fields define the information stored for work items based on the work item type. Each work item field has an associated field reference name. The field reference name uniquely identifies each field and can't be changed once assigned. For more information about out-of-box work item fields, seeWork item field index.
Work item field names must conform to the following restrictions.
. , ; ' : ~ \ / \ * ? " & % $ ! + = () [] {} <> - |
The work item type definition language includes the concept of afield reference name. Field reference names can help you to port definitions between Team Foundation project collections and also to allow non-Microsoft integrations to find and refer to specific fields. These names are globally unique, just as a namespace in the .NET Framework application is globally unique.
TheSystemnamespace is used only to define all core system fields that are mandatory for Team Foundation system functions. You can't create your own System.X field because it might impede functionality.
TheMicrosoftnamespace is used to define work item tracking fields. These fields are defined in a work item type definition of the process templates.
Customers and partners can create their own field namespaces for custom work item types. For descriptions of system fields and fields defined in the default process templates, seeIndex of work item fields.
Important
Field reference names can't be renamed. If for example, you changed the field name "Title" to "Header", the field reference name of that field remains the same. Integrations and internal representations of fields should use the field reference name instead of depending on the field name itself.
Although you can create your own Microsoft.X field, we don't recommend that you do so, as it might impede functionality or the ability for the Configure Features wizard to successfully update a project after an upgrade.

The following examples show valid field reference names, in various namespaces. Customers and partners can also define their own namespaces to support their custom work item types.
Field help text
The system displays help text at run time to help users know what to enter into the field. Help text is scoped to a specific work item type in a specific project.
For the Inheritance process, you specify help text for a field through theEdit fielddialog,Definitiontab,Description. SeeAdd a custom field to a work item type. For the On-premises XML process, you specify help text by using theHELPTEXTelement. SeeAdd or modify a field for work tracking.
HELPTEXT
Help text that you add must conform to the following restrictions.
Global lists
A global list is a set of list item values that you can use globally across all project collections within an instance of an on-premises Azure DevOps Server. As you define work item types, you might find that some work item fields share the same set of allowed or suggested values. Global lists enable you to define these values one time and share them across multiple work item types and projects. For details, seeDefine global lists.
A global list, defined using theGLOBALLISTelement contains one or more list items, specified using theLISTITEMelement.
GLOBALLIST
LISTITEM
LISTITEMnames must conform to the following restrictions.
LISTITEM
\
Global lists must conform to the following restrictions.
LISTITEM
LISTITEM
Link type and category reference names
Define a reference name whenever you add or create a link type or category. All reference names can be up to 70 Unicode characters long.
Define a reference name by using alphanumeric characters, underscore characters, and hyphen characters. Each reference name must contain at least one period., but no period can appear at the start or end of a name. A reference name must not start with a number or an underscore, and it can't have multiple consecutive hyphens, such as--.
.
--
.
_
My.*Field*
My.Field
My__Field
-
.
.
_
Work item tags
Work item tags correspond to one or two keyword phrases to filter work tracking tools such as backlogs, boards, and queries or define queries. For more information, seeAdd work item tags to categorize and filter lists and boards.
Tag names must conform to the following restrictions.
,
;
Azure Pipelines
Azure Pipeline definitions must conform to the following restrictions.
'_'
'_'
a-Z
_AND
a-Z
0-9
_
For more information, seeAzure Pipelines documentation.
Azure Repos (Git)
Each Azure DevOps project can contain multiple Git repositories. The names you assign to Git repositories must conform to the following restrictions. For more information, seeAzure Repos Git documentation. For more information on naming restrictions for other Git items such as branches and tags, seegit check-ref-format.
Important
Although you can include spaces within repo names, we don't recommend that you do so.
\ / : * ? " < > ; # $ * { } , + = [ ] |
_
.

Azure Repos (TFVC)
Team Foundation version control (TFVC) provides a central repository for files and the commands that are required to manage those files across a team. It also provides customizable check-in policies, branching, merging, shelving, and many other features. For more information, seeAzure Repos TFVC documentation
Version control paths must conform to the following restrictions. See alsoOptimize your workspace.
In the web portal and REST API, certain operations have a more restrictive path length than Visual Studio and TF.exe clients. These operations include Edit, Rename, and Delete, and occur because the web portal/REST uses a randomly generated workspace for concurrency when pending the changes.
TFVC files
The version control system stores many different types of files.Set up Team Foundation version control on your dev machineprovides details on how to add existing Visual Studio projects or solutions.
Files and folders you add to Team Foundation version control must conform to the following restrictions.
\ / : * ? " < > ;
$
\ / : * ? " < > ; |
TFVC labels
In Team Foundation version control (TFVC), a label is a name applied to a specific set of revisions. You can attach labels to a set of unrelated files in version control, which lets you retrieve the files or act upon them as a group. The following table describes the restrictions put on label names.
( )
.
\ / : * ? " < > ; @ |
TFVC Shelvesets
Shelvesets enable you to set aside temporarily a batch of pending changes and then, as an option, remove the pending changes from your workspace. Later, you can restore the changes in a shelveset to your workspace or put them into another user's workspace.
Shelveset names must conform to the following restrictions.
\ / : * ? " < > & ;
TFVC workspaces
A workspace is a client-side copy of the files and folders in Team Foundation version control (TFVC). When you create multiple workspaces, you can have different versions of the same version control folder on a client computer.Create and work with workspacesprovides more details.
Workspace names must conform to the following restrictions.
( )
\ / : * ? " < >  ;
Computer names
The computer name where you install Azure DevOps is associated with the name of the server.
Both the operating system and Active Directory impose certain restrictions on computer names as described in these articles:
Rename a Computer that Hosts a Stand-Alone Instance of SQL Server
Windows Server Active Directory
Organization names
Important
Adhere to the following guidelines when you create an organization name.
Use only letters from the English alphabet
Start your organization name with a letter or number
Use letters, numbers, or hyphens after the initial character
Ensure that your organization doesn't exceed 50 Unicode characters
End with a letter or number
If you use any of the disallowed characters, you get the following error message:
VS850015: The specified name is not allowed to be used: {Organization name}.

Process and process templates
A process defines the building blocks of the work item tracking system and other subsystems that you have access to after connecting to a project.
Note
Terminology: Both "process" and "process template" refer to an interdependent set of files used to create a project. For more information, seeAbout processes and process templates, which describes the differences among the three default processes available to you.
Processes that you define or customize must conform to the following restrictions.

Project collections
A project collection identifies a group of projects and the resources that are associated with those projects. It provides an organizing structure that you can use to define and control a group of projects defined for an Azure DevOps Server.
Also, the collection name is part of the connection string used to connect team members to projects. The default assigned corresponds toDefaultCollection.Manage project collectionsprovides more information.
Names you assign to project collections must conform to the following restrictions.
\ / : * ? " < > ; # $ * { } , + = [ ] |
...
..
_
.

Project names
A project establishes a repository for source code and a place for teams to plan, track progress, and collaborate. The name of the  project is part of the connection string used to connect team members to projects.
Names you assign to projects that you create must conform to the following restrictions.
\ / : * ? " ' < > ; # $ * { } , + = [ ] |
_
.

Security groups
With Azure DevOps security groups, you can apply certain rights or permissions to a group of users.
On-premises groups might consist of Active Directory group accounts, Azure DevOps security groups, Windows user accounts, Windows group accounts, or any mixture of these types. For more information, seeAdd Active Directory / Microsoft Entra users or groups to a built-in security group.
Security groups must conform to the following restrictions.
/ \ [ ] : < > + = ; ? * |
.
,
Team Foundation Build
Team Foundation Build lets you manage all the aspects of the build process on a single computer. By using Team Foundation Build, you can synchronize the sources, compile the application, run associated unit tests, perform code analysis, release builds on a file server, and publish build reports.
Build computer
Team Foundation Build is a separate installation from the Azure DevOps Server application tier, data tier, or Visual Studio client. You can choose a separate computer. Otherwise, you can install the build side by side on the client computer or on the servers.
Your on-premises build computer must conform to the following restrictions.
C:\BuildDirectory
\server\share
Domain\TFSSERVICE
Build types
Build types configure the conditions under which a single solution or a set of solutions in a project are built. To conduct a build, you must either create a new build type or use an existingbuild type.
Build type names must conform to the following restrictions.
$
Build quality
The build quality lets you attach a quality level or completion state to a completed build. Team Foundation Build also lets you create new values for thebuild quality type. SeeRate the quality of a completed buildfor a list of the default build quality values.
Build quality names must conform to the following restrictions.
Team names
Team names identify a group of individuals or groups that collectively work together as a team in a project. Team members use this name to connect to the team or to query against members defined for a team.
Team names must conform to conventions that allow them to be rendered as part of a valid URL. Each team name must be unique within a single project. However, there aren't any restrictions on using the same team name in different projects within a project collection. For more information, seeAdd another team or a hierarchy of teams.
Team names must conform to the following restrictions.
\ / : * ? " < > ; # $ * { } , + = [ ] |
...
..
_
.
User account names
User accounts identify people added to a project or project collection. User accounts might correspond to entries within Active Directory, Microsoft Entra ID, Windows server group.
User accounts that you add to an organization or collection must conform to the following restrictions. To add user accounts to a  project, seeAdd users to a project or team.
$NAMESPACE
"/ \ [ ] :  < > + = ; ? * |
.
$
,
Wiki page and file names
Each wiki page corresponds to a file within the wiki Git repo. Names you assign to a wiki page title must conform to the following restrictions.
/ \ #
.
Special characters in Wiki page titles
You can specify page titles which contain one or more of these special characters: < > * ? | -. For example, you can name a Markdown file as "FAQ?" or "Set-up guide". The characters have the following URI encoded strings:
: < > * ? | -
:
<
>
*
?
|
-
"
Related articles
Azure Artifacts count and size limits
Work tracking, process, and project limits
Customize work tracking objects to support your team's processes
Customize a process template
Feedback
Was this page helpful?
Additional resources