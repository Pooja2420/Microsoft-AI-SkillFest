Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
MonitoringÂ AppÂ Configuration
Article
2024-12-26
12 contributors
In this article
When you have critical applications and business processes relying on Azure resources, you want to monitor those resources for their availability, performance, and operation.
This article describes the monitoring data generated by App Configuration. App Configuration usesAzure Monitor. If you are unfamiliar with the features of Azure Monitor common to all Azure services that use it, readMonitoring Azure resources with Azure Monitor.
Monitoring overview page in the Azure portal
TheOverviewpage in the Azure portal includes a brief view of the resource usage,  such as the total number of requests, number of  throttled requests, and request duration per configuration store. This information is useful, but only displays a small amount of the monitoring data available. Some of this monitoring data is collected automatically and is available for analysis as soon as you create the resource. You can enable additional types of data collection with some configuration.

Monitoring data
App Configuration collects the same kinds of monitoring data as other Azure resources that are described inMonitoring data from Azure resources. SeeMonitoring App Configuration data referencefor detailed information on the metrics and logs metrics created by App Configuration.
Collection and routing
Platform metrics and the activity log are collected and stored automatically, but can be routed to other locations by using a diagnostic setting.
Resource Logs are not collected and stored until you create a diagnostic setting and route them to one or more locations. For example, to view logs and metrics for a configuration store in near real-time in Azure Monitor, collect the resource logs in a Log Analytics workspace. If you do not already have one, create aLog Analytics Workspaceand follow these steps to create and enable a diagnostic setting.
Portal
Azure CLI
PowerShell
Sign in to the Azure portal.
Sign in to the Azure portal.
Navigate to your App Configuration store.
Navigate to your App Configuration store.
In theMonitoringsection, selectDiagnostic settings, then select+Add diagnostic setting.
In theMonitoringsection, selectDiagnostic settings, then select+Add diagnostic setting.

In theDiagnostic settingpage, enter a name for your setting, then selectHttpRequestand choose the destination to send your logs to. To send them to a Log Analytics workspace, chooseSend to Log Analytics workspace.
In theDiagnostic settingpage, enter a name for your setting, then selectHttpRequestand choose the destination to send your logs to. To send them to a Log Analytics workspace, chooseSend to Log Analytics workspace.

Enter the name of yourSubscriptionandLog Analytics Workspace.
Enter the name of yourSubscriptionandLog Analytics Workspace.
SelectSaveand verify that the Diagnostic Settings page now lists your new diagnostic setting.
SelectSaveand verify that the Diagnostic Settings page now lists your new diagnostic setting.
Open the Azure Cloud Shell, or if you've installed the Azure CLI locally, open a command console application such as Windows PowerShell.
Open the Azure Cloud Shell, or if you've installed the Azure CLI locally, open a command console application such as Windows PowerShell.
If your identity is associated with more than one subscription, then set your active subscription to the subscription of the storage account that you want to enable logs for.az account set --subscription <your-subscription-id>
If your identity is associated with more than one subscription, then set your active subscription to the subscription of the storage account that you want to enable logs for.
az account set --subscription <your-subscription-id>
az account set --subscription <your-subscription-id>
Enable logs by using the az monitordiagnostic-settings create command.az monitor diagnostic-settings create --name <setting-name> --workspace <log-analytics-workspace-resource-id> --resource <app-configuration-resource-id> --logs '[{"category": <category name>, "enabled": true "retentionPolicy": {"days": <days>, "enabled": <retention-bool}}]'
Enable logs by using the az monitordiagnostic-settings create command.
az monitor diagnostic-settings create --name <setting-name> --workspace <log-analytics-workspace-resource-id> --resource <app-configuration-resource-id> --logs '[{"category": <category name>, "enabled": true "retentionPolicy": {"days": <days>, "enabled": <retention-bool}}]'
az monitor diagnostic-settings create --name <setting-name> --workspace <log-analytics-workspace-resource-id> --resource <app-configuration-resource-id> --logs '[{"category": <category name>, "enabled": true "retentionPolicy": {"days": <days>, "enabled": <retention-bool}}]'
Open a Windows PowerShell command window, and sign in to your Azure subscription by using the Connect-AzAccount command. Then, follow the on-screen directions.Connect-AzAccount
Open a Windows PowerShell command window, and sign in to your Azure subscription by using the Connect-AzAccount command. Then, follow the on-screen directions.
Connect-AzAccount
Connect-AzAccount
Set your active subscription to the subscription of the App Configuration account that you want to enable logging for.Set-AzContext -SubscriptionId <subscription-id>
Set your active subscription to the subscription of the App Configuration account that you want to enable logging for.
Set-AzContext -SubscriptionId <subscription-id>
Set-AzContext -SubscriptionId <subscription-id>
To enable logs for a Log Analytics Workspace, use theSet-AzDiagnosticSetting PowerShellcmdlet.Set-AzDiagnosticSetting -ResourceId <app-configuration-resource-id> -WorkspaceId <log-analytics-workspace-resource-id> -Enabled $true
To enable logs for a Log Analytics Workspace, use theSet-AzDiagnosticSetting PowerShellcmdlet.
Set-AzDiagnosticSetting -ResourceId <app-configuration-resource-id> -WorkspaceId <log-analytics-workspace-resource-id> -Enabled $true
Set-AzDiagnosticSetting -ResourceId <app-configuration-resource-id> -WorkspaceId <log-analytics-workspace-resource-id> -Enabled $true
Verify that your diagnostic setting is correctly set and log categories are enabled.Get-AzureRmDiagnosticSetting -ResourceId <app-configuration-resource-id>
Verify that your diagnostic setting is correctly set and log categories are enabled.
Get-AzureRmDiagnosticSetting -ResourceId <app-configuration-resource-id>
Get-AzureRmDiagnosticSetting -ResourceId <app-configuration-resource-id>
For more information on creating a diagnostic setting using the Azure portal, CLI, or PowerShell, seecreate a diagnostic setting to collect platform logs and metrics in Azure.
When you create a diagnostic setting, you specify which categories of logs to collect. For further information on the categories of logs for App Configuration, referenceApp Configuration monitoring data reference.
Analyzing metrics
You can analyze metrics for App Configuration with metrics from other Azure services using metrics explorer by openingMetricsfrom theAzure Monitormenu. SeeAnalyze metrics with Azure Monitor metrics explorerfor details on using this tool. For App Configuration, the following metrics are collected:
HTTP Incoming Request Count
HTTP Incoming Request Duration
Throttled HTTP Request Count (HTTP status code 429 Responses)
Daily Storage Usage
Request Quota Usage
Replication Latency
Snapshot Storage Size
In the portal, navigate to theMetricssection and select theMetric NamespacesandMetricsyou want to analyze. This screenshot shows you the metrics view when selectingHttp Incoming Request Countfor your configuration store.

For a list of the platform metrics collected for App Configuration, seeMonitoring App Configuration data reference metrics. For reference, you can also see a list ofall resource metrics supported in Azure Monitor.
Analyzing logs
Data in Azure Monitor Logs is stored in tables where each table has its own set of unique properties. The common schema is outlined inAzure Monitor resource log schema.
TheActivity logis a platform log in Azure that provides insight into subscription-level events. You can view it independently or route it to Azure Monitor Logs, where you can do much more complex queries using Log Analytics.For a list of the types of resource logs collected for App Configuration, seeMonitoring App Configuration data reference. For a list of the tables used by Azure Monitor Logs and queryable by Log Analytics, seeMonitoring App Configuration data reference
Important
When you selectLogsfrom the App Configuration menu, Log Analytics is opened with the query scope set to the current app configuration resource. This means that log queries will only include data from that resource.
If you want to run a query that includes data from other configuration or data from other Azure services, selectLogsfrom theAzure Monitormenu. SeeLog query scope and time range in Azure Monitor Log Analyticsfor details.
In the portal, navigate to theLogssection, and then to the query editor. On the left under theTablestab, selectAACHttpRequestto see the logs of your configuration store. Enter a Kusto query into the editor and results will be displayed below.

Following are sample queries that you can use to help you monitor your App Configuration resource.
List all HTTP Requests in the last three daysAACHttpRequest
    | where TimeGenerated > ago(3d)
List all HTTP Requests in the last three days
AACHttpRequest
    | where TimeGenerated > ago(3d)
AACHttpRequest
    | where TimeGenerated > ago(3d)
List all throttled requests (returned HTTP status code 429 for too many requests) in the last three daysAACHttpRequest
    | where TimeGenerated > ago(3d)
    | where StatusCode == "429"
List all throttled requests (returned HTTP status code 429 for too many requests) in the last three days
AACHttpRequest
    | where TimeGenerated > ago(3d)
    | where StatusCode == "429"
AACHttpRequest
    | where TimeGenerated > ago(3d)
    | where StatusCode == "429"
List the number of requests sent in the last three days by IP AddressAACHttpRequest
    | where TimeGenerated > ago(3d)
    | summarize requestCount=sum(HitCount) by ClientIPAddress
    | order by requestCount desc
List the number of requests sent in the last three days by IP Address
AACHttpRequest
    | where TimeGenerated > ago(3d)
    | summarize requestCount=sum(HitCount) by ClientIPAddress
    | order by requestCount desc
AACHttpRequest
    | where TimeGenerated > ago(3d)
    | summarize requestCount=sum(HitCount) by ClientIPAddress
    | order by requestCount desc
Create a pie chart of the types of status codes received in the last three daysAACHttpRequest
    | where TimeGenerated > ago(3d)
    | summarize requestCount=sum(HitCount) by StatusCode
    | order by requestCount desc 
    | render piechart
Create a pie chart of the types of status codes received in the last three days
AACHttpRequest
    | where TimeGenerated > ago(3d)
    | summarize requestCount=sum(HitCount) by StatusCode
    | order by requestCount desc 
    | render piechart
AACHttpRequest
    | where TimeGenerated > ago(3d)
    | summarize requestCount=sum(HitCount) by StatusCode
    | order by requestCount desc 
    | render piechart
List the number of requests sent by day for the last 14 daysAACHttpRequest
    | where TimeGenerated > ago(14d)
    | extend Day = startofday(TimeGenerated)
    | summarize requestcount=sum(HitCount) by Day
    | order by Day desc
List the number of requests sent by day for the last 14 days
AACHttpRequest
    | where TimeGenerated > ago(14d)
    | extend Day = startofday(TimeGenerated)
    | summarize requestcount=sum(HitCount) by Day
    | order by Day desc
AACHttpRequest
    | where TimeGenerated > ago(14d)
    | extend Day = startofday(TimeGenerated)
    | summarize requestcount=sum(HitCount) by Day
    | order by Day desc
Alerts
Azure Monitor alerts proactively notify you when important conditions are found in your monitoring data. They allow you to identify and address issues in your system before your customers notice them. You can set alerts onmetrics,logs, and theactivity log. Different types of alerts have benefits and drawbacks.
The following table lists common and recommended alert rules for App Configuration.
Next steps
SeeMonitoring App Configuration data referencefor a reference of the metrics, logs, and other important values created by App Configuration.
SeeMonitoring App Configuration data referencefor a reference of the metrics, logs, and other important values created by App Configuration.
SeeMonitoring Azure resources with Azure Monitorfor details on monitoring Azure resources.
SeeMonitoring Azure resources with Azure Monitorfor details on monitoring Azure resources.
Feedback
Was this page helpful?
Additional resources