Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Enable Azure managed identity authentication for Kubernetes clusters with kubelogin
Article
2024-08-01
5 contributors
In this article
The AKS-managed Microsoft Entra integration simplifies the Microsoft Entra integration process. Previously, you were required to create a client and server app, and the Microsoft Entra tenant had to assignDirectory Readersrole permissions. Now, the AKS resource provider manages the client and server apps for you.
Cluster administrators can configure Kubernetes role-based access control (Kubernetes RBAC) based on a user's identity or directory group membership. Microsoft Entra authentication is provided to AKS clusters with OpenID Connect. OpenID Connect is an identity layer built on top of the OAuth 2.0 protocol. For more information on OpenID Connect, see theOpenID Connect documentation.
Learn more about the Microsoft Entra integration flow in theMicrosoft Entra documentation.
This article provides details on how to enable and use managed identities for Azure resources with your AKS cluster.
Limitations
The following are constraints integrating Azure managed identity authentication on AKS.
Integration can't be disabled once added.
Downgrades from an integrated cluster to the legacy Microsoft Entra ID clusters aren't supported.
Clusters without Kubernetes RBAC support are unable to add the integration.
Before you begin
The following requirements need to be met in order to properly install the AKS addon for managed identity.
You have Azure CLI version 2.29.0 or later installed and configured. Runaz --versionto find the version. If you need to install or upgrade, seeInstall Azure CLI.
az --version
You needkubectlwith a minimum version of1.18.1orkubelogin. With the Azure CLI and the Azure PowerShell module, these two commands are included and automatically managed. Meaning, they're upgraded by default and runningaz aks install-cliisn't required or recommended. If you're using an automated pipeline, you need to manage upgrades for the correct or latest version. The difference between the minor versions of Kubernetes andkubectlshouldn't be more thanoneversion. Otherwise,  authentication issues occur on the wrong version.
kubectl
kubelogin
az aks install-cli
kubectl
If you're usinghelm, you need a minimum version of helm 3.3.
This configuration requires you have a Microsoft Entra group for your cluster. This group is registered as an admin group on the cluster to grant admin permissions. If you don't have an existing Microsoft Entra group, you can create one using theaz ad group createcommand.
az ad group create
Note
Microsoft Entra integrated clusters using a Kubernetes version newer than version 1.24 automatically use thekubeloginformat. Starting with Kubernetes version 1.24, the default format of the clusterUser credential for Microsoft Entra ID clusters isexec, which requireskubeloginbinary in the execution PATH. There is no behavior change for non-Microsoft Entra clusters, or Microsoft Entra ID clusters running a version older than 1.24.
Existing downloadedkubeconfigcontinues to work. An optional query parameterformatis included when getting clusterUser credential to overwrite the default behavior change. You can explicitly specify format toazureif you need to maintain the oldkubeconfigformat .
kubelogin
exec
kubelogin
kubeconfig
kubeconfig

Enable the integration on your AKS cluster
Create a new cluster
Create an Azure resource group using theaz group createcommand.az group create --name myResourceGroup --location centralus
Create an Azure resource group using theaz group createcommand.
az group create
az group create --name myResourceGroup --location centralus
az group create --name myResourceGroup --location centralus
Create an AKS cluster and enable administration access for your Microsoft Entra group using theaz aks createcommand.az aks create \
    --resource-group myResourceGroup \
    --name myManagedCluster \
    --enable-aad \
    --aad-admin-group-object-ids <id> [--aad-tenant-id <id>] \
    --generate-ssh-keysA successful creation of an AKS-managed Microsoft Entra ID cluster has the following section in the response body:"AADProfile": {
    "adminGroupObjectIds": [
    "5d24****-****-****-****-****afa27aed"
    ],
    "clientAppId": null,
    "managed": true,
    "serverAppId": null,
    "serverAppSecret": null,
    "tenantId": "72f9****-****-****-****-****d011db47"
}
Create an AKS cluster and enable administration access for your Microsoft Entra group using theaz aks createcommand.
az aks create
az aks create \
    --resource-group myResourceGroup \
    --name myManagedCluster \
    --enable-aad \
    --aad-admin-group-object-ids <id> [--aad-tenant-id <id>] \
    --generate-ssh-keys
az aks create \
    --resource-group myResourceGroup \
    --name myManagedCluster \
    --enable-aad \
    --aad-admin-group-object-ids <id> [--aad-tenant-id <id>] \
    --generate-ssh-keys
A successful creation of an AKS-managed Microsoft Entra ID cluster has the following section in the response body:
"AADProfile": {
    "adminGroupObjectIds": [
    "5d24****-****-****-****-****afa27aed"
    ],
    "clientAppId": null,
    "managed": true,
    "serverAppId": null,
    "serverAppSecret": null,
    "tenantId": "72f9****-****-****-****-****d011db47"
}
"AADProfile": {
    "adminGroupObjectIds": [
    "5d24****-****-****-****-****afa27aed"
    ],
    "clientAppId": null,
    "managed": true,
    "serverAppId": null,
    "serverAppSecret": null,
    "tenantId": "72f9****-****-****-****-****d011db47"
}
Use an existing cluster
Enable AKS-managed Microsoft Entra integration on your existing Kubernetes RBAC enabled cluster using theaz aks updatecommand. Make sure to set your admin group to keep access on your cluster.
az aks update
az aks update --resource-group MyResourceGroup --name myManagedCluster --enable-aad --aad-admin-group-object-ids <id-1>,<id-2> [--aad-tenant-id <id>]
az aks update --resource-group MyResourceGroup --name myManagedCluster --enable-aad --aad-admin-group-object-ids <id-1>,<id-2> [--aad-tenant-id <id>]
A successful activation of an AKS-managed Microsoft Entra ID cluster has the following section in the response body:
"AADProfile": {
    "adminGroupObjectIds": [
        "5d24****-****-****-****-****afa27aed"
    ],
    "clientAppId": null,
    "managed": true,
    "serverAppId": null,
    "serverAppSecret": null,
    "tenantId": "72f9****-****-****-****-****d011db47"
    }
"AADProfile": {
    "adminGroupObjectIds": [
        "5d24****-****-****-****-****afa27aed"
    ],
    "clientAppId": null,
    "managed": true,
    "serverAppId": null,
    "serverAppSecret": null,
    "tenantId": "72f9****-****-****-****-****d011db47"
    }

Migrate legacy cluster to integration
If your cluster uses legacy Microsoft Entra integration, you can upgrade to AKS-managed Microsoft Entra integration through theaz aks updatecommand.
az aks update
Warning
Free tier clusters may experience API server downtime during the upgrade. We recommend upgrading during your nonbusiness hours.
After the upgrade, the kubeconfig content changes. You need to runaz aks get-credentials --resource-group <AKS resource group name> --name <AKS cluster name>to merge the new credentials into the kubeconfig file.
az aks get-credentials --resource-group <AKS resource group name> --name <AKS cluster name>
az aks update --resource-group myResourceGroup --name myManagedCluster --enable-aad --aad-admin-group-object-ids <id> [--aad-tenant-id <id>]
az aks update --resource-group myResourceGroup --name myManagedCluster --enable-aad --aad-admin-group-object-ids <id> [--aad-tenant-id <id>]
A successful migration of an AKS-managed Microsoft Entra ID cluster has the following section in the response body:
"AADProfile": {
    "adminGroupObjectIds": [
        "5d24****-****-****-****-****afa27aed"
    ],
    "clientAppId": null,
    "managed": true,
    "serverAppId": null,
    "serverAppSecret": null,
    "tenantId": "72f9****-****-****-****-****d011db47"
    }
"AADProfile": {
    "adminGroupObjectIds": [
        "5d24****-****-****-****-****afa27aed"
    ],
    "clientAppId": null,
    "managed": true,
    "serverAppId": null,
    "serverAppSecret": null,
    "tenantId": "72f9****-****-****-****-****d011db47"
    }

Access your enabled cluster
Get the user credentials to access your cluster using theaz aks get-credentialscommand.az aks get-credentials --resource-group myResourceGroup --name myManagedCluster
Get the user credentials to access your cluster using theaz aks get-credentialscommand.
az aks get-credentials
az aks get-credentials --resource-group myResourceGroup --name myManagedCluster
az aks get-credentials --resource-group myResourceGroup --name myManagedCluster
Follow your instructions to sign in.
Follow your instructions to sign in.
Setkubeloginto use the Azure CLI.kubelogin convert-kubeconfig -l azurecli
Setkubeloginto use the Azure CLI.
kubelogin
kubelogin convert-kubeconfig -l azurecli
kubelogin convert-kubeconfig -l azurecli
View the nodes in the cluster with thekubectl get nodescommand.kubectl get nodes
View the nodes in the cluster with thekubectl get nodescommand.
kubectl get nodes
kubectl get nodes
kubectl get nodes
Non-interactive sign-in with kubelogin
There are some non-interactive scenarios that don't supportkubectl. In these cases, usekubeloginto connect to the cluster with a non-interactive service principal credential to perform continuous integration pipelines.
kubectl
kubelogin
Note
Microsoft Entra integrated clusters using a Kubernetes version newer than version 1.24 automatically use thekubeloginformat. Starting with Kubernetes version 1.24, the default format of the clusterUser credential for Microsoft Entra ID clusters isexec, which requireskubeloginbinary in the execution PATH. There is no behavior change for non-Microsoft Entra clusters, or Microsoft Entra ID clusters running a version older than 1.24.
Existing downloadedkubeconfigcontinues to work. An optional query parameterformatis included when getting clusterUser credential to overwrite the default behavior change. You can explicitly specify format toazureif you need to maintain the oldkubeconfigformat .
kubelogin
exec
kubelogin
kubeconfig
kubeconfig
When getting the clusterUser credential, you can use theformatquery parameter to overwrite the default behavior. You can set the value toazureto use the original kubeconfig format:az aks get-credentials --format azure
When getting the clusterUser credential, you can use theformatquery parameter to overwrite the default behavior. You can set the value toazureto use the original kubeconfig format:
format
azure
az aks get-credentials --format azure
az aks get-credentials --format azure
If your Microsoft Entra integrated cluster uses Kubernetes version 1.24 or lower, you need to manually convert the kubeconfig format.export KUBECONFIG=/path/to/kubeconfig
kubelogin convert-kubeconfig
If your Microsoft Entra integrated cluster uses Kubernetes version 1.24 or lower, you need to manually convert the kubeconfig format.
export KUBECONFIG=/path/to/kubeconfig
kubelogin convert-kubeconfig
export KUBECONFIG=/path/to/kubeconfig
kubelogin convert-kubeconfig
Note
If you receive the messageerror: The Azure auth plugin has been removed., you need to run the commandkubelogin convert-kubeconfigto convert the kubeconfig format manually.
kubelogin convert-kubeconfig
For more information, you can refer toAzure Kubelogin Known Issues.

Troubleshoot access issues
Important
The step described in this section suggests an alternative authentication method compared to the normal Microsoft Entra group authentication. Use this option only in an emergency.
If you lack administrative access to a valid Microsoft Entra group, you can follow this workaround. Sign in with an account that is a member of theAzure Kubernetes Service Cluster Adminrole and grant your group or tenant admin credentials to access your cluster.
Next steps
Learn aboutMicrosoft Entra integration with Kubernetes RBAC.
Learn more aboutAKS and Kubernetes identity concepts.
Learn how touse kubeloginfor all supported Microsoft Entra authentication methods in AKS.
UseAzure Resource Manager (ARM) templatesto create AKS-managed Microsoft Entra ID enabled clusters.
Azure Kubernetes Service

Additional resources