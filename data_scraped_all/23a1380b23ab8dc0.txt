Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Event Grid and reliability
Article
2023-11-14
3 contributors
In this article
Azure Event Gridlets you easily build applications with event-based architectures. This solution has build-in support for events coming from Azure services, like storage blobs and resource groups. Event Grid also has support for your own events, using custom topics.
For more information about using Event Grid, referenceCreate and route custom events with Azure Event Grid.
To understand how using Event Grid creates a more reliable workload, referenceServer-side geo disaster recovery in Azure Event Grid.
The following sections are specific to Azure Event Grid and reliability:
Design considerations
Configuration checklist
Recommended configuration options
Source artifacts
Design considerations
Azure Event Grid provides an uptime SLA. For more information, referenceSLA for Event Grid.
Checklist
Have you configured Azure Event Grid with reliability in mind?
Deploy an Event Grid instance per region, in case of a multi-region Azure solution.
Monitor Event Grid for failed event delivery.
Use batched events.
Event batches can't exceed1MBin size.
1MB
Configure and optimize batch-size selection during load testing.
Ensure Event Grid messages are accepted withHTTP200-204responses only if delivering to an endpoint that holds custom code.
HTTP
200-204
Monitor Event Grid for failed event publishing.
Configuration recommendations
Consider the following recommendations to optimize reliability when configuring Azure Event Grid:
Delivery Failed
200-204 HTTP
json
1MB
64KB
Unmatched
Source artifacts
To determine theInput Schematype for all available Event Grid topics, use the following query:
Resources 
| where type == 'microsoft.eventgrid/topics'
| project name, resourceGroup, location, subscriptionId, properties['inputSchema']
Resources 
| where type == 'microsoft.eventgrid/topics'
| project name, resourceGroup, location, subscriptionId, properties['inputSchema']
To retrieve theResource IDof existing private endpoints for Event Grid domains, use the following query:
Resources 
| where type == 'microsoft.eventgrid/domains' and notnull(properties['privateEndpointConnections']) 
| mvexpand properties['privateEndpointConnections'] 
| project-rename privateEndpointConnections = properties_privateEndpointConnections 
| project name, resourceGroup, location, subscriptionId, privateEndpointConnections['properties']['privateEndpoint']['id']
Resources 
| where type == 'microsoft.eventgrid/domains' and notnull(properties['privateEndpointConnections']) 
| mvexpand properties['privateEndpointConnections'] 
| project-rename privateEndpointConnections = properties_privateEndpointConnections 
| project name, resourceGroup, location, subscriptionId, privateEndpointConnections['properties']['privateEndpoint']['id']
To identifyPublic Network Accessstatus for all available Event Grid domains, use the following query:
Resources 
| where type == 'microsoft.eventgrid/domains' 
| project name, resourceGroup, location, subscriptionId, properties['publicNetworkAccess']
Resources 
| where type == 'microsoft.eventgrid/domains' 
| project name, resourceGroup, location, subscriptionId, properties['publicNetworkAccess']
To identifyFirewall Rulesfor all public Event Grid domains, use the following query:
Resources 
| where type == 'microsoft.eventgrid/domains' and properties['publicNetworkAccess'] == 'Enabled'
| project name, resourceGroup, location, subscriptionId, properties['inboundIpRules']
Resources 
| where type == 'microsoft.eventgrid/domains' and properties['publicNetworkAccess'] == 'Enabled'
| project name, resourceGroup, location, subscriptionId, properties['inboundIpRules']
To identifyFirewall Rulesfor all public Event Grid topics, use the following query:
Resources 
| where type == 'microsoft.eventgrid/topics' and properties['publicNetworkAccess'] == 'Enabled'
| project name, resourceGroup, location, subscriptionId, properties['inboundIpRules']
Resources 
| where type == 'microsoft.eventgrid/topics' and properties['publicNetworkAccess'] == 'Enabled'
| project name, resourceGroup, location, subscriptionId, properties['inboundIpRules']
To retrieve theResource IDof existing private endpoints for Event Grid topics, use the following query:
Resources 
| where type == 'microsoft.eventgrid/topics' and notnull(properties['privateEndpointConnections']) 
| mvexpand properties['privateEndpointConnections'] 
| project-rename privateEndpointConnections = properties_privateEndpointConnections 
| project name, resourceGroup, location, subscriptionId, privateEndpointConnections['properties']['privateEndpoint']['id']
Resources 
| where type == 'microsoft.eventgrid/topics' and notnull(properties['privateEndpointConnections']) 
| mvexpand properties['privateEndpointConnections'] 
| project-rename privateEndpointConnections = properties_privateEndpointConnections 
| project name, resourceGroup, location, subscriptionId, privateEndpointConnections['properties']['privateEndpoint']['id']
To determine theInput Schematype for all available Event Grid domains, use the following schema:
Resources 
| where type == 'microsoft.eventgrid/domains'
| project name, resourceGroup, location, subscriptionId, properties['inputSchema']
Resources 
| where type == 'microsoft.eventgrid/domains'
| project name, resourceGroup, location, subscriptionId, properties['inputSchema']
To identifyPublic Network Accessstatus for all available Event Grid topics, use the following query:
Resources 
| where type == 'microsoft.eventgrid/topics' 
| project name, resourceGroup, location, subscriptionId, properties['publicNetworkAccess']
Resources 
| where type == 'microsoft.eventgrid/topics' 
| project name, resourceGroup, location, subscriptionId, properties['publicNetworkAccess']
Next step
Event Grid and operational excellence
Feedback
Was this page helpful?
Additional resources