Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Design principles of a mission-critical workload
Article
2023-02-01
5 contributors
In this article
The mission-critical design methodology is underpinned by five key design principles which serve as a compass for subsequent design decisions across the critical design areas. We highly recommend that you familiarize yourselves with these principles to better understand their impact and the trade-offs associated with non-adherence.
Important
This article is part of theAzure Well-Architected mission-critical workloadseries. If you aren't familiar with this series, we recommend you start withwhat is a mission-critical workload?

These mission-critical design principles resonate and extend the quality pillars of the Azure Well-Architected FrameworkâReliability,Security,Cost Optimization,Operational Excellence, andPerformance Efficiency.
Reliability
Maximum reliability- Fundamental pursuit of the most reliable solution, ensuring trade-offs are properly understood.
Performance Efficiency
Sustainable performance and scalability- Design for scalability across the end-to-end solution without performance bottlenecks.
Operational Excellence
Operations by design- Engineered to last with robust and assertive operational management.
Security
Always secure- Design for end-to-end security to maintain application stability and ensure availability.
Cost Optimization
There are obvious cost tradeoffs associated with introducing greater reliability, which should be carefully considered in the context of workload requirements.
Maximizing reliability can impact the overall financial cost of the solution. For example, the duplication of resources and the distribution of resources across regions to achieve high availability has clear cost implications. To avoid excess costs, don't over-engineer or over-provision beyond the relevant business requirements.
Also, there is added cost associated with engineering investment in fundamental reliability concepts, such as embracing infrastructure as code, deployment automation, and chaos engineering. This comes at a cost in terms of both time and effort, which could be invested elsewhere to deliver new application functionality and features.
Cloud native design
Azure-native managed services- Azure-native managed services are prioritized due to their lower administrative and operational overhead as well as tight integration with consistent configuration and instrumentation across the application stack.
Azure-native managed services- Azure-native managed services are prioritized due to their lower administrative and operational overhead as well as tight integration with consistent configuration and instrumentation across the application stack.
Roadmap alignment- Incorporate upcoming new and improved Azure service capabilities as they become Generally Available (GA) to stay close to the leading edge of Azure.
Roadmap alignment- Incorporate upcoming new and improved Azure service capabilities as they become Generally Available (GA) to stay close to the leading edge of Azure.
Embrace preview capabilities and mitigate known gaps- While Generally Available (GA) services are prioritized for supportability, Azure service previews are actively explored for rapid incorporation, providing technical and actionable feedback to Azure product groups to address gaps.
Embrace preview capabilities and mitigate known gaps- While Generally Available (GA) services are prioritized for supportability, Azure service previews are actively explored for rapid incorporation, providing technical and actionable feedback to Azure product groups to address gaps.
Azure landing zone alignment- Deployable within anAzure landing zoneand aligned to the Azure landing zone design methodology, but also fully functional and deployable in a bare environment outside of a landing zone.
Azure landing zone alignment- Deployable within anAzure landing zoneand aligned to the Azure landing zone design methodology, but also fully functional and deployable in a bare environment outside of a landing zone.
Next step
Review cross-cutting concerns associated with mission-critical workloads.
Cross-cutting concerns
Feedback
Was this page helpful?
Additional resources