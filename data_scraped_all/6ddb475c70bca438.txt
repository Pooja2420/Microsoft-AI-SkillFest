Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Connection strings in Application Insights
Article
2025-04-14
4 contributors
In this article
Connection strings specify to which Application Insights resource your instrumented application should send telemetry data. A connection string is composed of multiple settings, each represented as a key-value pair and separated by semicolons. This consolidated configuration method simplifies the setup process by eliminating the need for multiple proxy settings.
Important
The connection string contains an ikey and an ApplicationId.
The ikey is a unique identifier used by the ingestion service to associate telemetry to a specific Application Insights resource.Ikey unique identifiers aren't security tokens or security keys, and aren't considered secrets.Connection strings are enhanced by adding the ApplicationId value. This update is a new feature that supports automatic instrumentation for scenarios utilizing the Open Telemetry SDK.
If you want to protect your Application Insights resource from misuse, the ingestion endpoint provides authenticated telemetry ingestion options based onMicrosoft Entra ID.
Note
On March 31, 2025, support for instrumentation key ingestion will end. Instrumentation key ingestion will continue to work, but we'll no longer provide updates or support for the feature.Transition to connection stringsto take advantage ofnew capabilities.
Connection string capabilities
Reliability: Connection strings make telemetry ingestion more reliable by removing dependencies on global ingestion endpoints.
Security: Connection strings allow authenticated telemetry ingestion by usingMicrosoft Entra authentication for Application Insights.
Customized endpoints (sovereign or hybrid cloud environments): Endpoint settings allow sending data to a specific Azure Government region. (See examples.)
Privacy (regional endpoints): Connection strings ease privacy concerns by sending data to regional endpoints, ensuring data doesn't leave a geographic region.
Find your connection string
Your connection string appears in theOverviewsection of your Application Insights resource.

Schema
Schema elements are explained in the following sections.
Max length
The connection has a maximum supported length of 4,096 characters.
Key-value pairs
A connection string consists of a list of settings represented as key-value pairs separated by a semicolon:key1=value1;key2=value2;key3=value3
key1=value1;key2=value2;key3=value3
Tip
Configurable key-value pairs are covered in this document. Some key-value pairs are not configurable and are set automatically, such asApplicationId. These can be safely ignored if they're observed in your environment.
ApplicationId
Syntax
InstrumentationKey(for example, 00000000-0000-0000-0000-000000000000).InstrumentationKeyis arequiredfield.
InstrumentationKey(for example, 00000000-0000-0000-0000-000000000000).InstrumentationKeyis arequiredfield.
InstrumentationKey
InstrumentationKey
Authorization(for example, ikey). This setting is optional because today we only support ikey authorization.
Authorization(for example, ikey). This setting is optional because today we only support ikey authorization.
Authorization
EndpointSuffix(for example, applicationinsights.azure.cn). Setting the endpoint suffix tells the SDK which Azure cloud to connect to. The SDK assembles the rest of the endpoint for individual services.
EndpointSuffix(for example, applicationinsights.azure.cn). Setting the endpoint suffix tells the SDK which Azure cloud to connect to. The SDK assembles the rest of the endpoint for individual services.
EndpointSuffix
Explicit endpoints. Any service can be explicitly overridden in the connection string:IngestionEndpoint(for example,https://dc.applicationinsights.azure.com)LiveEndpoint(for example,https://live.applicationinsights.azure.com)ProfilerEndpoint(for example,https://profiler.monitor.azure.com)SnapshotEndpoint(for example,https://snapshot.monitor.azure.com)
Explicit endpoints. Any service can be explicitly overridden in the connection string:
IngestionEndpoint(for example,https://dc.applicationinsights.azure.com)
IngestionEndpoint
https://dc.applicationinsights.azure.com
LiveEndpoint(for example,https://live.applicationinsights.azure.com)
LiveEndpoint
https://live.applicationinsights.azure.com
ProfilerEndpoint(for example,https://profiler.monitor.azure.com)
ProfilerEndpoint
https://profiler.monitor.azure.com
SnapshotEndpoint(for example,https://snapshot.monitor.azure.com)
SnapshotEndpoint
https://snapshot.monitor.azure.com
Endpoint schema
<prefix>.<suffix>
<prefix>.<suffix>
Prefix:Defines a service.
Suffix:Defines the common domain name.
applicationinsights.azure.cn
applicationinsights.us
For more information, seeRegions that require endpoint modification.
Telemetry Ingestion:dc
dc
Live Metrics:live
live
Profiler for .NET:profiler
profiler
Snapshot:snapshot
snapshot
Connection string examples
Here are some examples of connection strings.
Connection string with an endpoint suffix
InstrumentationKey=00000000-0000-0000-0000-000000000000;EndpointSuffix=ai.contoso.com;
InstrumentationKey=00000000-0000-0000-0000-000000000000;EndpointSuffix=ai.contoso.com;
In this example, the connection string specifies the endpoint suffix and the SDK constructs service endpoints:
Authorization scheme defaults to "ikey"
Instrumentation key: 00000000-0000-0000-0000-000000000000
The regional service Uniform Resource Identifiers (URIs) are based on the provided endpoint suffix:Ingestion:https://dc.ai.contoso.comLive Metrics:https://live.ai.contoso.comProfiler for .NET:https://profiler.ai.contoso.comDebugger:https://snapshot.ai.contoso.com
Ingestion:https://dc.ai.contoso.com
https://dc.ai.contoso.com
Live Metrics:https://live.ai.contoso.com
https://live.ai.contoso.com
Profiler for .NET:https://profiler.ai.contoso.com
https://profiler.ai.contoso.com
Debugger:https://snapshot.ai.contoso.com
https://snapshot.ai.contoso.com
Connection string with explicit endpoint overrides
InstrumentationKey=00000000-0000-0000-0000-000000000000;IngestionEndpoint=https://custom.com:111/;LiveEndpoint=https://custom.com:222/;ProfilerEndpoint=https://custom.com:333/;SnapshotEndpoint=https://custom.com:444/;
InstrumentationKey=00000000-0000-0000-0000-000000000000;IngestionEndpoint=https://custom.com:111/;LiveEndpoint=https://custom.com:222/;ProfilerEndpoint=https://custom.com:333/;SnapshotEndpoint=https://custom.com:444/;
In this example, the connection string specifies explicit overrides for every service. The SDK uses the exact endpoints provided without modification:
Authorization scheme defaults to "ikey"
Instrumentation key: 00000000-0000-0000-0000-000000000000
The regional service URIs are based on the explicit override values:Ingestion:https://custom.com:111/Live Metrics:https://custom.com:222/Profiler for .NET:https://custom.com:333/Debugger:https://custom.com:444/
Ingestion:https://custom.com:111/
https://custom.com:111/
Live Metrics:https://custom.com:222/
https://custom.com:222/
Profiler for .NET:https://custom.com:333/
https://custom.com:333/
Debugger:https://custom.com:444/
https://custom.com:444/
Connection string with an explicit region
InstrumentationKey=00000000-0000-0000-0000-000000000000;IngestionEndpoint=https://southcentralus.in.applicationinsights.azure.com/
InstrumentationKey=00000000-0000-0000-0000-000000000000;IngestionEndpoint=https://southcentralus.in.applicationinsights.azure.com/
In this example, the connection string specifies the South Central US region:
Authorization scheme defaults to "ikey"
Instrumentation key: 00000000-0000-0000-0000-000000000000
The regional service URIs are based on the explicit override values:Ingestion:https://southcentralus.in.applicationinsights.azure.com/
Ingestion:https://southcentralus.in.applicationinsights.azure.com/
https://southcentralus.in.applicationinsights.azure.com/
To list available regions, run the following command in theAzure CLI:
az account list-locations -o table
az account list-locations -o table
Set a connection string
All our OpenTelemetry offerings and the following SDK versions onwards support connection strings:
.NET v2.12.0
JavaScript v2.3.0
NodeJS v1.5.0
Python v1.0.0
Java v3.1.1
You can set a connection string in code, by using an environment variable, or a configuration file.
Environment variable
Connection string:APPLICATIONINSIGHTS_CONNECTION_STRING
APPLICATIONINSIGHTS_CONNECTION_STRING
Code samples
Frequently asked questions
This section provides answers to common questions.
Do new Azure regions require the use of connection strings?
New Azure regionsrequirethe use of connection strings instead of instrumentation keys. Connection string identifies the resource that you want to associate with your telemetry data. It also allows you to modify the endpoints your resource uses as a destination for your telemetry. Copy the connection string and add it to your application's code or to an environment variable.
Should I use connection strings or instrumentation keys?
We recommend that you use connection strings instead of instrumentation keys.
Manually set theAPPLICATIONINSIGHTS_CONNECTION_STRINGin all scenarios where it's not automatically provided. These scenarios include, but are not limited to: local development and .NET Isolated Functions using ASP.NET Core integration. In these cases, the environment variable ensures the OpenTelemetry pipeline can send telemetry to Application Insights. For more information on configuring connection strings with an environment variable, seeConfiguring OpenTelemetry in Application Insights.
APPLICATIONINSIGHTS_CONNECTION_STRING
Next steps
Get started at runtime with:
Azure Virtual Machine (VM) and Azure Virtual Machine Scale Sets IIS-hosted apps
Internet Information Server (IIS) server
Web Apps feature of Azure App Service
Get started at development time with:
ASP.NET Core
ASP.NET
Java
Node.js
Python
Feedback
Was this page helpful?
Additional resources