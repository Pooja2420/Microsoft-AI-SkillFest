Note
Access to this page requires authorization. You can trysigning inorchanging directories.
Access to this page requires authorization. You can trychanging directories.
Create and manage agent pools
Article
2024-08-30
17 contributors
In this article
Azure DevOps Services | Azure DevOps Server 2022 - Azure DevOps Server 2019
An agent pool is a collection of agents. Instead of managing eachagentindividually, you organize agents into agent pools. When you configure an agent, it is registered with a single pool, and when you create a pipeline, you specify the pool in which the pipeline runs. When you run the pipeline, it runs on an agent from that pool that meets thedemandsof the pipeline.
Note
Managed DevOps Pools agent pools are managed in the Azure Portal. If you're using Managed DevOps Pools, seeCreate your first Managed DevOps Pool.
In Azure Pipelines, pools are scoped to the entire organization; so you can share the agent machines across projects.
In Azure DevOps Server, agent pools are scoped to the entire server; so you can share the agent machines across projects and collections.
Note
Agent pool jobs run a job on a single agent. If you need to run a job on all agents, such as a deployment group for classic release pipelines, seeProvision deployment groups.
If you are an organization administrator, you create and manage agent pools from the agent pools tab in admin settings.
Sign in to your organization (https://dev.azure.com/{yourorganization}).
Sign in to your organization (https://dev.azure.com/{yourorganization}).
https://dev.azure.com/{yourorganization}
ChooseAzure DevOps,Organization settings.
ChooseAzure DevOps,Organization settings.

ChooseAgent pools.
ChooseAgent pools.

Sign in to your project collection (http://your-server/DefaultCollection).
Sign in to your project collection (http://your-server/DefaultCollection).
http://your-server/DefaultCollection
ChooseAzure DevOps,Collection settings.
ChooseAzure DevOps,Collection settings.

ChooseAgent pools.
ChooseAgent pools.

If you are a project team member, you create and manage agent pools from the agent pools tab in project settings.
Navigate to your project and chooseProject settings,Agent pools.

Navigate to your project and chooseProject settings,Agent pools.

Default agent pools
The following agent pools are provided by default:
Defaultpool: Use it to registerself-hosted agentsthat you've set up.
Azure Pipelineshosted pool with various Windows, Linux, and macOS images. For a complete list of the available images and their installed software, seeMicrosoft-hosted agents.NoteThe Azure Pipelines hosted pool replaces the previous hosted pools that had names that mapped to the corresponding images. Any jobs you had in the previous hosted pools are automatically redirected to the correct image in the new Azure Pipelines hosted pool. In some circumstances, you may still see the old pool names, but behind the scenes the hosted jobs are run using the Azure Pipelines pool. For more information, see theSingle hosted poolrelease notes from theJuly 1 2019 - Sprint 154 release notes.
Azure Pipelineshosted pool with various Windows, Linux, and macOS images. For a complete list of the available images and their installed software, seeMicrosoft-hosted agents.
Note
The Azure Pipelines hosted pool replaces the previous hosted pools that had names that mapped to the corresponding images. Any jobs you had in the previous hosted pools are automatically redirected to the correct image in the new Azure Pipelines hosted pool. In some circumstances, you may still see the old pool names, but behind the scenes the hosted jobs are run using the Azure Pipelines pool. For more information, see theSingle hosted poolrelease notes from theJuly 1 2019 - Sprint 154 release notes.
By default, all contributors in a project are members of theUserrole on hosted pools. This allows every contributor in a project to author and run pipelines using Microsoft-hosted agents.
Designate a pool in your pipeline
YAML
Classic
To choose a Microsoft-hosted agent from the Azure Pipelines pool in your Azure DevOps Services YAML pipeline, specify the name of the image, using theYAML VM Image Labelfromthistable.
pool:
  vmImage: ubuntu-latest # This is the default if you don't specify a pool or vmImage.
pool:
  vmImage: ubuntu-latest # This is the default if you don't specify a pool or vmImage.
To use a private pool with no demands:
pool: MyPool
pool: MyPool
For more information, see theYAML schemaforpools.
To choose a pool and agent in the classic editor, navigate to the pipeline settings, select the desiredAgent pool, and then the desired image from theAgent Specificationdrop-down. The defaultAgent Specificationiswindows-2019. For more information about the software installed on the Microsoft-hosted images, see the corresponding entry in theClassic Editor Poolcolumn fromthistable.

Manage pools and queues
Azure Pipelines UI
Azure DevOps CLI
If you are an organization administrator, you create and manage agent pools from the agent pools tab in admin settings.
Sign in to your organization (https://dev.azure.com/{yourorganization}).
Sign in to your organization (https://dev.azure.com/{yourorganization}).
https://dev.azure.com/{yourorganization}
ChooseAzure DevOps,Organization settings.
ChooseAzure DevOps,Organization settings.

ChooseAgent pools.
ChooseAgent pools.

Sign in to your project collection (http://your-server/DefaultCollection).
Sign in to your project collection (http://your-server/DefaultCollection).
http://your-server/DefaultCollection
ChooseAzure DevOps,Collection settings.
ChooseAzure DevOps,Collection settings.

ChooseAgent pools.
ChooseAgent pools.

If you are a project team member, you create and manage agent pools from the agent pools tab in project settings.
Navigate to your project and chooseProject settings,Agent pools.

Navigate to your project and chooseProject settings,Agent pools.

To delete a pool, go to theAgent poolslist, chooseMore options,Delete.

List agent pools|Show agent pool details|List agent queues|Show agent queue details
Note
At this time you can view information about agent pools and queues, but not edit them, using the Azure CLI.
If this is your first time usingaz devops pipelinescommands, seeGet started with Azure DevOps CLI.
az devops pipelines
List agent pools
az pipelines pool list [--action {manage, none, use}]
                       [--detect {false, true}]
                       [--org]
                       [--pool-name]
                       [--pool-type {automation, deployment}]
az pipelines pool list [--action {manage, none, use}]
                       [--detect {false, true}]
                       [--org]
                       [--pool-name]
                       [--pool-type {automation, deployment}]
action: Filter the list with user action permitted. Accepted values:manage,none,use
detect: Automatically detect organization. Accepted values:false,true
orgororganization: Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example:https://dev.azure.com/MyOrganizationName/.
https://dev.azure.com/MyOrganizationName/
pool-name: Filter the list with matching pool name.
pool-type: Filter the list with type of pool. Accepted values:automation,deployment
The following example lists all pools in table format. This example uses the following default configuration:az devops configure --defaults organization=https://dev.azure.com/fabrikam-tailspin project=FabrikamFiber
az devops configure --defaults organization=https://dev.azure.com/fabrikam-tailspin project=FabrikamFiber
az pipelines pool list --output table

ID    Name                             Is Hosted    Pool Type
----  -------------------------------  -----------  -----------
1     Default                          False        automation
2     Hosted                           True         automation
3     Hosted VS2017                    True         automation
4     Hosted Windows 2019 with VS2019  True         automation
5     Hosted Windows Container         True         automation
6     Hosted macOS                     True         automation
7     Hosted macOS High Sierra         True         automation
8     Hosted Ubuntu 1604               True         automation
9     Azure Pipelines                  True         automation
10    MyAgentPool                      False        automation
az pipelines pool list --output table

ID    Name                             Is Hosted    Pool Type
----  -------------------------------  -----------  -----------
1     Default                          False        automation
2     Hosted                           True         automation
3     Hosted VS2017                    True         automation
4     Hosted Windows 2019 with VS2019  True         automation
5     Hosted Windows Container         True         automation
6     Hosted macOS                     True         automation
7     Hosted macOS High Sierra         True         automation
8     Hosted Ubuntu 1604               True         automation
9     Azure Pipelines                  True         automation
10    MyAgentPool                      False        automation
Show agent pool details
az pipelines pool show --id
                       [--action {manage, none, use}]
                       [--detect {false, true}]
                       [--org]
az pipelines pool show --id
                       [--action {manage, none, use}]
                       [--detect {false, true}]
                       [--org]
idorpool-id: (Required) ID of the pool to list the details.
action: Filter the list with user action permitted. Accepted values:manage,none,use
detect: Automatically detect organization. Accepted values:false,true
orgororganization: Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example:https://dev.azure.com/MyOrganizationName/.
https://dev.azure.com/MyOrganizationName/
The following example displays pool details for the Hosted Windows 2019 with VS2019 pool. This example uses the following default configuration:az devops configure --defaults organization=https://dev.azure.com/fabrikam-tailspin project=FabrikamFiber
az devops configure --defaults organization=https://dev.azure.com/fabrikam-tailspin project=FabrikamFiber
az pipelines pool show --id 4

{
  "agentCloudId": 1,
  "autoProvision": true,
  "autoSize": null,

  <Some properties omitted for space>

  "poolType": "automation",
  "properties": null,
  "scope": "941fcaeb-be37-4309-b7b0-5cf156e1236e",
  "size": 1,
  "targetSize": 1
}
az pipelines pool show --id 4

{
  "agentCloudId": 1,
  "autoProvision": true,
  "autoSize": null,

  <Some properties omitted for space>

  "poolType": "automation",
  "properties": null,
  "scope": "941fcaeb-be37-4309-b7b0-5cf156e1236e",
  "size": 1,
  "targetSize": 1
}
You can also use--output tablethat returns the same information as thelistcommand.
--output table
list
az pipelines pool show --id 4 --output table

ID    Name                             Is Hosted    Pool Type
----  -------------------------------  -----------  -----------
4     Hosted Windows 2019 with VS2019  True         automation
az pipelines pool show --id 4 --output table

ID    Name                             Is Hosted    Pool Type
----  -------------------------------  -----------  -----------
4     Hosted Windows 2019 with VS2019  True         automation
List agent queues
az pipelines queue list [--action {manage, none, use}]
                        [--detect {false, true}]
                        [--org]
                        [--project]
                        [--queue-name]
az pipelines queue list [--action {manage, none, use}]
                        [--detect {false, true}]
                        [--org]
                        [--project]
                        [--queue-name]
action: Filter the list with user action permitted. Accepted values:manage,none,use
detect: Automatically detect organization. Accepted values:false,true
orgororganization: Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example:https://dev.azure.com/MyOrganizationName/.
https://dev.azure.com/MyOrganizationName/
projectorp: Name or ID of the project. You can configure the default project usingaz devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.
az devops configure -d project=NAME_OR_ID
queue-name: Filter the list with matching queue name regex, e.g.,ubuntufor queue with name 'Hosted Ubuntu 1604'.
The following example lists all queues in table format. This example uses the following default configuration:az devops configure --defaults organization=https://dev.azure.com/fabrikam-tailspin project=FabrikamFiber
az devops configure --defaults organization=https://dev.azure.com/fabrikam-tailspin project=FabrikamFiber
az pipelines queue list --output table
This command group is in preview. It may be changed/removed in a future release.
ID    Name                             Pool IsHosted    Pool Type
----  -------------------------------  ---------------  -----------
11    Default                          False            automation
12    Hosted                           True             automation
13    Hosted VS2017                    True             automation
14    Hosted Windows 2019 with VS2019  True             automation
15    Hosted Windows Container         True             automation
16    Hosted macOS                     True             automation
17    Hosted macOS High Sierra         True             automation
18    Hosted Ubuntu 1604               True             automation
19    Azure Pipelines                  True             automation
az pipelines queue list --output table
This command group is in preview. It may be changed/removed in a future release.
ID    Name                             Pool IsHosted    Pool Type
----  -------------------------------  ---------------  -----------
11    Default                          False            automation
12    Hosted                           True             automation
13    Hosted VS2017                    True             automation
14    Hosted Windows 2019 with VS2019  True             automation
15    Hosted Windows Container         True             automation
16    Hosted macOS                     True             automation
17    Hosted macOS High Sierra         True             automation
18    Hosted Ubuntu 1604               True             automation
19    Azure Pipelines                  True             automation
Show agent queue details
az pipelines queue show --id
                        [--action {manage, none, use}]
                        [--detect {false, true}]
                        [--org]
                        [--project]
az pipelines queue show --id
                        [--action {manage, none, use}]
                        [--detect {false, true}]
                        [--org]
                        [--project]
idorqueue-id: ID of the agent queue to get information about.
action: Filter the list with user action permitted. Accepted values:manage,none,use
detect: Automatically detect organization. Accepted values:false,true
orgororganization: Azure DevOps organization URL. You can configure the default organization using az devops configure -d organization=ORG_URL. Required if not configured as default or picked up via git config. Example:https://dev.azure.com/MyOrganizationName/.
https://dev.azure.com/MyOrganizationName/
projectorp: Name or ID of the project. You can configure the default project usingaz devops configure -d project=NAME_OR_ID. Required if not configured as default or picked up via git config.
az devops configure -d project=NAME_OR_ID
The following example displays queue details for the Hosted Windows 2019 with VS2019 queue. This example uses the following default configuration:az devops configure --defaults organization=https://dev.azure.com/fabrikam-tailspin project=FabrikamFiber
az devops configure --defaults organization=https://dev.azure.com/fabrikam-tailspin project=FabrikamFiber
az pipelines queue show --id 14

{
  "id": 14,
  "name": "Hosted Windows 2019 with VS2019",
  "pool": {
    "id": 4,
    "isHosted": true,
    "isLegacy": true,
    "name": "Hosted Windows 2019 with VS2019",
    "poolType": "automation",
    "scope": "941fcaeb-be37-4309-b7b0-5cf156e1236e",
    "size": 1
  },
  "projectId": "16836457-4ce1-4e77-b97a-e7e0c6508e84"
}
az pipelines queue show --id 14

{
  "id": 14,
  "name": "Hosted Windows 2019 with VS2019",
  "pool": {
    "id": 4,
    "isHosted": true,
    "isLegacy": true,
    "name": "Hosted Windows 2019 with VS2019",
    "poolType": "automation",
    "scope": "941fcaeb-be37-4309-b7b0-5cf156e1236e",
    "size": 1
  },
  "projectId": "16836457-4ce1-4e77-b97a-e7e0c6508e84"
}
Azure DevOps CLI commands aren't supported for Azure DevOps Server.
Pools are used to run jobs. Learn aboutspecifying pools for jobs.
If you've got a lot of self-hosted agents intended for different teams or purposes, you might want to create additional pools as explained below.
Create agent pools
Here are some typical situations when you might want to create self-hosted agent pools:
You're a member of a project and you want to use a set of machines owned by your team for running build and deployment jobs. First, make sure you've got the permissions to create pools in your project by selectingSecurityon the agent pools page in yourProject settings. You must haveAdministratorrole to be able to create new pools. Next, selectAdd pooland select the option to create anewpool. Finallyinstalland configure agents to be part of that agent pool.
You're a member of a project and you want to use a set of machines owned by your team for running build and deployment jobs. First, make sure you've got the permissions to create pools in your project by selectingSecurityon the agent pools page in yourProject settings. You must haveAdministratorrole to be able to create new pools. Next, selectAdd pooland select the option to create anewpool. Finallyinstalland configure agents to be part of that agent pool.
You're a member of the infrastructure team and would like to set up a pool of agents for use in all projects. First, make sure you've got the permissions to create pools in your project by selectingSecurityon the agent pools page in yourOrganization settings. Next create aNew agent pooland select the option toAuto-provision this agent pool in all projectswhile creating the pool. This setting ensures all projects have access to this agent pool. Finallyinstalland configure agents to be part of that agent pool.
You're a member of the infrastructure team and would like to set up a pool of agents for use in all projects. First, make sure you've got the permissions to create pools in your project by selectingSecurityon the agent pools page in yourOrganization settings. Next create aNew agent pooland select the option toAuto-provision this agent pool in all projectswhile creating the pool. This setting ensures all projects have access to this agent pool. Finallyinstalland configure agents to be part of that agent pool.
You want to share a set of agent machines with multiple projects, but not all of them. First, navigate to the settings for one of the projects, add an agent pool, and select the option to create anewpool at the organization level. Next, go to each of the other projects, and create a pool in each of them while selecting the option toUse an existing agent pool from the organization. Finally,installand configure agents to be part of the shared agent pool.
You want to share a set of agent machines with multiple projects, but not all of them. First, navigate to the settings for one of the projects, add an agent pool, and select the option to create anewpool at the organization level. Next, go to each of the other projects, and create a pool in each of them while selecting the option toUse an existing agent pool from the organization. Finally,installand configure agents to be part of the shared agent pool.
You're a member of a project and you want to use a set of machines owned by your team for running build and deployment jobs. First, make sure you've got the permissions to create pools in your project by selectingSecurityon the agent pools page in yourProject settings. You must haveAdministratorrole to be able to create new pools. Next, selectAdd pooland select the option to create anewpool. Finallyinstalland configure agents to be part of that agent pool.
You're a member of a project and you want to use a set of machines owned by your team for running build and deployment jobs. First, make sure you've got the permissions to create pools in your project by selectingSecurityon the agent pools page in yourProject settings. You must haveAdministratorrole to be able to create new pools. Next, selectAdd pooland select the option to create anewpool. Finallyinstalland configure agents to be part of that agent pool.
You're a member of the infrastructure team and would like to set up a pool of agents for use in all projects. First, make sure you've got the permissions to create pools in your project by selectingSecurityon the agent pools page in yourProject collection settings. Next create aNew agent pooland select the option toAuto-provision this agent pool in all projectswhile creating the pool. This setting ensures all projects have access to this agent pool. Finallyinstalland configure agents to be part of that agent pool.
You're a member of the infrastructure team and would like to set up a pool of agents for use in all projects. First, make sure you've got the permissions to create pools in your project by selectingSecurityon the agent pools page in yourProject collection settings. Next create aNew agent pooland select the option toAuto-provision this agent pool in all projectswhile creating the pool. This setting ensures all projects have access to this agent pool. Finallyinstalland configure agents to be part of that agent pool.
You want to share a set of agent machines with multiple projects, but not all of them. First, navigate to the settings for one of the projects, add an agent pool, and select the option to create anewpool at the organization level. Next, go to each of the other projects, and create a pool in each of them while selecting the option toUse an existing agent pool from the organization. Finally,installand configure agents to be part of the shared agent pool.
You want to share a set of agent machines with multiple projects, but not all of them. First, navigate to the settings for one of the projects, add an agent pool, and select the option to create anewpool at the organization level. Next, go to each of the other projects, and create a pool in each of them while selecting the option toUse an existing agent pool from the organization. Finally,installand configure agents to be part of the shared agent pool.
Security of agent pools
Understanding how security works for agent pools helps you control sharing and use of agents.
Rolesare defined on each agent pool, andmembershipin these roles governs what operations you can perform on an agent pool.
Organization-level security settings
TheAll agent poolsnode in the Agent Pools tab is used to control the security ofallorganization agent pools. Role memberships for individual organization agent pools are automatically inherited from those of the 'All agent pools' node. By default, TFS and Azure DevOps Server administrators are also administrators of the 'All agent pools' node when using TFS or Azure DevOps Server.
Project-level security settings
Roles are also defined on each project agent pool, and memberships in these roles govern what operations you can perform on an agent pool at the project level.
Pipeline permissions control which YAML pipelines are authorized to use an agent pool. Pipeline permissions do not restrict access from Classic pipelines.
You can choose from the following options:
Open access for all pipelines to use the agent pool from the more options at top-right corner of thePipeline permissionssection in security tab of an agent pool.
Open access for all pipelines to use the agent pool from the more options at top-right corner of thePipeline permissionssection in security tab of an agent pool.
Lock down the agent pool and only allow selected YAML pipelines to use it. If any other YAML pipeline refers to the agent pool, an authorization request gets raised, which must be approved by an agent pool Administrator. This does not limit access from Classic pipelines.
Lock down the agent pool and only allow selected YAML pipelines to use it. If any other YAML pipeline refers to the agent pool, an authorization request gets raised, which must be approved by an agent pool Administrator. This does not limit access from Classic pipelines.

Pipeline permissions for theAzure Pipelinesagent pool cannot be configured, as the pool is accessible, by default, to all pipelines.
TheSecurityaction in the Agent pools tab is used to control the security ofallproject agent pools in a project. Role memberships for individual project agent pools are automatically inherited from what you define here. By default, the following groups are added to the Administrator role of 'All agent pools': Build Administrators, Release Administrators, Project Administrators.
FAQ
If I don't schedule a maintenance window, when will the agents run maintenance?
If no window is scheduled, then the agents in that pool will not run the maintenance job.
What is a maintenance job?
You can configure agent pools to periodically clean stale working directories and repositories. This should reduce the potential for the agents to run out of disk space. Maintenance jobs are configured at the organization level in agent pool settings.
To configure maintenance job settings:
Sign in to your organization (https://dev.azure.com/{yourorganization}).
Sign in to your organization (https://dev.azure.com/{yourorganization}).
https://dev.azure.com/{yourorganization}
ChooseAzure DevOps,Organization settings.
ChooseAzure DevOps,Organization settings.

ChooseAgent pools.
ChooseAgent pools.

Sign in to your project collection (http://your-server/DefaultCollection).
Sign in to your project collection (http://your-server/DefaultCollection).
http://your-server/DefaultCollection
ChooseAzure DevOps,Collection settings.
ChooseAzure DevOps,Collection settings.

ChooseAgent pools.
ChooseAgent pools.

Choose the desired pool and chooseSettingsto configure maintenance job settings for that agent pool.
Important
You must have theManage build queuespermission to configure maintenance job settings. If you don't see theSettingstab or theMaintenance Historytab, you don't have that permission, which is granted by default to theAdministratorrole. For more information, seeSecurity of agent pools.

Configure your desired settings and chooseSave.
SelectMaintenance Historyto see the maintenance job history for the current agent pool. You can download and review logs to see the cleaning steps and actions taken.

The maintenance is done per agent pool, not per machine; so if you have multiple agent pools on a single machine, you may still run into disk space issues.
The maintenance job of my self-hosted agent pool looks stuck. Why?
Typically, a maintenance job gets "stuck" when it's waiting to run on an agent that is no longer in the agent pool. This happens when, for example, the agent has been purposefully taken offline or when there are issues communicating with it.
Maintenance jobs that have been queued to run will wait seven days to run. Afterward, they'll be automatically set to failed state if not run. This time limit cannot be changed.
The seven-day limit is different from themaintenance job timeoutsetting. The latter controls the maximum number of minutes an agent can spend doing maintenance. The timer starts when the job starts, not when the job is queued on an agent.
I'm trying to create a project agent pool that uses an existing organization agent pool, but the controls are grayed out. Why?
On the 'Create a project agent pool' dialog box, you can't use an existing organization agent pool if it is already referenced by another project agent pool. Each organization agent pool can be referenced by only one project agent pool within a given project collection.
I can't select a Microsoft-hosted pool and I can't queue my build. How do I fix this?
Ask the owner of your Azure DevOps organization to grant you permission to use the pool. SeeSecurity of agent pools.
I need more hosted build resources. What can I do?
A: The Azure Pipelines pool provides all Azure DevOps organizations with cloud-hosted build agents and free build minutes each month. If you need more Microsoft-hosted build resources, or need to run more jobs in parallel, then you can either:
Host your own agents on infrastructure that you manage
Buy additional parallel jobs
Feedback
Was this page helpful?
Additional resources